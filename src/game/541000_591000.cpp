// clang-format off
// Disable unused labels warning
#pragma warning(disable: 4102)

#include "x86/insn.hpp"
#include "x86/thread_state.hpp"
#include "game/stubs.hpp"
#include "game/functions.hpp"

namespace game {

using namespace x86::insn;

void sub_540FE0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->eax, ts->eax);
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_541035;
    }
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->esi, x86::mem(ts->ebx + 0xC, 4));

loc_540FF8:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x8395B0);
	game::sub_599610(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_541025;
    }
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x838980);
	game::sub_530350(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_541025;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	add(&ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);

loc_541025:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x8, 4));
	inc(&ts->edi);
	add(&ts->esi, 0x5C);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.carry) {
        goto loc_540FF8;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);

loc_541035:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_541040(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->eax, ts->eax);
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_54108C;
    }
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->esi, x86::mem(ts->ebx + 0xC, 4));

loc_541058:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x8395B0);
	game::sub_599610(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_54107C;
    }
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x838980);
	game::sub_530350(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_54107C;
    }
	inc(mv, x86::mem(ts->esp + 0xC, 4));

loc_54107C:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x8, 4));
	inc(&ts->edi);
	add(&ts->esi, 0x5C);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.carry) {
        goto loc_541058;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);

loc_54108C:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_541090(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	xor_(&ts->eax, ts->eax);
	lea(mv, &ts->esi, x86::mem(ts->ecx + 0xC4, 4));
	mov(&ts->edi, ts->edi);

loc_5410A0:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_5410BE;
    }
	cmp(mv, &ts->eflags, ts->edx, x86::mem(ts->edi + 0x20, 4));
	if (ts->eflags.zero) {
        goto loc_5410BE;
    }
	inc(&ts->eax);
	add(&ts->esi, 0x4);
	cmp(&ts->eflags, ts->eax, 0x6);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5410A0;
    }
	game::sub_532C60(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_5410BE:
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x20, 4));
	mov(mv, x86::mem(ts->ecx + (ts->eax*4) + 0xC4, 4), ts->edx);
	game::sub_532C60(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_5410E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, x86::mem(ts->ecx + 0x8738, 4), ts->esi);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_512F10(ts, mv);
	push(mv, &ts->esp, ts->esi);
	add(&ts->ecx, 0xD24);
	mov(mv, x86::mem(ts->eax + 0x6, 1), 0x2);
	game::sub_532EA0(ts, mv);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x8635BC);
	game::sub_524240(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_541120(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(&ts->ecx, 0x81CBC0);
	game::sub_4131F0(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x8385B9, 1), ts->al);
	mov(mv, x86::mem(0x8385A0, 4), ts->eax);
	mov(mv, x86::mem(0x8385A4, 4), ts->eax);
	mov(mv, x86::mem(0x8385B8, 1), ts->al);
	mov(mv, x86::mem(0x838590, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xC00, 4));
	game::sub_533BE0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_541160(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	inc(mv, x86::mem(ts->esi + 0x872C, 4));
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, x86::mem(ts->esi + 0x8730, 4), ts->edi);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_512F10(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x6, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_541189;
    }
	mov(mv, x86::mem(ts->eax + 0x6, 1), 0x2);

loc_541189:
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xD24, 4));
	game::sub_532EA0(ts, mv);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x8635BC);
	game::sub_524240(ts, mv);
	mov(&ts->ecx, 0x81CBC0);
	game::sub_4131F0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8900AC, 4));
	xor_(&ts->ecx, ts->ecx);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	mov(mv, x86::mem(0x8385B9, 1), ts->cl);
	mov(mv, x86::mem(0x8385A0, 4), ts->ecx);
	mov(mv, x86::mem(0x8385A4, 4), ts->ecx);
	mov(mv, x86::mem(0x8385B8, 1), ts->cl);
	mov(mv, x86::mem(0x838590, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_541207;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->esi + 0x8744, 1), ts->cl);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x64, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x68, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x60, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(mv, x86::mem(ts->esi + 0x8750, 4), ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x8754, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x8758, 4));
	mov(mv, &ts->dx, x86::mem(ts->eax + 0x40C, 2));
	mov(mv, x86::mem(ts->esi + 0x8760, 2), ts->dx);

loc_541207:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_541210(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x8, 4));
	test(&ts->eflags, ts->ebx, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_5412C0;
    }
	push(mv, &ts->esp, ts->edi);
	movsx(mv, &ts->edi, x86::mem(ts->ebx + 0x26, 2));
	game::sub_528410(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x7AF8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_541248;
    }
	cmp(&ts->eflags, ts->eax, 0x8);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_541248;
    }
	imul(&ts->eax, ts->eax, 0x104);
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->esi) + 0x72D8, 4));
	goto loc_54124A;

loc_541248:
	xor_(&ts->eax, ts->eax);

loc_54124A:
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x100, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54125E;
    }
	movsx(mv, &ts->eax, x86::mem(ts->eax + 0x4, 2));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	goto loc_541266;

loc_54125E:
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);

loc_541266:
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79BFC0, 4));
	game::__ftol2(ts, mv);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x7134, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->edi), 4));
	add(&ts->edx, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x7134, 4), ts->edx);
	mov(mv, &ts->ecx, x86::mem(0x8900AC, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_5412A6;
    }
	movzx(mv, &ts->edx, x86::mem(ts->ebx + 0x24, 1));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x9A4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edx);
	game::sub_4AC170(ts, mv);

loc_5412A6:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x7AF8, 4));
	imul(&ts->eax, ts->eax, 0x104);
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->esi) + 0x72D8, 4));
	game::sub_541090(ts, mv);
	pop(mv, &ts->esp, ts->edi);

loc_5412C0:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_5412D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x79AFE0);
	mov(&ts->esi, ts->ecx);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_532D80(ts, mv);
	game::sub_5001E0(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x8704, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x8708, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x870C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x8710, 4), ts->eax);
	game::sub_5331C0(ts, mv);
	mov(&ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	goto sub_533310;
}

void sub_541320(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(&ts->ecx, 0x1);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_54141C;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x7AF8, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0xC, 4));
	test(&ts->eflags, ts->bl, ts->bl);
	if (ts->eflags.zero) {
        goto loc_541386;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_54135C;
    }
	cmp(&ts->eflags, ts->eax, 0x8);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_54135C;
    }
	imul(&ts->eax, ts->eax, 0x104);
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->esi) + 0x72D8, 4));
	goto loc_54135E;

loc_54135C:
	xor_(&ts->eax, ts->eax);

loc_54135E:
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x100, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_541374;
    }
	movsx(mv, &ts->eax, x86::mem(ts->eax + 0x2, 2));
	add(mv, x86::mem(ts->esi + 0x7134, 4), ts->eax);
	goto loc_5413C4;

loc_541374:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x7134, 4));
	xor_(&ts->eax, ts->eax);
	add(&ts->edx, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x7134, 4), ts->edx);
	goto loc_5413C4;

loc_541386:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_54139E;
    }
	cmp(&ts->eflags, ts->eax, 0x8);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_54139E;
    }
	imul(&ts->eax, ts->eax, 0x104);
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->esi) + 0x72D8, 4));
	goto loc_5413A0;

loc_54139E:
	xor_(&ts->eax, ts->eax);

loc_5413A0:
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x100, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5413B0;
    }
	movsx(mv, &ts->eax, x86::mem(ts->eax + 0x2, 2));
	goto loc_5413B2;

loc_5413B0:
	xor_(&ts->eax, ts->eax);

loc_5413B2:
	sub(mv, x86::mem(ts->esi + 0x7134, 4), ts->eax);
	if (!ts->eflags.sign) {
        goto loc_5413C4;
    }
	mov(mv, x86::mem(ts->esi + 0x7134, 4), 0x0);

loc_5413C4:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x7AF8, 4));
	mov(mv, &ts->edx, x86::mem(0x850078, 4));
	imul(&ts->eax, ts->eax, 0x104);
	cmp(&ts->eflags, ts->edx, ts->ecx);
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->esi) + 0x72D8, 4));
	if (!ts->eflags.zero) {
        goto loc_5413EB;
    }
	test(&ts->eflags, ts->bl, ts->bl);
	if (ts->eflags.zero) {
        goto loc_5413EB;
    }
	inc(mv, x86::mem(ts->eax + 0xDC, 4));

loc_5413EB:
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x5D20, 4));
	game::sub_529BD0(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xC00, 4));
	game::sub_533A90(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x887C, 4));
	game::sub_5110C0(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_533310(ts, mv);
	game::sub_4F92A0(ts, mv);
	pop(mv, &ts->esp, ts->ebx);

loc_54141C:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_541420(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0xD26, 1));
	test(&ts->eflags, ts->al, ts->al);
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0xD24, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0xF, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_541442;
    }
	mov(mv, &ts->al, x86::mem(ts->ebx + 0x3, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_541447;
    }

loc_541442:
	mov(mv, x86::mem(ts->esp + 0xF, 1), 0x0);

loc_541447:
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ebp);
	game::sub_4FFC90(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x7AFC, 4));
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_54147C;
    }
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x7B00, 4));
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_541470:
	cmp(mv, &ts->eflags, x86::mem(ts->edx, 4), ts->ebp);
	if (ts->eflags.zero) {
        goto loc_5414CE;
    }
	inc(&ts->eax);
	add(&ts->edx, 0x8);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_541470;
    }

loc_54147C:
	xor_(&ts->eax, ts->eax);

loc_54147E:
	mov(mv, x86::mem(ts->eax + 0x6, 1), 0x1);
	mov(mv, &ts->al, x86::mem(ts->esp + 0x13, 1));
	test(&ts->eflags, ts->al, ts->al);
	pop(mv, &ts->esp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_5414E0;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8730, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5414D7;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_532E50(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x7134, 4));
	add(&ts->edx, ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x7134, 4), ts->edx);
	game::sub_513FE0(ts, mv);
	movsx(mv, &ts->eax, x86::mem(ts->edi + 0x37, 1));
	imul(&ts->eax, ts->eax, 0x104);
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->esi) + 0x72D8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_513430(ts, mv);
	goto loc_5414E0;

loc_5414CE:
	lea(mv, &ts->eax, x86::mem(ts->esi + (ts->eax*8) + 0x7B00, 4));
	goto loc_54147E;

loc_5414D7:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x30, 4));
	add(mv, x86::mem(ts->esi + 0x7134, 4), ts->ecx);

loc_5414E0:
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4210, 4));
	game::sub_5337D0(ts, mv);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x5D20, 4));
	game::sub_529920(ts, mv);
	movsx(mv, &ts->edx, x86::mem(ts->edi + 0x37, 1));
	imul(&ts->edx, ts->edx, 0x104);
	lea(mv, &ts->ecx, x86::mem(ts->edx + (ts->esi) + 0x72D8, 4));
	push(mv, &ts->esp, ts->edi);
	game::sub_513390(ts, mv);
	game::sub_532C60(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x887C, 4));
	game::sub_5242C0(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xC00, 4));
	game::sub_533B40(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);
}

void sub_541540(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x797E74);
	mov(mv, x86::mem(ts->esi + 0x873D, 1), 0x1);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->esi + 0x8740, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x83AD90);
	game::sub_5348E0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_5415E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_500100(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x8);
	mov(&ts->ecx, ts->ebx);
	game::sub_540FE0(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x14, 4));
	mov(mv, x86::mem(ts->edi, 4), 0x0);
	mov(&ts->ecx, ts->ebx);
	mov(&ts->esi, ts->eax);
	mov(mv, x86::mem(ts->edx, 4), 0x0);
	game::sub_541040(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_54166F;
    }
	mov(mv, &ts->eax, x86::mem(0x863444, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_541668;
    }
	mov(mv, &ts->ecx, x86::mem(0x86344C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_541668;
    }
	neg(&ts->eax);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, ts->ecx);
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x38, 4), 0x7FC8D0D0);
	if (!ts->eflags.zero) {
        goto loc_541668;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esi + (ts->esi*4), 4));
	shl(&ts->ecx, 0x4);

loc_541647:
	mov(&ts->eax, 0x51EB851F);
	imul(&ts->eax, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x14, 4));
	sar(&ts->edx, 0x5);
	mov(&ts->eax, ts->edx);
	shr(&ts->eax, 0x1F);
	add(&ts->edx, ts->eax);
	mov(mv, x86::mem(ts->edi, 4), ts->edx);
	sub(&ts->esi, ts->edx);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->ecx, 4), ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_541668:
	mov(&ts->ecx, ts->esi);
	imul(&ts->ecx, ts->ecx, 0x5A);
	goto loc_541647;

loc_54166F:
	mov(mv, x86::mem(ts->edi, 4), ts->esi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);
}

void sub_541680(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x7148, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_500820(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5417ED;
    }
	mov(&ts->ecx, ts->edi);
	game::sub_500820(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_43C1C0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5416BB;
    }
	cmp(&ts->eflags, ts->eax, 0x40);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_5416BB;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + (ts->eax*4) + 0x71C8, 4));
	goto loc_5416BD;

loc_5416BB:
	xor_(&ts->edi, ts->edi);

loc_5416BD:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_541160(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xD24, 1), 0x1);
	movsx(mv, &ts->eax, x86::mem(ts->edi + 0x37, 1));
	imul(&ts->eax, ts->eax, 0x104);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->esi) + 0x72D8, 4));
	game::sub_513390(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_541420(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x7AF8, 4));
	imul(&ts->edx, ts->edx, 0x104);
	lea(mv, &ts->ebx, x86::mem(ts->edx + (ts->esi) + 0x72D8, 4));
	mov(&ts->ecx, ts->ebx);
	game::sub_500610(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5417DE;
    }
	push(mv, &ts->esp, 0x4E6E6B28);
	mov(&ts->ecx, ts->ebx);
	xor_(&ts->edi, ts->edi);
	game::sub_500670(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_541749;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x7AF8, 4));
	imul(&ts->eax, ts->eax, 0x104);
	push(mv, &ts->esp, ts->ebp);
	lea(mv, &ts->ebp, x86::mem(ts->eax + (ts->esi) + 0x72D8, 4));

loc_541737:
	push(mv, &ts->esp, 0x4E6E6B28);
	mov(&ts->ecx, ts->ebp);
	inc(&ts->edi);
	game::sub_500670(ts, mv);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_541737;
    }
	pop(mv, &ts->esp, ts->ebp);

loc_541749:
	push(mv, &ts->esp, 0x4E6E6B28);
	mov(&ts->ecx, ts->ebx);
	game::sub_500670(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_43C1C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x7AF8, 4));
	imul(&ts->ecx, ts->ecx, 0x104);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->ecx + (ts->esi), 4));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_541785;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x73D8, 4));
	movsx(mv, &ts->edi, x86::mem(ts->ecx + 0x1, 1));
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_541785;
    }
	mov(mv, &ts->edi, x86::mem(ts->ecx + (ts->eax*4) + 0x8, 4));
	goto loc_541787;

loc_541785:
	xor_(&ts->edi, ts->edi);

loc_541787:
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x73C0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_5417DE;
    }
	mov(mv, &ts->edx, x86::mem(0x842EBC, 4));
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_5417C1;
    }
	mov(&ts->ecx, 0x840ED8);

loc_5417A2:
	cmp(mv, &ts->eflags, x86::mem(ts->ecx, 1), 0x0);
	if (!ts->eflags.zero) {
        goto loc_5417B4;
    }
	inc(&ts->eax);
	add(&ts->ecx, 0x7F8);
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5417A2;
    }
	goto loc_5417C1;

loc_5417B4:
	imul(&ts->eax, ts->eax, 0x7F8);
	mov(mv, x86::mem(ts->eax + 0x840ED8, 1), 0x0);

loc_5417C1:
	movsx(mv, &ts->edx, x86::mem(ts->edi + 0xC, 2));
	add(mv, x86::mem(ts->esi + 0x7134, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x7AF8, 4));
	imul(&ts->eax, ts->eax, 0x104);
	mov(mv, x86::mem(ts->eax + (ts->esi) + 0x73C0, 4), ts->edi);

loc_5417DE:
	mov(&ts->ecx, ts->esi);
	game::sub_527D30(ts, mv);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	goto sub_4F92A0;

loc_5417ED:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_541930(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x8, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_54194E;
    }
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x85AD40);
	game::sub_541210(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x28, 4));
	mov(mv, x86::mem(0x837FD8, 4), ts->eax);

loc_54194E:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_541960(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x11C, 4), 0x3);
	if (!ts->eflags.zero) {
        goto loc_5419B1;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(0x838428, 4));
	mov(mv, x86::mem(ts->esi + 0x11C, 4), 0x5);
	movzx(mv, &ts->eax, x86::mem(ts->eax, 2));
	add(&ts->eax, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x85AD40);
	game::sub_512F10(ts, mv);
	mov(mv, x86::mem(ts->eax + 0x6, 1), 0x1);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x11C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->eax);
	game::sub_533310(ts, mv);
	game::sub_4F92A0(ts, mv);

loc_5419B1:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_5419C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(0x838428, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	mov(mv, x86::mem(ts->esi + 0x11C, 4), 0x5);
	movzx(mv, &ts->eax, x86::mem(ts->eax, 2));
	add(&ts->eax, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x85AD40);
	game::sub_512F10(ts, mv);
	mov(mv, x86::mem(ts->eax + 0x6, 1), 0x1);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x11C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->eax);
	game::sub_533310(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	goto sub_4F92A0;
}

void sub_541A10(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x156A8, 4), 0x1);
	mov(mv, x86::mem(ts->ecx + 0x16774, 4), 0x2);
	if (!ts->eflags.zero) {
        goto locret_541A44;
    }
	mov(mv, &ts->al, x86::mem(0x85BA65, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto locret_541A44;
    }
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, 0x85BA64);
	game::sub_5287A0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x85EF48, 4));
	mov(mv, x86::mem(ts->eax + 0x14, 4), 0x2);

locret_541A44:
	retn(mv, &ts->esp);
}

void sub_541A50(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->ecx, 0x2);
	setz(ts->eflags, &ts->al);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->eax, x86::mem(0x89E7A0, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_5D3E40(ts, mv);
	xor_(&ts->ebx, ts->ebx);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(&ts->edx, 0x1);
	if (ts->eflags.zero) {
        goto loc_541AA6;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x94, 4));
	test(&ts->eflags, ts->dl, ts->al);
	if (ts->eflags.zero) {
        goto loc_541A8B;
    }
	mov(&ts->eax, 0x3);
	goto loc_541AA9;

loc_541A8B:
	test(&ts->eflags, ts->al, 0x2);
	if (ts->eflags.zero) {
        goto loc_541A93;
    }
	mov(&ts->eax, ts->edx);
	goto loc_541AA9;

loc_541A93:
	test(&ts->eflags, ts->al, 0x4);
	if (ts->eflags.zero) {
        goto loc_541A9B;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_541AA9;

loc_541A9B:
	test(&ts->eflags, ts->al, 0x8);
	if (ts->eflags.zero) {
        goto loc_541AA6;
    }
	mov(&ts->eax, 0x2);
	goto loc_541AA9;

loc_541AA6:
	or_(&ts->eax, 0xFFFFFFFF);

loc_541AA9:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x156A8, 4), ts->edx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xAB10, 4));
	inc(&ts->ecx);
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	mov(mv, x86::mem(ts->esi + 0xAB10, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_541AD2;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->eax*2), 4));
	inc(mv, x86::mem(ts->esi + (ts->ecx*4) + 0xAB1C, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + (ts->ecx*4) + 0xAB1C, 4));

loc_541AD2:
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_541B08;
    }
	inc(mv, x86::mem(ts->esi + 0xAB4C, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x1565C, 4));
	inc(&ts->edi);
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	mov(mv, x86::mem(ts->esi + 0x1565C, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_541B02;
    }
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + (ts->eax*4) + 0x15668, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + (ts->eax*4) + 0x15668, 4));
	inc(&ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);

loc_541B02:
	inc(mv, x86::mem(ts->esi + 0x15698, 4));

loc_541B08:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x156A8, 4), ts->edx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_541B35;
    }
	mov(mv, x86::mem(0x863444, 4), ts->ebx);
	mov(mv, x86::mem(0x863448, 4), ts->ebx);
	mov(mv, x86::mem(0x86344C, 4), ts->ebx);
	mov(mv, x86::mem(0x863450, 4), ts->ebx);
	mov(&ts->ecx, 0x85AD40);
	pop(mv, &ts->esp, ts->ebx);
	goto sub_533310;

loc_541B35:
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_541B40(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x777978);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->esi, x86::mem(ts->esp + 0x4, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(0x89E7CC, 4));
	mov(mv, &ts->edx, x86::mem(0x89E7C8, 4));
	mov(mv, &ts->eax, x86::mem(0x89E7C4, 4));
	add(&ts->edx, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x89E7C0, 4));
	add(&ts->edx, ts->eax);
	add(&ts->edx, ts->ecx);
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->edx, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x0);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_541BF7;
    }
	mov(&ts->esi, 0x85036C);

loc_541BA0:
	mov(mv, x86::mem(ts->esi + 0xF4, 4), 0x0);
	game::sub_440EC0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_541BB8;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->esi);
	goto loc_541BBA;

loc_541BB8:
	xor_(&ts->eax, ts->eax);

loc_541BBA:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(0x89E7CC, 4));
	mov(mv, &ts->edx, x86::mem(0x89E7C8, 4));
	mov(mv, &ts->ecx, x86::mem(0x89E7C0, 4));
	add(&ts->edx, ts->eax);
	add(mv, &ts->edx, x86::mem(0x89E7C4, 4));
	inc(&ts->edi);
	add(&ts->edx, ts->ecx);
	add(&ts->esi, 0x224);
	cmp(&ts->eflags, ts->edi, ts->edx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_541BA0;
    }
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));

loc_541BF7:
	mov(mv, x86::mem(0x83846C, 4), 0x1);

loc_541C01:
	mov(mv, &ts->edx, x86::mem(0x89E7BC, 4));
	cmp(&ts->eflags, ts->edx, 0x15);
	mov(&ts->eax, ts->edx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_541C13;
    }
	mov(&ts->eax, 0x15);

loc_541C13:
	cmp(mv, &ts->eflags, x86::mem(0x83846C, 4), ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_541C6E;
    }
	push(mv, &ts->esp, 0x503360);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	game::sub_43E650(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(&ts->edi, 0x1);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_541C66;
    }
	nop();

loc_541C40:
	cmp(&ts->eflags, ts->edi, 0x1);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(0x83846C, 4));
	mov(mv, x86::mem(ts->ecx + (ts->edx*4) + 0xC8, 4), ts->edi);
	if (!ts->eflags.zero) {
        goto loc_541C5B;
    }
	inc(mv, x86::mem(ts->ecx + 0xF4, 4));

loc_541C5B:
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	inc(&ts->edi);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_541C40;
    }
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));

loc_541C66:
	inc(mv, x86::mem(0x83846C, 4));
	goto loc_541C01;

loc_541C6E:
	mov(mv, &ts->al, x86::mem(0x89E7D9, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_541C84;
    }
	mov(mv, &ts->eax, x86::mem(0x890104, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_541D39;
    }

loc_541C84:
	mov(mv, &ts->ecx, x86::mem(0x89E7CC, 4));
	mov(mv, &ts->eax, x86::mem(0x89E7C8, 4));
	add(&ts->eax, ts->ecx);
	add(mv, &ts->eax, x86::mem(0x89E7C4, 4));
	mov(mv, &ts->ecx, x86::mem(0x89E7C0, 4));
	add(&ts->ecx, ts->eax);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_541CBE;
    }
	mov(&ts->eax, 0x850460);
	goto loc_541CB0;

loc_541CB0:
	mov(mv, x86::mem(ts->eax, 4), 0x0);
	add(&ts->eax, 0x224);
	dec(&ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_541CB0;
    }

loc_541CBE:
	mov(mv, x86::mem(0x83846C, 4), 0x1);

loc_541CC8:
	cmp(&ts->eflags, ts->edx, 0x15);
	mov(&ts->eax, ts->edx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_541CD4;
    }
	mov(&ts->eax, 0x15);

loc_541CD4:
	cmp(mv, &ts->eflags, x86::mem(0x83846C, 4), ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_541D39;
    }
	push(mv, &ts->esp, 0x5033F0);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	game::sub_43E650(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(&ts->edi, 0x1);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_541D26;
    }

loc_541D00:
	cmp(&ts->eflags, ts->edi, 0x1);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(0x83846C, 4));
	mov(mv, x86::mem(ts->ecx + (ts->edx*4) + 0x1E8, 4), ts->edi);
	if (!ts->eflags.zero) {
        goto loc_541D1B;
    }
	inc(mv, x86::mem(ts->ecx + 0xF4, 4));

loc_541D1B:
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	inc(&ts->edi);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_541D00;
    }
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));

loc_541D26:
	mov(mv, &ts->eax, x86::mem(0x83846C, 4));
	mov(mv, &ts->edx, x86::mem(0x89E7BC, 4));
	inc(&ts->eax);
	mov(mv, x86::mem(0x83846C, 4), ts->eax);
	goto loc_541CC8;

loc_541D39:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	cmp(&ts->eflags, ts->esi, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_541D71;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_541D50:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->esi, 4), ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->esi);
	game::sub_440EF0(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xC, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->esi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_541D50;
    }

loc_541D71:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_777970:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x18, 4));
	goto sub_4835C0;

SEH_541B40:
	mov(&ts->eax, 0x7E2D70);
	goto ___CxxFrameHandler;
}

void sub_541D90(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::stdiobuf___stdiobuf_void_(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_541DA8;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_541DA8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_541DB0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x14, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->edx + 0x2C, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->ebx, x86::mem(ts->edi + 0x10, 4));
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x20, 4));
	if (ts->eflags.zero) {
        goto loc_541EAC;
    }
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_541E23;
    }
	test(mv, &ts->eflags, x86::mem(ts->esi + 0x4, 4), 0xFF000000);
	if (!ts->eflags.zero) {
        goto loc_541E23;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x3, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.sign) {
        goto loc_541E07;
    }
	mov(mv, &ts->eax, x86::mem(0x7F7C8C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x1C, 4));
	push(mv, &ts->esp, ts->ebp);
	or_(&ts->eax, 0xFF7FFFFF);
	and_(&ts->ecx, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->edx + 0x1C, 4), ts->ecx);
	game::sub_5354F0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	add(&ts->esp, 0xC);
	goto loc_541E37;

loc_541E07:
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x1C, 4));
	push(mv, &ts->esp, ts->ebp);
	or_(&ts->eax, 0x800000);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->edx + 0x1C, 4), ts->eax);
	game::sub_5354F0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	add(&ts->esp, 0xC);
	goto loc_541E37;

loc_541E23:
	mov(mv, &ts->ecx, x86::mem(0x7F7C8C, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x1C, 4));
	or_(&ts->ecx, 0xFF7FFFFF);
	and_(&ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->edx + 0x1C, 4), ts->eax);

loc_541E37:
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x2C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x80);
	if (ts->eflags.zero) {
        goto loc_541E85;
    }
	mov(mv, &ts->al, x86::mem(ts->edi + 0x1C, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_541E85;
    }
	movzx(&ts->edi, ts->al);

loc_541E53:
	movsx(mv, &ts->eax, x86::mem(ts->esi + 0x7, 1));
	cmp(&ts->eflags, ts->eax, 0x10);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_541E64;
    }
	movzx(mv, &ts->ecx, x86::mem(ts->esi + 0x3, 1));
	and_(mv, x86::mem(ts->esp + 0x18, 4), ts->ecx);

loc_541E64:
	lea(mv, &ts->edx, x86::mem(ts->ebp + (ts->eax*4), 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	game::sub_5354F0(ts, mv);
	add(&ts->esp, 0xC);
	add(&ts->esi, 0x38);
	dec(&ts->edi);
	if (!ts->eflags.zero) {
        goto loc_541E53;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	if (ts->eflags.zero) {
        goto loc_541E9C;
    }

loc_541E85:
	mov(mv, &ts->eax, x86::mem(0x7F7C8C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x1C, 4));
	or_(&ts->eax, 0xFEFFFFFF);
	and_(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->edx + 0x1C, 4), ts->ecx);
	goto loc_541F38;

loc_541E9C:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	or_(mv, x86::mem(ts->eax + 0x1C, 4), 0x1000000);
	goto loc_541F38;

loc_541EAC:
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_541EE3;
    }
	test(mv, &ts->eflags, x86::mem(ts->esi + 0x4, 4), 0xFF000000);
	if (!ts->eflags.zero) {
        goto loc_541EE3;
    }
	movzx(mv, &ts->eax, x86::mem(ts->esi + 0x2, 1));
	sub(&ts->eax, 0x0);
	if (ts->eflags.zero) {
        goto loc_541ED4;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_541ECA;
    }
	sub(&ts->eax, 0x2);
	if (!ts->eflags.zero) {
        goto loc_541EE3;
    }

loc_541ECA:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	game::sub_52BDC0(ts, mv);
	goto loc_541EDC;

loc_541ED4:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	game::sub_519D40(ts, mv);

loc_541EDC:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	add(&ts->esp, 0xC);

loc_541EE3:
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x2C, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_541F38;
    }
	mov(mv, &ts->al, x86::mem(ts->edi + 0x1C, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_541F38;
    }
	movzx(&ts->edi, ts->al);
	goto loc_541F00;

loc_541F00:
	movsx(mv, &ts->eax, x86::mem(ts->esi + 0x7, 1));
	lea(mv, &ts->ecx, x86::mem(ts->ebp + (ts->eax*4), 4));
	movzx(mv, &ts->eax, x86::mem(ts->esi + 0x2, 1));
	sub(&ts->eax, 0x0);
	if (ts->eflags.zero) {
        goto loc_541F23;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_541F19;
    }
	sub(&ts->eax, 0x2);
	if (!ts->eflags.zero) {
        goto loc_541F32;
    }

loc_541F19:
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	game::sub_52BDC0(ts, mv);
	goto loc_541F2B;

loc_541F23:
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	game::sub_519D40(ts, mv);

loc_541F2B:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	add(&ts->esp, 0xC);

loc_541F32:
	add(&ts->esi, 0x38);
	dec(&ts->edi);
	if (!ts->eflags.zero) {
        goto loc_541F00;
    }

loc_541F38:
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x1C, 4));
	test(&ts->eflags, ts->eax, 0x1C00000);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	if (ts->eflags.zero) {
        goto locret_541F4E;
    }
	or_(&ts->eax, 0x2000000);
	mov(mv, x86::mem(ts->edx + 0x1C, 4), ts->eax);

locret_541F4E:
	retn(mv, &ts->esp, 0x8);
}

void sub_541F60(x86::thread_state* ts, x86::memory_view* mv) {
	movzx(mv, &ts->eax, x86::mem(ts->esp + 0x8, 1));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	imul(&ts->eax, ts->eax, 0x38);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x20, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->edx), 4));
	movzx(mv, &ts->eax, x86::mem(ts->ecx + 0x2, 1));
	sub(&ts->eax, 0x0);
	if (ts->eflags.zero) {
        goto loc_541FA1;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_541F83;
    }
	sub(&ts->eax, 0x2);
	if (!ts->eflags.zero) {
        goto locret_541FBE;
    }

loc_541F83:
	movsx(mv, &ts->eax, x86::mem(ts->ecx + 0x7, 1));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->edx + 0x2C, 4));
	lea(mv, &ts->eax, x86::mem(ts->edx + (ts->eax*4), 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ecx);
	game::sub_52BDC0(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_541FA1:
	movsx(mv, &ts->eax, x86::mem(ts->ecx + 0x7, 1));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->edx + 0x2C, 4));
	lea(mv, &ts->eax, x86::mem(ts->edx + (ts->eax*4), 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ecx);
	game::sub_519D40(ts, mv);
	add(&ts->esp, 0xC);

locret_541FBE:
	retn(mv, &ts->esp);
}

void sub_541FC0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->ebx + 0x4114, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x8, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_542331;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_505400(ts, mv);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_542331;
    }
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_541FF0:
	mov(mv, &ts->al, x86::mem(ts->ebx + 0x5251, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_542019;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x10C, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x14, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x18, 4));
	push(mv, &ts->esp, ts->edx);
	call(ts, mv, x86::mem(ts->eax + 0x58, 4));

loc_542019:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFC);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_542208;
    }
	if (ts->eflags.zero) {
        goto loc_542133;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_542084;
    }
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFA);
	if (ts->eflags.zero) {
        goto loc_54205D;
    }
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFB);
	if (!ts->eflags.zero) {
        goto loc_54221B;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x10C, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1C, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x18, 4));
	push(mv, &ts->esp, ts->edx);
	call(ts, mv, x86::mem(ts->eax + 0x1C, 4));
	goto loc_5422C5;

loc_54205D:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	cmp(&ts->eflags, ts->eax, 0x59BED120);
	if (ts->eflags.zero) {
        goto loc_54207B;
    }
	cmp(&ts->eflags, ts->eax, 0x5D4CE32D);
	if (!ts->eflags.zero) {
        goto loc_5422C5;
    }
	mov(mv, x86::mem(ts->ebx + 0x1, 1), 0x0);
	goto loc_5422C5;

loc_54207B:
	mov(mv, x86::mem(ts->ebx + 0x1, 1), 0x1);
	goto loc_5422C5;

loc_542084:
	mov(mv, &ts->ebp, x86::mem(ts->ebx + 0xE4, 4));
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_5422C5;
    }

loc_542092:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x5C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x18, 4));
	if (ts->eflags.zero) {
        goto loc_5420C0;
    }
	nop();

loc_5420A0:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0xC, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_5420AE;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_5420A0;
    }
	goto loc_5420C0;

loc_5420AE:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5420C0;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_52C7C0(ts, mv);

loc_5420C0:
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x6C, 4));
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_542123;
    }
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x70, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x18, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ebx);
	mov(&ts->ecx, ts->edi);

loc_5420D5:
	cmp(mv, &ts->eflags, x86::mem(ts->ecx, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5420E3;
    }
	inc(&ts->eax);
	add(&ts->ecx, 0x10);
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (ts->eflags.carry) {
        goto loc_5420D5;
    }
	goto loc_542123;

loc_5420E3:
	shl(&ts->eax, 0x4);
	add(&ts->eax, ts->edi);
	mov(&ts->ebx, ts->eax);
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_542123;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x8, 4));
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_542123;
    }
	goto loc_542100;

loc_542100:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edx + (ts->edi*4), 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->eax);
	game::sub_5367E0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.carry) {
        goto loc_542100;
    }

loc_542123:
	mov(mv, &ts->ebp, x86::mem(ts->ebp + 0x4, 4));
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_542092;
    }
	goto loc_5422C5;

loc_542133:
	mov(mv, &ts->ebp, x86::mem(ts->ebx + 0xE4, 4));
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_5422C5;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));

loc_542144:
	cmp(&ts->eflags, ts->ebp, ts->eax);
	if (ts->eflags.zero) {
        goto loc_542154;
    }
	mov(mv, &ts->ebp, x86::mem(ts->ebp + 0x4, 4));
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_542144;
    }
	goto loc_5422C5;

loc_542154:
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_5422C5;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x5C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x18, 4));
	if (ts->eflags.zero) {
        goto loc_54218E;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_542170:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0xC, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54217E;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_542170;
    }
	goto loc_54218E;

loc_54217E:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54218E;
    }
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	game::sub_52C7C0(ts, mv);

loc_54218E:
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x6C, 4));
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_5422C5;
    }
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x70, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x18, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ebx);
	mov(&ts->ecx, ts->edi);

loc_5421A7:
	cmp(mv, &ts->eflags, x86::mem(ts->ecx, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5421B8;
    }
	inc(&ts->eax);
	add(&ts->ecx, 0x10);
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (ts->eflags.carry) {
        goto loc_5421A7;
    }
	goto loc_5422C5;

loc_5421B8:
	shl(&ts->eax, 0x4);
	add(&ts->eax, ts->edi);
	mov(&ts->ebx, ts->eax);
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5422C5;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x8, 4));
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_5422C5;
    }
	goto loc_5421E0;

loc_5421E0:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + (ts->edi*4), 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	game::sub_5367E0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.carry) {
        goto loc_5421E0;
    }
	goto loc_5422C5;

loc_542208:
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFD);
	if (ts->eflags.zero) {
        goto loc_542297;
    }
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFE);
	if (ts->eflags.zero) {
        goto loc_542251;
    }
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_542234;
    }

loc_54221B:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x18, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	game::sub_5367E0(ts, mv);
	goto loc_5422C5;

loc_542234:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x10C, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1C, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x18, 4));
	push(mv, &ts->esp, ts->edx);
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));
	goto loc_5422C5;

loc_542251:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edi, x86::mem(ts->eax + 0xE4, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_5422C5;
    }
	mov(&ts->ebx, ts->eax);

loc_542261:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x5C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x18, 4));
	if (ts->eflags.zero) {
        goto loc_54228E;
    }
	mov(&ts->edi, ts->edi);

loc_542270:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0xC, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54227E;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_542270;
    }
	goto loc_54228E;

loc_54227E:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54228E;
    }
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	game::sub_52C7C0(ts, mv);

loc_54228E:
	mov(mv, &ts->edi, x86::mem(ts->edi + 0x4, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_542261;
    }
	goto loc_5422C5;

loc_542297:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x5C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x1C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x18, 4));
	if (ts->eflags.zero) {
        goto loc_5422C5;
    }

loc_5422A7:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0xC, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_5422B5;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_5422A7;
    }
	goto loc_5422C5;

loc_5422B5:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5422C5;
    }
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	game::sub_52C7C0(ts, mv);

loc_5422C5:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->esi, x86::mem(ts->ebx + 0x411C, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_54232F;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ebx + 0x411C, 4), ts->eax);
	cmp(mv, &ts->eflags, ts->esi, x86::mem(ts->ebx + 0x4120, 4));
	if (!ts->eflags.zero) {
        goto loc_5422F5;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, x86::mem(ts->ebx + 0x4120, 4), ts->ecx);

loc_5422F5:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_542302;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);

loc_542302:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54230F;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ecx);

loc_54230F:
	mov(&ts->eax, 0xABADCAFE);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x4118, 4));
	dec(&ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->ebx + 0x4118, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_541FF0;
    }

loc_54232F:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);

loc_542331:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);
}

void sub_542340(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x79BFC4);
	game::sub_50D510(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_542383;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_50C550(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54237B;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_537750(ts, mv);

loc_54237B:
	mov(&ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	goto sub_51BA60;

loc_542383:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_542390(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	sub(&ts->esp, 0x414);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edx, ts->ecx);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x100);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x20, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x4, 4));
	lea(mv, &ts->edi, x86::mem(ts->edx + 0x4, 4));
	xor_(&ts->ebx, ts->ebx);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5423C3;
    }
	lea(mv, &ts->esi, x86::mem(ts->eax - 0x4, 4));
	goto loc_5423C5;

loc_5423C3:
	xor_(&ts->esi, ts->esi);

loc_5423C5:
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_5423CE;
    }
	lea(mv, &ts->eax, x86::mem(ts->edi - 0x4, 4));
	goto loc_5423D0;

loc_5423CE:
	xor_(&ts->eax, ts->eax);

loc_5423D0:
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_542405;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x1C, 2), 0x0);
	if (ts->eflags.zero) {
        goto loc_5423F4;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_5423F4;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5423F9;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_50C550(ts, mv);
	add(&ts->esp, 0x4);
	goto loc_5423F9;

loc_5423F4:
	mov(mv, x86::mem(ts->esp + (ts->ebx*4) + 0x20, 4), ts->esi);
	inc(&ts->ebx);

loc_5423F9:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_5423C3;
    }
	add(&ts->esi, 0xFFFFFFFC);
	goto loc_5423C5;

loc_542405:
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_542527;
    }

loc_542417:
	mov(mv, &ts->esi, x86::mem(ts->esp + (ts->eax*4) + 0x20, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x79BFC4);
	game::sub_50D510(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_542516;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_50C550(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x18, 4));
	mov(mv, &ts->ebx, x86::mem(ts->ecx + 0xC, 4));
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5424AF;
    }
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x10, 4));
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	add(&ts->eax, 0x10);
	cmp(&ts->eflags, ts->edi, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_5424AF;
    }

loc_542462:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DCC0(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54247D;
    }
	mov(mv, &ts->edi, x86::mem(ts->edi, 4));
	cmp(mv, &ts->eflags, ts->edi, x86::mem(ts->esp + 0x18, 4));
	if (!ts->eflags.zero) {
        goto loc_542462;
    }
	goto loc_5424AF;

loc_54247D:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x79BD78);
	game::sub_50D510(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537580(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(0x8384B0, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edx);
	game::sub_43F920(ts, mv);
	add(&ts->esp, 0x8);

loc_5424AF:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x14, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_5424BC;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax, 4));

loc_5424BC:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x18, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->esi);
	xor_(&ts->ecx, ts->ecx);
	push(mv, &ts->esp, 0x79B178);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->ecx);
	game::sub_50D510(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_5424F1;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x79B160);
	game::sub_50D510(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x18, 4));
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->edx + 0x40, 4), ts->ecx);

loc_5424F1:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->ecx);
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), 0x30210);
	if (!ts->eflags.zero) {
        goto loc_542512;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0xC, 4), 0x0);

loc_542512:
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x10, 4));

loc_542516:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_542417;
    }

loc_542527:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_542530(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x79C004);
	mov(&ts->esi, ts->ecx);
	game::sub_50D510(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_558EE0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_51BB30(ts, mv);
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_54259A;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_50B920(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x79BFF0);
	game::sub_50D510(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x50, 4), 0x0);
	game::sub_542340(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx, 4));
	push(mv, &ts->esp, 0x79BFDC);
	game::sub_50D510(ts, mv);
	add(&ts->esp, 0x4);

loc_54259A:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_5425A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->eax, 0x30203);
	if (ts->eflags.zero) {
        goto loc_5425B9;
    }
	cmp(&ts->eflags, ts->eax, 0x30210);
	if (ts->eflags.zero) {
        goto loc_5425B9;
    }
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_5425B9:
	game::sub_571090(ts, mv);
	mov(&ts->ecx, 0x8637B0);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_542530(ts, mv);
	mov(&ts->eax, 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_5425E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_5373F0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_5425F8;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_5425F8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_542600(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4953C0(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54262A;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_537B30(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_54262A:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);
}

void sub_542630(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_505450(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(&ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_542662;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_542662;
    }
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_542675;
    }

loc_542662:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5426AF;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->esi);
	game::sub_52C570(ts, mv);

loc_542675:
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_5426AF;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x18, 4), 0x100);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_5426AF;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x2C, 4));
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));
	add(&ts->ecx, 0x1C);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	game::sub_504500(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_5426A3;
    }
	or_(mv, x86::mem(ts->esi + 0x1C, 4), 0x400000);

loc_5426A3:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x2);
	mov(&ts->ecx, ts->esi);
	game::sub_5178D0(ts, mv);

loc_5426AF:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_5426C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_505450(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(&ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5426F2;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5426F2;
    }
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_542709;
    }

loc_5426F2:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_542707;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->esi);
	game::sub_52C570(ts, mv);
	goto loc_542709;

loc_542707:
	xor_(&ts->eax, ts->eax);

loc_542709:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_542720(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	xor_(&ts->ebp, ts->ebp);
	goto loc_542730;

loc_542730:
	lea(mv, &ts->eax, x86::mem(ts->ebp + 0x1, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x79C05C);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	game::sub_50B9C0(ts, mv);
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->ebp, 0x3);
	mov(&ts->esi, ts->eax);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_542750;
    }
	jmp(x86::mem(0x5428A0, 4));

loc_542757:
	test(mv, &ts->eflags, x86::mem(0x838524, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_542798;
    }
	mov(mv, &ts->ebp, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x79C050);
	game::sub_50B9C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebp);
	game::sub_495430(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	game::sub_495520(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79C048);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x28);
	goto def_542750;

loc_542798:
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edx);
	game::sub_4954E0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FEEC);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	goto loc_542884;

loc_5427B3:
	test(mv, &ts->eflags, x86::mem(0x838524, 1), 0x2);
	if (ts->eflags.zero) {
        goto loc_5427F4;
    }
	push(mv, &ts->esp, 0x79C02C);

loc_5427C1:
	mov(mv, &ts->ebp, x86::mem(ts->edi + 0x4, 4));
	game::sub_50B9C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebp);
	game::sub_495430(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ecx);
	game::sub_495520(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79C048);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x28);
	goto def_542750;

loc_5427F4:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FEEC);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4954E0(ts, mv);
	goto loc_542889;

loc_542811:
	test(mv, &ts->eflags, x86::mem(0x838524, 1), 0x4);
	if (ts->eflags.zero) {
        goto loc_542845;
    }
	mov(mv, &ts->ebp, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x79C014);
	game::sub_50B9C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebp);
	game::sub_495430(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79C048);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x20);
	goto def_542750;

loc_542845:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FEEC);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	goto def_542750;

loc_54285B:
	test(mv, &ts->eflags, x86::mem(0x838524, 1), 0x8);
	if (ts->eflags.zero) {
        goto loc_54286E;
    }
	push(mv, &ts->esp, 0x79023C);
	goto loc_5427C1;

loc_54286E:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	game::sub_4954E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FEEC);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ecx);

loc_542884:
	game::sub_537C00(ts, mv);

loc_542889:
	add(&ts->esp, 0x18);

def_542750:
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0xC, 4));
	cmp(&ts->eflags, ts->ebp, 0x4);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_542730;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_5428B0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	test(&ts->eflags, ts->eax, 0x10000);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_542930;
    }
	test(&ts->eflags, ts->ah, ts->ah);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	if (!ts->eflags.sign) {
        goto loc_5428D9;
    }
	push(mv, &ts->esp, 0x79C0A0);
	game::sub_51DBE0(ts, mv);
	mov(mv, x86::mem(ts->edi + 0x60, 4), 0x339F3277);
	goto loc_54291B;

loc_5428D9:
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.sign) {
        goto loc_5428F0;
    }
	push(mv, &ts->esp, 0x79C090);
	game::sub_51DBE0(ts, mv);
	mov(mv, x86::mem(ts->edi + 0x60, 4), 0xDD0F9CDA);
	goto loc_54291B;

loc_5428F0:
	test(&ts->eflags, ts->eax, 0x20000);
	if (ts->eflags.zero) {
        goto loc_54290A;
    }
	push(mv, &ts->esp, 0x79C080);
	game::sub_51DBE0(ts, mv);
	mov(mv, x86::mem(ts->edi + 0x60, 4), 0x40AAAC1D);
	goto loc_54291B;

loc_54290A:
	push(mv, &ts->esp, 0x79C070);
	game::sub_51DBE0(ts, mv);
	mov(mv, x86::mem(ts->edi + 0x60, 4), 0x1D39C830);

loc_54291B:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x3B949CD0);
	push(mv, &ts->esp, ts->eax);
	game::sub_4954E0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp, 0x8);

loc_542930:
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54294C;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F9D4);
	push(mv, &ts->esp, ts->eax);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);

loc_54294C:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_542963;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F9D4);
	push(mv, &ts->esp, ts->eax);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);

loc_542963:
	push(mv, &ts->esp, 0x78F9D4);
	push(mv, &ts->esp, 0x100);
	add(&ts->esi, 0x20);
	push(mv, &ts->esp, ts->esi);
	game::sub_50C960(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->edi + 0x60, 4), 0xA3E4657B);
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp, 0x8);
}

void sub_542990(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4C, 4));
	lea(mv, &ts->esi, x86::mem(ts->edi + 0x4C, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero) {
        goto loc_542AB6;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5429AB;
    }
	lea(mv, &ts->edx, x86::mem(ts->eax - 0x4, 4));
	goto loc_5429AD;

loc_5429AB:
	xor_(&ts->edx, ts->edx);

loc_5429AD:
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->bl, x86::mem(ts->esp + 0x10, 1));

loc_5429B2:
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_5429BB;
    }
	lea(mv, &ts->eax, x86::mem(ts->esi - 0x4, 4));
	goto loc_5429BD;

loc_5429BB:
	xor_(&ts->eax, ts->eax);

loc_5429BD:
	cmp(&ts->eflags, ts->edx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_542A1B;
    }
	test(&ts->eflags, ts->bl, ts->bl);
	if (ts->eflags.zero) {
        goto loc_5429EB;
    }
	mov(mv, &ts->al, x86::mem(ts->edx + 0x18, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5429EB;
    }
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x10, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5429DC;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0x4);

loc_5429DC:
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_542A0B;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	goto loc_542A08;

loc_5429EB:
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x10, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5429FB;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);

loc_5429FB:
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_542A0B;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);

loc_542A08:
	add(&ts->esp, 0x4);

loc_542A0B:
	mov(mv, &ts->edx, x86::mem(ts->edx + 0x4, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_542A17;
    }
	add(&ts->edx, 0xFFFFFFFC);
	goto loc_5429B2;

loc_542A17:
	xor_(&ts->edx, ts->edx);
	goto loc_5429B2;

loc_542A1B:
	test(&ts->eflags, ts->bl, ts->bl);
	pop(mv, &ts->esp, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_542A3F;
    }
	test(mv, &ts->eflags, x86::mem(ts->edi + 0x64, 4), 0x10000);
	if (!ts->eflags.zero) {
        goto loc_542A3F;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x3B949CD0);
	push(mv, &ts->esp, ts->eax);
	game::sub_495520(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_542A3F:
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_542A63;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_542A63;
    }
	push(mv, &ts->esp, 0x3B949CD0);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_542A7E;
    }

loc_542A63:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_542AB6;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x3B949CD0);
	game::sub_52C570(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_542AB6;
    }

loc_542A7E:
	mov(mv, &ts->ecx, x86::mem(0x8384D4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_542A8E;
    }
	test(mv, &ts->eflags, x86::mem(ts->eax + 0x1C, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_542A95;
    }

loc_542A8E:
	or_(mv, x86::mem(ts->eax + 0x1C, 4), 0x400001);

loc_542A95:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x18, 4), 0x5);
	if (!ts->eflags.zero) {
        goto loc_542AB6;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x64, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x60, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_542AB6;
    }
	mov(&ts->esi, ts->eax);

loc_542AA7:
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edx + 0x4, 4));
	add(&ts->esp, 0x4);
	dec(&ts->esi);
	if (!ts->eflags.zero) {
        goto loc_542AA7;
    }

loc_542AB6:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_542AC0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(ts->esp + 0xC, 1));
	mov(mv, &ts->dl, x86::mem(ts->esp + 0x14, 1));
	sub(&ts->esp, 0x40);
	push(mv, &ts->esp, ts->ebx);
	xor_(&ts->ebx, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->cl, x86::mem(ts->esp + 0x58, 1));
	mov(mv, x86::mem(ts->esi, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0x1, 1), ts->cl);
	mov(mv, x86::mem(ts->esi + 0x2, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x3, 1), ts->dl);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x20, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x2C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x30, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x38, 4), ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x54, 4));
	cmp(&ts->eflags, ts->edi, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x40, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x44, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x48, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x50, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_542C86;
    }
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x79C0E8);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x790F5C);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, 0x40);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x68, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebp);
	game::sub_4953E0(ts, mv);
	push(mv, &ts->esp, 0x79C0E0);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x790F5C);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x38, 4));
	push(mv, &ts->esp, 0x40);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esi + 0x40, 4), ts->eax);
	game::sub_50C960(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x40, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	game::sub_4953E0(ts, mv);
	push(mv, &ts->esp, 0x79C0D4);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x790F5C);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x54, 4));
	push(mv, &ts->esp, 0x40);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x44, 4), ts->eax);
	game::sub_50C960(ts, mv);
	add(&ts->esp, 0x4C);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ebp);
	game::sub_4953E0(ts, mv);
	push(mv, &ts->esp, 0x79C0C8);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x790F5C);
	mov(mv, x86::mem(ts->esi + 0x48, 4), ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, 0x40);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C960(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebp);
	game::sub_4953E0(ts, mv);
	push(mv, &ts->esp, 0x79C0B8);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x790F5C);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x40, 4));
	push(mv, &ts->esp, 0x40);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->eax);
	game::sub_50C960(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x48, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	game::sub_4953E0(ts, mv);
	add(&ts->esp, 0x40);
	push(mv, &ts->esp, 0x79C0A8);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x790F5C);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, 0x40);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x50, 4), ts->eax);
	game::sub_50C960(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ebp);
	game::sub_4953E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x40, 4));
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51D070(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x40, 4));
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x28, 4));
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ebp, x86::mem(ts->esi + 0x24, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edx);
	game::sub_51D730(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1, 1));
	add(&ts->esp, 0x34);
	cmp(&ts->eflags, ts->al, ts->bl);
	if (ts->eflags.zero) {
        goto loc_542C6E;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_542C57;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp, 4));
	pop(mv, &ts->esp, ts->ebp);
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x30, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x38, 4), ts->ebx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x2C, 4));
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x40);
	retn(mv, &ts->esp, 0x14);

loc_542C57:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi, 4));
	pop(mv, &ts->esp, ts->ebp);
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x30, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x38, 4), ts->ebx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x2C, 4));
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x40);
	retn(mv, &ts->esp, 0x14);

loc_542C6E:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x44, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51D730(ts, mv);
	add(&ts->esp, 0xC);
	mov(mv, x86::mem(ts->esi + 0x38, 4), ts->ebx);
	pop(mv, &ts->esp, ts->ebp);

loc_542C86:
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x40);
	retn(mv, &ts->esp, 0x14);
}

void sub_542CA0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7779A6);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	mov(mv, x86::mem(ts->esi, 4), 0x795CB4);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->edx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->esi);
	mov(mv, x86::mem(ts->eax, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	xor_(&ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x34, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x38, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x38, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x34, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x30, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x20, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x2C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x30, 4), ts->ebx);
	game::sub_542AC0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, &ts->cl, x86::mem(ts->esp + 0x38, 1));
	mov(mv, &ts->dl, x86::mem(ts->esp + 0x3C, 1));
	mov(mv, x86::mem(ts->esi + 0x8C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x90, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x94, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x98, 4), ts->ebx);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x8C, 4));
	lea(mv, &ts->ebp, x86::mem(ts->esi + 0x94, 4));
	mov(mv, x86::mem(ts->esi + 0x9C, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x9D, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x9E, 1), ts->cl);
	mov(mv, x86::mem(ts->esi + 0x9F, 1), ts->dl);
	mov(mv, x86::mem(ts->esi + 0xA0, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0xA4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xA8, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_542DA7;
    }
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_4953E0(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x90, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x30, 4), ts->eax);
	game::sub_51D070(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x98, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->eax);
	game::sub_51D730(ts, mv);
	add(&ts->esp, 0x20);
	goto loc_542DAD;

loc_542DA7:
	mov(mv, x86::mem(ts->esi + 0x9C, 1), ts->bl);

loc_542DAD:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x78, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x7C, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x80, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x1C);

loc_777990:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x8);
	goto sub_4358E0;

loc_77799B:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x10);
	goto sub_4358E0;

SEH_542CA0:
	mov(&ts->eax, 0x7E2D9C);
	goto ___CxxFrameHandler;
}

void sub_542DF0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x8, 4));
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x8, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x13, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_542F35;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x10, 4));
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x10, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_542F35;
    }
	mov(mv, &ts->cl, x86::mem(ts->edi + 0x9D, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_542E30;
    }
	mov(&ts->ecx, ts->edi);
	game::sub_538240(ts, mv);
	goto loc_542ECA;

loc_542E30:
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x1C, 4));
	cmp(&ts->eflags, ts->ebx, 0x1);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x20, 4));
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x24, 4));
	mov(mv, &ts->ebp, x86::mem(ts->edi + 0x28, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_542EF0;
    }
	mov(mv, &ts->ebx, x86::mem(ts->edi + 0x14, 4));
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_542E50:
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_542E59;
    }
	lea(mv, &ts->eax, x86::mem(ts->ebx - 0x4, 4));
	goto loc_542E5B;

loc_542E59:
	xor_(&ts->eax, ts->eax);

loc_542E5B:
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_542F35;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_542E6F;
    }
	add(&ts->esi, 0xFFFFFFFC);
	goto loc_542E71;

loc_542E6F:
	xor_(&ts->esi, ts->esi);

loc_542E71:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	game::sub_51F440(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x18, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	add(&ts->ecx, ts->edx);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.carry) {
        goto loc_542E99;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	inc(&ts->edx);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_542E97;
    }
	lea(mv, &ts->ebp, x86::mem(ts->eax - 0x4, 4));
	goto loc_542E99;

loc_542E97:
	xor_(&ts->ebp, ts->ebp);

loc_542E99:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x14, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_542E50;
    }
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));

loc_542EA8:
	cmp(mv, &ts->eflags, ts->esi, x86::mem(ts->edi + 0x24, 4));
	if (ts->eflags.zero) {
        goto loc_542ECA;
    }
	mov(mv, x86::mem(ts->edi + 0x20, 4), ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->edi + 0x24, 4), ts->esi);
	mov(mv, x86::mem(ts->edi + 0x28, 4), ts->ebp);
	game::sub_52E8C0(ts, mv);
	mov(&ts->ecx, ts->edi);
	game::sub_52E9C0(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x13, 1), 0x1);

loc_542ECA:
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	mov(mv, &ts->al, x86::mem(ts->edi + 0x9C, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_542EE2;
    }
	mov(&ts->ecx, ts->edi);
	game::sub_538490(ts, mv);

loc_542EE2:
	mov(mv, &ts->al, x86::mem(ts->esp + 0x13, 1));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x4);

loc_542EF0:
	cmp(&ts->eflags, ts->ebx, 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_542EA8;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));

loc_542EF7:
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_542F00;
    }
	lea(mv, &ts->eax, x86::mem(ts->edx - 0x4, 4));
	goto loc_542F02;

loc_542F00:
	xor_(&ts->eax, ts->eax);

loc_542F02:
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_542F35;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x8, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_542F12;
    }
	add(&ts->esi, 0xFFFFFFFC);
	goto loc_542F14;

loc_542F12:
	xor_(&ts->esi, ts->esi);

loc_542F14:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_542F20;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_542F22;

loc_542F20:
	xor_(&ts->eax, ts->eax);

loc_542F22:
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_542F29;
    }
	dec(&ts->ecx);
	mov(&ts->ebp, ts->esi);

loc_542F29:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x14, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_542EF7;
    }
	goto loc_542EA8;

loc_542F35:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x4);
}

void sub_542F50(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x8, 4));
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x8, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x7, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_5430AF;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x10, 4));
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x10, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5430AF;
    }
	mov(mv, &ts->cl, x86::mem(ts->edi + 0x9D, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_542F8B;
    }
	mov(&ts->ecx, ts->edi);
	game::sub_538240(ts, mv);
	goto loc_54308E;

loc_542F8B:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	cmp(&ts->eflags, ts->edx, 0x1);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->edi + 0x28, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->edi + 0x20, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x24, 4));
	if (!ts->eflags.zero) {
        goto loc_54300B;
    }

loc_542FA0:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_542FAC;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_542FAE;

loc_542FAC:
	xor_(&ts->eax, ts->eax);

loc_542FAE:
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_542FD0;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x10, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_542FC5;
    }
	lea(mv, &ts->esi, x86::mem(ts->eax - 0x4, 4));
	mov(&ts->ebp, 0x1);
	mov(&ts->ebx, ts->esi);
	goto loc_542FFE;

loc_542FC5:
	xor_(&ts->esi, ts->esi);
	mov(&ts->ebp, 0x1);
	mov(&ts->ebx, ts->esi);
	goto loc_542FFE;

loc_542FD0:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_542FDC;
    }
	add(&ts->esi, 0xFFFFFFFC);
	goto loc_542FDE;

loc_542FDC:
	xor_(&ts->esi, ts->esi);

loc_542FDE:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	game::sub_51F440(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x18, 4));
	add(&ts->ecx, ts->ebp);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.carry) {
        goto loc_542FFE;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x4, 4));
	inc(&ts->ebp);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_542FFC;
    }
	lea(mv, &ts->ebx, x86::mem(ts->eax - 0x4, 4));
	goto loc_542FFE;

loc_542FFC:
	xor_(&ts->ebx, ts->ebx);

loc_542FFE:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x14, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_542FA0;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	goto loc_543069;

loc_54300B:
	cmp(&ts->eflags, ts->edx, 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_543069;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));

loc_543012:
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54301B;
    }
	lea(mv, &ts->eax, x86::mem(ts->ecx - 0x4, 4));
	goto loc_54301D;

loc_54301B:
	xor_(&ts->eax, ts->eax);

loc_54301D:
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_54303F;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_543034;
    }
	mov(mv, &ts->ebp, x86::mem(ts->edi + 0x1C, 4));
	sub(mv, &ts->ebp, x86::mem(ts->edi + 0x18, 4));
	lea(mv, &ts->esi, x86::mem(ts->eax - 0x4, 4));
	inc(&ts->ebp);
	goto loc_543060;

loc_543034:
	mov(mv, &ts->ebp, x86::mem(ts->edi + 0x1C, 4));
	sub(mv, &ts->ebp, x86::mem(ts->edi + 0x18, 4));
	xor_(&ts->esi, ts->esi);
	inc(&ts->ebp);
	goto loc_543060;

loc_54303F:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x8, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_54304B;
    }
	add(&ts->esi, 0xFFFFFFFC);
	goto loc_54304D;

loc_54304B:
	xor_(&ts->esi, ts->esi);

loc_54304D:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_543059;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_54305B;

loc_543059:
	xor_(&ts->eax, ts->eax);

loc_54305B:
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_543062;
    }
	dec(&ts->ebp);

loc_543060:
	mov(&ts->ebx, ts->esi);

loc_543062:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x14, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_543012;
    }

loc_543069:
	cmp(mv, &ts->eflags, ts->esi, x86::mem(ts->edi + 0x24, 4));
	if (ts->eflags.zero) {
        goto loc_54308B;
    }
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->edi + 0x24, 4), ts->esi);
	mov(mv, x86::mem(ts->edi + 0x20, 4), ts->ebp);
	mov(mv, x86::mem(ts->edi + 0x28, 4), ts->ebx);
	game::sub_52E8C0(ts, mv);
	mov(&ts->ecx, ts->edi);
	game::sub_52E9C0(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x13, 1), 0x1);

loc_54308B:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);

loc_54308E:
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	mov(mv, &ts->al, x86::mem(ts->edi + 0x9C, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5430A6;
    }
	mov(&ts->ecx, ts->edi);
	game::sub_538490(ts, mv);

loc_5430A6:
	mov(mv, &ts->al, x86::mem(ts->esp + 0x7, 1));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);

loc_5430AF:
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);
}

void sub_5430C0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x8, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->eax, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x13, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_543288;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	lea(mv, &ts->ebp, x86::mem(ts->esi + 0x10, 4));
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_543288;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x18, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_543288;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x28, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	cmp(&ts->eflags, ts->edx, 0x1);
	if (!ts->eflags.zero) {
        goto loc_543185;
    }
	sub(&ts->eax, ts->ecx);
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x20, 4), ts->eax);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_543207;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x2C, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_543161;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x30, 4));
	push(mv, &ts->esp, 0x78F21C);
	push(mv, &ts->esp, ts->eax);
	game::sub_51EE80(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_543134;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax - 0x4, 4));
	goto loc_543136;

loc_543134:
	xor_(&ts->ecx, ts->ecx);

loc_543136:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54315E;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_543149;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax - 0x4, 4));
	goto loc_54314B;

loc_543149:
	xor_(&ts->ecx, ts->ecx);

loc_54314B:
	mov(mv, x86::mem(ts->esi + 0x2C, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, ts->edx);
	game::sub_51EE80(ts, mv);
	goto loc_543161;

loc_54315E:
	mov(mv, x86::mem(ts->esi + 0x2C, 4), ts->ebx);

loc_543161:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x28, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_54317A;
    }
	add(&ts->eax, 0xFFFFFFFC);
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	inc(&ts->eax);
	goto loc_543204;

loc_54317A:
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	inc(&ts->eax);
	goto loc_543204;

loc_543185:
	cmp(&ts->eflags, ts->edx, 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_543207;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_543196;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_543198;

loc_543196:
	xor_(&ts->eax, ts->eax);

loc_543198:
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x14, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_543207;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x2C, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5431EC;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x30, 4));
	push(mv, &ts->esp, 0x78F21C);
	push(mv, &ts->esp, ts->edx);
	game::sub_51EE80(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5431BF;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax - 0x4, 4));
	goto loc_5431C1;

loc_5431BF:
	xor_(&ts->ecx, ts->ecx);

loc_5431C1:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_5431E9;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5431D4;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax - 0x4, 4));
	goto loc_5431D6;

loc_5431D4:
	xor_(&ts->ecx, ts->ecx);

loc_5431D6:
	mov(mv, x86::mem(ts->esi + 0x2C, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, ts->eax);
	game::sub_51EE80(ts, mv);
	goto loc_5431EC;

loc_5431E9:
	mov(mv, x86::mem(ts->esi + 0x2C, 4), ts->ebx);

loc_5431EC:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x28, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x8, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5431FB;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_5431FD;

loc_5431FB:
	xor_(&ts->eax, ts->eax);

loc_5431FD:
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	dec(&ts->eax);

loc_543204:
	mov(mv, x86::mem(ts->esi + 0x20, 4), ts->eax);

loc_543207:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	cmp(mv, &ts->eflags, ts->edx, x86::mem(ts->esi + 0x28, 4));
	if (ts->eflags.zero) {
        goto loc_54327A;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x24, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_51F440(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.carry) {
        goto loc_54324A;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x18, 4));
	add(&ts->edx, ts->ecx);
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (!ts->eflags.carry) {
        goto loc_54324A;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x2C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x9D, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto loc_543251;
    }
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_52E850(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x2C, 4), ts->eax);
	game::sub_4958D0(ts, mv);
	goto loc_543251;

loc_54324A:
	mov(mv, x86::mem(ts->esi + 0x9D, 1), 0x1);

loc_543251:
	mov(&ts->ecx, ts->esi);
	game::sub_52E9C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x9C, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_54326E;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_538490(ts, mv);

loc_54326E:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x4);

loc_54327A:
	mov(mv, &ts->al, x86::mem(ts->esp + 0x13, 1));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x4);

loc_543288:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x4);
}

void sub_5432A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	xor_(&ts->bl, ts->bl);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_54345B;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54345B;
    }
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x9D, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_5432DA;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_538240(ts, mv);
	goto loc_543432;

loc_5432DA:
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x14, 4));
	cmp(&ts->eflags, ts->ebp, 0x1);
	if (!ts->eflags.zero) {
        goto loc_54339A;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5432F3;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax - 0x4, 4));
	goto loc_5432F5;

loc_5432F3:
	xor_(&ts->ecx, ts->ecx);

loc_5432F5:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54345B;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	if (ts->eflags.zero) {
        goto loc_54330F;
    }
	add(&ts->edx, 0xFFFFFFFC);
	goto loc_543311;

loc_54330F:
	xor_(&ts->edx, ts->edx);

loc_543311:
	neg(&ts->eax);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54332D;
    }
	add(&ts->eax, 0x4);
	goto loc_54332F;

loc_54332D:
	xor_(&ts->eax, ts->eax);

loc_54332F:
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_543338;
    }
	lea(mv, &ts->ecx, x86::mem(ts->edx + 0x4, 4));
	goto loc_54333A;

loc_543338:
	xor_(&ts->ecx, ts->ecx);

loc_54333A:
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->edx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->edx);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x28, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_54336C;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_543362;
    }
	add(&ts->eax, 0xFFFFFFFC);
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->eax);
	goto loc_543428;

loc_543362:
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->eax);
	goto loc_543428;

loc_54336C:
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_51F440(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x18, 4));
	add(&ts->ecx, ts->ebx);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.carry) {
        goto loc_543428;
    }
	inc(&ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x20, 4), ts->ebx);
	mov(mv, &ts->edi, x86::mem(ts->edi + 0x4, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_543362;
    }
	lea(mv, &ts->eax, x86::mem(ts->edi - 0x4, 4));
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->eax);
	goto loc_543428;

loc_54339A:
	cmp(&ts->eflags, ts->ebp, 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_543428;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5433AE;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax - 0x4, 4));
	goto loc_5433B0;

loc_5433AE:
	xor_(&ts->ecx, ts->ecx);

loc_5433B0:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54345B;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_5433C7;
    }
	lea(mv, &ts->edx, x86::mem(ts->ecx - 0x4, 4));
	goto loc_5433C9;

loc_5433C7:
	xor_(&ts->edx, ts->edx);

loc_5433C9:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5433D2;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	goto loc_5433D4;

loc_5433D2:
	xor_(&ts->ecx, ts->ecx);

loc_5433D4:
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5433EA;
    }
	add(&ts->eax, 0x4);
	goto loc_5433EC;

loc_5433EA:
	xor_(&ts->eax, ts->eax);

loc_5433EC:
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_5433F5;
    }
	lea(mv, &ts->ecx, x86::mem(ts->edx + 0x4, 4));
	goto loc_5433F7;

loc_5433F5:
	xor_(&ts->ecx, ts->ecx);

loc_5433F7:
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x28, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x24, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_543413;
    }
	dec(mv, x86::mem(ts->esi + 0x20, 4));
	goto loc_543425;

loc_543413:
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54341F;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_543421;

loc_54341F:
	xor_(&ts->eax, ts->eax);

loc_543421:
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_543428;
    }

loc_543425:
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->ecx);

loc_543428:
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->esi);
	game::sub_52E8C0(ts, mv);
	mov(&ts->bl, 0x1);

loc_543432:
	mov(mv, &ts->al, x86::mem(ts->esp + 0x18, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_543441;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));

loc_543441:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x9C, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_543452;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_538490(ts, mv);

loc_543452:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	mov(&ts->al, ts->bl);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x8);

loc_54345B:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x8);
}

void sub_543470(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5434C7;
    }
	mov(&ts->eax, ts->ecx);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_543488;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_54348A;

loc_543488:
	xor_(&ts->eax, ts->eax);

loc_54348A:
	mov(mv, x86::mem(ts->esi + 0x2C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_543499;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_54349B;

loc_543499:
	xor_(&ts->eax, ts->eax);

loc_54349B:
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->eax);
	mov(mv, &ts->al, x86::mem(ts->esp + 0x8, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5434C1;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->al, x86::mem(ts->esi + 0x9C, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5434C1;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_538490(ts, mv);

loc_5434C1:
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_5434C7:
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_5434D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54354A;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	lea(mv, &ts->ebp, x86::mem(ts->esi + 0x8, 4));
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_543548;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_543548;
    }
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->edi + 0x14, 1), 0x0);
	game::sub_52E850(ts, mv);
	mov(&ts->ebx, ts->eax);
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_543548;
    }
	cmp(mv, &ts->eflags, ts->edi, x86::mem(ts->esi + 0x24, 4));
	if (!ts->eflags.zero) {
        goto loc_543541;
    }
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_542DF0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_543522;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0xC, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_54353B;
    }
	lea(mv, &ts->eax, x86::mem(ts->esi - 0x4, 4));
	goto loc_54353D;

loc_543522:
	push(mv, &ts->esp, 0xFFFFFFFF);
	mov(&ts->ecx, ts->esi);
	game::sub_542DF0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_543548;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54353B;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_54353D;

loc_54353B:
	xor_(&ts->eax, ts->eax);

loc_54353D:
	cmp(&ts->eflags, ts->ebx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_543548;
    }

loc_543541:
	mov(&ts->ecx, ts->ebx);
	game::sub_495890(ts, mv);

loc_543548:
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);

loc_54354A:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_543550(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x8, 4));
	lea(mv, &ts->ebx, x86::mem(ts->edi + 0x8, 4));

loc_54355B:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_543564;
    }
	lea(mv, &ts->esi, x86::mem(ts->eax - 0x4, 4));
	goto loc_543566;

loc_543564:
	xor_(&ts->esi, ts->esi);

loc_543566:
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_54356F;
    }
	lea(mv, &ts->eax, x86::mem(ts->ebx - 0x4, 4));
	goto loc_543571;

loc_54356F:
	xor_(&ts->eax, ts->eax);

loc_543571:
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_543583;
    }
	push(mv, &ts->esp, 0xFFFFFFFF);
	mov(&ts->ecx, ts->edi);
	game::sub_5430C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	goto loc_54355B;

loc_543583:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_543590(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x8, 4));
	lea(mv, &ts->ebx, x86::mem(ts->edi + 0x8, 4));

loc_54359B:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5435A4;
    }
	lea(mv, &ts->esi, x86::mem(ts->eax - 0x4, 4));
	goto loc_5435A6;

loc_5435A4:
	xor_(&ts->esi, ts->esi);

loc_5435A6:
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5435AF;
    }
	lea(mv, &ts->eax, x86::mem(ts->ebx - 0x4, 4));
	goto loc_5435B1;

loc_5435AF:
	xor_(&ts->eax, ts->eax);

loc_5435B1:
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5435C3;
    }
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->edi);
	game::sub_5430C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	goto loc_54359B;

loc_5435C3:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_5435D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7779BB);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->esi, 4), 0x79B948);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->esi);
	mov(mv, x86::mem(ts->eax, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x2C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x30, 4));
	xor_(&ts->ebx, ts->ebx);
	push(mv, &ts->esp, 0x30);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x2C, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x2D, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x2E, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x2F, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x30, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x31, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x34, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x38, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x3C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x40, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x44, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x50, 4), 0x43F00000);
	mov(mv, x86::mem(ts->esi + 0x54, 4), 0x42C80000);
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->ebx);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_54367D;
    }
	mov(&ts->ecx, 0x3F800000);
	mov(mv, x86::mem(ts->eax, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x2C, 2), ts->bx);
	mov(mv, x86::mem(ts->eax + 0x2E, 2), 0x1);
	goto loc_54367F;

loc_54367D:
	xor_(&ts->eax, ts->eax);

loc_54367F:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x24, 4), 0x3E99999A);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	mov(mv, x86::mem(ts->eax + 0x2E, 2), ts->bx);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_505450(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	mov(&ts->ebp, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5436BF;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5436BF;
    }
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_5436D6;
    }

loc_5436BF:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5436D4;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebp);
	game::sub_52C570(ts, mv);
	goto loc_5436D6;

loc_5436D4:
	xor_(&ts->eax, ts->eax);

loc_5436D6:
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x48, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->eax);
	game::sub_51D730(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x5C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51D620(ts, mv);
	add(&ts->esp, 0x18);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	game::sub_52EC20(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1C, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->eax);
	game::sub_50CA00(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x40, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_51D620(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	add(&ts->esp, 0x10);
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_543741;
    }
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_543741;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_52CE40(ts, mv);

loc_543741:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x34, 4));
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebp);
	game::sub_4953E0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x40, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esi + 0x20, 4), ts->eax);
	game::sub_505450(ts, mv);
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->ebp, ts->ebx);
	mov(&ts->edi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54377F;
    }
	push(mv, &ts->esp, ts->ebp);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_54377F;
    }
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_543792;
    }

loc_54377F:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_543797;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	game::sub_52C570(ts, mv);

loc_543792:
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->eax);
	goto loc_54379A;

loc_543797:
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->ebx);

loc_54379A:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x18);

loc_7779B0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x4);
	goto sub_4358E0;

SEH_52EA90:
	mov(&ts->eax, 0x7E2DC0);
	goto ___CxxFrameHandler;
}

void sub_5437C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->esi, x86::mem(ts->ecx + 0x4, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero) {
        goto loc_54383A;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xC, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	cmp(&ts->eflags, ts->edi, 0xFFFFFFFF);
	mov(&ts->edx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_5437F0;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_5437E5;
    }
	add(&ts->esi, 0xFFFFFFFC);
	goto loc_5437E7;

loc_5437E5:
	xor_(&ts->esi, ts->esi);

loc_5437E7:
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero) {
        goto loc_543815;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x8, 4));
	goto loc_54380A;

loc_5437F0:
	cmp(&ts->eflags, ts->edi, 0x1);
	if (!ts->eflags.zero) {
        goto loc_543815;
    }
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x8, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_543801;
    }
	add(&ts->esi, 0xFFFFFFFC);
	goto loc_543803;

loc_543801:
	xor_(&ts->esi, ts->esi);

loc_543803:
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero) {
        goto loc_543815;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));

loc_54380A:
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_543813;
    }
	add(&ts->edx, 0xFFFFFFFC);
	goto loc_543815;

loc_543813:
	xor_(&ts->edx, ts->edx);

loc_543815:
	cmp(&ts->eflags, ts->edx, ts->eax);
	pop(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_54383A;
    }
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x2C, 1));
	test(&ts->eflags, ts->al, ts->al);
	pop(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero) {
        goto loc_54382E;
    }
	mov(mv, &ts->eax, x86::mem(ts->edx + 0xC, 4));
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	goto sub_52EE40;

loc_54382E:
	mov(mv, &ts->edx, x86::mem(ts->edx + 0xC, 4));
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->edx);
	goto sub_538700;

loc_54383A:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_543840(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7779BB);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->esi, 4), 0x795CBC);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->esi);
	mov(mv, x86::mem(ts->eax, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x34, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x28, 4));
	mov(mv, &ts->cl, x86::mem(ts->esp + 0x38, 1));
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x24, 4));
	xor_(&ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x20, 4), ts->eax);
	mov(&ts->eax, 0x1);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x24, 4), 0x41200000);
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x2C, 1), ts->cl);
	mov(mv, x86::mem(ts->esi + 0x2D, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0x2E, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0x2F, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0x30, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x34, 4), 0xFFFFFFF7);
	game::sub_505450(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	mov(&ts->ebp, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5438E0;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5438E0;
    }
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_5438F7;
    }

loc_5438E0:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5438F5;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebp);
	game::sub_52C570(ts, mv);
	goto loc_5438F7;

loc_5438F5:
	xor_(&ts->eax, ts->eax);

loc_5438F7:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x1C, 4));
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_505450(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	mov(&ts->ebp, ts->eax);
	if (ts->eflags.zero) {
        goto loc_543929;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_543929;
    }
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_543940;
    }

loc_543929:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_54393E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebp);
	game::sub_52C570(ts, mv);
	goto loc_543940;

loc_54393E:
	xor_(&ts->eax, ts->eax);

loc_543940:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x30, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->eax);
	game::sub_505450(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	mov(&ts->ebp, ts->eax);
	if (ts->eflags.zero) {
        goto loc_543972;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_543972;
    }
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_543985;
    }

loc_543972:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_54398A;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebp);
	game::sub_52C570(ts, mv);

loc_543985:
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->eax);
	goto loc_54398D;

loc_54398A:
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->ebx);

loc_54398D:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x18);

loc_7779B0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x4);
	goto sub_4358E0;

SEH_52EA90:
	mov(&ts->eax, 0x7E2DC0);
	goto ___CxxFrameHandler;
}

void sub_5439B0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x40);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x20, 4));
	push(mv, &ts->esp, 0x7845D4);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DDA0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x28, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x3C, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x1C, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x44, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_4953E0(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x24);
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_5439FE;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x40);
	retn(mv, &ts->esp, 0x4);

loc_5439FE:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x28, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x50, 4));
	inc(&ts->ecx);
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->edi + 0x28, 4), ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_543A19;
    }
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->edi);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x40);
	retn(mv, &ts->esp, 0x4);

loc_543A19:
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x28, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x24, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ebx);
	game::sub_51D730(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	game::sub_495570(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x8, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0xC, 4));
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_543A7E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ecx, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_543A5B;
    }
	lea(mv, &ts->eax, x86::mem(ts->ecx - 0x4, 4));
	goto loc_543A5D;

loc_543A5B:
	xor_(&ts->eax, ts->eax);

loc_543A5D:
	mov(mv, x86::mem(ts->edi + 0xC, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x10, 4));
	if (ts->eflags.zero) {
        goto loc_543A7E;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_543A7E;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_52CE40(ts, mv);

loc_543A7E:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->ebx);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x40);
	retn(mv, &ts->esp, 0x4);
}

void sub_543A90(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7779D8);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x24, 4));
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x30, 4));
	xor_(&ts->ebx, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->esi);
	game::sub_543840(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x796484);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x38, 4));
	mov(mv, x86::mem(ts->esp + 0x30, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi, 4), 0x79C0F4);
	game::sub_542AC0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x90, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x94, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x98, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x9C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xBC, 2), ts->bx);
	mov(&ts->eax, 0x3F800000);
	mov(mv, x86::mem(ts->esi + 0xB4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xB8, 4), ts->eax);
	mov(&ts->eax, 0x1);
	mov(mv, x86::mem(ts->esi + 0xBE, 2), ts->ax);
	mov(mv, x86::mem(ts->esi + 0xC0, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xC8, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x38, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(ts->esi + 0xCC, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xD0, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xD4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xD8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xE0, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xE4, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x24, 4), 0x42200000);
	game::sub_505450(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	mov(&ts->ebp, ts->eax);
	if (ts->eflags.zero) {
        goto loc_543B8D;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_543B8D;
    }
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_543BA0;
    }

loc_543B8D:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_543BC3;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebp);
	game::sub_52C570(ts, mv);

loc_543BA0:
	mov(&ts->edi, ts->eax);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_543BC3;
    }
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xD8, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xD4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_51D620(ts, mv);
	push(mv, &ts->esp, ts->edi);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x10);

loc_543BC3:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0xBE, 2), ts->bx);
	mov(mv, x86::mem(ts->esi + 0xB4, 4), 0x3E99999A);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x18);

loc_7779D0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_4CBC20;

SEH_543A90:
	mov(&ts->eax, 0x7E2DE4);
	goto ___CxxFrameHandler;
}

void sub_543BF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4CBC20(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_543C08;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_543C08:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_543C10(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x28);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x28, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x78F6F4);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x1C, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4953E0(ts, mv);
	add(&ts->esp, 0x1C);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_543C5F;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x30, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_543C56;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->edx, 4));

loc_543C56:
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->edi);
	add(&ts->esp, 0x28);
	retn(mv, &ts->esp, 0x4);

loc_543C5F:
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x28, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x34, 4));
	inc(&ts->edx);
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->edi + 0x28, 4), ts->edx);
	if (!ts->eflags.zero) {
        goto loc_543C79;
    }
	pop(mv, &ts->esp, ts->esi);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->edi);
	add(&ts->esp, 0x28);
	retn(mv, &ts->esp, 0x4);

loc_543C79:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0x28, 4));
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ebp, x86::mem(ts->esi + 0x24, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->eax);
	game::sub_51D730(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_495570(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0xE0, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), 0xFFFFFFFF);
	game::sub_51D730(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x10, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x5C, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_51D730(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x24, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0xE0, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	add(&ts->esp, 0x28);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0xE0, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_543D27;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ecx, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_543D04;
    }
	lea(mv, &ts->eax, x86::mem(ts->ecx - 0x4, 4));
	goto loc_543D06;

loc_543D04:
	xor_(&ts->eax, ts->eax);

loc_543D06:
	mov(mv, x86::mem(ts->edi + 0xC, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x10, 4));
	if (ts->eflags.zero) {
        goto loc_543D27;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_543D27;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_52CE40(ts, mv);

loc_543D27:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->edi);
	add(&ts->esp, 0x28);
	retn(mv, &ts->esp, 0x4);
}

void sub_543D40(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	cmp(&ts->eflags, ts->eax, 0x911C0A4B);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x8, 4), 0x0);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_543FC5;
    }
	if (ts->eflags.zero) {
        goto loc_543F41;
    }
	cmp(&ts->eflags, ts->eax, 0x5ECA113D);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_543E8D;
    }
	if (ts->eflags.zero) {
        goto loc_544128;
    }
	cmp(&ts->eflags, ts->eax, 0x251BF83E);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_543E6C;
    }
	if (ts->eflags.zero) {
        goto loc_543E5D;
    }
	cmp(&ts->eflags, ts->eax, 0x153E234);
	if (ts->eflags.zero) {
        goto loc_543E41;
    }
	cmp(&ts->eflags, ts->eax, 0xC407210);
	if (!ts->eflags.zero) {
        goto loc_543FBD;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x22, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_543DB5;
    }
	mov(mv, x86::mem(ts->esp + 0x8, 4), 0x13);

loc_543DB5:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x50, 4));
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x50, 4));
	cmp(&ts->eflags, ts->edi, ts->edx);
	if (ts->eflags.zero) {
        goto loc_543F91;
    }
	mov(mv, &ts->dl, x86::mem(ts->esi + 0x7B, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.zero) {
        goto loc_543F91;
    }
	mov(mv, &ts->dl, x86::mem(ts->eax + 0x20, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	if (!ts->eflags.zero) {
        goto loc_543F91;
    }
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_543F91;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x20, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x20, 4));
	if (ts->eflags.zero) {
        goto loc_543E17;
    }
	mov(mv, &ts->dl, x86::mem(ts->eax + 0x45, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.zero) {
        goto loc_543E17;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0xC407210);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0x8);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	goto loc_543E2B;

loc_543E17:
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x8);
	game::sub_51FD10(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_52FBF0(ts, mv);

loc_543E2B:
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0xC407210);
	mov(&ts->ecx, ts->esi);
	game::sub_50DA20(ts, mv);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	goto loc_543F99;

loc_543E41:
	push(mv, &ts->esp, 0x79C194);
	game::sub_50D510(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x130, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x10);

loc_543E5D:
	mov(&ts->ecx, ts->esi);
	game::sub_538CA0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x10);

loc_543E6C:
	cmp(&ts->eflags, ts->eax, 0x35F8620B);
	if (!ts->eflags.zero) {
        goto loc_543FBD;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x10, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x130, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x10);

loc_543E8D:
	cmp(&ts->eflags, ts->eax, 0x72619778);
	if (ts->eflags.zero) {
        goto loc_543EE3;
    }
	cmp(&ts->eflags, ts->eax, 0x90CA113D);
	if (ts->eflags.zero) {
        goto loc_544128;
    }
	cmp(&ts->eflags, ts->eax, 0x911AB364);
	if (!ts->eflags.zero) {
        goto loc_543FBD;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, x86::mem(ts->esp + 0x8, 4), 0xA);
	game::sub_51FD10(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x911AB364);
	mov(&ts->ecx, ts->esi);
	game::sub_50DA20(ts, mv);
	game::sub_52FBF0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x7B, 1), 0x0);
	goto loc_543F99;

loc_543EE3:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x50, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_543FBD;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x79, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_543FBD;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x7B, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_543FBD;
    }
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4C, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_5276D0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_543F1C;
    }
	mov(&ts->ecx, ts->edi);
	game::sub_527750(ts, mv);

loc_543F1C:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x8, 4), 0x6);
	call(ts, mv, x86::mem(ts->edx + 0x10, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_495910(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50B8C0(ts, mv);
	add(&ts->esp, 0x8);
	goto loc_543F99;

loc_543F41:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x50, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_543FBD;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x79, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_543FBD;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x7B, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_543FBD;
    }
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4C, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_527700(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_543F6F;
    }
	mov(mv, x86::mem(ts->esp + 0x8, 4), 0x7);

loc_543F6F:
	mov(&ts->ecx, ts->edi);
	game::sub_527730(ts, mv);

loc_543F76:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x10, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_495910(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50B8C0(ts, mv);
	add(&ts->esp, 0x8);

loc_543F91:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_543FBD;
    }

loc_543F99:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	imul(&ts->eax, ts->eax, 0x1B);
	movsx(mv, &ts->eax, x86::mem(ts->eax + (ts->ecx) + 0x837FE0, 1));
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_543FBD;
    }
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_458520(ts, mv);

loc_543FBD:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x10);

loc_543FC5:
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_5440AD;
    }
	if (ts->eflags.zero) {
        goto loc_54406A;
    }
	cmp(&ts->eflags, ts->eax, 0x9120409E);
	if (ts->eflags.zero) {
        goto loc_54402C;
    }
	cmp(&ts->eflags, ts->eax, 0x96DDA9E6);
	if (ts->eflags.zero) {
        goto loc_54401D;
    }
	cmp(&ts->eflags, ts->eax, 0x9803F6E2);
	if (!ts->eflags.zero) {
        goto loc_543FBD;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4C, 4));
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4C, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_543FBD;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x10, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_495910(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50B8C0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x10);

loc_54401D:
	mov(&ts->ecx, ts->esi);
	game::sub_538C00(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x10);

loc_54402C:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x50, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_543FBD;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x79, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_543FBD;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x7B, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_543FBD;
    }
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4C, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_5276D0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_54405E;
    }
	mov(mv, x86::mem(ts->esp + 0x8, 4), 0x4);

loc_54405E:
	mov(&ts->ecx, ts->edi);
	game::sub_527750(ts, mv);
	goto loc_543F76;

loc_54406A:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x50, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_543FBD;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x79, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_543FBD;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x7B, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_543FBD;
    }
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4C, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_527700(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_543F6F;
    }
	mov(mv, x86::mem(ts->esp + 0x8, 4), 0x5);
	goto loc_543F6F;

loc_5440AD:
	cmp(&ts->eflags, ts->eax, 0xC98356BA);
	if (ts->eflags.zero) {
        goto loc_544145;
    }
	cmp(&ts->eflags, ts->eax, 0xD9CA113D);
	if (ts->eflags.zero) {
        goto loc_544128;
    }
	cmp(&ts->eflags, ts->eax, 0xE1FDE1D1);
	if (!ts->eflags.zero) {
        goto loc_543FBD;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x79C158);
	game::sub_50D510(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->ecx, ts->esi);
	game::sub_52FBA0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x50, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_543FBD;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x45, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_543FBD;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x148, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x144, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x140, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x13C, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x10);

loc_544128:
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x79C118);
	game::sub_50D510(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->ecx, ts->esi);
	game::sub_52FBA0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x10);

loc_544145:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4C, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x10);
}

void sub_544160(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x1C);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8763D4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x797D50, 4));
	mov(&ts->ebx, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8763D8, 4));
	xor_(&ts->ebp, ts->ebp);
	lea(mv, &ts->esi, x86::mem(ts->ebx + 0x4C, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78DA30, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));

loc_544192:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5441E6;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_51D9F0(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5441E6;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (!ts->eflags.zero) {
        goto loc_5441E6;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.parity) {
        goto loc_5441E6;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (!ts->eflags.zero) {
        goto loc_5441E6;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.parity) {
        goto loc_5441F4;
    }

loc_5441E6:
	inc(&ts->ebp);
	add(&ts->esi, 0x4);
	cmp(&ts->eflags, ts->ebp, 0x3);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_544192;
    }
	goto loc_5442CA;

loc_5441F4:
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x68, 4));
	mov(mv, &ts->edi, x86::mem(ts->ebx + (ts->edx*4) + 0x4C, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_544263;
    }
	mov(&ts->edx, 0x78F21C);
	or_(&ts->ecx, 0xFFFFFFFF);
	mov(&ts->al, 0x55);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_544210:
	imul(&ts->ecx, ts->ecx, 0x21);
	cmp(&ts->eflags, ts->al, 0x61);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_54421D;
    }
	cmp(&ts->eflags, ts->al, 0x7A);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_54421D;
    }
	add(&ts->al, 0xE0);

loc_54421D:
	movzx(&ts->eax, ts->al);
	add(&ts->ecx, ts->eax);
	mov(mv, &ts->al, x86::mem(ts->edx + 0x1, 1));
	inc(&ts->edx);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_544210;
    }
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x4C, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_544263;
    }

loc_544231:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x30, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54423F;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_544231;
    }
	goto loc_544263;

loc_54423F:
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_544263;
    }
	cmp(mv, &ts->eflags, ts->esi, x86::mem(ts->edi + 0x54, 4));
	if (ts->eflags.zero) {
        goto loc_54425C;
    }
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->edi + 0x54, 4), ts->esi);
	game::sub_517720(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x54, 4));
	mov(mv, x86::mem(ts->ecx + 0x10, 4), 0x0);

loc_54425C:
	mov(mv, x86::mem(ts->esi + 0x10, 4), 0x0);

loc_544263:
	mov(mv, x86::mem(ts->ebx + 0x68, 4), ts->ebp);
	mov(mv, &ts->edi, x86::mem(ts->ebx + (ts->ebp*4) + 0x4C, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_5442CA;
    }
	mov(&ts->edx, 0x78F228);
	or_(&ts->ecx, 0xFFFFFFFF);
	mov(&ts->al, 0x48);

loc_544278:
	imul(&ts->ecx, ts->ecx, 0x21);
	cmp(&ts->eflags, ts->al, 0x61);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_544285;
    }
	cmp(&ts->eflags, ts->al, 0x7A);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_544285;
    }
	add(&ts->al, 0xE0);

loc_544285:
	movzx(&ts->eax, ts->al);
	add(&ts->ecx, ts->eax);
	mov(mv, &ts->al, x86::mem(ts->edx + 0x1, 1));
	inc(&ts->edx);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_544278;
    }
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x4C, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5442CA;
    }
	goto loc_5442A0;

loc_5442A0:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x30, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_5442AE;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_5442A0;
    }
	goto loc_5442CA;

loc_5442AE:
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5442CA;
    }
	cmp(mv, &ts->eflags, ts->esi, x86::mem(ts->edi + 0x54, 4));
	if (ts->eflags.zero) {
        goto loc_5442C7;
    }
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->edi + 0x54, 4), ts->esi);
	game::sub_517720(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x54, 4));
	mov(mv, x86::mem(ts->ecx + 0x10, 4), ts->ebx);

loc_5442C7:
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ebx);

loc_5442CA:
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	xor_(&ts->ebx, ts->ebx);
	lea(mv, &ts->esi, x86::mem(ts->edi + 0x78, 4));

loc_5442D3:
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8763D4, 4));
	mov(mv, &ts->al, x86::mem(0x8763F0, 1));
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->al, ts->al);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x797D50, 4));
	movzx(mv, &ts->eax, x86::mem(0x8763F2, 1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8763D8, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78DA30, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	if (ts->eflags.zero) {
        goto loc_54430C;
    }
	movzx(mv, &ts->eax, x86::mem(0x8763F5, 1));

loc_54430C:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_544362;
    }
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_544362;
    }
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51D9F0(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_544362;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (!ts->eflags.zero) {
        goto loc_544362;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.parity) {
        goto loc_544362;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (!ts->eflags.zero) {
        goto loc_544362;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.parity) {
        goto loc_544377;
    }

loc_544362:
	inc(&ts->ebx);
	add(&ts->esi, 0x4);
	cmp(&ts->eflags, ts->ebx, 0x6);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5442D3;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x1C);
	retn(mv, &ts->esp);

loc_544377:
	mov(&ts->eax, ts->ebx);
	cdq(&ts->eax, ts->edx);
	sub(&ts->eax, ts->edx);
	mov(&ts->ebp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x68, 4));
	sar(&ts->ebp, 0x1);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_54445D;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edi, x86::mem(ts->ecx + (ts->eax*4) + 0x4C, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_5443F4;
    }
	mov(&ts->edx, 0x78F21C);
	or_(&ts->ecx, 0xFFFFFFFF);
	mov(&ts->al, 0x55);

loc_5443A1:
	imul(&ts->ecx, ts->ecx, 0x21);
	cmp(&ts->eflags, ts->al, 0x61);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5443AE;
    }
	cmp(&ts->eflags, ts->al, 0x7A);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_5443AE;
    }
	add(&ts->al, 0xE0);

loc_5443AE:
	movzx(&ts->eax, ts->al);
	add(&ts->ecx, ts->eax);
	mov(mv, &ts->al, x86::mem(ts->edx + 0x1, 1));
	inc(&ts->edx);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_5443A1;
    }
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x4C, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_5443F4;
    }

loc_5443C2:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x30, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_5443D0;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_5443C2;
    }
	goto loc_5443F4;

loc_5443D0:
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_5443F4;
    }
	cmp(mv, &ts->eflags, ts->esi, x86::mem(ts->edi + 0x54, 4));
	if (ts->eflags.zero) {
        goto loc_5443ED;
    }
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->edi + 0x54, 4), ts->esi);
	game::sub_517720(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x54, 4));
	mov(mv, x86::mem(ts->ecx + 0x10, 4), 0x0);

loc_5443ED:
	mov(mv, x86::mem(ts->esi + 0x10, 4), 0x0);

loc_5443F4:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->eax + 0x68, 4), ts->ebp);
	mov(mv, &ts->edi, x86::mem(ts->eax + (ts->ebp*4) + 0x4C, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_54445D;
    }
	mov(&ts->edx, 0x78F228);
	or_(&ts->ecx, 0xFFFFFFFF);
	mov(&ts->al, 0x48);
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_544410:
	imul(&ts->ecx, ts->ecx, 0x21);
	cmp(&ts->eflags, ts->al, 0x61);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_54441D;
    }
	cmp(&ts->eflags, ts->al, 0x7A);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_54441D;
    }
	add(&ts->al, 0xE0);

loc_54441D:
	movzx(&ts->eax, ts->al);
	add(&ts->ecx, ts->eax);
	mov(mv, &ts->al, x86::mem(ts->edx + 0x1, 1));
	inc(&ts->edx);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_544410;
    }
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x4C, 4));
	xor_(&ts->ebp, ts->ebp);
	cmp(&ts->eflags, ts->esi, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_54445D;
    }

loc_544433:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x30, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_544441;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	cmp(&ts->eflags, ts->esi, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_544433;
    }
	goto loc_54445D;

loc_544441:
	cmp(&ts->eflags, ts->esi, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_54445D;
    }
	cmp(mv, &ts->eflags, ts->esi, x86::mem(ts->edi + 0x54, 4));
	if (ts->eflags.zero) {
        goto loc_54445A;
    }
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->edi + 0x54, 4), ts->esi);
	game::sub_517720(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x54, 4));
	mov(mv, x86::mem(ts->ecx + 0x10, 4), ts->ebp);

loc_54445A:
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ebp);

loc_54445D:
	test(&ts->eflags, ts->bl, 0x1);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	if (ts->eflags.zero) {
        goto loc_544475;
    }
	push(mv, &ts->esp, 0xFFFFFFFF);
	game::sub_538E70(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x1C);
	retn(mv, &ts->esp);

loc_544475:
	push(mv, &ts->esp, 0x1);
	game::sub_538E70(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x1C);
	retn(mv, &ts->esp);
}

void sub_544490(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x6C, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_538130(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xA8, 4));
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	mov(&ts->ecx, ts->esi);
	if (ts->eflags.zero) {
        goto loc_54450B;
    }
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.zero) {
        goto loc_5444CE;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_520020(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x12C, 4));
	push(mv, &ts->esp, ts->eax);
	dec(&ts->ecx);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->edi);
	game::sub_538080(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_5444CE:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x144, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, 0x1);
	if (ts->eflags.zero) {
        goto loc_5444E8;
    }
	game::sub_539370(ts, mv);
	mov(&ts->ecx, ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	goto sub_495850;

loc_5444E8:
	game::sub_5390E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x50, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_5444FC;
    }
	lea(mv, &ts->eax, x86::mem(ts->esi - 0x4, 4));
	goto loc_5444FE;

loc_5444FC:
	xor_(&ts->eax, ts->eax);

loc_5444FE:
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54453F;
    }
	mov(&ts->ecx, ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	goto sub_495850;

loc_54450B:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x144, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_544525;
    }
	game::sub_539370(ts, mv);

loc_54451C:
	mov(&ts->ecx, ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	goto sub_495810;

loc_544525:
	game::sub_5390E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4C, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_544539;
    }
	lea(mv, &ts->eax, x86::mem(ts->esi - 0x4, 4));
	goto loc_54453B;

loc_544539:
	xor_(&ts->eax, ts->eax);

loc_54453B:
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_54451C;
    }

loc_54453F:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_544550(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	sub(&ts->esp, 0x40);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x7845D4);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DDA0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x12C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x38, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x40, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->esi);
	game::sub_4953C0(ts, mv);
	add(&ts->esp, 0x24);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x40);
	retn(mv, &ts->esp, 0x4);
}

void sub_5445A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	sub(&ts->esp, 0x40);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x7845D4);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DDA0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x12C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x38, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x40, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->esi);
	game::sub_4953E0(ts, mv);
	add(&ts->esp, 0x24);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x40);
	retn(mv, &ts->esp, 0x4);
}

void sub_5445F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	sub(&ts->esp, 0x40);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x7845D4);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DDA0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x12C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x38, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->al, x86::mem(ts->esp + 0x24, 1));
	add(&ts->esp, 0x1C);
	or_(&ts->esi, 0xFFFFFFFF);
	test(&ts->eflags, ts->al, ts->al);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	if (ts->eflags.zero) {
        goto loc_544652;
    }

loc_544638:
	imul(&ts->esi, ts->esi, 0x21);
	cmp(&ts->eflags, ts->al, 0x61);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_544645;
    }
	cmp(&ts->eflags, ts->al, 0x7A);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_544645;
    }
	add(&ts->al, 0xE0);

loc_544645:
	movzx(&ts->edx, ts->al);
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x1, 1));
	add(&ts->esi, ts->edx);
	inc(&ts->ecx);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_544638;
    }

loc_544652:
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_54466F;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54466F;
    }
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_54468C;
    }

loc_54466F:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54468A;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->esi);
	game::sub_52C570(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x40);
	retn(mv, &ts->esp, 0x4);

loc_54468A:
	xor_(&ts->eax, ts->eax);

loc_54468C:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x40);
	retn(mv, &ts->esp, 0x4);
}

void sub_5446A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0xC9D30688);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_5446B5;
    }
	cmp(&ts->eflags, ts->eax, 0xDA5B8712);
	if (!ts->eflags.zero) {
        goto loc_5446E4;
    }

loc_5446B5:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x50, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FC44);
	push(mv, &ts->esp, 0x7902B8);
	push(mv, &ts->esp, ts->ecx);
	game::sub_5426C0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, 0xB19F8B41);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x1C);

loc_5446E4:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);
}

void sub_5446F0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	xor_(&ts->ebp, ts->ebp);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_54483C;
    }
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x18, 4));
	cmp(&ts->eflags, ts->ebx, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_54483C;
    }
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ebp);
	mov(mv, x86::mem(ts->esi + 0x34, 4), ts->ebp);
	mov(mv, x86::mem(ts->esi + 0x44, 4), ts->ebp);
	game::sub_50DC70(ts, mv);
	mov(&ts->edi, ts->eax);
	test(&ts->eflags, ts->edi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_544740;
    }
	mov(&ts->edi, ts->ebx);
	cmp(mv, &ts->eflags, x86::mem(ts->edi, 2), ts->ax);
	if (ts->eflags.zero) {
        goto loc_544740;
    }
	nop();

loc_544730:
	add(&ts->edi, 0x2);
	cmp(mv, &ts->eflags, x86::mem(ts->edi, 2), 0x0);
	if (!ts->eflags.zero) {
        goto loc_544730;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_544740:
	cmp(mv, &ts->eflags, x86::mem(ts->ebx, 2), 0x0);
	if (ts->eflags.zero) {
        goto loc_54479B;
    }
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_544752;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	inc(&ts->ecx);
	inc(&ts->ebp);
	goto loc_54476C;

loc_544752:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	game::sub_520070(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	add(&ts->ecx, ts->eax);
	add(mv, &ts->ebp, x86::mem(ts->esp + 0x14, 4));

loc_54476C:
	cmp(mv, &ts->eflags, x86::mem(ts->edi, 2), 0x0);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54479B;
    }
	lea(mv, &ts->ebx, x86::mem(ts->edi + 0x2, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	game::sub_50DC70(ts, mv);
	mov(&ts->edi, ts->eax);
	test(&ts->eflags, ts->edi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_544740;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ebx, 2), ts->ax);
	mov(&ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_54479B;
    }
	mov(&ts->edi, ts->edi);

loc_544790:
	add(&ts->edi, 0x2);
	cmp(mv, &ts->eflags, x86::mem(ts->edi, 2), 0x0);
	if (!ts->eflags.zero) {
        goto loc_544790;
    }
	goto loc_544740;

loc_54479B:
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_544841;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x3C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_5447C3;
    }
	lea(mv, &ts->eax, x86::mem(ts->ebp + (ts->edi*2), 4));
	shl(&ts->eax, 0x1);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x40, 4), ts->eax);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x3C, 4), ts->eax);

loc_5447C3:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x3C, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, x86::mem(ts->esi + 0x38, 4), ts->ecx);
	lea(mv, &ts->edx, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x44, 4), ts->edx);
	game::sub_50DC70(ts, mv);
	mov(&ts->edi, ts->eax);
	test(&ts->eflags, ts->edi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_5447F5;
    }
	mov(&ts->eax, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_50DCB0(ts, mv);
	mov(&ts->edi, ts->eax);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_544841;
    }

loc_5447F5:
	cmp(mv, &ts->eflags, x86::mem(ts->ebx, 2), 0x0);
	if (ts->eflags.zero) {
        goto loc_544841;
    }
	cmp(&ts->eflags, ts->edi, ts->ebx);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	push(mv, &ts->esp, 0x0);
	if (!ts->eflags.zero) {
        goto loc_54480C;
    }
	game::sub_50DBF0(ts, mv);
	goto loc_544813;

loc_54480C:
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	game::sub_520070(ts, mv);

loc_544813:
	cmp(mv, &ts->eflags, x86::mem(ts->edi, 2), 0x0);
	if (ts->eflags.zero) {
        goto loc_544841;
    }
	lea(mv, &ts->ebx, x86::mem(ts->edi + 0x2, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	game::sub_50DC70(ts, mv);
	mov(&ts->edi, ts->eax);
	test(&ts->eflags, ts->edi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_5447F5;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ebx, 2), ts->ax);
	mov(&ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_544841;
    }

loc_544831:
	add(&ts->edi, 0x2);
	cmp(mv, &ts->eflags, x86::mem(ts->edi, 2), 0x0);
	if (!ts->eflags.zero) {
        goto loc_544831;
    }
	goto loc_5447F5;

loc_54483C:
	mov(mv, x86::mem(ts->esi + 0x34, 4), ts->ebp);
	goto loc_544844;

loc_544841:
	xor_(&ts->ebp, ts->ebp);
	pop(mv, &ts->esp, ts->edi);

loc_544844:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebp);
	mov(mv, x86::mem(ts->esi + 0x48, 4), ts->ebp);
	if (ts->eflags.zero) {
        goto loc_54485D;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x34, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_538080(ts, mv);

loc_54485D:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x48, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_5397E0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x4);
}

void sub_544880(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x34, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x30, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_5448DE;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x48, 4));
	add(&ts->esi, ts->edx);
	if (!ts->eflags.sign) {
        goto loc_54489D;
    }
	xor_(&ts->esi, ts->esi);
	goto loc_5448A8;

loc_54489D:
	lea(mv, &ts->edx, x86::mem(ts->ecx + (ts->esi), 4));
	cmp(&ts->eflags, ts->edx, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5448A8;
    }
	sub(&ts->eax, ts->ecx);
	mov(&ts->esi, ts->eax);

loc_5448A8:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x8, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_5448D2;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x48, 4));
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_5448CB;
    }
	game::sub_495810(ts, mv);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->edi + 0x48, 4), ts->esi);
	game::sub_5397E0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp, 0x4);

loc_5448CB:
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_5448D2;
    }
	game::sub_495850(ts, mv);

loc_5448D2:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->edi + 0x48, 4), ts->esi);
	game::sub_5397E0(ts, mv);
	pop(mv, &ts->esp, ts->esi);

loc_5448DE:
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp, 0x4);
}

void sub_5448F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esi + 0x50, 4));
	if (!ts->eflags.zero) {
        goto loc_544924;
    }
	push(mv, &ts->esp, 0xFFFFFFFF);
	mov(&ts->ecx, ts->esi);
	game::sub_544880(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54491E;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x48, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x34, 4));
	inc(&ts->eax);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_538080(ts, mv);

loc_54491E:
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_544924:
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esi + 0x4C, 4));
	if (!ts->eflags.zero) {
        goto loc_544951;
    }
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_544880(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54494B;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x48, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x34, 4));
	inc(&ts->edx);
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_538080(ts, mv);

loc_54494B:
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_544951:
	cmp(&ts->eflags, ts->eax, 0x9803F6E2);
	if (!ts->eflags.zero) {
        goto loc_5449B2;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_5449B2;
    }
	game::sub_538130(ts, mv);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8763EC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x3C, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_544986;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	mov(&ts->ecx, 0x1);
	goto loc_54499D;

loc_544986:
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_544998;
    }
	or_(&ts->ecx, 0xFFFFFFFF);
	goto loc_54499D;

loc_544998:
	cmp(&ts->eflags, ts->ecx, 0xFFFFFFF7);
	if (ts->eflags.zero) {
        goto loc_5449B2;
    }

loc_54499D:
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_544880(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_5398C0(ts, mv);
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_5449B2:
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_5449C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x8, 4));
	lea(mv, &ts->eax, x86::mem(ts->edi - 0x1, 4));
	cmp(&ts->eflags, ts->eax, 0xA5);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), 0x0);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_5449E6;
    }
	movzx(mv, &ts->eax, x86::mem(ts->eax + 0x544DB0, 1));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	jmp(x86::mem(0x544D98, 4));

loc_5449ED:
	push(mv, &ts->esp, ts->edi);
	game::sub_60FEE0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8389AC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->ebp + 0x8, 4), ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ebx, ts->eax);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, 0x8A2B68);
	game::sub_61BA30(ts, mv);
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_544D8C;
    }

loc_544A20:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x721AFF7C);
	mov(&ts->ecx, ts->esi);
	game::sub_61B500(ts, mv);
	movsx(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 1));
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x8, 4));
	neg(&ts->eax);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0x29A);
	cmp(&ts->eflags, ts->ecx, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_544AA3;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ebp + 0x10, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_544AA3;
    }
	mov(mv, &ts->edx, x86::mem(0x8389B0, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	game::sub_50F0D0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_52A010(ts, mv);
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_544AA3;
    }
	cmp(&ts->eflags, ts->edi, 0x9);
	if (!ts->eflags.zero) {
        goto loc_544A70;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x5, 1));
	and_(&ts->al, 0x1F);
	cmp(&ts->eflags, ts->al, 0x5);
	if (ts->eflags.zero) {
        goto loc_544AA3;
    }

loc_544A70:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x4, 4));
	inc(&ts->ecx);
	push(mv, &ts->esp, 0x10);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), ts->ecx);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_544A91;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0xC, 4), 0x0);
	goto loc_544A93;

loc_544A91:
	xor_(&ts->eax, ts->eax);

loc_544A93:
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->edx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->edx);

loc_544AA3:
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x8A2B68);
	game::sub_61BA50(ts, mv);
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_544A20;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x4, 4));
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_544AC8:
	push(mv, &ts->esp, ts->edi);
	game::sub_60FEE0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8389AC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->ebp + 0x8, 4), ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ebx, ts->eax);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, 0x8A2B68);
	game::sub_61BA30(ts, mv);
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_544D8C;
    }
	goto loc_544B00;

loc_544B00:
	movsx(mv, &ts->eax, x86::mem(ts->esi + 0x4, 1));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->ebp + 0x8, 4));
	if (!ts->eflags.zero) {
        goto loc_544B4E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebx);
	game::sub_539B70(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_544B4E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x4, 4));
	inc(&ts->ecx);
	push(mv, &ts->esp, 0x10);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), ts->ecx);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_544B3C;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0xC, 4), 0x0);
	goto loc_544B3E;

loc_544B3C:
	xor_(&ts->eax, ts->eax);

loc_544B3E:
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->edx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->edx);

loc_544B4E:
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x8A2B68);
	game::sub_61BA50(ts, mv);
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_544B00;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x4, 4));
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_544B6F:
	push(mv, &ts->esp, ts->edi);
	game::sub_60FEE0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8389AC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->ebp + 0x8, 4), ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ebx, ts->eax);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, 0x8A2B68);
	game::sub_61BA30(ts, mv);
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_544D8C;
    }

loc_544BA2:
	movsx(mv, &ts->eax, x86::mem(ts->esi + 0x4, 1));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->ebp + 0x8, 4));
	if (!ts->eflags.zero) {
        goto loc_544BF1;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xEBB03E66);
	mov(&ts->ecx, ts->esi);
	game::sub_61B500(ts, mv);
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->ebp + 0x10, 4));
	if (!ts->eflags.zero) {
        goto loc_544BF1;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x4, 4));
	inc(&ts->ecx);
	push(mv, &ts->esp, 0x10);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), ts->ecx);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_544BDF;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0xC, 4), 0x0);
	goto loc_544BE1;

loc_544BDF:
	xor_(&ts->eax, ts->eax);

loc_544BE1:
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->edx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->edx);

loc_544BF1:
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x8A2B68);
	game::sub_61BA50(ts, mv);
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_544BA2;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x4, 4));
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_544C12:
	push(mv, &ts->esp, ts->edi);
	game::sub_60FEE0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8389AC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->ebp + 0x8, 4), ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ebx, ts->eax);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, 0x8A2B68);
	game::sub_61BA30(ts, mv);
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_544D8C;
    }
	goto loc_544C50;

loc_544C50:
	movsx(mv, &ts->eax, x86::mem(ts->esi + 0x4, 1));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->ebp + 0x8, 4));
	if (!ts->eflags.zero) {
        goto loc_544CED;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x10, 4));
	xor_(&ts->ecx, ts->ecx);
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x5, 1));
	and_(&ts->ecx, 0x1F);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_544CED;
    }
	mov(mv, &ts->edx, x86::mem(0x8389B0, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	game::sub_50F0D0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_52A010(ts, mv);
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_544CED;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x5, 1));
	and_(&ts->al, 0x1F);
	cmp(&ts->eflags, ts->al, 0x16);
	if (!ts->eflags.zero) {
        goto loc_544CBA;
    }
	push(mv, &ts->esp, 0x79C1B8);
	game::sub_43DB50(ts, mv);
	movzx(mv, &ts->ecx, x86::mem(ts->esi + 0x2, 2));
	movzx(mv, &ts->edx, x86::mem(ts->esi, 2));
	shl(&ts->ecx, 0x10);
	or_(&ts->ecx, ts->edx);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_544CBA;
    }
	game::sub_570A30(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_544CED;
    }

loc_544CBA:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x4, 4));
	inc(&ts->ecx);
	push(mv, &ts->esp, 0x10);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), ts->ecx);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_544CDB;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0xC, 4), 0x0);
	goto loc_544CDD;

loc_544CDB:
	xor_(&ts->eax, ts->eax);

loc_544CDD:
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->edx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->edx);

loc_544CED:
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x8A2B68);
	game::sub_61BA50(ts, mv);
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_544C50;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x4, 4));
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_544D12:
	push(mv, &ts->esp, ts->edi);
	game::sub_60FEE0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8389AC, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	add(&ts->esp, 0x4);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x8A2B68);
	mov(mv, x86::mem(ts->ebp + 0x8, 4), ts->eax);
	game::sub_61BA30(ts, mv);
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_544D8C;
    }
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0xC, 4));

loc_544D42:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x4, 4));
	inc(&ts->ecx);
	push(mv, &ts->esp, 0x10);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), ts->ecx);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_544D63;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0xC, 4), 0x0);
	goto loc_544D65;

loc_544D63:
	xor_(&ts->eax, ts->eax);

loc_544D65:
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(ts->ebx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x8A2B68);
	mov(mv, x86::mem(ts->eax, 4), ts->ebx);
	game::sub_61BA50(ts, mv);
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_544D42;
    }

loc_544D8C:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);

def_5449E6:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x4, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_544E60(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7775C8);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x8);
	lea(mv, &ts->eax, x86::mem(ts->esp, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x29A);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x24, 4), 0x0);
	game::sub_5449C0(ts, mv);
	add(&ts->esp, 0x10);
	cmp(&ts->eflags, ts->eax, 0x1);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	setl(ts->eflags, &ts->bl);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_544EE5;
    }

loc_544EC4:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(&ts->edx, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	game::j__free(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_544EC4;
    }

loc_544EE5:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(&ts->al, ts->bl);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x14);
	retn(mv, &ts->esp);

loc_7775C0:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x14, 4));
	goto sub_4DEF30;

SEH_566490:
	mov(&ts->eax, 0x7E3AE8);
	goto ___CxxFrameHandler;
}

void sub_544F00(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0x9);
	game::sub_544E60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_544F74;
    }
	push(mv, &ts->esp, 0xC);
	game::sub_544E60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_544F74;
    }
	push(mv, &ts->esp, 0x20);
	game::sub_544E60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_544F74;
    }
	push(mv, &ts->esp, 0x7);
	game::sub_544E60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_544F74;
    }
	mov(mv, &ts->eax, x86::mem(0x8389B0, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x3);
	push(mv, &ts->esp, 0x56);
	game::sub_50F0D0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_52A1A0(ts, mv);
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_544F74;
    }
	mov(mv, &ts->ecx, x86::mem(0x8389B0, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x3);
	push(mv, &ts->esp, 0x55);
	game::sub_50F0D0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_52A1A0(ts, mv);
	add(&ts->esp, 0x10);
	neg(&ts->al);
	sbb(&ts->al, ts->al);
	inc(&ts->al);
	retn(mv, &ts->esp);

loc_544F74:
	xor_(&ts->al, ts->al);
	retn(mv, &ts->esp);
}

void sub_544F80(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7779FB);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->esi, x86::mem(ts->ebx + 0x4, 4));
	mov(mv, x86::mem(ts->ebx, 4), 0x79BE30);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi, 4), ts->esi);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->esi);
	mov(mv, &ts->edi, x86::mem(0x7FA1B0, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x0);
	game::sub_440EC0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_544FC9;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->edi);
	goto loc_544FCB;

loc_544FC9:
	xor_(&ts->eax, ts->eax);

loc_544FCB:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	mov(mv, &ts->edi, x86::mem(0x7FA1B4, 4));
	game::sub_440EC0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_544FEC;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->edi);
	goto loc_544FEE;

loc_544FEC:
	xor_(&ts->eax, ts->eax);

loc_544FEE:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	mov(mv, &ts->edi, x86::mem(0x7FA1B8, 4));
	game::sub_440EC0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54500F;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->edi);
	goto loc_545011;

loc_54500F:
	xor_(&ts->eax, ts->eax);

loc_545011:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	mov(mv, &ts->edi, x86::mem(0x7FA1BC, 4));
	game::sub_440EC0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_545032;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->edi);
	goto loc_545034;

loc_545032:
	xor_(&ts->eax, ts->eax);

loc_545034:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	mov(mv, &ts->edi, x86::mem(0x7FA1C0, 4));
	game::sub_440EC0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_545055;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->edi);
	goto loc_545057;

loc_545055:
	xor_(&ts->eax, ts->eax);

loc_545057:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	mov(mv, &ts->edi, x86::mem(0x7FA1D8, 4));
	game::sub_440EC0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_545078;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->edi);
	goto loc_54507A;

loc_545078:
	xor_(&ts->eax, ts->eax);

loc_54507A:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	mov(mv, &ts->edi, x86::mem(0x7FA1B4, 4));
	game::sub_440EC0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54509B;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->edi);
	goto loc_54509D;

loc_54509B:
	xor_(&ts->eax, ts->eax);

loc_54509D:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	mov(mv, &ts->edi, x86::mem(0x7FA1C8, 4));
	game::sub_440EC0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5450BE;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->edi);
	goto loc_5450C0;

loc_5450BE:
	xor_(&ts->eax, ts->eax);

loc_5450C0:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	mov(mv, &ts->edi, x86::mem(0x7FA1CC, 4));
	game::sub_440EC0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5450E1;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->edi);
	goto loc_5450E3;

loc_5450E1:
	xor_(&ts->eax, ts->eax);

loc_5450E3:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	mov(mv, &ts->edi, x86::mem(0x7FA1D0, 4));
	game::sub_440EC0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_545104;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->edi);
	goto loc_545106;

loc_545104:
	xor_(&ts->eax, ts->eax);

loc_545106:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	mov(mv, &ts->edi, x86::mem(0x7FA1D4, 4));
	game::sub_440EC0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_545127;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->edi);
	goto loc_545129;

loc_545127:
	xor_(&ts->eax, ts->eax);

loc_545129:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	mov(mv, &ts->edi, x86::mem(0x7FA1DC, 4));
	game::sub_440EC0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54514A;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->edi);
	goto loc_54514C;

loc_54514A:
	xor_(&ts->eax, ts->eax);

loc_54514C:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	mov(mv, &ts->edi, x86::mem(0x7FA1E0, 4));
	game::sub_440EC0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54516D;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->edi);
	goto loc_54516F;

loc_54516D:
	xor_(&ts->eax, ts->eax);

loc_54516F:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	mov(mv, &ts->edi, x86::mem(0x7FA1E4, 4));
	game::sub_440EC0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_545190;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->edi);
	goto loc_545192;

loc_545190:
	xor_(&ts->eax, ts->eax);

loc_545192:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	mov(mv, &ts->edi, x86::mem(0x7FA1E8, 4));
	game::sub_440EC0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5451B3;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->edi);
	goto loc_5451B5;

loc_5451B3:
	xor_(&ts->eax, ts->eax);

loc_5451B5:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	mov(mv, &ts->edi, x86::mem(0x7FA1EC, 4));
	game::sub_440EC0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5451D6;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->edi);
	goto loc_5451D8;

loc_5451D6:
	xor_(&ts->eax, ts->eax);

loc_5451D8:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	mov(mv, &ts->edi, x86::mem(0x7FA1C4, 4));
	game::sub_440EC0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5451F9;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->edi);
	goto loc_5451FB;

loc_5451F9:
	xor_(&ts->eax, ts->eax);

loc_5451FB:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	mov(mv, &ts->edi, x86::mem(0x7FA1F0, 4));
	game::sub_440EC0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54521C;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->edi);
	goto loc_54521E;

loc_54521C:
	xor_(&ts->eax, ts->eax);

loc_54521E:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	mov(mv, &ts->edi, x86::mem(0x7FA1F4, 4));
	game::sub_440EC0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54523F;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->edi);
	goto loc_545241;

loc_54523F:
	xor_(&ts->eax, ts->eax);

loc_545241:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	mov(mv, &ts->edi, x86::mem(0x7FA1F8, 4));
	game::sub_440EC0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_545262;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->edi);
	goto loc_545264;

loc_545262:
	xor_(&ts->eax, ts->eax);

loc_545264:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	mov(mv, &ts->edi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->edi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_5452D0;
    }

loc_545277:
	mov(mv, &ts->eax, x86::mem(0x83898C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_545287;
    }
	mov(mv, &ts->eax, x86::mem(0x7FA1B0, 4));
	goto loc_5452B9;

loc_545287:
	mov(mv, &ts->eax, x86::mem(0x838990, 4));
	cmp(&ts->eflags, ts->eax, 0x6);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_545291;
    }
	jmp(x86::mem(0x5452E8, 4));

loc_545298:
	mov(mv, &ts->eax, x86::mem(0x7FA1B4, 4));
	goto loc_5452B9;

loc_54529F:
	mov(mv, &ts->eax, x86::mem(0x7FA1BC, 4));
	goto loc_5452B9;

loc_5452A6:
	mov(mv, &ts->eax, x86::mem(0x7FA1C0, 4));
	goto loc_5452B9;

loc_5452AD:
	mov(mv, &ts->eax, x86::mem(0x7FA1EC, 4));
	goto loc_5452B9;

def_545291:
	mov(mv, &ts->eax, x86::mem(0x7FA1B8, 4));

loc_5452B9:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DCC0(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5452D0;
    }
	mov(mv, &ts->edi, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->edi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_545277;
    }

loc_5452D0:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->ebx + 0xC, 4), ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->eax, ts->ebx);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_7779F0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x4);
	goto sub_4835C0;

SEH_544F80:
	mov(&ts->eax, 0x7E2E08);
	goto ___CxxFrameHandler;
}

void sub_545310(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_53A240(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_545328;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_545328:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_545330(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_545350(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_545348;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_545348:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_545350(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7772B8);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edi);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x38, 4));
	lea(mv, &ts->esi, x86::mem(ts->edi + 0x38, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_545399;
    }

loc_545380:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	game::j__free(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_545380;
    }

loc_545399:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->edi, 4), 0x79AFDC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_7772B0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_527770;

SEH_53AAC0:
	mov(&ts->eax, 0x7E2E50);
	goto ___CxxFrameHandler;
}

void sub_5453B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x9FF84A88);
	push(mv, &ts->esp, ts->eax);
	game::sub_495520(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_5453E9;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5453E9;
    }
	push(mv, &ts->esp, 0x9FF84A88);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_545400;
    }

loc_5453E9:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_545452;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x9FF84A88);
	game::sub_52C570(ts, mv);

loc_545400:
	mov(&ts->edi, ts->eax);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_545452;
    }
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x4C, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_545452;
    }
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_545410:
	push(mv, &ts->esp, 0x78F614);
	game::sub_505450(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54542E;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_545410;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_54542E:
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_545452;
    }
	cmp(mv, &ts->eflags, ts->esi, x86::mem(ts->edi + 0x54, 4));
	if (ts->eflags.zero) {
        goto loc_54544B;
    }
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->edi + 0x54, 4), ts->esi);
	game::sub_517720(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x54, 4));
	mov(mv, x86::mem(ts->ecx + 0x10, 4), 0x0);

loc_54544B:
	mov(mv, x86::mem(ts->esi + 0x10, 4), 0x0);

loc_545452:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_545460(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x9FF84A88);
	push(mv, &ts->esp, ts->eax);
	game::sub_4954E0(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_545499;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_545499;
    }
	push(mv, &ts->esp, 0x9FF84A88);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_5454B0;
    }

loc_545499:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_545502;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x9FF84A88);
	game::sub_52C570(ts, mv);

loc_5454B0:
	mov(&ts->edi, ts->eax);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_545502;
    }
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x4C, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_545502;
    }
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_5454C0:
	push(mv, &ts->esp, 0x79053C);
	game::sub_505450(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5454DE;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_5454C0;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_5454DE:
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_545502;
    }
	cmp(mv, &ts->eflags, ts->esi, x86::mem(ts->edi + 0x54, 4));
	if (ts->eflags.zero) {
        goto loc_5454FB;
    }
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->edi + 0x54, 4), ts->esi);
	game::sub_517720(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x54, 4));
	mov(mv, x86::mem(ts->ecx + 0x10, 4), 0x0);

loc_5454FB:
	mov(mv, x86::mem(ts->esi + 0x10, 4), 0x0);

loc_545502:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_545510(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4C, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_51F7E0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	game::sub_538080(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xB0, 4));
	game::sub_51F7E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x16C, 4));
	game::sub_538080(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54555F;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_545561;

loc_54555F:
	xor_(&ts->eax, ts->eax);

loc_545561:
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->edi + 0xC, 4));
	if (!ts->eflags.zero) {
        goto loc_545577;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x15C, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);
	goto loc_5455B6;

loc_545577:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_545583;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_545585;

loc_545583:
	xor_(&ts->eax, ts->eax);

loc_545585:
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->edi + 0xC, 4));
	if (!ts->eflags.zero) {
        goto loc_54559B;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x160, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);
	goto loc_5455B6;

loc_54559B:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x15C, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x160, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0x8);

loc_5455B6:
	mov(mv, &ts->ecx, x86::mem(0x838990, 4));
	xor_(&ts->eax, ts->eax);
	sub(&ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5455D8;
    }
	sub(&ts->ecx, 0x2);
	if (ts->eflags.zero) {
        goto loc_5455D1;
    }
	dec(&ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_5455EC;
    }
	mov(&ts->eax, 0xDF86227A);
	goto loc_5455EC;

loc_5455D1:
	mov(&ts->eax, 0xB6AAECF7);
	goto loc_5455EC;

loc_5455D8:
	mov(mv, &ts->eax, x86::mem(0x83898C, 4));
	dec(&ts->eax);
	neg(&ts->eax);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0x537CFAB5);
	add(&ts->eax, 0x25F0C994);

loc_5455EC:
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x1D4, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_5455FD;
    }
	mov(&ts->eax, 0x294D2A3);
	goto loc_54560C;

loc_5455FD:
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x1D5, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_54560C;
    }
	mov(&ts->eax, 0x24911E04);

loc_54560C:
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x42ADB44C);
	push(mv, &ts->esp, ts->eax);
	game::sub_495460(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54563A;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x2C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x6C9E933E);
	push(mv, &ts->esp, ts->edx);
	game::sub_495460(ts, mv);
	add(&ts->esp, 0xC);

loc_54563A:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB4, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xB4, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_54564E;
    }
	xor_(&ts->edi, ts->edi);
	goto loc_545654;

loc_54564E:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xBC, 4));

loc_545654:
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_545677;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x2C, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_50E530(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xD28B9316);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->ebx);

loc_545677:
	mov(mv, &ts->ecx, x86::mem(0x850078, 4));
	mov(&ts->eax, 0x1);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_5456E1;
    }
	cmp(mv, &ts->eflags, x86::mem(0x83898C, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_5456E1;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xC, 4));
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x1D4, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_5456A5;
    }
	mov(&ts->eax, 0x1D);
	goto loc_5456B4;

loc_5456A5:
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x1D7, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_5456B4;
    }
	mov(mv, &ts->eax, x86::mem(0x8389A8, 4));

loc_5456B4:
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_5456F2;
    }
	mov(mv, &ts->edi, x86::mem(ts->edi + 0x2C, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x85AD40);
	game::sub_514280(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, 0x380B632);
	push(mv, &ts->esp, ts->esi);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_5456E1:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x380B632);
	push(mv, &ts->esp, ts->edx);
	game::sub_4954E0(ts, mv);
	add(&ts->esp, 0x8);

loc_5456F2:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_545700(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x777748);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x18);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	push(mv, &ts->esp, 0x40);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->edi);
	game::j__malloc(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x8, 4));
	xor_(&ts->ebx, ts->ebx);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_545776;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x10, 4));
	mov(mv, x86::mem(ts->eax + 0x2C, 4), ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x38, 4));
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x20, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x21, 1), 0x1);
	mov(mv, x86::mem(ts->eax, 4), 0x79BE34);
	mov(mv, x86::mem(ts->eax + 0x30, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x34, 1), 0x1);
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	mov(&ts->esi, ts->eax);
	mov(mv, x86::mem(ts->eax + 0x22, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x23, 1), ts->bl);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->esi);
	goto loc_54577C;

loc_545776:
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	mov(&ts->esi, ts->ebx);

loc_54577C:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->ebp + 0x14, 1));
	neg(&ts->al);
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, x86::mem(ts->esp + 0x30, 4), ts->ebx);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0x29A);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_5449C0(ts, mv);
	mov(mv, &ts->dl, x86::mem(ts->ebp + 0x14, 1));
	xor_(&ts->ecx, ts->ecx);
	add(&ts->esp, 0x10);
	cmp(&ts->eflags, ts->dl, ts->bl);
	setz(ts->eflags, &ts->cl);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_5457FF;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (ts->eflags.zero) {
        goto loc_545803;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x38, 4));
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_5457D0:
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edi, 4), ts->edx);
	lea(mv, &ts->esi, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx + 0x4, 4), ts->edi);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi, 4), ts->edx);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_5457D0;
    }
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));
	goto loc_545803;

loc_5457FF:
	mov(mv, x86::mem(ts->esi + 0x22, 1), 0x1);

loc_545803:
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x4C, 4));
	game::sub_52ED80(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_545826;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0xC, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x24, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_545826;
    }
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->ecx);
	or_(mv, x86::mem(ts->eax + 0x1C, 4), 0x400000);

loc_545826:
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x1C4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	inc(&ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->edi + 0x1C4, 4), ts->esi);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_545868;
    }

loc_545847:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(&ts->edx, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	game::j__free(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_545847;
    }

loc_545868:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_777740:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x18, 4));
	goto sub_4DEF30;

SEH_54CCA0:
	mov(&ts->eax, 0x7E2FAC);
	goto ___CxxFrameHandler;
}

void sub_545880(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_544F00(ts, mv);
	push(mv, &ts->esp, 0x40);
	mov(mv, x86::mem(ts->esp + 0xF, 1), ts->al);
	game::j__malloc(ts, mv);
	xor_(&ts->ebx, ts->ebx);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(&ts->edx, 0x1);
	if (ts->eflags.zero) {
        goto loc_5458E0;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->eax + 0x2C, 4), ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x38, 4));
	mov(mv, x86::mem(ts->eax + 0xC, 4), 0x5E);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x20, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x21, 1), ts->dl);
	mov(mv, x86::mem(ts->eax, 4), 0x79BE34);
	mov(mv, x86::mem(ts->eax + 0x30, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x34, 1), ts->dl);
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	mov(mv, &ts->cl, x86::mem(ts->esp + 0xB, 1));
	mov(mv, x86::mem(ts->eax + 0x22, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0x23, 1), ts->dl);
	goto loc_5458E2;

loc_5458E0:
	xor_(&ts->eax, ts->eax);

loc_5458E2:
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	game::sub_52ED80(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_545905;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x24, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_545905;
    }
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->ecx);
	or_(mv, x86::mem(ts->eax + 0x1C, 4), 0x400000);

loc_545905:
	inc(mv, x86::mem(ts->esi + 0x1C4, 4));
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x8);
}

void sub_545920(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x777A18);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x14);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x40);
	mov(mv, x86::mem(ts->ebp - 0x18, 4), ts->ecx);
	game::j__malloc(ts, mv);
	xor_(&ts->ebx, ts->ebx);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_54598D;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x10, 4));
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x38, 4));
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x20, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x21, 1), 0x1);
	mov(mv, x86::mem(ts->eax, 4), 0x79BE34);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0x30, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x34, 1), 0x1);
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x22, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x23, 1), ts->bl);
	mov(mv, x86::mem(ts->ebp + 0x10, 4), ts->eax);
	goto loc_545990;

loc_54598D:
	mov(mv, x86::mem(ts->ebp + 0x10, 4), ts->ebx);

loc_545990:
	lea(mv, &ts->eax, x86::mem(ts->ebp - 0x20, 4));
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x20, 4));
	mov(mv, x86::mem(ts->ebp - 0x20, 4), ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x1C, 4), ts->ecx);
	push(mv, &ts->esp, 0x40);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), ts->ebx);
	mov(mv, x86::mem(ts->ebp - 0x10, 4), ts->ebx);
	game::sub_60FEE0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8389AC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->ebp - 0x14, 4), ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->edi, ts->eax);
	push(mv, &ts->esp, 0x40);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x8A2B68);
	game::sub_61BA30(ts, mv);
	mov(&ts->esi, ts->eax);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_545ACB;
    }
	goto loc_5459E0;

loc_5459E0:
	movsx(mv, &ts->eax, x86::mem(ts->esi + 0x4, 1));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->ebp - 0x14, 4));
	if (!ts->eflags.zero) {
        goto loc_545A76;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	xor_(&ts->ecx, ts->ecx);
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x5, 1));
	and_(&ts->ecx, 0x1F);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_545A76;
    }
	mov(mv, &ts->edx, x86::mem(0x8389B0, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x40);
	game::sub_50F0D0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_52A010(ts, mv);
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_545A76;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x5, 1));
	and_(&ts->al, 0x1F);
	cmp(&ts->eflags, ts->al, 0x16);
	if (!ts->eflags.zero) {
        goto loc_545A47;
    }
	push(mv, &ts->esp, 0x79C1B8);
	game::sub_43DB50(ts, mv);
	movzx(mv, &ts->ecx, x86::mem(ts->esi + 0x2, 2));
	movzx(mv, &ts->edx, x86::mem(ts->esi, 2));
	shl(&ts->ecx, 0x10);
	or_(&ts->ecx, ts->edx);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_545A47;
    }
	game::sub_570A30(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_545A76;
    }

loc_545A47:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	inc(&ts->ecx);
	push(mv, &ts->esp, 0x10);
	mov(mv, x86::mem(ts->ebp - 0x10, 4), ts->ecx);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_545A64;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ebx);
	goto loc_545A66;

loc_545A64:
	xor_(&ts->eax, ts->eax);

loc_545A66:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x1C, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x1C, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x20, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);

loc_545A76:
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x40);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x8A2B68);
	game::sub_61BA50(ts, mv);
	mov(&ts->esi, ts->eax);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_5459E0;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ebp - 0x10, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_545ACB;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x20, 4));
	lea(mv, &ts->edx, x86::mem(ts->ebp - 0x20, 4));
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (ts->eflags.zero) {
        goto loc_545AD2;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x10, 4));
	add(&ts->ecx, 0x38);

loc_545AA6:
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edi, 4), ts->edx);
	lea(mv, &ts->esi, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx + 0x4, 4), ts->edi);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi, 4), ts->edx);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x20, 4));
	lea(mv, &ts->edx, x86::mem(ts->ebp - 0x20, 4));
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_545AA6;
    }
	goto loc_545AD2;

loc_545ACB:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x10, 4));
	mov(mv, x86::mem(ts->eax + 0x22, 1), 0x1);

loc_545AD2:
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x10, 4));
	mov(mv, &ts->esi, x86::mem(ts->ebp - 0x18, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	game::sub_52ED80(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_545AFB;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0xC, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x24, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_545AFB;
    }
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->ecx);
	or_(mv, x86::mem(ts->eax + 0x1C, 4), 0x400000);

loc_545AFB:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1C4, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x20, 4));
	inc(&ts->edx);
	mov(mv, x86::mem(ts->esi + 0x1C4, 4), ts->edx);
	pop(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edx, x86::mem(ts->ebp - 0x20, 4));
	cmp(&ts->eflags, ts->eax, ts->edx);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_545B3F;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_545B20:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(&ts->edx, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	game::j__free(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x20, 4));
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x20, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_545B20;
    }

loc_545B3F:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0xC);

loc_777A10:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x20, 4));
	goto sub_4DEF30;

SEH_545920:
	mov(&ts->eax, 0x7E2E2C);
	goto ___CxxFrameHandler;
}

void sub_545B50(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4C, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_5385C0(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x739C4A1B);
	push(mv, &ts->esp, 0x739C4A1B);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x1C4, 4), 0x0);
	game::sub_545700(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x15C767C);
	push(mv, &ts->esp, 0x15C767C);
	push(mv, &ts->esp, 0x2);
	mov(&ts->ecx, ts->esi);
	game::sub_545700(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x4E6C2AF9);
	push(mv, &ts->esp, 0x4E6C2AF9);
	push(mv, &ts->esp, 0xB);
	mov(&ts->ecx, ts->esi);
	game::sub_545700(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xBB034EA6);
	push(mv, &ts->esp, 0xBB034EA6);
	push(mv, &ts->esp, 0xC);
	mov(&ts->ecx, ts->esi);
	game::sub_545700(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x28F7092);
	push(mv, &ts->esp, 0x28F7092);
	push(mv, &ts->esp, 0x9);
	mov(&ts->ecx, ts->esi);
	game::sub_545700(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79165861);
	push(mv, &ts->esp, 0x79165861);
	push(mv, &ts->esp, 0x7);
	mov(&ts->ecx, ts->esi);
	game::sub_545700(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x3DC6A111);
	push(mv, &ts->esp, 0xF69AC384);
	push(mv, &ts->esp, 0xE);
	mov(&ts->ecx, ts->esi);
	game::sub_545700(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x663437A9);
	push(mv, &ts->esp, 0x2CBB2D1C);
	push(mv, &ts->esp, 0xF);
	mov(&ts->ecx, ts->esi);
	game::sub_545700(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xDD35467);
	push(mv, &ts->esp, 0xC83DE19A);
	push(mv, &ts->esp, 0x20);
	mov(&ts->ecx, ts->esi);
	game::sub_545700(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x2ACED725);
	push(mv, &ts->esp, 0xA434A006);
	push(mv, &ts->esp, 0x10);
	mov(&ts->ecx, ts->esi);
	game::sub_545700(ts, mv);
	push(mv, &ts->esp, 0x294D2A3);
	push(mv, &ts->esp, 0x294D2A3);
	mov(&ts->ecx, ts->esi);
	game::sub_53A620(ts, mv);
	push(mv, &ts->esp, 0x24911E04);
	push(mv, &ts->esp, 0x24911E04);
	mov(&ts->ecx, ts->esi);
	game::sub_545880(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x945E9BC5);
	push(mv, &ts->esp, 0x945E9BC5);
	push(mv, &ts->esp, 0x6);
	mov(&ts->ecx, ts->esi);
	game::sub_545700(ts, mv);
	mov(mv, &ts->al, x86::mem(0x839BC0, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_545CA0;
    }
	mov(mv, x86::mem(0x839BC0, 1), 0x0);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50B840(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_545CD8;
    }
	mov(mv, x86::mem(ts->eax + 0x10, 4), 0x1D);
	goto loc_545CD8;

loc_545CA0:
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50B840(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_545CD7;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x10, 4), 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_545CD7;
    }
	push(mv, &ts->esp, ts->ebx);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50B840(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_545CD7;
    }
	mov(mv, x86::mem(ts->eax + 0x10, 4), 0x1);

loc_545CD7:
	pop(mv, &ts->esp, ts->ebx);

loc_545CD8:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50B840(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_545CF3;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x10, 4));
	goto loc_545CF5;

loc_545CF3:
	xor_(&ts->eax, ts->eax);

loc_545CF5:
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51F7A0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_545D0F;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_545D0D;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_545D0F;

loc_545D0D:
	xor_(&ts->eax, ts->eax);

loc_545D0F:
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_5386A0(ts, mv);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	game::sub_43BE80(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_545D30(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	game::sub_5385C0(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xF7363420);
	push(mv, &ts->esp, 0xF7363420);
	xor_(&ts->edi, ts->edi);
	push(mv, &ts->esp, 0x9);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x1C4, 4), ts->edi);
	game::sub_545700(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xC43176D4);
	push(mv, &ts->esp, 0xC43176D4);
	push(mv, &ts->esp, 0xC);
	mov(&ts->ecx, ts->esi);
	game::sub_545700(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x643BDE3C);
	push(mv, &ts->esp, 0x643BDE3C);
	push(mv, &ts->esp, 0x7);
	mov(&ts->ecx, ts->esi);
	game::sub_545700(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x10B5E8D1);
	push(mv, &ts->esp, 0x10B5E8D1);
	push(mv, &ts->esp, 0x20);
	mov(&ts->ecx, ts->esi);
	game::sub_545700(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8389B0, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x3);
	push(mv, &ts->esp, 0x56);
	game::sub_50F0D0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_52A1A0(ts, mv);
	add(&ts->esp, 0x10);
	mov(&ts->bl, ts->al);
	neg(&ts->bl);
	sbb(&ts->bl, ts->bl);
	push(mv, &ts->esp, 0x60);
	mov(&ts->ecx, 0x8392C0);
	inc(&ts->bl);
	game::sub_6102F0(ts, mv);
	movzx(mv, &ts->ecx, x86::mem(ts->eax + 0x2, 2));
	movzx(mv, &ts->edx, x86::mem(ts->eax, 2));
	shl(&ts->ecx, 0x10);
	or_(&ts->ecx, ts->edx);
	cmp(&ts->eflags, ts->ecx, 0xC8D313AC);
	push(mv, &ts->esp, 0x40);
	if (ts->eflags.zero) {
        goto loc_545E41;
    }
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_545E27;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x38, 4));
	mov(mv, x86::mem(ts->eax + 0xC, 4), 0x60);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x20, 1), 0x0);
	mov(mv, x86::mem(ts->eax + 0x21, 1), 0x1);
	mov(mv, x86::mem(ts->eax, 4), 0x79BE34);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), 0x1036E38E);
	mov(mv, x86::mem(ts->eax + 0x30, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x34, 1), 0x1);
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x22, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x23, 1), 0x1);
	goto loc_545E29;

loc_545E27:
	xor_(&ts->eax, ts->eax);

loc_545E29:
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	game::sub_52ED80(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_545EB1;
    }
	mov(&ts->ecx, 0x8F5DC19F);
	goto loc_545EA2;

loc_545E41:
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_545E8A;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x38, 4));
	mov(mv, x86::mem(ts->eax + 0xC, 4), 0x60);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x20, 1), 0x0);
	mov(mv, x86::mem(ts->eax + 0x21, 1), 0x1);
	mov(mv, x86::mem(ts->eax, 4), 0x79BE34);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), 0xF8111A17);
	mov(mv, x86::mem(ts->eax + 0x30, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x34, 1), 0x1);
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x22, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x23, 1), 0x1);
	goto loc_545E8C;

loc_545E8A:
	xor_(&ts->eax, ts->eax);

loc_545E8C:
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	game::sub_52ED80(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_545EB1;
    }
	mov(&ts->ecx, 0xF8111A17);

loc_545EA2:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x24, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_545EB1;
    }
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->ecx);
	or_(mv, x86::mem(ts->eax + 0x1C, 4), 0x400000);

loc_545EB1:
	inc(mv, x86::mem(ts->esi + 0x1C4, 4));
	mov(mv, &ts->eax, x86::mem(0x8389B0, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x3);
	push(mv, &ts->esp, 0x55);
	game::sub_50F0D0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_52A1A0(ts, mv);
	add(&ts->esp, 0x10);
	mov(&ts->bl, ts->al);
	neg(&ts->bl);
	sbb(&ts->bl, ts->bl);
	push(mv, &ts->esp, 0x5D);
	mov(&ts->ecx, 0x8392C0);
	inc(&ts->bl);
	game::sub_6102F0(ts, mv);
	movzx(mv, &ts->ecx, x86::mem(ts->eax + 0x2, 2));
	movzx(mv, &ts->edx, x86::mem(ts->eax, 2));
	shl(&ts->ecx, 0x10);
	or_(&ts->ecx, ts->edx);
	cmp(&ts->eflags, ts->ecx, 0xC8D313AC);
	push(mv, &ts->esp, 0x40);
	if (ts->eflags.zero) {
        goto loc_545F5C;
    }
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_545F42;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x38, 4));
	mov(mv, x86::mem(ts->eax + 0xC, 4), 0x5D);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x20, 1), 0x0);
	mov(mv, x86::mem(ts->eax + 0x21, 1), 0x1);
	mov(mv, x86::mem(ts->eax, 4), 0x79BE34);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), 0xE170F115);
	mov(mv, x86::mem(ts->eax + 0x30, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x34, 1), 0x1);
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x22, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x23, 1), 0x1);
	goto loc_545F44;

loc_545F42:
	xor_(&ts->eax, ts->eax);

loc_545F44:
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	game::sub_52ED80(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_545FCC;
    }
	mov(&ts->ecx, 0x2BDB0653);
	goto loc_545FBD;

loc_545F5C:
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_545FA5;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x38, 4));
	mov(mv, x86::mem(ts->eax + 0xC, 4), 0x5D);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x20, 1), 0x0);
	mov(mv, x86::mem(ts->eax + 0x21, 1), 0x1);
	mov(mv, x86::mem(ts->eax, 4), 0x79BE34);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), 0xB229FA7E);
	mov(mv, x86::mem(ts->eax + 0x30, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x34, 1), 0x1);
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x22, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x23, 1), 0x1);
	goto loc_545FA7;

loc_545FA5:
	xor_(&ts->eax, ts->eax);

loc_545FA7:
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	game::sub_52ED80(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_545FCC;
    }
	mov(&ts->ecx, 0x246DE0CB);

loc_545FBD:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x24, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_545FCC;
    }
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->ecx);
	or_(mv, x86::mem(ts->eax + 0x1C, 4), 0x400000);

loc_545FCC:
	inc(mv, x86::mem(ts->esi + 0x1C4, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	game::sub_51F7A0(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_545FF2;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x4, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_545FF0;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_545FF2;

loc_545FF0:
	xor_(&ts->eax, ts->eax);

loc_545FF2:
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	game::sub_5386A0(ts, mv);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->ebx + 0x4, 4));
	game::sub_43BE80(ts, mv);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->ebx + 0x2F, 1), 0x1);
	game::sub_52EB90(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x1D1, 1), 0x1);
	game::sub_545510(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_546030(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4C, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_5385C0(ts, mv);
	push(mv, &ts->esp, 0x4E6AE825);
	push(mv, &ts->esp, 0x2075EAF3);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x1C4, 4), 0x0);
	game::sub_545920(ts, mv);
	push(mv, &ts->esp, 0xB6D9A479);
	push(mv, &ts->esp, 0x695654A8);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_545920(ts, mv);
	push(mv, &ts->esp, 0xFF8DE430);
	push(mv, &ts->esp, 0x4C12BC51);
	push(mv, &ts->esp, 0x3);
	mov(&ts->ecx, ts->esi);
	game::sub_545920(ts, mv);
	push(mv, &ts->esp, 0xD2982464);
	push(mv, &ts->esp, 0xF7352706);
	push(mv, &ts->esp, 0x2);
	mov(&ts->ecx, ts->esi);
	game::sub_545920(ts, mv);
	push(mv, &ts->esp, 0x6E37CDC4);
	push(mv, &ts->esp, 0x6A2C32);
	push(mv, &ts->esp, 0x5);
	mov(&ts->ecx, ts->esi);
	game::sub_545920(ts, mv);
	push(mv, &ts->esp, 0xD24C5678);
	push(mv, &ts->esp, 0x16B5CE67);
	push(mv, &ts->esp, 0x4);
	mov(&ts->ecx, ts->esi);
	game::sub_545920(ts, mv);
	push(mv, &ts->esp, 0x687F411E);
	push(mv, &ts->esp, 0x43A00ACC);
	push(mv, &ts->esp, 0x7);
	mov(&ts->ecx, ts->esi);
	game::sub_545920(ts, mv);
	push(mv, &ts->esp, 0xC436F812);
	push(mv, &ts->esp, 0x8A07001);
	push(mv, &ts->esp, 0x6);
	mov(&ts->ecx, ts->esi);
	game::sub_545920(ts, mv);
	push(mv, &ts->esp, 0x4AA403DE);
	push(mv, &ts->esp, 0x4EF4919F);
	push(mv, &ts->esp, 0x9);
	mov(&ts->ecx, ts->esi);
	game::sub_545920(ts, mv);
	push(mv, &ts->esp, 0xB3AB0D65);
	push(mv, &ts->esp, 0xF8148554);
	push(mv, &ts->esp, 0x8);
	mov(&ts->ecx, ts->esi);
	game::sub_545920(ts, mv);
	push(mv, &ts->esp, 0xA16B73D);
	push(mv, &ts->esp, 0x8CA7C26B);
	push(mv, &ts->esp, 0xB);
	mov(&ts->ecx, ts->esi);
	game::sub_545920(ts, mv);
	push(mv, &ts->esp, 0x588A0A91);
	push(mv, &ts->esp, 0xF2173020);
	push(mv, &ts->esp, 0xA);
	mov(&ts->ecx, ts->esi);
	game::sub_545920(ts, mv);
	push(mv, &ts->esp, 0x7F61FEED);
	push(mv, &ts->esp, 0x36DA827B);
	push(mv, &ts->esp, 0xD);
	mov(&ts->ecx, ts->esi);
	game::sub_545920(ts, mv);
	push(mv, &ts->esp, 0xCEE2F041);
	push(mv, &ts->esp, 0x134C6830);
	push(mv, &ts->esp, 0xC);
	mov(&ts->ecx, ts->esi);
	game::sub_545920(ts, mv);
	push(mv, &ts->esp, 0x2909A9D3);
	push(mv, &ts->esp, 0x4EECE261);
	push(mv, &ts->esp, 0xF);
	mov(&ts->ecx, ts->esi);
	game::sub_545920(ts, mv);
	push(mv, &ts->esp, 0xB6D214E7);
	push(mv, &ts->esp, 0x694EC516);
	push(mv, &ts->esp, 0xE);
	mov(&ts->ecx, ts->esi);
	game::sub_545920(ts, mv);
	push(mv, &ts->esp, 0xD55AD357);
	push(mv, &ts->esp, 0x4BEDE425);
	push(mv, &ts->esp, 0x11);
	mov(&ts->ecx, ts->esi);
	game::sub_545920(ts, mv);
	push(mv, &ts->esp, 0xD4C40CEB);
	push(mv, &ts->esp, 0x192D84DA);
	push(mv, &ts->esp, 0x10);
	mov(&ts->ecx, ts->esi);
	game::sub_545920(ts, mv);
	push(mv, &ts->esp, 0x3F6DA129);
	push(mv, &ts->esp, 0x31CFC477);
	push(mv, &ts->esp, 0x13);
	mov(&ts->ecx, ts->esi);
	game::sub_545920(ts, mv);
	push(mv, &ts->esp, 0xB6DB5BFD);
	push(mv, &ts->esp, 0x69580C2C);
	push(mv, &ts->esp, 0x12);
	mov(&ts->ecx, ts->esi);
	game::sub_545920(ts, mv);
	push(mv, &ts->esp, 0x913AC36A);
	push(mv, &ts->esp, 0x694FEC66);
	push(mv, &ts->esp, 0x14);
	mov(&ts->ecx, ts->esi);
	game::sub_545920(ts, mv);
	push(mv, &ts->esp, 0x64CF99A3);
	push(mv, &ts->esp, 0xE22EB851);
	push(mv, &ts->esp, 0x15);
	mov(&ts->ecx, ts->esi);
	game::sub_545920(ts, mv);
	push(mv, &ts->esp, 0xB6CFF09B);
	push(mv, &ts->esp, 0x694CA0CA);
	push(mv, &ts->esp, 0x17);
	mov(&ts->ecx, ts->esi);
	game::sub_545920(ts, mv);
	push(mv, &ts->esp, 0xD6D115E4);
	push(mv, &ts->esp, 0x1B3A8DD3);
	push(mv, &ts->esp, 0x18);
	mov(&ts->ecx, ts->esi);
	game::sub_545920(ts, mv);
	push(mv, &ts->esp, 0x6FD3B71C);
	push(mv, &ts->esp, 0x960DCAB);
	push(mv, &ts->esp, 0x19);
	mov(&ts->ecx, ts->esi);
	game::sub_545920(ts, mv);
	push(mv, &ts->esp, 0x8E076BEC);
	push(mv, &ts->esp, 0xDD7673A);
	push(mv, &ts->esp, 0x1A);
	mov(&ts->ecx, ts->esi);
	game::sub_545920(ts, mv);
	push(mv, &ts->esp, 0x4A0C932D);
	push(mv, &ts->esp, 0x1BA508FC);
	push(mv, &ts->esp, 0x1B);
	mov(&ts->ecx, ts->esi);
	game::sub_545920(ts, mv);
	push(mv, &ts->esp, 0x34E6ADBA);
	push(mv, &ts->esp, 0x93EC1CE9);
	push(mv, &ts->esp, 0x16);
	mov(&ts->ecx, ts->esi);
	game::sub_545920(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50B840(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5462C9;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x10, 4), 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_5462C9;
    }
	mov(mv, &ts->ecx, x86::mem(0x8389A8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x838980);
	game::sub_50EFD0(ts, mv);
	mov(&ts->ebx, ts->eax);
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_5462A7;
    }
	mov(mv, &ts->edx, x86::mem(0x8389A8, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x838980);
	game::sub_521850(ts, mv);
	mov(&ts->ebx, ts->eax);
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5462C8;
    }

loc_5462A7:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50B840(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5462C8;
    }
	xor_(&ts->ecx, ts->ecx);
	mov(mv, &ts->cl, x86::mem(ts->ebx + 0x5, 1));
	and_(&ts->ecx, 0x1F);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ecx);

loc_5462C8:
	pop(mv, &ts->esp, ts->ebx);

loc_5462C9:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50B840(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5462E4;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x10, 4));
	goto loc_5462E6;

loc_5462E4:
	xor_(&ts->eax, ts->eax);

loc_5462E6:
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51F7A0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_546300;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5462FE;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_546300;

loc_5462FE:
	xor_(&ts->eax, ts->eax);

loc_546300:
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_5386A0(ts, mv);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	game::sub_43BE80(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x1D7, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x1D1, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0x6109E4B5);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_546330(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_546350(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_546348;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_546348:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_546350(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7772B8);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edi);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4C, 4));
	lea(mv, &ts->esi, x86::mem(ts->edi + 0x4C, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_546399;
    }

loc_546380:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	game::j__free(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_546380;
    }

loc_546399:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->edi, 4), 0x79AFDC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_7772B0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_527770;

SEH_53AAC0:
	mov(&ts->eax, 0x7E2E50);
	goto ___CxxFrameHandler;
}

void sub_5463B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x777A38);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x54);
	mov(mv, x86::mem(ts->ebp - 0x14, 4), ts->ecx);
	game::j__malloc(ts, mv);
	xor_(&ts->ebx, ts->ebx);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5463F7;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_53A6C0(ts, mv);
	mov(mv, x86::mem(ts->ebp + 0x10, 4), ts->eax);
	goto loc_5463FA;

loc_5463F7:
	mov(mv, x86::mem(ts->ebp + 0x10, 4), ts->ebx);

loc_5463FA:
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->edx, x86::mem(ts->ebp - 0x1C, 4));
	lea(mv, &ts->eax, x86::mem(ts->ebp - 0x1C, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->ebp - 0x1C, 4), ts->edx);
	mov(mv, x86::mem(ts->ebp - 0x18, 4), ts->eax);
	push(mv, &ts->esp, 0x1D);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), ts->ebx);
	game::sub_60FEE0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8389AC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->ebp - 0x10, 4), ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->edi, ts->eax);
	push(mv, &ts->esp, 0x1D);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x8A2B68);
	game::sub_61BA30(ts, mv);
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_5464A0;
    }
	goto loc_546440;

loc_546440:
	movsx(mv, &ts->eax, x86::mem(ts->esi + 0x4, 1));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->ebp - 0x10, 4));
	if (!ts->eflags.zero) {
        goto loc_546488;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	game::sub_539B70(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_546488;
    }
	push(mv, &ts->esp, 0x10);
	inc(&ts->ebx);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_546476;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0xC, 4), 0x0);
	goto loc_546478;

loc_546476:
	xor_(&ts->eax, ts->eax);

loc_546478:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x18, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x18, 4), ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->ebp - 0x1C, 4));
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->edx);

loc_546488:
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1D);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x8A2B68);
	game::sub_61BA50(ts, mv);
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_546440;
    }

loc_5464A0:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x10, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x48, 4), 0x3B83203);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_5464B4;
    }
	mov(mv, x86::mem(ts->eax + 0x22, 1), 0x0);
	goto loc_5464BC;

loc_5464B4:
	test(&ts->eflags, ts->ebx, ts->ebx);
	setz(ts->eflags, &ts->cl);
	mov(mv, x86::mem(ts->eax + 0x22, 1), ts->cl);

loc_5464BC:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x4C, 4));
	add(&ts->ecx, 0x4C);
	push(mv, &ts->esp, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5464E0;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0xC, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x24, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_5464E0;
    }
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->ecx);
	or_(mv, x86::mem(ts->eax + 0x1C, 4), 0x400000);

loc_5464E0:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x1C, 4));
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x1C, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_546510;
    }

loc_5464F1:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(&ts->edx, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	game::j__free(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x1C, 4));
	lea(mv, &ts->edx, x86::mem(ts->ebp - 0x1C, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_5464F1;
    }

loc_546510:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0xC);

loc_777A30:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x1C, 4));
	goto sub_4DEF30;

SEH_5463B0:
	mov(&ts->eax, 0x7E2E74);
	goto ___CxxFrameHandler;
}

void sub_546520(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8389AC, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	imul(&ts->eax, ts->eax, 0x890);
	add(mv, &ts->eax, x86::mem(0x8A1CCC, 4));
	if (ts->eflags.zero) {
        goto loc_54661A;
    }
	mov(mv, &ts->dl, x86::mem(ts->eax + 0x88A, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	setnz(ts->eflags, &ts->al);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_54661A;
    }
	push(mv, &ts->esp, 0xD2E889DA);
	push(mv, &ts->esp, 0x20EF339A);
	push(mv, &ts->esp, 0x148BBA);
	mov(&ts->ecx, ts->ebx);
	game::sub_5463B0(ts, mv);
	push(mv, &ts->esp, 0xD2E9A3E4);
	push(mv, &ts->esp, 0x20F04DA4);
	push(mv, &ts->esp, 0x15A5C4);
	mov(&ts->ecx, ts->ebx);
	game::sub_5463B0(ts, mv);
	push(mv, &ts->esp, 0x9D50E640);
	push(mv, &ts->esp, 0xBE399DF3);
	push(mv, &ts->esp, 0xA26AD820);
	mov(&ts->ecx, ts->ebx);
	game::sub_5463B0(ts, mv);
	push(mv, &ts->esp, 0xBE87BA52);
	push(mv, &ts->esp, 0x9F4D4412);
	push(mv, &ts->esp, 0xC3A1AC32);
	mov(&ts->ecx, ts->ebx);
	game::sub_5463B0(ts, mv);
	push(mv, &ts->esp, 0x3E867905);
	push(mv, &ts->esp, 0x28DE92C5);
	push(mv, &ts->esp, 0x66BA72E5);
	mov(&ts->ecx, ts->ebx);
	game::sub_5463B0(ts, mv);
	push(mv, &ts->esp, 0xFB7DFC68);
	push(mv, &ts->esp, 0x6C2FA9DB);
	push(mv, &ts->esp, 0x648);
	mov(&ts->ecx, ts->ebx);
	game::sub_5463B0(ts, mv);
	push(mv, &ts->esp, 0xD2EDDFFB);
	push(mv, &ts->esp, 0x3F85C14D);
	push(mv, &ts->esp, 0x19E1DB);
	mov(&ts->ecx, ts->ebx);
	game::sub_5463B0(ts, mv);
	push(mv, &ts->esp, 0x6322F230);
	push(mv, &ts->esp, 0x8B71EBF0);
	push(mv, &ts->esp, 0x29E75D1);
	mov(&ts->ecx, ts->ebx);
	game::sub_5463B0(ts, mv);
	push(mv, &ts->esp, 0xC49C11FE);
	push(mv, &ts->esp, 0xF6CA43BE);
	push(mv, &ts->esp, 0xBF3608C0);
	goto loc_54675D;

loc_54661A:
	push(mv, &ts->esp, 0xCF90EF1);
	push(mv, &ts->esp, 0xF75128B1);
	push(mv, &ts->esp, 0x352D08D1);
	mov(&ts->ecx, ts->ebx);
	game::sub_5463B0(ts, mv);
	push(mv, &ts->esp, 0xD2E7035E);
	push(mv, &ts->esp, 0x20EDAD1E);
	push(mv, &ts->esp, 0x13053E);
	mov(&ts->ecx, ts->ebx);
	game::sub_5463B0(ts, mv);
	push(mv, &ts->esp, 0x6B3D4F56);
	push(mv, &ts->esp, 0xF224AB29);
	push(mv, &ts->esp, 0x9536);
	mov(&ts->ecx, ts->ebx);
	game::sub_5463B0(ts, mv);
	push(mv, &ts->esp, 0x300B420B);
	push(mv, &ts->esp, 0xE38DE9E);
	push(mv, &ts->esp, 0x2B77FEB);
	mov(&ts->ecx, ts->ebx);
	game::sub_5463B0(ts, mv);
	push(mv, &ts->esp, 0x9D50E640);
	push(mv, &ts->esp, 0xBE399DF3);
	push(mv, &ts->esp, 0xA26AD820);
	mov(&ts->ecx, ts->ebx);
	game::sub_5463B0(ts, mv);
	push(mv, &ts->esp, 0x30786EB7);
	push(mv, &ts->esp, 0xEA60B4A);
	push(mv, &ts->esp, 0x324AC97);
	mov(&ts->ecx, ts->ebx);
	game::sub_5463B0(ts, mv);
	push(mv, &ts->esp, 0x412BD420);
	push(mv, &ts->esp, 0xE50D0313);
	push(mv, &ts->esp, 0x695FCE00);
	mov(&ts->ecx, ts->ebx);
	game::sub_5463B0(ts, mv);
	push(mv, &ts->esp, 0xA08A29B3);
	push(mv, &ts->esp, 0x9A00EB73);
	push(mv, &ts->esp, 0x48E25793);
	mov(&ts->ecx, ts->ebx);
	game::sub_5463B0(ts, mv);
	push(mv, &ts->esp, 0xD2ED7917);
	push(mv, &ts->esp, 0x36C04F4A);
	push(mv, &ts->esp, 0x197AF7);
	mov(&ts->ecx, ts->ebx);
	game::sub_5463B0(ts, mv);
	push(mv, &ts->esp, 0xFB7DFC68);
	push(mv, &ts->esp, 0x6C2FA9DB);
	push(mv, &ts->esp, 0x648);
	mov(&ts->ecx, ts->ebx);
	game::sub_5463B0(ts, mv);
	push(mv, &ts->esp, 0xD2EDDFFB);
	push(mv, &ts->esp, 0x3F85C14D);
	push(mv, &ts->esp, 0x19E1DB);
	mov(&ts->ecx, ts->ebx);
	game::sub_5463B0(ts, mv);
	push(mv, &ts->esp, 0x29F66022);
	push(mv, &ts->esp, 0x27EBD095);
	push(mv, &ts->esp, 0xDD544A02);
	mov(&ts->ecx, ts->ebx);
	game::sub_5463B0(ts, mv);
	push(mv, &ts->esp, 0xD2F037D5);
	push(mv, &ts->esp, 0x20F6E195);
	push(mv, &ts->esp, 0x1C39B5);
	mov(&ts->ecx, ts->ebx);
	game::sub_5463B0(ts, mv);
	push(mv, &ts->esp, 0xD2F2685B);
	push(mv, &ts->esp, 0x20F9121B);
	push(mv, &ts->esp, 0x1E6A3B);
	mov(&ts->ecx, ts->ebx);
	game::sub_5463B0(ts, mv);
	push(mv, &ts->esp, 0xD2F2F582);
	push(mv, &ts->esp, 0x20F99F42);
	push(mv, &ts->esp, 0x1EF762);

loc_54675D:
	mov(&ts->ecx, ts->ebx);
	game::sub_5463B0(ts, mv);
	push(mv, &ts->esp, 0x310BF423);
	push(mv, &ts->esp, 0xF3990B6);
	mov(&ts->ecx, ts->ebx);
	push(mv, &ts->esp, 0x3B83203);
	game::sub_5463B0(ts, mv);
	push(mv, &ts->esp, 0x1D);
	mov(&ts->ecx, 0x8392C0);
	game::sub_6102F0(ts, mv);
	mov(&ts->edi, ts->eax);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_5467E1;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xEBB03E66);
	mov(&ts->ecx, ts->edi);
	game::sub_61B500(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5467E1;
    }
	mov(mv, &ts->esi, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50B840(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5467BB;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_5467E1;
    }

loc_5467BB:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xEBB03E66);
	mov(&ts->ecx, ts->edi);
	game::sub_61B500(ts, mv);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->edi, ts->eax);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50B840(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5467E1;
    }
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->edi);

loc_5467E1:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50B840(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_546888;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_546888;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x50, 4));
	lea(mv, &ts->edi, x86::mem(ts->ebx + 0x50, 4));
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x1);

loc_546814:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54681D;
    }
	lea(mv, &ts->esi, x86::mem(ts->eax - 0x4, 4));
	goto loc_546820;

loc_54681D:
	xor_(&ts->esi, ts->esi);
	nop();

loc_546820:
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_546829;
    }
	lea(mv, &ts->eax, x86::mem(ts->edi - 0x4, 4));
	goto loc_54682B;

loc_546829:
	xor_(&ts->eax, ts->eax);

loc_54682B:
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_546893;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x4, 4));
	or_(&ts->ecx, 0xFFFFFFFF);
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_54685A;
    }
	mov(mv, &ts->al, x86::mem(ts->edx, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_54685A;
    }
	nop();

loc_546840:
	imul(&ts->ecx, ts->ecx, 0x21);
	cmp(&ts->eflags, ts->al, 0x61);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_54684D;
    }
	cmp(&ts->eflags, ts->al, 0x7A);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_54684D;
    }
	add(&ts->al, 0xE0);

loc_54684D:
	movzx(&ts->eax, ts->al);
	add(&ts->ecx, ts->eax);
	mov(mv, &ts->al, x86::mem(ts->edx + 0x1, 1));
	inc(&ts->edx);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_546840;
    }

loc_54685A:
	push(mv, &ts->esp, ts->ecx);
	game::sub_50B840(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54686C;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x10, 4));
	goto loc_54686E;

loc_54686C:
	xor_(&ts->eax, ts->eax);

loc_54686E:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x48, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_546881;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	inc(&ts->edx);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edx);
	goto loc_546814;

loc_546881:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	goto loc_54688A;

loc_546888:
	push(mv, &ts->esp, 0x0);

loc_54688A:
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x4C, 4));
	lea(mv, &ts->ecx, x86::mem(ts->ebx + 0x4C, 4));
	call(ts, mv, x86::mem(ts->edx + 0x20, 4));

loc_546893:
	mov(mv, &ts->eax, x86::mem(ts->ebx, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->ebx);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x4);
	jmp(x86::mem(ts->eax + 0x10, 4));
}

void sub_5468A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x150, 4));
	game::sub_51F7E0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x210, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x1B4, 4));
	game::sub_538080(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x4C, 4));
	mov(mv, &ts->edi, x86::mem(ts->edx + 0x8, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_610000(ts, mv);
	push(mv, &ts->esp, 0x4732DA07);
	mov(&ts->ecx, ts->edi);
	mov(&ts->ebx, ts->eax);
	game::sub_61B4E0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54690C;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x4732DA07);
	mov(&ts->ecx, ts->edi);
	game::sub_61B500(ts, mv);
	mov(&ts->edx, ts->eax);
	game::sub_4FF9D0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_54690A;
    }
	mov(&ts->edx, 0xC01A6F63);
	game::sub_4FF9D0(ts, mv);

loc_54690A:
	mov(&ts->ebx, ts->eax);

loc_54690C:
	mov(mv, &ts->eax, x86::mem(0x839BBC, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x838980);
	game::sub_50E960(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x134, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x794FD8);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537BE0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x154, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x154, 4));
	add(&ts->esp, 0x10);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5469EB;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x15C, 4));
	mov(mv, &ts->edi, x86::mem(ts->edx + 0x2C, 4));
	push(mv, &ts->esp, 0x4732DA07);
	mov(&ts->ecx, ts->edi);
	game::sub_61B4E0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->edi);
	push(mv, &ts->esp, 0xEB0101E2);
	if (ts->eflags.zero) {
        goto loc_546984;
    }
	game::sub_61B500(ts, mv);
	movsx(&ts->eax, ts->al);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x4732DA07);
	mov(&ts->ecx, ts->edi);
	game::sub_61B500(ts, mv);
	goto loc_546994;

loc_546984:
	game::sub_61B500(ts, mv);
	movsx(&ts->ecx, ts->al);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_610000(ts, mv);

loc_546994:
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x79C1C4);
	push(mv, &ts->esp, 0xD28B9316);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	add(&ts->esp, 0x14);
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_5469DA;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1D);
	mov(&ts->ecx, 0x85AD40);
	game::sub_514280(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7845D4);
	push(mv, &ts->esp, 0x380B632);
	push(mv, &ts->esp, ts->esi);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_5469DA:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x380B632);
	push(mv, &ts->esp, ts->edx);
	game::sub_4954E0(ts, mv);
	add(&ts->esp, 0x8);

loc_5469EB:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_5469F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x50, 4));
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0xAADE3025);
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_546F29;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x154, 4));
	cmp(&ts->eflags, ts->eax, 0x20006);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_546CE5;
    }
	if (ts->eflags.zero) {
        goto loc_546CCF;
    }
	cmp(&ts->eflags, ts->eax, 0x10003);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_546C33;
    }
	if (ts->eflags.zero) {
        goto loc_546BE1;
    }
	sub(&ts->eax, 0x0);
	if (ts->eflags.zero) {
        goto loc_546B52;
    }
	sub(&ts->eax, 0x10001);
	if (ts->eflags.zero) {
        goto loc_546AD6;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto def_546CF3;
    }
	push(mv, &ts->esp, 0x89BB9CEA);
	push(mv, &ts->esp, 0x2E40EADB);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x81);
	mov(&ts->ecx, ts->esi);
	game::sub_520FF0(ts, mv);
	push(mv, &ts->esp, 0x89BB9CEB);
	push(mv, &ts->esp, 0x2E40EADC);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x82);
	mov(&ts->ecx, ts->esi);
	game::sub_520FF0(ts, mv);
	push(mv, &ts->esp, 0x89BB9CEC);
	push(mv, &ts->esp, 0x2E40EADD);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x83);
	mov(&ts->ecx, ts->esi);
	game::sub_520FF0(ts, mv);
	push(mv, &ts->esp, 0x89BB9CED);
	push(mv, &ts->esp, 0x2E40EADE);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x84);
	mov(&ts->ecx, ts->esi);
	game::sub_520FF0(ts, mv);
	push(mv, &ts->esp, 0x89BB9CEE);
	push(mv, &ts->esp, 0x2E40EADF);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x85);
	mov(&ts->ecx, ts->esi);
	game::sub_520FF0(ts, mv);
	push(mv, &ts->esp, 0x89BB9CEF);
	push(mv, &ts->esp, 0x2E40EAE0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x86);
	goto loc_546E5F;

loc_546AD6:
	push(mv, &ts->esp, 0x89BB9CEA);
	push(mv, &ts->esp, 0xFE957F48);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79);
	mov(&ts->ecx, ts->esi);
	game::sub_520FF0(ts, mv);
	push(mv, &ts->esp, 0x89BB9CEB);
	push(mv, &ts->esp, 0xFE957F49);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x7A);
	mov(&ts->ecx, ts->esi);
	game::sub_520FF0(ts, mv);
	push(mv, &ts->esp, 0x89BB9CEC);
	push(mv, &ts->esp, 0xFE957F4A);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x7B);
	mov(&ts->ecx, ts->esi);
	game::sub_520FF0(ts, mv);
	push(mv, &ts->esp, 0x89BB9CED);
	push(mv, &ts->esp, 0xFE957F4B);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x7C);
	mov(&ts->ecx, ts->esi);
	game::sub_520FF0(ts, mv);
	push(mv, &ts->esp, 0x89BB9CEE);
	push(mv, &ts->esp, 0xFE957F4C);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x7D);
	mov(&ts->ecx, ts->esi);
	game::sub_520FF0(ts, mv);
	push(mv, &ts->esp, 0x89BB9CEF);
	push(mv, &ts->esp, 0xFE957F4D);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x7E);
	goto loc_546E5F;

loc_546B52:
	push(mv, &ts->esp, 0x52DED91D);
	push(mv, &ts->esp, 0x52DED91D);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x69);
	mov(&ts->ecx, ts->esi);
	game::sub_52FF60(ts, mv);
	push(mv, &ts->esp, 0xAC7937B4);
	push(mv, &ts->esp, 0xAC7937B4);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x71);
	mov(&ts->ecx, ts->esi);
	game::sub_52FF60(ts, mv);
	push(mv, &ts->esp, 0xDA88B711);
	push(mv, &ts->esp, 0xDA88B711);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x10001);
	mov(&ts->ecx, ts->esi);
	game::sub_52FF60(ts, mv);
	push(mv, &ts->esp, 0xC9A967C4);
	push(mv, &ts->esp, 0xC9A967C4);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x10002);
	mov(&ts->ecx, ts->esi);
	game::sub_52FF60(ts, mv);
	push(mv, &ts->esp, 0x2C710C4D);
	push(mv, &ts->esp, 0x2C710C4D);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x10003);
	mov(&ts->ecx, ts->esi);
	game::sub_52FF60(ts, mv);
	push(mv, &ts->esp, 0xFFA7D360);
	push(mv, &ts->esp, 0xFFA7D360);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x10004);
	mov(&ts->ecx, ts->esi);
	game::sub_52FF60(ts, mv);
	goto def_546CF3;

loc_546BE1:
	push(mv, &ts->esp, 0xB348F286);
	push(mv, &ts->esp, 0x13AE389C);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x20006);
	mov(&ts->ecx, ts->esi);
	game::sub_520FF0(ts, mv);
	push(mv, &ts->esp, 0x6);
	mov(&ts->ecx, 0x8392C0);
	game::sub_6102F0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_546C0F;
    }
	test(mv, &ts->eflags, x86::mem(ts->eax + 0x5, 1), 0xE0);
	if (!ts->eflags.zero) {
        goto loc_546C27;
    }

loc_546C0F:
	push(mv, &ts->esp, 0xB348F287);
	push(mv, &ts->esp, 0x13AE389B);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x20007);
	mov(&ts->ecx, ts->esi);
	game::sub_520FF0(ts, mv);

loc_546C27:
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0xB36E7C1E);
	goto def_546CF3;

loc_546C33:
	sub(&ts->eax, 0x10004);
	if (ts->eflags.zero) {
        goto loc_546C7D;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto def_546CF3;
    }
	push(mv, &ts->esp, 0xB348F286);
	push(mv, &ts->esp, 0x154FA42F);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x2000A);
	mov(&ts->ecx, ts->esi);
	game::sub_520FF0(ts, mv);
	push(mv, &ts->esp, 0xB348F287);
	push(mv, &ts->esp, 0x154FA430);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x2000B);
	mov(&ts->ecx, ts->esi);
	game::sub_520FF0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0xB36E7C1E);
	goto def_546CF3;

loc_546C7D:
	push(mv, &ts->esp, 0xB348F286);
	push(mv, &ts->esp, 0x5CED1BE2);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x20008);
	mov(&ts->ecx, ts->esi);
	game::sub_520FF0(ts, mv);
	push(mv, &ts->esp, 0x6);
	mov(&ts->ecx, 0x8392C0);
	game::sub_6102F0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_546CAB;
    }
	test(mv, &ts->eflags, x86::mem(ts->eax + 0x5, 1), 0xE0);
	if (!ts->eflags.zero) {
        goto loc_546CC3;
    }

loc_546CAB:
	push(mv, &ts->esp, 0xB348F287);
	push(mv, &ts->esp, 0x5CED1BE1);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x20009);
	mov(&ts->ecx, ts->esi);
	game::sub_520FF0(ts, mv);

loc_546CC3:
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0xB36E7C1E);
	goto def_546CF3;

loc_546CCF:
	push(mv, &ts->esp, 0x89BB9CEA);
	push(mv, &ts->esp, 0x13AE389C);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x89);
	goto loc_546E5F;

loc_546CE5:
	sub(&ts->eax, 0x20007);
	cmp(&ts->eflags, ts->eax, 0x4);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_546CF3;
    }
	jmp(x86::mem(0x546F2C, 4));

loc_546CFA:
	push(mv, &ts->esp, 0x89BB9CEA);
	push(mv, &ts->esp, 0xC813D5BB);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x89);
	mov(&ts->ecx, ts->esi);
	game::sub_520FF0(ts, mv);
	push(mv, &ts->esp, 0x89BB9CEB);
	push(mv, &ts->esp, 0xC813D5BC);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x8A);
	goto loc_546E5F;

loc_546D28:
	push(mv, &ts->esp, 0x89BB9CEA);
	push(mv, &ts->esp, 0x5CED1BE2);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x91);
	goto loc_546E5F;

loc_546D3E:
	push(mv, &ts->esp, 0x89BB9CEA);
	push(mv, &ts->esp, 0x392F21C1);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x91);
	mov(&ts->ecx, ts->esi);
	game::sub_520FF0(ts, mv);
	push(mv, &ts->esp, 0x89BB9CEB);
	push(mv, &ts->esp, 0x392F21C2);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x92);
	goto loc_546E5F;

loc_546D6C:
	push(mv, &ts->esp, 0x89BB9CEA);
	push(mv, &ts->esp, 0xFDE2B3CF);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x61);
	mov(&ts->ecx, ts->esi);
	game::sub_520FF0(ts, mv);
	push(mv, &ts->esp, 0x89BB9CEB);
	push(mv, &ts->esp, 0xFDE2B3D0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x62);
	mov(&ts->ecx, ts->esi);
	game::sub_520FF0(ts, mv);
	push(mv, &ts->esp, 0x89BB9CEC);
	push(mv, &ts->esp, 0xFDE2B3D1);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x63);
	mov(&ts->ecx, ts->esi);
	game::sub_520FF0(ts, mv);
	push(mv, &ts->esp, 0x89BB9CED);
	push(mv, &ts->esp, 0xFDE2B3D2);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x64);
	goto loc_546E5F;

loc_546DBE:
	push(mv, &ts->esp, 0x89BB9CEA);
	push(mv, &ts->esp, 0x4ADCF090);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x61);
	mov(&ts->ecx, ts->esi);
	game::sub_520FF0(ts, mv);
	push(mv, &ts->esp, 0x89BB9CEB);
	push(mv, &ts->esp, 0x4ADCF091);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x62);
	mov(&ts->ecx, ts->esi);
	game::sub_520FF0(ts, mv);
	push(mv, &ts->esp, 0x89BB9CEC);
	push(mv, &ts->esp, 0x4ADCF092);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x63);
	mov(&ts->ecx, ts->esi);
	game::sub_520FF0(ts, mv);
	push(mv, &ts->esp, 0x89BB9CED);
	push(mv, &ts->esp, 0x4ADCF093);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x64);
	mov(&ts->ecx, ts->esi);
	game::sub_520FF0(ts, mv);
	push(mv, &ts->esp, 0x89BB9CEE);
	push(mv, &ts->esp, 0x4ADCF094);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x65);
	mov(&ts->ecx, ts->esi);
	game::sub_520FF0(ts, mv);
	push(mv, &ts->esp, 0x89BB9CEF);
	push(mv, &ts->esp, 0x4ADCF095);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x66);
	mov(&ts->ecx, ts->esi);
	game::sub_520FF0(ts, mv);
	push(mv, &ts->esp, 0x89BB9CF0);
	push(mv, &ts->esp, 0x4ADCF096);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x67);
	mov(&ts->ecx, ts->esi);
	game::sub_520FF0(ts, mv);
	push(mv, &ts->esp, 0x89BB9CF1);
	push(mv, &ts->esp, 0x4ADCF097);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x68);

loc_546E5F:
	mov(&ts->ecx, ts->esi);
	game::sub_520FF0(ts, mv);

def_546CF3:
	movsx(mv, &ts->ecx, x86::mem(ts->esi + 0x156, 2));
	movzx(mv, &ts->edx, x86::mem(ts->ecx + (ts->esi) + 0x164, 1));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x20, 4));
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x1);
	mov(&ts->ecx, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_546EB7;
    }
	push(mv, &ts->esp, ts->ebx);
	game::sub_5453B0(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	mov(&ts->ecx, 0x838980);
	game::sub_521530(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, 0x2F5E7DA3);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->ebx);
	goto loc_546EBC;

loc_546EB7:
	game::sub_545460(ts, mv);

loc_546EBC:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_546ECF;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_546ED1;

loc_546ECF:
	xor_(&ts->eax, ts->eax);

loc_546ED1:
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0xC, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_546EE8;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xCC, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_546EE8:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_546EF4;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_546EF6;

loc_546EF4:
	xor_(&ts->eax, ts->eax);

loc_546EF6:
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0xC, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_546F0D;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xD0, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_546F0D:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xCC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xD0, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);

loc_546F29:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_546F40(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x5C, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x2C, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	game::sub_51F7E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xB4, 4));
	game::sub_538080(ts, mv);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_547041;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x4732DA07);
	mov(&ts->ecx, ts->edi);
	game::sub_61B4E0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	mov(&ts->ecx, ts->edi);
	if (ts->eflags.zero) {
        goto loc_546F9F;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x4732DA07);
	game::sub_61B500(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xD28B9316);
	push(mv, &ts->esp, ts->ebx);
	game::sub_495460(ts, mv);
	goto loc_546FB0;

loc_546F9F:
	game::sub_610000(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xD28B9316);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537B80(ts, mv);

loc_546FB0:
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->eax, 0x1);
	pop(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x380B632);
	push(mv, &ts->esp, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_547037;
    }
	game::sub_495520(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_50E5A0(ts, mv);
	mov(&ts->edi, ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x838980);
	game::sub_5214D0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_546FFA;
    }
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x8392C0);
	game::sub_6102F0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54701F;
    }

loc_546FFA:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x85AD40);
	game::sub_514280(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, 0x380B632);
	push(mv, &ts->esp, ts->esi);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x10);
	goto loc_547065;

loc_54701F:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x7980EC);
	push(mv, &ts->esp, 0x380B632);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0xC);
	goto loc_547065;

loc_547037:
	game::sub_4954E0(ts, mv);
	add(&ts->esp, 0x8);
	goto loc_547065;

loc_547041:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x380B632);
	push(mv, &ts->esp, ts->eax);
	game::sub_4954E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x2B5ABCF4);
	push(mv, &ts->esp, 0xD28B9316);
	push(mv, &ts->esp, ts->ecx);
	game::sub_495460(ts, mv);
	add(&ts->esp, 0x14);

loc_547065:
	mov(&ts->ecx, 0x838980);
	game::sub_521530(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x7FA1E0, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, 0x2F5E7DA3);
	push(mv, &ts->esp, ts->edx);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_547090(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(ts->esp + 0x4, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, 0xA936C3A2);
	if (ts->eflags.zero) {
        goto loc_5470BF;
    }
	mov(mv, &ts->eax, x86::mem(0x7FA1C0, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_495520(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x7FA1C0, 4));
	push(mv, &ts->esp, 0x89782734);
	push(mv, &ts->esp, ts->ecx);
	game::sub_495520(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_5470BF:
	mov(mv, &ts->edx, x86::mem(0x7FA1C0, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_4954E0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x7FA1C0, 4));
	push(mv, &ts->esp, 0x89782734);
	push(mv, &ts->esp, ts->eax);
	game::sub_4954E0(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);
}

void sub_5470F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x790038);
	mov(&ts->esi, ts->ecx);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_5471C1;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F758);
	push(mv, &ts->esp, 0x26F1F64B);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F758);
	push(mv, &ts->esp, 0x26F1F64C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x790EB0);
	push(mv, &ts->esp, 0xDF422345);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x50, 4));
	add(&ts->esp, 0x30);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_547156;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_547158;

loc_547156:
	xor_(&ts->eax, ts->eax);

loc_547158:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x58, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_547176;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x26F1F64B);
	push(mv, &ts->esp, ts->eax);
	game::sub_4954E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x26F1F64C);
	push(mv, &ts->esp, ts->ecx);
	goto loc_5471B9;

loc_547176:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_547182;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_547184;

loc_547182:
	xor_(&ts->eax, ts->eax);

loc_547184:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x58, 4), ts->eax);
	push(mv, &ts->esp, 0x26F1F64B);
	if (!ts->eflags.zero) {
        goto loc_5471A7;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_495520(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x26F1F64C);
	push(mv, &ts->esp, ts->eax);
	game::sub_4954E0(ts, mv);
	goto loc_5471BE;

loc_5471A7:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_495520(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x26F1F64C);
	push(mv, &ts->esp, ts->edx);

loc_5471B9:
	game::sub_495520(ts, mv);

loc_5471BE:
	add(&ts->esp, 0x10);

loc_5471C1:
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x58, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_54722E;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x48, 4));
	cmp(&ts->eflags, ts->eax, 0x23);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_547219;
    }
	cmp(&ts->eflags, ts->eax, 0x2E);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_547219;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5471EB;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_51F820(ts, mv);
	mov(&ts->ebx, ts->eax);
	goto loc_5471ED;

loc_5471EB:
	xor_(&ts->ebx, ts->ebx);

loc_5471ED:
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x2C, 4));
	game::sub_4FF9D0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_547203;
    }
	mov(&ts->edx, 0xC01A6F63);
	game::sub_4FF9D0(ts, mv);

loc_547203:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x5E7B09C9);
	push(mv, &ts->esp, ts->eax);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->ebx);
	goto loc_54722E;

loc_547219:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x2C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x5E7B09C9);
	push(mv, &ts->esp, ts->edx);
	game::sub_495460(ts, mv);
	add(&ts->esp, 0xC);

loc_54722E:
	cmp(mv, &ts->eflags, x86::mem(0x83898C, 4), 0x1);
	pop(mv, &ts->esp, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_54724E;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xF4B3B4FC);
	push(mv, &ts->esp, 0x42ADB44C);
	push(mv, &ts->esp, ts->eax);
	game::sub_495460(ts, mv);
	add(&ts->esp, 0xC);

loc_54724E:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_547250(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54732D;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x5C, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_5472B2;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x2C, 4));
	push(mv, &ts->esp, 0x4732DA07);
	game::sub_61B4E0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x2C, 4));
	if (ts->eflags.zero) {
        goto loc_54729B;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x4732DA07);
	game::sub_61B500(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xD28B9316);
	push(mv, &ts->esp, ts->eax);
	game::sub_495460(ts, mv);
	goto loc_5472AF;

loc_54729B:
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	game::sub_610000(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xD28B9316);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537B80(ts, mv);

loc_5472AF:
	add(&ts->esp, 0xC);

loc_5472B2:
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	game::sub_51F7E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ebx, 0x1);
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xB4, 4));
	game::sub_538080(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_54731A;
    }
	cmp(mv, &ts->eflags, x86::mem(0x83898C, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_54731A;
    }
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_54732B;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x2C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x110, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x48, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x85AD40);
	game::sub_514280(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, 0x380B632);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_54731A:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x380B632);
	push(mv, &ts->esp, ts->edx);
	game::sub_4954E0(ts, mv);
	add(&ts->esp, 0x8);

loc_54732B:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);

loc_54732D:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_547330(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x150, 4));
	game::sub_51F7E0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x210, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x1B4, 4));
	game::sub_538080(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x4C, 4));
	mov(mv, &ts->edi, x86::mem(ts->edx + 0x8, 4));
	push(mv, &ts->esp, 0x4732DA07);
	mov(&ts->ecx, ts->edi);
	game::sub_61B4E0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(&ts->ecx, ts->edi);
	if (ts->eflags.zero) {
        goto loc_54738D;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x4732DA07);
	game::sub_61B500(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x134, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	goto loc_5473A7;

loc_54738D:
	game::sub_610000(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x134, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0xC);

loc_5473A7:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x154, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x154, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_547461;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x15C, 4));
	mov(mv, &ts->edi, x86::mem(ts->edx + 0x2C, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x4732DA07);
	mov(&ts->ecx, ts->edi);
	game::sub_61B4E0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->edi);
	push(mv, &ts->esp, 0xEB0101E2);
	if (ts->eflags.zero) {
        goto loc_5473FA;
    }
	game::sub_61B500(ts, mv);
	movsx(&ts->eax, ts->al);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x4732DA07);
	mov(&ts->ecx, ts->edi);
	game::sub_61B500(ts, mv);
	goto loc_54740A;

loc_5473FA:
	game::sub_61B500(ts, mv);
	movsx(&ts->ecx, ts->al);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_610000(ts, mv);

loc_54740A:
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x79C1C4);
	push(mv, &ts->esp, 0xD28B9316);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	add(&ts->esp, 0x14);
	cmp(&ts->eflags, ts->eax, 0x1);
	pop(mv, &ts->esp, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_547450;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1D);
	mov(&ts->ecx, 0x85AD40);
	game::sub_514280(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7845D4);
	push(mv, &ts->esp, 0x380B632);
	push(mv, &ts->esp, ts->esi);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_547450:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x380B632);
	push(mv, &ts->esp, ts->edx);
	game::sub_4954E0(ts, mv);
	add(&ts->esp, 0x8);

loc_547461:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_547470(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	lea(mv, &ts->ebp, x86::mem(ts->edi + 0x50, 4));
	mov(&ts->esi, 0x23);
	mov(&ts->ebx, 0xC);

loc_547483:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	game::sub_53AEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->ebp);
	game::sub_631D20(ts, mv);
	inc(&ts->esi);
	dec(&ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_547483;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_5474A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	lea(mv, &ts->ebp, x86::mem(ts->edi + 0x940, 4));
	mov(&ts->esi, 0x23);
	mov(&ts->ebx, 0xC);

loc_5474B6:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	game::sub_53AEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->ebp);
	game::sub_631D20(ts, mv);
	inc(&ts->esi);
	dec(&ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_5474B6;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_5474D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0xC, 4));
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_547531;
    }
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	cmp(&ts->eflags, ts->edi, 0x4D);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_547530;
    }
	cmp(&ts->eflags, ts->edi, 0x5C);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_547530;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x48, 4));
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->esi, x86::mem(ts->ecx + 0x48, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero) {
        goto loc_5474F9;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_53B270(ts, mv);

loc_5474F9:
	push(mv, &ts->esp, 0x10);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_547520;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->edi);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x8);

loc_547520:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);

loc_547530:
	pop(mv, &ts->esp, ts->edi);

loc_547531:
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x8);
}

void sub_547540(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(&ts->esi, 0x40);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_547550:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	game::sub_53B0E0(ts, mv);
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, 0x43);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_547550;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_547570(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edi);
	game::sub_53B420(ts, mv);
	mov(&ts->ecx, ts->edi);
	game::sub_530160(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x48, 4));
	lea(mv, &ts->ebx, x86::mem(ts->edi + 0x48, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_54775E;
    }
	goto loc_5475A0;

loc_54759C:
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xC, 4));

loc_5475A0:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	cmp(&ts->eflags, ts->eax, 0x40);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5475F8;
    }
	cmp(&ts->eflags, ts->eax, 0x43);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_5475F8;
    }
	mov(&ts->esi, 0x40);

loc_5475B2:
	lea(mv, &ts->ebx, x86::mem(ts->edi + 0x940, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->ebx);
	game::sub_6102F0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5475D7;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x564B8CB6);
	mov(&ts->ecx, ts->eax);
	game::sub_61B500(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x40);
	if (ts->eflags.zero) {
        goto loc_5475DF;
    }

loc_5475D7:
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, 0x43);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_5475B2;
    }
	goto loc_5475F4;

loc_5475DF:
	mov(&ts->esi, 0x40);

loc_5475E4:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->ebx);
	game::sub_631D20(ts, mv);
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, 0x43);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_5475E4;
    }

loc_5475F4:
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xC, 4));

loc_5475F8:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x940, 4));
	game::sub_631D20(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_54774D;
    }
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x8, 4));
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_54774D;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	game::sub_501D70(ts, mv);
	mov(mv, &ts->dl, x86::mem(ts->ebx + 0x5, 1));
	shr(&ts->dl, 0x5);
	movsx(&ts->ecx, ts->dl);
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->ecx, 0x4);
	if (!ts->eflags.zero) {
        goto loc_54769F;
    }

loc_547642:
	xor_(&ts->eax, ts->eax);

loc_547644:
	mov(&ts->edi, ts->eax);

loc_547646:
	sub(mv, x86::mem(0x861E74, 4), ts->edi);
	if (!ts->eflags.sign) {
        goto loc_547658;
    }
	mov(mv, x86::mem(0x861E74, 4), 0x0);

loc_547658:
	mov(mv, &ts->edx, x86::mem(0x842EBC, 4));
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_547683;
    }
	mov(mv, &ts->esi, x86::mem(0x863480, 4));
	mov(&ts->ecx, 0x8406EC);
	nop();

loc_547670:
	cmp(mv, &ts->eflags, x86::mem(ts->ecx, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_5476FE;
    }
	inc(&ts->eax);
	add(&ts->ecx, 0x7F8);
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_547670;
    }

loc_547683:
	xor_(&ts->esi, ts->esi);

loc_547685:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	lea(mv, &ts->eax, x86::mem(ts->ecx - 0x3F, 4));
	cmp(&ts->eflags, ts->eax, 0xA);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_547698;
    }
	movzx(mv, &ts->eax, x86::mem(ts->eax + 0x5477CC, 1));
	jmp(x86::mem(0x5477C4, 4));

loc_54769F:
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_5476AF;
    }
	cmp(&ts->eflags, ts->eax, 0x4C);
	if (!ts->eflags.zero) {
        goto loc_547642;
    }
	mov(&ts->ecx, 0x1);
	goto loc_5476B8;

loc_5476AF:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_547642;
    }
	cmp(&ts->eflags, ts->eax, 0x57);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_547642;
    }

loc_5476B8:
	mov(mv, &ts->edx, x86::mem(0x83845C, 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*4), 4));
	lea(mv, &ts->eax, x86::mem(ts->edx + (ts->eax*8) - 0x28, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_547642;
    }
	cmp(&ts->eflags, ts->ecx, 0x4);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_5476D2;
    }
	jmp(x86::mem(0x5477D8, 4));

loc_5476D9:
	add(&ts->eax, 0x4);
	goto loc_5476EA;

loc_5476DE:
	add(&ts->eax, 0x10);
	goto loc_5476EA;

loc_5476E3:
	add(&ts->eax, 0x1C);
	goto loc_5476EA;

def_5476D2:
	xor_(&ts->eax, ts->eax);

loc_5476EA:
	movsx(mv, &ts->eax, x86::mem(ts->eax + 0x2, 2));
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_547644;
    }
	xor_(&ts->edi, ts->edi);
	goto loc_547646;

loc_5476FE:
	imul(&ts->eax, ts->eax, 0x7F8);
	add(&ts->eax, 0x8406E4);
	mov(&ts->esi, ts->eax);
	goto loc_547685;

def_547698:
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x434, 4));
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x0);
	game::sub_503B10(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(&ts->edx, 0x1);
	shl(&ts->edx, ts->cl);
	or_(mv, x86::mem(ts->eax, 4), ts->edx);

loc_547737:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x7F0, 4));
	add(&ts->eax, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->esi + 0x7F0, 4), ts->eax);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xC, 4));

loc_54774D:
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	lea(mv, &ts->ebx, x86::mem(ts->edi + 0x48, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	if (!ts->eflags.zero) {
        goto loc_54759C;
    }

loc_54775E:
	lea(mv, &ts->esi, x86::mem(ts->edi + 0x940, 4));
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x50, 4));
	game::sub_413440(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->esi);
	game::sub_4D8EC0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x2C, 4));
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->esi);
	add(&ts->ecx, 0x18);
	game::sub_503950(ts, mv);
	movsx(mv, &ts->eax, x86::mem(0x838149, 1));
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_54779E;
    }
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_458520(ts, mv);

loc_54779E:
	mov(mv, &ts->eax, x86::mem(ts->ebx, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5477BD;
    }

loc_5477A4:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	game::j__free(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebx, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_5477A4;
    }

loc_5477BD:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);
}

void sub_5477F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	cmp(&ts->eflags, ts->esi, 0x40);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5478F7;
    }
	cmp(&ts->eflags, ts->esi, 0x43);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_5478F7;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->esi);
	mov(&ts->ebx, 0x40);
	lea(mv, &ts->ebp, x86::mem(ts->edi + 0x940, 4));
	goto loc_547820;

loc_547820:
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->ebp);
	game::sub_6102F0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54783F;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x564B8CB6);
	mov(&ts->ecx, ts->eax);
	game::sub_61B500(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x40);
	if (ts->eflags.zero) {
        goto loc_54788B;
    }

loc_54783F:
	inc(&ts->ebx);
	cmp(&ts->eflags, ts->ebx, 0x43);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_547820;
    }
	mov(&ts->ecx, ts->edi);
	game::sub_521580(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_54788B;
    }
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ebx, x86::mem(ts->edi + 0x50, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->ebx);
	game::sub_631D20(ts, mv);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	game::sub_53B0E0(ts, mv);

loc_547865:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->ebp);
	game::sub_6102F0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5478E8;
    }
	push(mv, &ts->esp, 0x10);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5478D6;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), 0x0);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->esi);
	goto loc_5478D8;

loc_54788B:
	mov(&ts->esi, 0x40);
	lea(mv, &ts->ebx, x86::mem(ts->edi + 0x50, 4));

loc_547893:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->ebx);
	game::sub_631D20(ts, mv);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	game::sub_50EE90(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5478AD;
    }
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->esi);

loc_5478AD:
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, 0x43);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_547893;
    }
	mov(&ts->esi, 0x40);

loc_5478B8:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	game::sub_53B0E0(ts, mv);
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, 0x43);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_5478B8;
    }
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x14, 4));
	cmp(&ts->eflags, ts->esi, 0x40);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5478E8;
    }
	cmp(&ts->eflags, ts->esi, 0x43);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_5478E8;
    }
	goto loc_547865;

loc_5478D6:
	xor_(&ts->eax, ts->eax);

loc_5478D8:
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x4C, 4));
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x48, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);

loc_5478E8:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ebx);
	game::sub_4D8EC0(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);

loc_5478F7:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_547900(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x20);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x28, 4));
	test(&ts->eflags, ts->ebx, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_5479EE;
    }
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x50);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_54794C;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x85AD2C);
	push(mv, &ts->esp, 0x85AD2C);
	push(mv, &ts->esp, 0x85AD2C);
	push(mv, &ts->esp, 0x85AD2C);
	mov(&ts->ecx, ts->edi);
	game::sub_51E1B0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x79B5B8);
	mov(mv, x86::mem(ts->edi + 0x4C, 4), ts->ebx);
	goto loc_54794E;

loc_54794C:
	xor_(&ts->edi, ts->edi);

loc_54794E:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x15C, 4));
	inc(&ts->edx);
	mov(&ts->eax, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x79C1DC);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x15C, 4), ts->edx);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_4953C0(ts, mv);
	mov(&ts->edx, ts->eax);
	add(&ts->esp, 0x18);
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_547992;
    }
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->edi + 0x2C, 4), ts->edx);

loc_547992:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x15C, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x79C1CC);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_4953C0(ts, mv);
	mov(&ts->edx, ts->eax);
	add(&ts->esp, 0x18);
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_5479CD;
    }
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->edi + 0x30, 4), ts->edx);

loc_5479CD:
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x154, 4));
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x150, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	pop(mv, &ts->esp, ts->edi);

loc_5479EE:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp, 0x4);
}

void sub_547A00(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x38);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0xE);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x8, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x164, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x79C258);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x78F694);
	mov(mv, x86::mem(ts->esp + 0x24, 4), 0x79C248);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0x78F688);
	mov(mv, x86::mem(ts->esp + 0x40, 4), 0x79C238);
	mov(mv, x86::mem(ts->esp + 0x3C, 4), 0x42380000);
	mov(mv, x86::mem(ts->esp + 0x30, 4), 0x3F800000);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x34, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x38, 4), 0x3E4CCCCD);
	game::sub_540C10(ts, mv);
	push(mv, &ts->esp, 0x79C238);
	game::sub_505450(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_537A60(ts, mv);
	mov(mv, x86::mem(ts->edi + 0x44, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x48, 4));
	add(&ts->esp, 0xC);
	mov(mv, x86::mem(ts->edi + 0x48, 4), ts->eax);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x1B0, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x78F674);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x78F660);
	mov(mv, x86::mem(ts->esp + 0x24, 4), 0x79C224);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0x78F650);
	mov(mv, x86::mem(ts->esp + 0x40, 4), 0x79C210);
	game::sub_540C10(ts, mv);
	push(mv, &ts->esp, 0x79C210);
	game::sub_505450(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_537A60(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->edi + 0x44, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x40, 4));
	add(&ts->esi, 0x1FC);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->edi + 0x48, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x78F63C);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x78F62C);
	mov(mv, x86::mem(ts->esp + 0x24, 4), 0x79C1FC);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0x78F61C);
	mov(mv, x86::mem(ts->esp + 0x40, 4), 0x79C1E8);
	game::sub_540C10(ts, mv);
	push(mv, &ts->esp, 0x79C1E8);
	game::sub_505450(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_537A60(ts, mv);
	add(&ts->esp, 0xC);
	mov(mv, x86::mem(ts->esi + 0x44, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x3C, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x48, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x38);
	retn(mv, &ts->esp);
}

void sub_547B60(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x28);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x83855D, 1), 0x0);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x160, 1), 0x0);
	mov(&ts->ebp, 0x1);
	goto loc_547B84;

loc_547B80:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));

loc_547B84:
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x4, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x79C268);
	game::sub_50B990(ts, mv);
	xor_(&ts->ebx, ts->ebx);
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	mov(&ts->edi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_547BB6;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_547BB6;
    }
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_547BC9;
    }

loc_547BB6:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_547C2B;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	game::sub_52C570(ts, mv);

loc_547BC9:
	mov(&ts->edi, ts->eax);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_547C2B;
    }
	mov(&ts->edx, 0x78FC44);
	or_(&ts->ecx, 0xFFFFFFFF);
	mov(&ts->al, 0x48);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_547BE0:
	imul(&ts->ecx, ts->ecx, 0x21);
	cmp(&ts->eflags, ts->al, 0x61);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_547BED;
    }
	cmp(&ts->eflags, ts->al, 0x7A);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_547BED;
    }
	add(&ts->al, 0xE0);

loc_547BED:
	movzx(&ts->eax, ts->al);
	add(&ts->ecx, ts->eax);
	mov(mv, &ts->al, x86::mem(ts->edx + 0x1, 1));
	inc(&ts->edx);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_547BE0;
    }
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x4C, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_547C2B;
    }

loc_547C01:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x30, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_547C0F;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_547C01;
    }
	goto loc_547C2B;

loc_547C0F:
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_547C2B;
    }
	cmp(mv, &ts->eflags, ts->esi, x86::mem(ts->edi + 0x54, 4));
	if (ts->eflags.zero) {
        goto loc_547C28;
    }
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->edi + 0x54, 4), ts->esi);
	game::sub_517720(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x54, 4));
	mov(mv, x86::mem(ts->ecx + 0x10, 4), ts->ebx);

loc_547C28:
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ebx);

loc_547C2B:
	inc(&ts->ebp);
	cmp(&ts->eflags, ts->ebp, 0x4);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_547B80;
    }
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x3C, 4));
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_547E1C;
    }
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x150, 4));
	lea(mv, &ts->esi, x86::mem(ts->ebp + 0x150, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero) {
        goto loc_547C72;
    }

loc_547C55:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->eax - 0x4, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_547C6C;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->edx, 4));

loc_547C6C:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_547C55;
    }

loc_547C72:
	mov(mv, x86::mem(ts->ebp + 0x15C, 4), ts->ebx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x8, 4));
	add(&ts->edi, 0xC);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x3C, 4), ts->edi);

loc_547C86:
	cmp(mv, &ts->eflags, ts->ebx, x86::mem(ts->esp + 0x14, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_547C9B;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edi);
	game::sub_547900(ts, mv);
	goto loc_547E07;

loc_547C9B:
	lea(mv, &ts->ebp, x86::mem(ts->ebx + 0x1, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x79C1DC);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esp + 0x28, 1));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->edi, x86::mem(ts->edx + 0x4, 4));
	add(&ts->esp, 0x10);
	or_(&ts->esi, 0xFFFFFFFF);
	test(&ts->eflags, ts->al, ts->al);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	if (ts->eflags.zero) {
        goto loc_547CEA;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_547CD0:
	imul(&ts->esi, ts->esi, 0x21);
	cmp(&ts->eflags, ts->al, 0x61);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_547CDD;
    }
	cmp(&ts->eflags, ts->al, 0x7A);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_547CDD;
    }
	add(&ts->al, 0xE0);

loc_547CDD:
	movzx(&ts->eax, ts->al);
	add(&ts->esi, ts->eax);
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x1, 1));
	inc(&ts->ecx);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_547CD0;
    }

loc_547CEA:
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_547D07;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_547D07;
    }
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_547D1E;
    }

loc_547D07:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_547D56;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->esi);
	game::sub_52C570(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_547D56;
    }

loc_547D1E:
	mov(mv, &ts->ecx, x86::mem(0x8384D4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_547D2E;
    }
	test(mv, &ts->eflags, x86::mem(ts->eax + 0x1C, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_547D35;
    }

loc_547D2E:
	or_(mv, x86::mem(ts->eax + 0x1C, 4), 0x400001);

loc_547D35:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x18, 4), 0x5);
	if (!ts->eflags.zero) {
        goto loc_547D56;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x64, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x60, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_547D56;
    }
	mov(&ts->esi, ts->eax);

loc_547D47:
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edx + 0x4, 4));
	add(&ts->esp, 0x4);
	dec(&ts->esi);
	if (!ts->eflags.zero) {
        goto loc_547D47;
    }

loc_547D56:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x79C1CC);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esp + 0x28, 1));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->edi, x86::mem(ts->edx + 0x4, 4));
	add(&ts->esp, 0x10);
	or_(&ts->esi, 0xFFFFFFFF);
	test(&ts->eflags, ts->al, ts->al);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	if (ts->eflags.zero) {
        goto loc_547D9B;
    }

loc_547D81:
	imul(&ts->esi, ts->esi, 0x21);
	cmp(&ts->eflags, ts->al, 0x61);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_547D8E;
    }
	cmp(&ts->eflags, ts->al, 0x7A);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_547D8E;
    }
	add(&ts->al, 0xE0);

loc_547D8E:
	movzx(&ts->eax, ts->al);
	add(&ts->esi, ts->eax);
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x1, 1));
	inc(&ts->ecx);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_547D81;
    }

loc_547D9B:
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_547DB8;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_547DB8;
    }
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_547DCF;
    }

loc_547DB8:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_547E07;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->esi);
	game::sub_52C570(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_547E07;
    }

loc_547DCF:
	mov(mv, &ts->ecx, x86::mem(0x8384D4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_547DDF;
    }
	test(mv, &ts->eflags, x86::mem(ts->eax + 0x1C, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_547DE6;
    }

loc_547DDF:
	or_(mv, x86::mem(ts->eax + 0x1C, 4), 0x400001);

loc_547DE6:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x18, 4), 0x5);
	if (!ts->eflags.zero) {
        goto loc_547E07;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x64, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x60, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_547E07;
    }
	mov(&ts->esi, ts->eax);

loc_547DF8:
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edx + 0x4, 4));
	add(&ts->esp, 0x4);
	dec(&ts->esi);
	if (!ts->eflags.zero) {
        goto loc_547DF8;
    }

loc_547E07:
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x3C, 4));
	inc(&ts->ebx);
	add(&ts->edi, 0x5C);
	cmp(&ts->eflags, ts->ebx, 0x4);
	mov(mv, x86::mem(ts->esp + 0x3C, 4), ts->edi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_547C86;
    }

loc_547E1C:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x28);
	retn(mv, &ts->esp, 0x4);
}

void sub_547E30(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x38);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ebx, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0xE);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x4, 4));
	xor_(&ts->edi, ts->edi);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	lea(mv, &ts->esi, x86::mem(ts->ebx + 0x14C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x79C30C);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0x79C2FC);
	mov(mv, x86::mem(ts->esp + 0x24, 4), 0x79C2E8);
	mov(mv, x86::mem(ts->esp + 0x44, 4), 0x79C2D4);
	mov(mv, x86::mem(ts->esp + 0x40, 4), 0x42380000);
	mov(mv, x86::mem(ts->esp + 0x34, 4), 0x3F800000);
	mov(mv, x86::mem(ts->esp + 0x30, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x38, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x3C, 4), 0x3E4CCCCD);
	game::sub_540C10(ts, mv);
	push(mv, &ts->esp, 0x79C2D4);
	game::sub_505450(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_537A60(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x44, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4C, 4));
	add(&ts->esp, 0xC);
	mov(mv, x86::mem(ts->esi + 0x48, 4), ts->eax);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	lea(mv, &ts->esi, x86::mem(ts->ebx + 0x198, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x79C2C0);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0x79C2AC);
	mov(mv, x86::mem(ts->esp + 0x24, 4), 0x79C294);
	mov(mv, x86::mem(ts->esp + 0x44, 4), 0x79C27C);
	game::sub_540C10(ts, mv);
	push(mv, &ts->esp, 0x79C27C);
	game::sub_505450(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_537A60(ts, mv);
	add(&ts->esp, 0xC);
	mov(mv, x86::mem(ts->esi + 0x44, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x40, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x48, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x38);
	retn(mv, &ts->esp);
}

void sub_547F30(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54800A;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x5C, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_547F8F;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x2C, 4));
	push(mv, &ts->esp, 0x4732DA07);
	game::sub_61B4E0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x2C, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	if (ts->eflags.zero) {
        goto loc_547F7B;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x4732DA07);
	game::sub_61B500(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xD28B9316);
	push(mv, &ts->esp, ts->ebx);
	game::sub_495460(ts, mv);
	goto loc_547F8C;

loc_547F7B:
	game::sub_610000(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xD28B9316);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537B80(ts, mv);

loc_547F8C:
	add(&ts->esp, 0xC);

loc_547F8F:
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	game::sub_51F7E0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ebx, 0x1);
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xB4, 4));
	game::sub_538080(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_547FF7;
    }
	cmp(mv, &ts->eflags, x86::mem(0x83898C, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_547FF7;
    }
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_548008;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x2C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x110, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x48, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x85AD40);
	game::sub_514280(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, 0x380B632);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_547FF7:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x380B632);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4954E0(ts, mv);
	add(&ts->esp, 0x8);

loc_548008:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);

loc_54800A:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_548010(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0xD8EA6D2F);
	push(mv, &ts->esp, 0x745EE753);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, 0x9A);
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0x71345941);
	game::sub_53BC90(ts, mv);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x437E4111);
	push(mv, &ts->esp, 0x5D41FAC);
	push(mv, &ts->esp, 0x9B);
	mov(&ts->ecx, ts->esi);
	game::sub_53BC90(ts, mv);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x2225348F);
	push(mv, &ts->esp, 0x759C2BCA);
	push(mv, &ts->esp, 0x9D);
	mov(&ts->ecx, ts->esi);
	game::sub_53BC90(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50B840(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54807B;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x10, 4));
	goto loc_54807D;

loc_54807B:
	xor_(&ts->eax, ts->eax);

loc_54807D:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4C, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x20, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x5978FC5F);
	push(mv, &ts->esp, ts->eax);
	game::sub_4954E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDF86227A);
	push(mv, &ts->esp, 0x42ADB44C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_495460(ts, mv);
	add(&ts->esp, 0x14);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_5480B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x790038);
	mov(&ts->esi, ts->ecx);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_548182;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F758);
	push(mv, &ts->esp, 0x26F1F64B);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F758);
	push(mv, &ts->esp, 0x26F1F64C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x790EB0);
	push(mv, &ts->esp, 0xDF422345);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x50, 4));
	add(&ts->esp, 0x30);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_548117;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_548119;

loc_548117:
	xor_(&ts->eax, ts->eax);

loc_548119:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x58, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_548137;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x26F1F64B);
	push(mv, &ts->esp, ts->eax);
	game::sub_4954E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x26F1F64C);
	push(mv, &ts->esp, ts->ecx);
	goto loc_54817A;

loc_548137:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_548143;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_548145;

loc_548143:
	xor_(&ts->eax, ts->eax);

loc_548145:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x58, 4), ts->eax);
	push(mv, &ts->esp, 0x26F1F64B);
	if (!ts->eflags.zero) {
        goto loc_548168;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_495520(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x26F1F64C);
	push(mv, &ts->esp, ts->eax);
	game::sub_4954E0(ts, mv);
	goto loc_54817F;

loc_548168:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_495520(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x26F1F64C);
	push(mv, &ts->esp, ts->edx);

loc_54817A:
	game::sub_495520(ts, mv);

loc_54817F:
	add(&ts->esp, 0x10);

loc_548182:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x58, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_5481EF;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x48, 4));
	cmp(&ts->eflags, ts->eax, 0x23);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5481DA;
    }
	cmp(&ts->eflags, ts->eax, 0x2E);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_5481DA;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5481AB;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_51F820(ts, mv);
	mov(&ts->ebx, ts->eax);
	goto loc_5481AD;

loc_5481AB:
	xor_(&ts->ebx, ts->ebx);

loc_5481AD:
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x2C, 4));
	game::sub_4FF9D0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_5481C3;
    }
	mov(&ts->edx, 0xC01A6F63);
	game::sub_4FF9D0(ts, mv);

loc_5481C3:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x5E7B09C9);
	push(mv, &ts->esp, ts->eax);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_5481DA:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x2C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x5E7B09C9);
	push(mv, &ts->esp, ts->edx);
	game::sub_495460(ts, mv);
	add(&ts->esp, 0xC);

loc_5481EF:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_548200(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x50);
	mov(&ts->esi, ts->ecx);
	game::j__malloc(ts, mv);
	xor_(&ts->ebx, ts->ebx);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(&ts->edi, 0x3F800000);
	if (ts->eflags.zero) {
        goto loc_548267;
    }
	mov(mv, x86::mem(ts->eax + 0xC, 4), 0x550681A4);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x20, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x21, 1), 0x1);
	mov(mv, x86::mem(ts->eax + 0x23, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), 0x6A4C46A6);
	mov(mv, x86::mem(ts->eax + 0x30, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x34, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x38, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x3C, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x40, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x44, 1), 0x1);
	mov(mv, x86::mem(ts->eax + 0x45, 1), ts->bl);
	mov(mv, x86::mem(ts->eax, 4), 0x79B6E4);
	mov(mv, x86::mem(ts->eax + 0x48, 4), 0x2);
	mov(mv, x86::mem(ts->eax + 0x4C, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x22, 1), ts->bl);
	goto loc_548269;

loc_548267:
	xor_(&ts->eax, ts->eax);

loc_548269:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	push(mv, &ts->esp, 0x50);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5482CB;
    }
	mov(mv, x86::mem(ts->eax + 0xC, 4), 0x55778E5A);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x20, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x21, 1), 0x1);
	mov(mv, x86::mem(ts->eax + 0x23, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), 0x78DEEA1C);
	mov(mv, x86::mem(ts->eax + 0x30, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x34, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x38, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x3C, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x40, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x44, 1), 0x1);
	mov(mv, x86::mem(ts->eax + 0x45, 1), ts->bl);
	mov(mv, x86::mem(ts->eax, 4), 0x79B6E4);
	mov(mv, x86::mem(ts->eax + 0x48, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x4C, 4), 0x1);
	mov(mv, x86::mem(ts->eax + 0x22, 1), ts->bl);
	goto loc_5482CD;

loc_5482CB:
	xor_(&ts->eax, ts->eax);

loc_5482CD:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x1);
	mov(mv, x86::mem(ts->esp + 0xF, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto loc_54831A;
    }
	mov(mv, &ts->ecx, x86::mem(0x8389AC, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x35);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x8A2B68);
	game::sub_61BA30(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(0x838464, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto loc_548311;
    }
	push(mv, &ts->esp, 0x2);
	game::sub_529F00(ts, mv);
	add(&ts->esp, 0x4);
	goto loc_548313;

loc_548311:
	mov(&ts->al, 0x1);

loc_548313:
	cmp(&ts->eflags, ts->al, ts->bl);
	setz(mv, ts->eflags, x86::mem(ts->esp + 0xF, 1));

loc_54831A:
	push(mv, &ts->esp, 0x50);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_54837D;
    }
	mov(mv, &ts->cl, x86::mem(ts->esp + 0xF, 1));
	mov(mv, x86::mem(ts->eax + 0x34, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x38, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x3C, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x40, 4), ts->edi);
	mov(&ts->edi, 0x1);
	mov(mv, x86::mem(ts->eax + 0xC, 4), 0xDA1DAE54);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x20, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x21, 1), 0x1);
	mov(mv, x86::mem(ts->eax + 0x23, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), 0x4E933E83);
	mov(mv, x86::mem(ts->eax + 0x30, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x44, 1), 0x1);
	mov(mv, x86::mem(ts->eax + 0x45, 1), ts->bl);
	mov(mv, x86::mem(ts->eax, 4), 0x79B6E4);
	mov(mv, x86::mem(ts->eax + 0x48, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x4C, 4), 0x2);
	mov(mv, x86::mem(ts->eax + 0x22, 1), ts->cl);
	goto loc_548384;

loc_54837D:
	xor_(&ts->eax, ts->eax);
	mov(&ts->edi, 0x1);

loc_548384:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), ts->edi);
	push(mv, &ts->esp, 0x48);
	if (!ts->eflags.zero) {
        goto loc_5483B6;
    }
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5483D6;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x920DBB02);
	push(mv, &ts->esp, 0x911A4EDE);
	mov(&ts->ecx, ts->eax);
	game::sub_522080(ts, mv);
	goto loc_5483D8;

loc_5483B6:
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5483D6;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0xD132A6FE);
	push(mv, &ts->esp, 0x911A4EDE);
	mov(&ts->ecx, ts->eax);
	game::sub_522080(ts, mv);
	goto loc_5483D8;

loc_5483D6:
	xor_(&ts->eax, ts->eax);

loc_5483D8:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	push(mv, &ts->esp, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50B840(ts, mv);
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5483F9;
    }
	mov(mv, &ts->ebx, x86::mem(ts->eax + 0x10, 4));

loc_5483F9:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4C, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->ebx);
	call(ts, mv, x86::mem(ts->edx + 0x20, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x10, 4));
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), ts->edi);
	mov(&ts->ecx, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_54843F;
    }
	game::sub_5453B0(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	mov(&ts->ecx, 0x838980);
	game::sub_521530(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, 0x2F5E7DA3);
	push(mv, &ts->esp, ts->esi);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_54843F:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x4);
	goto sub_545460;
}

void sub_548450(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x27B8F0DD);
	push(mv, &ts->esp, 0x27B8F0DD);
	push(mv, &ts->esp, 0x40);
	mov(&ts->esi, ts->ecx);
	game::sub_522130(ts, mv);
	push(mv, &ts->esp, 0x27B8F0DE);
	push(mv, &ts->esp, 0x27B8F0DE);
	push(mv, &ts->esp, 0x41);
	mov(&ts->ecx, ts->esi);
	game::sub_522130(ts, mv);
	push(mv, &ts->esp, 0x27B8F0DF);
	push(mv, &ts->esp, 0x27B8F0DF);
	push(mv, &ts->esp, 0x42);
	mov(&ts->ecx, ts->esi);
	game::sub_522130(ts, mv);
	push(mv, &ts->esp, 0x27B8F0E0);
	push(mv, &ts->esp, 0x27B8F0E0);
	push(mv, &ts->esp, 0x43);
	mov(&ts->ecx, ts->esi);
	game::sub_522130(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x1);
	mov(&ts->ecx, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_5484D0;
    }
	game::sub_5453B0(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	mov(&ts->ecx, 0x838980);
	game::sub_521530(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, 0x2F5E7DA3);
	push(mv, &ts->esp, ts->esi);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_5484D0:
	pop(mv, &ts->esp, ts->esi);
	goto sub_545460;
}

void sub_5484E0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5484F2;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x2C, 4));
	goto loc_5484F4;

loc_5484F2:
	xor_(&ts->eax, ts->eax);

loc_5484F4:
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x134, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(&ts->ecx, 0xA9);
	if (ts->eflags.zero) {
        goto loc_548513;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x48, 4));

loc_548513:
	lea(mv, &ts->eax, x86::mem(ts->ecx - 0x3F, 4));
	cmp(&ts->eflags, ts->eax, 0xD);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_548522;
    }
	movzx(mv, &ts->ecx, x86::mem(ts->eax + 0x548614, 1));
	jmp(x86::mem(0x54860C, 4));

loc_548529:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x9DE5BA07);
	push(mv, &ts->esp, ts->edx);
	game::sub_495520(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x7A1FF30D);
	push(mv, &ts->esp, ts->eax);
	game::sub_495520(ts, mv);
	goto loc_548563;

def_548522:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x9DE5BA07);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4954E0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x7A1FF30D);
	push(mv, &ts->esp, ts->edx);
	game::sub_4954E0(ts, mv);

loc_548563:
	mov(mv, &ts->eax, x86::mem(0x8389A0, 4));
	add(&ts->esp, 0x10);
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_548581;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x31A9C0A);
	push(mv, &ts->esp, ts->eax);
	game::sub_4954E0(ts, mv);
	add(&ts->esp, 0x8);

loc_548581:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x174, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x79C31C);
	game::sub_43DB80(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x16C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x168, 4));
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_548605;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x10, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_51D620(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x168, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51D620(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x184, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x170, 4));
	add(&ts->esp, 0x10);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x180, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_51D4D0(ts, mv);
	add(&ts->esp, 0xC);

loc_548605:
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);
}

void sub_548630(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x777A70);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x34);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x158, 4));
	lea(mv, &ts->esi, x86::mem(ts->edi + 0x158, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_54867A;
    }

loc_548661:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	game::j__free(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_548661;
    }

loc_54867A:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x58, 4));
	xor_(&ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x168, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x17C, 4), ts->ebx);
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x48, 4));
	mov(mv, &ts->eax, x86::mem(0x8389C8, 4));
	cmp(&ts->eflags, ts->eax, 0x8389C8);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5486BB;
    }
	mov(&ts->edi, ts->edi);

loc_5486A0:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0xC, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_5486B0;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->eax, 0x8389C8);
	if (!ts->eflags.zero) {
        goto loc_5486A0;
    }
	goto loc_5486BB;

loc_5486B0:
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_5486CE;
    }

loc_5486BB:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x8392C0);
	game::sub_6102F0(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_5486EB;
    }

loc_5486CE:
	mov(mv, &ts->cl, x86::mem(ts->edi + 0x18C, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_5486EB;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0xEBB03E66);
	mov(&ts->ecx, ts->eax);
	game::sub_61B500(ts, mv);
	mov(mv, x86::mem(ts->edi + 0x174, 4), ts->eax);

loc_5486EB:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	mov(mv, x86::mem(ts->edi + 0x18C, 1), 0x0);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->ecx);
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0x58, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x48, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_54872D;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x174, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_5449C0(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x38, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x38, 4));
	add(&ts->esp, 0x10);
	cmp(&ts->eflags, ts->esi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_548750;
    }

loc_54872D:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	mov(mv, x86::mem(ts->esp + 0x48, 4), 0xFFFFFFFF);
	game::sub_4DEF30(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x34, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x40);
	retn(mv, &ts->esp);

loc_548750:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	game::Iostream_init__Iostream_init_void_(ts, mv);
	cmp(&ts->eflags, ts->esi, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_5489B7;
    }

loc_548765:
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->edi);
	game::sub_5306E0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5489A7;
    }
	cmp(mv, &ts->eflags, ts->ebx, x86::mem(ts->esp + 0xC, 4));
	if (!ts->eflags.zero) {
        goto loc_548788;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x17C, 4));
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->edx);

loc_548788:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x17C, 4));
	mov(mv, &ts->ebx, x86::mem(ts->edi + 0x4, 4));
	inc(&ts->eax);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x79C344);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_5487C5;
    }
	push(mv, &ts->esp, ts->ebx);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5487C5;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_5487E0;
    }

loc_5487C5:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5489A7;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edx);
	game::sub_52C570(ts, mv);

loc_5487E0:
	mov(&ts->ebx, ts->eax);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5489A7;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ebx + 0x18, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_5489A7;
    }
	push(mv, &ts->esp, ts->ebx);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x58, 4));
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_548842;
    }
	push(mv, &ts->esp, 0x14);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54882A;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x58, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x48, 4));
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ebx);
	goto loc_54882C;

loc_54882A:
	xor_(&ts->eax, ts->eax);

loc_54882C:
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x15C, 4));
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x158, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);

loc_548842:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x798534);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_61B500(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79852C);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_61B500(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x798524);
	mov(&ts->ebx, ts->eax);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_61B500(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, 0x79C33C);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_61B4E0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5488D4;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79C33C);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_61B500(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);

loc_5488D4:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, 0x79C330);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_61B4E0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54890E;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79C330);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_61B500(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);

loc_54890E:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, 0x79C324);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_61B4E0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_548946;
    }
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79C324);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	game::sub_61B500(ts, mv);
	mov(&ts->ebx, ts->eax);

loc_548946:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->esp + 0x38, 4), ts->eax);
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0x18, 4), 0x100);
	mov(mv, x86::mem(ts->esp + 0x3C, 4), 0xFF);
	mov(mv, x86::mem(ts->esp + 0x34, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x30, 4), ts->ebx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_54899B;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x34, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_504640(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_54898B;
    }
	or_(mv, x86::mem(ts->edi + 0x1C, 4), 0x400000);

loc_54898B:
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x34, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->edi);
	game::sub_517AD0(ts, mv);

loc_54899B:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	inc(mv, x86::mem(ts->eax + 0x17C, 4));
	mov(&ts->edi, ts->eax);

loc_5489A7:
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(mv, &ts->eflags, ts->esi, x86::mem(ts->esp + 0x24, 4));
	if (!ts->eflags.zero) {
        goto loc_548765;
    }
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x28, 4));

loc_5489B7:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x17C, 4));
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0x3C);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_548A97;
    }
	goto loc_5489D0;

loc_5489D0:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x79C344);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->esi, ts->esi);
	mov(&ts->ebx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_548A32;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_548A32;
    }
	mov(mv, x86::mem(ts->esp + 0x30, 4), 0x79AAF4);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x4C, 1), 0x1);
	mov(mv, x86::mem(ts->esp + 0x38, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x3C, 4), 0x0);
	game::sub_504880(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x38, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x48, 1), 0x0);
	mov(mv, x86::mem(ts->esp + 0x30, 4), 0x79AA4C);
	if (!ts->eflags.zero) {
        goto loc_548A49;
    }

loc_548A32:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_548A81;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebx);
	game::sub_52C570(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_548A81;
    }

loc_548A49:
	mov(mv, &ts->ecx, x86::mem(0x8384D4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_548A59;
    }
	test(mv, &ts->eflags, x86::mem(ts->eax + 0x1C, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_548A60;
    }

loc_548A59:
	or_(mv, x86::mem(ts->eax + 0x1C, 4), 0x400001);

loc_548A60:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x18, 4), 0x5);
	if (!ts->eflags.zero) {
        goto loc_548A81;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x64, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x60, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_548A81;
    }
	mov(&ts->esi, ts->eax);

loc_548A72:
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edx + 0x4, 4));
	add(&ts->esp, 0x4);
	dec(&ts->esi);
	if (!ts->eflags.zero) {
        goto loc_548A72;
    }

loc_548A81:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0x3C);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_5489D0;
    }
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x28, 4));

loc_548A97:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x158, 4));
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x158, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_548C03;
    }
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_548AFD;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_548AFD;
    }
	mov(mv, x86::mem(ts->esp + 0x30, 4), 0x79AAF4);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x4C, 1), 0x2);
	mov(mv, x86::mem(ts->esp + 0x38, 4), 0x23A43844);
	mov(mv, x86::mem(ts->esp + 0x3C, 4), 0x0);
	game::sub_504880(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x38, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x48, 1), 0x0);
	mov(mv, x86::mem(ts->esp + 0x30, 4), 0x79AA4C);
	if (!ts->eflags.zero) {
        goto loc_548B14;
    }

loc_548AFD:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_548B77;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x23A43844);
	game::sub_52C570(ts, mv);

loc_548B14:
	mov(&ts->ebx, ts->eax);
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_548B77;
    }
	mov(&ts->edx, 0x79053C);
	or_(&ts->ecx, 0xFFFFFFFF);
	mov(&ts->al, 0x48);

loc_548B24:
	imul(&ts->ecx, ts->ecx, 0x21);
	cmp(&ts->eflags, ts->al, 0x61);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_548B31;
    }
	cmp(&ts->eflags, ts->al, 0x7A);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_548B31;
    }
	add(&ts->al, 0xE0);

loc_548B31:
	movzx(&ts->eax, ts->al);
	add(&ts->ecx, ts->eax);
	mov(mv, &ts->al, x86::mem(ts->edx + 0x1, 1));
	inc(&ts->edx);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_548B24;
    }
	mov(mv, &ts->esi, x86::mem(ts->ebx + 0x4C, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_548B77;
    }

loc_548B45:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x30, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_548B53;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_548B45;
    }
	goto loc_548B77;

loc_548B53:
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_548B77;
    }
	cmp(mv, &ts->eflags, ts->esi, x86::mem(ts->ebx + 0x54, 4));
	if (ts->eflags.zero) {
        goto loc_548B70;
    }
	mov(&ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->ebx + 0x54, 4), ts->esi);
	game::sub_517720(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x54, 4));
	mov(mv, x86::mem(ts->ecx + 0x10, 4), 0x0);

loc_548B70:
	mov(mv, x86::mem(ts->esi + 0x10, 4), 0x0);

loc_548B77:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_548B93;
    }
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x158, 4));
	game::sub_43BE60(ts, mv);
	mov(mv, x86::mem(ts->edi + 0x168, 4), ts->eax);
	goto loc_548B9F;

loc_548B93:
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x158, 4));
	mov(mv, x86::mem(ts->edi + 0x168, 4), ts->edx);

loc_548B9F:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x168, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x10, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_51D620(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x168, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x10, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_51D620(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x184, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x170, 4));
	add(&ts->esp, 0x10);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x180, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_51D4D0(ts, mv);
	add(&ts->esp, 0xC);
	goto loc_548CCB;

loc_548C03:
	mov(mv, &ts->edi, x86::mem(ts->edi + 0x4, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_548C56;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_548C52;
    }
	mov(mv, x86::mem(ts->esp + 0x30, 4), 0x79AAF4);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x4C, 1), 0x3);
	mov(mv, x86::mem(ts->esp + 0x38, 4), 0x23A43844);
	mov(mv, x86::mem(ts->esp + 0x3C, 4), ts->ebx);
	game::sub_504880(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x38, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x48, 1), ts->bl);
	mov(mv, x86::mem(ts->esp + 0x30, 4), 0x79AA4C);
	if (!ts->eflags.zero) {
        goto loc_548C6D;
    }

loc_548C52:
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x28, 4));

loc_548C56:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_548CCF;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x23A43844);
	game::sub_52C570(ts, mv);

loc_548C6D:
	mov(&ts->edi, ts->eax);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_548CCB;
    }
	mov(&ts->edx, 0x78F614);
	or_(&ts->ecx, 0xFFFFFFFF);
	mov(&ts->al, 0x53);
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_548C80:
	imul(&ts->ecx, ts->ecx, 0x21);
	cmp(&ts->eflags, ts->al, 0x61);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_548C8D;
    }
	cmp(&ts->eflags, ts->al, 0x7A);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_548C8D;
    }
	add(&ts->al, 0xE0);

loc_548C8D:
	movzx(&ts->eax, ts->al);
	add(&ts->ecx, ts->eax);
	mov(mv, &ts->al, x86::mem(ts->edx + 0x1, 1));
	inc(&ts->edx);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_548C80;
    }
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x4C, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_548CCB;
    }

loc_548CA1:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x30, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_548CAF;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_548CA1;
    }
	goto loc_548CCB;

loc_548CAF:
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_548CCB;
    }
	cmp(mv, &ts->eflags, ts->esi, x86::mem(ts->edi + 0x54, 4));
	if (ts->eflags.zero) {
        goto loc_548CC8;
    }
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->edi + 0x54, 4), ts->esi);
	game::sub_517720(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x54, 4));
	mov(mv, x86::mem(ts->ecx + 0x10, 4), ts->ebx);

loc_548CC8:
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ebx);

loc_548CCB:
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x28, 4));

loc_548CCF:
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x28, 4));
	cmp(&ts->eflags, ts->esi, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x48, 4), 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_548D01;
    }
	nop();

loc_548CE0:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->esi, 4), ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->esi);
	game::j__free(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x2C, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x2C, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_548CE0;
    }

loc_548D01:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x40, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x40);
	retn(mv, &ts->esp);

loc_777A50:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x24, 4));
	goto sub_4DEF30;

loc_777A58:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x1C, 4));
	goto sub_504950;

loc_777A60:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x1C, 4));
	goto sub_504950;

loc_777A68:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x1C, 4));
	goto sub_504950;

SEH_548630:
	mov(&ts->eax, 0x7E2EB0);
	goto ___CxxFrameHandler;
}

void sub_548D20(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_548E12;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x5C, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_548D7F;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x2C, 4));
	push(mv, &ts->esp, 0x4732DA07);
	game::sub_61B4E0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x2C, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	if (ts->eflags.zero) {
        goto loc_548D6B;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x4732DA07);
	game::sub_61B500(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xD28B9316);
	push(mv, &ts->esp, ts->ebx);
	game::sub_495460(ts, mv);
	goto loc_548D7C;

loc_548D6B:
	game::sub_610000(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xD28B9316);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537B80(ts, mv);

loc_548D7C:
	add(&ts->esp, 0xC);

loc_548D7F:
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	game::sub_51F7E0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ebx, 0x1);
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xB4, 4));
	game::sub_538080(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x2C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x311151F8);
	game::sub_61B500(ts, mv);
	mov(mv, x86::mem(0x839BF0, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x2C, 4));
	game::sub_6319A0(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_548DFF;
    }
	cmp(mv, &ts->eflags, x86::mem(0x83898C, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_548DFF;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x2C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x110, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x48, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x85AD40);
	game::sub_514280(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, 0x380B632);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_548DFF:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x380B632);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4954E0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);

loc_548E12:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_548E20(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_53C430(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_548E38;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_548E38:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_548E40(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x838560, 4));
	sub(&ts->esp, 0x38);
	cmp(&ts->eflags, ts->eax, 0x1);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_548FE8;
    }
	xor_(&ts->ebx, ts->ebx);
	sub(&ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_548E71;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_548E6A;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto loc_548E73;
    }
	mov(&ts->ebx, 0x2);
	goto loc_548E73;

loc_548E6A:
	mov(&ts->ebx, 0x1);
	goto loc_548E73;

loc_548E71:
	xor_(&ts->ebx, ts->ebx);

loc_548E73:
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x24, 1), 0x0);
	mov(&ts->ecx, 0x7);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x25, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x5C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x79C354);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F21C);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x3C, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5426C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x5C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x68, 4));
	mov(&ts->edx, ts->eax);
	add(&ts->eax, ts->ecx);
	add(&ts->esp, 0x20);
	cmp(&ts->eflags, ts->eax, 0x1);
	mov(mv, x86::mem(ts->esi + 0x5C, 4), ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_548ED1;
    }
	mov(mv, x86::mem(ts->esi + 0x5C, 4), 0x1);
	goto loc_548EDF;

loc_548ED1:
	lea(mv, &ts->ecx, x86::mem(ts->ebx + (ts->ebx*4), 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + (ts->ecx*4) + 0x70, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_548EDF;
    }
	mov(mv, x86::mem(ts->esi + 0x5C, 4), ts->ecx);

loc_548EDF:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x5C, 4));
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_548EF6;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xAC, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F568);
	push(mv, &ts->esp, ts->edx);
	goto loc_548F06;

loc_548EF6:
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_548F0E;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB0, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F568);
	push(mv, &ts->esp, ts->eax);

loc_548F06:
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);

loc_548F0E:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x5C, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x79C354);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F228);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x3C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_5426C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x5C, 4));
	add(&ts->esp, 0x20);
	dec(&ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->ebx + (ts->ebx*4) + 0x19, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + (ts->edx*4), 4));
	game::sub_43BE60(ts, mv);
	mov(&ts->edi, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->ebx + (ts->ebx*4), 4));
	lea(mv, &ts->ebx, x86::mem(ts->esi + (ts->eax*4), 4));
	mov(mv, x86::mem(ts->ebx + 0x6C, 4), ts->edi);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x5C, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x48, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->ebx + 0x74, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51D620(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x6C, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x10, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_51D620(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x60, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xA4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x60, 4));
	add(&ts->esp, 0x10);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xA0, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_51D4D0(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_50F770(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, 0x1);
	sub(&ts->esp, 0x10);
	mov(&ts->edx, ts->esp);
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx + 0x4, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->edx + 0x8, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x838560, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->edx + 0xC, 4), ts->eax);
	game::sub_53C620(ts, mv);

loc_548FE8:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x38);
	retn(mv, &ts->esp, 0x4);
}

void sub_549000(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x40);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xED03D1D3);
	push(mv, &ts->esp, ts->eax);
	game::sub_495520(ts, mv);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x5C, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x79C528);
	game::sub_50B990(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x6D5FE871);
	push(mv, &ts->esp, ts->edi);
	game::sub_495430(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x79C508);
	game::sub_50B990(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x6D5ECE44);
	push(mv, &ts->esp, ts->edi);
	game::sub_495430(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x79C4E4);
	game::sub_50B990(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x19C99185);
	push(mv, &ts->esp, ts->edi);
	game::sub_495430(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x44);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x79C4CC);
	game::sub_50B990(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x5D19F25);
	push(mv, &ts->esp, ts->edi);
	game::sub_495430(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x79C4AC);
	game::sub_50B990(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xF0250DAC);
	push(mv, &ts->esp, ts->edi);
	game::sub_495430(ts, mv);
	push(mv, &ts->esp, 0x0);
	game::sub_4A7890(ts, mv);
	add(&ts->esp, 0x2C);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	game::sub_5B5350(ts, mv);
	mov(&ts->ebx, ts->eax);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x30, 1), 0x0);
	mov(&ts->ecx, 0x7);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x31, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 1), 0x0);
	mov(&ts->ecx, 0x7);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x11, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	add(&ts->ebx, 0x1F0);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + 0x8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784500, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, ts->ebp);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (!ts->eflags.zero) {
        goto loc_549132;
    }
	push(mv, &ts->esp, 0x79C488);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4400D0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + 0x4, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78C194, 4));
	add(&ts->esp, 0xC);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (!ts->eflags.zero) {
        goto loc_549128;
    }
	push(mv, &ts->esp, 0x79C470);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->edx);
	goto loc_5491E8;

loc_549128:
	push(mv, &ts->esp, 0x79C458);
	goto loc_5491E3;

loc_549132:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + 0x8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78C194, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (!ts->eflags.zero) {
        goto loc_549173;
    }
	push(mv, &ts->esp, 0x79C438);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4400D0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + 0x4, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79C434, 4));
	add(&ts->esp, 0xC);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (!ts->eflags.zero) {
        goto loc_54916C;
    }
	push(mv, &ts->esp, 0x79C41C);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->edx);
	goto loc_5491E8;

loc_54916C:
	push(mv, &ts->esp, 0x79C404);
	goto loc_5491E3;

loc_549173:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + 0x8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79C434, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (!ts->eflags.zero) {
        goto loc_5491B4;
    }
	push(mv, &ts->esp, 0x79C3E4);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4400D0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + 0x4, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78ABF8, 4));
	add(&ts->esp, 0xC);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (!ts->eflags.zero) {
        goto loc_5491AD;
    }
	push(mv, &ts->esp, 0x79C3CC);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->edx);
	goto loc_5491E8;

loc_5491AD:
	push(mv, &ts->esp, 0x79C3B4);
	goto loc_5491E3;

loc_5491B4:
	push(mv, &ts->esp, 0x79C394);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4400D0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + 0x4, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x789FE0, 4));
	add(&ts->esp, 0xC);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (!ts->eflags.zero) {
        goto loc_5491DE;
    }
	push(mv, &ts->esp, 0x79C37C);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->edx);
	goto loc_5491E8;

loc_5491DE:
	push(mv, &ts->esp, 0x79C364);

loc_5491E3:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);

loc_5491E8:
	game::sub_4400D0(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DB50(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x34, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->edi, ts->eax);
	game::sub_43DB50(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1D9051AA);
	push(mv, &ts->esp, ts->eax);
	game::sub_495430(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x7985A0);
	push(mv, &ts->esp, ts->eax);
	game::sub_4953E0(ts, mv);
	add(&ts->esp, 0x1C);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54923E;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x24, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_54923E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x1C, 4));
	or_(&ts->ecx, 0x400000);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->ecx);

loc_54923E:
	mov(mv, &ts->ecx, x86::mem(0x8900B4, 4));
	game::sub_5EA8B0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	if (ts->eflags.zero) {
        goto loc_549257;
    }
	push(mv, &ts->esp, 0x8569A25F);
	goto loc_54925C;

loc_549257:
	push(mv, &ts->esp, 0x8569AB44);

loc_54925C:
	push(mv, &ts->esp, 0x7985FC);
	push(mv, &ts->esp, ts->esi);
	game::sub_4953C0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x40);
	retn(mv, &ts->esp, 0x4);
}

void sub_549280(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x777A98);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x34);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x8, 4));
	mov(&ts->esi, ts->ecx);
	lea(mv, &ts->eax, x86::mem(ts->edi + (ts->edi*4) + 0x19, 4));
	lea(mv, &ts->ebx, x86::mem(ts->esi + (ts->eax*4), 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->ebp - 0x10, 4), ts->esi);
	mov(mv, x86::mem(ts->ebp - 0x1C, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5492CF;
    }

loc_5492B6:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	game::j__free(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebx, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_5492B6;
    }

loc_5492CF:
	lea(mv, &ts->ecx, x86::mem(ts->edi + (ts->edi*4), 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + (ts->ecx*4), 4));
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x70, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x6C, 4), ts->ecx);
	mov(mv, x86::mem(ts->ebp - 0x18, 4), ts->eax);
	xor_(&ts->ebx, ts->ebx);
	lea(mv, &ts->edx, x86::mem(ts->ebp - 0x30, 4));
	lea(mv, &ts->eax, x86::mem(ts->ebp - 0x30, 4));
	mov(mv, x86::mem(ts->esi + 0x5C, 4), 0x1);
	mov(mv, x86::mem(ts->ebp - 0x14, 4), ts->ebx);
	mov(mv, x86::mem(ts->ebp - 0x30, 4), ts->edx);
	mov(mv, x86::mem(ts->ebp - 0x2C, 4), ts->eax);
	sub(&ts->edi, ts->ecx);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54930C;
    }
	dec(&ts->edi);
	if (ts->eflags.zero) {
        goto loc_549305;
    }
	dec(&ts->edi);
	if (!ts->eflags.zero) {
        goto loc_549314;
    }

loc_549305:
	mov(&ts->ebx, 0xA6);
	goto loc_549311;

loc_54930C:
	mov(&ts->ebx, 0xA4);

loc_549311:
	mov(mv, x86::mem(ts->ebp - 0x14, 4), ts->ebx);

loc_549314:
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x30, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	game::sub_5449C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x30, 4));
	lea(mv, &ts->edx, x86::mem(ts->ebp - 0x30, 4));
	add(&ts->esp, 0x10);
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_54934F;
    }
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x30, 4));
	mov(mv, x86::mem(ts->ebp - 0x4, 4), 0xFFFFFFFF);
	game::sub_4DEF30(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_54934F:
	push(mv, &ts->esp, 0xA3);
	mov(&ts->ecx, 0x8392C0);
	game::sub_6102F0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_549380;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x311151F8);
	mov(&ts->ecx, ts->eax);
	game::sub_61B500(ts, mv);
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esi + 0x58, 4));
	if (!ts->eflags.zero) {
        goto loc_549380;
    }
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, 0x8392C0);
	game::sub_6102F0(ts, mv);

loc_549380:
	mov(mv, &ts->edi, x86::mem(ts->ebp - 0x30, 4));
	mov(&ts->esi, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x30, 4));
	mov(mv, x86::mem(ts->ebp + 0x8, 4), ts->esi);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	cmp(&ts->eflags, ts->edi, ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x28, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_549504;
    }
	mov(&ts->edi, ts->edi);

loc_5493A0:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_530940(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5494EB;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	mov(mv, &ts->ebx, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x79C344);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(&ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5493EA;
    }
	push(mv, &ts->esp, ts->ebx);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5493EA;
    }
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_549401;
    }

loc_5493EA:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5494EB;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	game::sub_52C570(ts, mv);

loc_549401:
	mov(&ts->ebx, ts->eax);
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5494EB;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ebx + 0x18, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_5494EB;
    }
	push(mv, &ts->esp, ts->ebx);
	game::sub_50CA50(ts, mv);
	push(mv, &ts->esp, 0x14);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54943C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp - 0x14, 4));
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ebx);
	mov(&ts->esi, ts->eax);
	goto loc_54943E;

loc_54943C:
	xor_(&ts->esi, ts->esi);

loc_54943E:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x1C, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->esi);
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x8, 4));
	push(mv, &ts->esp, 0xD99A);
	game::sub_61B500(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x136707);
	mov(mv, x86::mem(ts->ebp - 0x20, 4), ts->eax);
	game::sub_61B500(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x2DDC8F0);
	mov(mv, x86::mem(ts->ebp - 0x24, 4), ts->eax);
	game::sub_61B500(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x20, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp - 0x24, 4));
	mov(mv, x86::mem(ts->ebp - 0x3C, 4), ts->eax);
	cmp(mv, &ts->eflags, x86::mem(ts->ebx + 0x18, 4), 0x100);
	mov(mv, x86::mem(ts->ebp - 0x34, 4), 0xFF);
	mov(mv, x86::mem(ts->ebp - 0x38, 4), ts->ecx);
	mov(mv, x86::mem(ts->ebp - 0x40, 4), ts->edx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_5494CA;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->ebp - 0x40, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_504640(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_5494BB;
    }
	or_(mv, x86::mem(ts->ebx + 0x1C, 4), 0x400000);

loc_5494BB:
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x40, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->ebx);
	game::sub_517AD0(ts, mv);

loc_5494CA:
	inc(mv, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x18, 4));
	mov(mv, &ts->ebx, x86::mem(ts->eax + 0x70, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x74, 4));
	inc(&ts->ebx);
	mov(&ts->ecx, ts->ebx);
	cmp(&ts->eflags, ts->ecx, ts->edx);
	mov(mv, x86::mem(ts->eax + 0x70, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_5494EB;
    }
	mov(&ts->edx, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	mov(mv, x86::mem(ts->edx + 0x6C, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x5C, 4), ts->ecx);

loc_5494EB:
	mov(mv, &ts->edi, x86::mem(ts->edi, 4));
	cmp(mv, &ts->eflags, ts->edi, x86::mem(ts->ebp - 0x28, 4));
	if (!ts->eflags.zero) {
        goto loc_5493A0;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0xD);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_5495B9;
    }
	mov(&ts->esi, ts->eax);

loc_549504:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x79C344);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(&ts->ebx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54955D;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54955D;
    }
	mov(mv, x86::mem(ts->ebp - 0x3C, 4), 0x79AAF4);
	lea(mv, &ts->edx, x86::mem(ts->ebp - 0x3C, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x4, 1), 0x1);
	mov(mv, x86::mem(ts->ebp - 0x38, 4), ts->ebx);
	mov(mv, x86::mem(ts->ebp - 0x34, 4), 0x0);
	game::sub_504880(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x34, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x4, 1), 0x0);
	mov(mv, x86::mem(ts->ebp - 0x3C, 4), 0x79AA4C);
	if (!ts->eflags.zero) {
        goto loc_549574;
    }

loc_54955D:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5495AF;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	game::sub_52C570(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5495AF;
    }

loc_549574:
	mov(mv, &ts->ecx, x86::mem(0x8384D4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_549584;
    }
	test(mv, &ts->eflags, x86::mem(ts->eax + 0x1C, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_54958B;
    }

loc_549584:
	or_(mv, x86::mem(ts->eax + 0x1C, 4), 0x400001);

loc_54958B:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x18, 4), 0x5);
	if (!ts->eflags.zero) {
        goto loc_5495AF;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x64, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x60, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_5495AF;
    }
	mov(&ts->edi, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_5495A0:
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edx + 0x4, 4));
	add(&ts->esp, 0x4);
	dec(&ts->edi);
	if (!ts->eflags.zero) {
        goto loc_5495A0;
    }

loc_5495AF:
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, 0xD);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_549504;
    }

loc_5495B9:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x1C, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	mov(mv, &ts->esi, x86::mem(ts->ebp - 0x10, 4));
	if (ts->eflags.zero) {
        goto loc_549716;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x18, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x6C, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_5495D8;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ecx, 4));
	mov(mv, x86::mem(ts->eax + 0x6C, 4), ts->ecx);

loc_5495D8:
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	mov(&ts->ecx, 0x79C548);
	or_(&ts->edi, 0xFFFFFFFF);
	mov(&ts->al, 0x50);

loc_5495E5:
	imul(&ts->edi, ts->edi, 0x21);
	cmp(&ts->eflags, ts->al, 0x61);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5495F2;
    }
	cmp(&ts->eflags, ts->al, 0x7A);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_5495F2;
    }
	add(&ts->al, 0xE0);

loc_5495F2:
	movzx(&ts->edx, ts->al);
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x1, 1));
	add(&ts->edi, ts->edx);
	inc(&ts->ecx);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_5495E5;
    }
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_549646;
    }
	push(mv, &ts->esp, ts->ebx);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_549646;
    }
	mov(mv, x86::mem(ts->ebp - 0x3C, 4), 0x79AAF4);
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x3C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x4, 1), 0x2);
	mov(mv, x86::mem(ts->ebp - 0x38, 4), ts->edi);
	mov(mv, x86::mem(ts->ebp - 0x34, 4), 0x0);
	game::sub_504880(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x34, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x4, 1), 0x0);
	mov(mv, x86::mem(ts->ebp - 0x3C, 4), 0x79AA4C);
	if (ts->eflags.zero) {
        goto loc_549646;
    }
	mov(&ts->ebx, ts->eax);
	goto loc_54965F;

loc_549646:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54965D;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	game::sub_52C570(ts, mv);
	mov(&ts->ebx, ts->eax);
	goto loc_54965F;

loc_54965D:
	xor_(&ts->ebx, ts->ebx);

loc_54965F:
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5496C3;
    }
	mov(&ts->edx, 0x78F228);
	or_(&ts->ecx, 0xFFFFFFFF);
	mov(&ts->al, 0x48);
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_549670:
	imul(&ts->ecx, ts->ecx, 0x21);
	cmp(&ts->eflags, ts->al, 0x61);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_54967D;
    }
	cmp(&ts->eflags, ts->al, 0x7A);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_54967D;
    }
	add(&ts->al, 0xE0);

loc_54967D:
	movzx(&ts->eax, ts->al);
	add(&ts->ecx, ts->eax);
	mov(mv, &ts->al, x86::mem(ts->edx + 0x1, 1));
	inc(&ts->edx);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_549670;
    }
	mov(mv, &ts->edi, x86::mem(ts->ebx + 0x4C, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_5496C3;
    }

loc_549691:
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0x30, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54969F;
    }
	mov(mv, &ts->edi, x86::mem(ts->edi + 0x4, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_549691;
    }
	goto loc_5496C3;

loc_54969F:
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_5496C3;
    }
	cmp(mv, &ts->eflags, ts->edi, x86::mem(ts->ebx + 0x54, 4));
	if (ts->eflags.zero) {
        goto loc_5496BC;
    }
	mov(&ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->ebx + 0x54, 4), ts->edi);
	game::sub_517720(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x54, 4));
	mov(mv, x86::mem(ts->ecx + 0x10, 4), 0x0);

loc_5496BC:
	mov(mv, x86::mem(ts->edi + 0x10, 4), 0x0);

loc_5496C3:
	mov(mv, &ts->edi, x86::mem(ts->ebp - 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x6C, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x10, 4));
	lea(mv, &ts->edx, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x28, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_51D620(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x6C, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x10, 4));
	lea(mv, &ts->edx, x86::mem(ts->ebp - 0x24, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x28, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_51D620(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x8, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xA4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x60, 4));
	add(&ts->esp, 0x10);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x28, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xA0, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_51D4D0(ts, mv);
	add(&ts->esp, 0xC);

loc_549716:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x30, 4));
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x30, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_549746;
    }

loc_549727:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(&ts->edx, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	game::j__free(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x30, 4));
	lea(mv, &ts->edx, x86::mem(ts->ebp - 0x30, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_549727;
    }

loc_549746:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_777A80:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x30, 4));
	goto sub_4DEF30;

loc_777A88:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x3C, 4));
	goto sub_504950;

loc_777A90:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x3C, 4));
	goto sub_504950;

SEH_549280:
	mov(&ts->eax, 0x7E2EE4);
	goto ___CxxFrameHandler;
}

void sub_549760(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_50DA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x83A63C, 4));
	cmp(&ts->eflags, ts->eax, 0x4);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_549776;
    }
	jmp(x86::mem(0x549814, 4));

loc_54977D:
	mov(&ts->eax, 0x5AE1D9E5);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x242217C1);
	push(mv, &ts->esp, ts->eax);
	game::sub_495460(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_549796:
	mov(&ts->eax, 0x5B4967F0);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x242217C1);
	push(mv, &ts->esp, ts->eax);
	game::sub_495460(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_5497AF:
	mov(&ts->eax, 0xC476882B);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x242217C1);
	push(mv, &ts->esp, ts->eax);
	game::sub_495460(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_5497C8:
	mov(&ts->eax, 0xCA169C60);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x242217C1);
	push(mv, &ts->esp, ts->eax);
	game::sub_495460(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_5497E1:
	mov(&ts->eax, 0xCC76DEE5);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x242217C1);
	push(mv, &ts->esp, ts->eax);
	game::sub_495460(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

def_549776:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0x242217C1);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_549830(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79053C);
	push(mv, &ts->esp, 0x79C558);
	push(mv, &ts->esp, ts->eax);
	game::sub_5426C0(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x14);
}

void sub_549850(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x777AC4);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x83A540, 4));
	push(mv, &ts->esp, ts->ebx);
	game::sub_59B080(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_549896;
    }
	or_(&ts->eax, 0xFFFFFFFF);
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x14);

loc_549896:
	push(mv, &ts->esp, 0xC0);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->ebp + 0x8, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_5498FA;
    }
	mov(mv, &ts->ecx, x86::mem(0x83A540, 4));
	push(mv, &ts->esp, ts->ebx);
	game::sub_59B080(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x10, 4));
	mov(mv, x86::mem(ts->ebp + 0x8, 1), ts->al);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x18, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->edi);
	game::sub_522AF0(ts, mv);
	mov(&ts->edi, ts->eax);
	goto loc_5498FC;

loc_5498FA:
	xor_(&ts->edi, ts->edi);

loc_5498FC:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xC4, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), 0xFFFFFFFF);
	game::sub_544550(ts, mv);
	mov(mv, x86::mem(ts->edi + 0x2C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xF0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_5445A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xEC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_5445A0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x79C5A4);
	mov(&ts->ecx, ts->esi);
	game::sub_5445A0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xE8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_5445A0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC8, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_544550(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xE0, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_5445A0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xDC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_5445A0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_530D20(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xD0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_5445F0(ts, mv);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->edi + 0x24, 4), ts->eax);
	game::sub_530D90(ts, mv);
	push(mv, &ts->esp, 0x79C594);
	mov(&ts->ecx, ts->esi);
	game::sub_544550(ts, mv);
	push(mv, &ts->esp, 0x79C584);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->edi + 0x5C, 4), ts->eax);
	game::sub_544550(ts, mv);
	cmp(&ts->eflags, ts->ebx, 0x9);
	mov(mv, x86::mem(ts->edi + 0x60, 4), ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5499C2;
    }
	cmp(&ts->eflags, ts->ebx, 0xF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_5499D1;
    }

loc_5499C2:
	push(mv, &ts->esp, 0x79C578);
	mov(&ts->ecx, ts->esi);
	game::sub_544550(ts, mv);
	mov(mv, x86::mem(ts->edi + 0x64, 4), ts->eax);

loc_5499D1:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xD4, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_5445A0(ts, mv);
	mov(mv, x86::mem(ts->edi + 0x4C, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xD8, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_5445A0(ts, mv);
	mov(mv, x86::mem(ts->edi + 0x50, 4), ts->eax);
	mov(mv, &ts->al, x86::mem(ts->ebp + 0x14, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4C, 4));
	mov(&ts->edx, 0x400000);
	if (ts->eflags.zero) {
        goto loc_549A24;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	mov(&ts->ecx, 0x9943D584);
	if (ts->eflags.zero) {
        goto loc_549A1B;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x24, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_549A1B;
    }
	mov(mv, &ts->ebx, x86::mem(ts->eax + 0x1C, 4));
	or_(&ts->ebx, ts->edx);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->ebx);

loc_549A1B:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x50, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_549A51;
    }
	goto loc_549A46;

loc_549A24:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_549A3A;
    }
	mov(mv, &ts->ebx, x86::mem(ts->eax + 0x24, 4));
	mov(&ts->ecx, 0x374F6465);
	cmp(&ts->eflags, ts->ebx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_549A3A;
    }
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->ecx);
	or_(mv, x86::mem(ts->eax + 0x1C, 4), ts->edx);

loc_549A3A:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x50, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_549A51;
    }
	mov(&ts->ecx, 0x760BDC9D);

loc_549A46:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x24, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_549A51;
    }
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->ecx);
	or_(mv, x86::mem(ts->eax + 0x1C, 4), ts->edx);

loc_549A51:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x50, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x128, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x100, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x12C, 4));
	inc(&ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x12C, 4), ts->ecx);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x108, 4));
	mov(&ts->ecx, ts->edi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x100, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x128, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x120, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x108, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x120, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(mv, x86::mem(ts->edi + 0xAC, 4), 0x40800000);
	call(ts, mv, x86::mem(ts->eax + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x78, 4));
	lea(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->ebp + 0x14, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_51D730(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0xAC, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	add(&ts->esp, 0xC);
	mov(&ts->ecx, ts->edi);
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x14, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0xA8, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	call(ts, mv, x86::mem(ts->edx + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x50, 4));
	lea(mv, &ts->ecx, x86::mem(ts->ebp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_51D070(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x50, 4));
	lea(mv, &ts->ecx, x86::mem(ts->ebp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->ebp + 0x14, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_51D730(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x8, 4));
	add(&ts->esp, 0x18);
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fabs(&ts->fp, x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x12C, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	dec(&ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x14);

loc_777AB0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79C568);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_549850:
	mov(&ts->eax, 0x7E2F08);
	goto ___CxxFrameHandler;
}

void sub_549B40(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xE66708F3);
	push(mv, &ts->esp, 0x26033125);
	push(mv, &ts->esp, 0x3);
	mov(&ts->esi, ts->ecx);
	game::sub_549850(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xE66708F3);
	push(mv, &ts->esp, 0x26033125);
	push(mv, &ts->esp, 0x7);
	mov(&ts->ecx, ts->esi);
	game::sub_549850(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xE666E852);
	push(mv, &ts->esp, 0xE66D2A8F);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_549850(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xE666E852);
	push(mv, &ts->esp, 0xE66D2A8F);
	push(mv, &ts->esp, 0x4);
	mov(&ts->ecx, ts->esi);
	game::sub_549850(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xE666E852);
	push(mv, &ts->esp, 0xE66D2A8F);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_549850(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xE666E852);
	push(mv, &ts->esp, 0xE66D2A8F);
	push(mv, &ts->esp, 0x5);
	mov(&ts->ecx, ts->esi);
	game::sub_549850(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xE666E852);
	push(mv, &ts->esp, 0xE66D2A8F);
	push(mv, &ts->esp, 0x2);
	mov(&ts->ecx, ts->esi);
	game::sub_549850(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xE666E852);
	push(mv, &ts->esp, 0xE66D2A8F);
	push(mv, &ts->esp, 0x6);
	mov(&ts->ecx, ts->esi);
	game::sub_549850(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xE669E1C6);
	push(mv, &ts->esp, 0xE6692B0A);
	push(mv, &ts->esp, 0x8);
	mov(&ts->ecx, ts->esi);
	game::sub_549850(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_549C20(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xA);
	mov(&ts->esi, ts->ecx);
	game::sub_549850(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xB);
	mov(&ts->ecx, ts->esi);
	game::sub_549850(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xC);
	mov(&ts->ecx, ts->esi);
	game::sub_549850(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xD);
	mov(&ts->ecx, ts->esi);
	game::sub_549850(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xE);
	mov(&ts->ecx, ts->esi);
	game::sub_549850(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xF);
	mov(&ts->ecx, ts->esi);
	game::sub_549850(ts, mv);
	mov(mv, &ts->dl, x86::mem(0x83AA1A, 1));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7845D4);
	cmp(&ts->eflags, ts->dl, 0x1);
	push(mv, &ts->esp, 0xAEA3C019);
	push(mv, &ts->esp, ts->eax);
	setz(ts->eflags, &ts->bl);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	mov(&ts->cl, ts->bl);
	neg(&ts->cl);
	sbb(&ts->ecx, ts->ecx);
	and_(&ts->ecx, 0x19);
	add(&ts->ecx, 0x23);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x7845D4);
	push(mv, &ts->esp, 0xAEA3C01A);
	push(mv, &ts->esp, ts->edx);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(&ts->al, ts->bl);
	neg(&ts->al);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0x32);
	add(&ts->eax, 0x46);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7845D4);
	push(mv, &ts->esp, 0xAEA3C01B);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537B80(ts, mv);
	mov(&ts->dl, ts->bl);
	neg(&ts->dl);
	sbb(&ts->edx, ts->edx);
	and_(&ts->edx, 0x4B);
	add(&ts->edx, 0x69);
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x7845D4);
	push(mv, &ts->esp, 0xAEA3C01C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x40);
	mov(&ts->cl, ts->bl);
	neg(&ts->cl);
	sbb(&ts->ecx, ts->ecx);
	and_(&ts->ecx, 0x64);
	add(&ts->ecx, 0x8C);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x7845D4);
	push(mv, &ts->esp, 0xAEA3C01D);
	push(mv, &ts->esp, ts->edx);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(&ts->al, ts->bl);
	neg(&ts->al);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0x7D);
	add(&ts->eax, 0xAF);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7845D4);
	push(mv, &ts->esp, 0xAEA3C01E);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(&ts->dl, ts->bl);
	neg(&ts->dl);
	sbb(&ts->edx, ts->edx);
	and_(&ts->edx, 0x96);
	add(&ts->edx, 0xD2);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x7845D4);
	push(mv, &ts->esp, 0xAEA3C01F);
	push(mv, &ts->esp, ts->eax);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	neg(&ts->bl);
	sbb(&ts->ebx, ts->ebx);
	and_(&ts->ebx, 0xAF);
	add(&ts->ebx, 0xF5);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x7845D4);
	push(mv, &ts->esp, 0xAEA3C020);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x40);
	push(mv, &ts->esp, 0x41200000);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x95A7073D);
	push(mv, &ts->esp, 0xCEBFAA36);
	push(mv, &ts->esp, 0x9);
	mov(&ts->ecx, ts->esi);
	game::sub_549850(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_549DC0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x36C30E70);
	push(mv, &ts->esp, 0xE66F30DB);
	push(mv, &ts->esp, 0x15);
	mov(&ts->esi, ts->ecx);
	game::sub_549850(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x36C30E70);
	push(mv, &ts->esp, 0xE66F30DB);
	push(mv, &ts->esp, 0x16);
	mov(&ts->ecx, ts->esi);
	game::sub_549850(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_549E00(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x36C30E70);
	push(mv, &ts->esp, 0xE66F30DB);
	push(mv, &ts->esp, 0x13);
	mov(&ts->esi, ts->ecx);
	game::sub_549850(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x36C30E70);
	push(mv, &ts->esp, 0xE66F30DB);
	push(mv, &ts->esp, 0x14);
	mov(&ts->ecx, ts->esi);
	game::sub_549850(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x2CBDC28);
	push(mv, &ts->esp, 0x1C0CC9);
	push(mv, &ts->esp, 0x12);
	mov(&ts->ecx, ts->esi);
	game::sub_549850(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_549E50(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x14);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x4C);
	mov(&ts->esi, ts->ecx);
	game::j__malloc(ts, mv);
	xor_(&ts->edi, ts->edi);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_549E9D;
    }
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x8, 4), 0x79AC30);
	mov(&ts->ecx, 0x3F800000);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x30, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x24, 4), 0x79AC34);
	mov(mv, x86::mem(ts->eax + 0x38, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x3C, 4), ts->edi);
	mov(&ts->edi, ts->eax);

loc_549E9D:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x799390, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	mov(mv, &ts->edx, x86::mem(0x8637C4, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x79C5E4);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->edx);
	game::sub_50B990(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x79C5D4);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->eax);
	game::sub_50B990(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x79C5C4);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->eax);
	game::sub_50B990(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x79C5B8);
	game::sub_50B990(ts, mv);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x48, 4));
	add(&ts->esp, 0x20);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ebx, x86::mem(ts->edi + 0x24, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->ebx);
	game::sub_53CE40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->ebx);
	game::sub_53CEA0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->ebx);
	game::sub_53CF00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->ebx);
	game::sub_53CF60(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + 0x18, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	mov(mv, x86::mem(ts->ebx + 0x14, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x2C, 4));
	mov(mv, x86::mem(ts->ebx + 0x20, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x34, 4));
	mov(mv, x86::mem(ts->ebx + 0x1C, 4), ts->edx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x30, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x18, 4));
	mov(mv, x86::mem(ts->edi + 0x14, 4), ts->eax);
	mov(mv, x86::mem(ts->edi + 0xC, 4), ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x1C, 4));
	mov(mv, x86::mem(ts->edi + 0x10, 4), ts->edx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784358, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x20, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edi);
	mov(mv, x86::mem(ts->edi + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x2C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8637C4, 4));
	mov(mv, x86::mem(ts->edi + 0x48, 4), ts->ecx);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x2C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x28, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x799390, 4));
	inc(&ts->ecx);
	test(&ts->eflags, ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebp);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x10, 4));
	mov(mv, x86::mem(ts->esi + 0x2C, 4), ts->ecx);
	pop(mv, &ts->esp, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_549FC8;
    }
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->edi);

loc_549FC8:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x14);
	retn(mv, &ts->esp, 0x10);
}

void sub_549FD0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	sub(&ts->esp, 0x14);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x3389F685);
	push(mv, &ts->esp, 0x83841A5E);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->ebp - 0xC, 4), ts->ecx);
	game::sub_495460(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, 0x839C60);
	game::sub_5B5350(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x1F8, 4));
	game::__ftol2(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x2328);
	mov(mv, x86::mem(ts->ebp - 0x8, 4), ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_54A01A;
    }
	mov(mv, x86::mem(ts->ebp - 0x8, 4), 0x2328);

loc_54A01A:
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x8, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x8, 4), ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x10, 4));
	goto loc_54A030;

loc_54A030:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x79C604);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(&ts->edi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54A064;
    }
	push(mv, &ts->esp, ts->ebx);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54A064;
    }
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54A064;
    }
	mov(&ts->esi, ts->eax);
	goto loc_54A07D;

loc_54A064:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54A07B;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	game::sub_52C570(ts, mv);
	mov(&ts->esi, ts->eax);
	goto loc_54A07D;

loc_54A07B:
	xor_(&ts->esi, ts->esi);

loc_54A07D:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7850F0, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x8, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x10, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0xC, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x14, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0xC, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fcompp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.parity) {
        goto loc_54A0D4;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebp - 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x7845D4);
	push(mv, &ts->esp, ts->esi);
	game::sub_537BE0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x10, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7859D0, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x14, 4));
	add(&ts->esp, 0x8);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_51D380(ts, mv);
	add(&ts->esp, 0xC);
	goto loc_54A10F;

loc_54A0D4:
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_54A10F;
    }
	mov(mv, &ts->eax, x86::mem(0x8384D4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_54A0E7;
    }
	test(mv, &ts->eflags, x86::mem(ts->esi + 0x1C, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_54A0EE;
    }

loc_54A0E7:
	or_(mv, x86::mem(ts->esi + 0x1C, 4), 0x400001);

loc_54A0EE:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x18, 4), 0x5);
	if (!ts->eflags.zero) {
        goto loc_54A10F;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x64, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x60, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_54A10F;
    }
	mov(&ts->edi, ts->edi);

loc_54A100:
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edx + 0x4, 4));
	add(&ts->esp, 0x4);
	dec(&ts->esi);
	if (!ts->eflags.zero) {
        goto loc_54A100;
    }

loc_54A10F:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x8, 4));
	mov(mv, &ts->esi, x86::mem(ts->ebp - 0x4, 4));
	add(&ts->eax, 0x3E8);
	inc(&ts->esi);
	cmp(&ts->eflags, ts->eax, 0x2328);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->ebp - 0x8, 4), ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_54A030;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xC, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784554, 4));
	game::__ftol2(ts, mv);
	mov(&ts->ebx, ts->eax);
	xor_(&ts->eax, ts->eax);
	xor_(&ts->edi, ts->edi);

loc_54A146:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	lea(mv, &ts->esi, x86::mem(ts->eax + 0x1, 4));
	game::__ftol2(ts, mv);
	add(&ts->eax, ts->edi);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x79C5F4);
	game::sub_50B990(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x8, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_537B80(ts, mv);
	mov(&ts->eax, ts->esi);
	add(&ts->esp, 0x10);
	add(&ts->edi, ts->ebx);
	cmp(&ts->eflags, ts->eax, 0x6);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_54A146;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0xC);
}

void sub_54A190(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x38);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x3C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x44, 4));
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xC, 4));
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->edx);
	fabs(&ts->fp, x86::fp_index(0));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x40, 4));
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x48, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x48, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784358, 4));
	mov(mv, x86::mem(ts->esp + 0x38, 4), ts->eax);
	lea(mv, &ts->esi, x86::mem(ts->ecx + 0x20, 4));
	push(mv, &ts->esp, 0x0);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->ecx + 0x6C, 4), ts->edx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x79C674);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x79C664);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x79C654);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x79C644);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0x79C634);
	mov(mv, x86::mem(ts->esp + 0x24, 4), 0x79C624);
	mov(mv, x86::mem(ts->esp + 0x3C, 4), 0x79C610);
	mov(mv, x86::mem(ts->esp + 0x38, 4), 0x40800000);
	game::sub_540C10(ts, mv);
	push(mv, &ts->esp, 0x79C610);
	game::sub_505450(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537A60(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x58, 4));
	mov(mv, x86::mem(ts->esi + 0x44, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x48, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	add(&ts->esp, 0xC);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x38);
	retn(mv, &ts->esp, 0x10);
}

void sub_54A260(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	sub(&ts->esp, 0x24);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x35C9376);
	push(mv, &ts->esp, 0x83841A5E);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->ebp - 0xC, 4), ts->ecx);
	game::sub_495460(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x83A540, 4));
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x10);
	game::sub_59B080(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_54A2B3;
    }
	mov(mv, &ts->ecx, x86::mem(0x83A540, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x10);
	game::sub_5B0C00(ts, mv);
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (ts->eflags.parity) {
        goto loc_54A2B9;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));

loc_54A2B3:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));

loc_54A2B9:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	xor_(&ts->eax, ts->eax);
	fdiv(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(mv, x86::mem(ts->ebp - 0x8, 4), ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x10, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	mov(&ts->edi, ts->edi);

loc_54A2D0:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x79C604);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(&ts->edi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54A304;
    }
	push(mv, &ts->esp, ts->ebx);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54A304;
    }
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54A304;
    }
	mov(&ts->esi, ts->eax);
	goto loc_54A31D;

loc_54A304:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54A31B;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	game::sub_52C570(ts, mv);
	mov(&ts->esi, ts->eax);
	goto loc_54A31D;

loc_54A31B:
	xor_(&ts->esi, ts->esi);

loc_54A31D:
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x18, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0xC, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x14, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0xC, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x18, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fcompp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_54A36D;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x7845D4);
	push(mv, &ts->esp, ts->esi);
	game::sub_537BE0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x10, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7859D0, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp - 0x14, 4));
	add(&ts->esp, 0x8);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->esi);
	game::sub_51D380(ts, mv);
	add(&ts->esp, 0xC);
	goto loc_54A3A6;

loc_54A36D:
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_54A3A6;
    }
	mov(mv, &ts->eax, x86::mem(0x8384D4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_54A380;
    }
	test(mv, &ts->eflags, x86::mem(ts->esi + 0x1C, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_54A387;
    }

loc_54A380:
	or_(mv, x86::mem(ts->esi + 0x1C, 4), 0x400001);

loc_54A387:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x18, 4), 0x5);
	if (!ts->eflags.zero) {
        goto loc_54A3A6;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x64, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x60, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_54A3A6;
    }

loc_54A397:
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edx + 0x4, 4));
	add(&ts->esp, 0x4);
	dec(&ts->esi);
	if (!ts->eflags.zero) {
        goto loc_54A397;
    }

loc_54A3A6:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x4, 4));
	mov(mv, &ts->esi, x86::mem(ts->ebp - 0x8, 4));
	add(&ts->eax, 0x2);
	inc(&ts->esi);
	cmp(&ts->eflags, ts->eax, 0x14);
	mov(mv, x86::mem(ts->ebp - 0x8, 4), ts->esi);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_54A2D0;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x78, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784258, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	game::__ftol2(ts, mv);
	mov(&ts->ecx, ts->eax);
	mov(&ts->eax, 0x51EB851F);
	imul(&ts->eax, ts->ecx);
	sar(&ts->edx, 0x4);
	mov(&ts->eax, ts->edx);
	shr(&ts->eax, 0x1F);
	add(&ts->edx, ts->eax);
	cmp(&ts->eflags, ts->edx, 0x4);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_54A3F3;
    }
	mov(mv, x86::mem(ts->ebp - 0x4, 4), 0x42480000);
	goto loc_54A417;

loc_54A3F3:
	mov(&ts->eax, 0x51EB851F);
	imul(&ts->eax, ts->ecx);
	sar(&ts->edx, 0x5);
	mov(&ts->ecx, ts->edx);
	shr(&ts->ecx, 0x1F);
	add(&ts->edx, ts->ecx);
	cmp(&ts->eflags, ts->edx, 0x4);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), 0x42C80000);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_54A417;
    }
	mov(mv, x86::mem(ts->ebp - 0x4, 4), 0x43480000);

loc_54A417:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	mov(mv, x86::mem(ts->ebp - 0x8, 4), 0x0);
	fdiv(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x14, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	goto loc_54A430;

loc_54A430:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x8, 4));
	inc(&ts->eax);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x79C5F4);
	mov(mv, x86::mem(ts->ebp - 0x20, 4), ts->eax);
	game::sub_50B990(ts, mv);
	mov(&ts->ebx, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54A4CC;
    }
	mov(mv, &ts->ecx, x86::mem(0x8384D0, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_54A49C;
    }
	mov(mv, &ts->edi, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_54A49C;
    }
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x8, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_54A4D2;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xE4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xDC, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_519E50(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_54A4B8;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xF4, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xEC, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_519E50(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54A4D2;
    }
	goto loc_54A4B8;

loc_54A49C:
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x8637B0);
	game::sub_51BB70(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54A4CC;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x18, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54A4CC;
    }
	mov(mv, &ts->edi, x86::mem(0x8384C4, 4));

loc_54A4B8:
	mov(&ts->ecx, ts->eax);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54A4D2;
    }
	push(mv, &ts->esp, ts->ebx);
	game::sub_517F80(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54A4CC;
    }
	mov(&ts->esi, ts->eax);
	goto loc_54A4E9;

loc_54A4CC:
	mov(mv, &ts->edi, x86::mem(0x8384C4, 4));

loc_54A4D2:
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_54A4E7;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	game::sub_52C570(ts, mv);
	mov(&ts->esi, ts->eax);
	goto loc_54A4E9;

loc_54A4E7:
	xor_(&ts->esi, ts->esi);

loc_54A4E9:
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x1C, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79C684, 4));
	fmulp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x10, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x18, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x10, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x1C, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fcompp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (!ts->eflags.zero) {
        goto loc_54A5C1;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x4, 4));
	game::__ftol2(ts, mv);
	imul(mv, &ts->eax, x86::mem(ts->ebp - 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, ts->esi);
	game::sub_537BE0(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->ebp - 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_51D170(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0xC, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7881F4, 4));
	add(&ts->esp, 0x18);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->esi);
	game::sub_51D2D0(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->ebp - 0x24, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->ebp - 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_51D070(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x18, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp - 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->esi);
	game::sub_51D380(ts, mv);
	add(&ts->esp, 0x24);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_54A5FF;
    }
	mov(mv, &ts->eax, x86::mem(0x8384D4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_54A591;
    }
	test(mv, &ts->eflags, x86::mem(ts->esi + 0x1C, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_54A59F;
    }

loc_54A591:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	and_(&ts->eax, 0xFFFFFFFE);
	or_(&ts->eax, 0x400000);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->eax);

loc_54A59F:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x18, 4), 0x5);
	if (!ts->eflags.zero) {
        goto loc_54A5FF;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x64, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x60, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_54A5FF;
    }
	nop();

loc_54A5B0:
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edx + 0x4, 4));
	add(&ts->esp, 0x4);
	dec(&ts->esi);
	if (!ts->eflags.zero) {
        goto loc_54A5B0;
    }
	goto loc_54A5FF;

loc_54A5C1:
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_54A5FF;
    }
	mov(mv, &ts->eax, x86::mem(0x8384D4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_54A5D4;
    }
	test(mv, &ts->eflags, x86::mem(ts->esi + 0x1C, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_54A5DB;
    }

loc_54A5D4:
	or_(mv, x86::mem(ts->esi + 0x1C, 4), 0x400001);

loc_54A5DB:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x18, 4), 0x5);
	if (!ts->eflags.zero) {
        goto loc_54A5FF;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x64, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x60, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_54A5FF;
    }
	goto loc_54A5F0;

loc_54A5F0:
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edx + 0x4, 4));
	add(&ts->esp, 0x4);
	dec(&ts->esi);
	if (!ts->eflags.zero) {
        goto loc_54A5F0;
    }

loc_54A5FF:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x20, 4));
	cmp(&ts->eflags, ts->eax, 0x5);
	mov(mv, x86::mem(ts->ebp - 0x8, 4), ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_54A430;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0xC);
}

void sub_54A620(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x79C6A4);
	mov(&ts->ebx, ts->ecx);
	game::sub_50B990(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x83A6B4, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	mov(&ts->ecx, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), ts->ecx);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_54A6F0;
    }
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x8, 4));
	mov(&ts->ecx, ts->esi);
	game::sub_5EA8B0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x83A6B4, 4));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_54A66E;
    }
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79BEFC, 4));

loc_54A66E:
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784550, 4));
	mov(&ts->ecx, ts->esi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x8, 4));
	game::sub_5EA8B0(ts, mv);
	neg(&ts->al);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0xAEC8F620);
	add(&ts->eax, 0xACB8DFF3);
	mov(&ts->edx, ts->eax);
	game::sub_4FF9D0(ts, mv);
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_54A6A5;
    }
	mov(&ts->edx, 0xC01A6F63);
	game::sub_4FF9D0(ts, mv);
	mov(&ts->esi, ts->eax);

loc_54A6A5:
	mov(&ts->edx, 0x76F2BC60);
	game::sub_4FF9D0(ts, mv);
	mov(&ts->edi, ts->eax);
	test(&ts->eflags, ts->edi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_54A6C1;
    }
	mov(&ts->edx, 0xC01A6F63);
	game::sub_4FF9D0(ts, mv);
	mov(&ts->edi, ts->eax);

loc_54A6C1:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x83A6BC, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	game::__ftol2(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	sub(&ts->esp, 0x8);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 8));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x1C);
	goto loc_54A702;

loc_54A6F0:
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0xA4C02484);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_495460(ts, mv);
	add(&ts->esp, 0xC);

loc_54A702:
	push(mv, &ts->esp, 0x79C698);
	game::sub_50B990(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x83A6B8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	mov(&ts->ecx, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), ts->ecx);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_54A7C1;
    }
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x8, 4));
	mov(&ts->ecx, ts->esi);
	game::sub_5EA8B0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x83A6B8, 4));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_54A745;
    }
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79BEF0, 8));

loc_54A745:
	mov(&ts->ecx, ts->esi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x8, 4));
	game::sub_5EA8B0(ts, mv);
	neg(&ts->al);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0x8FC570A8);
	add(&ts->eax, 0xCBBC6512);
	mov(&ts->edx, ts->eax);
	game::sub_4FF9D0(ts, mv);
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_54A776;
    }
	mov(&ts->edx, 0xC01A6F63);
	game::sub_4FF9D0(ts, mv);
	mov(&ts->esi, ts->eax);

loc_54A776:
	mov(&ts->edx, 0x43AEEF78);
	game::sub_4FF9D0(ts, mv);
	mov(&ts->edi, ts->eax);
	test(&ts->eflags, ts->edi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_54A792;
    }
	mov(&ts->edx, 0xC01A6F63);
	game::sub_4FF9D0(ts, mv);
	mov(&ts->edi, ts->eax);

loc_54A792:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x83A6C0, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	game::__ftol2(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	sub(&ts->esp, 0x8);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 8));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x1C);
	goto loc_54A7D3;

loc_54A7C1:
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0xA4C02484);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_495460(ts, mv);
	add(&ts->esp, 0xC);

loc_54A7D3:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FFD0);
	push(mv, &ts->esp, 0x79C688);
	push(mv, &ts->esp, ts->eax);
	game::sub_5426C0(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_54A800(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	sub(&ts->esp, 0x8);
	mov(mv, &ts->eax, x86::mem(0x83A64C, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(0x8900AC, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x4D, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x1C, 4));
	mov(mv, x86::mem(ts->ebp - 0x1, 1), 0x1);
	mov(mv, x86::mem(ts->ebp - 0x8, 4), 0x3F800000);
	if (ts->eflags.zero) {
        goto loc_54A880;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x1E0, 4));
	game::sub_56D440(ts, mv);
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (ts->eflags.parity) {
        goto loc_54A8D4;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79C6B4);
	push(mv, &ts->esp, 0x11BF9934);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->ebp - 0x1, 1), 0x1);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x4D, 1), 0x0);
	game::sub_523330(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	game::sub_54A620(ts, mv);

loc_54A880:
	mov(mv, &ts->eax, x86::mem(0x838564, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x34, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0x406415E3);
	if (ts->eflags.zero) {
        goto loc_54A92D;
    }
	cmp(&ts->eflags, ts->eax, 0xC98356BA);
	if (ts->eflags.zero) {
        goto loc_54A8DA;
    }
	cmp(&ts->eflags, ts->eax, 0xE1FDE1D1);
	if (!ts->eflags.zero) {
        goto loc_54A963;
    }
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54A963;
    }
	mov(mv, &ts->edx, x86::mem(0x7FA234, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5377A0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_54A8D4:
	mov(mv, x86::mem(ts->ebp - 0x1, 1), 0x0);
	goto loc_54A880;

loc_54A8DA:
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	game::sub_52CDD0(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x4C, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_54A963;
    }
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54A8FF;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_5376F0(ts, mv);

loc_54A8FF:
	push(mv, &ts->esp, 0x790000);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_54A963;
    }
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54A963;
    }
	push(mv, &ts->esp, 0x790000);
	game::sub_5376F0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_54A92D:
	mov(mv, &ts->al, x86::mem(ts->ebp - 0x1, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_54A94B;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_523330(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x1E0, 4));
	push(mv, &ts->esp, 0x0);
	game::sub_56E680(ts, mv);

loc_54A94B:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C60(ts, mv);
	add(&ts->esp, 0x10);

loc_54A963:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);
}

void sub_54A970(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	sub(&ts->esp, 0x44);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->ebp - 0x8, 4), ts->ecx);
	mov(mv, x86::mem(ts->ebp - 0x24, 4), 0x79C704);
	mov(mv, x86::mem(ts->ebp - 0x20, 4), 0x79C6FC);
	mov(mv, x86::mem(ts->ebp - 0x1C, 4), 0x79C6F8);
	mov(mv, x86::mem(ts->ebp - 0x14, 4), 0x0);
	push(mv, &ts->esp, ts->edi);
	goto loc_54A9A0;

loc_54A9A0:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x14, 4));
	mov(&ts->ebx, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebp + (ts->eax*4) - 0x24, 4));
	imul(&ts->ebx, ts->ebx, 0x6C);
	push(mv, &ts->esp, ts->eax);
	add(&ts->ebx, 0x83A65C);
	push(mv, &ts->esp, 0x79C6EC);
	mov(mv, x86::mem(ts->ebp - 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->ebp - 0x10, 4), ts->eax);
	game::sub_50B990(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->ebx + 0x8, 4));
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54AA1A;
    }
	cmp(&ts->eflags, ts->eax, 0x7FFFFFFF);
	if (ts->eflags.zero) {
        goto loc_54AA1A;
    }
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->eax, x86::mem(ts->ebp - 0x44, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_577240(ts, mv);
	mov(&ts->edx, 0x29F4BF03);
	game::sub_4FF9D0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_54A9FB;
    }
	mov(&ts->edx, 0xC01A6F63);
	game::sub_4FF9D0(ts, mv);

loc_54A9FB:
	mov(mv, &ts->edx, x86::mem(ts->ebp - 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x44, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x794FD8);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x14);
	goto loc_54AAAB;

loc_54AA1A:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x8, 4));
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_54AA3D;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54AA3D;
    }
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_54AA50;
    }

loc_54AA3D:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54AAAB;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	game::sub_52C570(ts, mv);

loc_54AA50:
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_54AAAB;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x18, 4), 0x2);
	if (!ts->eflags.zero) {
        goto loc_54AAAB;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	test(&ts->eflags, ts->al, 0x2);
	mov(mv, x86::mem(ts->ebp - 0x1, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_54AA6B;
    }
	mov(mv, x86::mem(ts->ebp - 0x1, 1), 0x1);

loc_54AA6B:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x60, 4));
	mov(&ts->ecx, 0xA4C02484);
	cmp(&ts->eflags, ts->edx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54AA82;
    }
	or_(&ts->eax, 0x400000);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->ecx);

loc_54AA82:
	mov(mv, &ts->ecx, x86::mem(0x838478, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54AA91;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->esi);
	call(ts, mv, x86::mem(ts->edx, 4));

loc_54AA91:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1C, 4));
	mov(mv, &ts->cl, x86::mem(ts->ebp - 0x1, 1));
	and_(&ts->edx, 0xFFFFFFFD);
	test(&ts->eflags, ts->cl, ts->cl);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->edx);
	mov(&ts->eax, ts->edx);
	if (ts->eflags.zero) {
        goto loc_54AAAB;
    }
	or_(&ts->eax, 0x400000);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->eax);

loc_54AAAB:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x79C6E0);
	game::sub_50B990(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->ebx + 0xC, 4));
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54AB10;
    }
	cmp(&ts->eflags, ts->eax, 0x7FFFFFFF);
	if (ts->eflags.zero) {
        goto loc_54AB10;
    }
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->edx, x86::mem(ts->ebp - 0x44, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_577240(ts, mv);
	mov(&ts->edx, 0x29F4BF03);
	game::sub_4FF9D0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_54AAF1;
    }
	mov(&ts->edx, 0xC01A6F63);
	game::sub_4FF9D0(ts, mv);

loc_54AAF1:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->ebp - 0x44, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x794FD8);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edx);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x14);
	goto loc_54AB9A;

loc_54AB10:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x8, 4));
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_54AB33;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54AB33;
    }
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_54AB46;
    }

loc_54AB33:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54AB9A;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	game::sub_52C570(ts, mv);

loc_54AB46:
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_54AB9A;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x18, 4), 0x2);
	if (!ts->eflags.zero) {
        goto loc_54AB9A;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	xor_(&ts->bl, ts->bl);
	test(&ts->eflags, ts->al, 0x2);
	if (ts->eflags.zero) {
        goto loc_54AB5D;
    }
	mov(&ts->bl, 0x1);

loc_54AB5D:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x60, 4));
	mov(&ts->ecx, 0xA4C02484);
	cmp(&ts->eflags, ts->edx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54AB74;
    }
	or_(&ts->eax, 0x400000);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->ecx);

loc_54AB74:
	mov(mv, &ts->ecx, x86::mem(0x838478, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54AB83;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->esi);
	call(ts, mv, x86::mem(ts->edx, 4));

loc_54AB83:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1C, 4));
	and_(&ts->edx, 0xFFFFFFFD);
	test(&ts->eflags, ts->bl, ts->bl);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->edx);
	mov(&ts->eax, ts->edx);
	if (ts->eflags.zero) {
        goto loc_54AB9A;
    }
	or_(&ts->eax, 0x400000);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->eax);

loc_54AB9A:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x79C6D4);
	game::sub_50B990(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->ebp - 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx, 4));
	mov(&ts->edi, ts->eax);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	add(&ts->esp, 0x8);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_54AC2E;
    }
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x8, 4));
	mov(&ts->ecx, ts->esi);
	game::sub_5EA8B0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx, 4));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_54ABD7;
    }
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7904FC, 4));
	goto loc_54ABDD;

loc_54ABD7:
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78426C, 4));

loc_54ABDD:
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x18, 4));
	mov(&ts->ecx, ts->esi);
	game::sub_5EA8B0(ts, mv);
	neg(&ts->al);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0x4652E0B4);
	add(&ts->eax, 0x8569AB44);
	mov(&ts->edx, ts->eax);
	game::sub_4FF9D0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_54AC0A;
    }
	mov(&ts->edx, 0xC01A6F63);
	game::sub_4FF9D0(ts, mv);

loc_54AC0A:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x18, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	sub(&ts->esp, 0x8);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 8));
	push(mv, &ts->esp, 0x7951F0);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edx);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x18);
	goto loc_54ACBB;

loc_54AC2E:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x8, 4));
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_54AC51;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54AC51;
    }
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_54AC64;
    }

loc_54AC51:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54ACB8;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	game::sub_52C570(ts, mv);

loc_54AC64:
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_54ACB8;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x18, 4), 0x2);
	if (!ts->eflags.zero) {
        goto loc_54ACB8;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	xor_(&ts->bl, ts->bl);
	test(&ts->eflags, ts->al, 0x2);
	if (ts->eflags.zero) {
        goto loc_54AC7B;
    }
	mov(&ts->bl, 0x1);

loc_54AC7B:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x60, 4));
	mov(&ts->ecx, 0xA4C02484);
	cmp(&ts->eflags, ts->edx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54AC92;
    }
	or_(&ts->eax, 0x400000);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->ecx);

loc_54AC92:
	mov(mv, &ts->ecx, x86::mem(0x838478, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54ACA1;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->esi);
	call(ts, mv, x86::mem(ts->edx, 4));

loc_54ACA1:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1C, 4));
	and_(&ts->edx, 0xFFFFFFFD);
	test(&ts->eflags, ts->bl, ts->bl);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->edx);
	mov(&ts->eax, ts->edx);
	if (ts->eflags.zero) {
        goto loc_54ACB8;
    }
	or_(&ts->eax, 0x400000);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->eax);

loc_54ACB8:
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x8, 4));

loc_54ACBB:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x79C6C8);
	game::sub_50B990(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->ebp - 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x58, 4));
	mov(&ts->ebx, ts->eax);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	add(&ts->esp, 0x8);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_54AD7E;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_5EA8B0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x58, 4));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_54ACF9;
    }
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79BEFC, 4));

loc_54ACF9:
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784550, 4));
	mov(&ts->ecx, ts->esi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x18, 4));
	game::sub_5EA8B0(ts, mv);
	neg(&ts->al);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0xAEC8F620);
	add(&ts->eax, 0xACB8DFF3);
	mov(&ts->edx, ts->eax);
	game::sub_4FF9D0(ts, mv);
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_54AD30;
    }
	mov(&ts->edx, 0xC01A6F63);
	game::sub_4FF9D0(ts, mv);
	mov(&ts->esi, ts->eax);

loc_54AD30:
	mov(&ts->edx, 0x76F2BC60);
	game::sub_4FF9D0(ts, mv);
	mov(&ts->edi, ts->eax);
	test(&ts->eflags, ts->edi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_54AD4C;
    }
	mov(&ts->edx, 0xC01A6F63);
	game::sub_4FF9D0(ts, mv);
	mov(&ts->edi, ts->eax);

loc_54AD4C:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x60, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	game::__ftol2(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x18, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp - 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	sub(&ts->esp, 0x8);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 8));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x1C);
	goto loc_54AE08;

loc_54AD7E:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x8, 4));
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_54ADA1;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54ADA1;
    }
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_54ADB4;
    }

loc_54ADA1:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54AE08;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebx);
	game::sub_52C570(ts, mv);

loc_54ADB4:
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_54AE08;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x18, 4), 0x2);
	if (!ts->eflags.zero) {
        goto loc_54AE08;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	xor_(&ts->bl, ts->bl);
	test(&ts->eflags, ts->al, 0x2);
	if (ts->eflags.zero) {
        goto loc_54ADCB;
    }
	mov(&ts->bl, 0x1);

loc_54ADCB:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x60, 4));
	mov(&ts->ecx, 0xA4C02484);
	cmp(&ts->eflags, ts->edx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54ADE2;
    }
	or_(&ts->eax, 0x400000);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->ecx);

loc_54ADE2:
	mov(mv, &ts->ecx, x86::mem(0x838478, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54ADF1;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->esi);
	call(ts, mv, x86::mem(ts->edx, 4));

loc_54ADF1:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1C, 4));
	and_(&ts->edx, 0xFFFFFFFD);
	test(&ts->eflags, ts->bl, ts->bl);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->edx);
	mov(&ts->eax, ts->edx);
	if (ts->eflags.zero) {
        goto loc_54AE08;
    }
	or_(&ts->eax, 0x400000);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->eax);

loc_54AE08:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x79C6BC);
	game::sub_50B990(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->ebp - 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x5C, 4));
	mov(&ts->ebx, ts->eax);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	add(&ts->esp, 0x8);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_54AEC8;
    }
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x8, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_5EA8B0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x5C, 4));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_54AE49;
    }
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79BEF0, 8));

loc_54AE49:
	mov(&ts->ecx, ts->edi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x18, 4));
	game::sub_5EA8B0(ts, mv);
	neg(&ts->al);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0x8FC570A8);
	add(&ts->eax, 0xCBBC6512);
	mov(&ts->edx, ts->eax);
	game::sub_4FF9D0(ts, mv);
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_54AE7A;
    }
	mov(&ts->edx, 0xC01A6F63);
	game::sub_4FF9D0(ts, mv);
	mov(&ts->esi, ts->eax);

loc_54AE7A:
	mov(&ts->edx, 0x43AEEF78);
	game::sub_4FF9D0(ts, mv);
	mov(&ts->edi, ts->eax);
	test(&ts->eflags, ts->edi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_54AE96;
    }
	mov(&ts->edx, 0xC01A6F63);
	game::sub_4FF9D0(ts, mv);
	mov(&ts->edi, ts->eax);

loc_54AE96:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x64, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	game::__ftol2(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x18, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp - 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	sub(&ts->esp, 0x8);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 8));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x1C);
	goto loc_54AF52;

loc_54AEC8:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x8, 4));
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_54AEEB;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54AEEB;
    }
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_54AEFE;
    }

loc_54AEEB:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54AF52;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebx);
	game::sub_52C570(ts, mv);

loc_54AEFE:
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_54AF52;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x18, 4), 0x2);
	if (!ts->eflags.zero) {
        goto loc_54AF52;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	xor_(&ts->bl, ts->bl);
	test(&ts->eflags, ts->al, 0x2);
	if (ts->eflags.zero) {
        goto loc_54AF15;
    }
	mov(&ts->bl, 0x1);

loc_54AF15:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x60, 4));
	mov(&ts->ecx, 0xA4C02484);
	cmp(&ts->eflags, ts->edx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54AF2C;
    }
	or_(&ts->eax, 0x400000);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->ecx);

loc_54AF2C:
	mov(mv, &ts->ecx, x86::mem(0x838478, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54AF3B;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->esi);
	call(ts, mv, x86::mem(ts->edx, 4));

loc_54AF3B:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1C, 4));
	and_(&ts->edx, 0xFFFFFFFD);
	test(&ts->eflags, ts->bl, ts->bl);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->edx);
	mov(&ts->eax, ts->edx);
	if (ts->eflags.zero) {
        goto loc_54AF52;
    }
	or_(&ts->eax, 0x400000);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->eax);

loc_54AF52:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x14, 4));
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0x3);
	mov(mv, x86::mem(ts->ebp - 0x14, 4), ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_54A9A0;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x8, 4));
	game::sub_5103D0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_54AF80(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x838568, 4));
	dec(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0x5);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_54AF8B;
    }
	jmp(x86::mem(0x54AFE8, 4));

loc_54AF92:
	goto loc_499B10;

loc_54AF97:
	push(mv, &ts->esp, 0xDD60E402);
	mov(&ts->ecx, 0x85AD40);
	game::sub_500B80(ts, mv);
	neg(&ts->al);
	sbb(&ts->eax, ts->eax);
	neg(&ts->eax);
	add(&ts->eax, 0xDD60E402);
	push(mv, &ts->esp, ts->eax);
	game::sub_4FFC90(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x85AD40);
	game::sub_5410E0(ts, mv);
	game::sub_5404A0(ts, mv);
	mov(mv, x86::mem(0x86347C, 1), 0x1);
	retn(mv, &ts->esp);

loc_54AFD2:
	goto loc_499560;

loc_54AFD7:
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xB);
	game::sub_5F41E0(ts, mv);

def_54AF8B:
	retn(mv, &ts->esp);

loc_499560:
	mov(&ts->ecx, 0x85AD40);
	game::sub_528560(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx, 4), 0x6);
	if (!ts->eflags.zero) {
        goto loc_499584;
    }
	push(mv, &ts->esp, 0x4);
	game::sub_5F4240(ts, mv);
	mov(mv, x86::mem(0x836350, 1), 0x0);
	retn(mv, &ts->esp);

loc_499584:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xB);
	game::sub_5F41E0(ts, mv);
	mov(mv, x86::mem(0x836350, 1), 0x0);
	retn(mv, &ts->esp);

loc_499B10:
	mov(mv, &ts->eax, x86::mem(0x863444, 4));
	mov(mv, &ts->edx, x86::mem(0x863448, 4));
	neg(&ts->eax);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, ts->edx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x85AD40);
	game::sub_541160(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	push(mv, &ts->esp, 0x1);
	game::sub_5F4240(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xF);
	game::sub_5F41E0(ts, mv);
	retn(mv, &ts->esp);
}

void sub_54B000(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x4, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_54B05D;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	mov(&ts->edx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_53DA10(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_54B03D;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xD8, 4));
	push(mv, &ts->esp, ts->eax);
	goto loc_54B070;

loc_54B03D:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_54B054;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xD4, 4));
	goto loc_54B06F;

loc_54B054:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xD0, 4));
	push(mv, &ts->esp, ts->edx);
	goto loc_54B070;

loc_54B05D:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_53DA10(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xD0, 4));

loc_54B06F:
	push(mv, &ts->esp, ts->ecx);

loc_54B070:
	mov(&ts->ecx, ts->esi);
	game::sub_523600(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x4);
}

void sub_54B090(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x70, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_54B0AC;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x6C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x832DAC);
	game::sub_488AA0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x70, 1), 0x0);

loc_54B0AC:
	mov(&ts->ecx, 0x863780);
	game::sub_510A70(ts, mv);
	mov(&ts->ecx, 0x863780);
	game::sub_523B40(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_510CE0(ts, mv);
	game::sub_5BE1B0(ts, mv);
	mov(mv, x86::mem(0x838578, 4), 0x0);
	pop(mv, &ts->esp, ts->esi);
	goto sub_5404A0;
}

void sub_54B0E0(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x4, 4), 0xC98356BA);
	if (!ts->eflags.zero) {
        goto locret_54B14B;
    }
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(0x863790, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_54B13B;
    }
	mov(mv, &ts->eax, x86::mem(0x86378C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54B13B;
    }
	push(mv, &ts->esp, 0x79C70C);
	push(mv, &ts->esp, ts->esi);
	game::sub_4953E0(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54B128;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x24, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_54B128;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x1C, 4));
	or_(&ts->ecx, 0x400000);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->ecx);

loc_54B128:
	push(mv, &ts->esp, 0x79C70C);
	push(mv, &ts->esp, ts->esi);
	game::sub_495500(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_54B13B:
	push(mv, &ts->esp, 0x79C70C);
	push(mv, &ts->esp, ts->esi);
	game::sub_4954C0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);

locret_54B14B:
	retn(mv, &ts->esp, 0x10);
}

void sub_54B150(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x48, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_54B176;
    }
	cmp(mv, &ts->eflags, ts->eax, x86::mem(0x838408, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_54B176;
    }
	mov(mv, &ts->ecx, x86::mem(0x83840C, 4));
	shl(&ts->eax, 0x6);
	add(&ts->eax, ts->ecx);
	mov(&ts->edi, ts->eax);
	goto loc_54B178;

loc_54B176:
	xor_(&ts->edi, ts->edi);

loc_54B178:
	mov(mv, &ts->ecx, x86::mem(0x838578, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	dec(&ts->ecx);
	neg(&ts->ecx);
	sbb(&ts->ecx, ts->ecx);
	and_(&ts->ecx, 0x6E07F3B2);
	add(&ts->ecx, 0xF7333312);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x42ADB44C);
	push(mv, &ts->esp, ts->edx);
	game::sub_495460(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x838578, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	dec(&ts->eax);
	neg(&ts->eax);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0x96A425B2);
	add(&ts->eax, 0x246536EF);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x10CBA23);
	push(mv, &ts->esp, ts->ecx);
	game::sub_495460(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x28, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x79B858);
	game::sub_43DB80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x9E302291);
	push(mv, &ts->esp, ts->ebx);
	game::sub_495460(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->edi + 0x28, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x79C71C);
	game::sub_43DB80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x3554DEB1);
	push(mv, &ts->esp, ts->esi);
	game::sub_495460(ts, mv);
	add(&ts->esp, 0x40);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_54B210(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_543D40(ts, mv);
	cmp(&ts->eflags, ts->edi, 0xB5971BF1);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_54B292;
    }
	if (ts->eflags.zero) {
        goto loc_54B24D;
    }
	cmp(&ts->eflags, ts->edi, 0x911AB364);
	if (ts->eflags.zero) {
        goto loc_54B259;
    }
	cmp(&ts->eflags, ts->edi, 0x9120409E);
	if (!ts->eflags.zero) {
        goto loc_54B2FC;
    }

loc_54B24D:
	mov(&ts->ecx, ts->esi);
	game::sub_54B150(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_54B259:
	mov(&ts->ecx, ts->esi);
	game::sub_510E10(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(0x838578, 4), 0x1);
	mov(mv, x86::mem(0x838581, 1), 0x0);
	if (!ts->eflags.zero) {
        goto loc_54B281;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_53DE30(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_54B281:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_53DE30(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_54B292:
	cmp(&ts->eflags, ts->edi, 0xC98356BA);
	if (!ts->eflags.zero) {
        goto loc_54B2FC;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54B2FC;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x48, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_54B2BD;
    }
	cmp(mv, &ts->eflags, ts->eax, x86::mem(0x838408, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_54B2BD;
    }
	mov(mv, &ts->ecx, x86::mem(0x83840C, 4));
	shl(&ts->eax, 0x6);
	add(&ts->eax, ts->ecx);
	goto loc_54B2BF;

loc_54B2BD:
	xor_(&ts->eax, ts->eax);

loc_54B2BF:
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x28, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x79C724);
	push(mv, &ts->esp, ts->eax);
	game::sub_4953E0(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54B2EB;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x24, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_54B2EB;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x1C, 4));
	or_(&ts->ecx, 0x400000);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->ecx);

loc_54B2EB:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x79C724);
	push(mv, &ts->esp, ts->edx);
	game::sub_495500(ts, mv);
	add(&ts->esp, 0x8);

loc_54B2FC:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);
}

void sub_54B310(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x777B22);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0xC0);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x124, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ebx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_54B994;
    }

loc_54B347:
	push(mv, &ts->esp, 0x3C);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_54B38F;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	mov(&ts->edx, ts->eax);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x28, 1), 0x1);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), 0x78F228);
	mov(mv, x86::mem(ts->eax + 0x30, 4), 0x78F21C);
	mov(mv, x86::mem(ts->eax, 4), 0x79B9D4);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->edx);
	add(&ts->eax, 0x4);
	goto loc_54B397;

loc_54B38F:
	xor_(&ts->edx, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->edx);
	xor_(&ts->eax, ts->eax);

loc_54B397:
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	add(&ts->edi, 0x4C);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0xC, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	lea(mv, &ts->esi, x86::mem(ts->edi + 0x8, 4));
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	inc(mv, x86::mem(ts->edi + 0x18, 4));
	mov(&ts->ecx, ts->edx);
	game::sub_51EFD0(ts, mv);
	mov(&ts->ecx, ts->edi);
	game::sub_51F560(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0x2C, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_54B3D4;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_54B3CF;
    }
	lea(mv, &ts->eax, x86::mem(ts->esi - 0x4, 4));
	goto loc_54B3D1;

loc_54B3CF:
	xor_(&ts->eax, ts->eax);

loc_54B3D1:
	mov(mv, x86::mem(ts->edi + 0x2C, 4), ts->eax);

loc_54B3D4:
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x14, 4));
	inc(&ts->ebp);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x79C744);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x88, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8C, 4), ts->ebp);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->al, x86::mem(ts->esp + 0x90, 1));
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x4, 4));
	add(&ts->esp, 0x10);
	or_(&ts->esi, 0xFFFFFFFF);
	test(&ts->eflags, ts->al, ts->al);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x80, 4));
	if (ts->eflags.zero) {
        goto loc_54B42E;
    }

loc_54B414:
	imul(&ts->esi, ts->esi, 0x21);
	cmp(&ts->eflags, ts->al, 0x61);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_54B421;
    }
	cmp(&ts->eflags, ts->al, 0x7A);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_54B421;
    }
	add(&ts->al, 0xE0);

loc_54B421:
	movzx(&ts->edx, ts->al);
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x1, 1));
	add(&ts->esi, ts->edx);
	inc(&ts->ecx);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_54B414;
    }

loc_54B42E:
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_54B47D;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_54B47D;
    }
	mov(mv, x86::mem(ts->esp + 0x34, 4), 0x79AAF4);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x34, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xDC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x3C, 4), ts->esi);
	mov(mv, x86::mem(ts->esp + 0x40, 4), ts->ebx);
	game::sub_504880(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x3C, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0xD8, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->esp + 0x34, 4), 0x79AA4C);
	if (!ts->eflags.zero) {
        goto loc_54B494;
    }

loc_54B47D:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_54B49A;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->esi);
	game::sub_52C570(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_54B49A;
    }

loc_54B494:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x18, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_54B49C;
    }

loc_54B49A:
	xor_(&ts->eax, ts->eax);

loc_54B49C:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x79C734);
	mov(mv, x86::mem(ts->edx + 0x34, 4), ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x88, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->al, x86::mem(ts->esp + 0x90, 1));
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x4, 4));
	add(&ts->esp, 0x10);
	or_(&ts->esi, 0xFFFFFFFF);
	test(&ts->eflags, ts->al, ts->al);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x80, 4));
	if (ts->eflags.zero) {
        goto loc_54B4F1;
    }

loc_54B4D7:
	imul(&ts->esi, ts->esi, 0x21);
	cmp(&ts->eflags, ts->al, 0x61);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_54B4E4;
    }
	cmp(&ts->eflags, ts->al, 0x7A);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_54B4E4;
    }
	add(&ts->al, 0xE0);

loc_54B4E4:
	movzx(&ts->edx, ts->al);
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x1, 1));
	add(&ts->esi, ts->edx);
	inc(&ts->ecx);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_54B4D7;
    }

loc_54B4F1:
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_54B544;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_54B544;
    }
	mov(mv, x86::mem(ts->esp + 0x70, 4), 0x79AAF4);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x70, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xDC, 4), 0x1);
	mov(mv, x86::mem(ts->esp + 0x78, 4), ts->esi);
	mov(mv, x86::mem(ts->esp + 0x7C, 4), ts->ebx);
	game::sub_504880(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x78, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0xD8, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->esp + 0x70, 4), 0x79AA4C);
	if (!ts->eflags.zero) {
        goto loc_54B55B;
    }

loc_54B544:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_54B561;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->esi);
	game::sub_52C570(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_54B561;
    }

loc_54B55B:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x18, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_54B563;
    }

loc_54B561:
	xor_(&ts->eax, ts->eax);

loc_54B563:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->edx + 0x38, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x4, 4));
	add(&ts->esi, 0xE454E9A5);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_54B5D2;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_54B5D2;
    }
	mov(mv, x86::mem(ts->esp + 0x4C, 4), 0x79AAF4);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x4C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xDC, 4), 0x2);
	mov(mv, x86::mem(ts->esp + 0x54, 4), ts->esi);
	mov(mv, x86::mem(ts->esp + 0x58, 4), ts->ebx);
	game::sub_504880(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x54, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0xD8, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->esp + 0x4C, 4), 0x79AA4C);
	if (ts->eflags.zero) {
        goto loc_54B5D2;
    }
	mov(&ts->esi, ts->eax);
	goto loc_54B5EB;

loc_54B5D2:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_54B5E9;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->esi);
	game::sub_52C570(ts, mv);
	mov(&ts->esi, ts->eax);
	goto loc_54B5EB;

loc_54B5E9:
	xor_(&ts->esi, ts->esi);

loc_54B5EB:
	push(mv, &ts->esp, 0x10);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_54B607;
    }
	mov(mv, x86::mem(ts->eax, 4), 0x790C2C);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->esi);
	add(&ts->eax, 0x4);
	goto loc_54B609;

loc_54B607:
	xor_(&ts->eax, ts->eax);

loc_54B609:
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x14, 4));
	add(&ts->esi, 0xC);
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	mov(mv, &ts->edi, x86::mem(ts->edx + 0x4, 4));
	add(&ts->ebp, 0x66646FC4);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_54B685;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_54B685;
    }
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x79AAF4);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xDC, 4), 0x3);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->ebx);
	game::sub_504880(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0xD8, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x79AA4C);
	if (ts->eflags.zero) {
        goto loc_54B685;
    }
	mov(&ts->edi, ts->eax);
	goto loc_54B69E;

loc_54B685:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_54B69C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebp);
	game::sub_52C570(ts, mv);
	mov(&ts->edi, ts->eax);
	goto loc_54B69E;

loc_54B69C:
	xor_(&ts->edi, ts->edi);

loc_54B69E:
	push(mv, &ts->esp, 0x10);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_54B6BA;
    }
	mov(mv, x86::mem(ts->eax, 4), 0x790C2C);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->edi);
	add(&ts->eax, 0x4);
	goto loc_54B6BC;

loc_54B6BA:
	xor_(&ts->eax, ts->eax);

loc_54B6BC:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	mov(mv, &ts->edi, x86::mem(ts->edx + 0x4, 4));
	add(&ts->ebp, 0x2890C8AF);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_54B731;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_54B731;
    }
	mov(mv, x86::mem(ts->esp + 0x64, 4), 0x79AAF4);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x64, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xDC, 4), 0x4);
	mov(mv, x86::mem(ts->esp + 0x6C, 4), ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x70, 4), ts->ebx);
	game::sub_504880(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x6C, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0xD8, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->esp + 0x64, 4), 0x79AA4C);
	if (ts->eflags.zero) {
        goto loc_54B731;
    }
	mov(&ts->edi, ts->eax);
	goto loc_54B74A;

loc_54B731:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_54B748;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebp);
	game::sub_52C570(ts, mv);
	mov(&ts->edi, ts->eax);
	goto loc_54B74A;

loc_54B748:
	xor_(&ts->edi, ts->edi);

loc_54B74A:
	push(mv, &ts->esp, 0x10);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_54B766;
    }
	mov(mv, x86::mem(ts->eax, 4), 0x790C2C);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->edi);
	add(&ts->eax, 0x4);
	goto loc_54B768;

loc_54B766:
	xor_(&ts->eax, ts->eax);

loc_54B768:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	mov(mv, &ts->edi, x86::mem(ts->edx + 0x4, 4));
	add(&ts->ebp, 0x77BD189E);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_54B7DD;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_54B7DD;
    }
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0x79AAF4);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xDC, 4), 0x5);
	mov(mv, x86::mem(ts->esp + 0x30, 4), ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x34, 4), ts->ebx);
	game::sub_504880(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x30, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0xD8, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0x79AA4C);
	if (ts->eflags.zero) {
        goto loc_54B7DD;
    }
	mov(&ts->edi, ts->eax);
	goto loc_54B7F6;

loc_54B7DD:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_54B7F4;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebp);
	game::sub_52C570(ts, mv);
	mov(&ts->edi, ts->eax);
	goto loc_54B7F6;

loc_54B7F4:
	xor_(&ts->edi, ts->edi);

loc_54B7F6:
	push(mv, &ts->esp, 0x10);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_54B812;
    }
	mov(mv, x86::mem(ts->eax, 4), 0x790C2C);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->edi);
	add(&ts->eax, 0x4);
	goto loc_54B814;

loc_54B812:
	xor_(&ts->eax, ts->eax);

loc_54B814:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	mov(mv, &ts->edi, x86::mem(ts->edx + 0x4, 4));
	add(&ts->ebp, 0xF3EBDC4E);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_54B889;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_54B889;
    }
	mov(mv, x86::mem(ts->esp + 0x40, 4), 0x79AAF4);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x40, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xDC, 4), 0x6);
	mov(mv, x86::mem(ts->esp + 0x48, 4), ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x4C, 4), ts->ebx);
	game::sub_504880(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x48, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0xD8, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->esp + 0x40, 4), 0x79AA4C);
	if (ts->eflags.zero) {
        goto loc_54B889;
    }
	mov(&ts->edi, ts->eax);
	goto loc_54B8A2;

loc_54B889:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_54B8A0;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebp);
	game::sub_52C570(ts, mv);
	mov(&ts->edi, ts->eax);
	goto loc_54B8A2;

loc_54B8A0:
	xor_(&ts->edi, ts->edi);

loc_54B8A2:
	push(mv, &ts->esp, 0x10);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_54B8BE;
    }
	mov(mv, x86::mem(ts->eax, 4), 0x790C2C);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->edi);
	add(&ts->eax, 0x4);
	goto loc_54B8C0;

loc_54B8BE:
	xor_(&ts->eax, ts->eax);

loc_54B8C0:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->edx + 0x4, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	lea(mv, &ts->edi, x86::mem(ts->ebp - 0x219CA084, 4));
	if (ts->eflags.zero) {
        goto loc_54B931;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_54B931;
    }
	mov(mv, x86::mem(ts->esp + 0x58, 4), 0x79AAF4);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x58, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xDC, 4), 0x7);
	mov(mv, x86::mem(ts->esp + 0x60, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x64, 4), ts->ebx);
	game::sub_504880(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x60, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0xD8, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->esp + 0x58, 4), 0x79AA4C);
	if (!ts->eflags.zero) {
        goto loc_54B948;
    }

loc_54B931:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_54B946;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	game::sub_52C570(ts, mv);
	goto loc_54B948;

loc_54B946:
	xor_(&ts->eax, ts->eax);

loc_54B948:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	lea(mv, &ts->edx, x86::mem(ts->ebp + (ts->ebp*4), 4));
	shl(&ts->edx, 0x4);
	sub(&ts->edx, 0x87);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->edx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	mov(mv, x86::mem(ts->ecx + 0x14, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x7C, 4));
	mov(mv, x86::mem(ts->ecx + 0x20, 4), 0x44070000);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x1C, 4));
	mov(mv, x86::mem(ts->ecx + 0x24, 4), 0x428C0000);
	mov(mv, x86::mem(ts->ecx + 0x18, 4), 0xC38D8000);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->ecx + 0x124, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_54B347;
    }

loc_54B994:
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x10, 4));
	xor_(&ts->edi, ts->edi);
	add(&ts->ebx, 0x4C);
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_54B9A0:
	push(mv, &ts->esp, 0x20);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54B9D2;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 1), 0x1);
	mov(mv, x86::mem(ts->eax, 4), 0x795CB0);
	mov(mv, x86::mem(ts->eax + 0x18, 4), 0x0);
	mov(mv, x86::mem(ts->eax + 0x1C, 1), 0x0);
	mov(&ts->esi, ts->eax);
	add(&ts->eax, 0x4);
	goto loc_54B9D6;

loc_54B9D2:
	xor_(&ts->esi, ts->esi);
	xor_(&ts->eax, ts->eax);

loc_54B9D6:
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x14, 4));
	lea(mv, &ts->ecx, x86::mem(ts->ebx + 0x10, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x1C, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x28, 4));
	inc(&ts->edx);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ebx + 0x1C, 4), ts->edx);
	if (!ts->eflags.zero) {
        goto loc_54BA0B;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54B9FF;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_54BA01;

loc_54B9FF:
	xor_(&ts->eax, ts->eax);

loc_54BA01:
	mov(mv, x86::mem(ts->ebx + 0x28, 4), ts->eax);
	mov(mv, x86::mem(ts->ebx + 0x20, 4), 0x1);

loc_54BA0B:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x24, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_54BA22;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ecx, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54BA1D;
    }
	lea(mv, &ts->eax, x86::mem(ts->ecx - 0x4, 4));
	goto loc_54BA1F;

loc_54BA1D:
	xor_(&ts->eax, ts->eax);

loc_54BA1F:
	mov(mv, x86::mem(ts->ebx + 0x24, 4), ts->eax);

loc_54BA22:
	cmp(&ts->eflags, ts->edi, 0x9);
	lea(mv, &ts->ebp, x86::mem(ts->edi + 0x1, 4));
	push(mv, &ts->esp, ts->ebp);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_54BA3C;
    }
	push(mv, &ts->esp, 0x79C730);
	push(mv, &ts->esp, 0x20);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xBC, 4));
	push(mv, &ts->esp, ts->edx);
	goto loc_54BA4B;

loc_54BA3C:
	push(mv, &ts->esp, 0x7845D4);
	push(mv, &ts->esp, 0x20);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xBC, 4));
	push(mv, &ts->esp, ts->eax);

loc_54BA4B:
	game::sub_50C960(ts, mv);
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xB8, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_4AEA60(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x83ACB8, 4));
	push(mv, &ts->esp, 0x0);
	shl(&ts->edx, 0x4);
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x7ECD84, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_4AEA60(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x83ACB8, 4));
	push(mv, &ts->esp, 0x0);
	shl(&ts->ecx, 0x4);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x7ECD80, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_4AEA60(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x83ACB8, 4));
	push(mv, &ts->esp, 0x0);
	shl(&ts->eax, 0x4);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x7ECD88, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_4AEA60(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x83ACB8, 4));
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->edx);
	mov(mv, &ts->al, x86::mem(0x83ACBC, 1));
	mov(mv, x86::mem(ts->esi + 0x1C, 1), ts->al);
	movzx(&ts->eax, ts->al);
	cmp(&ts->eflags, ts->eax, 0x3);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_54BAD6;
    }
	jmp(x86::mem(0x54BD20, 4));

loc_54BADD:
	mov(&ts->edx, 0x9CCE9F86);
	goto loc_54BAFB;

loc_54BAE4:
	mov(&ts->edx, 0x5278C50B);
	goto loc_54BAFB;

loc_54BAEB:
	mov(&ts->edx, 0x5C1B351C);
	goto loc_54BAFB;

loc_54BAF2:
	mov(&ts->edx, 0x9CCE64C4);
	goto loc_54BAFB;

def_54BAD6:
	xor_(&ts->edx, ts->edx);

loc_54BAFB:
	game::sub_4FF9D0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_54BB0E;
    }
	mov(&ts->edx, 0xC01A6F63);
	game::sub_4FF9D0(ts, mv);

loc_54BB0E:
	push(mv, &ts->esp, 0x10);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xA8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43DC00(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xA8, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_4AEA60(ts, mv);
	mov(&ts->edi, ts->ebp);
	cmp(&ts->eflags, ts->edi, 0x1B);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_54B9A0;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebx, 4));
	mov(&ts->ecx, ts->ebx);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	mov(mv, &ts->al, x86::mem(ts->ebx + 0x9C, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_54BBB0;
    }
	mov(mv, &ts->al, x86::mem(ts->ebx + 0xA0, 1));
	test(&ts->eflags, ts->al, ts->al);
	lea(mv, &ts->esi, x86::mem(ts->ebx + 0x34, 4));
	if (ts->eflags.zero) {
        goto loc_54BB71;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	game::sub_51F440(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x1);
	goto loc_54BB7D;

loc_54BB71:
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x20, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x1C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x18, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);

loc_54BB7D:
	mov(&ts->ecx, ts->esi);
	game::sub_538080(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->ebx + 0x9F, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_54BBB0;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x40, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x50, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0xC);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_54BBB0:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54BBBC;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_54BBBE;

loc_54BBBC:
	xor_(&ts->eax, ts->eax);

loc_54BBBE:
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x24, 4));
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0xFC, 4));
	if (!ts->eflags.zero) {
        goto loc_54BC17;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54BC63;
    }
	mov(mv, &ts->ecx, x86::mem(0x8384D4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_54BBE7;
    }
	test(mv, &ts->eflags, x86::mem(ts->eax + 0x1C, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_54BBEE;
    }

loc_54BBE7:
	or_(mv, x86::mem(ts->eax + 0x1C, 4), 0x400001);

loc_54BBEE:
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	mov(&ts->ebp, 0x5);
	cmp(&ts->eflags, ts->ecx, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_54BC68;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x64, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x60, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_54BC68;
    }
	mov(&ts->esi, ts->eax);

loc_54BC06:
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edx + 0x4, 4));
	add(&ts->esp, 0x4);
	dec(&ts->esi);
	if (!ts->eflags.zero) {
        goto loc_54BC06;
    }
	goto loc_54BC68;

loc_54BC17:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54BC63;
    }
	mov(mv, &ts->ecx, x86::mem(0x8384D4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_54BC2B;
    }
	test(mv, &ts->eflags, x86::mem(ts->eax + 0x1C, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_54BC3A;
    }

loc_54BC2B:
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x1C, 4));
	and_(&ts->edx, 0xFFFFFFFE);
	or_(&ts->edx, 0x400000);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->edx);

loc_54BC3A:
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	mov(&ts->ebp, 0x5);
	cmp(&ts->eflags, ts->ecx, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_54BC68;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x64, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x60, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_54BC68;
    }
	mov(&ts->esi, ts->eax);

loc_54BC52:
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edx + 0x4, 4));
	add(&ts->esp, 0x4);
	dec(&ts->esi);
	if (!ts->eflags.zero) {
        goto loc_54BC52;
    }
	goto loc_54BC68;

loc_54BC63:
	mov(&ts->ebp, 0x5);

loc_54BC68:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x10, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54BC74;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_54BC76;

loc_54BC74:
	xor_(&ts->eax, ts->eax);

loc_54BC76:
	cmp(mv, &ts->eflags, x86::mem(ts->ebx + 0x24, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0xF8, 4));
	if (!ts->eflags.zero) {
        goto loc_54BCC1;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54BD04;
    }
	mov(mv, &ts->ecx, x86::mem(0x8384D4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_54BC95;
    }
	test(mv, &ts->eflags, x86::mem(ts->eax + 0x1C, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_54BC9C;
    }

loc_54BC95:
	or_(mv, x86::mem(ts->eax + 0x1C, 4), 0x400001);

loc_54BC9C:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x18, 4), ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_54BD04;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x64, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x60, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_54BD04;
    }
	mov(&ts->esi, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_54BCB0:
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edx + 0x4, 4));
	add(&ts->esp, 0x4);
	dec(&ts->esi);
	if (!ts->eflags.zero) {
        goto loc_54BCB0;
    }
	goto loc_54BD04;

loc_54BCC1:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54BD04;
    }
	mov(mv, &ts->ecx, x86::mem(0x8384D4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_54BCD5;
    }
	test(mv, &ts->eflags, x86::mem(ts->eax + 0x1C, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_54BCE4;
    }

loc_54BCD5:
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x1C, 4));
	and_(&ts->ecx, 0xFFFFFFFE);
	or_(&ts->ecx, 0x400000);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->ecx);

loc_54BCE4:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x18, 4), ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_54BD04;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x64, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x60, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_54BD04;
    }
	mov(&ts->esi, ts->eax);

loc_54BCF5:
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edx + 0x4, 4));
	add(&ts->esp, 0x4);
	dec(&ts->esi);
	if (!ts->eflags.zero) {
        goto loc_54BCF5;
    }

loc_54BD04:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xD0, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0xCC);
	retn(mv, &ts->esp);

loc_777AD0:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0xA8, 4));
	goto sub_504950;

loc_777ADB:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x6C, 4));
	goto sub_504950;

loc_777AE3:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x90, 4));
	goto sub_504950;

loc_777AEE:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0xC0, 4));
	goto sub_504950;

loc_777AF9:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x78, 4));
	goto sub_504950;

loc_777B01:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0xB4, 4));
	goto sub_504950;

loc_777B0C:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x9C, 4));
	goto sub_504950;

loc_777B17:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x84, 4));
	goto sub_504950;

SEH_54B310:
	mov(&ts->eax, 0x7E2F64);
	goto ___CxxFrameHandler;
}

void sub_54BD30(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebx, 0xFFFFFF58);
	xor_(&ts->edx, ts->edx);
	xor_(&ts->ecx, ts->ecx);
	xor_(&ts->edi, ts->edi);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xA8, 4));
	sub(&ts->ebx, ts->esi);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_54BD50:
	mov(mv, &ts->ebp, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_54BD70;
    }
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->ebp, x86::mem(ts->ebp, 4));
	sub(mv, x86::mem(ts->eax, 4), ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->eax, 4));
	cmp(mv, &ts->eflags, ts->ebp, x86::mem(ts->edi + (ts->esi) + 0xA8, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_54BD70;
    }
	mov(&ts->edx, ts->ecx);
	lea(mv, &ts->edi, x86::mem(ts->ebx + (ts->eax), 4));

loc_54BD70:
	inc(&ts->ecx);
	add(&ts->eax, 0xC);
	cmp(&ts->eflags, ts->ecx, 0x8);
	if (!ts->eflags.zero) {
        goto loc_54BD50;
    }
	lea(mv, &ts->eax, x86::mem(ts->edx + (ts->edx*2), 4));
	lea(mv, &ts->ebx, x86::mem(ts->esi + (ts->eax*4), 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0xAC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54BDE0;
    }
	lea(mv, &ts->ecx, x86::mem(ts->edx + (ts->edx*2) + 0x2A, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + (ts->ecx*4), 4));
	test(&ts->eflags, ts->eax, ts->eax);
	lea(mv, &ts->edi, x86::mem(ts->esi + (ts->ecx*4), 4));
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_54BDE0;
    }
	mov(mv, &ts->eax, x86::mem(0x82BA30, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54BDC1;
    }
	mov(mv, &ts->ebp, x86::mem(ts->eax + 0x2C, 4));
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_54BDC1;
    }
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->ebp);
	game::sub_46D100(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_54BDE0;
    }
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->ebp);
	game::sub_46D100(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_54BDE0;
    }

loc_54BDC1:
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0xB0, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0xAC, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_53E0B0(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, x86::mem(ts->edi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->edi + 0x8, 4), ts->eax);

loc_54BDE0:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_54BDF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77806B);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x8, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_54BE22;
    }

loc_54BE11:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x610, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_54BE74;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_54BE11;
    }

loc_54BE22:
	push(mv, &ts->esp, 0x620);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_54BE48;
    }
	mov(&ts->ecx, ts->eax);
	game::sub_53E710(ts, mv);
	goto loc_54BE4A;

loc_54BE48:
	xor_(&ts->eax, ts->eax);

loc_54BE4A:
	test(&ts->eflags, ts->eax, ts->eax);
	mov(&ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54BE74;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x8, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54BE5D;
    }
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->eax);

loc_54BE5D:
	mov(mv, x86::mem(ts->eax + 0x8, 4), 0x0);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0xC, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->edi + 0x8, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_54BE71;
    }
	mov(mv, x86::mem(ts->edi + 0xC, 4), ts->eax);

loc_54BE71:
	inc(mv, x86::mem(ts->edi + 0x4, 4));

loc_54BE74:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x614, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x60C, 4));
	if (ts->eflags.zero) {
        goto loc_54BE8A;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_505400(ts, mv);

loc_54BE8A:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x61C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	inc(&ts->eax);
	mov(mv, x86::mem(ts->esi + 0x61C, 4), ts->eax);
	mov(&ts->eax, ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

unknown_libname_66:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::j__free(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

SEH_5545D0:
	mov(&ts->eax, 0x7E3578);
	goto ___CxxFrameHandler;
}

void sub_54BEB0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77806B);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x8, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_54BEE2;
    }

loc_54BED1:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x690, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_54BF34;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_54BED1;
    }

loc_54BEE2:
	push(mv, &ts->esp, 0x6A0);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_54BF08;
    }
	mov(&ts->ecx, ts->eax);
	game::sub_53E910(ts, mv);
	goto loc_54BF0A;

loc_54BF08:
	xor_(&ts->eax, ts->eax);

loc_54BF0A:
	test(&ts->eflags, ts->eax, ts->eax);
	mov(&ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54BF34;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x8, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54BF1D;
    }
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->eax);

loc_54BF1D:
	mov(mv, x86::mem(ts->eax + 0x8, 4), 0x0);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0xC, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->edi + 0x8, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_54BF31;
    }
	mov(mv, x86::mem(ts->edi + 0xC, 4), ts->eax);

loc_54BF31:
	inc(mv, x86::mem(ts->edi + 0x4, 4));

loc_54BF34:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x694, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x68C, 4));
	if (ts->eflags.zero) {
        goto loc_54BF4A;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_505400(ts, mv);

loc_54BF4A:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x69C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	inc(&ts->eax);
	mov(mv, x86::mem(ts->esi + 0x69C, 4), ts->eax);
	mov(&ts->eax, ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

unknown_libname_66:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::j__free(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

SEH_5545D0:
	mov(&ts->eax, 0x7E3578);
	goto ___CxxFrameHandler;
}

void sub_54BF70(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x777B3B);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x35, 4));
	push(mv, &ts->esp, ts->edi);
	game::sub_43DBD0(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->esp + 0x2C, 1));
	mov(mv, &ts->dl, x86::mem(ts->esp + 0x28, 1));
	xor_(&ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xC, 1), ts->cl);
	mov(mv, x86::mem(ts->esi + 0x14, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x15, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x16, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x17, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x1B, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x1C, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x1D, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x1E, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x1F, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x18, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x1A, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x19, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x20, 1), ts->dl);
	mov(mv, &ts->eax, x86::mem(0x8161F4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x94);
	push(mv, &ts->esp, 0x783FE5);
	call(ts, mv, x86::mem(0x8161EC, 4));
	add(&ts->esp, 0x1C);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->eax);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_54C016;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x28, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x24, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x32000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x100000);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->eax);
	game::sub_6FEA32(ts, mv);
	goto loc_54C018;

loc_54C016:
	xor_(&ts->eax, ts->eax);

loc_54C018:
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->esi + 0x2C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x30, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x34, 1), 0x1);
	game::sub_531DF0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->al, 0x1);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp, 0xC);

loc_777B30:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_4FDAC0(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

SEH_54BF70:
	mov(&ts->eax, 0x7E2F88);
	goto ___CxxFrameHandler;
}

void sub_54C050(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x30);
	mov(mv, &ts->eax, x86::mem(0x78FD2C, 4));
	mov(mv, &ts->edx, x86::mem(0x78FD24, 4));
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x78FD28, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x78FD30, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x78F228, 4));
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x78FD08, 4));
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(0x78FD0C, 4));
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x78F21C, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x78F22C, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->edx);
	mov(mv, &ts->dx, x86::mem(0x78F230, 2));
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x38, 4));
	cmp(&ts->eflags, ts->eax, 0xD15C04EC);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x78F220, 4));
	mov(mv, x86::mem(ts->esp + 0x24, 2), ts->dx);
	mov(mv, &ts->edx, x86::mem(0x78F224, 4));
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x30, 4), ts->edx);
	if (!ts->eflags.zero) {
        goto loc_54C0ED;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x38C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x30);
	retn(mv, &ts->esp, 0x10);

loc_54C0ED:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54C11E;
    }
	cmp(&ts->eflags, ts->eax, 0xC98356BA);
	if (!ts->eflags.zero) {
        goto loc_54C11E;
    }
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x79C7CC);
	game::sub_50D510(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x38C, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x10);
	goto loc_54C349;

loc_54C11E:
	cmp(&ts->eflags, ts->eax, 0x911C0A4B);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_54C334;
    }
	if (ts->eflags.zero) {
        goto loc_54C30E;
    }
	cmp(&ts->eflags, ts->eax, 0x72619778);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_54C2CC;
    }
	if (ts->eflags.zero) {
        goto loc_54C2A6;
    }
	cmp(&ts->eflags, ts->eax, 0xC407210);
	if (ts->eflags.zero) {
        goto loc_54C1BC;
    }
	cmp(&ts->eflags, ts->eax, 0x35F8620B);
	if (!ts->eflags.zero) {
        goto loc_54C3C8;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_5426C0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x3C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_5426C0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x3C, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_5426C0(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	game::sub_51CD60(ts, mv);
	add(&ts->esp, 0x34);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54C3C8;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x30);
	retn(mv, &ts->esp, 0x10);

loc_54C1BC:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x3C, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x10, 4));
	cmp(&ts->eflags, ts->eax, 0xB8A7C6CC);
	if (ts->eflags.zero) {
        goto loc_54C264;
    }
	cmp(&ts->eflags, ts->eax, 0xB8A7C6CD);
	if (ts->eflags.zero) {
        goto loc_54C222;
    }
	cmp(&ts->eflags, ts->eax, 0xB8A7C6CE);
	if (!ts->eflags.zero) {
        goto loc_54C3C8;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x380, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54C3C8;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x40, 4));
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x36C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x79C7A4);
	mov(mv, x86::mem(ts->esi + 0x50, 4), ts->eax);
	game::sub_50D510(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->edx);
	game::sub_50D150(ts, mv);
	add(&ts->esp, 0x14);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x30);
	retn(mv, &ts->esp, 0x10);

loc_54C222:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x380, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54C3C8;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x40, 4));
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x364, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x79C77C);
	mov(mv, x86::mem(ts->esi + 0x50, 4), ts->eax);
	game::sub_50D510(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->edx);
	game::sub_50D150(ts, mv);
	add(&ts->esp, 0x14);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x30);
	retn(mv, &ts->esp, 0x10);

loc_54C264:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x380, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54C3C8;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x40, 4));
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x35C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x79C754);
	mov(mv, x86::mem(ts->esi + 0x50, 4), ts->eax);
	game::sub_50D510(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->edx);
	game::sub_50D150(ts, mv);
	add(&ts->esp, 0x14);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x30);
	retn(mv, &ts->esp, 0x10);

loc_54C2A6:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x380, 4), 0x3);
	if (!ts->eflags.zero) {
        goto loc_54C3C8;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x6);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50D150(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x30);
	retn(mv, &ts->esp, 0x10);

loc_54C2CC:
	cmp(&ts->eflags, ts->eax, 0x911AB364);
	if (!ts->eflags.zero) {
        goto loc_54C3C8;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x384, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_54C3C8;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0xA);
	push(mv, &ts->esp, ts->eax);
	game::sub_50D150(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x370, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4C, 4));
	add(&ts->esp, 0xC);
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x50, 4), ts->edx);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x30);
	retn(mv, &ts->esp, 0x10);

loc_54C30E:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x380, 4), 0x3);
	if (!ts->eflags.zero) {
        goto loc_54C3C8;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50D150(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x30);
	retn(mv, &ts->esp, 0x10);

loc_54C334:
	cmp(&ts->eflags, ts->eax, 0x9120409E);
	if (ts->eflags.zero) {
        goto loc_54C3AD;
    }
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	if (ts->eflags.zero) {
        goto loc_54C38B;
    }
	cmp(&ts->eflags, ts->eax, 0xC98356BA);
	if (!ts->eflags.zero) {
        goto loc_54C3C8;
    }

loc_54C349:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x386, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_54C3C8;
    }
	push(mv, &ts->esp, 0x0);
	game::sub_4A7AC0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_571A60(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54C37B;
    }
	push(mv, &ts->esp, 0x1);
	game::sub_4A7AC0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_571A60(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_54C3C8;
    }

loc_54C37B:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x370, 4));
	mov(mv, x86::mem(ts->esi + 0x50, 4), ts->edx);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x30);
	retn(mv, &ts->esp, 0x10);

loc_54C38B:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x380, 4), 0x2);
	if (!ts->eflags.zero) {
        goto loc_54C3C8;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x5);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50D150(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x30);
	retn(mv, &ts->esp, 0x10);

loc_54C3AD:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x380, 4), 0x2);
	if (!ts->eflags.zero) {
        goto loc_54C3C8;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_50D150(ts, mv);
	add(&ts->esp, 0xC);

loc_54C3C8:
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x30);
	retn(mv, &ts->esp, 0x10);
}

void sub_54C3D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x387, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_54C422;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x78FCF8);
	push(mv, &ts->esp, ts->eax);
	game::sub_4953C0(ts, mv);
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0x58, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->edi, ts->eax);
	game::sub_7433A0(ts, mv);
	add(&ts->esp, 0xC);
	lea(mv, &ts->ebp, x86::mem(ts->eax + 0x1, 4));
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x64, 4));
	push(mv, &ts->esp, ts->ebp);
	game::sub_51DE90(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x64, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->eax);
	game::sub_7433F0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x1C, 4));
	add(&ts->esp, 0xC);
	or_(&ts->eax, 0x2);
	mov(mv, x86::mem(ts->edi + 0x1C, 4), ts->eax);
	pop(mv, &ts->esp, ts->ebp);
	goto loc_54C437;

loc_54C422:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x78FCF8);
	push(mv, &ts->esp, ts->edx);
	game::sub_542600(ts, mv);
	add(&ts->esp, 0xC);

loc_54C437:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x380, 4));
	cmp(&ts->eflags, ts->eax, 0x3);
	if (!ts->eflags.zero) {
        goto loc_54C4A4;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x358, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xDA473D2F);
	push(mv, &ts->esp, ts->ecx);
	game::sub_495460(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x360, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0xDA473D30);
	push(mv, &ts->esp, ts->eax);
	game::sub_495460(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x368, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xDA473D31);
	push(mv, &ts->esp, ts->edx);
	game::sub_495460(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	add(&ts->esp, 0x24);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54C7E3;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xB8A7C6CE);
	push(mv, &ts->esp, ts->eax);
	game::sub_52CE40(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_54C4A4:
	cmp(&ts->eflags, ts->eax, 0x2);
	if (!ts->eflags.zero) {
        goto loc_54C55D;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xB8A7C6CE);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4954E0(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x8);
	mov(&ts->ecx, 0x78FD08);
	or_(&ts->edx, 0xFFFFFFFF);
	mov(&ts->al, 0x42);
	goto loc_54C4D0;

loc_54C4D0:
	imul(&ts->edx, ts->edx, 0x21);
	cmp(&ts->eflags, ts->al, 0x61);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_54C4DD;
    }
	cmp(&ts->eflags, ts->al, 0x7A);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_54C4DD;
    }
	add(&ts->al, 0xE0);

loc_54C4DD:
	movzx(&ts->eax, ts->al);
	add(&ts->edx, ts->eax);
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x1, 1));
	inc(&ts->ecx);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_54C4D0;
    }
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54C4FD;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	game::sub_51CC60(ts, mv);

loc_54C4FD:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0xDA473D31);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x358, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0xDA473D2F);
	push(mv, &ts->esp, ts->eax);
	game::sub_495460(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x360, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xDA473D30);
	push(mv, &ts->esp, ts->edx);
	game::sub_495460(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	add(&ts->esp, 0x24);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54C7E3;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xB8A7C6CD);
	push(mv, &ts->esp, ts->eax);
	game::sub_52CE40(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_54C55D:
	cmp(&ts->eflags, ts->eax, 0x1);
	push(mv, &ts->esp, 0xB8A7C6CC);
	if (!ts->eflags.zero) {
        goto loc_54C6CF;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_4954E0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xB8A7C6CD);
	push(mv, &ts->esp, ts->edx);
	game::sub_4954E0(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x10);
	mov(&ts->ecx, 0x78FD2C);
	or_(&ts->edx, 0xFFFFFFFF);
	mov(&ts->al, 0x42);

loc_54C592:
	imul(&ts->edx, ts->edx, 0x21);
	cmp(&ts->eflags, ts->al, 0x61);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_54C59F;
    }
	cmp(&ts->eflags, ts->al, 0x7A);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_54C59F;
    }
	add(&ts->al, 0xE0);

loc_54C59F:
	movzx(&ts->eax, ts->al);
	add(&ts->edx, ts->eax);
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x1, 1));
	inc(&ts->ecx);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_54C592;
    }
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54C5C5;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	game::sub_51CC60(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));

loc_54C5C5:
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	mov(&ts->edi, 0x78FD24);
	or_(&ts->edx, 0xFFFFFFFF);
	mov(&ts->al, 0x42);

loc_54C5D2:
	imul(&ts->edx, ts->edx, 0x21);
	cmp(&ts->eflags, ts->al, 0x61);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_54C5DF;
    }
	cmp(&ts->eflags, ts->al, 0x7A);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_54C5DF;
    }
	add(&ts->al, 0xE0);

loc_54C5DF:
	movzx(&ts->eax, ts->al);
	add(&ts->edx, ts->eax);
	mov(mv, &ts->al, x86::mem(ts->edi + 0x1, 1));
	inc(&ts->edi);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_54C5D2;
    }
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54C5F9;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ebx);
	game::sub_51CC60(ts, mv);

loc_54C5F9:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0xDA473D2F);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0xDA473D30);
	push(mv, &ts->esp, ts->edx);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xB8A7C6CE);
	push(mv, &ts->esp, ts->eax);
	game::sub_495520(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x20);
	mov(&ts->ecx, 0x78FD08);
	or_(&ts->edx, 0xFFFFFFFF);
	mov(&ts->al, 0x42);
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_54C640:
	imul(&ts->edx, ts->edx, 0x21);
	cmp(&ts->eflags, ts->al, 0x61);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_54C64D;
    }
	cmp(&ts->eflags, ts->al, 0x7A);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_54C64D;
    }
	add(&ts->al, 0xE0);

loc_54C64D:
	movzx(&ts->eax, ts->al);
	add(&ts->edx, ts->eax);
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x1, 1));
	inc(&ts->ecx);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_54C640;
    }
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54C66D;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	game::sub_51CC60(ts, mv);

loc_54C66D:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F970);
	push(mv, &ts->esp, 0xB8A7C6CE);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F970);
	push(mv, &ts->esp, 0xDA473D31);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x368, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xDA473D31);
	push(mv, &ts->esp, ts->ecx);
	game::sub_495460(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	add(&ts->esp, 0x2C);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54C7E3;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xB8A7C6CE);
	push(mv, &ts->esp, ts->edx);
	game::sub_52CE40(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_54C6CF:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_4954E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xB8A7C6CD);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4954E0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xB8A7C6CE);
	push(mv, &ts->esp, ts->edx);
	game::sub_4954E0(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x18);
	mov(&ts->ecx, 0x78FD2C);
	or_(&ts->edx, 0xFFFFFFFF);
	mov(&ts->al, 0x42);

loc_54C704:
	imul(&ts->edx, ts->edx, 0x21);
	cmp(&ts->eflags, ts->al, 0x61);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_54C711;
    }
	cmp(&ts->eflags, ts->al, 0x7A);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_54C711;
    }
	add(&ts->al, 0xE0);

loc_54C711:
	movzx(&ts->eax, ts->al);
	add(&ts->edx, ts->eax);
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x1, 1));
	inc(&ts->ecx);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_54C704;
    }
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54C737;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	game::sub_51CC60(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));

loc_54C737:
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	mov(&ts->edi, 0x78FD24);
	or_(&ts->edx, 0xFFFFFFFF);
	mov(&ts->al, 0x42);

loc_54C744:
	imul(&ts->edx, ts->edx, 0x21);
	cmp(&ts->eflags, ts->al, 0x61);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_54C751;
    }
	cmp(&ts->eflags, ts->al, 0x7A);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_54C751;
    }
	add(&ts->al, 0xE0);

loc_54C751:
	movzx(&ts->eax, ts->al);
	add(&ts->edx, ts->eax);
	mov(mv, &ts->al, x86::mem(ts->edi + 0x1, 1));
	inc(&ts->edi);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_54C744;
    }
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54C771;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ebx);
	game::sub_51CC60(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));

loc_54C771:
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	mov(&ts->edi, 0x78FD08);
	or_(&ts->edx, 0xFFFFFFFF);
	mov(&ts->al, 0x42);
	mov(&ts->edi, ts->edi);

loc_54C780:
	imul(&ts->edx, ts->edx, 0x21);
	cmp(&ts->eflags, ts->al, 0x61);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_54C78D;
    }
	cmp(&ts->eflags, ts->al, 0x7A);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_54C78D;
    }
	add(&ts->al, 0xE0);

loc_54C78D:
	movzx(&ts->eax, ts->al);
	add(&ts->edx, ts->eax);
	mov(mv, &ts->al, x86::mem(ts->edi + 0x1, 1));
	inc(&ts->edi);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_54C780;
    }
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54C7A7;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ebx);
	game::sub_51CC60(ts, mv);

loc_54C7A7:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0xDA473D2F);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0xDA473D30);
	push(mv, &ts->esp, ts->edx);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0xDA473D31);
	push(mv, &ts->esp, ts->eax);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x24);

loc_54C7E3:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_54C7F0(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(0x83A9B4, 4), 0x6);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_54C811;
    }
	push(mv, &ts->esp, 0x83A8B0);
	game::sub_43DBB0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54C894;
    }

loc_54C811:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->ebx, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	game::sub_540AB0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0xDA5B8712);
	call(ts, mv, x86::mem(ts->eax + 0x8, 4));
	mov(mv, x86::mem(0x83A9C0, 1), ts->bl);
	mov(mv, x86::mem(0x83A9C4, 4), ts->ebx);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x40);
	mov(&ts->edi, 0x83A8B0);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(&ts->ecx, 0x40);
	mov(&ts->edi, 0x83A7B0);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xC, 4));
	cmp(&ts->eflags, ts->edx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_54C88C;
    }
	mov(mv, x86::mem(0x83A9C0, 1), ts->bl);
	mov(mv, x86::mem(0x83A9C4, 4), ts->ebx);
	mov(&ts->ecx, 0x40);
	mov(&ts->edi, 0x83A8B0);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(&ts->ecx, 0x40);
	mov(&ts->edi, 0x83A7B0);
	push(mv, &ts->esp, ts->edx);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_54C88C:
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x10, 1), ts->bl);
	pop(mv, &ts->esp, ts->ebx);

loc_54C894:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_54C8A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x100);
	push(mv, &ts->esp, 0x83A7B0);
	push(mv, &ts->esp, 0x83A8B0);
	mov(&ts->esi, ts->ecx);
	game::sub_43DC00(ts, mv);
	add(&ts->esp, 0xC);
	xor_(&ts->ebx, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	game::sub_540AB0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0xC9D30688);
	call(ts, mv, x86::mem(ts->eax + 0x8, 4));
	mov(mv, x86::mem(0x83A9C0, 1), ts->bl);
	mov(mv, x86::mem(0x83A9C4, 4), ts->ebx);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x40);
	mov(&ts->edi, 0x83A8B0);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(&ts->ecx, 0x40);
	mov(&ts->edi, 0x83A7B0);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xC, 4));
	cmp(&ts->eflags, ts->edx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_54C935;
    }
	mov(mv, x86::mem(0x83A9C0, 1), ts->bl);
	mov(mv, x86::mem(0x83A9C4, 4), ts->ebx);
	mov(&ts->ecx, 0x40);
	mov(&ts->edi, 0x83A8B0);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(&ts->ecx, 0x40);
	mov(&ts->edi, 0x83A7B0);
	push(mv, &ts->esp, ts->edx);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_54C935:
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x10, 1), ts->bl);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_54C940(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->edi + 0xD25, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_54C9C1;
    }
	mov(mv, &ts->al, x86::mem(ts->edi + 0xD28, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_54C9C1;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4208, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x14, 4), 0x3);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->esi, x86::mem(ts->edi + 0xD24, 4));
	if (!ts->eflags.zero) {
        goto loc_54C97E;
    }
	push(mv, &ts->esp, 0x85036C);
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x30, 4));
	mov(mv, x86::mem(ts->eax + 0x14, 4), 0x4);
	game::sub_525D10(ts, mv);

loc_54C97E:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_5287A0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_54C98F;
    }
	mov(mv, x86::mem(ts->esi + 0x4, 1), 0x1);

loc_54C98F:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_5287A0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	pop(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero) {
        goto loc_54C9B0;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x8730, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_541420(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp);

loc_54C9B0:
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x8730, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_528500(ts, mv);

loc_54C9C1:
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp);
}

void sub_54C9D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8730, 4));
	push(mv, &ts->esp, ts->edi);
	movsx(mv, &ts->edi, x86::mem(ts->eax + 0x37, 1));
	game::sub_54C940(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x7AF8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	cmp(&ts->eflags, ts->edi, ts->eax);
	setnz(ts->eflags, &ts->dl);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	push(mv, &ts->esp, ts->edx);
	game::sub_513A50(ts, mv);
	mov(&ts->bl, ts->al);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x8730, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xD25, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0x8744, 1), 0x1);
	mov(mv, &ts->ecx, x86::mem(0x890118, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54CA22;
    }
	game::sub_5EEE80(ts, mv);

loc_54CA22:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->al, ts->bl);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_54CA30(x86::thread_state* ts, x86::memory_view* mv) {
	goto sub_54C940;
}

void sub_54CA40(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_54C940(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x8730, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xD25, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0x8879, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_54CA60(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0xD25, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_54CAD1;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8730, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54CAD1;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0xD25, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0xD24, 4));
	if (ts->eflags.zero) {
        goto loc_54CAA2;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x34E4, 4));
	push(mv, &ts->esp, 0x85036C);
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x30, 4));
	mov(mv, x86::mem(ts->eax + 0x14, 4), 0x3);
	game::sub_525D10(ts, mv);

loc_54CAA2:
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->edi);
	game::sub_5287A0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	pop(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_54CAD1;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8730, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54CAD1;
    }
	push(mv, &ts->esp, ts->eax);
	movsx(mv, &ts->eax, x86::mem(ts->eax + 0x37, 1));
	imul(&ts->eax, ts->eax, 0x104);
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->esi) + 0x72D8, 4));
	game::sub_513390(ts, mv);

loc_54CAD1:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_54CAE0(x86::thread_state* ts, x86::memory_view* mv) {
	add(&ts->ecx, 0xD24);
	goto loc_541580;

loc_541580:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x34E4, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x14, 4), 0x3);
	if (!ts->eflags.zero) {
        goto loc_5415A3;
    }
	push(mv, &ts->esp, 0x85036C);
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x30, 4));
	mov(mv, x86::mem(ts->eax + 0x14, 4), 0x4);
	game::sub_525D10(ts, mv);

loc_5415A3:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x34E4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5415D1;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0xD24, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x34E8, 4));
	imul(&ts->eax, ts->eax, 0xD24);
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->esi) + 0x54, 4));
	cmp(&ts->eflags, ts->ecx, ts->edx);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x34E4, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_5415D1:
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x34E4, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_54CAF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x38, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->esi, ts->ecx);
	game::sub_512F10(ts, mv);
	mov(&ts->ecx, 0x81CBC0);
	mov(mv, x86::mem(ts->eax + 0x6, 1), 0x5);
	game::sub_4131F0(ts, mv);
	mov(mv, x86::mem(0x8385B9, 1), 0x0);
	mov(mv, x86::mem(0x8385A0, 4), 0x0);
	mov(mv, x86::mem(0x8385A4, 4), 0x0);
	mov(mv, x86::mem(0x8385B8, 1), 0x0);
	mov(mv, x86::mem(0x838590, 4), 0x0);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x8738, 4));
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_54CBED;
    }
	mov(mv, &ts->al, x86::mem(ts->edi + 0x50, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_54CB5A;
    }
	mov(mv, x86::mem(ts->esi + 0x8868, 1), 0x1);

loc_54CB5A:
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->ebx);
	game::sub_4FFDE0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_54CBB4;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x7AF8, 4));
	imul(&ts->eax, ts->eax, 0x104);
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->esi) + 0x72D8, 4));
	game::sub_513390(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8738, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_541420(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8738, 4));
	mov(mv, &ts->ebx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, 0x79AFE0);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->ebx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_54CBB4;
    }
	mov(mv, x86::mem(ts->esi + 0x8738, 4), 0x0);

loc_54CBB4:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8738, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54CBED;
    }
	mov(mv, &ts->ebx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, 0x79AFF0);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->ebx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_54CBED;
    }
	push(mv, &ts->esp, 0x79AFE0);
	game::sub_43DB50(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_4FFC90(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_5410E0(ts, mv);

loc_54CBED:
	mov(mv, x86::mem(ts->esi + 0x8734, 4), ts->edi);
	mov(mv, &ts->ecx, x86::mem(0x8900AC, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	mov(mv, x86::mem(ts->esi + 0x8744, 1), 0x1);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x64, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x68, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x60, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(mv, x86::mem(ts->esi + 0x8750, 4), ts->edx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x8754, 4));
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4210, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x8758, 4));
	mov(mv, &ts->ax, x86::mem(ts->eax + 0x40C, 2));
	mov(mv, x86::mem(ts->esi + 0x8760, 2), ts->ax);
	game::sub_533750(ts, mv);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x5D20, 4));
	game::sub_529860(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC08, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x8730, 4), 0x0);
	mov(mv, x86::mem(ts->esi + 0xD25, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_54CC8F;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC08, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xC00, 4));
	if (ts->eflags.zero) {
        goto loc_54CC8F;
    }
	mov(mv, &ts->esi, x86::mem(ts->eax + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x38, 4));
	cmp(&ts->eflags, ts->edx, ts->esi);
	setz(ts->eflags, &ts->al);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_54CC8F;
    }
	mov(mv, x86::mem(ts->ecx + 0x11C, 4), 0x4);
	game::sub_533D20(ts, mv);

loc_54CC8F:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_54CCA0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x777748);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	xor_(&ts->esi, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, x86::mem(ts->ecx + 0xCF0, 4), ts->esi);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x24, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_54CD0E;
    }
	mov(&ts->ebx, ts->ecx);
	add(&ts->edi, 0xBD0);
	nop();

loc_54CCE0:
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	game::sub_515DB0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	inc(mv, x86::mem(ts->eax + 0xCF0, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x24, 4));
	inc(&ts->esi);
	add(&ts->edi, 0x4);
	add(&ts->ebx, 0x224);
	cmp(&ts->eflags, ts->esi, ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_54CCE0;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));

loc_54CD0E:
	game::sub_541B40(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(0x890118, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x24, 4));
	xor_(&ts->esi, ts->esi);
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x24, 4), 0x0);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_54CDA0;
    }
	mov(&ts->edi, 0x85036C);
	nop();

loc_54CD40:
	push(mv, &ts->esp, 0xC);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54CD53;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->edi);
	goto loc_54CD55;

loc_54CD53:
	xor_(&ts->eax, ts->eax);

loc_54CD55:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, &ts->al, x86::mem(0x89E7D9, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_54CD7A;
    }
	mov(mv, &ts->eax, x86::mem(0x890104, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54CD88;
    }

loc_54CD7A:
	push(mv, &ts->esp, 0x5032F0);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	game::sub_43E650(ts, mv);

loc_54CD88:
	mov(mv, &ts->edx, x86::mem(0x890118, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x24, 4));
	inc(&ts->esi);
	add(&ts->edi, 0x224);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_54CD40;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));

loc_54CDA0:
	mov(mv, &ts->ecx, x86::mem(0x89E7CC, 4));
	mov(mv, &ts->edx, x86::mem(0x89E7C8, 4));
	mov(mv, &ts->ebx, x86::mem(0x89E7C4, 4));
	mov(mv, &ts->edi, x86::mem(0x89E7C0, 4));
	add(&ts->edx, ts->ecx);
	add(&ts->edx, ts->ebx);
	add(&ts->edx, ts->edi);
	xor_(&ts->esi, ts->esi);
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_54CE09;
    }
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	add(&ts->edi, 0xCD8);
	mov(&ts->edi, ts->edi);

loc_54CDD0:
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	game::sub_43BE60(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	mov(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(0x89E7CC, 4));
	mov(mv, &ts->edx, x86::mem(0x89E7C8, 4));
	mov(mv, &ts->ebx, x86::mem(0x89E7C4, 4));
	add(&ts->edx, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x89E7C0, 4));
	add(&ts->edx, ts->ebx);
	inc(&ts->esi);
	add(&ts->edx, ts->ecx);
	add(&ts->edi, 0x4);
	cmp(&ts->eflags, ts->esi, ts->edx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_54CDD0;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));

loc_54CE09:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x24, 4), 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_54CE41;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_54CE20:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(&ts->edx, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	game::j__free(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_54CE20;
    }

loc_54CE41:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_777740:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x18, 4));
	goto sub_4DEF30;

SEH_54CCA0:
	mov(&ts->eax, 0x7E2FAC);
	goto ___CxxFrameHandler;
}

void sub_54CE60(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x1C, 4));
	test(&ts->eflags, ts->eax, 0x1C00000);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54CE7D;
    }
	or_(&ts->eax, 0x2000000);
	mov(mv, x86::mem(ts->ebp + 0x1C, 4), ts->eax);
	goto loc_54CE8E;

loc_54CE7D:
	mov(mv, &ts->ecx, x86::mem(0x7F7C8C, 4));
	or_(&ts->ecx, 0xFDFFFFFF);
	and_(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->ebp + 0x1C, 4), ts->ecx);

loc_54CE8E:
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x34, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x54, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0xC, 4));
	lea(mv, &ts->eax, x86::mem(ts->edx + (ts->ecx), 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_54CEB1;
    }
	mov(mv, x86::mem(ts->esi + 0x10, 4), 0x0);

loc_54CEB1:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, &ts->dl, x86::mem(ts->edi + 0x14, 1));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_54CFD5;
    }
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.zero) {
        goto loc_54D08F;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x18, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_54CF36;
    }
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->edi);
	game::sub_541DB0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x24, 4));
	sub(&ts->eax, ts->ebx);
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x10, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_54CF05;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x30, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_534C70(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));

loc_54CF05:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x18, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->ebp + 0x54, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_54CF1A;
    }
	mov(&ts->ecx, ts->ebp);
	game::sub_517720(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));

loc_54CF1A:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x24, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_54D08B;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x30, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edx);
	goto loc_54D084;

loc_54CF36:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x14, 4));
	and_(&ts->edx, 0x3);
	sub(&ts->edx, 0x0);
	if (ts->eflags.zero) {
        goto loc_54CFAF;
    }
	dec(&ts->edx);
	if (ts->eflags.zero) {
        goto loc_54CF5C;
    }
	dec(&ts->edx);
	if (!ts->eflags.zero) {
        goto loc_54D08F;
    }
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_54CFA3;
    }
	cdq(&ts->eax, ts->edx);
	add(&ts->ebx, ts->ebx);
	idiv(&ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->edx);
	goto loc_54D08F;

loc_54CF5C:
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_54CFA3;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54CF76;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x30, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_534C70(ts, mv);

loc_54CF76:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	cdq(&ts->eax, ts->edx);
	idiv(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_54CF97;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x30, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_534C70(ts, mv);

loc_54CF97:
	mov(&ts->ecx, ts->ebp);
	game::sub_517720(ts, mv);
	goto loc_54D08B;

loc_54CFA3:
	mov(mv, x86::mem(ts->esi + 0x10, 4), 0x0);
	goto loc_54D08F;

loc_54CFAF:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54CFC9;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x30, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_534C70(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));

loc_54CFC9:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	inc(&ts->eax);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->eax);
	goto loc_54D08F;

loc_54CFD5:
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.zero) {
        goto loc_54D08F;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x24, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_54D08F;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x14, 4));
	and_(&ts->edx, 0x3);
	sub(&ts->edx, 0x0);
	if (ts->eflags.zero) {
        goto loc_54D07C;
    }
	dec(&ts->edx);
	if (ts->eflags.zero) {
        goto loc_54D051;
    }
	dec(&ts->edx);
	if (!ts->eflags.zero) {
        goto loc_54D08F;
    }
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_54D021;
    }
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_54D07C;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x30, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_534C70(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	sub(&ts->eax, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	goto loc_54D07E;

loc_54D021:
	sub(&ts->ecx, ts->ebx);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_54D033;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x30, 4));
	sub(&ts->eax, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edx);
	goto loc_54D084;

loc_54D033:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x30, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_534C70(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x30, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edx);
	goto loc_54D084;

loc_54D051:
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_54D072;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x30, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_534C70(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x30, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edx);
	goto loc_54D084;

loc_54D072:
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x30, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->eax);
	goto loc_54D084;

loc_54D07C:
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);

loc_54D07E:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x30, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ecx);

loc_54D084:
	mov(&ts->ecx, ts->edi);
	game::sub_534C70(ts, mv);

loc_54D08B:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));

loc_54D08F:
	mov(mv, &ts->al, x86::mem(ts->edi + 0x14, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_54D0AC;
    }
	cmp(mv, &ts->eflags, ts->ecx, x86::mem(ts->esi + 0x10, 4));
	if (!ts->eflags.zero) {
        goto loc_54D0AC;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xC, 4));
	inc(&ts->edx);
	cmp(&ts->eflags, ts->ecx, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_54D0AC;
    }
	test(mv, &ts->eflags, x86::mem(ts->ebp + 0x1C, 4), 0x400000);
	if (ts->eflags.zero) {
        goto loc_54D0B9;
    }

loc_54D0AC:
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->edi);
	game::sub_541DB0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));

loc_54D0B9:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x18, 4));
	add(&ts->eax, 0xFFFFFFFC);
	cmp(&ts->eflags, ts->eax, 0x3);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_54D0C4;
    }
	jmp(x86::mem(0x54D178, 4));

loc_54D0CB:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->edi);
	game::sub_504910(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	goto def_54D0C4;

loc_54D0DE:
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebp);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_517230(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	goto def_54D0C4;

loc_54D0F3:
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebp);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_504DC0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	goto def_54D0C4;

loc_54D108:
	mov(mv, &ts->al, x86::mem(ts->edi + 0x14, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto def_54D0C4;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x5C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	add(&ts->eax, ts->edx);
	mov(mv, x86::mem(ts->ebp + 0x5C, 4), ts->eax);

def_54D0C4:
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0x14, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_54D149;
    }
	cmp(mv, &ts->eflags, ts->ecx, x86::mem(ts->esi + 0x10, 4));
	if (!ts->eflags.zero) {
        goto loc_54D149;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	inc(&ts->eax);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_54D149;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x1C, 4));
	test(&ts->eflags, ts->eax, 0x400000);
	if (!ts->eflags.zero) {
        goto loc_54D149;
    }
	mov(mv, &ts->ecx, x86::mem(0x7F7C8C, 4));
	or_(&ts->ecx, 0xFE7FFFFF);
	and_(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->ebp + 0x1C, 4), ts->ecx);

loc_54D149:
	mov(mv, &ts->edx, x86::mem(0x7F7C8C, 4));
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x1C, 4));
	or_(&ts->edx, 0xFFBFFFFF);
	and_(&ts->esi, ts->edx);
	mov(&ts->eax, ts->esi);
	test(&ts->eflags, ts->eax, 0x1C00000);
	mov(mv, x86::mem(ts->ebp + 0x1C, 4), ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_54D170;
    }
	or_(&ts->eax, 0x2000000);
	mov(mv, x86::mem(ts->ebp + 0x1C, 4), ts->eax);

loc_54D170:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x8);
}

void sub_54D190(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x4C, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->edi + 0x30, 4), ts->eax);
	mov(mv, x86::mem(ts->edi + 0x34, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_54D1C0;
    }
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_54D1B0:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	game::sub_54CE60(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_54D1B0;
    }

loc_54D1C0:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x8);
}

void sub_54D1D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->edx, ts->ecx);
	add(&ts->eax, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->ecx, ts->ecx);
	xor_(&ts->ebx, ts->ebx);
	xor_(&ts->edi, ts->edi);
	or_(&ts->esi, 0xFFFFFFFF);
	cmp(&ts->eflags, ts->ebp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ecx);
	if (!ts->eflags.carry) {
        goto loc_54D340;
    }
	goto loc_54D210;

loc_54D200:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	goto loc_54D210;

loc_54D210:
	movzx(mv, &ts->eax, x86::mem(ts->ebp, 2));
	cmp(&ts->eflags, ts->eax, 0x7352);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_54D310;
    }
	if (ts->eflags.zero) {
        goto loc_54D305;
    }
	sub(&ts->eax, 0x434D);
	if (ts->eflags.zero) {
        goto loc_54D2F8;
    }
	sub(&ts->eax, 0x2600);
	if (ts->eflags.zero) {
        goto loc_54D258;
    }
	sub(&ts->eax, 0x5);
	if (!ts->eflags.zero) {
        goto loc_54D32C;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x14, 4));
	inc(&ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->esi + (ts->esi*2), 4));
	lea(mv, &ts->eax, x86::mem(ts->edx + (ts->ecx*4), 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x4, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	goto loc_54D32C;

loc_54D258:
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x20, 1), ts->bl);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x4, 4));
	if (!ts->eflags.zero) {
        goto loc_54D275;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->edx + 0x18, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_54D275;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	game::sub_5046D0(ts, mv);
	mov(&ts->edi, ts->eax);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_54D2C9;
    }

loc_54D275:
	mov(&ts->ecx, 0x8637A0);
	game::sub_54BDF0(ts, mv);
	mov(&ts->ecx, 0xABADCAFE);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ecx);
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x20, 1), ts->bl);
	mov(mv, x86::mem(ts->eax, 4), 0x79AA38);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ebx);
	mov(&ts->edi, ts->eax);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->esi);
	push(mv, &ts->esp, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54D2B5;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx, 4));
	game::sub_512120(ts, mv);
	or_(&ts->esi, 0xFFFFFFFF);
	goto loc_54D32C;

loc_54D2B5:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	add(&ts->ecx, 0x34);
	game::sub_4951B0(ts, mv);
	or_(&ts->esi, 0xFFFFFFFF);
	goto loc_54D32C;

loc_54D2C9:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x14, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_54D2ED;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax - 0x4, 4));
	lea(mv, &ts->esi, x86::mem(ts->eax - 0x4, 4));
	push(mv, &ts->esp, 0x517600);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xC);
	push(mv, &ts->esp, ts->eax);
	game::_eh_vector_destructor_iterator__void_P_uint_int_void__P__void_P__(ts, mv);
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_54D2ED:
	mov(mv, x86::mem(ts->edi + 0x14, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x10, 4), ts->ebx);
	or_(&ts->esi, 0xFFFFFFFF);
	goto loc_54D32C;

loc_54D2F8:
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_52AE00(ts, mv);
	goto loc_54D32C;

loc_54D305:
	lea(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_517630(ts, mv);
	goto loc_54D32C;

loc_54D310:
	cmp(&ts->eflags, ts->eax, 0x7452);
	if (ts->eflags.zero) {
        goto loc_54D326;
    }
	cmp(&ts->eflags, ts->eax, 0x7552);
	if (!ts->eflags.zero) {
        goto loc_54D32C;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x4, 4));
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	goto loc_54D32C;

loc_54D326:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->eax);

loc_54D32C:
	movzx(mv, &ts->ecx, x86::mem(ts->ebp + 0x2, 2));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	lea(mv, &ts->ebp, x86::mem(ts->ecx + (ts->ebp) + 0x4, 4));
	cmp(&ts->eflags, ts->ebp, ts->eax);
	if (ts->eflags.carry) {
        goto loc_54D200;
    }

loc_54D340:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0xC);
}

void sub_54D350(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x28, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_511D00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax, 1));
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->esi, 1), ts->cl);
	mov(mv, &ts->dl, x86::mem(ts->eax + 0x1, 1));
	mov(mv, x86::mem(ts->esi + 0x1, 1), ts->dl);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x2, 1));
	mov(mv, x86::mem(ts->esi + 0x2, 1), ts->cl);
	mov(mv, &ts->dl, x86::mem(ts->eax + 0x3, 1));
	mov(mv, x86::mem(ts->esi + 0x3, 1), ts->dl);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	shl(&ts->ecx, 0x8);
	sar(&ts->ecx, 0x8);
	xor_(&ts->ecx, ts->ebp);
	and_(&ts->ecx, 0xFFFFFF);
	mov(&ts->edx, ts->ebp);
	xor_(&ts->edx, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->edx);
	mov(mv, &ts->dl, x86::mem(ts->eax + 0x7, 1));
	mov(mv, x86::mem(ts->esi + 0x7, 1), ts->dl);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x14, 4));
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x18, 4));
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->edx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x1C, 4));
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x20, 4));
	mov(mv, x86::mem(ts->esi + 0x20, 4), ts->edx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x24, 4));
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->ecx);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x2C, 1));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->cl, ts->bl);
	if (ts->eflags.zero) {
        goto loc_54D3FB;
    }
	cmp(&ts->eflags, ts->cl, ts->bl);
	if (!ts->eflags.zero) {
        goto loc_54D3CA;
    }
	xor_(&ts->esi, ts->esi);
	goto loc_54D3CD;

loc_54D3CA:
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x30, 4));

loc_54D3CD:
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_54D3EB;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0x4, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto loc_54D3DD;
    }
	mov(&ts->ecx, ts->edi);
	game::sub_511D00(ts, mv);

loc_54D3DD:
	mov(mv, x86::mem(ts->edi + 0x8, 4), ts->esi);
	mov(mv, x86::mem(ts->edi + 0x4, 1), 0x1);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

loc_54D3EB:
	mov(mv, x86::mem(ts->edi + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x4, 1), ts->bl);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

loc_54D3FB:
	cmp(&ts->eflags, ts->cl, ts->bl);
	if (ts->eflags.zero) {
        goto loc_54D409;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x30, 4));
	game::sub_4FE890(ts, mv);
	goto loc_54D40C;

loc_54D409:
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x30, 4));

loc_54D40C:
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(&ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54D49A;
    }
	mov(&ts->ebp, 0xABADCAFE);
	goto loc_54D420;

loc_54D420:
	mov(&ts->ecx, 0x839BD0);
	game::sub_53E650(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_54D43C;
    }
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ebp);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebp);
	mov(mv, x86::mem(ts->eax, 4), 0x79AA34);
	goto loc_54D43E;

loc_54D43C:
	xor_(&ts->eax, ts->eax);

loc_54D43E:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xC, 4));
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->edx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x14, 4));
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->edx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x18, 4));
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1C, 4));
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->edx);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0xC, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_54D478;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x4, 4));
	cmp(&ts->eflags, ts->edx, ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_54D470;
    }
	mov(mv, x86::mem(ts->edx + 0x8, 4), ts->eax);

loc_54D470:
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	goto loc_54D48B;

loc_54D478:
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x8, 4));
	cmp(&ts->eflags, ts->edx, ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_54D485;
    }
	mov(mv, x86::mem(ts->edx + 0x8, 4), ts->eax);

loc_54D485:
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x8, 4), ts->eax);

loc_54D48B:
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0xC, 4), ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_54D493;
    }
	mov(mv, x86::mem(ts->edi + 0xC, 4), ts->eax);

loc_54D493:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_54D420;
    }

loc_54D49A:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_54D4B0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	sub(&ts->esp, 0xA0);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x24, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	mov(&ts->ebp, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54DFF9;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0xD4, 4));
	xor_(&ts->dl, ts->dl);
	xor_(&ts->al, ts->al);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_54DFF9;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0xD4, 4));
	xor_(&ts->ecx, ts->ecx);

loc_54D4E5:
	mov(&ts->ebx, 0x1);
	shl(&ts->ebx, ts->cl);
	test(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_54D505;
    }
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x8, 4));
	imul(&ts->ecx, ts->ecx, 0x88);
	add(&ts->ecx, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->ecx + 0x4, 4));
	or_(mv, &ts->ebx, x86::mem(ts->ecx, 4));
	setnz(ts->eflags, &ts->cl);
	or_(&ts->dl, ts->cl);

loc_54D505:
	inc(&ts->al);
	movzx(&ts->ecx, ts->al);
	cmp(&ts->eflags, ts->ecx, ts->esi);
	if (ts->eflags.carry) {
        goto loc_54D4E5;
    }
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.zero) {
        goto loc_54DFF7;
    }
	xor_(&ts->eax, ts->eax);
	xor_(&ts->edx, ts->edx);
	mov(&ts->ecx, 0x13);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x64, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x50, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x3C, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x54, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x40, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x58, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x30, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x44, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x5C, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x34, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x48, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x60, 2), ts->dx);
	mov(mv, x86::mem(ts->esp + 0x38, 2), ts->ax);
	mov(mv, x86::mem(ts->esp + 0x4C, 2), ts->cx);
	mov(mv, x86::mem(ts->esp + 0x62, 1), ts->dl);
	mov(mv, x86::mem(ts->esp + 0x3A, 1), ts->al);
	mov(mv, x86::mem(ts->esp + 0x4E, 1), ts->cl);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x4);
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_54D580:
	mov(mv, &ts->al, x86::mem(ts->ebp + 0x1, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_54DAE8;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xB4, 4));
	mov(&ts->ecx, ts->eax);
	mov(&ts->esi, 0x1);
	shl(&ts->esi, ts->cl);
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x24, 4));
	xor_(&ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ecx);
	cmp(mv, &ts->eflags, x86::mem(ts->ebp + 0xD4, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x13, 1), 0x0);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_54D68E;
    }

loc_54D5C5:
	mov(&ts->ecx, ts->edi);
	mov(&ts->edx, 0x1);
	shl(&ts->edx, ts->cl);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	test(&ts->eflags, ts->ecx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_54D675;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	mov(&ts->edx, ts->edi);
	imul(&ts->edx, ts->edx, 0x88);
	lea(mv, &ts->ebx, x86::mem(ts->edx + (ts->ecx), 4));
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x4, 4));
	and_(&ts->edx, ts->esi);
	cmp(&ts->eflags, ts->edx, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_54D607;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebx, 4));
	and_(&ts->ecx, ts->esi);
	cmp(&ts->eflags, ts->ecx, ts->esi);
	if (ts->eflags.zero) {
        goto loc_54D607;
    }
	or_(mv, x86::mem(ts->esp + 0x20, 4), ts->esi);
	mov(&ts->ecx, ts->edi);
	mov(&ts->dl, 0x1);
	shl(&ts->dl, ts->cl);
	or_(mv, x86::mem(ts->esp + (ts->eax) + 0x28, 1), ts->dl);

loc_54D607:
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x4, 4));
	and_(&ts->ecx, ts->esi);
	cmp(&ts->eflags, ts->ecx, ts->esi);
	if (ts->eflags.zero) {
        goto loc_54D626;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebx, 4));
	and_(&ts->edx, ts->esi);
	cmp(&ts->eflags, ts->edx, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_54D626;
    }
	or_(mv, x86::mem(ts->esp + 0x1C, 4), ts->esi);
	mov(&ts->ecx, ts->edi);
	mov(&ts->dl, 0x1);
	shl(&ts->dl, ts->cl);
	or_(mv, x86::mem(ts->esp + (ts->eax) + 0x3C, 1), ts->dl);

loc_54D626:
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x4, 4));
	and_(&ts->ecx, ts->esi);
	cmp(&ts->eflags, ts->ecx, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_54D675;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebx, 4));
	mov(&ts->edx, ts->esi);
	and_(&ts->edx, ts->ecx);
	cmp(&ts->eflags, ts->edx, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_54D675;
    }
	or_(mv, x86::mem(ts->esp + 0x18, 4), ts->esi);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->ebx);
	game::sub_504FF0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->esp + (ts->ecx*4) + 0x64, 4), ts->eax);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_54D655;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + (ts->ecx*4) + 0x64, 4));
	goto loc_54D661;

loc_54D655:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->ebx);
	game::sub_504FF0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));

loc_54D661:
	mov(mv, x86::mem(ts->esp + (ts->ecx*4) + 0x64, 4), ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + (ts->ecx) + 0x50, 4));
	mov(&ts->ecx, ts->edi);
	mov(&ts->dl, 0x1);
	shl(&ts->dl, ts->cl);
	or_(mv, x86::mem(ts->eax, 1), ts->dl);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));

loc_54D675:
	mov(mv, &ts->cl, x86::mem(ts->esp + 0x13, 1));
	inc(&ts->cl);
	movzx(&ts->edi, ts->cl);
	mov(mv, x86::mem(ts->esp + 0x13, 1), ts->cl);
	cmp(mv, &ts->eflags, ts->edi, x86::mem(ts->ebp + 0xD4, 4));
	if (ts->eflags.carry) {
        goto loc_54D5C5;
    }

loc_54D68E:
	cmp(&ts->eflags, ts->eax, 0x4);
	if (!ts->eflags.zero) {
        goto loc_54D77B;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xB4, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x17, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_54D77B;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xD4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x13, 1), 0x0);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_54D77B;
    }
	xor_(&ts->ebx, ts->ebx);
	mov(&ts->edi, ts->edi);

loc_54D6C0:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	mov(&ts->edx, 0x1);
	mov(&ts->ecx, ts->ebx);
	shl(&ts->edx, ts->cl);
	test(&ts->eflags, ts->edx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54D762;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	mov(&ts->eax, ts->ebx);
	imul(&ts->eax, ts->eax, 0x88);
	lea(mv, &ts->edi, x86::mem(ts->eax + (ts->ecx), 4));
	test(mv, &ts->eflags, x86::mem(ts->edi + 0x4, 1), 0x40);
	if (ts->eflags.zero) {
        goto loc_54D70E;
    }
	test(mv, &ts->eflags, x86::mem(ts->edi, 1), 0x40);
	if (!ts->eflags.zero) {
        goto loc_54D708;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->al, x86::mem(ts->esp + 0x2C, 1));
	or_(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ecx);
	mov(&ts->dl, 0x1);
	mov(&ts->ecx, ts->ebx);
	shl(&ts->dl, ts->cl);
	or_(&ts->al, ts->dl);
	mov(mv, x86::mem(ts->esp + 0x2C, 1), ts->al);

loc_54D708:
	test(mv, &ts->eflags, x86::mem(ts->edi + 0x4, 1), 0x40);
	if (!ts->eflags.zero) {
        goto loc_54D727;
    }

loc_54D70E:
	test(mv, &ts->eflags, x86::mem(ts->edi, 1), 0x40);
	if (ts->eflags.zero) {
        goto loc_54D721;
    }
	or_(mv, x86::mem(ts->esp + 0x1C, 4), ts->esi);
	mov(&ts->ecx, ts->ebx);
	mov(&ts->al, 0x1);
	shl(&ts->al, ts->cl);
	or_(mv, x86::mem(ts->esp + 0x40, 1), ts->al);

loc_54D721:
	test(mv, &ts->eflags, x86::mem(ts->edi + 0x4, 1), 0x40);
	if (ts->eflags.zero) {
        goto loc_54D762;
    }

loc_54D727:
	test(mv, &ts->eflags, x86::mem(ts->edi, 1), 0x40);
	if (ts->eflags.zero) {
        goto loc_54D762;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	or_(&ts->eax, ts->esi);
	push(mv, &ts->esp, 0x40);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	game::sub_504FF0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x74, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_54D74B;
    }
	mov(&ts->eax, ts->ecx);
	goto loc_54D754;

loc_54D74B:
	push(mv, &ts->esp, 0x40);
	mov(&ts->ecx, ts->edi);
	game::sub_504FF0(ts, mv);

loc_54D754:
	mov(&ts->dl, 0x1);
	mov(&ts->ecx, ts->ebx);
	shl(&ts->dl, ts->cl);
	mov(mv, x86::mem(ts->esp + 0x74, 4), ts->eax);
	or_(mv, x86::mem(ts->esp + 0x54, 1), ts->dl);

loc_54D762:
	mov(mv, &ts->al, x86::mem(ts->esp + 0x13, 1));
	inc(&ts->al);
	movzx(&ts->ebx, ts->al);
	mov(mv, x86::mem(ts->esp + 0x13, 1), ts->al);
	cmp(mv, &ts->eflags, ts->ebx, x86::mem(ts->ebp + 0xD4, 4));
	if (ts->eflags.carry) {
        goto loc_54D6C0;
    }

loc_54D77B:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	or_(&ts->eax, ts->edx);
	or_(&ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54DAD6;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xB4, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + 0xAE, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	mov(mv, &ts->ebx, x86::mem(ts->eax + 0x8C, 4));
	if (!ts->eflags.zero) {
        goto loc_54D7AA;
    }
	xor_(&ts->ebx, ts->ebx);

loc_54D7AA:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	add(&ts->eax, 0xFFFFFFFC);
	cmp(&ts->eflags, ts->eax, 0xE);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_54D7C1;
    }
	movzx(mv, &ts->ecx, x86::mem(ts->eax + 0x54E010, 1));
	jmp(x86::mem(0x54E004, 4));

loc_54D7C8:
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x20, 1), 0x10);
	if (ts->eflags.zero) {
        goto def_54D7C1;
    }
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->ebp + (ts->edx*4) + 0x84, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_54D7FC;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x3C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54D7FC;
    }
	mov(&ts->ecx, 0xC407210);
	mov(&ts->edi, ts->edi);

loc_54D7F0:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0xC, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54D824;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_54D7F0;
    }

loc_54D7FC:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xB4, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x5C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto def_54D7C1;
    }
	mov(&ts->ecx, 0x406415E3);

loc_54D813:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0xC, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54D863;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_54D813;
    }
	goto def_54D7C1;

loc_54D824:
	movzx(mv, &ts->edi, x86::mem(ts->esp + 0x2C, 1));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xB4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8C, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xC407210);
	mov(&ts->ecx, ts->ebp);
	game::sub_51AA20(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xB4, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x8C, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0xFFFFFFFB);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0xC407210);
	goto loc_54DA03;

loc_54D863:
	movzx(mv, &ts->edi, x86::mem(ts->esp + 0x2C, 1));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xB4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0xFFFFFFFD);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x406415E3);
	mov(&ts->ecx, ts->ebp);
	game::sub_51AA20(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xB4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0xFFFFFFFB);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x406415E3);
	goto loc_54DA03;

loc_54D898:
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x18, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_54D94A;
    }
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	movzx(mv, &ts->ecx, x86::mem(ts->esp + (ts->eax) + 0x28, 1));
	mov(mv, &ts->edi, x86::mem(0x7F7D50, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54D8CD;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x3C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54D8CD;
    }

loc_54D8C1:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0xC, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_54D8EE;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_54D8C1;
    }

loc_54D8CD:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xB4, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x5C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54D94A;
    }
	goto loc_54D8E0;

loc_54D8E0:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0xC, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_54D918;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_54D8E0;
    }
	goto loc_54D94A;

loc_54D8EE:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xB4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->ebp);
	game::sub_51AA20(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xB4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xFFFFFFFB);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ebx);
	goto loc_54D942;

loc_54D918:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xB4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xFFFFFFFD);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->ebp);
	game::sub_51AA20(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xB4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xFFFFFFFB);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);

loc_54D942:
	mov(&ts->ecx, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	game::sub_51AA20(ts, mv);

loc_54D94A:
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x20, 4), ts->esi);
	if (ts->eflags.zero) {
        goto def_54D7C1;
    }
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	movzx(mv, &ts->edx, x86::mem(ts->esp + (ts->eax) + 0x28, 1));
	mov(mv, x86::mem(ts->ebp + (ts->eax*4) + 0x84, 4), ts->ebx);
	mov(mv, &ts->edi, x86::mem(0x7F7D20, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_54D98C;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x3C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54D98C;
    }
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_54D980:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0xC, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_54D9AE;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_54D980;
    }

loc_54D98C:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xB4, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x5C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto def_54D7C1;
    }
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_54D9A0:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0xC, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_54D9D8;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_54D9A0;
    }
	goto def_54D7C1;

loc_54D9AE:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xB4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->ebp);
	game::sub_51AA20(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xB4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0xFFFFFFFB);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	goto loc_54DA02;

loc_54D9D8:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xB4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0xFFFFFFFD);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->ebp);
	game::sub_51AA20(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xB4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xFFFFFFFB);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x0);

loc_54DA02:
	push(mv, &ts->esp, ts->edi);

loc_54DA03:
	mov(&ts->ecx, ts->ebp);
	game::sub_51AA20(ts, mv);

def_54D7C1:
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x1C, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_54DAC5;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ebp + (ts->eax*4) + 0x84, 4), ts->ebx);
	movzx(mv, &ts->edi, x86::mem(ts->esp + (ts->eax) + 0x3C, 1));
	mov(mv, &ts->esi, x86::mem(0x7F7D78, 4));
	if (!ts->eflags.zero) {
        goto loc_54DA86;
    }
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_54DA86;
    }
	cmp(&ts->eflags, ts->eax, 0x4);
	mov(mv, x86::mem(ts->ebp + (ts->eax*4) + 0x84, 4), 0x0);
	if (!ts->eflags.zero) {
        goto loc_54DA46;
    }
	mov(&ts->esi, 0x936A6A7F);

loc_54DA46:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x3C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54DA86;
    }
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_54DA50:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0xC, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_54DA5E;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_54DA50;
    }
	goto loc_54DA86;

loc_54DA5E:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xB4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->ebp);
	game::sub_51AA20(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xB4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0xFFFFFFFB);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->ebp);
	game::sub_51AA20(ts, mv);

loc_54DA86:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xB4, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x5C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54DAC5;
    }

loc_54DA94:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0xC, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_54DAA2;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_54DA94;
    }
	goto loc_54DAC5;

loc_54DAA2:
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0xB4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0xFFFFFFFD);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->ebp);
	game::sub_51AA20(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0xFFFFFFFB);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->ebp);
	game::sub_51AA20(ts, mv);

loc_54DAC5:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4118, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54DAD6;
    }
	mov(&ts->ecx, ts->ebp);
	game::sub_541FC0(ts, mv);

loc_54DAD6:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0x13);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	if (ts->eflags.carry) {
        goto loc_54D580;
    }

loc_54DAE8:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xB4, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x24, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);

loc_54DB00:
	mov(mv, &ts->cl, x86::mem(ts->ebp + 0x1, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_54DBDE;
    }
	mov(&ts->ecx, ts->eax);
	mov(&ts->esi, 0x1);
	shl(&ts->esi, ts->cl);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0xD4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x13, 1), 0x0);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_54DBD0;
    }
	xor_(&ts->edi, ts->edi);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_54DB30:
	mov(&ts->ecx, ts->edi);
	mov(&ts->edx, 0x1);
	shl(&ts->edx, ts->cl);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	test(&ts->eflags, ts->ecx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_54DBB7;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	mov(&ts->edx, ts->edi);
	imul(&ts->edx, ts->edx, 0x88);
	lea(mv, &ts->ebx, x86::mem(ts->edx + (ts->ecx), 4));
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x4, 4));
	and_(&ts->edx, ts->esi);
	cmp(&ts->eflags, ts->edx, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_54DB6E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebx, 4));
	and_(&ts->ecx, ts->esi);
	cmp(&ts->eflags, ts->ecx, ts->esi);
	if (ts->eflags.zero) {
        goto loc_54DB6E;
    }
	or_(mv, x86::mem(ts->esp + 0x20, 4), ts->esi);
	mov(&ts->ecx, ts->edi);
	mov(&ts->dl, 0x1);
	shl(&ts->dl, ts->cl);
	or_(mv, x86::mem(ts->esp + (ts->eax) + 0x28, 1), ts->dl);

loc_54DB6E:
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x4, 4));
	and_(&ts->ecx, ts->esi);
	cmp(&ts->eflags, ts->ecx, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_54DBB7;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebx, 4));
	and_(&ts->edx, ts->esi);
	cmp(&ts->eflags, ts->edx, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_54DBB7;
    }
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->ebx);
	game::sub_504FF0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->esp + (ts->ecx*4) + 0x64, 4), ts->eax);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_54DB97;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + (ts->ecx*4) + 0x64, 4));
	goto loc_54DBA3;

loc_54DB97:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->ebx);
	game::sub_504FF0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));

loc_54DBA3:
	mov(mv, x86::mem(ts->esp + (ts->ecx*4) + 0x64, 4), ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + (ts->ecx) + 0x50, 4));
	mov(&ts->ecx, ts->edi);
	mov(&ts->dl, 0x1);
	shl(&ts->dl, ts->cl);
	or_(mv, x86::mem(ts->eax, 1), ts->dl);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));

loc_54DBB7:
	mov(mv, &ts->cl, x86::mem(ts->esp + 0x13, 1));
	inc(&ts->cl);
	movzx(&ts->edi, ts->cl);
	mov(mv, x86::mem(ts->esp + 0x13, 1), ts->cl);
	cmp(mv, &ts->eflags, ts->edi, x86::mem(ts->ebp + 0xD4, 4));
	if (ts->eflags.carry) {
        goto loc_54DB30;
    }

loc_54DBD0:
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0x4);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	if (ts->eflags.carry) {
        goto loc_54DB00;
    }

loc_54DBDE:
	xor_(&ts->edi, ts->edi);

loc_54DBE0:
	mov(mv, &ts->al, x86::mem(ts->ebp + 0x1, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_54DFF7;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xB4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8C, 4));
	mov(mv, &ts->al, x86::mem(0x7F7CFD, 1));
	cmp(&ts->eflags, ts->al, 0xFF);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54DC52;
    }
	movzx(mv, &ts->ebx, x86::mem(0x7F7CFC, 1));
	mov(mv, &ts->ecx, x86::mem(ts->esp + (ts->ebx*4) + 0x64, 4));
	movzx(&ts->eax, ts->al);
	mov(mv, &ts->edx, x86::mem(ts->esp + (ts->eax*4) + 0x64, 4));
	cmp(&ts->eflags, ts->ecx, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ecx);
	if (ts->eflags.carry) {
        goto loc_54DC26;
    }
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->edx);

loc_54DC26:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x20, 4));
	mov(&ts->ecx, ts->ebx);
	shr(&ts->edx, ts->cl);
	mov(&ts->ecx, ts->eax);
	shr(&ts->esi, ts->cl);
	movzx(mv, &ts->ecx, x86::mem(ts->esp + (ts->ebx) + 0x28, 1));
	and_(&ts->edx, ts->esi);
	movzx(mv, &ts->esi, x86::mem(ts->esp + (ts->eax) + 0x28, 1));
	movzx(mv, &ts->eax, x86::mem(ts->esp + (ts->eax) + 0x50, 1));
	and_(&ts->esi, ts->ecx);
	movzx(mv, &ts->ecx, x86::mem(ts->esp + (ts->ebx) + 0x50, 1));
	and_(&ts->eax, ts->ecx);
	goto loc_54DC72;

loc_54DC52:
	movzx(mv, &ts->ecx, x86::mem(0x7F7CFC, 1));
	mov(mv, &ts->edx, x86::mem(ts->esp + (ts->ecx*4) + 0x64, 4));
	movzx(mv, &ts->esi, x86::mem(ts->esp + (ts->ecx) + 0x28, 1));
	movzx(mv, &ts->eax, x86::mem(ts->esp + (ts->ecx) + 0x50, 1));
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	shr(&ts->edx, ts->cl);

loc_54DC72:
	or_(&ts->esi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x2C, 4));
	mov(&ts->ecx, ts->edi);
	mov(&ts->ebx, 0x1);
	shl(&ts->ebx, ts->cl);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	and_(&ts->edx, 0x1);
	and_(&ts->eax, ts->ebx);
	neg(&ts->eax);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0xFFFFFF38);
	add(&ts->eax, 0x140);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (!ts->eflags.carry) {
        goto loc_54DCDF;
    }
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_54DCA5;
    }
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54DCF3;
    }
	goto loc_54DCB7;

loc_54DCA5:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_54DCB7;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x30, 4));
	not(&ts->ebx);
	and_(&ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->ebp + 0x30, 4), ts->eax);

loc_54DCB7:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4118, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54DCC8;
    }
	mov(&ts->ecx, ts->ebp);
	game::sub_541FC0(ts, mv);

loc_54DCC8:
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, 0x8);
	if (ts->eflags.carry) {
        goto loc_54DBE0;
    }
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0xA0);
	retn(mv, &ts->esp, 0x4);

loc_54DCDF:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54DCF3;
    }
	mov(&ts->ecx, ts->edi);
	mov(&ts->edx, 0x1);
	shl(&ts->edx, ts->cl);
	or_(mv, x86::mem(ts->ebp + 0x30, 4), ts->edx);

loc_54DCF3:
	movzx(mv, &ts->ecx, x86::mem(0x7F7CFC, 1));
	mov(mv, x86::mem(ts->ebp + (ts->ecx*4) + 0x38, 4), ts->eax);
	mov(mv, &ts->cl, x86::mem(0x7F7CFD, 1));
	cmp(&ts->eflags, ts->cl, 0xFF);
	if (ts->eflags.zero) {
        goto loc_54DD12;
    }
	movzx(&ts->edx, ts->cl);
	mov(mv, x86::mem(ts->ebp + (ts->edx*4) + 0x38, 4), ts->eax);

loc_54DD12:
	mov(mv, &ts->al, x86::mem(0x7F7CFD, 1));
	cmp(&ts->eflags, ts->al, 0xFF);
	movzx(mv, &ts->ecx, x86::mem(0x7F7CFC, 1));
	if (ts->eflags.zero) {
        goto loc_54DD51;
    }
	movzx(&ts->eax, ts->al);
	xor_(&ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + (ts->ecx*4) + 0x64, 4), ts->ebx);
	mov(&ts->edx, 0x1);
	shl(&ts->edx, ts->cl);
	mov(&ts->ecx, 0x1);
	mov(mv, x86::mem(ts->esp + (ts->eax*4) + 0x64, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ecx);
	mov(&ts->ecx, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	shl(&ts->eax, ts->cl);
	or_(&ts->edx, ts->eax);
	or_(mv, x86::mem(ts->ebp + 0x34, 4), ts->edx);
	goto loc_54DD65;

loc_54DD51:
	mov(&ts->eax, 0x1);
	shl(&ts->eax, ts->cl);
	mov(mv, x86::mem(ts->esp + (ts->ecx*4) + 0x64, 4), 0x0);
	or_(mv, x86::mem(ts->ebp + 0x34, 4), ts->eax);
	xor_(&ts->ebx, ts->ebx);

loc_54DD65:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	cmp(&ts->eflags, ts->edx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_54DFA5;
    }
	movzx(mv, &ts->eax, x86::mem(0x7F7CFE, 2));
	mov(mv, &ts->ecx, x86::mem(0x7F7C90, 4));
	lea(mv, &ts->edi, x86::mem(0x7F7CFE, 4));
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->edx + 0x3C, 4));
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54DDB0;
    }
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_54DDA0:
	cmp(mv, &ts->eflags, x86::mem(ts->ebx + 0xC, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54DE75;
    }
	mov(mv, &ts->ebx, x86::mem(ts->ebx + 0x4, 4));
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_54DDA0;
    }

loc_54DDB0:
	test(mv, &ts->eflags, x86::mem(ts->edx + 0x1C, 4), 0x80000);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xB4, 4));
	if (!ts->eflags.zero) {
        goto loc_54DDE3;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0xD0, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x90, 4));
	game::sub_5189E0(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->eax);

loc_54DDE3:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0xFFFFFFFD);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebp);
	game::sub_51AA20(ts, mv);

loc_54DDF5:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0xFFFFFFFB);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebp);
	game::sub_51AA20(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54DFF7;
    }
	mov(&ts->ebx, 0x4);
	goto loc_54DE20;

loc_54DE20:
	mov(mv, &ts->eax, x86::mem(ts->ebp + (ts->ebx*4) + 0x84, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54DF2C;
    }
	cmp(&ts->eflags, ts->ebx, 0x4);
	mov(mv, x86::mem(ts->ebp + (ts->ebx*4) + 0x84, 4), 0x0);
	mov(mv, &ts->esi, x86::mem(0x7F7D78, 4));
	if (!ts->eflags.zero) {
        goto loc_54DE4B;
    }
	mov(&ts->esi, 0x936A6A7F);

loc_54DE4B:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x3C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54DF2C;
    }
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_54DE60:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0xC, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_54DF00;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_54DE60;
    }
	goto loc_54DF2C;

loc_54DE75:
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_54DDB0;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xB4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->ebp);
	game::sub_51AA20(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	test(mv, &ts->eflags, x86::mem(ts->eax + 0x1C, 4), 0x80000);
	if (!ts->eflags.zero) {
        goto loc_54DDF5;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x10, 4));
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_54DED1;
    }
	mov(mv, &ts->ebx, x86::mem(ts->ebx + 0x14, 4));

loc_54DEB6:
	cmp(mv, &ts->eflags, x86::mem(ts->ebx, 4), 0x104);
	if (ts->eflags.zero) {
        goto loc_54DEC8;
    }
	inc(&ts->eax);
	add(&ts->ebx, 0xC);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.carry) {
        goto loc_54DEB6;
    }
	goto loc_54DED1;

loc_54DEC8:
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_54DDF5;
    }

loc_54DED1:
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0xD0, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	movzx(mv, &ts->ecx, x86::mem(ts->eax, 2));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x90, 4));
	game::sub_5189E0(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->eax);
	goto loc_54DDF5;

loc_54DF00:
	movzx(mv, &ts->eax, x86::mem(ts->esp + (ts->ebx) + 0x3C, 1));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->ebp);
	game::sub_51AA20(ts, mv);
	movzx(mv, &ts->eax, x86::mem(ts->esp + (ts->ebx) + 0x3C, 1));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, 0xFFFFFFFB);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->ebp);
	game::sub_51AA20(ts, mv);

loc_54DF2C:
	inc(&ts->ebx);
	cmp(&ts->eflags, ts->ebx, 0x13);
	if (ts->eflags.carry) {
        goto loc_54DE20;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x8C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54DF6A;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x55D1E635);
	mov(&ts->ecx, ts->ebp);
	game::sub_51AA20(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x8C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFFFFFFFB);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x55D1E635);
	mov(&ts->ecx, ts->ebp);
	game::sub_51AA20(ts, mv);

loc_54DF6A:
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xABC08912);
	mov(&ts->ecx, ts->ebp);
	game::sub_51AA20(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFFFFFFFB);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0xABC08912);
	mov(&ts->ecx, ts->ebp);
	game::sub_51AA20(ts, mv);
	mov(mv, x86::mem(ts->edi + 0x8C, 4), ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0xA0);
	retn(mv, &ts->esp, 0x4);

loc_54DFA5:
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0xB4, 4));
	movzx(mv, &ts->edx, x86::mem(0x7F7CFE, 2));
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x5C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->edi, x86::mem(0x7F7C90, 4));
	if (ts->eflags.zero) {
        goto loc_54DFF7;
    }

loc_54DFC2:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0xC, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_54DFDB;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_54DFC2;
    }
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0xA0);
	retn(mv, &ts->esp, 0x4);

loc_54DFDB:
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0xFFFFFFFD);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->ebp);
	game::sub_51AA20(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0xFFFFFFFB);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->ebp);
	game::sub_51AA20(ts, mv);

loc_54DFF7:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);

loc_54DFF9:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0xA0);
	retn(mv, &ts->esp, 0x4);
}

void sub_54E020(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x18);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x24, 4));
	test(mv, &ts->eflags, x86::mem(ts->edi + 0x24, 1), 0x1);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54E48E;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_54E48E;
    }
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC, 4));
	xor_(&ts->ecx, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ebp);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x10, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	goto loc_54E060;

loc_54E060:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_54E301;
    }
	mov(&ts->ebx, 0x1);
	shl(&ts->ebx, ts->cl);
	xor_(&ts->edx, ts->edx);
	mov(mv, &ts->dx, x86::mem(ts->esi + 0x1A, 2));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	and_(&ts->edx, ts->ebx);
	cmp(&ts->eflags, ts->dx, ts->bx);
	if (!ts->eflags.zero) {
        goto loc_54E09F;
    }
	xor_(&ts->edx, ts->edx);
	mov(mv, &ts->dx, x86::mem(ts->ecx + 0xC, 2));
	and_(&ts->edx, ts->ebx);
	cmp(&ts->eflags, ts->dx, ts->bx);
	if (ts->eflags.zero) {
        goto loc_54E09F;
    }
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebx);
	mov(&ts->eax, ts->ebx);

loc_54E09F:
	xor_(&ts->edx, ts->edx);
	mov(mv, &ts->dx, x86::mem(ts->ecx + 0xE, 2));
	and_(&ts->edx, ts->ebx);
	cmp(&ts->eflags, ts->dx, ts->bx);
	if (ts->eflags.zero) {
        goto loc_54E0BD;
    }
	xor_(&ts->edx, ts->edx);
	mov(mv, &ts->dx, x86::mem(ts->ecx + 0xC, 2));
	and_(&ts->edx, ts->ebx);
	cmp(&ts->eflags, ts->dx, ts->bx);
	if (!ts->eflags.zero) {
        goto loc_54E0BD;
    }
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);

loc_54E0BD:
	xor_(&ts->edx, ts->edx);
	mov(mv, &ts->dx, x86::mem(ts->ecx + 0xE, 2));
	and_(&ts->edx, ts->ebx);
	cmp(&ts->eflags, ts->dx, ts->bx);
	if (!ts->eflags.zero) {
        goto loc_54E0E9;
    }
	xor_(&ts->edx, ts->edx);
	mov(mv, &ts->dx, x86::mem(ts->ecx + 0xC, 2));
	and_(&ts->edx, ts->ebx);
	cmp(&ts->eflags, ts->dx, ts->bx);
	if (!ts->eflags.zero) {
        goto loc_54E0E9;
    }
	push(mv, &ts->esp, ts->ebx);
	game::sub_50B150(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x2C, 4));
	mov(mv, x86::mem(ts->esp + (ts->ecx*4) + 0x20, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));

loc_54E0E9:
	mov(mv, &ts->ebp, x86::mem(ts->edi + 0x8C, 4));
	and_(&ts->eax, ts->ebx);
	test(&ts->eflags, ts->ax, ts->ax);
	if (ts->eflags.zero) {
        goto loc_54E243;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x2C, 4));
	sub(&ts->eax, 0x0);
	if (ts->eflags.zero) {
        goto loc_54E1A4;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto loc_54E243;
    }
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_54E15E;
    }
	push(mv, &ts->esp, 0x14DD0705);
	mov(&ts->ecx, ts->ebp);
	game::sub_5046D0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54E15E;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x48, 4));
	cmp(&ts->eflags, ts->al, 0x1);
	if (!ts->eflags.zero) {
        goto loc_54E15E;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x14DD0705);
	mov(&ts->ecx, ts->esi);
	game::sub_51AA20(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xFFFFFFFB);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x14DD0705);
	goto loc_54E23C;

loc_54E15E:
	push(mv, &ts->esp, 0x14DD0705);
	mov(&ts->ecx, ts->edi);
	game::sub_504800(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54E243;
    }
	mov(mv, &ts->al, x86::mem(ts->edi + 0xAD, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_54E243;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xFFFFFFFD);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x14DD0705);
	mov(&ts->ecx, ts->esi);
	game::sub_51AA20(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xFFFFFFFB);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x14DD0705);
	goto loc_54E23C;

loc_54E1A4:
	test(&ts->eflags, ts->ebp, ts->ebp);
	mov(mv, x86::mem(ts->esi + 0x94, 4), ts->ebp);
	if (ts->eflags.zero) {
        goto loc_54E203;
    }
	push(mv, &ts->esp, 0xC407210);
	mov(&ts->ecx, ts->ebp);
	game::sub_5046D0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54E203;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x48, 4));
	cmp(&ts->eflags, ts->al, 0x1);
	if (!ts->eflags.zero) {
        goto loc_54E203;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x8C, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xC407210);
	mov(&ts->ecx, ts->esi);
	game::sub_51AA20(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x8C, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xFFFFFFFB);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0xC407210);
	goto loc_54E23C;

loc_54E203:
	push(mv, &ts->esp, 0x406415E3);
	mov(&ts->ecx, ts->edi);
	game::sub_504800(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54E243;
    }
	mov(mv, &ts->al, x86::mem(ts->edi + 0xAC, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_54E243;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xFFFFFFFD);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x406415E3);
	mov(&ts->ecx, ts->esi);
	game::sub_51AA20(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xFFFFFFFB);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x406415E3);

loc_54E23C:
	mov(&ts->ecx, ts->esi);
	game::sub_51AA20(ts, mv);

loc_54E243:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	and_(&ts->eax, ts->ebx);
	test(&ts->eflags, ts->ax, ts->ax);
	if (ts->eflags.zero) {
        goto loc_54E2DE;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x2C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_54E2DE;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x94, 4), ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_54E2A8;
    }
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_54E2A8;
    }
	push(mv, &ts->esp, 0x936A6A7F);
	mov(&ts->ecx, ts->ebp);
	mov(mv, x86::mem(ts->esi + 0x94, 4), 0x0);
	game::sub_5046D0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54E2A8;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x936A6A7F);
	mov(&ts->ecx, ts->esi);
	game::sub_51AA20(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xFFFFFFFB);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x936A6A7F);
	mov(&ts->ecx, ts->esi);
	game::sub_51AA20(ts, mv);

loc_54E2A8:
	push(mv, &ts->esp, 0x936A6A7F);
	mov(&ts->ecx, ts->edi);
	game::sub_504800(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54E2DE;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xFFFFFFFD);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x936A6A7F);
	mov(&ts->ecx, ts->esi);
	game::sub_51AA20(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xFFFFFFFB);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x936A6A7F);
	mov(&ts->ecx, ts->esi);
	game::sub_51AA20(ts, mv);

loc_54E2DE:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4118, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54E2EF;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_541FC0(ts, mv);

loc_54E2EF:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x2C, 4));
	inc(&ts->ecx);
	cmp(&ts->eflags, ts->ecx, 0x2);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->ecx);
	if (ts->eflags.carry) {
        goto loc_54E060;
    }

loc_54E301:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x29, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_54E48C;
    }
	mov(mv, &ts->al, x86::mem(ts->edi + 0xAF, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_54E32C;
    }
	mov(mv, &ts->al, x86::mem(0x83A9C0, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_54E32C;
    }
	mov(mv, &ts->eax, x86::mem(0x83A9C4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_54E48C;
    }

loc_54E32C:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x8C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_54E48C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x48, 4));
	cmp(&ts->eflags, ts->al, 0x1);
	if (ts->eflags.zero) {
        goto loc_54E48C;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x94, 4));
	xor_(&ts->ebp, ts->ebp);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_54E48C;
    }

loc_54E370:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x90, 4));
	mov(mv, &ts->ebx, x86::mem(ts->ecx + (ts->ebp*4), 4));
	test(mv, &ts->eflags, x86::mem(ts->ebx + 0x1C, 4), 0x4000000);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_54E3A4;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x48, 4));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_54E3B3;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));

loc_54E3A4:
	inc(&ts->ebp);
	cmp(&ts->eflags, ts->ebp, ts->eax);
	if (ts->eflags.carry) {
        goto loc_54E370;
    }
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x18);
	retn(mv, &ts->esp, 0x4);

loc_54E3B3:
	mov(&ts->ebp, 0x4);
	goto loc_54E3C0;

loc_54E3C0:
	mov(mv, &ts->eax, x86::mem(ts->esi + (ts->ebp*4) + 0x84, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54E428;
    }
	cmp(&ts->eflags, ts->ebp, 0x4);
	mov(mv, x86::mem(ts->esi + (ts->ebp*4) + 0x84, 4), 0x0);
	mov(mv, &ts->ebx, x86::mem(0x7F7D78, 4));
	if (!ts->eflags.zero) {
        goto loc_54E3E7;
    }
	mov(&ts->ebx, 0x936A6A7F);

loc_54E3E7:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x2C, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x3C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54E424;
    }

loc_54E3F2:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0xC, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_54E400;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_54E3F2;
    }
	goto loc_54E424;

loc_54E400:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	game::sub_51AA20(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xFFFFFFFB);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	game::sub_51AA20(ts, mv);

loc_54E424:
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x18, 4));

loc_54E428:
	inc(&ts->ebp);
	cmp(&ts->eflags, ts->ebp, 0x13);
	if (ts->eflags.carry) {
        goto loc_54E3C0;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x8C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54E462;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x55D1E635);
	mov(&ts->ecx, ts->esi);
	game::sub_51AA20(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x8C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFFFFFFFB);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x55D1E635);
	mov(&ts->ecx, ts->esi);
	game::sub_51AA20(ts, mv);

loc_54E462:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xABC08912);
	mov(&ts->ecx, ts->esi);
	game::sub_51AA20(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFFFFFFFB);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0xABC08912);
	mov(&ts->ecx, ts->esi);
	game::sub_51AA20(ts, mv);
	mov(mv, x86::mem(ts->edi + 0x8C, 4), ts->ebx);

loc_54E48C:
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);

loc_54E48E:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x18);
	retn(mv, &ts->esp, 0x4);
}

void sub_54E4A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x777B68);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x79C80C);
	mov(&ts->edi, ts->ecx);
	game::sub_50D510(ts, mv);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->esp + 0x24, 4), 0x79AAEC);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0x0);
	game::sub_504880(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x16, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->esp + 0x24, 4), 0x79AA4C);
	mov(mv, x86::mem(ts->esi + 0x14, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_54E516;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_54D190(ts, mv);

loc_54E516:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51CCD0(ts, mv);
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	mov(mv, &ts->ebp, x86::mem(ts->edi + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x8637B0);
	game::sub_51BB70(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54E541;
    }
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->eax);
	game::sub_51B9D0(ts, mv);

loc_54E541:
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x79AB84);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0x1);
	game::sub_504880(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x79AB8C);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 1), 0x2);
	game::sub_504880(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0xC, 4));
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x14);
	retn(mv, &ts->esp, 0x4);

loc_777B50:
	lea(mv, &ts->ecx, x86::mem(ts->ebp + 0x4, 4));
	goto sub_504950;

loc_777B58:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x14, 4));
	goto sub_504950;

loc_777B60:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_504950;

SEH_54E4A0:
	mov(&ts->eax, 0x7E2FE0);
	goto ___CxxFrameHandler;
}

void sub_54E590(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54E59F;
    }
	game::sub_54C8A0(ts, mv);

loc_54E59F:
	mov(mv, x86::mem(ts->esi + 0x10, 1), 0x0);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_54E5B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	cmp(&ts->eflags, ts->edi, 0xC98356BA);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_54E5E6;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54E5E6;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x10, 1));
	cmp(&ts->eflags, ts->al, 0x1);
	if (!ts->eflags.zero) {
        goto loc_54E5D7;
    }
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x10, 1), 0x2);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_54E5D7:
	cmp(&ts->eflags, ts->al, 0x2);
	if (!ts->eflags.zero) {
        goto loc_54E5E6;
    }
	mov(mv, x86::mem(ts->esi + 0x10, 1), 0x3);
	mov(mv, x86::mem(0x83A9C0, 1), 0x1);

loc_54E5E6:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54E648;
    }
	cmp(&ts->eflags, ts->edi, 0xD15C04EC);
	if (!ts->eflags.zero) {
        goto loc_54E64F;
    }
	push(mv, &ts->esp, 0x100);
	push(mv, &ts->esp, 0x83A7B0);
	push(mv, &ts->esp, 0x83A8B0);
	game::sub_43DC00(ts, mv);
	mov(mv, x86::mem(0x83A9C0, 1), 0x0);
	mov(mv, x86::mem(0x83A9C4, 4), 0x0);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x40);
	mov(&ts->edi, 0x83A8B0);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	add(&ts->esp, 0xC);
	mov(&ts->ecx, 0x40);
	mov(&ts->edi, 0x83A7B0);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, 0x1);
	game::sub_540AB0(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_51DC80(ts, mv);

loc_54E648:
	pop(mv, &ts->esp, ts->edi);
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_54E64F:
	mov(mv, &ts->al, x86::mem(0x83A9C0, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_54E68F;
    }
	mov(mv, &ts->eax, x86::mem(0x83A9C4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54E68F;
    }
	cmp(&ts->eflags, ts->edi, 0x911AB364);
	if (!ts->eflags.zero) {
        goto loc_54E675;
    }
	game::sub_54C8A0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_54E675:
	cmp(&ts->eflags, ts->edi, 0x406415E3);
	if (!ts->eflags.zero) {
        goto loc_54E689;
    }
	game::sub_54C7F0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_54E689:
	push(mv, &ts->esp, ts->edi);
	game::sub_540BF0(ts, mv);

loc_54E68F:
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_54E6A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0x1);
	mov(mv, x86::mem(ts->ecx + 0x6C, 1), 0x1);
	game::sub_542990(ts, mv);
	retn(mv, &ts->esp);
}

void sub_54E6B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(ts->esi + 0x6C, 1), 0x0);
	game::sub_542990(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x2BAC0CEE);
	push(mv, &ts->esp, ts->eax);
	game::sub_4954E0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_54E6E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->edi + 0x6C, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_54EB2B;
    }
	mov(mv, &ts->al, x86::mem(0x8384DC, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_54EB2B;
    }
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	cmp(&ts->eflags, ts->eax, 0x8);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero) {
        goto loc_54E715;
    }
	cmp(&ts->eflags, ts->eax, 0x100);
	if (!ts->eflags.zero) {
        goto loc_54E72E;
    }

loc_54E715:
	cmp(mv, &ts->eflags, x86::mem(0x8654A4, 4), 0x3);
	if (!ts->eflags.zero) {
        goto loc_54E72E;
    }
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x8, 4));
	test(&ts->eflags, ts->bl, 0x1);
	if (ts->eflags.zero) {
        goto loc_54E731;
    }
	and_(&ts->ebx, 0xFFFFFFFE);
	or_(&ts->ebx, 0x2);
	goto loc_54E731;

loc_54E72E:
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x8, 4));

loc_54E731:
	cmp(&ts->eflags, ts->eax, 0x200);
	if (!ts->eflags.zero) {
        goto loc_54E743;
    }
	test(&ts->eflags, ts->bh, 0x40);
	if (ts->eflags.zero) {
        goto loc_54E743;
    }
	and_(&ts->ebx, 0xFFFFBFFF);

loc_54E743:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x83A9E0);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, 0xEB406FEC);
	push(mv, &ts->esp, ts->eax);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x58, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0xC, 4));
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x4C, 4));
	mov(mv, x86::mem(ts->ebp + 0x8, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->edi + 0x64, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x5C, 4), ts->ecx);
	mov(mv, x86::mem(ts->edi + 0x58, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_54E77E;
    }
	lea(mv, &ts->edx, x86::mem(ts->eax - 0x4, 4));
	goto loc_54E780;

loc_54E77E:
	xor_(&ts->edx, ts->edx);

loc_54E780:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x50, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54E78C;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_54E78E;

loc_54E78C:
	xor_(&ts->eax, ts->eax);

loc_54E78E:
	cmp(&ts->eflags, ts->edx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54E7C2;
    }
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x10, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->edx + 0x18, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_54E7A6;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);

loc_54E7A6:
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54E7B6;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);

loc_54E7B6:
	mov(mv, &ts->edx, x86::mem(ts->edx + 0x4, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_54E77E;
    }
	add(&ts->edx, 0xFFFFFFFC);
	goto loc_54E780;

loc_54E7C2:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x64, 4));
	test(&ts->eflags, ts->al, 0x3);
	if (ts->eflags.zero) {
        goto loc_54E853;
    }
	test(&ts->eflags, ts->al, 0x2);
	if (ts->eflags.zero) {
        goto loc_54E806;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x34, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x38, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x3C, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54E853;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79B2E0);
	push(mv, &ts->esp, ts->eax);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);
	mov(mv, x86::mem(ts->edi + 0x3C, 4), 0x0);
	goto loc_54E853;

loc_54E806:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FC44);
	mov(mv, x86::mem(0x838528, 1), 0x0);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x79C82C);
	push(mv, &ts->esp, ts->edx);
	game::sub_5426C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	add(&ts->esp, 0x10);
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_54E838;
    }
	mov(&ts->ecx, ts->edi);
	game::sub_537E60(ts, mv);
	goto loc_54E853;

loc_54E838:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x83A9E0);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, 0xEB406FEC);
	push(mv, &ts->esp, ts->eax);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x10);

loc_54E853:
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, &ts->esi, x86::mem(ts->ecx, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_54E861;
    }
	add(&ts->esi, 0xFFFFFFFC);
	goto loc_54E863;

loc_54E861:
	xor_(&ts->esi, ts->esi);

loc_54E863:
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, x86::mem(ts->ebp + 0xC, 4), 0x0);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0xC, 4));

loc_54E870:
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_54E879;
    }
	lea(mv, &ts->eax, x86::mem(ts->edx - 0x4, 4));
	goto loc_54E87B;

loc_54E879:
	xor_(&ts->eax, ts->eax);

loc_54E87B:
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54E95E;
    }
	mov(mv, &ts->ebx, x86::mem(ts->ebp - 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x64, 4));
	mov(&ts->edi, 0x1);
	shl(&ts->edi, ts->cl);
	test(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54E94E;
    }
	cmp(&ts->eflags, ts->edi, 0x20000);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_54E8BA;
    }
	if (ts->eflags.zero) {
        goto loc_54E94E;
    }
	cmp(&ts->eflags, ts->edi, 0x8000);
	if (ts->eflags.zero) {
        goto loc_54E94E;
    }
	cmp(&ts->eflags, ts->edi, 0x10000);
	goto loc_54E8C0;

loc_54E8BA:
	cmp(&ts->eflags, ts->edi, 0x80000000);

loc_54E8C0:
	if (ts->eflags.zero) {
        goto loc_54E94E;
    }
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->ebx);
	game::sub_52D330(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54E8DF;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);

loc_54E8DF:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x18, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_54E8F6;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0x4);

loc_54E8F6:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54E906;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0x4);

loc_54E906:
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x64, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->ebx);
	game::sub_5428B0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x18, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_54E926;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0x4);

loc_54E926:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54E936;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0x4);

loc_54E936:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_54E942;
    }
	add(&ts->esi, 0xFFFFFFFC);
	goto loc_54E944;

loc_54E942:
	xor_(&ts->esi, ts->esi);

loc_54E944:
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0xC, 4));
	mov(mv, x86::mem(ts->ebx + 0x6C, 1), 0x1);

loc_54E94E:
	mov(mv, &ts->edi, x86::mem(ts->ebp - 0x4, 4));
	inc(&ts->ecx);
	cmp(&ts->eflags, ts->ecx, 0x1F);
	mov(mv, x86::mem(ts->ebp + 0xC, 4), ts->ecx);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_54E870;
    }

loc_54E95E:
	test(mv, &ts->eflags, x86::mem(ts->edi + 0x64, 4), 0x18000);
	if (!ts->eflags.zero) {
        goto loc_54EB29;
    }
	mov(mv, &ts->ebx, x86::mem(ts->edi + 0x4, 4));
	mov(&ts->ecx, 0x79C820);
	or_(&ts->esi, 0xFFFFFFFF);
	mov(&ts->al, 0x52);

loc_54E978:
	imul(&ts->esi, ts->esi, 0x21);
	cmp(&ts->eflags, ts->al, 0x61);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_54E985;
    }
	cmp(&ts->eflags, ts->al, 0x7A);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_54E985;
    }
	add(&ts->al, 0xE0);

loc_54E985:
	movzx(&ts->eax, ts->al);
	add(&ts->esi, ts->eax);
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x1, 1));
	inc(&ts->ecx);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_54E978;
    }
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_54E9AF;
    }
	push(mv, &ts->esp, ts->ebx);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54E9AF;
    }
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_54E9C6;
    }

loc_54E9AF:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54EA06;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	game::sub_52C570(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54EA06;
    }

loc_54E9C6:
	mov(mv, &ts->ecx, x86::mem(0x8384D4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_54E9D6;
    }
	test(mv, &ts->eflags, x86::mem(ts->eax + 0x1C, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_54E9E5;
    }

loc_54E9D6:
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x1C, 4));
	and_(&ts->ecx, 0xFFFFFFFE);
	or_(&ts->ecx, 0x400000);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->ecx);

loc_54E9E5:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x18, 4), 0x5);
	if (!ts->eflags.zero) {
        goto loc_54EA06;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x64, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x60, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_54EA06;
    }
	mov(&ts->esi, ts->eax);

loc_54E9F7:
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edx + 0x4, 4));
	add(&ts->esp, 0x4);
	dec(&ts->esi);
	if (!ts->eflags.zero) {
        goto loc_54E9F7;
    }

loc_54EA06:
	test(mv, &ts->eflags, x86::mem(ts->edi + 0x64, 1), 0x2);
	if (!ts->eflags.zero) {
        goto loc_54EB29;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x34, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54EA57;
    }
	mov(mv, &ts->ecx, x86::mem(0x8384D4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_54EA27;
    }
	test(mv, &ts->eflags, x86::mem(ts->eax + 0x1C, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_54EA36;
    }

loc_54EA27:
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x1C, 4));
	and_(&ts->edx, 0xFFFFFFFE);
	or_(&ts->edx, 0x400000);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->edx);

loc_54EA36:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x18, 4), 0x5);
	if (!ts->eflags.zero) {
        goto loc_54EA57;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x64, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x60, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_54EA57;
    }
	mov(&ts->esi, ts->eax);

loc_54EA48:
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edx + 0x4, 4));
	add(&ts->esp, 0x4);
	dec(&ts->esi);
	if (!ts->eflags.zero) {
        goto loc_54EA48;
    }

loc_54EA57:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x38, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54EA9F;
    }
	mov(mv, &ts->ecx, x86::mem(0x8384D4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_54EA6E;
    }
	test(mv, &ts->eflags, x86::mem(ts->eax + 0x1C, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_54EA7D;
    }

loc_54EA6E:
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x1C, 4));
	and_(&ts->ecx, 0xFFFFFFFE);
	or_(&ts->ecx, 0x400000);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->ecx);

loc_54EA7D:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x18, 4), 0x5);
	if (!ts->eflags.zero) {
        goto loc_54EA9F;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x64, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x60, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_54EA9F;
    }
	mov(&ts->esi, ts->eax);
	nop();

loc_54EA90:
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edx + 0x4, 4));
	add(&ts->esp, 0x4);
	dec(&ts->esi);
	if (!ts->eflags.zero) {
        goto loc_54EA90;
    }

loc_54EA9F:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x3C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_54EB29;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x40, 4));
	mov(mv, &ts->ebx, x86::mem(ts->edi + 0x34, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784264, 4));
	mov(mv, x86::mem(ts->edi + 0x3C, 4), ts->ebx);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	game::__ftol2(ts, mv);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x48, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_54EB29;
    }
	mov(&ts->edx, 0x79B2EC);
	or_(&ts->ecx, 0xFFFFFFFF);
	mov(&ts->al, 0x46);

loc_54EAD5:
	imul(&ts->ecx, ts->ecx, 0x21);
	cmp(&ts->eflags, ts->al, 0x61);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_54EAE2;
    }
	cmp(&ts->eflags, ts->al, 0x7A);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_54EAE2;
    }
	add(&ts->al, 0xE0);

loc_54EAE2:
	movzx(&ts->eax, ts->al);
	add(&ts->ecx, ts->eax);
	mov(mv, &ts->al, x86::mem(ts->edx + 0x1, 1));
	inc(&ts->edx);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_54EAD5;
    }
	mov(mv, &ts->esi, x86::mem(ts->ebx + 0x4C, 4));
	xor_(&ts->edi, ts->edi);
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_54EB29;
    }

loc_54EAF8:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x30, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54EB0D;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_54EAF8;
    }
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x8);

loc_54EB0D:
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_54EB29;
    }
	cmp(mv, &ts->eflags, ts->esi, x86::mem(ts->ebx + 0x54, 4));
	if (ts->eflags.zero) {
        goto loc_54EB26;
    }
	mov(&ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->ebx + 0x54, 4), ts->esi);
	game::sub_517720(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x54, 4));
	mov(mv, x86::mem(ts->ecx + 0x10, 4), ts->edi);

loc_54EB26:
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->edi);

loc_54EB29:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);

loc_54EB2B:
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x8);
}

void sub_54EB40(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x9E, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, 0x1);
	if (ts->eflags.zero) {
        goto loc_54EB52;
    }
	game::sub_542F50(ts, mv);
	retn(mv, &ts->esp);

loc_54EB52:
	game::sub_542DF0(ts, mv);
	retn(mv, &ts->esp);
}

void sub_54EB60(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x9E, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_54EB72;
    }
	game::sub_542F50(ts, mv);
	retn(mv, &ts->esp);

loc_54EB72:
	game::sub_542DF0(ts, mv);
	retn(mv, &ts->esp);
}

void sub_54EB80(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	sub(&ts->esp, 0x18);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8763D4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x797D50, 4));
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x94, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8763D8, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x8C, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78DA30, 4));
	push(mv, &ts->esp, ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CD00(ts, mv);
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_54ED1B;
    }
	mov(mv, &ts->eax, x86::mem(0x8763EC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_54EBE4;
    }
	push(mv, &ts->esp, 0xFFFFFFFF);
	goto loc_54EBE8;

loc_54EBE4:
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_54EBEF;
    }
	push(mv, &ts->esp, 0x1);

loc_54EBE8:
	mov(&ts->ecx, ts->esi);
	game::sub_5430C0(ts, mv);

loc_54EBEF:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	lea(mv, &ts->ebp, x86::mem(ts->esi + 0x10, 4));
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_54ED1B;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x28, 4));
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0x8, 4));
	if (ts->eflags.zero) {
        goto loc_54EC0F;
    }
	lea(mv, &ts->edx, x86::mem(ts->eax - 0x4, 4));
	goto loc_54EC11;

loc_54EC0F:
	xor_(&ts->edx, ts->edx);

loc_54EC11:
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_54EC1A;
    }
	lea(mv, &ts->eax, x86::mem(ts->ebx - 0x4, 4));
	goto loc_54EC1C;

loc_54EC1A:
	xor_(&ts->eax, ts->eax);

loc_54EC1C:
	cmp(&ts->eflags, ts->edx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54ED1B;
    }
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_54EC2D;
    }
	lea(mv, &ts->eax, x86::mem(ts->ebp - 0x4, 4));
	goto loc_54EC2F;

loc_54EC2D:
	xor_(&ts->eax, ts->eax);

loc_54EC2F:
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54ED1B;
    }
	mov(mv, &ts->al, x86::mem(ts->edi + 0x14, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_54EC7A;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x18, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x1C, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x20, 4));
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CD00(ts, mv);
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_54EC97;
    }

loc_54EC7A:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54EC86;
    }
	lea(mv, &ts->edi, x86::mem(ts->eax - 0x4, 4));
	goto loc_54EC88;

loc_54EC86:
	xor_(&ts->edi, ts->edi);

loc_54EC88:
	mov(mv, &ts->edx, x86::mem(ts->edx + 0x4, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_54EC0F;
    }
	add(&ts->edx, 0xFFFFFFFC);
	goto loc_54EC11;

loc_54EC97:
	mov(mv, &ts->al, x86::mem(ts->esi + 0xA8, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_54ECDA;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x2C, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_54ECAE;
    }
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_538530(ts, mv);

loc_54ECAE:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xA4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54ED1B;
    }
	mov(mv, &ts->cl, x86::mem(0x8763F0, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	movzx(mv, &ts->ecx, x86::mem(0x8763F2, 1));
	if (ts->eflags.zero) {
        goto loc_54ECD0;
    }
	movzx(mv, &ts->ecx, x86::mem(0x8763F5, 1));

loc_54ECD0:
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54ED1B;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	goto loc_54ED12;

loc_54ECDA:
	mov(mv, &ts->al, x86::mem(0x8763F0, 1));
	test(&ts->eflags, ts->al, ts->al);
	movzx(mv, &ts->eax, x86::mem(0x8763F2, 1));
	if (ts->eflags.zero) {
        goto loc_54ECF1;
    }
	movzx(mv, &ts->eax, x86::mem(0x8763F5, 1));

loc_54ECF1:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54ED1B;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x2C, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_54ED04;
    }
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_538530(ts, mv);
	goto loc_54ED1B;

loc_54ED04:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xA4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54ED1B;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);

loc_54ED12:
	push(mv, &ts->esp, ts->eax);
	game::sub_51CE60(ts, mv);
	add(&ts->esp, 0x8);

loc_54ED1B:
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x34, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_538130(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x70, 4));
	add(&ts->eax, 0xA);
	cmp(&ts->eflags, ts->eax, 0x14);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_54ED37;
    }
	movzx(mv, &ts->eax, x86::mem(ts->eax + 0x54EDB0, 1));
	jmp(x86::mem(0x54ED9C, 4));

loc_54ED3E:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_5430C0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_54ED4F:
	push(mv, &ts->esp, 0xFFFFFFFF);
	mov(&ts->ecx, ts->esi);
	game::sub_5430C0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_54ED60:
	mov(&ts->ecx, ts->esi);
	game::sub_543590(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_54ED6F:
	mov(&ts->ecx, ts->esi);
	game::sub_543550(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

def_54ED37:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_538080(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_54EDD0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54EE01;
    }
	mov(&ts->eax, ts->ecx);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54EDE8;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_54EDEA;

loc_54EDE8:
	xor_(&ts->eax, ts->eax);

loc_54EDEA:
	mov(mv, x86::mem(ts->esi + 0x2C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54EDF9;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_54EDFB;

loc_54EDF9:
	xor_(&ts->eax, ts->eax);

loc_54EDFB:
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->eax);

loc_54EE01:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_54EE2E;
    }
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->eax);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_54EE10:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x9E, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(&ts->ecx, ts->esi);
	push(mv, &ts->esp, 0x1);
	if (ts->eflags.zero) {
        goto loc_54EE25;
    }
	game::sub_542F50(ts, mv);
	goto loc_54EE2A;

loc_54EE25:
	game::sub_542DF0(ts, mv);

loc_54EE2A:
	dec(&ts->edi);
	if (!ts->eflags.zero) {
        goto loc_54EE10;
    }
	pop(mv, &ts->esp, ts->edi);

loc_54EE2E:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_54EE40(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x40);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC4, 4));
	push(mv, &ts->esp, 0x7845D4);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DDA0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x12C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x3C, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x44, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_4953C0(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x70, 4));
	mov(mv, x86::mem(ts->edi + 0x2C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xD0, 4));
	add(&ts->esp, 0x24);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_5445F0(ts, mv);
	mov(mv, x86::mem(ts->edi + 0x24, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x50, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x108, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x128, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x12C, 4));
	inc(&ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x12C, 4), ts->ecx);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x100, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x100, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x108, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x128, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x120, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x120, 4));
	mov(mv, &ts->al, x86::mem(ts->edi + 0x28, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_54EEFC;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x20, 4));

loc_54EEFC:
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x104, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x12C, 4));
	pop(mv, &ts->esp, ts->edi);
	dec(&ts->eax);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x40);
	retn(mv, &ts->esp, 0x4);
}

void sub_54EF30(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x44);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC4, 4));
	push(mv, &ts->esp, 0x7845D4);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DDA0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x12C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x40, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x48, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_4953C0(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x74, 4));
	mov(mv, x86::mem(ts->edi + 0x2C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC8, 4));
	push(mv, &ts->esp, 0x7845D4);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x58, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DDA0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x12C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x60, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x44, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x40);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_4953C0(ts, mv);
	mov(mv, x86::mem(ts->edi + 0x30, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xD0, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_5445F0(ts, mv);
	mov(mv, x86::mem(ts->edi + 0x24, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xD4, 4));
	push(mv, &ts->esp, 0x7845D4);
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x34, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_43DDA0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x12C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x3C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_4953E0(ts, mv);
	mov(mv, x86::mem(ts->edi + 0x4C, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xD8, 4));
	push(mv, &ts->esp, 0x7845D4);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x58, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43DDA0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x12C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x60, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x44, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x40);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_4953E0(ts, mv);
	mov(mv, x86::mem(ts->edi + 0x50, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x5C, 4));
	add(&ts->esp, 0x8);
	dec(&ts->eax);
	mov(&ts->ecx, 0x367B3E04);
	mov(&ts->edx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54F074;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_54F068;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto loc_54F07B;
    }

loc_54F068:
	mov(&ts->ecx, 0x374F6465);
	mov(&ts->edx, 0x760BDC9D);
	goto loc_54F07B;

loc_54F074:
	mov(&ts->edx, 0x9943D584);
	mov(&ts->ecx, ts->edx);

loc_54F07B:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54F091;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x24, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54F091;
    }
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->ecx);
	or_(mv, x86::mem(ts->eax + 0x1C, 4), 0x400000);

loc_54F091:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x50, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54F0AC;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x24, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_54F0AC;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x1C, 4));
	or_(&ts->ecx, 0x400000);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->ecx);

loc_54F0AC:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x50, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x100, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x108, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x12C, 4));
	inc(&ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x12C, 4), ts->ecx);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x128, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x100, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x120, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x108, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x128, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x120, 4));
	mov(mv, &ts->al, x86::mem(ts->edi + 0x28, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_54F10A;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x20, 4));

loc_54F10A:
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x50, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x50, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x58, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_51D070(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x50, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x60, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_51D730(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x68, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x6C, 4));
	add(&ts->esp, 0x18);
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fabs(&ts->fp, x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x12C, 4));
	pop(mv, &ts->esp, ts->edi);
	dec(&ts->eax);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x44);
	retn(mv, &ts->esp, 0x8);
}

void sub_54F170(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->dl, x86::mem(ts->esp + 0x8, 1));
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->dl, ts->dl);
	setnz(ts->eflags, &ts->al);
	dec(&ts->eax);
	and_(&ts->eax, 0x2);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	goto sub_54EF30;
}

void sub_54F190(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x44);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC4, 4));
	push(mv, &ts->esp, 0x7845D4);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DDA0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x12C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x40, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x48, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_4953C0(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x74, 4));
	mov(mv, x86::mem(ts->edi + 0x2C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC8, 4));
	push(mv, &ts->esp, 0x7845D4);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x58, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DDA0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x12C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x60, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x44, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x40);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_4953C0(ts, mv);
	mov(mv, x86::mem(ts->edi + 0x30, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xD0, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_5445F0(ts, mv);
	mov(mv, x86::mem(ts->edi + 0x24, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xCC, 4));
	push(mv, &ts->esp, 0x7845D4);
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x34, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_43DDA0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x12C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x3C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_4953E0(ts, mv);
	mov(mv, x86::mem(ts->edi + 0x54, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xD4, 4));
	push(mv, &ts->esp, 0x7845D4);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x58, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43DDA0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x12C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x60, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x44, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x40);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_4953E0(ts, mv);
	mov(mv, x86::mem(ts->edi + 0x4C, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xD8, 4));
	push(mv, &ts->esp, 0x7845D4);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x3C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43DDA0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x12C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x44, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_4953E0(ts, mv);
	mov(mv, x86::mem(ts->edi + 0x50, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x80, 4));
	add(&ts->esp, 0x2C);
	dec(&ts->eax);
	mov(&ts->ecx, 0x367B3E04);
	mov(&ts->edx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54F316;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_54F30A;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto loc_54F31D;
    }

loc_54F30A:
	mov(&ts->ecx, 0x374F6465);
	mov(&ts->edx, 0x760BDC9D);
	goto loc_54F31D;

loc_54F316:
	mov(&ts->edx, 0x9943D584);
	mov(&ts->ecx, ts->edx);

loc_54F31D:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54F333;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x24, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54F333;
    }
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->ecx);
	or_(mv, x86::mem(ts->eax + 0x1C, 4), 0x400000);

loc_54F333:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x50, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54F34E;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x24, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_54F34E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x1C, 4));
	or_(&ts->ecx, 0x400000);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->ecx);

loc_54F34E:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x50, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x108, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x128, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x12C, 4));
	inc(&ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x12C, 4), ts->ecx);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x100, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x100, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x108, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x128, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x120, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x120, 4));
	mov(mv, &ts->al, x86::mem(ts->edi + 0x28, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_54F3AC;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x20, 4));

loc_54F3AC:
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x50, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x50, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x58, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_51D070(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x50, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x60, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_51D730(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x68, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x6C, 4));
	add(&ts->esp, 0x18);
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fabs(&ts->fp, x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x12C, 4));
	pop(mv, &ts->esp, ts->edi);
	dec(&ts->eax);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x44);
	retn(mv, &ts->esp, 0x8);
}

void sub_54F410(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x18C);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC4, 4));
	push(mv, &ts->esp, 0x7845D4);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x64, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DDA0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x12C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x6C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x90, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x98, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_4953C0(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x1C4, 4));
	mov(mv, x86::mem(ts->edi + 0x2C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xF0, 4));
	push(mv, &ts->esp, 0x7845D4);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xA8, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DDA0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x12C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xB0, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x94, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x40);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x5C, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_4953E0(ts, mv);
	mov(&ts->ebx, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xEC, 4));
	push(mv, &ts->esp, 0x7845D4);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18C, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DDA0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x12C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x194, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x158, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x160, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_4953E0(ts, mv);
	mov(&ts->ebp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xE8, 4));
	push(mv, &ts->esp, 0x7845D4);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xD0, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DDA0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x12C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xD8, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x11C, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x48);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xDC, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_4953E0(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xE4, 4));
	push(mv, &ts->esp, 0x7845D4);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x16C, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DDA0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x12C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x174, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x138, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x140, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_4953C0(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x40, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xE0, 4));
	push(mv, &ts->esp, 0x7845D4);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xF0, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DDA0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x12C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xF8, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x13C, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x48);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_4953E0(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xDC, 4));
	push(mv, &ts->esp, 0x7845D4);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DDA0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x12C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x34, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x58, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x60, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_4953E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x44, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x40, 4));
	add(&ts->esp, 0x2C);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_5275B0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xD0, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_5445F0(ts, mv);
	mov(mv, x86::mem(ts->edi + 0x24, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x44, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xD4, 4));
	push(mv, &ts->esp, 0x7845D4);
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x44, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_43DDA0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x12C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x4C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x38, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_4953E0(ts, mv);
	mov(mv, x86::mem(ts->edi + 0x4C, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xD8, 4));
	push(mv, &ts->esp, 0x7845D4);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x68, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43DDA0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x12C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x70, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x54, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x40);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_4953E0(ts, mv);
	mov(mv, x86::mem(ts->edi + 0x50, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1AC, 4));
	add(&ts->esp, 0x8);
	dec(&ts->eax);
	mov(&ts->ecx, 0x367B3E04);
	mov(&ts->edx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54F6FD;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_54F6F1;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto loc_54F704;
    }

loc_54F6F1:
	mov(&ts->ecx, 0x374F6465);
	mov(&ts->edx, 0x760BDC9D);
	goto loc_54F704;

loc_54F6FD:
	mov(&ts->edx, 0x9943D584);
	mov(&ts->ecx, ts->edx);

loc_54F704:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(&ts->ebx, 0x400000);
	if (ts->eflags.zero) {
        goto loc_54F71B;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x24, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54F71B;
    }
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->ecx);
	or_(mv, x86::mem(ts->eax + 0x1C, 4), ts->ebx);

loc_54F71B:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x50, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54F732;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x24, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_54F732;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x1C, 4));
	or_(&ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->ecx);

loc_54F732:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x50, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x108, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x128, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x12C, 4));
	inc(&ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x12C, 4), ts->ecx);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x100, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x100, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x108, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x128, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x120, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x120, 4));
	mov(mv, &ts->al, x86::mem(ts->edi + 0x28, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_54F790;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x20, 4));

loc_54F790:
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x50, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_51D070(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x50, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_51D730(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	add(&ts->esp, 0x18);
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fabs(&ts->fp, x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x12C, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	dec(&ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x18C);
	retn(mv, &ts->esp, 0x8);
}

void sub_54F800(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->dl, x86::mem(ts->esp + 0x8, 1));
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->dl, ts->dl);
	setnz(ts->eflags, &ts->al);
	dec(&ts->eax);
	and_(&ts->eax, 0x2);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	goto sub_54F410;
}

void sub_54F820(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x48);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC4, 4));
	push(mv, &ts->esp, 0x7845D4);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DDA0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x12C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x44, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x4C, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_4953C0(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x78, 4));
	mov(mv, x86::mem(ts->edi + 0x2C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC8, 4));
	push(mv, &ts->esp, 0x7845D4);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x5C, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DDA0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x12C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x64, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x48, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x40);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_4953C0(ts, mv);
	mov(mv, x86::mem(ts->edi + 0x30, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xD0, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_5445F0(ts, mv);
	mov(mv, x86::mem(ts->edi + 0x24, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x50, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x108, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x128, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x12C, 4));
	inc(&ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x12C, 4), ts->ecx);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x100, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x100, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x108, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x128, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x120, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x120, 4));
	mov(mv, &ts->al, x86::mem(ts->edi + 0x28, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_54F91E;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x20, 4));

loc_54F91E:
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x30, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x54, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_51D070(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x30, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x64, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_51D730(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x6C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	add(&ts->esp, 0x18);
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fabs(&ts->fp, x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x12C, 4));
	pop(mv, &ts->esp, ts->edi);
	dec(&ts->eax);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x48);
	retn(mv, &ts->esp, 0x4);
}

void sub_54F980(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x777B94);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(0x83853C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_54F9DB;
    }
	push(mv, &ts->esp, 0x10);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_54F9D4;
    }
	mov(&ts->ecx, ts->eax);
	game::sub_544F80(ts, mv);
	mov(mv, x86::mem(0x83853C, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_54F9D4:
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x83853C, 4), ts->eax);

loc_54F9DB:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_777B80:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79C83C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_54F980:
	mov(&ts->eax, 0x7E3004);
	goto ___CxxFrameHandler;
}

void sub_54F9F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x50, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54FAD7;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1D9, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_54FAD7;
    }
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0xC, 4));
	cmp(&ts->eflags, ts->ebx, 0xFFFFFFFF);
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x58, 4));
	push(mv, &ts->esp, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_54FA47;
    }
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4C, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_4AEB90(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_54FA3E;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50D150(ts, mv);
	add(&ts->esp, 0xC);

loc_54FA3E:
	mov(&ts->ecx, ts->edi);
	game::sub_495900(ts, mv);
	goto loc_54FA73;

loc_54FA47:
	cmp(&ts->eflags, ts->ebx, 0x1);
	if (!ts->eflags.zero) {
        goto loc_54FA73;
    }
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4C, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_4AEBC0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_54FA6C;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x5);
	push(mv, &ts->esp, ts->eax);
	game::sub_50D150(ts, mv);
	add(&ts->esp, 0xC);

loc_54FA6C:
	mov(&ts->ecx, ts->edi);
	game::sub_4958F0(ts, mv);

loc_54FA73:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	cmp(&ts->eflags, ts->ebp, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54FAD4;
    }
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x1D5, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_54FA94;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_50B8C0(ts, mv);
	add(&ts->esp, 0x8);

loc_54FA94:
	mov(&ts->ecx, ts->esi);
	game::sub_545510(ts, mv);
	cmp(&ts->eflags, ts->ebx, 0x1);
	if (!ts->eflags.zero) {
        goto loc_54FABB;
    }
	add(&ts->esi, 0x114);
	mov(&ts->ecx, ts->esi);
	game::sub_527610(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_495850(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_54FABB:
	cmp(&ts->eflags, ts->ebx, 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_54FAD4;
    }
	add(&ts->esi, 0x114);
	mov(&ts->ecx, ts->esi);
	game::sub_527660(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_495810(ts, mv);

loc_54FAD4:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);

loc_54FAD7:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_54FAE0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x838990, 4));
	sub(&ts->eax, 0x0);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54FAF9;
    }
	sub(&ts->eax, 0x2);
	if (!ts->eflags.zero) {
        goto loc_54FB00;
    }
	game::sub_546030(ts, mv);
	goto loc_54FB00;

loc_54FAF9:
	mov(&ts->ecx, ts->esi);
	game::sub_545B50(ts, mv);

loc_54FB00:
	mov(&ts->ecx, ts->esi);
	game::sub_545510(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_54FB53;
    }
	cmp(mv, &ts->eflags, x86::mem(0x838990, 4), 0x2);
	if (!ts->eflags.zero) {
        goto loc_54FB53;
    }
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_5453B0(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	mov(&ts->ecx, 0x838980);
	game::sub_521530(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, 0x2F5E7DA3);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, 0x1);
	mov(mv, x86::mem(ts->ecx + 0x2F, 1), 0x1);
	game::sub_52EB90(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_54FB53:
	mov(&ts->ecx, ts->esi);
	game::sub_545460(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, 0x1);
	mov(mv, x86::mem(ts->ecx + 0x2F, 1), 0x1);
	game::sub_52EB90(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_54FB70(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto def_54FB90;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x48, 4));
	add(&ts->eax, 0xFFFFFFF7);
	cmp(&ts->eflags, ts->eax, 0x99);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_54FB90;
    }
	movzx(mv, &ts->eax, x86::mem(ts->eax + 0x54FC9C, 1));
	push(mv, &ts->esp, ts->ebx);
	jmp(x86::mem(0x54FC84, 4));

loc_54FB97:
	movzx(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 1));
	mov(mv, x86::mem(0x8363F8, 4), ts->ecx);

loc_54FBA2:
	pop(mv, &ts->esp, ts->ebx);

def_54FB90:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);

loc_54FBA7:
	movzx(mv, &ts->edx, x86::mem(ts->esp + 0x10, 1));
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x8A1C68, 4), ts->edx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);

loc_54FBB7:
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	game::sub_547090(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x3E9431DC);
	push(mv, &ts->esp, 0xA936C3A2);
	push(mv, &ts->esp, ts->eax);
	game::sub_495460(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->bl, ts->bl);
	if (ts->eflags.zero) {
        goto loc_54FBA2;
    }
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x8, 4), 0x799AB8);
	mov(mv, x86::mem(ts->esp + 0x4, 4), 0x200409);
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	goto sub_54E6E0;

loc_54FBFA:
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	game::sub_547090(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xBA0E1020);
	push(mv, &ts->esp, 0xA936C3A2);
	push(mv, &ts->esp, ts->ecx);
	game::sub_495460(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->bl, ts->bl);
	if (ts->eflags.zero) {
        goto loc_54FBA2;
    }
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x8, 4), 0x799AB8);
	mov(mv, x86::mem(ts->esp + 0x4, 4), 0x80409);
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	goto sub_54E6E0;

loc_54FC3D:
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	game::sub_547090(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xEAA1D5DF);
	push(mv, &ts->esp, 0xA936C3A2);
	push(mv, &ts->esp, ts->edx);
	game::sub_495460(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->bl, ts->bl);
	if (ts->eflags.zero) {
        goto loc_54FBA2;
    }
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x8, 4), 0x799AB8);
	mov(mv, x86::mem(ts->esp + 0x4, 4), 0x100409);
	goto sub_54E6E0;
}

void sub_54FD40(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	cmp(mv, &ts->eflags, x86::mem(ts->edi, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_54FDAD;
    }
	mov(mv, &ts->eax, x86::mem(0x83898C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_54FD6D;
    }
	mov(mv, &ts->eax, x86::mem(0x851148, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54FD6D;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(0x851148, 4), 0x0);

loc_54FD6D:
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->esi, x86::mem(ts->edi + 0x940, 4));
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x50, 4));
	game::sub_413440(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->esi);
	game::sub_4D8EC0(ts, mv);
	add(&ts->esp, 0xC);
	game::sub_54F980(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x83853C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero) {
        goto loc_54FDAA;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax, 4));
	mov(mv, x86::mem(0x83853C, 4), 0x0);

loc_54FDAA:
	mov(mv, x86::mem(ts->edi, 1), 0x0);

loc_54FDAD:
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp);
}

void sub_54FDB0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0xC, 4));
	test(&ts->eflags, ts->ebp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54FE42;
    }
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x10, 4));
	cmp(&ts->eflags, ts->ebx, 0x40);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_54FE41;
    }
	cmp(&ts->eflags, ts->ebx, 0x43);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_54FE41;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x48, 4));
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->esi, x86::mem(ts->edi + 0x48, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero) {
        goto loc_54FE09;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x564B8CB6);
	mov(&ts->ecx, ts->ebp);
	game::sub_61B500(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x40);
	if (ts->eflags.zero) {
        goto loc_54FE02;
    }
	mov(&ts->ecx, ts->edi);
	game::sub_521580(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_54FE02;
    }
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->edi);
	game::sub_53B0E0(ts, mv);
	goto loc_54FE09;

loc_54FE02:
	mov(&ts->ecx, ts->edi);
	game::sub_547540(ts, mv);

loc_54FE09:
	push(mv, &ts->esp, 0x10);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54FE31;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebp);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ebx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x8);

loc_54FE31:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);

loc_54FE41:
	pop(mv, &ts->esp, ts->ebx);

loc_54FE42:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x8);
}

void sub_54FE50(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	sub(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->edi, ts->edi);
	cmp(&ts->eflags, ts->esi, ts->edi);
	mov(mv, x86::mem(ts->ebp - 0x8, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54FF26;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x85AD40);
	game::sub_5415E0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x861E74, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	sub(&ts->eax, ts->ecx);
	mov(mv, x86::mem(0x861E74, 4), ts->eax);
	if (!ts->eflags.sign) {
        goto loc_54FE98;
    }
	mov(mv, x86::mem(0x861E74, 4), ts->edi);

loc_54FE98:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x8, 4), ts->edi);
	mov(mv, x86::mem(ts->ebp - 0x1, 1), 0x0);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_54FF19;
    }
	push(mv, &ts->esp, ts->ebx);

loc_54FEA2:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x8, 4));
	mov(&ts->edx, ts->edi);
	imul(&ts->edx, ts->edx, 0x5C);
	lea(mv, &ts->ebx, x86::mem(ts->edx + (ts->esi) + 0xC, 4));
	push(mv, &ts->esp, ts->ebx);
	game::sub_530350(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_54FEFD;
    }
	mov(mv, &ts->ebx, x86::mem(ts->ebx, 4));
	mov(mv, &ts->eax, x86::mem(0x837B90, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ebp - 0xC, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_54FEFD;
    }
	mov(mv, &ts->eax, x86::mem(0x863480, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x83AD90);
	game::sub_503680(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + (ts->edi*4) + 0x34, 4));
	lea(mv, &ts->esi, x86::mem(ts->eax + 0x434, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	game::sub_503E10(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	add(mv, x86::mem(ts->esi + 0x3BC, 4), ts->ecx);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x8, 4));

loc_54FEFD:
	mov(mv, &ts->al, x86::mem(ts->ebp - 0x1, 1));
	mov(mv, &ts->edx, x86::mem(ts->ebp - 0x8, 4));
	inc(&ts->al);
	mov(mv, x86::mem(ts->edx + (ts->edi*4) + 0x34, 4), 0xFFFFFFFF);
	movzx(&ts->edi, ts->al);
	mov(mv, x86::mem(ts->ebp - 0x1, 1), ts->al);
	cmp(mv, &ts->eflags, ts->edi, x86::mem(ts->esi + 0x8, 4));
	if (ts->eflags.carry) {
        goto loc_54FEA2;
    }
	pop(mv, &ts->esp, ts->ebx);

loc_54FF19:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x8, 4));
	mov(mv, x86::mem(ts->eax + 0x1234, 4), 0x0);

loc_54FF26:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_54FF30(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50B840(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_54FF4D;
    }
	mov(mv, x86::mem(ts->eax + 0x10, 4), 0x0);

loc_54FF4D:
	mov(&ts->ecx, 0x838980);
	game::sub_54FD40(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x1);
	push(mv, &ts->esp, 0x1);
	if (!ts->eflags.zero) {
        goto loc_54FF74;
    }
	mov(mv, &ts->ecx, x86::mem(0x863480, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	game::sub_5309E0(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_54FF74:
	mov(mv, &ts->edx, x86::mem(0x83AAB8, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x0);
	game::sub_5309E0(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);
}

void sub_54FF90(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x48, 4));
	mov(mv, x86::mem(ts->esi + 0x158, 4), ts->eax);
	mov(mv, &ts->al, x86::mem(ts->edi + 0x22, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_550069;
    }
	mov(&ts->ecx, 0x8392D0);
	game::sub_5B53A0(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x1AC, 4));
	mov(&ts->ecx, 0x8392D0);
	game::sub_5B53A0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x194, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x194, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x188, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x164, 4));
	mov(mv, x86::mem(ts->ecx + 0x2C, 4), ts->edx);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_54FFED;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x24, 4));
	mov(mv, x86::mem(ts->ecx + 0x30, 4), ts->eax);

loc_54FFED:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x30, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x28, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_550000;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x28, 4));
	mov(mv, x86::mem(ts->ecx + 0x30, 4), ts->edx);

loc_550000:
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));
	mov(&ts->ecx, 0x8392D0);
	game::sub_5B6A20(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x1F8, 4));
	mov(&ts->ecx, 0x8392D0);
	game::sub_5B6A20(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1E0, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x1E0, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x1D4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x1B0, 4));
	mov(mv, x86::mem(ts->ecx + 0x2C, 4), ts->edx);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_550047;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x24, 4));
	mov(mv, x86::mem(ts->ecx + 0x30, 4), ts->eax);

loc_550047:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x30, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x28, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_55005A;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x28, 4));
	mov(mv, x86::mem(ts->ecx + 0x30, 4), ts->edx);

loc_55005A:
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));
	mov(&ts->ecx, 0x8392D0);
	goto loc_550122;

loc_550069:
	mov(&ts->ecx, 0x8389E0);
	game::sub_5B53A0(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x1AC, 4));
	mov(&ts->ecx, 0x8392D0);
	game::sub_5B53A0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x194, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x194, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x188, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x164, 4));
	mov(mv, x86::mem(ts->ecx + 0x2C, 4), ts->edx);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_5500AB;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x24, 4));
	mov(mv, x86::mem(ts->ecx + 0x30, 4), ts->eax);

loc_5500AB:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x30, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x28, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_5500BE;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x28, 4));
	mov(mv, x86::mem(ts->ecx + 0x30, 4), ts->edx);

loc_5500BE:
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));
	mov(&ts->ecx, 0x8389E0);
	game::sub_5B6A20(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x1F8, 4));
	mov(&ts->ecx, 0x8392D0);
	game::sub_5B6A20(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1E0, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x1E0, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x1D4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x1B0, 4));
	mov(mv, x86::mem(ts->ecx + 0x2C, 4), ts->edx);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_550105;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x24, 4));
	mov(mv, x86::mem(ts->ecx + 0x30, 4), ts->eax);

loc_550105:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x30, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x28, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_550118;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x28, 4));
	mov(mv, x86::mem(ts->ecx + 0x30, 4), ts->edx);

loc_550118:
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));
	mov(&ts->ecx, 0x8389E0);

loc_550122:
	game::sub_5B5490(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x244, 4));
	mov(&ts->ecx, 0x8392D0);
	game::sub_5B5490(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x22C, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x22C, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x220, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x1FC, 4));
	mov(mv, x86::mem(ts->ecx + 0x2C, 4), ts->edx);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_55015F;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x24, 4));
	mov(mv, x86::mem(ts->ecx + 0x30, 4), ts->eax);

loc_55015F:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x30, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x28, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_550172;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x28, 4));
	mov(mv, x86::mem(ts->ecx + 0x30, 4), ts->edx);

loc_550172:
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x50, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_550183;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_550185;

loc_550183:
	xor_(&ts->eax, ts->eax);

loc_550185:
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_5501A0;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	push(mv, &ts->esp, 0x409);
	game::sub_54E6E0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_5501A0:
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0x2C, 4), 0xED55C635);
	if (!ts->eflags.zero) {
        goto loc_5501C0;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x405);
	game::sub_54E6E0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_5501C0:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x441);
	game::sub_54E6E0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_5501E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ebx, ts->ecx);
	mov(mv, &ts->esi, x86::mem(ts->ebx + 0x4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_55020C;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55020C;
    }
	push(mv, &ts->esp, 0x47FF4E7C);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_550223;
    }

loc_55020C:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_550271;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x47FF4E7C);
	game::sub_52C570(ts, mv);

loc_550223:
	mov(&ts->edi, ts->eax);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_550271;
    }
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x4C, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_550271;
    }

loc_550230:
	push(mv, &ts->esp, 0x790CEC);
	game::sub_505450(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55024D;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_550230;
    }
	goto loc_550271;

loc_55024D:
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_550271;
    }
	cmp(mv, &ts->eflags, ts->esi, x86::mem(ts->edi + 0x54, 4));
	if (ts->eflags.zero) {
        goto loc_55026A;
    }
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->edi + 0x54, 4), ts->esi);
	game::sub_517720(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x54, 4));
	mov(mv, x86::mem(ts->eax + 0x10, 4), 0x0);

loc_55026A:
	mov(mv, x86::mem(ts->esi + 0x10, 4), 0x0);

loc_550271:
	mov(mv, &ts->al, x86::mem(ts->ebp + 0x8, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(&ts->esi, 0x1);
	if (ts->eflags.zero) {
        goto loc_5502B4;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x58, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x48, 4), ts->esi);
	if (!ts->eflags.zero) {
        goto loc_55028A;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4C, 4));
	goto loc_55028C;

loc_55028A:
	xor_(&ts->eax, ts->eax);

loc_55028C:
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x838980);
	game::sub_54FE50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x861E74, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, 0xEB3A688A);
	push(mv, &ts->esp, ts->edx);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x10);

loc_5502B4:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x58, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x48, 4), ts->esi);
	if (!ts->eflags.zero) {
        goto loc_5502C1;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4C, 4));
	goto loc_5502C3;

loc_5502C1:
	xor_(&ts->eax, ts->eax);

loc_5502C3:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x838980);
	game::sub_521340(ts, mv);
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8389D0);
	game::sub_413440(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x8392C0);
	game::sub_4D8EC0(ts, mv);
	add(&ts->esp, 0xC);
	mov(&ts->ecx, ts->ebx);
	game::sub_54FF90(ts, mv);
	mov(&ts->ecx, ts->ebx);
	game::sub_521D90(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x58, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x48, 4));
	pop(mv, &ts->esp, ts->edi);
	cmp(&ts->eflags, ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_55031C;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x838980);
	game::sub_5212D0(ts, mv);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_55031C:
	xor_(&ts->eax, ts->eax);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x838980);
	game::sub_5212D0(ts, mv);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_550330(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(0x83855D, 1));
	sub(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_5503B9;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x6D017BC5);
	push(mv, &ts->esp, ts->eax);
	game::sub_4954E0(ts, mv);
	push(mv, &ts->esp, 0x60);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55039F;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x839BB0, 4));
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_521E30(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_54F190(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_539650(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);

loc_55039F:
	xor_(&ts->eax, ts->eax);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_54F190(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_539650(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);

loc_5503B9:
	mov(mv, &ts->eax, x86::mem(0x839BB4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ebx);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_550442;
    }
	lea(mv, &ts->edi, x86::mem(ts->eax + 0x18, 4));

loc_5503D4:
	cmp(&ts->eflags, ts->ebx, 0x4);
	if (!ts->eflags.carry) {
        goto loc_55043B;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->edi, 4), 0x0);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_550430;
    }
	push(mv, &ts->esp, 0x60);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55041C;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->edi, 4), 0x1);
	setnbe(ts->eflags, &ts->dl);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->edi - 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_521E30(ts, mv);
	goto loc_55041E;

loc_55041C:
	xor_(&ts->eax, ts->eax);

loc_55041E:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_54F190(ts, mv);
	inc(mv, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));

loc_550430:
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	inc(&ts->ebx);
	add(&ts->edi, 0x5C);
	cmp(&ts->eflags, ts->ebx, ts->ecx);
	if (ts->eflags.carry) {
        goto loc_5503D4;
    }

loc_55043B:
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0xC, 4), 0x2);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_5504BF;
    }

loc_550442:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_550466;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_550466;
    }
	push(mv, &ts->esp, 0x6D017BC5);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_550481;
    }

loc_550466:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5504BF;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x6D017BC5);
	game::sub_52C570(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5504BF;
    }

loc_550481:
	mov(mv, &ts->ecx, x86::mem(0x8384D4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_550491;
    }
	test(mv, &ts->eflags, x86::mem(ts->eax + 0x1C, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_550498;
    }

loc_550491:
	or_(mv, x86::mem(ts->eax + 0x1C, 4), 0x400001);

loc_550498:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x18, 4), 0x5);
	if (!ts->eflags.zero) {
        goto loc_5504BF;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x64, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x60, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_5504BF;
    }
	mov(&ts->edi, ts->eax);
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_5504B0:
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edx + 0x4, 4));
	add(&ts->esp, 0x4);
	dec(&ts->edi);
	if (!ts->eflags.zero) {
        goto loc_5504B0;
    }

loc_5504BF:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_539650(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_5504D0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x838560, 4));
	dec(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0x3);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_5504E2;
    }
	jmp(x86::mem(0x55056C, 4));

loc_5504E9:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x3A9CCF4E);
	push(mv, &ts->esp, 0xDC0EBA9C);
	push(mv, &ts->esp, ts->eax);
	game::sub_495460(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x20, 4));
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_54E6E0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_550514:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDED7CA79);
	push(mv, &ts->esp, 0xDC0EBA9C);
	push(mv, &ts->esp, ts->eax);
	game::sub_495460(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x20, 4));
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_54E6E0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_55053F:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x6A0B254C);
	push(mv, &ts->esp, 0xDC0EBA9C);
	push(mv, &ts->esp, ts->eax);
	game::sub_495460(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	push(mv, &ts->esp, 0x409);
	game::sub_54E6E0(ts, mv);

def_5504E2:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_550580(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	sub(&ts->esp, 0x60);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0xC, 4));
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->edi);
	mov(mv, &ts->ecx, x86::mem(0x83A540, 4));
	push(mv, &ts->esp, ts->edi);
	game::sub_59B080(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5505B2;
    }
	mov(mv, &ts->ecx, x86::mem(0x83A540, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	game::sub_5B0BD0(ts, mv);
	goto loc_5505B8;

loc_5505B2:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));

loc_5505B8:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(0x83A540, 4));
	push(mv, &ts->esp, ts->edi);
	game::sub_59B080(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5505ED;
    }
	mov(mv, &ts->ecx, x86::mem(0x83A540, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	game::sub_5B0C00(ts, mv);
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (ts->eflags.parity) {
        goto loc_5505F3;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));

loc_5505ED:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));

loc_5505F3:
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x8, 4));
	game::__ftol2(ts, mv);
	mov(&ts->ecx, ts->eax);
	mov(&ts->eax, 0x51EB851F);
	imul(&ts->eax, ts->ecx);
	sar(&ts->edx, 0x4);
	mov(&ts->eax, ts->edx);
	shr(&ts->eax, 0x1F);
	add(&ts->edx, ts->eax);
	mov(mv, x86::mem(ts->ebp + 0xC, 4), ts->edx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x785B80, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_550634;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));

loc_550634:
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x8, 4));
	game::__ftol2(ts, mv);
	mov(&ts->ecx, ts->eax);
	mov(&ts->eax, 0x51EB851F);
	imul(&ts->eax, ts->ecx);
	sar(&ts->edx, 0x4);
	mov(&ts->ecx, ts->edx);
	shr(&ts->ecx, 0x1F);
	lea(mv, &ts->edx, x86::mem(ts->edx + (ts->ecx) + 0x1, 4));
	mov(mv, x86::mem(ts->ebp + 0xC, 4), ts->edx);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x785B80, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x799380, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x14, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x799384, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x18, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x14, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787ADC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_549FD0(ts, mv);
	xor_(&ts->edi, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	goto loc_5506A0;

loc_5506A0:
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(0x83A540, 4));
	push(mv, &ts->esp, ts->ebx);
	game::sub_59B080(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5506DF;
    }
	cmp(&ts->eflags, ts->edi, 0xFFFFFFFF);
	mov(mv, &ts->ecx, x86::mem(0x83A540, 4));
	push(mv, &ts->esp, 0x1);
	if (ts->eflags.zero) {
        goto loc_5506C3;
    }
	push(mv, &ts->esp, ts->edi);
	goto loc_5506C5;

loc_5506C3:
	push(mv, &ts->esp, 0x0);

loc_5506C5:
	push(mv, &ts->esp, ts->ebx);
	game::sub_5B2BD0(ts, mv);
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_5506DD;
    }
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x18, 4));
	goto loc_5506E6;

loc_5506DD:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));

loc_5506DF:
	mov(mv, x86::mem(ts->ebp + 0x18, 4), 0x3F800000);

loc_5506E6:
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(0x83A540, 4));
	push(mv, &ts->esp, ts->ebx);
	game::sub_59B080(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_55071F;
    }
	cmp(&ts->eflags, ts->edi, 0xFFFFFFFF);
	mov(mv, &ts->ecx, x86::mem(0x83A540, 4));
	push(mv, &ts->esp, 0x1);
	if (ts->eflags.zero) {
        goto loc_550712;
    }
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	game::sub_5B2BA0(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0xC, 4));
	goto loc_550726;

loc_550712:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ebx);
	game::sub_5B2BA0(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0xC, 4));
	goto loc_550726;

loc_55071F:
	mov(mv, x86::mem(ts->ebp + 0xC, 4), 0x0);

loc_550726:
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(0x83A540, 4));
	push(mv, &ts->esp, ts->ebx);
	game::sub_59B080(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_55075F;
    }
	cmp(&ts->eflags, ts->edi, 0xFFFFFFFF);
	mov(mv, &ts->ecx, x86::mem(0x83A540, 4));
	push(mv, &ts->esp, 0x1);
	if (ts->eflags.zero) {
        goto loc_550752;
    }
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	game::sub_5B3E40(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x14, 4));
	goto loc_550766;

loc_550752:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ebx);
	game::sub_5B3E40(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x14, 4));
	goto loc_550766;

loc_55075F:
	mov(mv, x86::mem(ts->ebp + 0x14, 4), 0x0);

loc_550766:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x18, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x10, 4));
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, 0x9);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5506A0;
    }
	xor_(&ts->edx, ts->edx);
	mov(mv, x86::mem(ts->ebp - 0x20, 4), ts->edx);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x1C, 4), ts->edx);
	mov(mv, x86::mem(ts->ebp - 0x10, 4), ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x18, 4), ts->edx);
	mov(mv, x86::mem(ts->ebp - 0xC, 4), ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x14, 4), ts->edx);
	mov(mv, x86::mem(ts->ebp - 0x8, 4), ts->eax);
	mov(&ts->edx, 0x38D548D2);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), ts->eax);
	game::sub_4FF9D0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_5507BC;
    }
	mov(&ts->edx, 0xC01A6F63);
	game::sub_4FF9D0(ts, mv);

loc_5507BC:
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DBD0(ts, mv);
	mov(mv, &ts->al, x86::mem(0x83AA1A, 1));
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->al, 0x1);
	mov(&ts->edx, 0x5B81D613);
	if (ts->eflags.zero) {
        goto loc_5507DC;
    }
	mov(&ts->edx, 0xACB8DFF3);

loc_5507DC:
	game::sub_4FF9D0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_5507EF;
    }
	mov(&ts->edx, 0xC01A6F63);
	game::sub_4FF9D0(ts, mv);

loc_5507EF:
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_43DBD0(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->ebp - 0x60, 4));
	push(mv, &ts->esp, 0x40);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	lea(mv, &ts->eax, x86::mem(ts->ebp - 0x60, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, 0xCB9A2C64);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x28);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x14);
}

void sub_550840(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	sub(&ts->esp, 0xC0);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xC, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(0x83A540, 4));
	push(mv, &ts->esp, 0x10);
	game::sub_59B080(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	mov(&ts->edi, 0x1);
	if (ts->eflags.zero) {
        goto loc_55087C;
    }
	mov(mv, &ts->ecx, x86::mem(0x83A540, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x10);
	game::sub_5B0BD0(ts, mv);
	goto loc_550882;

loc_55087C:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));

loc_550882:
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(0x83A540, 4));
	push(mv, &ts->esp, 0x10);
	game::sub_59B080(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5508B5;
    }
	mov(mv, &ts->ecx, x86::mem(0x83A540, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x10);
	game::sub_5B0C00(ts, mv);
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (ts->eflags.parity) {
        goto loc_5508BB;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));

loc_5508B5:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));

loc_5508BB:
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(0x83A540, 4));
	push(mv, &ts->esp, ts->ebx);
	game::sub_59B080(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5508EF;
    }
	mov(mv, &ts->ecx, x86::mem(0x83A540, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ebx);
	game::sub_5B0C00(ts, mv);
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (ts->eflags.parity) {
        goto loc_5508F5;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));

loc_5508EF:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));

loc_5508F5:
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x78, 4));
	mov(mv, &ts->ecx, x86::mem(0x83A540, 4));
	push(mv, &ts->esp, 0x10);
	game::sub_59B080(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_550928;
    }
	mov(mv, &ts->ecx, x86::mem(0x83A540, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x10);
	game::sub_5B0C00(ts, mv);
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (ts->eflags.parity) {
        goto loc_55092E;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));

loc_550928:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));

loc_55092E:
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x84, 4));
	mov(mv, &ts->ecx, x86::mem(0x83A540, 4));
	push(mv, &ts->esp, 0x10);
	game::sub_59B080(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_550957;
    }
	mov(mv, &ts->ecx, x86::mem(0x83A540, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x10);
	game::sub_5B3E40(ts, mv);
	goto loc_55095D;

loc_550957:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));

loc_55095D:
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x74, 4));
	mov(mv, &ts->ecx, x86::mem(0x83A540, 4));
	push(mv, &ts->esp, ts->ebx);
	game::sub_59B080(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_550984;
    }
	mov(mv, &ts->ecx, x86::mem(0x83A540, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ebx);
	game::sub_5B3E40(ts, mv);
	goto loc_55098A;

loc_550984:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));

loc_55098A:
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x70, 4));
	mov(mv, &ts->ecx, x86::mem(0x83A540, 4));
	push(mv, &ts->esp, ts->ebx);
	game::sub_59B080(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5509B1;
    }
	mov(mv, &ts->ecx, x86::mem(0x83A540, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ebx);
	game::sub_5B2BA0(ts, mv);
	goto loc_5509B7;

loc_5509B1:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));

loc_5509B7:
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x80, 4));
	mov(mv, &ts->ecx, x86::mem(0x83A540, 4));
	push(mv, &ts->esp, 0x10);
	game::sub_59B080(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5509E0;
    }
	mov(mv, &ts->ecx, x86::mem(0x83A540, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x10);
	game::sub_5B2BA0(ts, mv);
	goto loc_5509E6;

loc_5509E0:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));

loc_5509E6:
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x8C, 4));
	mov(mv, &ts->ecx, x86::mem(0x83A540, 4));
	push(mv, &ts->esp, 0x10);
	game::sub_59B080(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_550A1C;
    }
	mov(mv, &ts->ecx, x86::mem(0x83A540, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x10);
	game::sub_5B2BD0(ts, mv);
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (ts->eflags.parity) {
        goto loc_550A22;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));

loc_550A1C:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));

loc_550A22:
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x88, 4));
	mov(mv, &ts->ecx, x86::mem(0x83A540, 4));
	push(mv, &ts->esp, ts->ebx);
	game::sub_59B080(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_550A59;
    }
	mov(mv, &ts->ecx, x86::mem(0x83A540, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ebx);
	game::sub_5B2BD0(ts, mv);
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (ts->eflags.parity) {
        goto loc_550A5F;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));

loc_550A59:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));

loc_550A5F:
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x7C, 4));
	mov(&ts->ecx, 0x3F800000);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x78, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (ts->eflags.parity) {
        goto loc_550A7A;
    }
	mov(mv, x86::mem(ts->esi + 0x78, 4), ts->ecx);

loc_550A7A:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x84, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (ts->eflags.parity) {
        goto loc_550A93;
    }
	mov(mv, x86::mem(ts->esi + 0x84, 4), ts->ecx);

loc_550A93:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79939C, 4));
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x8, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x14, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x14, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7993A0, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x18, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0xC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	game::sub_54A260(ts, mv);
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_550AE5;
    }
	push(mv, &ts->esp, ts->ebx);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_550AE5;
    }
	push(mv, &ts->esp, 0x11495CD6);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_550B00;
    }

loc_550AE5:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_550B05;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x11495CD6);
	game::sub_52C570(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_550B05;
    }

loc_550B00:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x18, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_550B07;
    }

loc_550B05:
	xor_(&ts->eax, ts->eax);

loc_550B07:
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x90, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_550B2E;
    }
	push(mv, &ts->esp, ts->ebx);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_550B2E;
    }
	push(mv, &ts->esp, 0x9C90D375);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_550B49;
    }

loc_550B2E:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_550B4E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x9C90D375);
	game::sub_52C570(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_550B4E;
    }

loc_550B49:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x18, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_550B50;
    }

loc_550B4E:
	xor_(&ts->eax, ts->eax);

loc_550B50:
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x94, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_550B77;
    }
	push(mv, &ts->esp, ts->ebx);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_550B77;
    }
	push(mv, &ts->esp, 0x1183698);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_550B92;
    }

loc_550B77:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_550B97;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x1183698);
	game::sub_52C570(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_550B97;
    }

loc_550B92:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x18, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_550B99;
    }

loc_550B97:
	xor_(&ts->eax, ts->eax);

loc_550B99:
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x98, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_550BC0;
    }
	push(mv, &ts->esp, ts->ebx);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_550BC0;
    }
	push(mv, &ts->esp, 0xD35A7923);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_550BDB;
    }

loc_550BC0:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_550BE0;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0xD35A7923);
	game::sub_52C570(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_550BE0;
    }

loc_550BDB:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x18, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_550BE2;
    }

loc_550BE0:
	xor_(&ts->eax, ts->eax);

loc_550BE2:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x88, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x74, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x9C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x50, 4));
	mov(mv, &ts->ecx, x86::mem(0x83A540, 4));
	push(mv, &ts->esp, 0x10);
	mov(mv, x86::mem(ts->ebp + 0xC, 4), ts->edx);
	game::sub_59B080(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_550C2D;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(0x83A540, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x10);
	push(mv, &ts->esp, ts->eax);
	game::sub_5B4670(ts, mv);

loc_550C2D:
	mov(mv, &ts->ecx, x86::mem(0x83A540, 4));
	push(mv, &ts->esp, 0x10);
	game::sub_59B080(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_550C50;
    }
	mov(mv, &ts->ecx, x86::mem(0x83A540, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x10);
	game::sub_5B3E40(ts, mv);
	goto loc_550C56;

loc_550C50:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));

loc_550C56:
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x74, 4));
	mov(mv, &ts->ecx, x86::mem(0x83A540, 4));
	push(mv, &ts->esp, 0x11);
	game::sub_59B080(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_550C7C;
    }
	mov(mv, &ts->ecx, x86::mem(0x83A540, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x11);
	game::sub_5B3E40(ts, mv);
	goto loc_550C82;

loc_550C7C:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));

loc_550C82:
	test(&ts->eflags, ts->ebx, ts->ebx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x70, 4));
	if (ts->eflags.zero) {
        goto loc_550CA6;
    }
	push(mv, &ts->esp, ts->ebx);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_550CA6;
    }
	push(mv, &ts->esp, 0xD1CDA594);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_550CC1;
    }

loc_550CA6:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_550CC6;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0xD1CDA594);
	game::sub_52C570(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_550CC6;
    }

loc_550CC1:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x18, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_550CC8;
    }

loc_550CC6:
	xor_(&ts->eax, ts->eax);

loc_550CC8:
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xA0, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_550CEF;
    }
	push(mv, &ts->esp, ts->ebx);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_550CEF;
    }
	push(mv, &ts->esp, 0x9345E4A7);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_550D0A;
    }

loc_550CEF:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_550D0F;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x9345E4A7);
	game::sub_52C570(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_550D0F;
    }

loc_550D0A:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x18, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_550D11;
    }

loc_550D0F:
	xor_(&ts->eax, ts->eax);

loc_550D11:
	mov(mv, x86::mem(ts->esi + 0xA4, 4), ts->eax);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x10);
	lea(mv, &ts->edi, x86::mem(ts->ebp - 0x40, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(&ts->ecx, 0x10);
	lea(mv, &ts->edi, x86::mem(ts->ebp - 0x80, 4));
	mov(&ts->edx, 0x38D548D2);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	game::sub_4FF9D0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_550D45;
    }
	mov(&ts->edx, 0xC01A6F63);
	game::sub_4FF9D0(ts, mv);

loc_550D45:
	push(mv, &ts->esp, 0x40);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x40, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DC00(ts, mv);
	mov(mv, &ts->al, x86::mem(0x83AA1A, 1));
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->al, 0x1);
	mov(&ts->edx, 0x5B81D613);
	if (ts->eflags.zero) {
        goto loc_550D67;
    }
	mov(&ts->edx, 0xACB8DFF3);

loc_550D67:
	game::sub_4FF9D0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_550D7A;
    }
	mov(&ts->edx, 0xC01A6F63);
	game::sub_4FF9D0(ts, mv);

loc_550D7A:
	push(mv, &ts->esp, 0x40);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->ebp - 0x80, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_43DC00(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->ebp - 0x80, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x40, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->ebp - 0xC0, 4));
	push(mv, &ts->esp, 0x40);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C960(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->ebp - 0xC0, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, 0xCB9A2C64);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x2C);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x14);
}

void sub_550DD0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x79C724);
	push(mv, &ts->esp, ts->eax);
	game::sub_4954C0(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->ecx, ts->esi);
	game::sub_523F60(ts, mv);
	mov(mv, &ts->al, x86::mem(0x838581, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_550E08;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4C, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->edx + 0x20, 4));
	mov(mv, x86::mem(0x838581, 1), 0x1);
	goto loc_550E2F;

loc_550E08:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50B840(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_550E23;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x10, 4));
	goto loc_550E25;

loc_550E23:
	xor_(&ts->eax, ts->eax);

loc_550E25:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4C, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x20, 4));

loc_550E2F:
	mov(mv, &ts->eax, x86::mem(0x838578, 4));
	dec(&ts->eax);
	neg(&ts->eax);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0x7AC07D2);
	add(&ts->eax, 0x82F20772);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->eax);
	game::sub_54B150(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	jmp(x86::mem(ts->edx + 0x10, 4));
}

void sub_550E60(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x4, 4), 0x72619778);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	if (!ts->eflags.zero) {
        goto loc_550EBE;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x10, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_550E7C;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_550E7E;

loc_550E7C:
	xor_(&ts->eax, ts->eax);

loc_550E7E:
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x24, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_550F08;
    }
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x9E, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_550E9A;
    }
	game::sub_542F50(ts, mv);
	goto loc_550E9F;

loc_550E9A:
	game::sub_542DF0(ts, mv);

loc_550E9F:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	movsx(mv, &ts->eax, x86::mem(ts->eax + 0x838082, 1));
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_550F08;
    }
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	goto sub_458520;

loc_550EBE:
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_550ECA;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_550ECC;

loc_550ECA:
	xor_(&ts->eax, ts->eax);

loc_550ECC:
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x24, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_550F08;
    }
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x9E, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, 0x1);
	if (ts->eflags.zero) {
        goto loc_550EE4;
    }
	game::sub_542F50(ts, mv);
	goto loc_550EE9;

loc_550EE4:
	game::sub_542DF0(ts, mv);

loc_550EE9:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	movsx(mv, &ts->eax, x86::mem(ts->ecx + 0x83809D, 1));
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_550F08;
    }
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	goto sub_458520;

loc_550F08:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_550F10(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x78, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x78, 4));
	lea(mv, &ts->ebp, x86::mem(ts->edi + 0x4C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebp);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	game::sub_51F490(ts, mv);
	dec(&ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	cmp(&ts->eflags, ts->eax, 0x72619778);
	if (!ts->eflags.zero) {
        goto loc_550F5D;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x30, 4));
	movsx(mv, &ts->eax, x86::mem(ts->edx + 0x838082, 1));
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_550F57;
    }
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_458520(ts, mv);

loc_550F57:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xFFFFFFFF);
	goto loc_550F83;

loc_550F5D:
	cmp(&ts->eflags, ts->eax, 0x911C0A4B);
	if (!ts->eflags.zero) {
        goto loc_550F8A;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x30, 4));
	movsx(mv, &ts->eax, x86::mem(ts->eax + 0x83809D, 1));
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_550F7F;
    }
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_458520(ts, mv);

loc_550F7F:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1);

loc_550F83:
	mov(&ts->ecx, ts->ebp);
	game::sub_5432A0(ts, mv);

loc_550F8A:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x5C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero) {
        goto loc_550F98;
    }
	lea(mv, &ts->esi, x86::mem(ts->eax - 0x4, 4));
	goto loc_550F9A;

loc_550F98:
	xor_(&ts->esi, ts->esi);

loc_550F9A:
	mov(&ts->ebx, 0x1);
	nop();

loc_550FA0:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_550FD2;
    }
	add(&ts->eax, 0xFFFFFFFC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_550FD2;
    }
	lea(mv, &ts->ecx, x86::mem(ts->ebx - 0x1, 4));
	add(&ts->eax, 0xC);
	cmp(&ts->eflags, ts->ecx, 0x9);
	push(mv, &ts->esp, ts->ebx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_550FC1;
    }
	push(mv, &ts->esp, 0x79C730);
	goto loc_550FC6;

loc_550FC1:
	push(mv, &ts->esp, 0x7845D4);

loc_550FC6:
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C960(ts, mv);
	add(&ts->esp, 0x10);
	inc(&ts->ebx);

loc_550FD2:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x60, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_550FDE;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_550FE0;

loc_550FDE:
	xor_(&ts->eax, ts->eax);

loc_550FE0:
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_550FF4;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_550FF0;
    }
	lea(mv, &ts->esi, x86::mem(ts->eax - 0x4, 4));
	goto loc_550FA0;

loc_550FF0:
	xor_(&ts->esi, ts->esi);
	goto loc_550FA0;

loc_550FF4:
	mov(mv, &ts->edx, x86::mem(ts->ebp, 4));
	mov(&ts->ecx, ts->ebp);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	mov(mv, &ts->al, x86::mem(ts->ebp + 0x9C, 1));
	test(&ts->eflags, ts->al, ts->al);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_55100F;
    }
	mov(&ts->ecx, ts->ebp);
	game::sub_538490(ts, mv);

loc_55100F:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->edi + 0x78, 4));
	if (ts->eflags.zero) {
        goto loc_551052;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x2C, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79B9DC);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebp);
	game::sub_51F490(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi + (ts->eax*4) + 0x110, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_51CF70(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + (ts->eax*4) + 0x114, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79B9E4);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0x18);

loc_551052:
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->edi);
	game::sub_5316B0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	game::sub_479220(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x4);
}

void sub_551070(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x108, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_551088;
    }
	cmp(&ts->eflags, ts->eax, 0x7FFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_551093;
    }

loc_551088:
	mov(mv, &ts->eax, x86::mem(0x86518C, 4));
	mov(mv, x86::mem(ts->esi + 0x108, 4), ts->eax);

loc_551093:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x118, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5510A4;
    }
	cmp(&ts->eflags, ts->eax, 0x7FFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_5510B0;
    }

loc_5510A4:
	mov(mv, &ts->ecx, x86::mem(0x8651AC, 4));
	mov(mv, x86::mem(ts->esi + 0x118, 4), ts->ecx);

loc_5510B0:
	mov(mv, &ts->ecx, x86::mem(0x86518C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x108, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	mov(mv, x86::mem(ts->esi + 0x108, 4), ts->ecx);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x10C, 4));
	mov(&ts->eax, ts->ecx);
	sub(&ts->eax, ts->edx);
	add(&ts->edi, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x10C, 4), ts->edi);
	mov(mv, &ts->ecx, x86::mem(0x8651AC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x118, 4));
	mov(&ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x118, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	sub(&ts->eax, ts->edx);
	add(&ts->ecx, ts->eax);
	fnstsw(&ts->fp, ts->ax);
	mov(mv, x86::mem(ts->esi + 0x11C, 4), ts->ecx);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_5511D3;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x110, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55111D;
    }
	cmp(&ts->eflags, ts->eax, 0x7FFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_551137;
    }

loc_55111D:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784264, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x110, 4), ts->eax);

loc_551137:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784264, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	game::__ftol2(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x110, 4));
	mov(&ts->ecx, ts->eax);
	sub(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x110, 4), ts->eax);
	add(mv, x86::mem(ts->esi + 0x114, 4), ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, x86::mem(ts->ebp + 0x8, 4), ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_54BD30(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(0x862838, 4), 0x2);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_55117F;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_525650(ts, mv);

loc_55117F:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x28, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5511D3;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0xC, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5511CF;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x18, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_5511CF;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x19, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5511CF;
    }
	movzx(&ts->edi, ts->al);
	mov(mv, &ts->al, x86::mem(ts->edi + (ts->esi) + 0xD, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_5511CF;
    }
	mov(mv, &ts->eax, x86::mem(0x7993B4, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	game::sub_4AE7B0(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0xF);
	lea(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_5111F0(ts, mv);
	movzx(mv, &ts->edx, x86::mem(ts->esi + 0x19, 1));
	mov(mv, x86::mem(ts->edx + (ts->esi) + 0xD, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x19, 1), 0x0);

loc_5511CF:
	mov(mv, x86::mem(ts->esi + 0x28, 1), 0x0);

loc_5511D3:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_5511E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776FE8);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x79C88C);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x50, 4));
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_55123C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x378, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x79C858);
	game::sub_50D510(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x378, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51CDF0(ts, mv);
	add(&ts->esp, 0x18);

loc_55123C:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x4C, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_551255;
    }
	mov(mv, &ts->eax, x86::mem(0x8384D8, 4));
	mov(&ts->ecx, ts->eax);
	push(mv, &ts->esp, 0x1);
	mov(mv, x86::mem(ts->eax + 0x6C, 1), 0x1);
	game::sub_542990(ts, mv);

loc_551255:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->esi, 4), 0x79AC00);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_776FE0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

SEH_569E80:
	mov(&ts->eax, 0x7E3CEC);
	goto ___CxxFrameHandler;
}

void sub_551270(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->edx, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->edx + 0x210, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_551319;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x214, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_551319;
    }
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x208, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x8, 4));
	cmp(&ts->eflags, ts->ebx, 0xD);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->esi, x86::mem(ts->eax + 0x1, 4));
	mov(mv, x86::mem(ts->edx + 0x208, 4), ts->esi);
	pop(mv, &ts->esp, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_5512B8;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5512B2;
    }
	game::sub_54C7F0(ts, mv);

loc_5512B2:
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

loc_5512B8:
	cmp(&ts->eflags, ts->ebx, 0x1B);
	if (!ts->eflags.zero) {
        goto loc_5512C8;
    }
	game::sub_54C8A0(ts, mv);
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

loc_5512C8:
	cmp(&ts->eflags, ts->ebx, 0x8);
	if (!ts->eflags.zero) {
        goto loc_5512EC;
    }
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x200, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_551313;
    }
	dec(&ts->eax);
	mov(mv, x86::mem(ts->edx + 0x200, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + (ts->edx) + 0x100, 1), 0x0);
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

loc_5512EC:
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->edx);
	game::sub_4FF310(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_551313;
    }
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x200, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->edx + 0x20C, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_551313;
    }
	mov(mv, x86::mem(ts->eax + (ts->edx) + 0x100, 1), ts->bl);
	inc(mv, x86::mem(ts->edx + 0x200, 4));

loc_551313:
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

loc_551319:
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_551320(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(&ts->ecx, 0x827E88);
	game::sub_430560(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_551420;
    }
	mov(&ts->ecx, 0x827E88);
	game::sub_430550(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_551420;
    }
	mov(mv, &ts->al, x86::mem(0x838440, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_551362;
    }
	mov(mv, x86::mem(ts->esi + 0x7134, 4), 0xF4240);
	mov(mv, x86::mem(0x838440, 1), 0x0);

loc_551362:
	cmp(mv, &ts->eflags, x86::mem(0x8654A4, 4), 0x6);
	if (!ts->eflags.zero) {
        goto loc_5513E5;
    }
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_5513E5;
    }
	mov(mv, &ts->eax, x86::mem(0x8900AC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x234, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_5513E5;
    }
	mov(mv, &ts->eax, x86::mem(0x89E7B0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_5513E5;
    }
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx, 4), 0x4);
	if (!ts->eflags.zero) {
        goto loc_5513D3;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x713C, 4));
	game::sub_502420(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_5513CE;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865154, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x887C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x8764, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x8764, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_551070(ts, mv);
	goto loc_5513D3;

loc_5513CE:
	game::sub_534290(ts, mv);

loc_5513D3:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8764, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x5D20, 4));
	game::sub_529750(ts, mv);

loc_5513E5:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x713C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5513F4;
    }
	cmp(&ts->eflags, ts->eax, 0x9);
	if (!ts->eflags.zero) {
        goto loc_551415;
    }

loc_5513F4:
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4230, 4));
	game::sub_513DB0(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4210, 4));
	game::sub_514810(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xC00, 4));
	game::sub_5016A0(ts, mv);

loc_551415:
	mov(&ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x4);
	goto loc_5417F0;

loc_551420:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_5417F0:
	mov(mv, &ts->eax, x86::mem(0x838444, 4));
	push(mv, &ts->esp, ts->ebx);
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_54180A;
    }
	game::sub_5291E0(ts, mv);
	mov(mv, x86::mem(0x838444, 4), ts->ebx);

loc_54180A:
	cmp(mv, &ts->eflags, x86::mem(0x838448, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_54181F;
    }
	mov(&ts->ecx, ts->ebp);
	game::sub_541680(ts, mv);
	mov(mv, x86::mem(0x838448, 4), ts->ebx);

loc_54181F:
	cmp(mv, &ts->eflags, x86::mem(0x83844C, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_541928;
    }
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->ebp);
	game::sub_5291E0(ts, mv);
	mov(&ts->ecx, ts->ebp);
	game::sub_541680(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x7AF8, 4));
	imul(&ts->eax, ts->eax, 0x104);
	lea(mv, &ts->esi, x86::mem(ts->eax + (ts->ebp) + 0x72D8, 4));
	mov(&ts->ecx, ts->esi);
	game::sub_500610(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_54191A;
    }
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x4E6E6B28);
	mov(&ts->ecx, ts->esi);
	xor_(&ts->edi, ts->edi);
	game::sub_500670(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_541881;
    }
	nop();

loc_541870:
	push(mv, &ts->esp, 0x4E6E6B28);
	mov(&ts->ecx, ts->esi);
	inc(&ts->edi);
	game::sub_500670(ts, mv);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_541870;
    }

loc_541881:
	push(mv, &ts->esp, 0x4E6E6B28);
	mov(&ts->ecx, ts->esi);
	game::sub_500670(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_43C1C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x7AF8, 4));
	imul(&ts->ecx, ts->ecx, 0x104);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	lea(mv, &ts->edx, x86::mem(ts->ecx + (ts->ebp), 4));
	pop(mv, &ts->esp, ts->edi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5418BE;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x73D8, 4));
	movsx(mv, &ts->esi, x86::mem(ts->ecx + 0x1, 1));
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_5418BE;
    }
	mov(mv, &ts->esi, x86::mem(ts->ecx + (ts->eax*4) + 0x8, 4));
	goto loc_5418C0;

loc_5418BE:
	xor_(&ts->esi, ts->esi);

loc_5418C0:
	cmp(mv, &ts->eflags, x86::mem(ts->edx + 0x73C0, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_54191A;
    }
	mov(mv, &ts->edx, x86::mem(0x842EBC, 4));
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->edx, ts->ebx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_5418FD;
    }
	mov(&ts->ecx, 0x840ED8);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_5418E0:
	cmp(mv, &ts->eflags, x86::mem(ts->ecx, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto loc_5418F1;
    }
	inc(&ts->eax);
	add(&ts->ecx, 0x7F8);
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5418E0;
    }
	goto loc_5418FD;

loc_5418F1:
	imul(&ts->eax, ts->eax, 0x7F8);
	mov(mv, x86::mem(ts->eax + 0x840ED8, 1), ts->bl);

loc_5418FD:
	movsx(mv, &ts->edx, x86::mem(ts->esi + 0xC, 2));
	add(mv, x86::mem(ts->ebp + 0x7134, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x7AF8, 4));
	imul(&ts->eax, ts->eax, 0x104);
	mov(mv, x86::mem(ts->eax + (ts->ebp) + 0x73C0, 4), ts->esi);

loc_54191A:
	mov(&ts->ecx, ts->ebp);
	game::sub_5291E0(ts, mv);
	mov(mv, x86::mem(0x83844C, 4), ts->ebx);
	pop(mv, &ts->esp, ts->esi);

loc_541928:
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_551430(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	sub(&ts->esp, 0x14);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x1599C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_54CCA0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x156A8, 4));
	mov(mv, &ts->eax, x86::mem(0x89E7A0, 4));
	cmp(&ts->eflags, ts->edx, 0x4);
	setz(ts->eflags, &ts->cl);
	movzx(&ts->ebx, ts->cl);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x8, 4), ts->ebx);
	game::sub_5D3E40(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5514A8;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x94, 4));
	test(&ts->eflags, ts->al, 0x1);
	if (ts->eflags.zero) {
        goto loc_551483;
    }
	mov(mv, x86::mem(ts->ebp - 0x4, 4), 0x3);
	goto loc_5514AF;

loc_551483:
	test(&ts->eflags, ts->al, 0x2);
	if (ts->eflags.zero) {
        goto loc_551490;
    }
	mov(mv, x86::mem(ts->ebp - 0x4, 4), 0x1);
	goto loc_5514AF;

loc_551490:
	test(&ts->eflags, ts->al, 0x4);
	if (ts->eflags.zero) {
        goto loc_55149D;
    }
	mov(mv, x86::mem(ts->ebp - 0x4, 4), 0x0);
	goto loc_5514AF;

loc_55149D:
	test(&ts->eflags, ts->al, 0x8);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), 0x2);
	if (!ts->eflags.zero) {
        goto loc_5514AF;
    }

loc_5514A8:
	mov(mv, x86::mem(ts->ebp - 0x4, 4), 0xFFFFFFFF);

loc_5514AF:
	mov(mv, &ts->ecx, x86::mem(0x89E7BC, 4));
	mov(mv, &ts->edx, x86::mem(0x89E7A0, 4));
	mov(mv, &ts->eax, x86::mem(0x89E7A4, 4));
	mov(mv, x86::mem(ts->ebp - 0xC, 4), ts->ecx);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, 0x89E7A0);
	mov(mv, x86::mem(ts->ebp - 0x14, 4), ts->edx);
	mov(mv, x86::mem(ts->ebp - 0x10, 4), ts->eax);
	game::sub_5ED980(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0xCF0, 4));
	xor_(&ts->ecx, ts->ecx);
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_5514FA;
    }
	lea(mv, &ts->ebx, x86::mem(ts->edi + 0x4, 4));

loc_5514E4:
	cmp(mv, &ts->eflags, x86::mem(ts->ebx, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_55156E;
    }
	inc(&ts->ecx);
	add(&ts->ebx, 0x224);
	cmp(&ts->eflags, ts->ecx, ts->edx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5514E4;
    }
	mov(mv, &ts->ebx, x86::mem(ts->ebp - 0x8, 4));

loc_5514FA:
	xor_(&ts->ecx, ts->ecx);

loc_5514FC:
	mov(mv, &ts->edx, x86::mem(ts->ebp - 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x14, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->ebp - 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xA10C, 4));
	game::sub_515990(ts, mv);
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_55154E;
    }
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, 0x89E7A0);
	game::sub_5ED980(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_503320(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp - 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0xC, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x14C58, 4));
	game::sub_515990(ts, mv);

loc_55154E:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x156A8, 4), 0x1);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_551568;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x85AD40);
	game::sub_54CA60(ts, mv);

loc_551568:
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_55156E:
	mov(mv, &ts->ebx, x86::mem(ts->ebp - 0x8, 4));
	imul(&ts->ecx, ts->ecx, 0x224);
	add(&ts->ecx, ts->edi);
	goto loc_5514FC;
}

void sub_551580(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	lea(mv, &ts->edx, x86::mem(ts->edx + (ts->eax) + 0x8, 4));
	add(&ts->eax, 0x8);
	push(mv, &ts->esp, ts->esi);
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), 0x52676B50);
	if (ts->eflags.zero) {
        goto loc_5515C4;
    }

loc_551596:
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (ts->eflags.zero) {
        goto loc_5515BC;
    }
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x4, 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->esi) + 0x8, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), 0x52676B50);
	if (!ts->eflags.zero) {
        goto loc_551596;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edx);
	add(&ts->eax, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_54D1D0(ts, mv);
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_5515BC:
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), 0x52676B50);
	if (!ts->eflags.zero) {
        goto loc_5515D3;
    }

loc_5515C4:
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edx);
	add(&ts->eax, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_54D1D0(ts, mv);

loc_5515D3:
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_5515E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x777BAB);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x20);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x34, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x40, 4));
	add(&ts->eax, ts->edi);
	xor_(&ts->esi, ts->esi);
	xor_(&ts->ebx, ts->ebx);
	xor_(&ts->ebp, ts->ebp);
	cmp(&ts->eflags, ts->edi, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->esi);
	if (!ts->eflags.carry) {
        goto loc_551B5C;
    }
	goto loc_551630;

loc_551630:
	movzx(mv, &ts->eax, x86::mem(ts->edi, 2));
	cmp(&ts->eflags, ts->eax, 0x6653);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_5518AA;
    }
	if (ts->eflags.zero) {
        goto loc_551897;
    }
	cmp(&ts->eflags, ts->eax, 0x6154);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_551731;
    }
	if (ts->eflags.zero) {
        goto loc_55171E;
    }
	sub(&ts->eax, 0x4946);
	if (ts->eflags.zero) {
        goto loc_5516CA;
    }
	sub(&ts->eax, 0xD);
	if (ts->eflags.zero) {
        goto loc_5516B1;
    }
	sub(&ts->eax, 0xCF2);
	if (!ts->eflags.zero) {
        goto loc_551B44;
    }
	movzx(mv, &ts->ecx, x86::mem(ts->edi + 0x2, 2));
	mov(&ts->eax, 0x2AAAAAAB);
	imul(&ts->eax, ts->ecx);
	sar(&ts->edx, 0x1);
	mov(&ts->ecx, ts->edx);
	shr(&ts->ecx, 0x1F);
	add(&ts->edx, ts->ecx);
	mov(&ts->esi, ts->edx);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->ebx + 0x24, 4));
	game::sub_519A10(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x28, 4));
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));

loc_551691:
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x4, 4));
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x8, 4));
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->edx);
	add(&ts->eax, 0xC);
	add(&ts->ecx, 0xC);
	dec(&ts->esi);
	if (!ts->eflags.zero) {
        goto loc_551691;
    }
	xor_(&ts->esi, ts->esi);
	goto loc_551B44;

loc_5516B1:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_5046B0(ts, mv);
	mov(&ts->ebx, ts->eax);
	xor_(&ts->ebp, ts->ebp);
	goto loc_551B44;

loc_5516CA:
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x20, 4));
	inc(&ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebp);
	imul(&ts->ebp, ts->ebp, 0x38);
	add(&ts->ebp, ts->edx);
	mov(mv, &ts->dl, x86::mem(ts->edi + 0x4, 1));
	mov(mv, x86::mem(ts->ebp, 1), ts->dl);
	mov(mv, &ts->al, x86::mem(ts->edi + 0x5, 1));
	mov(mv, x86::mem(ts->ebp + 0x1, 1), ts->al);
	mov(mv, &ts->cl, x86::mem(ts->edi + 0x6, 1));
	mov(mv, x86::mem(ts->ebp + 0x2, 1), ts->cl);
	mov(mv, &ts->dl, x86::mem(ts->edi + 0x7, 1));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x4, 4));
	mov(mv, x86::mem(ts->ebp + 0x3, 1), ts->dl);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x8, 4));
	xor_(&ts->eax, ts->ecx);
	and_(&ts->eax, 0xFFFFFF);
	xor_(&ts->ecx, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->ebp + 0x4, 4), ts->ecx);
	movzx(mv, &ts->ecx, x86::mem(ts->ebp + 0x1, 1));
	shr(&ts->ecx, 0x2);
	mov(mv, x86::mem(ts->ebp + 0x7, 1), ts->al);
	add(&ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	goto loc_551B44;

loc_55171E:
	cmp(&ts->eflags, ts->ebx, ts->esi);
	if (ts->eflags.zero) {
        goto loc_551B44;
    }
	mov(mv, &ts->dl, x86::mem(ts->edi + 0x4, 1));
	mov(mv, x86::mem(ts->ebp + 0x3, 1), ts->dl);
	goto loc_551B44;

loc_551731:
	cmp(&ts->eflags, ts->eax, 0x6254);
	if (ts->eflags.zero) {
        goto loc_551868;
    }
	cmp(&ts->eflags, ts->eax, 0x6353);
	if (ts->eflags.zero) {
        goto loc_55185D;
    }
	cmp(&ts->eflags, ts->eax, 0x644B);
	if (!ts->eflags.zero) {
        goto loc_551B44;
    }
	movzx(mv, &ts->ecx, x86::mem(ts->ebp + 0x1, 1));
	movzx(mv, &ts->eax, x86::mem(ts->edi + 0x2, 2));
	add(&ts->ecx, 0x4);
	xor_(&ts->edx, ts->edx);
	div(&ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ecx);
	shr(&ts->ecx, 0x2);
	dec(&ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x44, 4), ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	mov(mv, x86::mem(ts->esp + 0x40, 4), ts->eax);
	mov(mv, &ts->al, x86::mem(ts->ebp + 0x2C, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_551790;
    }
	mov(mv, x86::mem(ts->ebp + 0x30, 4), ts->esi);
	mov(mv, x86::mem(ts->ebp + 0x34, 4), ts->esi);
	mov(mv, x86::mem(ts->ebp + 0x2C, 1), 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_551790:
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x44, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_5517BF;
    }
	mov(&ts->ecx, 0x839BD0);
	game::sub_53E650(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero) {
        goto loc_5517B9;
    }
	mov(&ts->ecx, 0xABADCAFE);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), 0x79AA34);
	mov(&ts->ecx, ts->eax);
	goto loc_5517C2;

loc_5517B9:
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, ts->eax);
	goto loc_5517C2;

loc_5517BF:
	lea(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));

loc_5517C2:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x40, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->eax);
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->edx, ts->esi);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_5517F8;
    }
	lea(mv, &ts->edx, x86::mem(ts->ecx + 0x10, 4));
	goto loc_5517E0;

loc_5517E0:
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x40, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + (ts->eax*4) + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x20, 4));
	inc(&ts->eax);
	add(&ts->edx, 0x4);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.carry) {
        goto loc_5517E0;
    }
	xor_(&ts->esi, ts->esi);

loc_5517F8:
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x44, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_551835;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x34, 4));
	cmp(&ts->eflags, ts->edx, ts->esi);
	if (ts->eflags.zero) {
        goto loc_55181A;
    }
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x4, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_551812;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ecx);

loc_551812:
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->edx);
	mov(mv, x86::mem(ts->edx + 0x4, 4), ts->ecx);
	goto loc_55182D;

loc_55181A:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x30, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_551827;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ecx);

loc_551827:
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->esi);
	mov(mv, x86::mem(ts->ebp + 0x30, 4), ts->ecx);

loc_55182D:
	cmp(mv, &ts->eflags, x86::mem(ts->ebp + 0x34, 4), ts->edx);
	if (!ts->eflags.zero) {
        goto loc_551835;
    }
	mov(mv, x86::mem(ts->ebp + 0x34, 4), ts->ecx);

loc_551835:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x40, 4));
	add(&ts->eax, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, x86::mem(ts->esp + 0x40, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x44, 4));
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x44, 4), ts->eax);
	if (ts->eflags.carry) {
        goto loc_551790;
    }
	goto loc_551B44;

loc_55185D:
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x4, 4));
	mov(mv, x86::mem(ts->ebx + 0x18, 4), ts->edx);
	goto loc_551B44;

loc_551868:
	movzx(mv, &ts->edx, x86::mem(ts->ebp + 0x1, 1));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	shr(&ts->edx, 0x2);
	cmp(&ts->eflags, ts->edx, ts->esi);
	mov(mv, x86::mem(ts->ebp + 0x14, 4), ts->eax);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_551B44;
    }
	lea(mv, &ts->ecx, x86::mem(ts->ebp + 0x18, 4));
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x8, 4));

loc_551883:
	mov(mv, &ts->esi, x86::mem(ts->eax, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->esi);
	add(&ts->eax, 0x4);
	add(&ts->ecx, 0x4);
	dec(&ts->edx);
	if (!ts->eflags.zero) {
        goto loc_551883;
    }
	xor_(&ts->esi, ts->esi);
	goto loc_551B44;

loc_551897:
	cmp(&ts->eflags, ts->ebx, ts->esi);
	if (ts->eflags.zero) {
        goto loc_551B44;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	mov(mv, x86::mem(ts->ebx + 0x14, 4), ts->ecx);
	goto loc_551B44;

loc_5518AA:
	cmp(&ts->eflags, ts->eax, 0x6E53);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_551B24;
    }
	if (ts->eflags.zero) {
        goto loc_551AC5;
    }
	cmp(&ts->eflags, ts->eax, 0x6853);
	if (ts->eflags.zero) {
        goto loc_551A6B;
    }
	cmp(&ts->eflags, ts->eax, 0x6954);
	if (ts->eflags.zero) {
        goto loc_5518E3;
    }
	cmp(&ts->eflags, ts->eax, 0x6C53);
	if (!ts->eflags.zero) {
        goto loc_551B44;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x4, 4));
	mov(mv, x86::mem(ts->ebx + 0xC, 4), ts->edx);
	goto loc_551B44;

loc_5518E3:
	cmp(&ts->eflags, ts->ebx, ts->esi);
	if (ts->eflags.zero) {
        goto loc_551B44;
    }
	movzx(mv, &ts->eax, x86::mem(ts->edi + 0x4, 2));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x48, 4), ts->eax);
	game::sub_504A00(ts, mv);
	mov(&ts->ebp, ts->eax);
	cmp(&ts->eflags, ts->ebp, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_551B44;
    }
	mov(mv, &ts->esi, x86::mem(ts->ebx + 0x1C, 4));
	inc(&ts->esi);
	mov(&ts->eax, ts->esi);
	imul(&ts->eax, ts->eax, 0x38);
	add(&ts->eax, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->eax);
	xor_(&ts->ecx, ts->ecx);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x38, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_551946;
    }
	push(mv, &ts->esp, 0x52B960);
	push(mv, &ts->esp, 0x525E80);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->edi, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, 0x38);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	game::sub_75C461(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->edi);
	goto loc_55194A;

loc_551946:
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ecx);

loc_55194A:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x44, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x3C, 4));
	add(&ts->ecx, 0x4134);
	mov(mv, x86::mem(ts->esp + 0x40, 4), 0xFFFFFFFF);
	game::sub_505480(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_5147F0(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x20, 4));
	xor_(&ts->ecx, ts->ecx);
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x20, 4));
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x44, 4), ts->eax);
	inc(&ts->esi);

loc_551993:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5519E3;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	cmp(mv, &ts->eflags, ts->edx, x86::mem(ts->ebx + 0x1C, 4));
	if (!ts->eflags.carry) {
        goto loc_5519E3;
    }
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_5519C0;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x44, 4));
	movsx(mv, &ts->ecx, x86::mem(ts->eax + 0x7, 1));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x1C, 4));
	cdq(&ts->eax, ts->edx);
	and_(&ts->edx, 0x3);
	add(&ts->eax, ts->edx);
	sar(&ts->eax, 0x2);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_5519E3;
    }

loc_5519C0:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x44, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esi - 0x1, 4));
	game::sub_54D350(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x44, 4));
	inc(&ts->ecx);
	add(&ts->eax, 0x38);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x44, 4), ts->eax);
	goto loc_551A17;

loc_5519E3:
	mov(mv, &ts->al, x86::mem(ts->edi + 0x14, 1));
	mov(mv, x86::mem(ts->esi - 0x1, 1), ts->al);
	mov(mv, &ts->cl, x86::mem(ts->edi + 0x18, 1));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x3, 4));
	lea(mv, &ts->ebp, x86::mem(ts->esi - 0x1, 4));
	mov(mv, x86::mem(ts->esi, 1), ts->cl);
	mov(mv, x86::mem(ts->esi + 0x1, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x2, 1), 0x0);
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0xC, 4));
	xor_(&ts->edx, ts->eax);
	and_(&ts->edx, 0xFFFFFF);
	xor_(&ts->eax, ts->edx);
	mov(mv, x86::mem(ts->esi + 0x3, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x1C, 4));
	shr(&ts->eax, 0x2);
	mov(mv, x86::mem(ts->esi + 0x6, 1), ts->al);
	xor_(&ts->edi, ts->edi);

loc_551A17:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x1C, 4));
	inc(&ts->eax);
	add(&ts->esi, 0x38);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->eax);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_551993;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x20, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_551A52;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax - 0x4, 4));
	lea(mv, &ts->esi, x86::mem(ts->eax - 0x4, 4));
	push(mv, &ts->esp, 0x52B960);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x38);
	push(mv, &ts->esp, ts->eax);
	game::_eh_vector_destructor_iterator__void_P_uint_int_void__P__void_P__(ts, mv);
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_551A52:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x1C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x40, 4));
	inc(&ts->eax);
	mov(mv, x86::mem(ts->ebx + 0x20, 4), ts->edx);
	mov(mv, x86::mem(ts->ebx + 0x1C, 4), ts->eax);
	xor_(&ts->esi, ts->esi);
	goto loc_551B44;

loc_551A6B:
	cmp(&ts->eflags, ts->ebx, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_551AA6;
    }
	mov(&ts->ecx, 0x839C30);
	game::sub_54BEB0(ts, mv);
	mov(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x30, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->esi);
	game::sub_511D70(ts, mv);
	mov(&ts->ebx, ts->eax);
	mov(mv, x86::mem(ts->ebx + 0x10, 4), ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->esi);

loc_551AA6:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	mov(mv, x86::mem(ts->ebx + 0x30, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x8, 4));
	mov(mv, x86::mem(ts->ebx + 0xC, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0xC, 4));
	mov(mv, x86::mem(ts->ebx + 0x14, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	game::sub_535210(ts, mv);
	goto loc_551B44;

loc_551AC5:
	mov(&ts->ecx, 0x839C30);
	game::sub_54BEB0(ts, mv);
	mov(&ts->ecx, 0xABADCAFE);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, x86::mem(ts->eax, 4), 0x79AD28);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x30, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->esi);
	mov(mv, &ts->dl, x86::mem(ts->ecx + 0xA, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	mov(&ts->ebx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_551B16;
    }
	lea(mv, &ts->edx, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->eax);
	game::sub_518730(ts, mv);

loc_551B16:
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->esi);
	goto loc_551B44;

loc_551B24:
	cmp(&ts->eflags, ts->eax, 0x6F54);
	if (ts->eflags.zero) {
        goto loc_551B3E;
    }
	cmp(&ts->eflags, ts->eax, 0x7454);
	if (!ts->eflags.zero) {
        goto loc_551B44;
    }
	cmp(&ts->eflags, ts->ebx, ts->esi);
	if (ts->eflags.zero) {
        goto loc_551B44;
    }
	mov(mv, &ts->al, x86::mem(ts->edi + 0x4, 1));
	mov(mv, x86::mem(ts->ebp + 0x2, 1), ts->al);
	goto loc_551B44;

loc_551B3E:
	mov(mv, &ts->cl, x86::mem(ts->edi + 0x4, 1));
	mov(mv, x86::mem(ts->ebp + 0x7, 1), ts->cl);

loc_551B44:
	movzx(mv, &ts->edx, x86::mem(ts->edi + 0x2, 2));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x2C, 4));
	lea(mv, &ts->edi, x86::mem(ts->edi + (ts->edx) + 0x4, 4));
	cmp(&ts->eflags, ts->edi, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x40, 4), ts->edi);
	if (ts->eflags.carry) {
        goto loc_551630;
    }

loc_551B5C:
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->al, x86::mem(ts->edi + 0x18, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_551BAB;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x50, 4));
	add(&ts->eax, 0x44);
	cmp(&ts->eflags, ts->ebx, ts->esi);
	if (ts->eflags.zero) {
        goto loc_551BAB;
    }
	cmp(&ts->eflags, ts->edx, ts->esi);
	if (ts->eflags.zero) {
        goto loc_551B8D;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x4, 4));
	cmp(&ts->eflags, ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->ebx + 0x4, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_551B85;
    }
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->ebx);

loc_551B85:
	mov(mv, x86::mem(ts->ebx + 0x8, 4), ts->edx);
	mov(mv, x86::mem(ts->edx + 0x4, 4), ts->ebx);
	goto loc_551BA0;

loc_551B8D:
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	cmp(&ts->eflags, ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->ebx + 0x4, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_551B9A;
    }
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->ebx);

loc_551B9A:
	mov(mv, x86::mem(ts->ebx + 0x8, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebx);

loc_551BA0:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0xC, 4), ts->edx);
	if (!ts->eflags.zero) {
        goto loc_551BA8;
    }
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ebx);

loc_551BA8:
	inc(mv, x86::mem(ts->eax + 0x4, 4));

loc_551BAB:
	cmp(mv, &ts->eflags, x86::mem(ts->ebx + 0x30, 4), 0x1744B3);
	if (!ts->eflags.zero) {
        goto loc_551BBA;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0xC, 4));
	mov(mv, x86::mem(ts->eax + 0x54, 4), ts->ebx);

loc_551BBA:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x30, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x2C);
	retn(mv, &ts->esp, 0x8);

unknown_libname_63:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	game::j__free(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

SEH_5515E0:
	mov(&ts->eax, 0x7E3028);
	goto ___CxxFrameHandler;
}

void sub_551BE0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x777BD3);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->ecx);
	mov(&ts->eax, 0xABADCAFE);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebp);
	mov(mv, x86::mem(ts->ebp + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->ebp + 0x8, 4), ts->eax);
	xor_(&ts->esi, ts->esi);
	mov(mv, x86::mem(ts->ebp, 4), 0x79AD28);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->esi);
	mov(mv, x86::mem(ts->ebp + 0x24, 4), ts->esi);
	mov(mv, x86::mem(ts->ebp + 0x28, 4), ts->esi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x24, 4));
	mov(mv, x86::mem(ts->ebp + 0x2C, 4), ts->esi);
	mov(mv, x86::mem(ts->ebp + 0x30, 4), ts->esi);
	mov(mv, x86::mem(ts->ebp + 0xC, 4), ts->esi);
	mov(mv, x86::mem(ts->ebp + 0x14, 4), ts->esi);
	mov(mv, x86::mem(ts->ebp + 0x18, 4), ts->esi);
	mov(mv, x86::mem(ts->ebp + 0x1C, 4), ts->esi);
	mov(mv, x86::mem(ts->ebp + 0x20, 4), ts->esi);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x20, 1), 0x1);
	game::sub_518730(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x30, 4));
	mov(mv, x86::mem(ts->ebp + 0x30, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0xC, 4));
	mov(mv, x86::mem(ts->ebp + 0xC, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x10, 4));
	mov(mv, x86::mem(ts->ebp + 0x10, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x14, 4));
	mov(mv, x86::mem(ts->ebp + 0x14, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x1C, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->ebp);
	game::sub_535210(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esp + 0x28, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x1C, 4));
	if (ts->eflags.zero) {
        goto loc_551D7C;
    }
	cmp(&ts->eflags, ts->eax, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->esi);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_551D9D;
    }

loc_551C83:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x20, 4));
	mov(mv, &ts->dl, x86::mem(ts->esi + (ts->eax), 1));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x20, 4));
	mov(mv, x86::mem(ts->esi + (ts->ecx), 1), ts->dl);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x20, 4));
	mov(mv, &ts->dl, x86::mem(ts->eax + (ts->esi) + 0x1, 1));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x20, 4));
	mov(mv, x86::mem(ts->esi + (ts->ecx) + 0x1, 1), ts->dl);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x20, 4));
	mov(mv, &ts->dl, x86::mem(ts->eax + (ts->esi) + 0x2, 1));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x20, 4));
	mov(mv, x86::mem(ts->esi + (ts->ecx) + 0x2, 1), ts->dl);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x20, 4));
	mov(mv, &ts->dl, x86::mem(ts->eax + (ts->esi) + 0x3, 1));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x20, 4));
	mov(mv, x86::mem(ts->esi + (ts->ecx) + 0x3, 1), ts->dl);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x20, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + (ts->esi) + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x20, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esi + (ts->eax) + 0x4, 4));
	shl(&ts->edx, 0x8);
	sar(&ts->edx, 0x8);
	xor_(&ts->edx, ts->ebx);
	lea(mv, &ts->eax, x86::mem(ts->esi + (ts->eax) + 0x4, 4));
	and_(&ts->edx, 0xFFFFFF);
	xor_(&ts->ebx, ts->edx);
	mov(mv, x86::mem(ts->eax, 4), ts->ebx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x20, 4));
	mov(mv, &ts->dl, x86::mem(ts->eax + (ts->esi) + 0x7, 1));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x20, 4));
	mov(mv, x86::mem(ts->esi + (ts->ecx) + 0x7, 1), ts->dl);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x20, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x20, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + (ts->esi) + 0xC, 4));
	mov(mv, x86::mem(ts->esi + (ts->ecx) + 0xC, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax + (ts->esi) + 0x10, 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->esi) + 0x8, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + (ts->ecx) + 0x8, 4));
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x10, 4));
	mov(mv, x86::mem(ts->ecx + 0x10, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x14, 4));
	mov(mv, x86::mem(ts->ecx + 0x14, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x18, 4));
	mov(mv, x86::mem(ts->ecx + 0x18, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x1C, 4));
	mov(mv, x86::mem(ts->ecx + 0x1C, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x20, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x20, 4));
	lea(mv, &ts->eax, x86::mem(ts->ecx + (ts->esi) + 0x28, 4));
	xor_(&ts->ecx, ts->ecx);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->eax);
	lea(mv, &ts->ebx, x86::mem(ts->esi + (ts->edx) + 0x28, 4));
	if (ts->eflags.zero) {
        goto loc_551D59;
    }
	mov(mv, &ts->cl, x86::mem(ts->ebx + 0x4, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_551D50;
    }
	mov(&ts->ecx, ts->ebx);
	game::sub_511D00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));

loc_551D50:
	mov(mv, x86::mem(ts->ebx + 0x8, 4), ts->eax);
	mov(mv, x86::mem(ts->ebx + 0x4, 1), 0x1);
	goto loc_551D63;

loc_551D59:
	mov(mv, x86::mem(ts->ebx + 0x8, 4), ts->ecx);
	mov(mv, x86::mem(ts->ebx + 0xC, 4), ts->ecx);
	mov(mv, x86::mem(ts->ebx + 0x4, 1), 0x0);

loc_551D63:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x1C, 4));
	inc(&ts->eax);
	add(&ts->esi, 0x38);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->eax);
	if (ts->eflags.carry) {
        goto loc_551C83;
    }
	goto loc_551D9D;

loc_551D7C:
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_551D9D;
    }

loc_551D82:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x20, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x20, 4));
	add(&ts->eax, ts->esi);
	push(mv, &ts->esp, ts->eax);
	add(&ts->ecx, ts->esi);
	game::sub_54D350(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x1C, 4));
	inc(&ts->ebx);
	add(&ts->esi, 0x38);
	cmp(&ts->eflags, ts->ebx, ts->eax);
	if (ts->eflags.carry) {
        goto loc_551D82;
    }

loc_551D9D:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ebx, x86::mem(ts->ebp + 0x24, 4));
	mov(&ts->ecx, ts->ebx);
	game::sub_519A10(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebx, 4));
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x28, 4));
	mov(mv, &ts->edi, x86::mem(ts->ebx + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->eax*2), 4));
	shl(&ts->ecx, 0x2);
	mov(&ts->edx, ts->ecx);
	shr(&ts->ecx, 0x2);
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->edx);
	and_(&ts->ecx, 0x3);
	movs(mv, x86::mem(ts->edi, 1), x86::mem(ts->esi, 1));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->eax, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x8);

loc_777BC0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_51AB10;

loc_777BC8:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x24);
	goto loc_4FE8F0;

SEH_551BE0:
	mov(&ts->eax, 0x7E2AE0);
	goto ___CxxFrameHandler;

loc_4FE8F0:
}

void sub_551DE0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	xor_(&ts->ebx, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->ebp, 4), 0x79AC00);
	mov(mv, x86::mem(ts->ebp + 0x34, 4), ts->ebx);
	mov(mv, x86::mem(ts->ebp + 0x38, 4), ts->ebx);
	mov(mv, x86::mem(ts->ebp + 0x3C, 4), ts->ebx);
	mov(mv, x86::mem(ts->ebp + 0x40, 4), ts->ebx);
	mov(mv, x86::mem(ts->ebp + 0x44, 4), ts->ebx);
	mov(mv, x86::mem(ts->ebp + 0x48, 4), ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->eax);
	lea(mv, &ts->edi, x86::mem(ts->ebp + 0x14, 4));
	mov(&ts->ecx, 0x5);
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, x86::mem(ts->ebp + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->ebp + 0x8, 1), ts->bl);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x8, 4));
	mov(mv, x86::mem(ts->ebp + 0x28, 4), ts->edx);
	mov(mv, x86::mem(ts->ebp + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->ebp + 0x10, 1), ts->bl);
	mov(mv, x86::mem(ts->ebp + 0x11, 1), ts->bl);
	mov(mv, x86::mem(ts->ebp + 0x2C, 1), 0x1);
	mov(mv, x86::mem(ts->ebp + 0x30, 4), ts->ebx);
	cmp(mv, &ts->eflags, x86::mem(0x8500D0, 4), 0xC);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_551F43;
    }
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x200);
	mov(&ts->eax, 0x850128);
	if (ts->eflags.zero) {
        goto loc_551E52;
    }
	mov(&ts->eax, 0x8500EC);

loc_551E52:
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, 0xEB406FEC);
	push(mv, &ts->esp, ts->eax);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	add(&ts->esp, 0x10);
	cmp(&ts->eflags, ts->eax, 0x200);
	if (ts->eflags.zero) {
        goto loc_551EDC;
    }
	cmp(&ts->eflags, ts->eax, 0x20);
	if (ts->eflags.zero) {
        goto loc_551EDC;
    }
	cmp(&ts->eflags, ts->eax, 0x100);
	if (ts->eflags.zero) {
        goto loc_551EDC;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, 0x7902A0);
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_551EDC;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, 0x78FCD8);
	push(mv, &ts->esp, ts->edx);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_551EDC;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, 0x78F310);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_551EDC;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, 0x799D4C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(0x838528, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_551EE2;
    }

loc_551EDC:
	mov(mv, x86::mem(0x838528, 1), ts->bl);

loc_551EE2:
	cmp(mv, &ts->eflags, x86::mem(0x838520, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto loc_551F43;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_49FFA0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_551F2D;
    }
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	game::sub_512170(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_551F2D;
    }
	push(mv, &ts->esp, 0x8384E0);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x79C8D8);
	game::sub_50D510(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x8384E0);
	game::sub_43DBD0(ts, mv);
	add(&ts->esp, 0x14);
	goto loc_551F43;

loc_551F2D:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, 0x8384E0);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x79C89C);
	game::sub_50D510(ts, mv);
	add(&ts->esp, 0xC);

loc_551F43:
	cmp(mv, &ts->eflags, x86::mem(ts->ebp + 0x20, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_551F6C;
    }
	push(mv, &ts->esp, 0x790000);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_551F6C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_54E6E0(ts, mv);

loc_551F6C:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->eax, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_551F80(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x777C0E);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x44);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->ebp - 0x10, 4), ts->edi);
	game::sub_551DE0(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x4C, 4));
	xor_(&ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->edi, 4), 0x79C928);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->edi + 0x58, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x5C, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x60, 4), ts->ebx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	mov(mv, x86::mem(ts->edi + 0x64, 4), ts->eax);
	mov(mv, x86::mem(ts->edi + 0x68, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x6C, 1), ts->bl);
	mov(mv, x86::mem(ts->edi + 0x68, 4), ts->ebx);
	mov(mv, x86::mem(ts->ebp - 0x4, 1), 0x1);
	mov(mv, x86::mem(0x8384D8, 4), ts->edi);
	mov(mv, x86::mem(ts->ebp + 0x8, 4), 0x1);
	goto loc_551FF0;

loc_551FEA:
	mov(mv, &ts->edi, x86::mem(ts->ebp - 0x10, 4));
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_551FF0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x79C91C);
	lea(mv, &ts->edx, x86::mem(ts->ebp - 0x50, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->ebp - 0x50, 1));
	mov(mv, &ts->edi, x86::mem(ts->edi + 0x4, 4));
	add(&ts->esp, 0x10);
	or_(&ts->esi, 0xFFFFFFFF);
	cmp(&ts->eflags, ts->al, ts->bl);
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x50, 4));
	if (ts->eflags.zero) {
        goto loc_552031;
    }

loc_552017:
	imul(&ts->esi, ts->esi, 0x21);
	cmp(&ts->eflags, ts->al, 0x61);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_552024;
    }
	cmp(&ts->eflags, ts->al, 0x7A);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_552024;
    }
	add(&ts->al, 0xE0);

loc_552024:
	movzx(&ts->eax, ts->al);
	add(&ts->esi, ts->eax);
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x1, 1));
	inc(&ts->ecx);
	cmp(&ts->eflags, ts->al, ts->bl);
	if (!ts->eflags.zero) {
        goto loc_552017;
    }

loc_552031:
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_552070;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_552070;
    }
	mov(mv, x86::mem(ts->ebp - 0x24, 4), 0x79AAF4);
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x4, 1), 0x2);
	mov(mv, x86::mem(ts->ebp - 0x20, 4), ts->esi);
	mov(mv, x86::mem(ts->ebp - 0x1C, 4), ts->ebx);
	game::sub_504880(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x1C, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->ebp - 0x4, 1), 0x1);
	mov(mv, x86::mem(ts->ebp - 0x24, 4), 0x79AA4C);
	if (!ts->eflags.zero) {
        goto loc_552087;
    }

loc_552070:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_552090;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->esi);
	game::sub_52C570(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_552090;
    }

loc_552087:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x18, 4), 0x2);
	mov(mv, x86::mem(ts->ebp - 0x14, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_552093;
    }

loc_552090:
	mov(mv, x86::mem(ts->ebp - 0x14, 4), ts->ebx);

loc_552093:
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x79C914);
	lea(mv, &ts->eax, x86::mem(ts->ebp - 0x50, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	mov(mv, &ts->al, x86::mem(ts->ebp - 0x50, 1));
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x4, 4));
	add(&ts->esp, 0x10);
	or_(&ts->esi, 0xFFFFFFFF);
	cmp(&ts->eflags, ts->al, ts->bl);
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x50, 4));
	if (ts->eflags.zero) {
        goto loc_5520DA;
    }
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_5520C0:
	imul(&ts->esi, ts->esi, 0x21);
	cmp(&ts->eflags, ts->al, 0x61);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5520CD;
    }
	cmp(&ts->eflags, ts->al, 0x7A);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_5520CD;
    }
	add(&ts->al, 0xE0);

loc_5520CD:
	movzx(&ts->edx, ts->al);
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x1, 1));
	add(&ts->esi, ts->edx);
	inc(&ts->ecx);
	cmp(&ts->eflags, ts->al, ts->bl);
	if (!ts->eflags.zero) {
        goto loc_5520C0;
    }

loc_5520DA:
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_552119;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_552119;
    }
	mov(mv, x86::mem(ts->ebp - 0x30, 4), 0x79AAF4);
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x30, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x4, 1), 0x3);
	mov(mv, x86::mem(ts->ebp - 0x2C, 4), ts->esi);
	mov(mv, x86::mem(ts->ebp - 0x28, 4), ts->ebx);
	game::sub_504880(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x28, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->ebp - 0x4, 1), 0x1);
	mov(mv, x86::mem(ts->ebp - 0x30, 4), 0x79AA4C);
	if (!ts->eflags.zero) {
        goto loc_552130;
    }

loc_552119:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_55213A;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->esi);
	game::sub_52C570(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_55213A;
    }

loc_552130:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x18, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_55213A;
    }
	mov(&ts->edi, ts->eax);
	goto loc_55213C;

loc_55213A:
	xor_(&ts->edi, ts->edi);

loc_55213C:
	push(mv, &ts->esp, 0x120);
	game::j__malloc(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->ebp - 0x18, 4), ts->esi);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	mov(mv, x86::mem(ts->ebp - 0x4, 1), 0x4);
	if (ts->eflags.zero) {
        goto loc_55217E;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebp - 0x14, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi, 4), 0x79B2DC);
	mov(mv, x86::mem(ts->esi + 0xC, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x18, 1), ts->bl);
	game::sub_43DBD0(ts, mv);
	add(&ts->esp, 0x8);
	goto loc_552180;

loc_55217E:
	xor_(&ts->esi, ts->esi);

loc_552180:
	cmp(&ts->eflags, ts->esi, ts->ebx);
	mov(mv, x86::mem(ts->ebp - 0x4, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_55218D;
    }
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	goto loc_55218F;

loc_55218D:
	xor_(&ts->eax, ts->eax);

loc_55218F:
	mov(mv, &ts->edx, x86::mem(ts->ebp - 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x50, 4));
	add(&ts->edx, 0x4C);
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->edx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0x6);
	mov(mv, x86::mem(ts->ebp + 0x8, 4), ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_551FEA;
    }
	mov(mv, &ts->esi, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	game::sub_542990(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_5521CF;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_537E60(ts, mv);
	goto loc_5521EA;

loc_5521CF:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x83A9E0);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, 0xEB406FEC);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x10);

loc_5521EA:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x60, 4), 0xA3E4657B);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_777BE0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

loc_777BE8:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x4C);
	goto sub_4358E0;

loc_777BF3:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x24, 4));
	goto sub_504950;

loc_777BFB:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x30, 4));
	goto sub_504950;

loc_777C03:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	game::j__free(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

SEH_551F80:
	mov(&ts->eax, 0x7E306C);
	goto ___CxxFrameHandler;
}

void sub_552210(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_552230(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	mov(&ts->eax, ts->esi);
	if (ts->eflags.zero) {
        goto loc_552228;
    }
	mov(mv, x86::mem(0x8384DC, 1), 0x0);

loc_552228:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_552230(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776FE8);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x79C928);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	game::sub_4358E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->esi, 4), 0x79AC00);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_776FE0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

SEH_569E80:
	mov(&ts->eax, 0x7E3CEC);
	goto ___CxxFrameHandler;
}

void sub_552280(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x777C32);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	mov(mv, x86::mem(0x8384DC, 1), 0x1);
	mov(mv, x86::mem(ts->esp, 4), ts->ecx);
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_5522BB;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_551F80(ts, mv);

loc_5522BB:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_777C20:
	push(mv, &ts->esp, 0x79C938);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_4FE2A0(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);

SEH_552280:
	mov(&ts->eax, 0x7E3090);
	goto ___CxxFrameHandler;
}

void sub_5522D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x777C54);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x4C);
	game::j__malloc(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->esi, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_552315;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_551DE0(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x79C948);
	mov(&ts->eax, ts->esi);

loc_552315:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_777C40:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79C958);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_5522D0:
	mov(&ts->eax, 0x7E30B4);
	goto ___CxxFrameHandler;
}

void sub_552330(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x777C73);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	game::sub_551DE0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x43F00000);
	push(mv, &ts->esp, 0x79C974);
	push(mv, &ts->esp, 0x79C558);
	push(mv, &ts->esp, 0x79C968);
	push(mv, &ts->esp, 0x7954B0);
	xor_(&ts->ebx, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi, 4), 0x7974D4);
	game::sub_543A90(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x7978FC);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x1C, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x134, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x138, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x13C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x140, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x144, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x148, 4), ts->ebx);
	game::sub_4953C0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x134, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->eax);
	game::sub_4953C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, x86::mem(ts->esi + 0x138, 4), ts->eax);
	add(&ts->esp, 0x10);
	mov(mv, x86::mem(ts->esi + 0x2C, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x14C, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x30, 4), 0x9);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

unknown_libname_64:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

loc_777C68:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x4C);
	goto sub_4CBC20;

SEH_552330:
	mov(&ts->eax, 0x7E30E0);
	goto ___CxxFrameHandler;
}

void sub_552410(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x777C90);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x50);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x60, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->esi);
	game::sub_551DE0(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	xor_(&ts->ebp, ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x68, 4), ts->ebp);
	mov(mv, x86::mem(ts->esi, 4), 0x79C9A8);
	mov(mv, x86::mem(ts->esi + 0x58, 4), ts->ebp);
	mov(mv, x86::mem(ts->esi + 0x5C, 4), ts->ebp);
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->ebp);
	mov(mv, x86::mem(ts->esi + 0x6C, 4), 0x1F);
	mov(mv, x86::mem(ts->esi + 0x70, 4), 0xC);
	mov(mv, x86::mem(ts->esi + 0x74, 2), 0x7BC);
	mov(mv, x86::mem(ts->esi + 0x76, 2), 0x7DF);
	mov(&ts->ecx, 0x79C9A0);
	or_(&ts->edi, 0xFFFFFFFF);
	mov(&ts->al, 0x44);

loc_552478:
	imul(&ts->edi, ts->edi, 0x21);
	cmp(&ts->eflags, ts->al, 0x61);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_552485;
    }
	cmp(&ts->eflags, ts->al, 0x7A);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_552485;
    }
	add(&ts->al, 0xE0);

loc_552485:
	movzx(&ts->edx, ts->al);
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x1, 1));
	add(&ts->edi, ts->edx);
	inc(&ts->ecx);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_552478;
    }
	cmp(&ts->eflags, ts->ebx, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_5524AF;
    }
	push(mv, &ts->esp, ts->ebx);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_5524AF;
    }
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_5524C6;
    }

loc_5524AF:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_5524C4;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	game::sub_52C570(ts, mv);
	goto loc_5524C6;

loc_5524C4:
	xor_(&ts->eax, ts->eax);

loc_5524C6:
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->eax);
	mov(&ts->ecx, 0x79C998);
	or_(&ts->edi, 0xFFFFFFFF);
	mov(&ts->al, 0x44);

loc_5524D6:
	imul(&ts->edi, ts->edi, 0x21);
	cmp(&ts->eflags, ts->al, 0x61);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5524E3;
    }
	cmp(&ts->eflags, ts->al, 0x7A);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_5524E3;
    }
	add(&ts->al, 0xE0);

loc_5524E3:
	movzx(&ts->eax, ts->al);
	add(&ts->edi, ts->eax);
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x1, 1));
	inc(&ts->ecx);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_5524D6;
    }
	cmp(&ts->eflags, ts->ebx, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_55250D;
    }
	push(mv, &ts->esp, ts->ebx);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_55250D;
    }
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_552524;
    }

loc_55250D:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_552522;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	game::sub_52C570(ts, mv);
	goto loc_552524;

loc_552522:
	xor_(&ts->eax, ts->eax);

loc_552524:
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->esi + 0x50, 4), ts->eax);
	mov(&ts->ecx, 0x79C990);
	or_(&ts->edi, 0xFFFFFFFF);
	mov(&ts->al, 0x44);

loc_552534:
	imul(&ts->edi, ts->edi, 0x21);
	cmp(&ts->eflags, ts->al, 0x61);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_552541;
    }
	cmp(&ts->eflags, ts->al, 0x7A);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_552541;
    }
	add(&ts->al, 0xE0);

loc_552541:
	movzx(&ts->edx, ts->al);
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x1, 1));
	add(&ts->edi, ts->edx);
	inc(&ts->ecx);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_552534;
    }
	cmp(&ts->eflags, ts->ebx, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_55256B;
    }
	push(mv, &ts->esp, ts->ebx);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_55256B;
    }
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_552582;
    }

loc_55256B:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_552580;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	game::sub_52C570(ts, mv);
	goto loc_552582;

loc_552580:
	xor_(&ts->eax, ts->eax);

loc_552582:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x50, 4));
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x70, 4));
	cmp(&ts->eflags, ts->eax, ts->ebp);
	mov(mv, x86::mem(ts->esi + 0x68, 4), ts->ebp);
	mov(mv, x86::mem(ts->esi + 0x5C, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x58, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_5525A4;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	goto loc_5525A6;

loc_5525A4:
	xor_(&ts->ecx, ts->ecx);

loc_5525A6:
	cmp(&ts->eflags, ts->ecx, ts->ebp);
	mov(mv, x86::mem(ts->esi + 0x64, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_5525EF;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4C, 4));
	mov(mv, x86::mem(ts->esi + 0x6C, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x50, 4));
	mov(mv, x86::mem(ts->esi + 0x70, 4), ts->edx);
	mov(mv, &ts->ax, x86::mem(ts->ecx + 0x54, 2));
	mov(mv, x86::mem(ts->esi + 0x74, 2), ts->ax);
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->edx + 0x44, 4));
	mov(mv, x86::mem(ts->esi + 0x76, 2), ts->ax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x78FC4C);
	push(mv, &ts->esp, ts->eax);
	game::sub_4953A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x64, 4));
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	add(&ts->esp, 0x8);
	call(ts, mv, x86::mem(ts->eax + 0x40, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0x8);

loc_5525EF:
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x78, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x70, 4), ts->ecx);

loc_5525F8:
	lea(mv, &ts->ebp, x86::mem(ts->eax + 0x1, 4));
	push(mv, &ts->esp, ts->ebp);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, 0x79C97C);
	push(mv, &ts->esp, ts->edx);
	game::sub_4400D0(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esp + 0x2C, 1));
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0xC);
	or_(&ts->edi, 0xFFFFFFFF);
	test(&ts->eflags, ts->al, ts->al);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	if (ts->eflags.zero) {
        goto loc_55263A;
    }

loc_552620:
	imul(&ts->edi, ts->edi, 0x21);
	cmp(&ts->eflags, ts->al, 0x61);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_55262D;
    }
	cmp(&ts->eflags, ts->al, 0x7A);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_55262D;
    }
	add(&ts->al, 0xE0);

loc_55262D:
	movzx(&ts->eax, ts->al);
	add(&ts->edi, ts->eax);
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x1, 1));
	inc(&ts->ecx);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_552620;
    }

loc_55263A:
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_552685;
    }
	push(mv, &ts->esp, ts->ebx);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_552685;
    }
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x79AAF4);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x6C, 1), 0x1);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0x0);
	game::sub_504880(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x68, 1), 0x0);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x79AA4C);
	if (!ts->eflags.zero) {
        goto loc_55269C;
    }

loc_552685:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55269A;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	game::sub_52C570(ts, mv);
	goto loc_55269C;

loc_55269A:
	xor_(&ts->eax, ts->eax);

loc_55269C:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x70, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(&ts->eax, ts->ebp);
	add(&ts->ecx, 0x4);
	cmp(&ts->eflags, ts->eax, 0x6);
	mov(mv, x86::mem(ts->esp + 0x70, 4), ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5525F8;
    }
	push(mv, &ts->esp, 0xFFFFFFFF);
	mov(&ts->ecx, ts->esi);
	game::sub_538D80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x60, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(0x838534, 4), ts->esi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x5C);
	retn(mv, &ts->esp, 0x4);

loc_777C80:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x5C, 4));
	goto sub_510D40;

loc_777C88:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x58, 4));
	goto sub_504950;

SEH_552410:
	mov(&ts->eax, 0x7E310C);
	goto ___CxxFrameHandler;
}

void sub_5526E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_552700(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_5526F8;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_5526F8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_552700(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(0x838534, 4), 0x0);
	mov(mv, x86::mem(ts->ecx, 4), 0x79AC00);
	retn(mv, &ts->esp);
}

void sub_552720(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x777CB4);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x90);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_55276E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_552410(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_55276E:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_777CA0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79C9B8);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_552720:
	mov(&ts->eax, 0x7E3130);
	goto ___CxxFrameHandler;
}

void sub_552780(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x777CD3);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->esi);
	game::sub_551DE0(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	xor_(&ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esi, 4), 0x795CDC);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->edi, 0x1);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x7978E0);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x6C, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x30, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x58, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x5C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x64, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x68, 4), ts->ebx);
	game::sub_542AC0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xC4, 4), 0x797DD4);
	mov(mv, x86::mem(ts->esi + 0xC8, 4), 0x797DC4);
	mov(mv, x86::mem(ts->esi + 0xCC, 4), 0x79CA48);
	mov(mv, x86::mem(ts->esi + 0xD0, 4), 0x79CA38);
	mov(mv, x86::mem(ts->esi + 0xD4, 4), 0x79CA2C);
	mov(mv, x86::mem(ts->esi + 0xD8, 4), 0x79CA1C);
	mov(mv, x86::mem(ts->esi + 0xDC, 4), 0x79CA0C);
	mov(mv, x86::mem(ts->esi + 0xE0, 4), 0x79C9FC);
	mov(mv, x86::mem(ts->esi + 0xE4, 4), 0x79C9EC);
	mov(mv, x86::mem(ts->esi + 0xE8, 4), 0x79C9DC);
	mov(mv, x86::mem(ts->esi + 0xEC, 4), 0x79C9D0);
	mov(mv, x86::mem(ts->esi + 0xF0, 4), 0x79C9C4);
	mov(mv, x86::mem(ts->esi + 0xF4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xF8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xFC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x100, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x104, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x108, 4), ts->ebx);
	mov(&ts->ecx, 0x432F0000);
	mov(mv, x86::mem(ts->esi + 0x10C, 4), ts->ecx);
	mov(&ts->eax, 0x41C00000);
	mov(mv, x86::mem(ts->esi + 0x110, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x114, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x118, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x11C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x120, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x124, 4), 0x40800000);
	mov(mv, x86::mem(ts->esi + 0x128, 4), ts->ebx);
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->esi + 0x12C, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x130, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x134, 4), 0x7);
	mov(mv, x86::mem(ts->esi + 0x138, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x13C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x140, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x144, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x145, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x146, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x147, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x148, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x149, 1), 0x1);
	mov(&ts->ecx, 0x797DA4);
	or_(&ts->edi, 0xFFFFFFFF);
	mov(&ts->al, 0x54);

loc_552924:
	imul(&ts->edi, ts->edi, 0x21);
	cmp(&ts->eflags, ts->al, 0x61);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_552931;
    }
	cmp(&ts->eflags, ts->al, 0x7A);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_552931;
    }
	add(&ts->al, 0xE0);

loc_552931:
	movzx(&ts->eax, ts->al);
	add(&ts->edi, ts->eax);
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x1, 1));
	inc(&ts->ecx);
	cmp(&ts->eflags, ts->al, ts->bl);
	if (!ts->eflags.zero) {
        goto loc_552924;
    }
	cmp(&ts->eflags, ts->ebp, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_55295B;
    }
	push(mv, &ts->esp, ts->ebp);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_55295B;
    }
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_552972;
    }

loc_55295B:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_552970;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	game::sub_52C570(ts, mv);
	goto loc_552972;

loc_552970:
	xor_(&ts->eax, ts->eax);

loc_552972:
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->esi + 0x5C, 4), ts->eax);
	mov(&ts->ecx, 0x797D98);
	or_(&ts->edi, 0xFFFFFFFF);
	mov(&ts->al, 0x44);

loc_552982:
	imul(&ts->edi, ts->edi, 0x21);
	cmp(&ts->eflags, ts->al, 0x61);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_55298F;
    }
	cmp(&ts->eflags, ts->al, 0x7A);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_55298F;
    }
	add(&ts->al, 0xE0);

loc_55298F:
	movzx(&ts->edx, ts->al);
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x1, 1));
	add(&ts->edi, ts->edx);
	inc(&ts->ecx);
	cmp(&ts->eflags, ts->al, ts->bl);
	if (!ts->eflags.zero) {
        goto loc_552982;
    }
	cmp(&ts->eflags, ts->ebp, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5529B9;
    }
	push(mv, &ts->esp, ts->ebp);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5529B9;
    }
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_5529D0;
    }

loc_5529B9:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5529CE;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	game::sub_52C570(ts, mv);
	goto loc_5529D0;

loc_5529CE:
	xor_(&ts->eax, ts->eax);

loc_5529D0:
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->eax);
	mov(&ts->ecx, 0x797D7C);
	or_(&ts->edi, 0xFFFFFFFF);
	mov(&ts->al, 0x44);

loc_5529E0:
	imul(&ts->edi, ts->edi, 0x21);
	cmp(&ts->eflags, ts->al, 0x61);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5529ED;
    }
	cmp(&ts->eflags, ts->al, 0x7A);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_5529ED;
    }
	add(&ts->al, 0xE0);

loc_5529ED:
	movzx(&ts->eax, ts->al);
	add(&ts->edi, ts->eax);
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x1, 1));
	inc(&ts->ecx);
	cmp(&ts->eflags, ts->al, ts->bl);
	if (!ts->eflags.zero) {
        goto loc_5529E0;
    }
	cmp(&ts->eflags, ts->ebp, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_552A17;
    }
	push(mv, &ts->esp, ts->ebp);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_552A17;
    }
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_552A2E;
    }

loc_552A17:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_552A2C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	game::sub_52C570(ts, mv);
	goto loc_552A2E;

loc_552A2C:
	xor_(&ts->eax, ts->eax);

loc_552A2E:
	mov(mv, x86::mem(ts->esi + 0x68, 4), ts->eax);
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x5C, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_552A6C;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x60, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_552A6C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB0, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xB4, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0xC);
	mov(&ts->ecx, ts->esi);
	game::sub_51FF80(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x2C, 1), ts->bl);

loc_552A6C:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

unknown_libname_65:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

loc_777CC8:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x4C);
	goto sub_4358E0;

SEH_552780:
	mov(&ts->eax, 0x7E315C);
	goto ___CxxFrameHandler;
}

void sub_552A90(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776FE8);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	game::sub_551DE0(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->edi + 0x4, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x0);
	mov(mv, x86::mem(ts->edi, 4), 0x78F578);
	mov(&ts->ecx, 0x78FCF8);
	or_(&ts->esi, 0xFFFFFFFF);
	mov(&ts->al, 0x6D);

loc_552AD4:
	imul(&ts->esi, ts->esi, 0x21);
	cmp(&ts->eflags, ts->al, 0x61);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_552AE1;
    }
	cmp(&ts->eflags, ts->al, 0x7A);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_552AE1;
    }
	add(&ts->al, 0xE0);

loc_552AE1:
	movzx(&ts->edx, ts->al);
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x1, 1));
	add(&ts->esi, ts->edx);
	inc(&ts->ecx);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_552AD4;
    }
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_552B0B;
    }
	push(mv, &ts->esp, ts->ebx);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_552B0B;
    }
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_552B22;
    }

loc_552B0B:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_552B20;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	game::sub_52C570(ts, mv);
	goto loc_552B22;

loc_552B20:
	xor_(&ts->eax, ts->eax);

loc_552B22:
	mov(mv, &ts->ebx, x86::mem(ts->edi + 0x4, 4));
	mov(mv, x86::mem(ts->edi + 0x50, 4), ts->eax);
	mov(&ts->ecx, 0x79CA58);
	or_(&ts->esi, 0xFFFFFFFF);
	mov(&ts->al, 0x48);

loc_552B32:
	imul(&ts->esi, ts->esi, 0x21);
	cmp(&ts->eflags, ts->al, 0x61);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_552B3F;
    }
	cmp(&ts->eflags, ts->al, 0x7A);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_552B3F;
    }
	add(&ts->al, 0xE0);

loc_552B3F:
	movzx(&ts->eax, ts->al);
	add(&ts->esi, ts->eax);
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x1, 1));
	inc(&ts->ecx);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_552B32;
    }
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_552B69;
    }
	push(mv, &ts->esp, ts->ebx);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_552B69;
    }
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_552B80;
    }

loc_552B69:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_552B7E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	game::sub_52C570(ts, mv);
	goto loc_552B80;

loc_552B7E:
	xor_(&ts->eax, ts->eax);

loc_552B80:
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->edi + 0x4C, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_552BA7;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_552BA7;
    }
	push(mv, &ts->esp, 0xB8A7C6CC);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_552BC2;
    }

loc_552BA7:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_552BC0;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0xB8A7C6CC);
	game::sub_52C570(ts, mv);
	goto loc_552BC2;

loc_552BC0:
	xor_(&ts->eax, ts->eax);

loc_552BC2:
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->edi + 0x54, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_552BE9;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_552BE9;
    }
	push(mv, &ts->esp, 0xB8A7C6CD);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_552C04;
    }

loc_552BE9:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_552C02;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0xB8A7C6CD);
	game::sub_52C570(ts, mv);
	goto loc_552C04;

loc_552C02:
	xor_(&ts->eax, ts->eax);

loc_552C04:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->edi + 0x58, 4), ts->eax);
	mov(&ts->eax, ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_776FE0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

SEH_569E80:
	mov(&ts->eax, 0x7E3CEC);
	goto ___CxxFrameHandler;
}

void sub_552C20(x86::thread_state* ts, x86::memory_view* mv) {
	game::sub_4A32D0(ts, mv);
	test(&ts->eflags, ts->al, 0x1);
	if (ts->eflags.zero) {
        goto loc_552C2D;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_552C4D;

loc_552C2D:
	test(&ts->eflags, ts->al, 0x2);
	if (ts->eflags.zero) {
        goto loc_552C38;
    }
	mov(&ts->eax, 0x1);
	goto loc_552C4D;

loc_552C38:
	test(&ts->eflags, ts->al, 0x4);
	if (ts->eflags.zero) {
        goto loc_552C43;
    }
	mov(&ts->eax, 0x2);
	goto loc_552C4D;

loc_552C43:
	and_(&ts->al, 0x8);
	neg(&ts->al);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0x4);
	dec(&ts->eax);

loc_552C4D:
	mov(mv, x86::mem(0x83A9D8, 4), ts->eax);
	game::sub_5404A0(ts, mv);
	mov(&ts->ecx, 0x838980);
	game::sub_54FD40(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x851148, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_552C7D;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(0x851148, 4), 0x0);

locret_552C7D:
	retn(mv, &ts->esp);
}

void sub_552C80(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	mov(&ts->ecx, 0x83A9D0);
	game::sub_52A4C0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_552CAD;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x552C20);
	push(mv, &ts->esp, 0x41);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->eax);
	game::sub_4A3100(ts, mv);
	add(&ts->esp, 0x1C);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_552CAD:
	game::sub_5404A0(ts, mv);
	mov(&ts->ecx, 0x838980);
	pop(mv, &ts->esp, ts->ebp);
	goto sub_54FD40;
}

void sub_552CC0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x8, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_552D1B;
    }
	mov(mv, &ts->al, x86::mem(0x838540, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_552D1B;
    }
	mov(mv, &ts->eax, x86::mem(0x851148, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_552D1B;
    }
	mov(mv, &ts->al, x86::mem(0x844AD8, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_552D1B;
    }
	game::sub_5B9680(ts, mv);
	add(&ts->eax, 0xD254);
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(0x851148, 4), ts->eax);
	game::sub_5B9680(ts, mv);
	add(&ts->eax, 0xD254);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(0x851148, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x83A9E0);
	game::sub_52A280(ts, mv);

loc_552D1B:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x10, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(0x83898C, 4), ts->esi);
	mov(mv, x86::mem(0x838982, 1), 0x0);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_552D46;
    }
	cmp(&ts->eflags, ts->edi, 0x2);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_552D46;
    }
	mov(&ts->ecx, ts->edi);
	imul(&ts->ecx, ts->ecx, 0xAB4C);
	add(&ts->ecx, 0x83AD90);
	goto loc_552D48;

loc_552D46:
	xor_(&ts->ecx, ts->ecx);

loc_552D48:
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x540, 4));
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x14, 4));
	xor_(&ts->esi, ts->esi);
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->edx, ts->edx);
	mov(mv, x86::mem(ts->ebp + 0xB, 1), 0x0);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_552D6F;
    }
	lea(mv, &ts->edi, x86::mem(ts->ecx + 0x8, 4));

loc_552D60:
	cmp(mv, &ts->eflags, x86::mem(ts->edi, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_552D81;
    }
	inc(&ts->eax);
	add(&ts->edi, 0x1C);
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_552D60;
    }

loc_552D6C:
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x10, 4));

loc_552D6F:
	push(mv, &ts->esp, ts->ebx);
	game::sub_5035C0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_552D99;
    }
	game::sub_5035C0(ts, mv);
	goto loc_552DB9;

loc_552D81:
	imul(&ts->eax, ts->eax, 0x1C);
	add(&ts->eax, ts->ecx);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_552D6C;
    }
	push(mv, &ts->esp, ts->ebx);
	game::sub_52A710(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x10, 4));
	mov(mv, x86::mem(ts->ebp + 0xB, 1), 0x1);
	goto loc_552DB9;

loc_552D99:
	game::sub_503680(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_552DAA;
    }
	game::sub_503680(ts, mv);
	goto loc_552DB9;

loc_552DAA:
	game::sub_503640(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_552DBB;
    }
	push(mv, &ts->esp, ts->ebx);
	game::sub_503640(ts, mv);

loc_552DB9:
	mov(&ts->esi, ts->eax);

loc_552DBB:
	mov(mv, &ts->cl, x86::mem(ts->ebp + 0xB, 1));
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(0x839BC2, 1), ts->cl);
	push(mv, &ts->esp, 0x8392C0);
	mov(mv, x86::mem(0x8389AC, 4), ts->esi);
	mov(mv, x86::mem(0x8389B0, 4), ts->edi);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(0x8389AC, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x8389D0);
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(0x838980, 1), 0x1);
	game::sub_54F980(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_552E1C;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0xC, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_5377A0(ts, mv);

loc_552E1C:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_552E30(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x14, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x10, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x8392C0);
	mov(mv, x86::mem(0x83898C, 4), ts->eax);
	mov(mv, x86::mem(0x838982, 1), 0x0);
	mov(mv, x86::mem(0x839BC2, 1), 0x0);
	mov(mv, x86::mem(0x8389AC, 4), ts->esi);
	mov(mv, x86::mem(0x8389B0, 4), ts->edi);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(0x8389AC, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x8389D0);
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(0x838980, 1), 0x1);
	game::sub_54F980(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_552EA7;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0xC, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_5377A0(ts, mv);

loc_552EA7:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_552EB0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x777D1F);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	game::sub_551DE0(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esi, 4), 0x79CA68);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x64, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x70, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x7C, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->eax);
	mov(mv, x86::mem(0x838528, 1), ts->cl);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 1), 0x5);
	game::sub_5206D0(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_539FF0(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_53A0B0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_777CE0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

loc_777CE8:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x4C);
	goto sub_4DEF30;

loc_777CF3:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x58);
	goto sub_4DEF30;

loc_777CFE:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x64);
	goto sub_4DEF30;

loc_777D09:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x70);
	goto sub_4DEF30;

loc_777D14:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x7C);
	goto sub_4835C0;

SEH_552EB0:
	mov(&ts->eax, 0x7E31A8);
	goto ___CxxFrameHandler;
}

void sub_552F40(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::std__locale___Locimp____Locimp_void_(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_552F58;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_552F58:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void std__locale___Locimp____Locimp_void_(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x777D64);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edi);
	mov(mv, x86::mem(ts->edi, 4), 0x79CA68);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x7C, 4));
	lea(mv, &ts->esi, x86::mem(ts->edi + 0x7C, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x4);
	if (ts->eflags.zero) {
        goto loc_552FAF;
    }

loc_552F96:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	game::sub_440EF0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_552F96;
    }

loc_552FAF:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x70, 4));
	lea(mv, &ts->esi, x86::mem(ts->edi + 0x70, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x14, 1), 0x3);
	if (ts->eflags.zero) {
        goto loc_552FD9;
    }
	mov(&ts->edi, ts->edi);

loc_552FC0:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	game::j__free(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_552FC0;
    }

loc_552FD9:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x64, 4));
	lea(mv, &ts->esi, x86::mem(ts->edi + 0x64, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x14, 1), 0x2);
	if (ts->eflags.zero) {
        goto loc_553001;
    }

loc_552FE8:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	game::j__free(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_552FE8;
    }

loc_553001:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x58, 4));
	lea(mv, &ts->esi, x86::mem(ts->edi + 0x58, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x14, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_553029;
    }

loc_553010:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	game::j__free(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_553010;
    }

loc_553029:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4C, 4));
	lea(mv, &ts->esi, x86::mem(ts->edi + 0x4C, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x14, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_553051;
    }

loc_553038:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	game::j__free(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_553038;
    }

loc_553051:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->edi, 4), 0x79AC00);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_777D30:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

loc_777D38:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x4C);
	goto sub_4DEF30;

loc_777D43:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x58);
	goto sub_4DEF30;

loc_777D4E:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x64);
	goto sub_4DEF30;

loc_777D59:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x70);
	goto sub_4DEF30;

??1_Locimp@locale@std@@UAE@XZ_12_SEH:
	mov(&ts->eax, 0x7E31EC);
	goto ___CxxFrameHandler;
}

void sub_553070(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x777D78);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	game::sub_552330(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	mov(mv, x86::mem(ts->esi, 4), 0x79CA78);
	game::sub_546520(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_777D70:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto ??1strstreambuf@std@@UAE@XZ_5;

SEH_569610:
	mov(&ts->eax, 0x7E3B38);
	goto ___CxxFrameHandler;
}

void sub_5530C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_5530E0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_5530D8;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_5530D8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_5530E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x79CA78);
	goto ??1strstreambuf@std@@UAE@XZ_5;
}

void sub_5530F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x777D78);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x20, 4));
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->esi);
	game::sub_552330(ts, mv);
	xor_(&ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esi, 4), 0x79CA94);
	mov(mv, x86::mem(ts->esi + 0x150, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x154, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x168, 4), 0x2);
	mov(mv, x86::mem(ts->esi + 0x16C, 4), 0x799C30);
	mov(mv, x86::mem(ts->esi + 0x170, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x171, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x172, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x173, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x174, 1), ts->bl);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	mov(mv, x86::mem(ts->eax + 0xAC, 1), ts->bl);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(0x838528, 1), ts->bl);
	mov(mv, x86::mem(0x7FA1FC, 1), 0x1);
	xor_(&ts->eax, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x158, 4));

loc_553181:
	mov(mv, x86::mem(ts->esi + (ts->eax) + 0x164, 1), ts->bl);
	mov(mv, x86::mem(ts->ecx, 4), ts->ebx);
	inc(&ts->eax);
	add(&ts->ecx, 0x4);
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.carry) {
        goto loc_553181;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_5469F0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x7FA1E0, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5531B9;
    }
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->ebx);

loc_5531B9:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_777D70:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto ??1strstreambuf@std@@UAE@XZ_5;

SEH_569610:
	mov(&ts->eax, 0x7E3B38);
	goto ___CxxFrameHandler;
}

void sub_5531D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_5531F0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_5531E8;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_5531E8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_5531F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x79CA94);
	goto ??1strstreambuf@std@@UAE@XZ_5;
}

void sub_553200(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x777D78);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	game::sub_552330(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi, 4), 0x79CAB0);
	mov(mv, x86::mem(ts->esi + 0x150, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0x151, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0x152, 1), ts->al);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	mov(mv, x86::mem(0x838528, 1), ts->al);
	game::sub_5205B0(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_53ABD0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_777D70:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto ??1strstreambuf@std@@UAE@XZ_5;

SEH_569610:
	mov(&ts->eax, 0x7E3B38);
	goto ___CxxFrameHandler;
}

void sub_553270(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	retn(mv, &ts->esp, 0x14);
}

void sub_553280(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_5532A0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_553298;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_553298:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_5532A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x79CAB0);
	goto ??1strstreambuf@std@@UAE@XZ_5;
}

void sub_5532B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x777D98);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x1C, 4));
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	game::sub_552780(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x79CACC);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0xAC, 1), ts->al);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	mov(mv, x86::mem(0x838528, 1), ts->al);
	game::sub_550330(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_777D90:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto ??1strstreambuf@@UAE@XZ;

SEH_55AC10:
	mov(&ts->eax, 0x7E3844);
	goto ___CxxFrameHandler;
}

void sub_553310(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x777DC3);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->esi);
	game::sub_551DE0(ts, mv);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0x1);
	xor_(&ts->ebx, ts->ebx);
	push(mv, &ts->esp, 0x79CAF0);
	mov(mv, x86::mem(ts->esi, 4), 0x79CAE0);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->ebx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x797F30);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x50, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x34, 4), ts->ebx);
	game::sub_5435D0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F814);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xB4, 4));
	mov(mv, x86::mem(ts->esp + 0x30, 1), 0x1);
	game::sub_542AC0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x10C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x114, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x115, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x116, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x118, 4), ts->ebx);
	mov(mv, &ts->ecx, x86::mem(0x8651AC, 4));
	mov(mv, x86::mem(0x838528, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x797F30);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x110, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x7C, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x80, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0xA4, 4), 0x43480000);
	mov(mv, x86::mem(ts->esi + 0xB0, 4), 0x41A00000);
	game::sub_4953E0(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x11C, 4), ts->eax);
	game::sub_53BA00(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_547F30(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_55340F;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_553411;

loc_55340F:
	xor_(&ts->eax, ts->eax);

loc_553411:
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->edi + 0xC, 4));
	if (!ts->eflags.zero) {
        goto loc_553427;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);
	goto loc_553462;

loc_553427:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x8, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_553431;
    }
	lea(mv, &ts->ebx, x86::mem(ts->eax - 0x4, 4));

loc_553431:
	cmp(mv, &ts->eflags, ts->ebx, x86::mem(ts->edi + 0xC, 4));
	if (!ts->eflags.zero) {
        goto loc_553447;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x100, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);
	goto loc_553462;

loc_553447:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x100, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0x8);

loc_553462:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_777DB0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

loc_777DB8:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x50);
	goto sub_52EA90;

SEH_56BF70:
	mov(&ts->eax, 0x7E3218);
	goto ___CxxFrameHandler;
}

void sub_553480(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_5534A0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_553498;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_553498:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_5534A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776FE8);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x79CAE0);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	game::sub_52EA90(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->esi, 4), 0x79AC00);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_776FE0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

SEH_569E80:
	mov(&ts->eax, 0x7E3CEC);
	goto ___CxxFrameHandler;
}

void sub_5534F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x777D78);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	game::sub_552330(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi, 4), 0x79CAFC);
	mov(mv, x86::mem(ts->esi + 0x150, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x154, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x159, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0x15A, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0x15B, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x15C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x160, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(0x8651AC, 4));
	mov(mv, x86::mem(0x838528, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0x150, 4), ts->ecx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x154, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x7B, 1), 0x1);
	game::sub_548010(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_5480B0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x58, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_50F290(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_777D70:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto ??1strstreambuf@std@@UAE@XZ_5;

SEH_569610:
	mov(&ts->eax, 0x7E3B38);
	goto ___CxxFrameHandler;
}

void sub_5535A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_5535C0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_5535B8;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_5535B8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_5535C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x79CAFC);
	goto ??1strstreambuf@std@@UAE@XZ_5;
}

void sub_5535D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebx, ts->ecx);
	game::sub_50DA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x58, 4));
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x48, 4));
	mov(&ts->ecx, 0x838980);
	game::sub_521580(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_553623;
    }
	mov(&ts->esi, 0x40);

loc_5535F4:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x8392C0);
	game::sub_6102F0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_553616;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x564B8CB6);
	mov(&ts->ecx, ts->eax);
	game::sub_61B500(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x40);
	if (ts->eflags.zero) {
        goto loc_553623;
    }

loc_553616:
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, 0x43);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_5535F4;
    }
	mov(mv, x86::mem(ts->esp + 0xF, 1), 0x0);
	goto loc_553628;

loc_553623:
	mov(mv, x86::mem(ts->esp + 0xF, 1), 0x1);

loc_553628:
	cmp(&ts->eflags, ts->edi, 0x40);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_553641;
    }
	cmp(&ts->eflags, ts->edi, 0x43);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_553641;
    }
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x8392C0);
	game::sub_6102F0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_553652;
    }

loc_553641:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x838980);
	game::sub_521670(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_553654;
    }

loc_553652:
	mov(&ts->al, 0x1);

loc_553654:
	mov(mv, &ts->cl, x86::mem(ts->esp + 0xF, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_5536C0;
    }
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5536C0;
    }
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x838980);
	game::sub_5214D0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_55367E;
    }
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x8392C0);
	game::sub_6102F0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5536AB;
    }

loc_55367E:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x39DD714);
	mov(&ts->ecx, ts->eax);
	game::sub_61B500(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5536AB;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	or_(&ts->edx, 0x800000);
	push(mv, &ts->esp, ts->edx);
	game::sub_54E6E0(ts, mv);
	goto loc_5536DB;

loc_5536AB:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	game::sub_54E6E0(ts, mv);
	goto loc_5536DB;

loc_5536C0:
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x20, 4));
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_54E6E0(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esp + 0xF, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_553737;
    }

loc_5536DB:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x838980);
	game::sub_521670(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_553705;
    }
	cmp(&ts->eflags, ts->edi, 0x40);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_553737;
    }
	cmp(&ts->eflags, ts->edi, 0x43);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_553737;
    }
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x8392C0);
	game::sub_6102F0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_553737;
    }

loc_553705:
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0xD999B6E7);
	push(mv, &ts->esp, ts->ecx);
	game::sub_495520(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0xCF6F0439);
	push(mv, &ts->esp, ts->edx);
	game::sub_495520(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0xABA93D3F);
	push(mv, &ts->esp, ts->eax);
	game::sub_495520(ts, mv);
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_553737:
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0xD999B6E7);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4954E0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0xCF6F0439);
	push(mv, &ts->esp, ts->edx);
	game::sub_4954E0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0xABA93D3F);
	push(mv, &ts->esp, ts->eax);
	game::sub_4954E0(ts, mv);
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_553770(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77785E);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x20, 4));
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->esi);
	game::sub_551DE0(ts, mv);
	push(mv, &ts->esp, 0x4DEF30);
	push(mv, &ts->esp, 0x57BCD0);
	push(mv, &ts->esp, 0x3);
	xor_(&ts->ebx, ts->ebx);
	push(mv, &ts->esp, 0x14);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x64, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi, 4), 0x79BEA0);
	mov(mv, x86::mem(ts->esi + 0x50, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x54, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x58, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->esi + 0x5C, 4), 0x1);
	game::sub_75C461(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xA0, 4), 0x41A80000);
	mov(mv, x86::mem(ts->esi + 0xA4, 4), 0x43020000);
	mov(mv, x86::mem(ts->esi + 0xA8, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0xAC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xB0, 4), ts->ebx);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx + 0xAC, 1), ts->bl);
	mov(mv, x86::mem(0x838528, 1), ts->bl);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x79CB30);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x20, 1), 0x1);
	game::sub_4953E0(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_553842;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_553842;
    }
	push(mv, &ts->esp, 0xD1CDA594);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_55385D;
    }

loc_553842:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_553863;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0xD1CDA594);
	game::sub_52C570(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_553863;
    }

loc_55385D:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x18, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_553865;
    }

loc_553863:
	xor_(&ts->eax, ts->eax);

loc_553865:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	cmp(&ts->eflags, ts->edi, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xAC, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_55388F;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_55388F;
    }
	push(mv, &ts->esp, 0x9345E4A7);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_5538AA;
    }

loc_55388F:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5538B0;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x9345E4A7);
	game::sub_52C570(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5538B0;
    }

loc_5538AA:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x18, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_5538B2;
    }

loc_5538B0:
	xor_(&ts->eax, ts->eax);

loc_5538B2:
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0xB0, 4), ts->eax);
	game::sub_53C560(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FC44);
	push(mv, &ts->esp, 0x79CB18);
	push(mv, &ts->esp, ts->edx);
	game::sub_5426C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x7985A0);
	push(mv, &ts->esp, ts->eax);
	game::sub_4954C0(ts, mv);
	add(&ts->esp, 0x18);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x74, 4));
	mov(&ts->ecx, 0x3);
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_5538F0:
	mov(mv, x86::mem(ts->eax, 4), 0x1);
	add(&ts->eax, 0x14);
	dec(&ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_5538F0;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x50, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x50F640);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ebx);
	inc(&ts->eax);
	push(mv, &ts->esp, 0x2);
	push(mv, &ts->esp, 0x79B6FC);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x50, 4), ts->eax);
	game::sub_57CFB0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	add(&ts->esp, 0x18);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->eax);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_777840:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

loc_777848:
	push(mv, &ts->esp, 0x4DEF30);
	push(mv, &ts->esp, 0x3);
	push(mv, &ts->esp, 0x14);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->eax, 0x64);
	push(mv, &ts->esp, ts->eax);
	game::_eh_vector_destructor_iterator__void_P_uint_int_void__P__void_P__(ts, mv);
	retn(mv, &ts->esp);

SEH_553770:
	mov(&ts->eax, 0x7E3244);
	goto ___CxxFrameHandler;
}

void sub_553940(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x777DE3);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x10, 4), ts->esi);
	game::sub_551DE0(ts, mv);
	xor_(&ts->ebx, ts->ebx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	mov(mv, x86::mem(ts->ebp - 0x4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi, 4), 0x79CB44);
	game::sub_5763E0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8384D8, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->ebp - 0x4, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_5539B5;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x6C, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_5539B5;
    }
	cmp(mv, &ts->eflags, x86::mem(0x8384DC, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_5539B5;
    }
	mov(&ts->edi, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->eax + 0x6C, 1), ts->bl);
	game::sub_542990(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x2BAC0CEE);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4954E0(ts, mv);
	add(&ts->esp, 0x8);

loc_5539B5:
	mov(mv, &ts->eax, x86::mem(0x83A9D8, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_5539C5;
    }
	mov(&ts->edi, 0x1);
	goto loc_5539EB;

loc_5539C5:
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_5539D1;
    }
	mov(&ts->edi, 0x2);
	goto loc_5539EB;

loc_5539D1:
	cmp(&ts->eflags, ts->eax, 0x2);
	if (!ts->eflags.zero) {
        goto loc_5539DD;
    }
	mov(&ts->edi, 0x4);
	goto loc_5539EB;

loc_5539DD:
	xor_(&ts->edx, ts->edx);
	cmp(&ts->eflags, ts->eax, 0x3);
	setnz(ts->eflags, &ts->dl);
	dec(&ts->edx);
	and_(&ts->edx, 0x8);
	mov(&ts->edi, ts->edx);

loc_5539EB:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_553A07;
    }
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->edi);

loc_553A07:
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x50, 1), ts->bl);
	mov(mv, &ts->edi, x86::mem(0x83856C, 4));
	shl(&ts->edi, 0x6);
	add(&ts->edi, 0x8382A0);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x6C6554EE);
	push(mv, &ts->esp, 0x799EF0);
	game::sub_4955C0(ts, mv);
	add(&ts->esp, 0xC);
	game::sub_570A30(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x5);
	if (!ts->eflags.zero) {
        goto loc_553A41;
    }
	cmp(mv, &ts->eflags, x86::mem(0x7F70D0, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_553A67;
    }

loc_553A41:
	game::sub_570A30(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x2);
	if (!ts->eflags.zero) {
        goto loc_553A53;
    }
	cmp(mv, &ts->eflags, x86::mem(0x7F70D0, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_553A67;
    }

loc_553A53:
	game::sub_570A30(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x4);
	if (ts->eflags.zero) {
        goto loc_553A67;
    }
	game::sub_570A30(ts, mv);
	cmp(&ts->eflags, ts->eax, 0xC);
	if (!ts->eflags.zero) {
        goto loc_553A75;
    }

loc_553A67:
	push(mv, &ts->esp, 0x799EF0);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	game::sub_57DAA0(ts, mv);

loc_553A75:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_777DD0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

loc_777DD8:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x54);
	goto sub_579DC0;

SEH_553940:
	mov(&ts->eax, 0x7E3270);
	goto ___CxxFrameHandler;
}

void sub_553A90(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_553AB0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_553AA8;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_553AA8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_553AB0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776FE8);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x79CB44);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	game::sub_579DC0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->esi, 4), 0x79AC00);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_776FE0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

SEH_569E80:
	mov(&ts->eax, 0x7E3CEC);
	goto ___CxxFrameHandler;
}

void sub_553B00(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x777E04);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x4C);
	game::j__malloc(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->esi, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_553B45;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_551DE0(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x79C948);
	mov(&ts->eax, ts->esi);

loc_553B45:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_777DF0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79CB54);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_553B00:
	mov(&ts->eax, 0x7E3294);
	goto ___CxxFrameHandler;
}

void sub_553B60(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776FE8);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	game::sub_551DE0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x79C70C);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x0);
	mov(mv, x86::mem(ts->esi, 4), 0x79CB64);
	game::sub_4954C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	add(&ts->esp, 0x8);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_776FE0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

SEH_569E80:
	mov(&ts->eax, 0x7E3CEC);
	goto ___CxxFrameHandler;
}

void sub_553BC0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_510D40(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_553BD8;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_553BD8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_553BE0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776FE8);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x20, 4));
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->esi);
	game::sub_551DE0(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x79ACE8);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	xor_(&ts->ebx, ts->ebx);
	mov(&ts->ecx, 0x832DAC);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0xAC, 1), ts->bl);
	game::sub_488AE0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), 0x1);
	mov(mv, x86::mem(ts->esi + 0x50, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x51, 1), ts->bl);
	mov(mv, &ts->edi, x86::mem(0x8384D8, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->edi + 0x6C, 1), ts->bl);
	game::sub_542990(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x2BAC0CEE);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4954E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_776FE0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

SEH_569E80:
	mov(&ts->eax, 0x7E3CEC);
	goto ___CxxFrameHandler;
}

void sub_553C70(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x777E2B);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x10);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebx, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ebx);
	game::sub_551DE0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x4, 4));
	mov(&ts->edi, 0x1);
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->ebp, ts->ebp);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x796484);
	push(mv, &ts->esp, 0x797670);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->ebx + 0x4C, 4));
	mov(mv, x86::mem(ts->esp + 0x44, 4), ts->ebp);
	mov(mv, x86::mem(ts->ebx, 4), 0x79CB74);
	game::sub_542CA0(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->ebx + 0x4, 4));
	cmp(&ts->eflags, ts->esi, ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x28, 1), 0x1);
	mov(mv, x86::mem(ts->ebx + 0x108, 1), 0x0);
	mov(mv, x86::mem(ts->ebx + 0x124, 4), 0x4);
	if (ts->eflags.zero) {
        goto loc_553D01;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_553D01;
    }
	push(mv, &ts->esp, 0xCA74A2FA);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_553D1C;
    }

loc_553D01:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_553D22;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0xCA74A2FA);
	game::sub_52C570(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_553D22;
    }

loc_553D1C:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x18, 4), 0x2);
	if (ts->eflags.zero) {
        goto loc_553D24;
    }

loc_553D22:
	xor_(&ts->eax, ts->eax);

loc_553D24:
	mov(mv, &ts->esi, x86::mem(ts->ebx + 0x4, 4));
	cmp(&ts->eflags, ts->esi, ts->ebp);
	mov(mv, x86::mem(ts->ebx + 0x104, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_553D4E;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_553D4E;
    }
	push(mv, &ts->esp, 0x444969FD);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_553D69;
    }

loc_553D4E:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_553D6E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x444969FD);
	game::sub_52C570(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_553D6E;
    }

loc_553D69:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x18, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_553D70;
    }

loc_553D6E:
	xor_(&ts->eax, ts->eax);

loc_553D70:
	mov(mv, &ts->esi, x86::mem(ts->ebx + 0x4, 4));
	cmp(&ts->eflags, ts->esi, ts->ebp);
	mov(mv, x86::mem(ts->ebx + 0xF8, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_553D9A;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_553D9A;
    }
	push(mv, &ts->esp, 0x444969FE);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_553DB5;
    }

loc_553D9A:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_553DBA;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x444969FE);
	game::sub_52C570(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_553DBA;
    }

loc_553DB5:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x18, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_553DBC;
    }

loc_553DBA:
	xor_(&ts->eax, ts->eax);

loc_553DBC:
	mov(mv, &ts->esi, x86::mem(ts->ebx + 0x4, 4));
	cmp(&ts->eflags, ts->esi, ts->ebp);
	mov(mv, x86::mem(ts->ebx + 0xFC, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_553DE6;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_553DE6;
    }
	push(mv, &ts->esp, 0xCF6F0439);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_553E01;
    }

loc_553DE6:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_553E06;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0xCF6F0439);
	game::sub_52C570(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_553E06;
    }

loc_553E01:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x18, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_553E08;
    }

loc_553E06:
	xor_(&ts->eax, ts->eax);

loc_553E08:
	mov(mv, &ts->esi, x86::mem(ts->ebx + 0x4, 4));
	cmp(&ts->eflags, ts->esi, ts->ebp);
	mov(mv, x86::mem(ts->ebx + 0x10C, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_553E32;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_553E32;
    }
	push(mv, &ts->esp, 0xABA93D3F);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_553E4D;
    }

loc_553E32:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_553E52;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0xABA93D3F);
	game::sub_52C570(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_553E52;
    }

loc_553E4D:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x18, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_553E54;
    }

loc_553E52:
	xor_(&ts->eax, ts->eax);

loc_553E54:
	mov(mv, x86::mem(ts->ebx + 0x110, 4), ts->eax);
	cmp(mv, &ts->eflags, x86::mem(ts->ebx + 0x124, 4), ts->ebp);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_5540BF;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	add(&ts->ecx, 0x114);
	mov(&ts->ebx, 0x7BCD6704);
	mov(mv, x86::mem(ts->esp + 0x30, 4), ts->ecx);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_553E80:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->esi, x86::mem(ts->edx + 0x4, 4));
	cmp(&ts->eflags, ts->esi, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_553ED8;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_553ED8;
    }
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x79AAF4);
	lea(mv, &ts->ecx, x86::mem(ts->ebx + 0x4980F77, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x2C, 1), 0x2);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebp);
	game::sub_504880(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	cmp(&ts->eflags, ts->eax, ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x28, 1), 0x1);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x79AA4C);
	if (ts->eflags.zero) {
        goto loc_553ED8;
    }
	mov(&ts->edi, ts->eax);
	goto loc_553EF7;

loc_553ED8:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_553EF5;
    }
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->ebx + 0x4980F77, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	game::sub_52C570(ts, mv);
	mov(&ts->edi, ts->eax);
	goto loc_553EF7;

loc_553EF5:
	xor_(&ts->edi, ts->edi);

loc_553EF7:
	cmp(&ts->eflags, ts->edi, ts->ebp);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x30, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_553F5B;
    }
	mov(&ts->edx, 0x790AC8);
	or_(&ts->ecx, 0xFFFFFFFF);
	mov(&ts->al, 0x73);
	goto loc_553F10;

loc_553F10:
	imul(&ts->ecx, ts->ecx, 0x21);
	cmp(&ts->eflags, ts->al, 0x61);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_553F1D;
    }
	cmp(&ts->eflags, ts->al, 0x7A);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_553F1D;
    }
	add(&ts->al, 0xE0);

loc_553F1D:
	movzx(&ts->eax, ts->al);
	add(&ts->ecx, ts->eax);
	mov(mv, &ts->al, x86::mem(ts->edx + 0x1, 1));
	inc(&ts->edx);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_553F10;
    }
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x4C, 4));
	cmp(&ts->eflags, ts->esi, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_553F5B;
    }

loc_553F31:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x30, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_553F3F;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	cmp(&ts->eflags, ts->esi, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_553F31;
    }
	goto loc_553F5B;

loc_553F3F:
	cmp(&ts->eflags, ts->esi, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_553F5B;
    }
	cmp(mv, &ts->eflags, ts->esi, x86::mem(ts->edi + 0x54, 4));
	if (ts->eflags.zero) {
        goto loc_553F58;
    }
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->edi + 0x54, 4), ts->esi);
	game::sub_517720(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x54, 4));
	mov(mv, x86::mem(ts->ecx + 0x10, 4), ts->ebp);

loc_553F58:
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ebp);

loc_553F5B:
	lea(mv, &ts->edx, x86::mem(ts->ebx - 0x7BCD6704, 4));
	cmp(&ts->eflags, ts->edx, 0x1B);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_55409B;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x4, 4));
	cmp(&ts->eflags, ts->esi, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_553F8E;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_553F8E;
    }
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_553FA1;
    }

loc_553F8E:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_553FFC;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebx);
	game::sub_52C570(ts, mv);

loc_553FA1:
	mov(&ts->edi, ts->eax);
	cmp(&ts->eflags, ts->edi, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_553FFC;
    }
	mov(&ts->edx, 0x78F758);
	or_(&ts->ecx, 0xFFFFFFFF);
	mov(&ts->al, 0x53);

loc_553FB1:
	imul(&ts->ecx, ts->ecx, 0x21);
	cmp(&ts->eflags, ts->al, 0x61);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_553FBE;
    }
	cmp(&ts->eflags, ts->al, 0x7A);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_553FBE;
    }
	add(&ts->al, 0xE0);

loc_553FBE:
	movzx(&ts->eax, ts->al);
	add(&ts->ecx, ts->eax);
	mov(mv, &ts->al, x86::mem(ts->edx + 0x1, 1));
	inc(&ts->edx);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_553FB1;
    }
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x4C, 4));
	cmp(&ts->eflags, ts->esi, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_553FFC;
    }

loc_553FD2:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x30, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_553FE0;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	cmp(&ts->eflags, ts->esi, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_553FD2;
    }
	goto loc_553FFC;

loc_553FE0:
	cmp(&ts->eflags, ts->esi, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_553FFC;
    }
	cmp(mv, &ts->eflags, ts->esi, x86::mem(ts->edi + 0x54, 4));
	if (ts->eflags.zero) {
        goto loc_553FF9;
    }
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->edi + 0x54, 4), ts->esi);
	game::sub_517720(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x54, 4));
	mov(mv, x86::mem(ts->ecx + 0x10, 4), ts->ebp);

loc_553FF9:
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ebp);

loc_553FFC:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->esi, x86::mem(ts->edx + 0x4, 4));
	cmp(&ts->eflags, ts->esi, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_554026;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_554026;
    }
	lea(mv, &ts->ecx, x86::mem(ts->ebx + 0x844FD3, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_55403F;
    }

loc_554026:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_55409B;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->edx, x86::mem(ts->ebx + 0x844FD3, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_52C570(ts, mv);

loc_55403F:
	mov(&ts->edi, ts->eax);
	cmp(&ts->eflags, ts->edi, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_55409B;
    }
	mov(&ts->edx, 0x78F758);
	or_(&ts->ecx, 0xFFFFFFFF);
	mov(&ts->al, 0x53);
	nop();

loc_554050:
	imul(&ts->ecx, ts->ecx, 0x21);
	cmp(&ts->eflags, ts->al, 0x61);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_55405D;
    }
	cmp(&ts->eflags, ts->al, 0x7A);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_55405D;
    }
	add(&ts->al, 0xE0);

loc_55405D:
	movzx(&ts->eax, ts->al);
	add(&ts->ecx, ts->eax);
	mov(mv, &ts->al, x86::mem(ts->edx + 0x1, 1));
	inc(&ts->edx);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_554050;
    }
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x4C, 4));
	cmp(&ts->eflags, ts->esi, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_55409B;
    }

loc_554071:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x30, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_55407F;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	cmp(&ts->eflags, ts->esi, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_554071;
    }
	goto loc_55409B;

loc_55407F:
	cmp(&ts->eflags, ts->esi, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_55409B;
    }
	cmp(mv, &ts->eflags, ts->esi, x86::mem(ts->edi + 0x54, 4));
	if (ts->eflags.zero) {
        goto loc_554098;
    }
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->edi + 0x54, 4), ts->esi);
	game::sub_517720(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x54, 4));
	mov(mv, x86::mem(ts->ecx + 0x10, 4), ts->ebp);

loc_554098:
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ebp);

loc_55409B:
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x30, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x124, 4));
	add(&ts->esi, 0x4);
	inc(&ts->ebx);
	lea(mv, &ts->edx, x86::mem(ts->ebx - 0x7BCD6704, 4));
	cmp(&ts->eflags, ts->edx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x30, 4), ts->esi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_553E80;
    }

loc_5540BF:
	movzx(mv, &ts->eax, x86::mem(0x83AA58, 1));
	sub(&ts->eax, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_5540D8;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_5540D1;
    }
	xor_(&ts->ecx, ts->ecx);
	goto loc_5540DD;

loc_5540D1:
	mov(&ts->ecx, 0xA9C9C8F7);
	goto loc_5540DD;

loc_5540D8:
	mov(&ts->ecx, 0x4CA36B89);

loc_5540DD:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->esi, x86::mem(ts->edx + 0x104, 4));
	cmp(&ts->eflags, ts->esi, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_55412C;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	xor_(&ts->bl, ts->bl);
	test(&ts->eflags, ts->al, 0x2);
	if (ts->eflags.zero) {
        goto loc_5540F6;
    }
	mov(&ts->bl, 0x1);

loc_5540F6:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x60, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_554106;
    }
	or_(&ts->eax, 0x400000);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->ecx);

loc_554106:
	mov(mv, &ts->ecx, x86::mem(0x838478, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_554115;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->esi);
	call(ts, mv, x86::mem(ts->eax, 4));

loc_554115:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1C, 4));
	and_(&ts->edx, 0xFFFFFFFD);
	test(&ts->eflags, ts->bl, ts->bl);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->edx);
	mov(&ts->eax, ts->edx);
	if (ts->eflags.zero) {
        goto loc_55412C;
    }
	or_(&ts->eax, 0x400000);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->eax);

loc_55412C:
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x10, 4));
	mov(&ts->ecx, ts->esi);
	game::sub_54B310(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x1C);
	retn(mv, &ts->esp, 0x4);

loc_777E10:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x1C, 4));
	goto sub_510D40;

loc_777E18:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x1C, 4));
	add(&ts->ecx, 0x4C);
	goto sub_4CBBA0;

loc_777E23:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x18, 4));
	goto sub_504950;

SEH_553C70:
	mov(&ts->eax, 0x7E32C8);
	goto ___CxxFrameHandler;
}

void sub_554150(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_554170(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_554168;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_554168:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_554170(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776FE8);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	game::sub_4CBBA0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->esi, 4), 0x79AC00);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_776FE0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

SEH_569E80:
	mov(&ts->eax, 0x7E3CEC);
	goto ___CxxFrameHandler;
}

void sub_5541C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776FE8);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ebp);
	game::sub_551DE0(ts, mv);
	lea(mv, &ts->edi, x86::mem(ts->ebp + 0x58, 4));
	xor_(&ts->ebx, ts->ebx);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	mov(mv, x86::mem(ts->ebp, 4), 0x79C88C);
	game::sub_4FF250(ts, mv);
	push(mv, &ts->esp, 0x79CB84);
	game::sub_50D510(ts, mv);
	mov(mv, x86::mem(ts->ebp + 0x54, 4), ts->ebx);
	mov(mv, x86::mem(ts->ebp + 0x50, 4), ts->ebx);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x10, 4));
	mov(&ts->ecx, 0xCE);
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));
	add(&ts->esp, 0x4);
	mov(&ts->ecx, ts->ebp);
	game::sub_54C3D0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8384D8, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_554263;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x6C, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_554263;
    }
	cmp(mv, &ts->eflags, x86::mem(0x8384DC, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_554263;
    }
	mov(mv, x86::mem(ts->ebp + 0x4C, 1), 0x1);
	mov(mv, &ts->esi, x86::mem(0x8384D8, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x6C, 1), ts->bl);
	game::sub_542990(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x2BAC0CEE);
	push(mv, &ts->esp, ts->eax);
	game::sub_4954E0(ts, mv);
	add(&ts->esp, 0x8);
	goto loc_554266;

loc_554263:
	mov(mv, x86::mem(ts->ebp + 0x4C, 1), ts->bl);

loc_554266:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->eax, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_776FE0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

SEH_569E80:
	mov(&ts->eax, 0x7E3CEC);
	goto ___CxxFrameHandler;
}

void sub_554280(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_5511E0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_554298;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_554298:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_5542A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x777E54);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x390);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_5542EE;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_5541C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_5542EE:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_777E40:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79CB9C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_5542A0:
	mov(&ts->eax, 0x7E32EC);
	goto ___CxxFrameHandler;
}

void sub_554300(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x777E89);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(&ts->eax, 0xABADCAFE);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->esi);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->eax);
	xor_(&ts->ebp, ts->ebp);
	mov(mv, x86::mem(ts->esi, 4), 0x79B8E0);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ebp);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->ebp);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->ebp);
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->ebp);
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->ebp);
	mov(mv, x86::mem(ts->esi + 0x2C, 4), ts->ebp);
	mov(&ts->eax, 0x79A9EC);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ebp);
	mov(mv, x86::mem(ts->esi + 0x34, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x3C, 4), ts->ebp);
	mov(mv, x86::mem(ts->esi + 0x40, 4), ts->ebp);
	mov(mv, x86::mem(ts->esi + 0x38, 4), ts->ebp);
	mov(mv, x86::mem(ts->esi + 0x44, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->ebp);
	mov(mv, x86::mem(ts->esi + 0x50, 4), ts->ebp);
	mov(mv, x86::mem(ts->esi + 0x48, 4), ts->ebp);
	mov(mv, &ts->eax, x86::mem(0x7F7CF8, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x2C, 4));
	mov(&ts->ecx, ts->eax);
	inc(&ts->eax);
	mov(mv, x86::mem(0x7F7CF8, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->ecx);
	mov(mv, &ts->edi, x86::mem(ts->ebx + 0x30, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x863770);
	mov(mv, x86::mem(ts->esp + 0x28, 1), 0x2);
	game::sub_517520(ts, mv);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x863770);
	mov(mv, x86::mem(ts->esi + 0x2C, 4), ts->ebp);
	game::sub_52ACE0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x30, 4), ts->edi);
	mov(&ts->edx, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x2C, 4), ts->edx);
	mov(&ts->ecx, ts->edi);
	mov(&ts->edi, ts->edx);
	mov(&ts->edx, ts->ecx);
	shr(&ts->ecx, 0x2);
	xor_(&ts->eax, ts->eax);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(&ts->ecx, ts->edx);
	and_(&ts->ecx, 0x3);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x18, 4));
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x1C, 4));
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->ecx);
	mov(mv, &ts->dx, x86::mem(ts->ebx + 0x20, 2));
	mov(mv, x86::mem(ts->esi + 0x20, 2), ts->dx);
	mov(mv, &ts->ax, x86::mem(ts->ebx + 0x22, 2));
	mov(mv, x86::mem(ts->esi + 0x22, 2), ts->ax);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x24, 4));
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x14, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_5176B0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x3C, 4));
	cmp(&ts->eflags, ts->eax, ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_5544C8;
    }
	goto loc_554400;

loc_554400:
	mov(&ts->ecx, 0x8637A0);
	game::sub_54BDF0(ts, mv);
	mov(&ts->edi, ts->eax);
	mov(&ts->eax, 0xABADCAFE);
	mov(mv, x86::mem(ts->edi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->edi + 0x8, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->edi, 4), 0x79AA38);
	mov(mv, x86::mem(ts->edi + 0xC, 4), ts->ebp);
	mov(mv, x86::mem(ts->edi + 0x10, 4), ts->ebp);
	mov(mv, x86::mem(ts->edi + 0x14, 4), ts->ebp);
	mov(mv, &ts->ebx, x86::mem(ts->eax + 0x10, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebx);
	game::sub_52AE00(ts, mv);
	cmp(&ts->eflags, ts->ebx, ts->ebp);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0xC, 4));
	mov(mv, x86::mem(ts->edi + 0xC, 4), ts->edx);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_554473;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	xor_(&ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);

loc_554451:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x14, 4));
	add(&ts->edx, ts->ebx);
	push(mv, &ts->esp, ts->edx);
	add(&ts->ecx, ts->ebx);
	game::sub_52AD80(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	add(&ts->ebx, 0xC);
	dec(&ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_554451;
    }

loc_554473:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x40, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_55448F;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebp);
	mov(mv, x86::mem(ts->edi + 0x4, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_554487;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->edi);

loc_554487:
	mov(mv, x86::mem(ts->edi + 0x8, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edi);
	goto loc_5544A2;

loc_55448F:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x3C, 4));
	cmp(&ts->eflags, ts->eax, ts->ebp);
	mov(mv, x86::mem(ts->edi + 0x4, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_55449C;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->edi);

loc_55449C:
	mov(mv, x86::mem(ts->edi + 0x8, 4), ts->ebp);
	mov(mv, x86::mem(ts->esi + 0x3C, 4), ts->edi);

loc_5544A2:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x40, 4), ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_5544AA;
    }
	mov(mv, x86::mem(ts->esi + 0x40, 4), ts->edi);

loc_5544AA:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x38, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	inc(&ts->edx);
	mov(mv, x86::mem(ts->esi + 0x38, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_554400;
    }
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x2C, 4));

loc_5544C8:
	mov(mv, &ts->edi, x86::mem(ts->ebx + 0x4C, 4));
	cmp(&ts->eflags, ts->edi, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_554552;
    }

loc_5544D3:
	mov(&ts->ecx, 0x839C30);
	game::sub_54BEB0(ts, mv);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), ts->ebp);
	mov(mv, x86::mem(ts->eax + 0x30, 4), ts->ebp);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ebp);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ebp);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->ebp);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->ebp);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x2C, 1), 0x3);
	game::sub_551BE0(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	mov(mv, x86::mem(ts->esp + 0x24, 1), 0x2);
	if (ts->eflags.zero) {
        goto loc_55454B;
    }
	cmp(&ts->eflags, ts->ecx, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_55452D;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x4, 4));
	cmp(&ts->eflags, ts->edx, ts->ebp);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_554525;
    }
	mov(mv, x86::mem(ts->edx + 0x8, 4), ts->eax);

loc_554525:
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	goto loc_554540;

loc_55452D:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4C, 4));
	cmp(&ts->eflags, ts->edx, ts->ebp);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_55453A;
    }
	mov(mv, x86::mem(ts->edx + 0x8, 4), ts->eax);

loc_55453A:
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebp);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->eax);

loc_554540:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x50, 4), ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_554548;
    }
	mov(mv, x86::mem(ts->esi + 0x50, 4), ts->eax);

loc_554548:
	inc(mv, x86::mem(ts->esi + 0x48, 4));

loc_55454B:
	mov(mv, &ts->edi, x86::mem(ts->edi + 0x4, 4));
	cmp(&ts->eflags, ts->edi, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_5544D3;
    }

loc_554552:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_55456C;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x54, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x30, 4));

loc_55455F:
	nop();

loc_554560:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x30, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_55456C;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_554560;
    }

loc_55456C:
	cmp(&ts->eflags, ts->eax, ts->ebp);
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_55457A;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_517720(ts, mv);

loc_55457A:
	mov(mv, &ts->ebx, x86::mem(ts->ebx + 0x4C, 4));
	cmp(&ts->eflags, ts->ebx, ts->ebp);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4C, 4));
	if (ts->eflags.zero) {
        goto loc_5545AE;
    }

loc_554584:
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x18, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_5545A4;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_5545A1;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x30, 4));

loc_554595:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x30, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_5545A1;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_554595;
    }

loc_5545A1:
	mov(mv, x86::mem(ts->edx + 0x18, 4), ts->eax);

loc_5545A4:
	mov(mv, &ts->ebx, x86::mem(ts->ebx + 0x4, 4));
	cmp(&ts->eflags, ts->ebx, ts->ebp);
	mov(mv, &ts->edx, x86::mem(ts->edx + 0x4, 4));
	if (!ts->eflags.zero) {
        goto loc_554584;
    }

loc_5545AE:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x18);
	retn(mv, &ts->esp, 0x8);

loc_777E60:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_51AB10;

loc_777E68:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x34);
	goto sub_52C420;

loc_777E73:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x44);
	goto sub_52C420;

loc_777E7E:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_52B9C0(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

SEH_554300:
	mov(&ts->eax, 0x7E3328);
	goto ___CxxFrameHandler;
}

void sub_5545D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77806B);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x5C);
	mov(&ts->esi, ts->ecx);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_554622;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->eax);
	game::sub_554300(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_554622:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

unknown_libname_66:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::j__free(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

SEH_5545D0:
	mov(&ts->eax, 0x7E3578);
	goto ___CxxFrameHandler;
}

void sub_554640(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77806B);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x60);
	mov(&ts->edi, ts->ecx);
	game::j__malloc(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->esi, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_55468F;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_554300(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x79B8F0);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x5C, 4));
	mov(mv, x86::mem(ts->esi + 0x5C, 4), ts->ecx);
	mov(&ts->eax, ts->esi);

loc_55468F:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

unknown_libname_66:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::j__free(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

SEH_5545D0:
	mov(&ts->eax, 0x7E3578);
	goto ___CxxFrameHandler;
}

void sub_5546B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77806B);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x5C);
	mov(&ts->edi, ts->ecx);
	game::j__malloc(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->esi, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_5546F9;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_554300(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x79B8FC);
	mov(&ts->eax, ts->esi);

loc_5546F9:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

unknown_libname_66:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::j__free(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

SEH_5545D0:
	mov(&ts->eax, 0x7E3578);
	goto ___CxxFrameHandler;
}

void sub_554710(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7774D8);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->esi);
	game::sub_554300(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi, 4), 0x79B904);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x5C, 4));
	mov(mv, x86::mem(ts->esi + 0x5C, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x64, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x68, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x6C, 4));
	mov(mv, x86::mem(ts->esi + 0x6C, 4), ts->edx);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x70, 4));
	mov(mv, x86::mem(ts->esi + 0x70, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x74, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x78, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x7C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x80, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x84, 4));
	mov(mv, x86::mem(ts->esi + 0x84, 4), ts->edx);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x88, 4));
	mov(mv, x86::mem(ts->esi + 0x8C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x90, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x94, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x98, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x9C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xA0, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x88, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0xA4, 4), 0x3F800000);
	mov(mv, x86::mem(ts->esi + 0xA8, 4), 0xBAB60B61);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	mov(&ts->eax, 0xFF);
	mov(mv, x86::mem(ts->esi + 0xB8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xB4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xB0, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xAC, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0xBC, 4));
	mov(mv, x86::mem(ts->esi + 0xBC, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0xC0, 4));
	mov(mv, x86::mem(ts->esi + 0xC0, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0xC4, 4));
	mov(mv, x86::mem(ts->esi + 0xC4, 4), ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_5352D0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x8);

loc_7774D0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_52AF90;

SEH_554710:
	mov(&ts->eax, 0x7E334C);
	goto ___CxxFrameHandler;
}

void sub_554830(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77806B);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0xC8);
	mov(&ts->esi, ts->ecx);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_554885;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->eax);
	game::sub_554710(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_554885:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

unknown_libname_66:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::j__free(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

SEH_5545D0:
	mov(&ts->eax, 0x7E3578);
	goto ___CxxFrameHandler;
}

void sub_5548A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x777EB3);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->esi);
	game::sub_554300(ts, mv);
	xor_(&ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esi, 4), 0x79B8E8);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x5C, 4), 0x79A9EC);
	mov(mv, x86::mem(ts->esi + 0x64, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x68, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->ebx);
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x28, 1), ts->bl);
	mov(mv, x86::mem(ts->esp + 0x1C, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_55494D;
    }
	mov(mv, &ts->edi, x86::mem(ts->edi + 0x64, 4));
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_55494D;
    }
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_554900:
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x68, 4));
	if (ts->eflags.zero) {
        goto loc_554946;
    }
	cmp(&ts->eflags, ts->edx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_554928;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x4, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_554920;
    }
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->eax);

loc_554920:
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->edx);
	mov(mv, x86::mem(ts->edx + 0x4, 4), ts->eax);
	goto loc_55493B;

loc_554928:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x64, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_554935;
    }
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->eax);

loc_554935:
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x64, 4), ts->eax);

loc_55493B:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x68, 4), ts->edx);
	if (!ts->eflags.zero) {
        goto loc_554943;
    }
	mov(mv, x86::mem(ts->esi + 0x68, 4), ts->eax);

loc_554943:
	inc(mv, x86::mem(ts->esi + 0x60, 4));

loc_554946:
	mov(mv, &ts->edi, x86::mem(ts->edi + 0x4, 4));
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_554900;
    }

loc_55494D:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0xC);

loc_777EA0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_52AF90;

loc_777EA8:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x5C);
	goto sub_52C420;

SEH_5548A0:
	mov(&ts->eax, 0x7E3378);
	goto ___CxxFrameHandler;
}

void sub_554970(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x777ED3);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->esi);
	game::sub_554300(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x64, 4));
	xor_(&ts->eax, ts->eax);
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0x64, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi, 4), 0x78F53C);
	mov(mv, x86::mem(ts->esi + 0x5C, 4), ts->eax);
	game::sub_537FF0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x6C, 4));
	mov(mv, x86::mem(ts->esi + 0x6C, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x70, 4));
	mov(mv, x86::mem(ts->esi + 0x70, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x74, 4));
	mov(mv, x86::mem(ts->esi + 0x74, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x5C, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 1), 0x1);
	game::sub_519F40(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x68, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	game::sub_51DE90(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x8);

loc_777EC0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_52AF90;

loc_777EC8:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x64);
	goto sub_50D390;

SEH_554970:
	mov(&ts->eax, 0x7E33A4);
	goto ___CxxFrameHandler;
}

void sub_554A00(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x777EF4);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x88);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_554A4E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_552EB0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_554A4E:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_777EE0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79CBAC);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_554A00:
	mov(&ts->eax, 0x7E33C8);
	goto ___CxxFrameHandler;
}

void sub_554A60(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x777F14);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x150);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_554AAE;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_553070(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_554AAE:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_777F00:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79CBC4);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_554A60:
	mov(&ts->eax, 0x7E33EC);
	goto ___CxxFrameHandler;
}

void sub_554AC0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x777F34);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x178);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_554B0E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_5530F0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_554B0E:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_777F20:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79CBD4);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_554AC0:
	mov(&ts->eax, 0x7E3410);
	goto ___CxxFrameHandler;
}

void sub_554B20(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x777F54);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x154);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_554B6E;
    }

loc_554B6E:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_777F40:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79CBE8);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_554B20:
	mov(&ts->eax, 0x7E3434);
	goto ___CxxFrameHandler;
}

void sub_554B53(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_553200(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_554B80(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x777F74);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x14C);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_554BCE;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_5532B0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_554BCE:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_777F60:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79CBF8);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_554B80:
	mov(&ts->eax, 0x7E3458);
	goto ___CxxFrameHandler;
}

void sub_554BE0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x777F94);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x120);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_554C2E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_553310(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_554C2E:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_777F80:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79CC0C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_554BE0:
	mov(&ts->eax, 0x7E347C);
	goto ___CxxFrameHandler;
}

void sub_554C40(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x777FB4);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x164);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_554C8E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_5534F0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_554C8E:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_777FA0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79CC20);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_554C40:
	mov(&ts->eax, 0x7E34A0);
	goto ___CxxFrameHandler;
}

void sub_554CA0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x777D78);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	game::sub_552330(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x2AC7D02D);
	push(mv, &ts->esp, 0x42ADB44C);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x0);
	mov(mv, x86::mem(ts->esi, 4), 0x79CC34);
	game::sub_495460(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x0);
	game::sub_4C2140(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xD999B6E7);
	push(mv, &ts->esp, ts->edx);
	game::sub_4954E0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xCF6F0439);
	push(mv, &ts->esp, ts->eax);
	game::sub_4954E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xABA93D3F);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4954E0(ts, mv);
	add(&ts->esp, 0x2C);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(0x838528, 1), 0x0);
	game::sub_548450(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50B840(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_554D47;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x10, 4));
	goto loc_554D49;

loc_554D47:
	xor_(&ts->eax, ts->eax);

loc_554D49:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4C, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x20, 4));
	mov(&ts->ecx, ts->esi);
	game::sub_5535D0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_777D70:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto ??1strstreambuf@std@@UAE@XZ_5;

SEH_569610:
	mov(&ts->eax, 0x7E3B38);
	goto ___CxxFrameHandler;
}

void sub_554D70(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_554D90(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_554D88;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_554D88:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_554D90(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x79CC34);
	goto ??1strstreambuf@std@@UAE@XZ_5;
}

void sub_554DA0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x777FD4);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xB4);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_554DEE;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_553770(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_554DEE:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_777FC0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79CC50);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_554DA0:
	mov(&ts->eax, 0x7E34C4);
	goto ___CxxFrameHandler;
}

void sub_554E00(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x777FF4);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x68);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_554E4B;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_553940(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_554E4B:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_777FE0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79CC60);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_554E00:
	mov(&ts->eax, 0x7E34E8);
	goto ___CxxFrameHandler;
}

void sub_554E60(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x778014);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x4C);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_554EAB;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_553B60(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_554EAB:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_778000:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79CC70);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_554E60:
	mov(&ts->eax, 0x7E350C);
	goto ___CxxFrameHandler;
}

void sub_554EC0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x778034);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_554F0B;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_553BE0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_554F0B:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_778020:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79CC80);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_554EC0:
	mov(&ts->eax, 0x7E3530);
	goto ___CxxFrameHandler;
}

void sub_554F20(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x778054);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x128);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_554F6E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_553C70(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_554F6E:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_778040:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79CC90);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_554F20:
	mov(&ts->eax, 0x7E3554);
	goto ___CxxFrameHandler;
}

void sub_554F80(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77806B);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x60);
	mov(&ts->edi, ts->ecx);
	game::j__malloc(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->esi, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_554FCF;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_554300(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x79BA0C);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x5C, 4));
	mov(mv, x86::mem(ts->esi + 0x5C, 4), ts->ecx);
	mov(&ts->eax, ts->esi);

loc_554FCF:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

unknown_libname_66:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::j__free(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

SEH_5545D0:
	mov(&ts->eax, 0x7E3578);
	goto ___CxxFrameHandler;
}

void sub_554FF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77806B);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x60);
	mov(&ts->edi, ts->ecx);
	game::j__malloc(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->esi, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_555045;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_554300(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x79BA0C);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x5C, 4));
	mov(mv, x86::mem(ts->esi + 0x5C, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi, 4), 0x79BAEC);
	mov(&ts->eax, ts->esi);

loc_555045:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

unknown_libname_66:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::j__free(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

SEH_5545D0:
	mov(&ts->eax, 0x7E3578);
	goto ___CxxFrameHandler;
}

void sub_555060(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77806B);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x6C);
	mov(&ts->esi, ts->ecx);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_5550B4;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->eax);
	game::sub_5548A0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_5550B4:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

unknown_libname_66:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::j__free(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

SEH_5545D0:
	mov(&ts->eax, 0x7E3578);
	goto ___CxxFrameHandler;
}

void sub_5550D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77806B);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x60);
	mov(&ts->edi, ts->ecx);
	game::j__malloc(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->esi, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_555125;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_554300(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x79BA0C);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x5C, 4));
	mov(mv, x86::mem(ts->esi + 0x5C, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi, 4), 0x79BAF4);
	mov(&ts->eax, ts->esi);

loc_555125:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

unknown_libname_66:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::j__free(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

SEH_5545D0:
	mov(&ts->eax, 0x7E3578);
	goto ___CxxFrameHandler;
}

void sub_555140(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77808B);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->esi);
	add(&ts->eax, ts->ebp);
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->ebp, ts->eax);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x18, 1), ts->bl);
	if (!ts->eflags.carry) {
        goto loc_5553EE;
    }
	goto loc_555180;

loc_555180:
	mov(mv, &ts->dx, x86::mem(ts->ebp, 2));
	movzx(&ts->eax, ts->dx);
	cmp(&ts->eflags, ts->eax, 0x684F);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_555360;
    }
	if (ts->eflags.zero) {
        goto loc_555355;
    }
	sub(&ts->eax, 0x4150);
	if (ts->eflags.zero) {
        goto loc_55532D;
    }
	sub(&ts->eax, 0x3);
	if (ts->eflags.zero) {
        goto loc_5552FF;
    }
	sub(&ts->eax, 0xEFC);
	if (!ts->eflags.zero) {
        goto loc_55536E;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xC, 4));
	mov(mv, x86::mem(ts->edx + 0x10, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	mov(mv, x86::mem(ts->ecx + 0x1C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xC, 4));
	mov(mv, x86::mem(ts->edx + 0x22, 2), ts->ax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	test(mv, &ts->eflags, x86::mem(ts->eax + 0x1C, 4), 0x100000);
	if (ts->eflags.zero) {
        goto loc_5552D9;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0xC, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x1C, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_5186C0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_555405;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	mov(mv, x86::mem(ts->esi + 0x18, 1), 0x1);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x1C, 4));
	or_(mv, x86::mem(ts->eax + 0x1C, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x22, 2), 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_555234;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x24, 4));
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x28, 4));
	mov(mv, x86::mem(ts->ecx + 0x28, 4), ts->edx);

loc_555234:
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x18, 4), 0x5);
	if (ts->eflags.zero) {
        goto loc_555245;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	goto loc_555274;

loc_555245:
	push(mv, &ts->esp, 0x6C);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->eax);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_55526A;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_5548A0(ts, mv);
	goto loc_55526C;

loc_55526A:
	xor_(&ts->eax, ts->eax);

loc_55526C:
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0xFFFFFFFF);

loc_555274:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xC, 4));
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edx + 0xC, 4));
	mov(mv, x86::mem(ts->edi + 0xC, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x10, 4));
	mov(mv, x86::mem(ts->edi + 0x10, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x1C, 4));
	mov(mv, x86::mem(ts->edi + 0x1C, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xC, 4));
	mov(mv, &ts->ax, x86::mem(ts->edx + 0x22, 2));
	mov(mv, x86::mem(ts->edi + 0x22, 2), ts->ax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x24, 4));
	mov(mv, x86::mem(ts->edi + 0x24, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x28, 4));
	mov(mv, x86::mem(ts->edi + 0x28, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5552BB;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->edx, 4));

loc_5552BB:
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->edi + 0x4C, 4));
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5552D9;
    }

loc_5552C5:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x18, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5552D2;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x30, 4));
	mov(mv, x86::mem(ts->edi + 0x18, 4), ts->eax);

loc_5552D2:
	mov(mv, &ts->edi, x86::mem(ts->edi + 0x4, 4));
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_5552C5;
    }

loc_5552D9:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	test(mv, &ts->eflags, x86::mem(ts->eax + 0x1C, 4), 0x10000000);
	if (ts->eflags.zero) {
        goto def_555385;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x90, 4));
	mov(mv, x86::mem(ts->ecx + (ts->edx*4), 4), ts->eax);
	inc(mv, x86::mem(ts->esi + 0x4C, 4));
	goto def_555385;

loc_5552FF:
	movzx(mv, &ts->ecx, x86::mem(ts->ebp + 0x2, 2));
	shr(&ts->ecx, 0x2);
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto def_555385;
    }
	lea(mv, &ts->edx, x86::mem(ts->ebp + 0x4, 4));

loc_555313:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xC, 4));
	mov(mv, &ts->ebx, x86::mem(ts->edx, 4));
	mov(mv, &ts->edi, x86::mem(ts->edi + 0x2C, 4));
	mov(mv, x86::mem(ts->edi + (ts->eax*4), 4), ts->ebx);
	inc(&ts->eax);
	add(&ts->edx, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.carry) {
        goto loc_555313;
    }
	xor_(&ts->ebx, ts->ebx);
	goto def_555385;

loc_55532D:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_55533C;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0xC, 4));
	cmp(mv, &ts->eflags, ts->edx, x86::mem(ts->ebp + 0x4, 4));
	if (ts->eflags.zero) {
        goto loc_55534A;
    }

loc_55533C:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_517FE0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->eax);

loc_55534A:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->eax);
	goto def_555385;

loc_555355:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x4, 4));
	mov(mv, x86::mem(ts->ecx + 0x10, 4), ts->edx);
	goto def_555385;

loc_555360:
	cmp(&ts->eflags, ts->eax, 0x6E4F);
	if (ts->eflags.zero) {
        goto loc_5553C9;
    }
	cmp(&ts->eflags, ts->eax, 0x744F);
	if (ts->eflags.zero) {
        goto loc_5553B9;
    }

loc_55536E:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto def_555385;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	dec(&ts->ecx);
	cmp(&ts->eflags, ts->ecx, 0x9);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_555385;
    }
	movzx(mv, &ts->ecx, x86::mem(ts->ecx + 0x555430, 1));
	jmp(x86::mem(0x55541C, 4));

loc_55538C:
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->esi);
	game::sub_534FC0(ts, mv);
	goto def_555385;

loc_555396:
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->esi);
	game::sub_52B740(ts, mv);
	goto def_555385;

loc_5553A0:
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->esi);
	game::sub_535060(ts, mv);
	goto def_555385;

loc_5553AA:
	cmp(&ts->eflags, ts->dx, 0x6649);
	if (!ts->eflags.zero) {
        goto def_555385;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x4, 4));
	mov(mv, x86::mem(ts->eax + 0x5C, 4), ts->edx);
	goto def_555385;

loc_5553B9:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_534DF0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->eax);
	goto def_555385;

loc_5553C9:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x9, 1), ts->bl);
	if (ts->eflags.zero) {
        goto def_555385;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	lea(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_5176B0(ts, mv);

def_555385:
	movzx(mv, &ts->ecx, x86::mem(ts->ebp + 0x2, 2));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	lea(mv, &ts->ebp, x86::mem(ts->ecx + (ts->ebp) + 0x4, 4));
	cmp(&ts->eflags, ts->ebp, ts->eax);
	if (ts->eflags.carry) {
        goto loc_555180;
    }

loc_5553EE:
	mov(&ts->al, 0x1);

loc_5553F0:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp, 0x8);

loc_555405:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_555412;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->edx, 4));

loc_555412:
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->ebx);
	xor_(&ts->al, ts->al);
	goto loc_5553F0;

loc_778080:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::j__free(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

SEH_555140:
	mov(&ts->eax, 0x7E359C);
	goto ___CxxFrameHandler;
}

void sub_555440(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7780B4);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x150);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_55548E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_554CA0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_55548E:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_7780A0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79CCA0);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_555440:
	mov(&ts->eax, 0x7E35C0);
	goto ___CxxFrameHandler;
}

void sub_5554A0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x8, 4));
	lea(mv, &ts->ecx, x86::mem(ts->ecx + (ts->eax) + 0x8, 4));
	add(&ts->eax, 0x8);
	cmp(&ts->eflags, ts->edx, 0xCC6A624F);
	if (ts->eflags.zero) {
        goto loc_5554D7;
    }

loc_5554C0:
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_555574;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->edx) + 0x8, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), 0xCC6A624F);
	if (!ts->eflags.zero) {
        goto loc_5554C0;
    }

loc_5554D7:
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ebx, x86::mem(ts->eax + 0x8, 4));
	test(&ts->eflags, ts->ebx, ts->ebx);
	lea(mv, &ts->ecx, x86::mem(ts->ecx + (ts->eax) + 0x8, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_55570C;
    }
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_55570C;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx, 4));
	cmp(&ts->eflags, ts->eax, 0xEA624F46);
	if (ts->eflags.zero) {
        goto loc_55556A;
    }

loc_555503:
	cmp(&ts->eflags, ts->ebx, ts->ecx);
	if (!ts->eflags.carry) {
        goto loc_555702;
    }
	cmp(&ts->eflags, ts->eax, 0x6E747542);
	if (!ts->eflags.zero) {
        goto loc_55554E;
    }
	mov(mv, &ts->esi, x86::mem(ts->edi, 4));
	mov(mv, &ts->ebp, x86::mem(ts->ebx + 0x8, 4));
	mov(mv, x86::mem(ts->edi + 0x48, 4), ts->ebp);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x90, 4));
	add(&ts->esi, 0x90);
	push(mv, &ts->esp, ts->edx);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->ebp, ts->ebp);
	mov(mv, x86::mem(ts->esi, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_55554B;
    }
	lea(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi, 4), ts->eax);

loc_55554B:
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->ebp);

loc_55554E:
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x4, 4));
	lea(mv, &ts->eax, x86::mem(ts->ebx + (ts->ecx) + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->eax, 0xEA624F46);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x10, 4));
	if (!ts->eflags.zero) {
        goto loc_555503;
    }

loc_55556A:
	cmp(&ts->eflags, ts->ebx, ts->ecx);
	if (!ts->eflags.carry) {
        goto loc_555702;
    }
	goto loc_555590;

loc_555574:
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), 0xCC6A624F);
	if (ts->eflags.zero) {
        goto loc_5554D7;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_555589:
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x10, 4));
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_555590:
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	lea(mv, &ts->esi, x86::mem(ts->ebx + 0x8, 4));
	lea(mv, &ts->ebp, x86::mem(ts->ebx + (ts->edx) + 0x8, 4));
	cmp(&ts->eflags, ts->esi, ts->ebp);
	mov(mv, x86::mem(ts->edi + 0xC, 4), ts->eax);
	mov(mv, x86::mem(ts->edi + 0x14, 4), ts->eax);
	if (!ts->eflags.carry) {
        goto loc_5556ED;
    }
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_5555B0:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->eax, 0x446A624F);
	if (ts->eflags.zero) {
        goto loc_5555EB;
    }
	cmp(&ts->eflags, ts->eax, 0x5267734D);
	if (ts->eflags.zero) {
        goto loc_5555D8;
    }
	cmp(&ts->eflags, ts->eax, 0x70726353);
	if (!ts->eflags.zero) {
        goto loc_555602;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_5515E0(ts, mv);
	goto loc_555602;

loc_5555D8:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_54D1D0(ts, mv);
	goto loc_555602;

loc_5555EB:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_555140(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_55570C;
    }

loc_555602:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->esi, x86::mem(ts->esi + (ts->edx) + 0x8, 4));
	cmp(&ts->eflags, ts->esi, ts->ebp);
	if (ts->eflags.carry) {
        goto loc_5555B0;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0xC, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_5556ED;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x18, 4));
	cmp(&ts->eflags, ts->eax, 0x4);
	if (!ts->eflags.zero) {
        goto loc_555627;
    }
	game::sub_504360(ts, mv);
	goto loc_555631;

loc_555627:
	cmp(&ts->eflags, ts->eax, 0x6);
	if (!ts->eflags.zero) {
        goto loc_555631;
    }
	game::sub_504C40(ts, mv);

loc_555631:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_555667;
    }
	goto loc_555640;

loc_555640:
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x18, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_555660;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55565D;
    }

loc_555651:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x30, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_55565D;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_555651;
    }

loc_55565D:
	mov(mv, x86::mem(ts->ecx + 0x18, 4), ts->eax);

loc_555660:
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_555640;
    }

loc_555667:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0xC, 4));
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x4C, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_555681;
    }

loc_555671:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x30, 4), 0x1744B3);
	if (ts->eflags.zero) {
        goto loc_555681;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_555671;
    }

loc_555681:
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->ecx + 0x54, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_55568D;
    }
	game::sub_517720(ts, mv);

loc_55568D:
	mov(mv, x86::mem(ts->esi + 0x10, 4), 0x0);
	mov(mv, &ts->al, x86::mem(ts->edi + 0x8, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_5556D0;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	xor_(&ts->bl, ts->bl);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 1), ts->bl);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_5556CC;
    }

loc_5556A8:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->esi);
	game::sub_541F60(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	add(&ts->esp, 0x10);
	inc(&ts->bl);
	movzx(&ts->eax, ts->bl);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x18, 1), ts->bl);
	if (ts->eflags.carry) {
        goto loc_5556A8;
    }

loc_5556CC:
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x10, 4));

loc_5556D0:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x14, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_5556E2;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_517E90(ts, mv);
	goto loc_5556ED;

loc_5556E2:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_495610(ts, mv);

loc_5556ED:
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x4, 4));
	lea(mv, &ts->eax, x86::mem(ts->ebx + (ts->ecx) + 0x8, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	if (ts->eflags.carry) {
        goto loc_555589;
    }

loc_555702:
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_55570C:
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);
}

void sub_555720(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(ts->esp + 0x18, 1));
	mov(mv, &ts->dl, x86::mem(ts->esp + 0x14, 1));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->cl, x86::mem(ts->esp + 0x18, 1));
	mov(mv, x86::mem(ts->esi + 0x9, 1), ts->cl);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x8, 1), ts->al);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esi + 0xA, 1), ts->dl);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, x86::mem(ts->esi + 0x38, 4), ts->ecx);
	mov(&ts->ecx, ts->esi);
	xor_(&ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esi, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x30, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x34, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x44, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x40, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x48, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x3C, 4), ts->edx);
	game::sub_52B4D0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5557E1;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_5049A0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5557E1;
    }
	game::sub_52B550(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5557E1;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_5182E0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5557E1;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_518380(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5557E1;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_5554A0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5557E1;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_551580(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5557E1;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_5184E0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5557E1;
    }
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x8, 1));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, x86::mem(ts->eax + 0x16, 1), ts->cl);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_52B370(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5557E1;
    }
	mov(mv, &ts->ebx, x86::mem(ts->esi, 4));
	mov(mv, x86::mem(ts->esi, 4), ts->edi);

loc_5557E1:
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->ecx, ts->edi);
	if (ts->eflags.zero) {
        goto loc_5557ED;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax, 4));

loc_5557ED:
	mov(mv, x86::mem(ts->esi, 4), ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->eax, ts->ebx);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x18);
}

void sub_555800(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x50);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x30, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x34, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x44, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x40, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x4C, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x48, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x58, 4));
	push(mv, &ts->esp, ts->eax);
	xor_(&ts->edx, ts->edx);
	mov(mv, &ts->dl, x86::mem(ts->ecx + 0x4, 1));
	xor_(&ts->eax, ts->eax);
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x3, 1));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x5C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	game::sub_555720(ts, mv);
	add(&ts->esp, 0x50);
	retn(mv, &ts->esp, 0x8);
}

void sub_555860(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, 0x776FA8);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebx, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0xF4, 4));
	lea(mv, &ts->edi, x86::mem(ts->ebx + 0xEC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->edi);
	game::sub_519E50(ts, mv);
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_5558ED;
    }
	mov(&ts->eax, ts->ebp);
	lea(mv, &ts->edx, x86::mem(ts->eax + 0x1, 4));

loc_5558A2:
	mov(mv, &ts->cl, x86::mem(ts->eax, 1));
	inc(&ts->eax);
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_5558A2;
    }
	sub(&ts->eax, ts->edx);
	mov(&ts->dl, ts->al);
	movsx(&ts->eax, ts->dl);
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->ebp) - 0x1, 4));
	mov(mv, &ts->al, x86::mem(ts->ecx, 1));
	cmp(&ts->eflags, ts->al, 0x2F);
	if (ts->eflags.zero) {
        goto loc_5558D2;
    }
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_5558C0:
	cmp(&ts->eflags, ts->al, 0x5C);
	if (ts->eflags.zero) {
        goto loc_5558D2;
    }
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_5558D4;
    }
	mov(mv, &ts->al, x86::mem(ts->ecx - 0x1, 1));
	dec(&ts->ecx);
	dec(&ts->dl);
	cmp(&ts->eflags, ts->al, 0x2F);
	if (!ts->eflags.zero) {
        goto loc_5558C0;
    }

loc_5558D2:
	test(&ts->eflags, ts->dl, ts->dl);

loc_5558D4:
	if (ts->eflags.zero) {
        goto loc_5558D7;
    }
	inc(&ts->ecx);

loc_5558D7:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_519E50(ts, mv);
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_555975;
    }

loc_5558ED:
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x79AAEC);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x24, 4), 0x0);
	mov(mv, x86::mem(ts->esi + 0x15, 1), 0x1);
	game::sub_504880(ts, mv);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	game::sub_505400(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x79AA4C);

loc_555925:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x30, 4));
	movzx(mv, &ts->edx, x86::mem(ts->esp + 0x2C, 1));
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x20, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->edx);
	mov(mv, &ts->al, x86::mem(ts->ebx, 1));
	mov(mv, x86::mem(ts->esi + 0x14, 1), ts->al);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x10C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_555952;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));

loc_555952:
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->ebx + 0xDC, 4));
	game::sub_518280(ts, mv);
	mov(&ts->eax, ts->esi);

loc_555960:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x14);
	retn(mv, &ts->esp, 0xC);

loc_555975:
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x10C, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	call(ts, mv, x86::mem(ts->edx, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5559B7;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	game::sub_555800(ts, mv);
	mov(&ts->esi, ts->eax);
	mov(mv, &ts->al, x86::mem(ts->esp + 0x28, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5559AF;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_5559AF:
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_555925;
    }

loc_5559B7:
	xor_(&ts->eax, ts->eax);
	goto loc_555960;

loc_776FA0:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x14, 4));
	goto sub_504950;

SEH_52CFC0:
	mov(&ts->eax, 0x7E35E4);
	goto ___CxxFrameHandler;
}

void sub_5559C0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	xor_(&ts->eax, ts->eax);
	mov(&ts->edx, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	push(mv, &ts->esp, ts->edi);
	goto loc_5559E0;

loc_5559E0:
	mov(mv, &ts->esi, x86::mem(ts->edx + 0x412C, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_555CF2;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->edx + 0x412C, 4), ts->eax);
	cmp(mv, &ts->eflags, ts->esi, x86::mem(ts->edx + 0x4130, 4));
	if (!ts->eflags.zero) {
        goto loc_555A08;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, x86::mem(ts->edx + 0x4130, 4), ts->ecx);

loc_555A08:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_555A15;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);

loc_555A15:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_555A22;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ecx);

loc_555A22:
	mov(&ts->eax, 0xABADCAFE);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->eax);
	dec(mv, x86::mem(ts->edx + 0x4128, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_555A43;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ecx);
	goto loc_555A4B;

loc_555A43:
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0xFFFFFFFF);

loc_555A4B:
	test(mv, &ts->eflags, x86::mem(ts->esi + 0x14, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_555B28;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_555B28;
    }
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x3C, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_555AA2;
    }
	mov(mv, &ts->eax, x86::mem(ts->edx + 0xE4, 4));
	xor_(&ts->cl, ts->cl);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_555A8B;
    }

loc_555A74:
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_555AA2;
    }
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_555A80;
    }
	mov(&ts->cl, 0x1);
	goto loc_555A83;

loc_555A80:
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));

loc_555A83:
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_555A74;
    }
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_555AA2;
    }

loc_555A8B:
	push(mv, &ts->esp, 0x79CCB8);
	game::sub_50D510(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->eax + 0x3C, 4), 0x0);

loc_555AA2:
	test(mv, &ts->eflags, x86::mem(ts->esi + 0x14, 1), 0x2);
	if (!ts->eflags.zero) {
        goto loc_555AC9;
    }
	mov(mv, &ts->eax, x86::mem(ts->edx + 0xE4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x3C, 4));
	if (ts->eflags.zero) {
        goto loc_555AD7;
    }

loc_555AB8:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x3C, 4), ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_555AC0;
    }
	mov(mv, x86::mem(ts->eax + 0x3C, 4), ts->edi);

loc_555AC0:
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_555AB8;
    }
	goto loc_555AD7;

loc_555AC9:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x3C, 4));
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ecx);

loc_555AD7:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x3C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_555AF3;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x1C, 4));
	or_(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	mov(mv, x86::mem(ts->ecx + 0x1C, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x20, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x24, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x28, 4), ts->eax);

loc_555AF3:
	test(mv, &ts->eflags, x86::mem(ts->esi + 0x14, 1), 0x2);
	if (!ts->eflags.zero) {
        goto loc_555B10;
    }
	mov(mv, &ts->eax, x86::mem(ts->edx + 0xE4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_555B10;
    }

loc_555B03:
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x28, 4));
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_555B03;
    }

loc_555B10:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edx);
	game::sub_5362E0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	dec(&ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);

loc_555B28:
	test(mv, &ts->eflags, x86::mem(ts->esi + 0x14, 1), 0x2);
	if (ts->eflags.zero) {
        goto loc_555C13;
    }
	mov(mv, &ts->ebp, x86::mem(0x8384C4, 4));
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x10, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0xC, 4));
	add(&ts->ebp, 0x10);
	cmp(&ts->eflags, ts->edi, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_555C13;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_555B50:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DCC0(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_555B6C;
    }
	mov(mv, &ts->edi, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->edi, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_555B50;
    }
	goto loc_555C0F;

loc_555B6C:
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	xor_(&ts->edx, ts->edx);
	mov(&ts->dl, ts->bl);
	inc(&ts->dl);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_555860(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_555BE3;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x14, 4));
	and_(&ts->ecx, 0x1);
	if (!ts->eflags.zero) {
        goto loc_555BB5;
    }
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_555BB5;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	mov(mv, x86::mem(ts->eax + 0x3C, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1C, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x18, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x1C, 4));
	not(&ts->edi);
	and_(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->edx + 0x1C, 4), ts->ecx);
	mov(mv, x86::mem(ts->edx + 0x24, 4), ts->ecx);
	goto loc_555BE3;

loc_555BB5:
	cmp(&ts->eflags, ts->ecx, 0x1);
	if (!ts->eflags.zero) {
        goto loc_555BE3;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, x86::mem(ts->eax + 0x3C, 4), ts->edx);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0xE4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_555BE3;
    }
	goto loc_555BD0;

loc_555BD0:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x3C, 4), ts->edx);
	if (!ts->eflags.zero) {
        goto loc_555BDC;
    }
	mov(mv, x86::mem(ts->ecx + 0x3C, 4), ts->eax);

loc_555BDC:
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_555BD0;
    }

loc_555BE3:
	test(mv, &ts->eflags, x86::mem(ts->esi + 0x14, 1), 0x10);
	if (ts->eflags.zero) {
        goto loc_555C0F;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0xE4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_555C0F;
    }

loc_555BF7:
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_555C08;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x18, 4));
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x1C, 4));
	not(&ts->edx);
	and_(&ts->edi, ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x24, 4), ts->edi);

loc_555C08:
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_555BF7;
    }

loc_555C0F:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));

loc_555C13:
	test(mv, &ts->eflags, x86::mem(ts->esi + 0x14, 1), 0x4);
	if (ts->eflags.zero) {
        goto loc_555C6B;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x3C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_555C67;
    }
	mov(mv, &ts->ebp, x86::mem(ts->edx + 0x1C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	mov(&ts->edi, ts->ebp);
	and_(&ts->edi, ts->eax);
	mov(&ts->eax, ts->edi);
	not(&ts->eax);
	and_(&ts->eax, ts->ebp);
	mov(mv, x86::mem(ts->edx + 0x1C, 4), ts->eax);
	mov(mv, x86::mem(ts->edx + 0x20, 4), ts->eax);
	mov(mv, x86::mem(ts->edx + 0x24, 4), ts->eax);
	mov(mv, x86::mem(ts->edx + 0x28, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x1C, 4));
	or_(&ts->eax, ts->edi);
	mov(mv, x86::mem(ts->ecx + 0x1C, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x20, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x24, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x28, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xFFFFFFFC);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x334C5493);
	game::sub_51AA20(ts, mv);

loc_555C67:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));

loc_555C6B:
	test(mv, &ts->eflags, x86::mem(ts->esi + 0x14, 1), 0x8);
	if (ts->eflags.zero) {
        goto loc_555CE1;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0xE4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_555CE1;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1C, 4));
	mov(&ts->edi, ts->edi);

loc_555C80:
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x3C, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_555C9D;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_555C80;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	goto loc_5559E0;

loc_555C9D:
	mov(mv, &ts->ebp, x86::mem(ts->edx + 0x1C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	mov(&ts->edi, ts->ebp);
	and_(&ts->edi, ts->eax);
	mov(&ts->eax, ts->edi);
	not(&ts->eax);
	and_(&ts->eax, ts->ebp);
	mov(mv, x86::mem(ts->edx + 0x1C, 4), ts->eax);
	mov(mv, x86::mem(ts->edx + 0x20, 4), ts->eax);
	mov(mv, x86::mem(ts->edx + 0x24, 4), ts->eax);
	mov(mv, x86::mem(ts->edx + 0x28, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x1C, 4));
	or_(&ts->eax, ts->edi);
	mov(mv, x86::mem(ts->ecx + 0x1C, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x20, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x24, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x28, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x18, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0xFFFFFFFC);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x334C5493);
	game::sub_51AA20(ts, mv);

loc_555CE1:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	goto loc_5559E0;

loc_555CF2:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_555D00(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x8384B0, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->edi, ts->ecx);
	game::sub_43F8F0(ts, mv);
	xor_(&ts->edx, ts->edx);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (ts->eflags.zero) {
        goto loc_555D31;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->edx);
	mov(&ts->esi, ts->eax);
	goto loc_555D33;

loc_555D31:
	xor_(&ts->esi, ts->esi);

loc_555D33:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->eax);
	mov(&ts->eax, ts->ebx);
	and_(&ts->eax, 0x6);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_555D57;
    }

loc_555D4C:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x10, 4));
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x10, 4));
	goto loc_555DD5;

loc_555D57:
	cmp(&ts->eflags, ts->eax, 0x2);
	if (!ts->eflags.zero) {
        goto loc_555D77;
    }
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->edi);
	game::sub_51CCD0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_555D4C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi, 4), ts->eax);
	goto loc_555DDF;

loc_555D77:
	cmp(&ts->eflags, ts->eax, 0x4);
	if (!ts->eflags.zero) {
        goto loc_555D9E;
    }
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->edi);
	game::sub_51CCD0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_555D8C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	goto loc_555DD5;

loc_555D8C:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x14, 4));
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x10, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi, 4), ts->eax);
	goto loc_555DDF;

loc_555D9E:
	cmp(&ts->eflags, ts->eax, 0x6);
	if (!ts->eflags.zero) {
        goto loc_555DDF;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x14, 4));
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x10, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_555DD2;
    }
	mov(&ts->bl, 0x8);
	nop();

loc_555DB0:
	test(mv, &ts->eflags, x86::mem(ts->eax + 0x18, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_555DB7;
    }
	mov(&ts->edx, ts->eax);

loc_555DB7:
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_555DB0;
    }
	test(&ts->eflags, ts->edx, ts->edx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x14, 4));
	if (ts->eflags.zero) {
        goto loc_555DD2;
    }
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x4, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	mov(mv, x86::mem(ts->edx + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), ts->edx);
	goto loc_555DDC;

loc_555DD2:
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));

loc_555DD5:
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), ts->ecx);

loc_555DDC:
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);

loc_555DDF:
	test(&ts->eflags, ts->bl, 0x11);
	if (ts->eflags.zero) {
        goto loc_555E18;
    }
	mov(mv, x86::mem(ts->esi + 0x10, 4), 0x2);
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_555E5F;
    }
	test(&ts->eflags, ts->bl, 0x1);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->eax);
	if (ts->eflags.zero) {
        goto loc_555E6D;
    }
	game::sub_51CB20(ts, mv);
	mov(&ts->ecx, ts->edi);
	game::sub_5376B0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x14);

loc_555E18:
	mov(mv, x86::mem(ts->esi + 0x10, 4), 0x1);
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_555E5F;
    }
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x8, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xDC, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_555E4C;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_519E50(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	setnz(ts->eflags, &ts->al);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_555E5F;
    }

loc_555E4C:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_555860(ts, mv);

loc_555E5F:
	mov(&ts->ecx, ts->edi);
	game::sub_5376B0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x14);

loc_555E6D:
	game::sub_51CB60(ts, mv);
	mov(&ts->ecx, ts->edi);
	game::sub_5376B0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x14);
}

void sub_555E80(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto locret_555EAD;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x0);
	game::sub_555D00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	goto sub_52CDD0;

locret_555EAD:
	retn(mv, &ts->esp);
}

void sub_555EB0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto locret_555ED5;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x5);
	game::sub_555D00(ts, mv);

locret_555ED5:
	retn(mv, &ts->esp);
}

void sub_555EE0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto locret_555F05;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x16);
	game::sub_555D00(ts, mv);

locret_555F05:
	retn(mv, &ts->esp);
}

void sub_555F10(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto locret_555F4D;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	if (ts->eflags.zero) {
        goto loc_555F3A;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x4);
	game::sub_555D00(ts, mv);
	retn(mv, &ts->esp);

loc_555F3A:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x0);
	game::sub_555D00(ts, mv);

locret_555F4D:
	retn(mv, &ts->esp);
}

void sub_555F50(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto locret_555F78;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_555D00(ts, mv);

locret_555F78:
	retn(mv, &ts->esp);
}

void sub_555F80(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7780D4);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0xC);
	mov(&ts->edi, ts->ecx);
	game::j__malloc(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_555FEF;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x34, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esi, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x83A7B0);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x8, 4), 0x0);
	game::sub_4FF3B0(ts, mv);
	goto loc_555FF1;

loc_555FEF:
	xor_(&ts->esi, ts->esi);

loc_555FF1:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->edi + 0xC, 4), ts->esi);
	mov(mv, x86::mem(0x83A9C0, 1), 0x0);
	mov(mv, x86::mem(ts->edi + 0x10, 1), 0x1);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x18);

loc_7780C0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79CD50);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_555F80:
	mov(&ts->eax, 0x7E3608);
	goto ___CxxFrameHandler;
}

void sub_556020(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x30, 4));
	xor_(&ts->ebp, ts->ebp);
	cmp(&ts->eflags, ts->edi, 0x9120409E);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_5562CB;
    }
	if (ts->eflags.zero) {
        goto loc_556360;
    }
	cmp(&ts->eflags, ts->edi, 0x72619778);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_5561A3;
    }
	if (ts->eflags.zero) {
        goto loc_55615F;
    }
	cmp(&ts->eflags, ts->edi, 0x251BF83E);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_5560FA;
    }
	if (ts->eflags.zero) {
        goto loc_5560DD;
    }
	cmp(&ts->eflags, ts->edi, 0x153E234);
	if (ts->eflags.zero) {
        goto loc_5560CC;
    }
	cmp(&ts->eflags, ts->edi, 0xC407210);
	if (!ts->eflags.zero) {
        goto loc_556456;
    }

loc_556075:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_5560A4;
    }
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x28, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5560A4;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_50DAE0(ts, mv);

loc_5560A4:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5560B6;
    }
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x28, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_556456;
    }

loc_5560B6:
	cmp(&ts->eflags, ts->edi, 0x911AB364);
	if (!ts->eflags.zero) {
        goto loc_55626B;
    }
	mov(&ts->ebp, 0xA);
	goto loc_556456;

loc_5560CC:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->edx);
	call(ts, mv, x86::mem(ts->eax + 0x24, 4));
	goto loc_556456;

loc_5560DD:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79031C);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	goto loc_556456;

loc_5560FA:
	cmp(&ts->eflags, ts->edi, 0x35F8620B);
	if (ts->eflags.zero) {
        goto loc_55612E;
    }
	cmp(&ts->eflags, ts->edi, 0x406415E3);
	if (!ts->eflags.zero) {
        goto loc_556456;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_556456;
    }
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x28, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_556456;
    }
	mov(&ts->ebp, 0x8);
	goto loc_556456;

loc_55612E:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_556456;
    }
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x28, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_556456;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x24, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	mov(&ts->ebp, 0xB);
	call(ts, mv, x86::mem(ts->edx + 0x3C, 4));
	goto loc_556454;

loc_55615F:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x148, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_556456;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x144, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(&ts->ecx, ts->esi);
	push(mv, &ts->esp, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_55618F;
    }
	game::sub_539370(ts, mv);
	mov(&ts->ebp, 0x6);
	mov(&ts->ebx, 0x7);
	goto loc_556456;

loc_55618F:
	game::sub_5390E0(ts, mv);
	mov(&ts->ebp, 0x6);
	mov(&ts->ebx, 0x7);
	goto loc_556456;

loc_5561A3:
	cmp(&ts->eflags, ts->edi, 0x911AB364);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_556281;
    }
	if (ts->eflags.zero) {
        goto loc_556075;
    }
	cmp(&ts->eflags, ts->edi, 0x81017864);
	if (ts->eflags.zero) {
        goto loc_5561F6;
    }
	cmp(&ts->eflags, ts->edi, 0x84378BEF);
	if (!ts->eflags.zero) {
        goto loc_556456;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_556456;
    }
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x28, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_556456;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->eax + 0x28, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	mov(&ts->ebp, 0xC);
	call(ts, mv, x86::mem(ts->edx + 0x3C, 4));
	goto loc_556454;

loc_5561F6:
	mov(mv, &ts->eax, x86::mem(0x8651AC, 4));
	sub(mv, &ts->eax, x86::mem(0x83A9C8, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7F942C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_556456;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x54, 4));
	push(mv, &ts->esp, 0x783FE5);
	mov(&ts->ecx, ts->edi);
	game::sub_4957D0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x24C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x250, 4));
	lea(mv, &ts->edx, x86::mem(ts->edi + 0x14C, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x30, 4));
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_555F80(ts, mv);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x148, 1), 0x0);
	game::sub_51EB60(ts, mv);
	goto loc_556456;

loc_55626B:
	cmp(&ts->eflags, ts->edi, 0xC407210);
	if (!ts->eflags.zero) {
        goto loc_556456;
    }
	mov(&ts->ebp, 0x8);
	goto loc_556456;

loc_556281:
	cmp(&ts->eflags, ts->edi, 0x911C0A4B);
	if (!ts->eflags.zero) {
        goto loc_556456;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x148, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_556456;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x144, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(&ts->ecx, ts->esi);
	push(mv, &ts->esp, 0x1);
	if (ts->eflags.zero) {
        goto loc_5562BA;
    }
	game::sub_539370(ts, mv);
	mov(&ts->ebp, 0x7);
	mov(&ts->ebx, ts->ebp);
	goto loc_556456;

loc_5562BA:
	game::sub_5390E0(ts, mv);
	mov(&ts->ebp, 0x7);
	mov(&ts->ebx, ts->ebp);
	goto loc_556456;

loc_5562CB:
	cmp(&ts->eflags, ts->edi, 0xB5971BF1);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_556398;
    }
	if (ts->eflags.zero) {
        goto loc_556360;
    }
	cmp(&ts->eflags, ts->edi, 0x9803F6E2);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_556330;
    }
	if (ts->eflags.zero) {
        goto loc_556324;
    }
	cmp(&ts->eflags, ts->edi, 0x92B703B5);
	if (ts->eflags.zero) {
        goto loc_556318;
    }
	cmp(&ts->eflags, ts->edi, 0x96DDA9E6);
	if (!ts->eflags.zero) {
        goto loc_556456;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FEF4);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	goto loc_556456;

loc_556318:
	mov(&ts->ecx, ts->esi);
	game::sub_51FF40(ts, mv);
	goto loc_556456;

loc_556324:
	mov(&ts->ecx, ts->esi);
	game::sub_52FC40(ts, mv);
	goto loc_556456;

loc_556330:
	cmp(&ts->eflags, ts->edi, 0xAF0BBD92);
	if (!ts->eflags.zero) {
        goto loc_556456;
    }
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x145, 1), 0x0);
	mov(mv, x86::mem(ts->esi + 0x12C, 4), 0x1);
	game::sub_52FD40(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x10, 4));
	goto loc_556456;

loc_556360:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_556456;
    }
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x28, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_556456;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edx);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	push(mv, &ts->esp, ts->edi);
	game::sub_50D460(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	mov(&ts->ebp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->eax + 0x3C, 4));
	goto loc_556454;

loc_556398:
	cmp(&ts->eflags, ts->edi, 0xDA52AF6B);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_5563F3;
    }
	if (ts->eflags.zero) {
        goto loc_5563E0;
    }
	cmp(&ts->eflags, ts->edi, 0xC98356BA);
	if (ts->eflags.zero) {
        goto loc_5563D7;
    }
	cmp(&ts->eflags, ts->edi, 0xC9D30688);
	if (!ts->eflags.zero) {
        goto loc_556456;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79031C);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	mov(mv, x86::mem(ts->esi + 0x148, 1), 0x1);
	goto loc_556456;

loc_5563D7:
	mov(&ts->ecx, ts->esi);
	game::sub_544490(ts, mv);
	goto loc_556456;

loc_5563E0:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x54, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_538060(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	goto loc_556456;

loc_5563F3:
	cmp(&ts->eflags, ts->edi, 0xDA5B8712);
	if (!ts->eflags.zero) {
        goto loc_556456;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79031C);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x54, 4));
	neg(&ts->eax);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0x83A8B0);
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x4C, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DC00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	add(&ts->esp, 0x1C);
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	push(mv, &ts->esp, 0xDA5B8712);
	mov(&ts->ecx, ts->edi);
	game::sub_50D460(ts, mv);
	mov(&ts->ebp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x3C, 4));
	mov(mv, x86::mem(ts->esi + 0x148, 1), 0x1);

loc_556454:
	mov(&ts->ebx, ts->eax);

loc_556456:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x149, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_556480;
    }
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_556480;
    }
	imul(&ts->ebp, ts->ebp, 0x1B);
	movsx(mv, &ts->eax, x86::mem(ts->ebx + (ts->ebp) + 0x837FE0, 1));
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_556480;
    }
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_458520(ts, mv);

loc_556480:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);
}

void sub_556490(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edx, 0x818F0385);
	mov(&ts->ebx, ts->ecx);
	game::sub_4FF9D0(ts, mv);
	xor_(&ts->ebp, ts->ebp);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_5564B0;
    }
	mov(&ts->edx, 0xC01A6F63);
	game::sub_4FF9D0(ts, mv);

loc_5564B0:
	mov(&ts->esi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x50, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FFD0);
	push(mv, &ts->esp, 0x7902B8);
	push(mv, &ts->esp, ts->ecx);
	game::sub_5426C0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x4C, 4));
	push(mv, &ts->esp, 0xF54CC524);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x7F70D0, 4));
	mov(&ts->eax, 0x8);
	add(&ts->esp, 0x1C);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5564F8;
    }
	cmp(mv, &ts->eflags, x86::mem(0x7FCA00, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_5564FD;
    }

loc_5564F8:
	mov(&ts->esi, 0x783FE5);

loc_5564FD:
	mov(&ts->edx, 0x3DE4EFF0);
	game::sub_4FF9D0(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_556515;
    }
	mov(&ts->edx, 0xC01A6F63);
	game::sub_4FF9D0(ts, mv);

loc_556515:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x7);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x6);
	push(mv, &ts->esp, 0x5B9D88B9);
	mov(&ts->ecx, ts->ebx);
	game::sub_555F80(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->ebx + 0x4, 4));
	cmp(&ts->eflags, ts->esi, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_55654C;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_55654C;
    }
	push(mv, &ts->esp, 0xB8A7C6CC);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_556563;
    }

loc_55654C:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_5565A9;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0xB8A7C6CC);
	game::sub_52C570(ts, mv);

loc_556563:
	mov(&ts->edi, ts->eax);
	cmp(&ts->eflags, ts->edi, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_5565A9;
    }
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x4C, 4));
	cmp(&ts->eflags, ts->esi, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_5565A9;
    }

loc_556570:
	push(mv, &ts->esp, 0x790A40);
	game::sub_505450(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55658D;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	cmp(&ts->eflags, ts->esi, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_556570;
    }
	goto loc_5565A9;

loc_55658D:
	cmp(&ts->eflags, ts->esi, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_5565A9;
    }
	cmp(mv, &ts->eflags, ts->esi, x86::mem(ts->edi + 0x54, 4));
	if (ts->eflags.zero) {
        goto loc_5565A6;
    }
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->edi + 0x54, 4), ts->esi);
	game::sub_517720(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x54, 4));
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ebp);

loc_5565A6:
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ebp);

loc_5565A9:
	mov(mv, &ts->esi, x86::mem(ts->ebx + 0x4, 4));
	cmp(&ts->eflags, ts->esi, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_5565CD;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_5565CD;
    }
	push(mv, &ts->esp, 0xB8A7C6CD);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_5565E4;
    }

loc_5565CD:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_55662D;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0xB8A7C6CD);
	game::sub_52C570(ts, mv);

loc_5565E4:
	mov(&ts->edi, ts->eax);
	cmp(&ts->eflags, ts->edi, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_55662D;
    }
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x4C, 4));
	cmp(&ts->eflags, ts->esi, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_55662D;
    }

loc_5565F1:
	push(mv, &ts->esp, 0x790A40);
	game::sub_505450(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_556611;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	cmp(&ts->eflags, ts->esi, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_5565F1;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_556611:
	cmp(&ts->eflags, ts->esi, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_55662D;
    }
	cmp(mv, &ts->eflags, ts->esi, x86::mem(ts->edi + 0x54, 4));
	if (ts->eflags.zero) {
        goto loc_55662A;
    }
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->edi + 0x54, 4), ts->esi);
	game::sub_517720(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x54, 4));
	mov(mv, x86::mem(ts->ecx + 0x10, 4), ts->ebp);

loc_55662A:
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ebp);

loc_55662D:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_556640(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7780F6);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x10, 4), ts->edi);
	game::sub_552330(ts, mv);
	xor_(&ts->ebx, ts->ebx);
	lea(mv, &ts->esi, x86::mem(ts->edi + 0x154, 4));
	mov(mv, x86::mem(ts->edi, 4), 0x79CD64);
	mov(mv, x86::mem(ts->edi + 0x150, 4), ts->ebx);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x4, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xC, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0xD, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0xE, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0xF, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x10, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(0x838528, 1), ts->bl);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x4, 1), 0x1);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5566CE;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x1C, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_5566CE;
    }
	mov(&ts->ecx, 0xFF);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->ecx);

loc_5566CE:
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x8);
	if (!ts->eflags.zero) {
        goto loc_5566DE;
    }
	mov(mv, x86::mem(ts->edi + 0x28, 4), 0x9FE6DADA);

loc_5566DE:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_54F980(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_5208E0(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(0x838980, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto loc_55672B;
    }
	mov(mv, &ts->ecx, x86::mem(0x8389AC, 4));
	mov(mv, &ts->eax, x86::mem(0x8389B0, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x8389D0);
	push(mv, &ts->esp, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(0x8389AC, 4));
	mov(mv, &ts->eax, x86::mem(0x8389B0, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x8392C0);
	push(mv, &ts->esp, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	mov(mv, x86::mem(0x838980, 1), 0x1);

loc_55672B:
	game::sub_5205B0(ts, mv);
	mov(&ts->ecx, ts->edi);
	game::sub_520D60(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(0x83898C, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_556756;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0xE1497A54);
	push(mv, &ts->esp, 0x42ADB44C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_495460(ts, mv);
	add(&ts->esp, 0xC);

loc_556756:
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x100);
	if (!ts->eflags.zero) {
        goto loc_55676C;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_4CFD80(ts, mv);

loc_55676C:
	push(mv, &ts->esp, 0x790000);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_5567AA;
    }
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	if (ts->eflags.zero) {
        goto loc_5567AA;
    }
	cmp(&ts->eflags, ts->eax, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0xFF);
	if (ts->eflags.zero) {
        goto loc_55679E;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x790000);
	push(mv, &ts->esp, 0x4);
	goto loc_5567A5;

loc_55679E:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x790000);
	push(mv, &ts->esp, ts->ebx);

loc_5567A5:
	game::sub_555D00(ts, mv);

loc_5567AA:
	mov(mv, &ts->eax, x86::mem(0x8384D8, 4));
	mov(&ts->ecx, ts->eax);
	push(mv, &ts->esp, 0x1);
	mov(mv, x86::mem(ts->eax + 0x6C, 1), 0x1);
	game::sub_542990(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x20, 4));
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_54E6E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	mov(&ts->eax, ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_7780E0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto ??1strstreambuf@std@@UAE@XZ_5;

loc_7780E8:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x154);
	goto sub_49D870;

SEH_556640:
	mov(&ts->eax, 0x7E3634);
	goto ___CxxFrameHandler;
}

void sub_5567F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_556810(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_556808;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_556808:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_556810(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x777D78);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x79CD64);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x154, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	game::sub_49D870(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	game::std__strstreambuf___strstreambuf_void_(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_777D70:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto ??1strstreambuf@std@@UAE@XZ_5;

SEH_569610:
	mov(&ts->eax, 0x7E3B38);
	goto ___CxxFrameHandler;
}

void sub_556870(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x4C, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_556928;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x16C, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_556928;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x172, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_556928;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_556928;
    }
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x4C, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_5568C1;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x48, 4));
	cmp(&ts->eflags, ts->ecx, 0x34);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5568C1;
    }
	cmp(&ts->eflags, ts->ecx, 0x3E);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_5568DC;
    }

loc_5568C1:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_556928;
    }
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x4C, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_556928;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x48, 4));
	cmp(&ts->eflags, ts->ecx, 0x61);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_556928;
    }
	cmp(&ts->eflags, ts->ecx, 0x98);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_556928;
    }

loc_5568DC:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5568EC;
    }
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x4C, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_5568EC;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x48, 4));
	goto loc_5568F1;

loc_5568EC:
	mov(&ts->eax, 0xA9);

loc_5568F1:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x16C, 4));
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_555F10(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	push(mv, &ts->esp, 0x800421);
	game::sub_54E6E0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x168, 4), 0x0);

loc_556928:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_556930(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	push(mv, &ts->esp, 0x4);
	game::sub_458520(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDF422345);
	push(mv, &ts->esp, ts->eax);
	game::sub_495520(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x56DA42E0);
	push(mv, &ts->esp, 0xC318FF76);
	push(mv, &ts->esp, ts->ecx);
	game::sub_495460(ts, mv);
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x48, 4));
	add(&ts->esp, 0x14);
	cmp(&ts->eflags, ts->eax, 0xA3);
	if (ts->eflags.zero) {
        goto loc_556993;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xA2285688);
	push(mv, &ts->esp, ts->edx);
	game::sub_495520(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xC318FF76);
	push(mv, &ts->esp, ts->eax);
	game::sub_495520(ts, mv);
	add(&ts->esp, 0x10);

loc_556993:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x58, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	mov(&ts->ebx, 0x1);
	mov(mv, x86::mem(ts->esi + 0x169, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x7B, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_5569DC;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x58, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x160, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_5569DC;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_5569DC;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x160, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_555F10(ts, mv);
	add(&ts->esp, 0x10);

loc_5569DC:
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(0x8A1C68, 4), ts->ecx);
	mov(mv, x86::mem(0x8363F8, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x48, 4));
	add(&ts->eax, 0xFFFFFFF7);
	cmp(&ts->eflags, ts->eax, 0x9A);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_556A02;
    }
	movzx(mv, &ts->eax, x86::mem(ts->eax + 0x556BDC, 1));
	jmp(x86::mem(0x556BC0, 4));

loc_556A09:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x28, 4));
	mov(mv, x86::mem(ts->esi + 0x158, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0xD3E04E45);
	mov(mv, x86::mem(0x8A1C68, 4), ts->ebx);
	goto def_556A02;

loc_556A21:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x28, 4));
	mov(mv, x86::mem(ts->esi + 0x158, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0xD3E04E45);
	mov(mv, x86::mem(0x8363F8, 4), ts->ebx);
	goto def_556A02;

loc_556A39:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x28, 4));
	mov(mv, x86::mem(ts->esi + 0x158, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0xA93E10E9);
	goto def_556A02;

loc_556A4B:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x28, 4));
	mov(mv, x86::mem(ts->esi + 0x158, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0xD3E04E45);
	goto def_556A02;

loc_556A5D:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xBD620BB1);
	push(mv, &ts->esp, 0xC318FF76);
	push(mv, &ts->esp, ts->edx);
	game::sub_495460(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x28, 4));
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x158, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0xD3E04E45);
	game::sub_54FB70(ts, mv);
	goto def_556A02;

loc_556A8E:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x28, 4));
	mov(mv, x86::mem(ts->esi + 0x158, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->ecx);

def_556A02:
	push(mv, &ts->esp, 0x799AB8);
	game::sub_52CEF0(ts, mv);
	xor_(&ts->ebx, ts->ebx);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_556ABD;
    }
	push(mv, &ts->esp, 0x55C171E2);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_556AD8;
    }

loc_556ABD:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_556B1E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, 0x799AB8);
	push(mv, &ts->esp, 0x55C171E2);
	game::sub_52C570(ts, mv);

loc_556AD8:
	mov(&ts->edi, ts->eax);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_556B1E;
    }
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x4C, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_556B1E;
    }

loc_556AE5:
	push(mv, &ts->esp, 0x78FC44);
	game::sub_505450(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_556B02;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_556AE5;
    }
	goto loc_556B1E;

loc_556B02:
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_556B1E;
    }
	cmp(mv, &ts->eflags, ts->esi, x86::mem(ts->edi + 0x54, 4));
	if (ts->eflags.zero) {
        goto loc_556B1B;
    }
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->edi + 0x54, 4), ts->esi);
	game::sub_517720(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x54, 4));
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ebx);

loc_556B1B:
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ebx);

loc_556B1E:
	push(mv, &ts->esp, 0x799AB8);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_556B3F;
    }
	push(mv, &ts->esp, 0xF1E6850B);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_556B5A;
    }

loc_556B3F:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_556BB3;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, 0x799AB8);
	push(mv, &ts->esp, 0xF1E6850B);
	game::sub_52C570(ts, mv);

loc_556B5A:
	mov(&ts->edi, ts->eax);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_556BB3;
    }
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x4C, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_556BB3;
    }
	goto loc_556B70;

loc_556B70:
	push(mv, &ts->esp, 0x78FC44);
	game::sub_505450(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_556B97;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_556B70;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(0x83854C, 1), 0x0);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_556B97:
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_556BB3;
    }
	cmp(mv, &ts->eflags, ts->esi, x86::mem(ts->edi + 0x54, 4));
	if (ts->eflags.zero) {
        goto loc_556BB0;
    }
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->edi + 0x54, 4), ts->esi);
	game::sub_517720(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x54, 4));
	mov(mv, x86::mem(ts->ecx + 0x10, 4), ts->ebx);

loc_556BB0:
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ebx);

loc_556BB3:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(0x83854C, 1), 0x0);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_556C80(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x777D78);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x10, 4), ts->esi);
	game::sub_552330(ts, mv);
	xor_(&ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esi, 4), 0x79CD80);
	mov(mv, x86::mem(ts->esi + 0x150, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x151, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x152, 1), ts->bl);
	mov(mv, &ts->eax, x86::mem(0x863444, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_556D12;
    }
	mov(mv, &ts->ecx, x86::mem(0x86344C, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_556D12;
    }
	neg(&ts->eax);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, ts->ecx);
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x38, 4), 0x7FC8D0D0);
	if (!ts->eflags.zero) {
        goto loc_556D12;
    }
	mov(&ts->edx, 0x6AA654C5);
	game::sub_4FF9D0(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_556D00;
    }
	mov(&ts->edx, 0xC01A6F63);
	game::sub_4FF9D0(ts, mv);

loc_556D00:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x42ADB44C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0xC);

loc_556D12:
	mov(mv, x86::mem(0x838528, 1), ts->bl);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_54F980(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_5208E0(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(0x838980, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto loc_556D65;
    }
	mov(mv, &ts->ecx, x86::mem(0x8389AC, 4));
	mov(mv, &ts->eax, x86::mem(0x8389B0, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x8389D0);
	push(mv, &ts->esp, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(0x8389AC, 4));
	mov(mv, &ts->eax, x86::mem(0x8389B0, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x8392C0);
	push(mv, &ts->esp, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	mov(mv, x86::mem(0x838980, 1), 0x1);

loc_556D65:
	game::sub_5205B0(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_5304F0(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(0x83898C, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_556D90;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDCCD75F8);
	push(mv, &ts->esp, 0x42ADB44C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_495460(ts, mv);
	add(&ts->esp, 0xC);

loc_556D90:
	mov(mv, &ts->edx, x86::mem(0x7FA1B4, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_556DAF;
    }
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->ebx);

loc_556DAF:
	push(mv, &ts->esp, 0x790000);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_556DED;
    }
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	if (ts->eflags.zero) {
        goto loc_556DED;
    }
	cmp(&ts->eflags, ts->eax, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0xFF);
	if (ts->eflags.zero) {
        goto loc_556DE1;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x790000);
	push(mv, &ts->esp, 0x4);
	goto loc_556DE8;

loc_556DE1:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x790000);
	push(mv, &ts->esp, ts->ebx);

loc_556DE8:
	game::sub_555D00(ts, mv);

loc_556DED:
	mov(mv, &ts->eax, x86::mem(0x8384D8, 4));
	mov(&ts->ecx, ts->eax);
	push(mv, &ts->esp, 0x1);
	mov(mv, x86::mem(ts->eax + 0x6C, 1), 0x1);
	game::sub_542990(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	game::sub_54E6E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_777D70:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto ??1strstreambuf@std@@UAE@XZ_5;

SEH_569610:
	mov(&ts->eax, 0x7E3B38);
	goto ___CxxFrameHandler;
}

void sub_556E30(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_556E50(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_556E48;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_556E48:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_556E50(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x79CD80);
	goto ??1strstreambuf@std@@UAE@XZ_5;
}

void sub_556E60(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x4C);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	push(mv, &ts->esp, 0x4C);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edi);
	game::j__malloc(ts, mv);
	xor_(&ts->ebx, ts->ebx);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(&ts->esi, 0x3F800000);
	if (ts->eflags.zero) {
        goto loc_556EC7;
    }
	mov(mv, x86::mem(ts->eax + 0xC, 4), 0xC7D3F6A7);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x20, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x21, 1), 0x1);
	mov(mv, x86::mem(ts->eax + 0x22, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x23, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), 0xDF3FD1D6);
	mov(mv, x86::mem(ts->eax + 0x30, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x34, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x38, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x3C, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x40, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x44, 1), 0x1);
	mov(mv, x86::mem(ts->eax + 0x48, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax, 4), 0x79B604);
	mov(mv, x86::mem(ts->eax + 0x45, 1), 0x1);
	goto loc_556EC9;

loc_556EC7:
	xor_(&ts->eax, ts->eax);

loc_556EC9:
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	mov(mv, &ts->edx, x86::mem(0x850078, 4));
	mov(&ts->ecx, 0x1);
	cmp(&ts->eflags, ts->edx, ts->ecx);
	mov(&ts->al, 0x1);
	if (!ts->eflags.zero) {
        goto loc_556EF2;
    }
	cmp(mv, &ts->eflags, x86::mem(0x83898C, 4), ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_556EF2;
    }
	xor_(&ts->al, ts->al);
	mov(mv, x86::mem(ts->edi + 0x162, 1), ts->cl);

loc_556EF2:
	cmp(&ts->eflags, ts->al, ts->bl);
	mov(mv, x86::mem(0x83855D, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_557027;
    }
	mov(&ts->esi, ts->ecx);

loc_556F03:
	cmp(mv, &ts->eflags, x86::mem(0x863444, 4), ts->ebx);
	mov(&ts->eax, 0x4);
	if (ts->eflags.zero) {
        goto loc_556F28;
    }
	mov(mv, &ts->ecx, x86::mem(0x86344C, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_556F28;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x38, 4), 0x7FC8D0D0);
	if (!ts->eflags.zero) {
        goto loc_556F28;
    }
	mov(&ts->eax, 0x3);

loc_556F28:
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_557022;
    }
	mov(mv, &ts->eax, x86::mem(0x838994, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	game::sub_500100(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x79CDB8);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, 0x40);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->edi, ts->eax);
	game::sub_50C960(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_43DB50(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x79CD9C);
	mov(mv, x86::mem(ts->esp + 0x38, 4), ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x3C, 4));
	push(mv, &ts->esp, 0x40);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C960(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x44, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DB50(ts, mv);
	push(mv, &ts->esp, 0x50);
	mov(mv, x86::mem(ts->esp + 0x40, 4), ts->eax);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x34);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_556FE2;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->eax + 0x2C, 4), ts->ecx);
	mov(&ts->ecx, 0x3F800000);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x20, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x21, 1), 0x1);
	mov(mv, x86::mem(ts->eax + 0x22, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x23, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x30, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x34, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x38, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x3C, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x40, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x44, 1), 0x1);
	mov(mv, x86::mem(ts->eax + 0x48, 4), 0x1);
	mov(mv, x86::mem(ts->eax, 4), 0x79B60C);
	mov(mv, x86::mem(ts->eax + 0x4C, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x45, 1), 0x1);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	goto loc_556FE6;

loc_556FE2:
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ebx);

loc_556FE6:
	mov(mv, &ts->edx, x86::mem(0x8389B0, 4));
	mov(mv, &ts->edi, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	game::sub_50F0D0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_52A110(ts, mv);
	mov(&ts->cl, ts->al);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	add(&ts->esp, 0x10);
	neg(&ts->cl);
	sbb(&ts->cl, ts->cl);
	inc(&ts->cl);
	mov(mv, x86::mem(ts->eax + 0x22, 1), ts->cl);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	inc(&ts->esi);
	goto loc_556F03;

loc_557022:
	mov(&ts->esi, 0x3F800000);

loc_557027:
	push(mv, &ts->esp, 0x4C);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_55707F;
    }
	mov(mv, x86::mem(ts->eax + 0xC, 4), 0x6A93275F);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x20, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x21, 1), 0x1);
	mov(mv, x86::mem(ts->eax + 0x22, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x23, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), 0xED55C635);
	mov(mv, x86::mem(ts->eax + 0x30, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x34, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x38, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x3C, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x40, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x44, 1), 0x1);
	mov(mv, x86::mem(ts->eax + 0x48, 4), 0x2);
	mov(mv, x86::mem(ts->eax, 4), 0x79B614);
	mov(mv, x86::mem(ts->eax + 0x45, 1), 0x1);
	goto loc_557081;

loc_55707F:
	xor_(&ts->eax, ts->eax);

loc_557081:
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	mov(mv, x86::mem(ts->edi + 0x160, 1), 0x1);
	mov(mv, x86::mem(ts->edi + 0x161, 1), 0x1);
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5570C4;
    }
	cmp(&ts->eflags, ts->eax, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0xFF);
	if (ts->eflags.zero) {
        goto loc_5570B8;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x799CD8);
	push(mv, &ts->esp, 0x4);
	goto loc_5570BF;

loc_5570B8:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x799CD8);
	push(mv, &ts->esp, ts->ebx);

loc_5570BF:
	game::sub_555D00(ts, mv);

loc_5570C4:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4C, 4));
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x4C, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax + 0x20, 4));
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x4, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5570F3;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5570F3;
    }
	push(mv, &ts->esp, 0x3D3F9F04);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_55710E;
    }

loc_5570F3:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_55710C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x3D3F9F04);
	game::sub_52C570(ts, mv);
	goto loc_55710E;

loc_55710C:
	xor_(&ts->eax, ts->eax);

loc_55710E:
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	add(&ts->esp, 0x4);
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x10, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x4C);
	retn(mv, &ts->esp);
}

void sub_557130(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDF422345);
	push(mv, &ts->esp, ts->eax);
	game::sub_4954E0(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x58, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x159, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x7B, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_55718A;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x58, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x15C, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_55718A;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55718A;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x15C, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_555F10(ts, mv);
	add(&ts->esp, 0x10);

loc_55718A:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_50F290(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0x846EE660);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_5571B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x778116);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x8FC);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->esi);
	game::sub_552330(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x79CDD0);
	mov(&ts->ecx, 0x838980);
	mov(mv, x86::mem(ts->esp + 0x90C, 4), 0x0);
	mov(mv, x86::mem(0x838528, 1), 0x0);
	game::sub_53B420(ts, mv);
	mov(&ts->ecx, 0x838980);
	game::sub_530160(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_548200(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_557293;
    }
	cmp(mv, &ts->eflags, x86::mem(0x8389C8, 4), 0x8389C8);
	if (!ts->eflags.zero) {
        goto loc_557293;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	game::sub_40C910(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x863480, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x83AD90);
	mov(mv, x86::mem(ts->esp + 0x910, 1), 0x1);
	game::sub_503510(ts, mv);
	mov(&ts->edi, ts->eax);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_557269;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));

loc_557269:
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, 0x2);
	push(mv, &ts->esp, ts->edx);
	game::sub_4D8EC0(ts, mv);
	add(&ts->esp, 0xC);
	game::sub_4A78B0(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x394, 4));
	mov(mv, x86::mem(ts->esp + 0x90C, 1), 0x0);
	game::nullsub_1(ts, mv);

loc_557293:
	push(mv, &ts->esp, 0x790000);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_5572D4;
    }
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	if (ts->eflags.zero) {
        goto loc_5572D4;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFF);
	if (ts->eflags.zero) {
        goto loc_5572C6;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x790000);
	push(mv, &ts->esp, 0x4);
	goto loc_5572CF;

loc_5572C6:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x790000);
	push(mv, &ts->esp, 0x0);

loc_5572CF:
	game::sub_555D00(ts, mv);

loc_5572D4:
	mov(mv, &ts->eax, x86::mem(0x8384D8, 4));
	mov(&ts->ecx, ts->eax);
	push(mv, &ts->esp, 0x1);
	mov(mv, x86::mem(ts->eax + 0x6C, 1), 0x1);
	game::sub_542990(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	game::sub_54E6E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x904, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_778100:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x904, 4));
	goto ??1strstreambuf@std@@UAE@XZ_5;

loc_77810B:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x900, 4));
	goto sub_401800;

SEH_5571B0:
	mov(&ts->eax, 0x7E3660);
	goto ___CxxFrameHandler;
}

void sub_557320(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_557340(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_557338;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_557338:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_557340(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x79CDD0);
	goto ??1strstreambuf@std@@UAE@XZ_5;
}

void sub_557350(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x83A644, 4));
	sub(&ts->eax, 0x0);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_557367;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto loc_55736E;
    }
	game::sub_5227E0(ts, mv);
	goto loc_55736E;

loc_557367:
	mov(&ts->ecx, ts->esi);
	game::sub_53C9E0(ts, mv);

loc_55736E:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50B840(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_557389;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x10, 4));
	goto loc_55738B;

loc_557389:
	xor_(&ts->eax, ts->eax);

loc_55738B:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4C, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x20, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x10, 4));
	push(mv, &ts->esp, 0x790000);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_5573DD;
    }
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	if (ts->eflags.zero) {
        goto loc_5573DD;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFF);
	if (ts->eflags.zero) {
        goto loc_5573CF;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x790000);
	push(mv, &ts->esp, 0x4);
	goto loc_5573D8;

loc_5573CF:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x790000);
	push(mv, &ts->esp, 0x0);

loc_5573D8:
	game::sub_555D00(ts, mv);

loc_5573DD:
	mov(mv, &ts->al, x86::mem(0x83A7A4, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5573F9;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	push(mv, &ts->esp, 0x4);
	game::sub_54E6E0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_5573F9:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x404);
	game::sub_54E6E0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_557410(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x4C);
	mov(&ts->esi, ts->ecx);
	game::j__malloc(ts, mv);
	xor_(&ts->ebx, ts->ebx);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(&ts->edi, 0x3F800000);
	if (ts->eflags.zero) {
        goto loc_557470;
    }
	mov(mv, x86::mem(ts->eax + 0xC, 4), 0xE9638D3E);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x20, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x21, 1), 0x1);
	mov(mv, x86::mem(ts->eax + 0x22, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x23, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), 0x93FDEE74);
	mov(mv, x86::mem(ts->eax + 0x30, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x34, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x38, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x3C, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x40, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x44, 1), 0x1);
	mov(mv, x86::mem(ts->eax, 4), 0x79B784);
	mov(mv, x86::mem(ts->eax + 0x48, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x45, 1), 0x1);
	goto loc_557472;

loc_557470:
	xor_(&ts->eax, ts->eax);

loc_557472:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	push(mv, &ts->esp, 0x4C);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5574D2;
    }
	mov(mv, x86::mem(ts->eax + 0xC, 4), 0xAAAB31E9);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x20, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x21, 1), 0x1);
	mov(mv, x86::mem(ts->eax + 0x22, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x23, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), 0x35102EDF);
	mov(mv, x86::mem(ts->eax + 0x30, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x34, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x38, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x3C, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x40, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x44, 1), 0x1);
	mov(mv, x86::mem(ts->eax, 4), 0x79B784);
	mov(mv, x86::mem(ts->eax + 0x48, 4), 0x1);
	mov(mv, x86::mem(ts->eax + 0x45, 1), 0x1);
	goto loc_5574D4;

loc_5574D2:
	xor_(&ts->eax, ts->eax);

loc_5574D4:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	push(mv, &ts->esp, 0x4C);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_557534;
    }
	mov(mv, x86::mem(ts->eax + 0xC, 4), 0x119144);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x20, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x21, 1), 0x1);
	mov(mv, x86::mem(ts->eax + 0x22, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x23, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), 0xD7162CFA);
	mov(mv, x86::mem(ts->eax + 0x30, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x34, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x38, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x3C, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x40, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x44, 1), 0x1);
	mov(mv, x86::mem(ts->eax, 4), 0x79B784);
	mov(mv, x86::mem(ts->eax + 0x48, 4), 0x2);
	mov(mv, x86::mem(ts->eax + 0x45, 1), 0x1);
	goto loc_557536;

loc_557534:
	xor_(&ts->eax, ts->eax);

loc_557536:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	push(mv, &ts->esp, 0x4C);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_557596;
    }
	mov(mv, x86::mem(ts->eax + 0xC, 4), 0x13A4CEEB);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x20, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x21, 1), 0x1);
	mov(mv, x86::mem(ts->eax + 0x22, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x23, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), 0x30DA61E1);
	mov(mv, x86::mem(ts->eax + 0x30, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x34, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x38, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x3C, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x40, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x44, 1), 0x1);
	mov(mv, x86::mem(ts->eax, 4), 0x79B784);
	mov(mv, x86::mem(ts->eax + 0x48, 4), 0x3);
	mov(mv, x86::mem(ts->eax + 0x45, 1), 0x1);
	goto loc_557598;

loc_557596:
	xor_(&ts->eax, ts->eax);

loc_557598:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	push(mv, &ts->esp, 0x4C);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5575F8;
    }
	mov(mv, x86::mem(ts->eax + 0xC, 4), 0x3F6495C5);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x20, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x21, 1), 0x1);
	mov(mv, x86::mem(ts->eax + 0x22, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x23, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), 0x75F903F4);
	mov(mv, x86::mem(ts->eax + 0x30, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x34, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x38, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x3C, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x40, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x44, 1), 0x1);
	mov(mv, x86::mem(ts->eax, 4), 0x79B784);
	mov(mv, x86::mem(ts->eax + 0x48, 4), 0x4);
	mov(mv, x86::mem(ts->eax + 0x45, 1), 0x1);
	goto loc_5575FA;

loc_5575F8:
	xor_(&ts->eax, ts->eax);

loc_5575FA:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50B840(ts, mv);
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_55761D;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x10, 4));
	goto loc_55761F;

loc_55761D:
	xor_(&ts->eax, ts->eax);

loc_55761F:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4C, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x20, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x10, 4));
	push(mv, &ts->esp, 0x790000);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_557675;
    }
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	if (ts->eflags.zero) {
        goto loc_557675;
    }
	cmp(&ts->eflags, ts->esi, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0xFF);
	if (ts->eflags.zero) {
        goto loc_557669;
    }
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x790000);
	push(mv, &ts->esp, 0x4);
	game::sub_555D00(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_557669:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x790000);
	push(mv, &ts->esp, ts->ebx);
	game::sub_555D00(ts, mv);

loc_557675:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_557680(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0xEF3772C1);
	push(mv, &ts->esp, 0x178475E7);
	push(mv, &ts->esp, 0x0);
	mov(&ts->esi, ts->ecx);
	game::sub_522A70(ts, mv);
	push(mv, &ts->esp, 0xE8DA9E62);
	push(mv, &ts->esp, 0x1A29FFA);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_522A70(ts, mv);
	push(mv, &ts->esp, 0x7ED554D1);
	push(mv, &ts->esp, 0x214DB7CF);
	push(mv, &ts->esp, 0x2);
	mov(&ts->ecx, ts->esi);
	game::sub_522A70(ts, mv);
	push(mv, &ts->esp, 0x6741BF48);
	push(mv, &ts->esp, 0xD6DC23EE);
	push(mv, &ts->esp, 0x3);
	mov(&ts->ecx, ts->esi);
	game::sub_522A70(ts, mv);
	push(mv, &ts->esp, 0x135BDD07);
	push(mv, &ts->esp, 0x502ABEED);
	push(mv, &ts->esp, 0x4);
	mov(&ts->ecx, ts->esi);
	game::sub_522A70(ts, mv);
	push(mv, &ts->esp, 0x5AE08536);
	push(mv, &ts->esp, 0x6EF789C);
	push(mv, &ts->esp, 0x5);
	mov(&ts->ecx, ts->esi);
	game::sub_522A70(ts, mv);
	push(mv, &ts->esp, 0x135C04DA);
	push(mv, &ts->esp, 0x9701BDE4);
	push(mv, &ts->esp, 0x6);
	mov(&ts->ecx, ts->esi);
	game::sub_522A70(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50B840(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_557721;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x10, 4));
	goto loc_557723;

loc_557721:
	xor_(&ts->eax, ts->eax);

loc_557723:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4C, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x20, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x10, 4));
	push(mv, &ts->esp, 0x790000);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55777A;
    }
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	if (ts->eflags.zero) {
        goto loc_55777A;
    }
	test(&ts->eflags, ts->esi, ts->esi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFF);
	if (ts->eflags.zero) {
        goto loc_55776C;
    }
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x790000);
	push(mv, &ts->esp, 0x4);
	game::sub_555D00(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_55776C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x790000);
	push(mv, &ts->esp, 0x0);
	game::sub_555D00(ts, mv);

loc_55777A:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_557780(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x83A648, 4));
	cmp(&ts->eflags, ts->eax, 0x3);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_55778D;
    }
	jmp(x86::mem(0x5578A4, 4));

loc_557794:
	mov(&ts->ecx, ts->edi);
	game::sub_549B40(ts, mv);
	goto def_55778D;

loc_55779D:
	mov(&ts->ecx, ts->edi);
	game::sub_549C20(ts, mv);
	goto def_55778D;

loc_5577A6:
	mov(&ts->ecx, ts->edi);
	game::sub_549DC0(ts, mv);
	goto def_55778D;

loc_5577AF:
	mov(&ts->ecx, ts->edi);
	game::sub_549E00(ts, mv);

def_55778D:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50B840(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5577D1;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x10, 4));
	goto loc_5577D3;

loc_5577D1:
	xor_(&ts->eax, ts->eax);

loc_5577D3:
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_539650(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x54, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_5577F9;
    }
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x4C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5577EE;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_5577F0;

loc_5577EE:
	xor_(&ts->eax, ts->eax);

loc_5577F0:
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5577F9;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->edx + 0x28, 4));

loc_5577F9:
	mov(mv, &ts->eax, x86::mem(0x83A644, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_557859;
    }
	mov(mv, &ts->eax, x86::mem(0x83A7A0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_557813;
    }
	mov(&ts->esi, 0x1);
	goto loc_557839;

loc_557813:
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_55781F;
    }
	mov(&ts->esi, 0x2);
	goto loc_557839;

loc_55781F:
	cmp(&ts->eflags, ts->eax, 0x2);
	if (!ts->eflags.zero) {
        goto loc_55782B;
    }
	mov(&ts->esi, 0x4);
	goto loc_557839;

loc_55782B:
	xor_(&ts->ecx, ts->ecx);
	cmp(&ts->eflags, ts->eax, 0x3);
	setnz(ts->eflags, &ts->cl);
	dec(&ts->ecx);
	and_(&ts->ecx, 0x8);
	mov(&ts->esi, ts->ecx);

loc_557839:
	mov(mv, &ts->edx, x86::mem(0x7FA220, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_557858;
    }
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->esi);

loc_557858:
	pop(mv, &ts->esp, ts->esi);

loc_557859:
	push(mv, &ts->esp, 0x790000);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55789F;
    }
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	if (ts->eflags.zero) {
        goto loc_55789F;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFF);
	if (ts->eflags.zero) {
        goto loc_557891;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x790000);
	push(mv, &ts->esp, 0x4);
	game::sub_555D00(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp);

loc_557891:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x790000);
	push(mv, &ts->esp, 0x0);
	game::sub_555D00(ts, mv);

loc_55789F:
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp);
}

void sub_5578C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x4C, 1), 0x0);
	mov(mv, &ts->eax, x86::mem(0x83A648, 4));
	sub(&ts->eax, 0x4);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, 0x17);
	if (ts->eflags.zero) {
        goto loc_5578EA;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_5578E3;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto loc_5578EF;
    }
	mov(mv, x86::mem(ts->esi + 0x4C, 1), 0x1);
	goto loc_5578EF;

loc_5578E3:
	mov(&ts->edi, 0x18);
	goto loc_5578EF;

loc_5578EA:
	mov(&ts->edi, 0x17);

loc_5578EF:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x4C, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_557921;
    }
	push(mv, &ts->esp, 0xA8);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_557918;
    }
	mov(&ts->ecx, ts->eax);
	game::sub_523050(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x11);
	goto loc_55794B;

loc_557918:
	xor_(&ts->eax, ts->eax);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x11);
	goto loc_55794B;

loc_557921:
	push(mv, &ts->esp, 0x30);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_557938;
    }
	mov(&ts->ecx, ts->eax);
	game::sub_53CFC0(ts, mv);
	goto loc_55793A;

loc_557938:
	xor_(&ts->eax, ts->eax);

loc_55793A:
	mov(mv, &ts->ecx, x86::mem(0x799398, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x799394, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);

loc_55794B:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x50, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	mov(&ts->ecx, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->edx + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(0x83A644, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_5579BF;
    }
	mov(mv, &ts->eax, x86::mem(0x83A7A0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_55797A;
    }
	mov(&ts->edi, 0x1);
	goto loc_5579A0;

loc_55797A:
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_557986;
    }
	mov(&ts->edi, 0x2);
	goto loc_5579A0;

loc_557986:
	cmp(&ts->eflags, ts->eax, 0x2);
	if (!ts->eflags.zero) {
        goto loc_557992;
    }
	mov(&ts->edi, 0x4);
	goto loc_5579A0;

loc_557992:
	xor_(&ts->ecx, ts->ecx);
	cmp(&ts->eflags, ts->eax, 0x3);
	setnz(ts->eflags, &ts->cl);
	dec(&ts->ecx);
	and_(&ts->ecx, 0x8);
	mov(&ts->edi, ts->ecx);

loc_5579A0:
	mov(mv, &ts->edx, x86::mem(0x7FA228, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5579BF;
    }
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->edi);

loc_5579BF:
	push(mv, &ts->esp, 0x790000);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_557A06;
    }
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	if (ts->eflags.zero) {
        goto loc_557A06;
    }
	test(&ts->eflags, ts->esi, ts->esi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFF);
	if (ts->eflags.zero) {
        goto loc_5579F8;
    }
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x790000);
	push(mv, &ts->esp, 0x4);
	game::sub_555D00(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_5579F8:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x790000);
	push(mv, &ts->esp, 0x0);
	game::sub_555D00(ts, mv);

loc_557A06:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_557A10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776FE8);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x8, 4));
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->ebp - 0x10, 4), ts->esi);
	game::sub_551DE0(ts, mv);
	xor_(&ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esi, 4), 0x79AC60);
	mov(mv, x86::mem(ts->esi + 0x4C, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x4D, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x50, 4), ts->ebx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x790000);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0xAC, 1), ts->bl);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_557A95;
    }
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	if (ts->eflags.zero) {
        goto loc_557A95;
    }
	cmp(&ts->eflags, ts->eax, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0xFF);
	if (ts->eflags.zero) {
        goto loc_557A89;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x790000);
	push(mv, &ts->esp, 0x4);
	goto loc_557A90;

loc_557A89:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x790000);
	push(mv, &ts->esp, ts->ebx);

loc_557A90:
	game::sub_555D00(ts, mv);

loc_557A95:
	mov(mv, &ts->eax, x86::mem(0x8384D8, 4));
	mov(&ts->ecx, ts->eax);
	push(mv, &ts->esp, 0x1);
	mov(mv, x86::mem(ts->eax + 0x6C, 1), 0x1);
	game::sub_542990(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_54E6E0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x83A64C, 4));
	mov(mv, &ts->edi, x86::mem(0x8900AC, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(0x838528, 1), ts->bl);
	game::sub_53D0A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x10, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_557B39;
    }
	mov(mv, &ts->edi, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->edi);
	game::sub_5F6C20(ts, mv);
	push(mv, &ts->esp, 0x1);
	mov(mv, x86::mem(ts->esi + 0x4D, 1), 0x1);
	game::sub_5B7ED0(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F970);
	mov(mv, x86::mem(0x83A7A4, 1), 0x1);
	mov(mv, x86::mem(0x83A644, 4), 0x1);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x11BF9934);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	add(&ts->esp, 0x14);
	push(mv, &ts->esp, 0x1);
	game::sub_5F4240(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x1C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x1E0, 4));
	game::sub_56D340(ts, mv);
	goto loc_557B78;

loc_557B39:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x797BA0);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x4D, 1), ts->bl);
	game::sub_495500(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x797580);
	push(mv, &ts->esp, ts->edx);
	game::sub_495500(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79CDEC);
	push(mv, &ts->esp, 0x11BF9934);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x20);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_54A620(ts, mv);

loc_557B78:
	push(mv, &ts->esp, 0x790000);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_557BB6;
    }
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	if (ts->eflags.zero) {
        goto loc_557BB6;
    }
	cmp(&ts->eflags, ts->eax, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0xFF);
	if (ts->eflags.zero) {
        goto loc_557BAA;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x790000);
	push(mv, &ts->esp, 0x4);
	goto loc_557BB1;

loc_557BAA:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x790000);
	push(mv, &ts->esp, ts->ebx);

loc_557BB1:
	game::sub_555D00(ts, mv);

loc_557BB6:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_776FE0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

SEH_569E80:
	mov(&ts->eax, 0x7E3CEC);
	goto ___CxxFrameHandler;
}

void sub_557BD0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77814F);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x8, 4));
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->ebp - 0x10, 4), ts->esi);
	game::sub_551DE0(ts, mv);
	xor_(&ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esi, 4), 0x79CDF4);
	mov(mv, x86::mem(ts->esi + 0x4C, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x50, 4), ts->ebx);
	mov(&ts->edx, 0x78F544);
	mov(&ts->ecx, 0x783FE5);
	mov(&ts->eax, 0x42380000);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x5C, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x64, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x68, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x6C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x70, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x74, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x78, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x7C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x84, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x80, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x88, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x8C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x90, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x94, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x58, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x98, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0xA0, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0xA4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xA8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xAC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xB0, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xB4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xB8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xBC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xC0, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xC8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xC4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xCC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xD0, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xD4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xD8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x9C, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0xDC, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0xE4, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0xE8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xEC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xF0, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xF4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xF8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xFC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x100, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x104, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x10C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x108, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x110, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x114, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x118, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x11C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xE0, 1), ts->bl);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	mov(mv, x86::mem(ts->eax + 0xAC, 1), ts->bl);
	mov(mv, &ts->ecx, x86::mem(0x83A64C, 4));
	mov(mv, &ts->edi, x86::mem(0x8900AC, 4));
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->ebp - 0x4, 1), 0x3);
	mov(mv, x86::mem(0x838528, 1), ts->bl);
	game::sub_4A22A0(ts, mv);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_54A970(ts, mv);
	push(mv, &ts->esp, 0x790000);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_557D98;
    }
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	if (ts->eflags.zero) {
        goto loc_557D98;
    }
	cmp(&ts->eflags, ts->eax, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0xFF);
	if (ts->eflags.zero) {
        goto loc_557D8C;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x790000);
	push(mv, &ts->esp, 0x4);
	goto loc_557D93;

loc_557D8C:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x790000);
	push(mv, &ts->esp, ts->ebx);

loc_557D93:
	game::sub_555D00(ts, mv);

loc_557D98:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_778120:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

loc_778128:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x54);
	goto sub_4957A0;

loc_778133:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x98);
	goto sub_4957A0;

loc_778141:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0xDC);
	goto sub_4957A0;

SEH_557BD0:
	mov(&ts->eax, 0x7E369C);
	goto ___CxxFrameHandler;
}

void sub_557DB0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_557DD0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_557DC8;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_557DC8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_557DD0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x78F544);
	mov(mv, x86::mem(ts->ecx + 0xDC, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x98, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x54, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx, 4), 0x79AC00);
	retn(mv, &ts->esp);
}

void sub_557DF0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(0x838568, 4), 0x2);
	mov(&ts->eax, 0x8382A0);
	nop();

loc_557E00:
	mov(mv, x86::mem(ts->eax, 1), 0x0);
	add(&ts->eax, 0x40);
	cmp(&ts->eflags, ts->eax, 0x8383A0);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_557E00;
    }
	mov(mv, x86::mem(0x83856C, 4), 0x0);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x8382A0);
	mov(&ts->edi, ts->edi);

loc_557E20:
	cmp(mv, &ts->eflags, x86::mem(ts->ecx, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_557E33;
    }
	add(&ts->ecx, 0x40);
	inc(&ts->eax);
	cmp(&ts->eflags, ts->ecx, 0x8383A0);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_557E20;
    }
	goto loc_557E4E;

loc_557E33:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, 0x40);
	add(&ts->ecx, 0x20);
	shl(&ts->eax, 0x6);
	push(mv, &ts->esp, ts->ecx);
	add(&ts->eax, 0x8382A0);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DC00(ts, mv);
	add(&ts->esp, 0xC);

loc_557E4E:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_557EA7;
    }
	game::sub_4A9330(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_557E87;
    }
	game::sub_4A9340(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto locret_557EBE;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFF);
	if (ts->eflags.zero) {
        goto loc_557E98;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x799EF0);
	push(mv, &ts->esp, 0x4);
	game::sub_555D00(ts, mv);
	retn(mv, &ts->esp);

loc_557E87:
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto locret_557EBE;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFF);

loc_557E98:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x799EF0);
	push(mv, &ts->esp, 0x0);
	game::sub_555D00(ts, mv);
	retn(mv, &ts->esp);

loc_557EA7:
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto locret_557EBE;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x799EF0);
	push(mv, &ts->esp, ts->eax);
	game::sub_5377A0(ts, mv);

locret_557EBE:
	retn(mv, &ts->esp);
}

void sub_557EC0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x799F48);
	mov(&ts->esi, ts->ecx);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_557EF0;
    }
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_557EF0;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x799F48);
	push(mv, &ts->esp, 0x0);
	game::sub_555D00(ts, mv);

loc_557EF0:
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xDC, 4));
	mov(mv, x86::mem(ts->esi + 0x1C8, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x799F48);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C8, 4));
	mov(mv, x86::mem(ts->ecx + 0x4, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_557F20(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x777D78);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	game::sub_552330(ts, mv);
	mov(&ts->ecx, 0x832DAC);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	mov(mv, x86::mem(ts->esi, 4), 0x79CE04);
	game::sub_488AE0(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x154, 1), 0x0);
	mov(mv, x86::mem(ts->esi + 0x155, 1), 0x0);
	game::sub_550DD0(ts, mv);
	push(mv, &ts->esp, 0x790000);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_557FB5;
    }
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	if (ts->eflags.zero) {
        goto loc_557FB5;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFF);
	if (ts->eflags.zero) {
        goto loc_557FA7;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x790000);
	push(mv, &ts->esp, 0x4);
	goto loc_557FB0;

loc_557FA7:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x790000);
	push(mv, &ts->esp, 0x0);

loc_557FB0:
	game::sub_555D00(ts, mv);

loc_557FB5:
	mov(mv, &ts->eax, x86::mem(0x8384D8, 4));
	mov(&ts->ecx, ts->eax);
	push(mv, &ts->esp, 0x1);
	mov(mv, x86::mem(ts->eax + 0x6C, 1), 0x1);
	game::sub_542990(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_54E6E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_777D70:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto ??1strstreambuf@std@@UAE@XZ_5;

SEH_569610:
	mov(&ts->eax, 0x7E3B38);
	goto ___CxxFrameHandler;
}

void sub_557FF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_558010(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_558008;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_558008:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_558010(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x79CE04);
	goto ??1strstreambuf@std@@UAE@XZ_5;
}

void sub_558020(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x79D160);
	game::sub_50D510(ts, mv);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x79D148);
	game::sub_50D510(ts, mv);
	mov(mv, &ts->al, x86::mem(0x8383B4, 1));
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_55805E;
    }
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x79D0A8);
	game::sub_50D510(ts, mv);
	add(&ts->esp, 0x8);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_55805E:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebp);
	game::sub_526C40(ts, mv);
	mov(mv, x86::mem(ts->ebp + 0x324, 4), ts->eax);
	mov(mv, x86::mem(ts->ebp + 0x32F, 1), 0x0);
	mov(mv, x86::mem(ts->ebp + 0x330, 4), 0x0);
	mov(mv, &ts->eax, x86::mem(0x838974, 4));
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(&ts->ebx, 0xFF);
	if (ts->eflags.zero) {
        goto loc_55816D;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x79D06C);
	game::sub_50D510(ts, mv);
	push(mv, &ts->esp, 0x838640);
	push(mv, &ts->esp, 0x79D148);
	game::sub_50D510(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x838970, 4));
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5580E5;
    }
	mov(mv, &ts->ecx, x86::mem(0x838960, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x79D020);
	game::sub_50D510(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x838970, 4));
	mov(mv, &ts->eax, x86::mem(0x838960, 4));
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x8637B0);
	game::sub_55DC20(ts, mv);

loc_5580E5:
	mov(mv, &ts->edi, x86::mem(0x838964, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x320, 4));
	mov(&ts->esi, ts->edi);

loc_5580F3:
	mov(mv, &ts->dl, x86::mem(ts->eax, 1));
	mov(&ts->cl, ts->dl);
	cmp(mv, &ts->eflags, ts->dl, x86::mem(ts->esi, 1));
	if (!ts->eflags.zero) {
        goto loc_558117;
    }
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_558113;
    }
	mov(mv, &ts->dl, x86::mem(ts->eax + 0x1, 1));
	mov(&ts->cl, ts->dl);
	cmp(mv, &ts->eflags, ts->dl, x86::mem(ts->esi + 0x1, 1));
	if (!ts->eflags.zero) {
        goto loc_558117;
    }
	add(&ts->eax, 0x2);
	add(&ts->esi, 0x2);
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_5580F3;
    }

loc_558113:
	xor_(&ts->eax, ts->eax);
	goto loc_55811C;

loc_558117:
	sbb(&ts->eax, ts->eax);
	sbb(&ts->eax, 0xFFFFFFFF);

loc_55811C:
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_55814D;
    }
	mov(mv, &ts->eax, x86::mem(0x838960, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x324, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x79CF90);
	game::sub_50D510(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x838960, 4));
	mov(mv, x86::mem(ts->ebp + 0x320, 4), ts->edx);
	mov(mv, &ts->edi, x86::mem(0x838964, 4));
	add(&ts->esp, 0x10);

loc_55814D:
	push(mv, &ts->esp, ts->edi);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55815D;
    }
	mov(mv, &ts->ebx, x86::mem(ts->eax + 0x1C, 4));

loc_55815D:
	mov(mv, &ts->eax, x86::mem(0x838974, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	goto loc_558187;

loc_55816D:
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x320, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55821B;
    }
	mov(mv, &ts->ebx, x86::mem(ts->eax + 0x1C, 4));

loc_558187:
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_55821B;
    }
	push(mv, &ts->esp, 0x79CF28);
	game::sub_50D510(ts, mv);
	push(mv, &ts->esp, 0x790024);
	game::sub_50B9C0(ts, mv);
	push(mv, &ts->esp, 0x790014);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	game::sub_50B9C0(ts, mv);
	push(mv, &ts->esp, 0x78FCD8);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->eax);
	game::sub_50B9C0(ts, mv);
	push(mv, &ts->esp, 0x790000);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->eax);
	game::sub_50B9C0(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x38, 4), ts->eax);
	game::sub_50CE30(ts, mv);
	mov(&ts->esi, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x20);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_558209;
    }
	mov(mv, &ts->ebx, x86::mem(ts->eax + 0x1C, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x79CEF8);
	game::sub_50D510(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_55821B;
    }
	push(mv, &ts->esp, 0x79CEC0);
	goto loc_55820E;

loc_558209:
	push(mv, &ts->esp, 0x79CE8C);

loc_55820E:
	game::sub_50D510(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->ebx, 0xFF);

loc_55821B:
	mov(mv, &ts->eax, x86::mem(0x7F6DE0, 4));
	mov(&ts->ecx, 0xCE);
	mov(&ts->esi, ts->ebp);
	mov(&ts->edi, 0x838640);
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));
	mov(mv, x86::mem(0x838974, 4), ts->eax);
	inc(&ts->eax);
	mov(mv, x86::mem(0x7F6DE0, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x838964, 4));
	push(mv, &ts->esp, 0x5542A0);
	push(mv, &ts->esp, ts->eax);
	game::sub_50B8E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_558270;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x320, 4));
	mov(mv, &ts->eax, x86::mem(0x838964, 4));
	push(mv, &ts->esp, 0x838640);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x16);
	game::sub_555D00(ts, mv);

loc_558270:
	mov(mv, &ts->ecx, x86::mem(0x838974, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x79CE58);
	game::sub_50D510(ts, mv);
	push(mv, &ts->esp, 0x79CE20);
	game::sub_50D510(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x838974, 4));
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_5582A0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x338);
	lea(mv, &ts->ecx, x86::mem(ts->esp, 4));
	game::sub_4FF250(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x348, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x344, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_43FBC0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x348, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x34C, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x334, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x338, 1), ts->al);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x330, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x334, 4), ts->edx);
	game::sub_558020(ts, mv);
	add(&ts->esp, 0x348);
	retn(mv, &ts->esp);
}

void sub_558310(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5582A0(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_558330(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	sub(&ts->esp, 0x200);
	game::sub_4FF9D0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_55834D;
    }
	mov(&ts->edx, 0xC01A6F63);
	game::sub_4FF9D0(ts, mv);

loc_55834D:
	push(mv, &ts->esp, 0x200);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43DC00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x214, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x21C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x214, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_5582A0(ts, mv);
	add(&ts->esp, 0x21C);
	retn(mv, &ts->esp);
}

void sub_558390(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x338);
	lea(mv, &ts->ecx, x86::mem(ts->esp, 4));
	game::sub_4FF250(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x348, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x344, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_43FBC0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x348, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x34C, 4));
	mov(&ts->eax, 0x1);
	mov(mv, x86::mem(ts->esp + 0x334, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x338, 1), ts->al);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x320, 4), 0x639);
	mov(mv, x86::mem(ts->esp + 0x324, 4), 0x34DC1BEC);
	mov(mv, x86::mem(ts->esp + 0x328, 4), 0xB4EDEB6D);
	mov(mv, x86::mem(ts->esp + 0x32C, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x330, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x334, 4), ts->edx);
	game::sub_558020(ts, mv);
	add(&ts->esp, 0x348);
	retn(mv, &ts->esp);
}

void sub_558430(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	sub(&ts->esp, 0x200);
	game::sub_4FF9D0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_55844D;
    }
	mov(&ts->edx, 0xC01A6F63);
	game::sub_4FF9D0(ts, mv);

loc_55844D:
	push(mv, &ts->esp, 0x200);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43DC00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x214, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x21C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x214, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_558390(ts, mv);
	add(&ts->esp, 0x21C);
	retn(mv, &ts->esp);
}

void sub_558490(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x338);
	lea(mv, &ts->ecx, x86::mem(ts->esp, 4));
	game::sub_4FF250(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x358, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x354, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_43FBC0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x350, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x358, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x354, 4));
	mov(mv, x86::mem(ts->esp + 0x31C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x348, 4));
	mov(mv, x86::mem(ts->esp + 0x32C, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x320, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x34C, 4));
	mov(mv, x86::mem(ts->esp + 0x324, 4), ts->edx);
	mov(mv, &ts->dl, x86::mem(ts->esp + 0x35C, 1));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x338, 4), 0x1);
	mov(mv, x86::mem(ts->esp + 0x32C, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x334, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x33C, 1), ts->dl);
	game::sub_558020(ts, mv);
	add(&ts->esp, 0x348);
	retn(mv, &ts->esp);
}

void sub_558540(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_558490(ts, mv);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp);
}

void sub_558570(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	sub(&ts->esp, 0x200);
	game::sub_4FF9D0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_55858D;
    }
	mov(&ts->edx, 0xC01A6F63);
	game::sub_4FF9D0(ts, mv);

loc_55858D:
	push(mv, &ts->esp, 0x200);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43DC00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x220, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x228, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x220, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x220, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x224, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x224, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_558490(ts, mv);
	add(&ts->esp, 0x22C);
	retn(mv, &ts->esp);
}

void sub_5585E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_558490(ts, mv);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp);
}

void sub_558610(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	sub(&ts->esp, 0x200);
	game::sub_4FF9D0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_55862D;
    }
	mov(&ts->edx, 0xC01A6F63);
	game::sub_4FF9D0(ts, mv);

loc_55862D:
	push(mv, &ts->esp, 0x200);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43DC00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x21C, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x224, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x21C, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x21C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x224, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_558490(ts, mv);
	add(&ts->esp, 0x22C);
	retn(mv, &ts->esp);
}

void sub_558680(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x338);
	lea(mv, &ts->ecx, x86::mem(ts->esp, 4));
	game::sub_4FF250(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x364, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x360, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_43FBC0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x350, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x358, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x354, 4));
	mov(mv, x86::mem(ts->esp + 0x30C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x35C, 4));
	mov(mv, x86::mem(ts->esp + 0x318, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x348, 4));
	mov(mv, x86::mem(ts->esp + 0x310, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x360, 4));
	mov(mv, x86::mem(ts->esp + 0x314, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x368, 4));
	mov(mv, x86::mem(ts->esp + 0x32C, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x324, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x34C, 4));
	mov(mv, x86::mem(ts->esp + 0x328, 4), ts->edx);
	mov(mv, &ts->dl, x86::mem(ts->esp + 0x364, 1));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x338, 4), 0x2);
	mov(mv, x86::mem(ts->esp + 0x334, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x33C, 1), ts->dl);
	game::sub_558020(ts, mv);
	add(&ts->esp, 0x348);
	retn(mv, &ts->esp);
}

void sub_558750(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_558680(ts, mv);
	add(&ts->esp, 0x2C);
	retn(mv, &ts->esp);
}

void sub_558790(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x24, 4));
	sub(&ts->esp, 0x200);
	game::sub_4FF9D0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_5587AD;
    }
	mov(&ts->edx, 0xC01A6F63);
	game::sub_4FF9D0(ts, mv);

loc_5587AD:
	push(mv, &ts->esp, 0x200);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43DC00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x22C, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x234, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x22C, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x22C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x22C, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x230, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x230, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x230, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x230, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_558680(ts, mv);
	add(&ts->esp, 0x238);
	retn(mv, &ts->esp);
}

void sub_558820(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_558680(ts, mv);
	add(&ts->esp, 0x2C);
	retn(mv, &ts->esp);
}

void sub_558860(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	sub(&ts->esp, 0x200);
	game::sub_4FF9D0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_55887D;
    }
	mov(&ts->edx, 0xC01A6F63);
	game::sub_4FF9D0(ts, mv);

loc_55887D:
	push(mv, &ts->esp, 0x200);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43DC00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x228, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x230, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x228, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x228, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x228, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x230, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x230, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x230, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_558680(ts, mv);
	add(&ts->esp, 0x238);
	retn(mv, &ts->esp);
}

void sub_5588F0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x338);
	lea(mv, &ts->ecx, x86::mem(ts->esp, 4));
	game::sub_4FF250(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x368, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x364, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_43FBC0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x35C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x350, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x354, 4));
	mov(mv, x86::mem(ts->esp + 0x310, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x358, 4));
	mov(mv, x86::mem(ts->esp + 0x30C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x360, 4));
	mov(mv, x86::mem(ts->esp + 0x31C, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x36C, 4));
	mov(mv, x86::mem(ts->esp + 0x314, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x364, 4));
	mov(mv, x86::mem(ts->esp + 0x318, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x368, 4));
	mov(mv, x86::mem(ts->esp + 0x328, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x320, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x348, 4));
	mov(mv, x86::mem(ts->esp + 0x324, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x34C, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x338, 4), 0x3);
	mov(mv, x86::mem(ts->esp + 0x330, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x334, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x33C, 1), 0x1);
	game::sub_558020(ts, mv);
	add(&ts->esp, 0x348);
	retn(mv, &ts->esp);
}

void sub_5589D0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x2C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x28, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_5588F0(ts, mv);
	add(&ts->esp, 0x30);
	retn(mv, &ts->esp);
}

void sub_558A20(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x2C, 4));
	sub(&ts->esp, 0x200);
	game::sub_4FF9D0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_558A3D;
    }
	mov(&ts->edx, 0xC01A6F63);
	game::sub_4FF9D0(ts, mv);

loc_558A3D:
	push(mv, &ts->esp, 0x200);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43DC00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x234, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x23C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x234, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x234, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x234, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x234, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x234, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x234, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x234, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x234, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x234, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5588F0(ts, mv);
	add(&ts->esp, 0x23C);
	retn(mv, &ts->esp);
}

void sub_558AC0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x338);
	lea(mv, &ts->ecx, x86::mem(ts->esp, 4));
	game::sub_4FF250(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x344, 4));
	game::sub_4FF9D0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_558AE9;
    }
	mov(&ts->edx, 0xC01A6F63);
	game::sub_4FF9D0(ts, mv);

loc_558AE9:
	push(mv, &ts->esp, 0x300);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43DC00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x348, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x34C, 4));
	mov(&ts->eax, 0x1);
	mov(mv, x86::mem(ts->esp + 0x334, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x338, 1), ts->al);
	mov(mv, x86::mem(ts->esp + 0x339, 1), ts->al);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x310, 4), 0x639);
	mov(mv, x86::mem(ts->esp + 0x314, 4), 0x34DC1BEC);
	mov(mv, x86::mem(ts->esp + 0x328, 4), 0xB4EDEB6D);
	mov(mv, x86::mem(ts->esp + 0x32C, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x330, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x334, 4), ts->edx);
	game::sub_558020(ts, mv);
	add(&ts->esp, 0x348);
	retn(mv, &ts->esp);
}

void sub_558B70(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	xor_(&ts->esi, ts->esi);
	cmp(&ts->eflags, ts->eax, 0x51);
	if (ts->eflags.zero) {
        goto loc_558B81;
    }
	cmp(&ts->eflags, ts->eax, 0x71);
	if (!ts->eflags.zero) {
        goto loc_558BF3;
    }

loc_558B81:
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_558B96;
    }
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x1C, 4));

loc_558B96:
	game::sub_4A8C50(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_558BF3;
    }
	mov(mv, &ts->eax, x86::mem(0x8654A4, 4));
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.zero) {
        goto loc_558BBC;
    }
	cmp(&ts->eflags, ts->eax, 0x6);
	if (!ts->eflags.zero) {
        goto loc_558BF3;
    }
	mov(&ts->ecx, 0x865480);
	game::sub_571250(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_558BF3;
    }

loc_558BBC:
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_558BF3;
    }
	push(mv, &ts->esp, 0x9DE6B485);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x42CA53FC);
	push(mv, &ts->esp, 0x42CA53FC);
	push(mv, &ts->esp, 0x919B1DD9);
	push(mv, &ts->esp, 0x541389E5);
	push(mv, &ts->esp, 0x1C101778);
	push(mv, &ts->esp, 0x783FE5);
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_558790(ts, mv);
	add(&ts->esp, 0x24);

loc_558BF3:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_558C00(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->ebp + 0x5251, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_558C1B;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x10C, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->eax + 0x5C, 4));

loc_558C1B:
	cmp(mv, &ts->eflags, x86::mem(ts->ebp, 1), 0x0);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_558E29;
    }
	mov(mv, &ts->al, x86::mem(ts->ebp + 0x1, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_558D7F;
    }
	mov(mv, &ts->al, x86::mem(ts->ebp + 0x2, 1));
	xor_(&ts->esi, ts->esi);
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, x86::mem(ts->ebp + 0x34, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_558C63;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x10C, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x44, 4));
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->ebp + 0xC, 4));
	game::sub_50B0C0(ts, mv);
	goto loc_558C67;

loc_558C63:
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x20, 4));

loc_558C67:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xD4, 4));
	xor_(&ts->bl, ts->bl);
	cmp(&ts->eflags, ts->eax, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 1), ts->bl);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_558CB7;
    }
	goto loc_558C80;

loc_558C80:
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x10C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x40, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x8, 4));
	mov(&ts->ecx, ts->esi);
	imul(&ts->ecx, ts->ecx, 0x88);
	push(mv, &ts->esp, ts->eax);
	add(&ts->ecx, ts->edx);
	game::sub_504FA0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xD4, 4));
	inc(&ts->bl);
	movzx(&ts->esi, ts->bl);
	cmp(&ts->eflags, ts->esi, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 1), ts->bl);
	if (ts->eflags.carry) {
        goto loc_558C80;
    }

loc_558CB7:
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0xE4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_558CDF;
    }

loc_558CC1:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->ebp);
	game::sub_54D4B0(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->ebp + 0x2, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_558CD8;
    }
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->ebp);
	game::sub_54E020(ts, mv);

loc_558CD8:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_558CC1;
    }

loc_558CDF:
	mov(&ts->ebx, 0x1);
	lea(mv, &ts->edi, x86::mem(ts->ebp + 0x38, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x13);
	nop();

loc_558CF0:
	test(mv, &ts->eflags, x86::mem(ts->ebp + 0x34, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_558D5F;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xD4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 1), 0x0);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_558D5F;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_558D10;

loc_558D10:
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	imul(&ts->eax, ts->eax, 0x88);
	mov(mv, &ts->esi, x86::mem(ts->edi, 4));
	add(&ts->eax, ts->ecx);
	xor_(&ts->ecx, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->eax + 0x8, 4));

loc_558D22:
	mov(&ts->eax, 0x1);
	shl(&ts->eax, ts->cl);
	test(&ts->eflags, ts->ebx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_558D3F;
    }
	mov(mv, &ts->eax, x86::mem(ts->edx, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_558D39;
    }
	sub(&ts->eax, ts->esi);
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	goto loc_558D3F;

loc_558D39:
	mov(mv, x86::mem(ts->edx, 4), 0x0);

loc_558D3F:
	inc(&ts->ecx);
	add(&ts->edx, 0x4);
	cmp(&ts->eflags, ts->ecx, 0x20);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_558D22;
    }
	mov(mv, &ts->al, x86::mem(ts->esp + 0x10, 1));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0xD4, 4));
	inc(&ts->al);
	mov(mv, x86::mem(ts->esp + 0x10, 1), ts->al);
	movzx(&ts->eax, ts->al);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.carry) {
        goto loc_558D10;
    }

loc_558D5F:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->edi, 4), 0x0);
	shl(&ts->ebx, 0x1);
	add(&ts->edi, 0x4);
	dec(&ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_558CF0;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x30, 4));
	mov(mv, x86::mem(ts->ebp + 0x2C, 4), ts->ecx);

loc_558D7F:
	cmp(mv, &ts->eflags, x86::mem(ts->ebp, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_558E29;
    }
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x20, 4));
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->esi);

loc_558D91:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(&ts->ebx, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_558DA5;
    }
	cmp(&ts->eflags, ts->esi, 0x14);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_558DA5;
    }
	mov(&ts->ebx, 0x14);

loc_558DA5:
	mov(mv, &ts->al, x86::mem(ts->ebp + 0x5250, 1));
	xor_(&ts->edx, ts->edx);
	test(&ts->eflags, ts->al, ts->al);
	setnz(ts->eflags, &ts->dl);
	dec(&ts->edx);
	mov(mv, x86::mem(0x7F7C8C, 4), ts->edx);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0xE4, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_558DF5;
    }

loc_558DC3:
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x4C, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	mov(mv, x86::mem(ts->edi + 0x30, 4), ts->ebp);
	mov(mv, x86::mem(ts->edi + 0x34, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_558DEB;
    }

loc_558DD7:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	game::sub_54CE60(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_558DD7;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));

loc_558DEB:
	test(&ts->eflags, ts->eax, ts->eax);
	mov(&ts->edi, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_558DC3;
    }
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x20, 4));

loc_558DF5:
	mov(&ts->ecx, ts->ebp);
	game::sub_541FC0(ts, mv);
	mov(&ts->ecx, ts->ebp);
	game::sub_5559C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x411C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_558E14;
    }
	mov(&ts->ecx, ts->ebp);
	game::sub_541FC0(ts, mv);

loc_558E14:
	sub(&ts->esi, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->esi);
	mov(mv, x86::mem(ts->ebp + 0x5250, 1), 0x0);
	if (!ts->eflags.zero) {
        goto loc_558D91;
    }
	goto loc_558E5B;

loc_558E29:
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0xE4, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_558E5B;
    }

loc_558E33:
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x4C, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, x86::mem(ts->edi + 0x30, 4), ts->ebp);
	mov(mv, x86::mem(ts->edi + 0x34, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_558E54;
    }

loc_558E44:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	game::sub_54CE60(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_558E44;
    }

loc_558E54:
	mov(mv, &ts->edi, x86::mem(ts->edi + 0x4, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_558E33;
    }

loc_558E5B:
	mov(mv, &ts->al, x86::mem(ts->ebp + 0x5251, 1));
	test(&ts->eflags, ts->al, ts->al);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_558E73;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x10C, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->eax + 0x60, 4));

loc_558E73:
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp, 0x8);
}

void sub_558E80(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7F9428, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(0x83A9C8, 4), 0x0);
	mov(mv, x86::mem(0x8637C8, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_558EAC;
    }
	game::sub_4D9730(ts, mv);
	mov(mv, x86::mem(0x7F9428, 4), 0x0);

loc_558EAC:
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto locret_558ED7;
    }
	mov(mv, &ts->eax, x86::mem(0x8384C8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	game::sub_555D00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	goto sub_52CDD0;

locret_558ED7:
	retn(mv, &ts->esp);
}

void sub_558EE0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_558EF5;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	game::sub_558C00(ts, mv);

locret_558EF5:
	retn(mv, &ts->esp);
}

void sub_558F00(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_558F4F;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	game::sub_558C00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto locret_558F4F;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_558F38;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_5376F0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	goto sub_50C680;

loc_558F38:
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, 0x8637B0);
	game::sub_542390(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	goto sub_50C680;

locret_558F4F:
	retn(mv, &ts->esp);
}

void sub_558F50(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x83852C, 4));
	push(mv, &ts->esp, ts->ebx);
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_558F6C;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(0x83852C, 4), ts->ebx);

loc_558F6C:
	push(mv, &ts->esp, 0x8384E0);
	push(mv, &ts->esp, 0x79D23C);
	game::sub_50D510(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_558F97;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x79D200);
	game::sub_50D510(ts, mv);
	add(&ts->esp, 0x8);

loc_558F97:
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0xC, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ebp + 0xC, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_558FFE;
    }
	mov(mv, &ts->ecx, x86::mem(0x7F44FC, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x8384E0);
	push(mv, &ts->esp, 0x79D1C4);
	game::sub_50D510(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	game::sub_58F740(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->ecx, ts->eax);
	game::sub_58AD20(ts, mv);
	mov(mv, x86::mem(0x850084, 4), 0x1);
	game::sub_4B2940(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5591BC;
    }
	mov(mv, &ts->edx, x86::mem(0x7F44FC, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x8384E0);
	game::sub_5377A0(ts, mv);
	goto loc_5591BC;

loc_558FFE:
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x8384E0);
	push(mv, &ts->esp, 0x79D18C);
	game::sub_50D510(ts, mv);
	push(mv, &ts->esp, 0x8384E0);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_55902F;
    }
	push(mv, &ts->esp, 0x47FF4E7C);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_55904A;
    }

loc_55902F:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_55909A;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, 0x8384E0);
	push(mv, &ts->esp, 0x47FF4E7C);
	game::sub_52C570(ts, mv);

loc_55904A:
	mov(&ts->edi, ts->eax);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_55909A;
    }
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x4C, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_559099;
    }
	goto loc_559060;

loc_559060:
	push(mv, &ts->esp, 0x79031C);
	game::sub_505450(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55907D;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_559060;
    }
	goto loc_559099;

loc_55907D:
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_559099;
    }
	cmp(mv, &ts->eflags, ts->esi, x86::mem(ts->edi + 0x54, 4));
	if (ts->eflags.zero) {
        goto loc_559096;
    }
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->edi + 0x54, 4), ts->esi);
	game::sub_517720(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x54, 4));
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ebx);

loc_559096:
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ebx);

loc_559099:
	pop(mv, &ts->esp, ts->esi);

loc_55909A:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xC, 4));
	cmp(&ts->eflags, ts->eax, 0x7567616D);
	pop(mv, &ts->esp, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_5590DE;
    }
	mov(&ts->edx, 0x331F4F58);
	game::sub_4FF9D0(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_5590BD;
    }
	mov(&ts->edx, 0xC01A6F63);
	game::sub_4FF9D0(ts, mv);

loc_5590BD:
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0x8384E0);
	game::sub_558540(ts, mv);
	add(&ts->esp, 0x18);
	goto loc_5591BC;

loc_5590DE:
	cmp(&ts->eflags, ts->eax, 0x66756C6C);
	if (!ts->eflags.zero) {
        goto loc_55911E;
    }
	mov(&ts->edx, 0xD155595A);
	game::sub_4FF9D0(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_5590FD;
    }
	mov(&ts->edx, 0xC01A6F63);
	game::sub_4FF9D0(ts, mv);

loc_5590FD:
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0x8384E0);
	game::sub_558540(ts, mv);
	add(&ts->esp, 0x18);
	goto loc_5591BC;

loc_55911E:
	cmp(&ts->eflags, ts->eax, 0x70617373);
	if (!ts->eflags.zero) {
        goto loc_55915B;
    }
	mov(&ts->edx, 0xB5EAA702);
	game::sub_4FF9D0(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_55913D;
    }
	mov(&ts->edx, 0xC01A6F63);
	game::sub_4FF9D0(ts, mv);

loc_55913D:
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0x8384E0);
	game::sub_558540(ts, mv);
	add(&ts->esp, 0x18);
	goto loc_5591BC;

loc_55915B:
	cmp(&ts->eflags, ts->eax, 0x61737461);
	if (!ts->eflags.zero) {
        goto loc_559169;
    }
	push(mv, &ts->esp, 0x1C098DDF);
	goto loc_55919B;

loc_559169:
	cmp(&ts->eflags, ts->eax, 0x696E7670);
	if (!ts->eflags.zero) {
        goto loc_559196;
    }
	push(mv, &ts->esp, 0x4AD41E75);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0x8384E0);
	game::sub_5585E0(ts, mv);
	add(&ts->esp, 0x18);
	goto loc_5591BC;

loc_559196:
	push(mv, &ts->esp, 0x7AA591CC);

loc_55919B:
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0x8384E0);
	game::sub_558540(ts, mv);
	add(&ts->esp, 0x1C);

loc_5591BC:
	mov(mv, &ts->ecx, x86::mem(0x8500D0, 4));
	pop(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(0x8500CC, 1), ts->bl);
	mov(mv, x86::mem(0x8500D4, 4), ts->ecx);
	mov(mv, x86::mem(0x8500D0, 4), 0x11);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_5591E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x778174);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x170);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_55922E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_556640(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_55922E:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_778160:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79D278);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_5591E0:
	mov(&ts->eax, 0x7E36C0);
	goto ___CxxFrameHandler;
}

void sub_559240(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0xB4, 4));
	lea(mv, &ts->eax, x86::mem(ts->ebx + 0xB4, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_55925E;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_559264;

loc_55925E:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0xBC, 4));

loc_559264:
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x2C, 4));
	mov(mv, &ts->eax, x86::mem(0x8389A8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x85AD40);
	game::sub_514280(ts, mv);
	mov(&ts->ecx, 0x838980);
	mov(&ts->esi, ts->eax);
	game::sub_521530(ts, mv);
	add(&ts->esi, ts->eax);
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_5592DD;
    }
	cmp(mv, &ts->eflags, x86::mem(0x861E74, 4), ts->esi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_5592DD;
    }
	mov(mv, &ts->ecx, x86::mem(0x7FA1B8, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_52CEF0(ts, mv);
	xor_(&ts->ecx, ts->ecx);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_5592B8;
    }
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->ecx);

loc_5592B8:
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0xD1AC60BE);
	push(mv, &ts->esp, 0x78FA24);
	push(mv, &ts->esp, ts->edx);
	game::sub_558430(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x838970, 4), 0x34DC1BEC);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_5592DD:
	mov(&ts->ecx, 0x838980);
	xor_(&ts->bl, ts->bl);
	game::sub_5215D0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_559339;
    }
	mov(mv, &ts->esi, x86::mem(0x8389C8, 4));
	mov(&ts->edx, 0x40);

loc_5592F8:
	cmp(&ts->eflags, ts->esi, 0x8389C8);
	if (ts->eflags.zero) {
        goto loc_559331;
    }
	mov(&ts->eax, ts->esi);
	cmp(&ts->eflags, ts->eax, 0x8389C8);
	if (ts->eflags.zero) {
        goto loc_559331;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_559310:
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	cmp(&ts->eflags, ts->ecx, 0x40);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_559328;
    }
	cmp(&ts->eflags, ts->ecx, 0x43);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_559328;
    }
	cmp(&ts->eflags, ts->ecx, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_559328;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_559339;
    }

loc_559328:
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->eax, 0x8389C8);
	if (!ts->eflags.zero) {
        goto loc_559310;
    }

loc_559331:
	inc(&ts->edx);
	cmp(&ts->eflags, ts->edx, 0x43);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5592F8;
    }
	goto loc_55933B;

loc_559339:
	mov(&ts->bl, 0x1);

loc_55933B:
	test(&ts->eflags, ts->edi, ts->edi);
	mov(&ts->esi, 0x31FBC167);
	if (ts->eflags.zero) {
        goto loc_559360;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x564B8CB6);
	mov(&ts->ecx, ts->edi);
	game::sub_61B500(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x40);
	if (!ts->eflags.zero) {
        goto loc_559360;
    }
	test(&ts->eflags, ts->bl, ts->bl);
	if (ts->eflags.zero) {
        goto loc_559360;
    }
	mov(&ts->esi, 0xEC8616FD);

loc_559360:
	mov(mv, &ts->eax, x86::mem(0x7FA1B8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_52CEF0(ts, mv);
	xor_(&ts->ecx, ts->ecx);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_559380;
    }
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->ecx);

loc_559380:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x34DC1BCF);
	push(mv, &ts->esp, 0x34DC1BCF);
	push(mv, &ts->esp, 0x51123592);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x78F2F8);
	push(mv, &ts->esp, ts->edx);
	game::sub_558790(ts, mv);
	movsx(mv, &ts->eax, x86::mem(0x8380B8, 1));
	add(&ts->esp, 0x24);
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	mov(mv, x86::mem(0x838970, 4), 0x34DC1BCF);
	if (ts->eflags.zero) {
        goto loc_5593D3;
    }
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_458520(ts, mv);

loc_5593D3:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_5593E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x778284);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDF86227A);
	push(mv, &ts->esp, 0x42ADB44C);
	push(mv, &ts->esp, ts->eax);
	game::sub_495460(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x838998, 4));
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->eax, 0x5);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_55941F;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	jmp(x86::mem(0x559A94, 4));

loc_559426:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xA2285688);
	push(mv, &ts->esp, ts->eax);
	game::sub_495520(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xC318FF76);
	push(mv, &ts->esp, ts->eax);
	game::sub_495520(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x2AADAC5);
	push(mv, &ts->esp, 0x42ADB44C);
	push(mv, &ts->esp, ts->eax);
	game::sub_495460(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8389AC, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	add(&ts->esp, 0x1C);
	call(ts, mv, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_4A5B10(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_559481;
    }
	push(mv, &ts->esp, 0x3F800000);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1);
	game::sub_4C1860(ts, mv);
	add(&ts->esp, 0xC);

loc_559481:
	push(mv, &ts->esp, 0x5C);
	mov(mv, x86::mem(ts->esi + 0x168, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0x6C4BF67C);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_5594C9;
    }
	mov(mv, &ts->ecx, x86::mem(0x7FA204, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xC8D23393);
	push(mv, &ts->esp, 0xF7E5B04A);
	push(mv, &ts->esp, 0x22);
	mov(&ts->ecx, ts->eax);
	game::sub_53A9D0(ts, mv);
	goto loc_5594CB;

loc_5594C9:
	xor_(&ts->eax, ts->eax);

loc_5594CB:
	or_(&ts->ecx, 0xFFFFFFFF);
	mov(mv, x86::mem(ts->eax + 0x54, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	mov(&ts->ecx, ts->esi);
	game::sub_556930(ts, mv);
	goto loc_559A14;

loc_5594E9:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x2AADAC5);
	push(mv, &ts->esp, 0x42ADB44C);
	push(mv, &ts->esp, ts->eax);
	game::sub_495460(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xA2285688);
	push(mv, &ts->esp, ts->eax);
	game::sub_4954E0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xC318FF76);
	push(mv, &ts->esp, ts->eax);
	game::sub_4954E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8389AC, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	add(&ts->esp, 0x1C);
	call(ts, mv, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_4A5B10(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_559544;
    }
	push(mv, &ts->esp, 0x3F800000);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1);
	game::sub_4C1860(ts, mv);
	add(&ts->esp, 0xC);

loc_559544:
	push(mv, &ts->esp, 0x60);
	mov(mv, x86::mem(ts->esi + 0x168, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0xFD036061);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x2);
	if (ts->eflags.zero) {
        goto loc_559583;
    }
	push(mv, &ts->esp, 0x28BF66F6);
	push(mv, &ts->esp, 0x76167B7E);
	push(mv, &ts->esp, 0x23);
	push(mv, &ts->esp, 0x4);
	mov(&ts->ecx, ts->eax);
	game::sub_53AA80(ts, mv);
	goto loc_559585;

loc_559583:
	xor_(&ts->eax, ts->eax);

loc_559585:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	or_(&ts->edi, 0xFFFFFFFF);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	push(mv, &ts->esp, 0x5C);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x4);
	if (ts->eflags.zero) {
        goto loc_5595E0;
    }
	mov(mv, &ts->ecx, x86::mem(0x7FA204, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xC8D23393);
	push(mv, &ts->esp, 0xF7E5B04A);
	push(mv, &ts->esp, 0x22);
	mov(&ts->ecx, ts->eax);
	game::sub_53A9D0(ts, mv);
	mov(mv, x86::mem(ts->eax + 0x54, 4), ts->edi);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	goto loc_559A14;

loc_5595E0:
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->eax + 0x54, 4), ts->edi);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	goto loc_559A14;

loc_5595F6:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xA2285688);
	push(mv, &ts->esp, ts->eax);
	game::sub_4954E0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xC318FF76);
	push(mv, &ts->esp, ts->eax);
	game::sub_4954E0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x2AADAC5);
	push(mv, &ts->esp, 0x42ADB44C);
	push(mv, &ts->esp, ts->eax);
	game::sub_495460(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8389AC, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	add(&ts->esp, 0x1C);
	call(ts, mv, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_4A5B10(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_559651;
    }
	push(mv, &ts->esp, 0x3F800000);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1);
	game::sub_4C1860(ts, mv);
	add(&ts->esp, 0xC);

loc_559651:
	mov(mv, x86::mem(ts->esi + 0x168, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0xDE7ACEC2);
	mov(&ts->edi, 0x23);
	mov(&ts->ebx, 0x6);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_559670:
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x8392C0);
	game::sub_6103F0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5596C8;
    }
	push(mv, &ts->esp, 0x5C);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5596B4;
    }
	mov(mv, &ts->ecx, x86::mem(0x7FA204, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x3F4B9E43);
	push(mv, &ts->esp, 0xE803E1CD);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->eax);
	game::sub_53A9D0(ts, mv);
	goto loc_5596B6;

loc_5596B4:
	xor_(&ts->eax, ts->eax);

loc_5596B6:
	or_(&ts->ecx, 0xFFFFFFFF);
	mov(mv, x86::mem(ts->eax + 0x54, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));

loc_5596C8:
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, 0x2E);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_559670;
    }
	goto loc_559A14;

loc_5596D3:
	mov(mv, &ts->ecx, x86::mem(0x8389AC, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_4A5B10(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_559720;
    }
	push(mv, &ts->esp, 0x1);
	game::sub_4C18B0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_559703;
    }
	push(mv, &ts->esp, 0x3F800000);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1);
	goto loc_559718;

loc_559703:
	push(mv, &ts->esp, 0x0);
	game::sub_4C18B0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_559720;
    }
	push(mv, &ts->esp, 0x3F800000);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->eax);

loc_559718:
	game::sub_4C1860(ts, mv);
	add(&ts->esp, 0xC);

loc_559720:
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0x264A5F10);
	mov(mv, &ts->eax, x86::mem(0x83898C, 4));
	or_(&ts->ebx, 0xFFFFFFFF);
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.zero) {
        goto loc_559750;
    }
	push(mv, &ts->esp, 0x799A58);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x1EB104C8);
	push(mv, &ts->esp, 0xC591C4B6);
	push(mv, &ts->esp, 0xA3);
	mov(&ts->ecx, ts->esi);
	game::sub_53AB30(ts, mv);

loc_559750:
	push(mv, &ts->esp, 0x60);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x7);
	if (ts->eflags.zero) {
        goto loc_559786;
    }
	push(mv, &ts->esp, 0xA420BE7C);
	push(mv, &ts->esp, 0x2929058);
	push(mv, &ts->esp, 0x9E);
	push(mv, &ts->esp, 0x7);
	mov(&ts->ecx, ts->eax);
	game::sub_53AA80(ts, mv);
	mov(&ts->edi, ts->eax);
	goto loc_559788;

loc_559786:
	xor_(&ts->edi, ts->edi);

loc_559788:
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebx);
	game::sub_539FB0(ts, mv);
	mov(mv, x86::mem(ts->edi + 0x22, 1), ts->al);
	mov(mv, x86::mem(ts->edi + 0x23, 1), 0x1);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	push(mv, &ts->esp, 0x5C);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x9);
	if (ts->eflags.zero) {
        goto loc_5597DD;
    }
	mov(mv, &ts->ecx, x86::mem(0x7FA204, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xA42419AB);
	push(mv, &ts->esp, 0x3F23165C);
	push(mv, &ts->esp, 0x99);
	mov(&ts->ecx, ts->eax);
	game::sub_53A9D0(ts, mv);
	goto loc_5597DF;

loc_5597DD:
	xor_(&ts->eax, ts->eax);

loc_5597DF:
	mov(mv, x86::mem(ts->eax + 0x54, 4), ts->ebx);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	push(mv, &ts->esp, 0x5C);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0xB);
	if (ts->eflags.zero) {
        goto loc_55982B;
    }
	mov(mv, &ts->ecx, x86::mem(0x7FA204, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xEF6679C9);
	push(mv, &ts->esp, 0x599C870F);
	push(mv, &ts->esp, 0x9F);
	mov(&ts->ecx, ts->eax);
	game::sub_53A9D0(ts, mv);
	goto loc_55982D;

loc_55982B:
	xor_(&ts->eax, ts->eax);

loc_55982D:
	mov(mv, x86::mem(ts->eax + 0x54, 4), ts->ebx);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	push(mv, &ts->esp, 0x5C);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0xD);
	if (ts->eflags.zero) {
        goto loc_559879;
    }
	mov(mv, &ts->ecx, x86::mem(0x7FA204, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x2981CD3E);
	push(mv, &ts->esp, 0xBDED289A);
	push(mv, &ts->esp, 0xA2);
	mov(&ts->ecx, ts->eax);
	game::sub_53A9D0(ts, mv);
	goto loc_55987B;

loc_559879:
	xor_(&ts->eax, ts->eax);

loc_55987B:
	mov(mv, x86::mem(ts->eax + 0x54, 4), ts->ebx);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	push(mv, &ts->esp, 0x5C);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0xF);
	if (ts->eflags.zero) {
        goto loc_5598C7;
    }
	mov(mv, &ts->ecx, x86::mem(0x7FA204, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xEAC74624);
	push(mv, &ts->esp, 0xC9E0D00);
	push(mv, &ts->esp, 0xA1);
	mov(&ts->ecx, ts->eax);
	game::sub_53A9D0(ts, mv);
	goto loc_5598C9;

loc_5598C7:
	xor_(&ts->eax, ts->eax);

loc_5598C9:
	mov(mv, x86::mem(ts->eax + 0x54, 4), ts->ebx);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	push(mv, &ts->esp, 0x60);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x10);
	if (ts->eflags.zero) {
        goto loc_5598FB;
    }
	mov(&ts->ecx, ts->eax);
	game::sub_53AAC0(ts, mv);
	goto loc_5598FD;

loc_5598FB:
	xor_(&ts->eax, ts->eax);

loc_5598FD:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	push(mv, &ts->esp, 0x5C);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x12);
	if (ts->eflags.zero) {
        goto loc_559943;
    }
	mov(mv, &ts->ecx, x86::mem(0x7FA204, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x94A635E);
	push(mv, &ts->esp, 0xDC9C33A);
	push(mv, &ts->esp, 0x1D);
	mov(&ts->ecx, ts->eax);
	game::sub_53A9D0(ts, mv);
	goto loc_559945;

loc_559943:
	xor_(&ts->eax, ts->eax);

loc_559945:
	mov(mv, x86::mem(ts->eax + 0x54, 4), ts->ebx);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	push(mv, &ts->esp, 0x5C);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x14);
	if (ts->eflags.zero) {
        goto loc_55998E;
    }
	mov(mv, &ts->ecx, x86::mem(0x7FA204, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xA41D9EB6);
	push(mv, &ts->esp, 0x5A309B10);
	push(mv, &ts->esp, 0x9);
	mov(&ts->ecx, ts->eax);
	game::sub_53A9D0(ts, mv);
	goto loc_559990;

loc_55998E:
	xor_(&ts->eax, ts->eax);

loc_559990:
	mov(mv, x86::mem(ts->eax + 0x54, 4), 0x0);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	push(mv, &ts->esp, 0x5C);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x16);
	if (ts->eflags.zero) {
        goto loc_5599E0;
    }
	mov(mv, &ts->ecx, x86::mem(0x7FA204, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x27891593);
	push(mv, &ts->esp, 0xB2798BB4);
	push(mv, &ts->esp, 0xA0);
	mov(&ts->ecx, ts->eax);
	game::sub_53A9D0(ts, mv);
	goto loc_5599E2;

loc_5599E0:
	xor_(&ts->eax, ts->eax);

loc_5599E2:
	mov(mv, x86::mem(ts->eax + 0x54, 4), 0x2);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xA2285688);
	push(mv, &ts->esp, ts->eax);
	game::sub_4954E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xC318FF76);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4954E0(ts, mv);
	add(&ts->esp, 0x10);

loc_559A14:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);

def_55941F:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	or_(&ts->ecx, 0xFFFFFFFF);
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_559A40;
    }
	mov(mv, &ts->al, x86::mem(ts->edx, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_559A40;
    }

loc_559A26:
	imul(&ts->ecx, ts->ecx, 0x21);
	cmp(&ts->eflags, ts->al, 0x61);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_559A33;
    }
	cmp(&ts->eflags, ts->al, 0x7A);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_559A33;
    }
	add(&ts->al, 0xE0);

loc_559A33:
	movzx(&ts->eax, ts->al);
	add(&ts->ecx, ts->eax);
	mov(mv, &ts->al, x86::mem(ts->edx + 0x1, 1));
	inc(&ts->edx);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_559A26;
    }

loc_559A40:
	push(mv, &ts->esp, ts->ecx);
	game::sub_50B840(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_559A52;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x10, 4));
	goto loc_559A54;

loc_559A52:
	xor_(&ts->eax, ts->eax);

loc_559A54:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4C, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x20, 4));
	mov(mv, &ts->eax, x86::mem(0x7FA1C0, 4));
	push(mv, &ts->esp, 0xA936C3A2);
	push(mv, &ts->esp, ts->eax);
	game::sub_4954E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x7FA1C0, 4));
	push(mv, &ts->esp, 0x89782734);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4954E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_778180:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79BE5C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_778194:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79D2A8);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7781A8:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79BE5C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7781BC:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79BE5C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7781D0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79D2A8);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7781E4:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79BE5C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7781F8:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79BE5C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_77820C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79BE5C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_778220:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79BE5C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_778234:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79D290);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_778248:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79BE5C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_77825C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79BE5C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_778270:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79BE5C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_5593E0:
	mov(&ts->eax, 0x7E3794);
	goto ___CxxFrameHandler;
}

void sub_559AB0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x15C, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x2C, 4));
	push(mv, &ts->esp, 0x1D);
	mov(&ts->ecx, 0x8392C0);
	game::sub_6102F0(ts, mv);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_559AF3;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDA15D7E5);
	push(mv, &ts->esp, 0x78FA24);
	push(mv, &ts->esp, ts->ecx);
	game::sub_558430(ts, mv);
	add(&ts->esp, 0xC);
	mov(mv, x86::mem(0x838970, 4), 0x34DC1BEC);
	goto loc_559BED;

loc_559AF3:
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x1);
	push(mv, &ts->esp, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_559BB1;
    }
	mov(mv, &ts->edx, x86::mem(0x863480, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x83AD90);
	game::sub_503680(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_559B47;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1D);
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x434, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x0);
	game::sub_503B10(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->ebx, x86::mem(ts->eax, 4));
	mov(&ts->edx, 0x1);
	shl(&ts->edx, ts->cl);
	test(&ts->eflags, ts->ebx, ts->edx);
	setnz(ts->eflags, &ts->al);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_559BB1;
    }

loc_559B47:
	test(mv, &ts->eflags, x86::mem(ts->edi + 0x5, 1), 0xE0);
	if (ts->eflags.zero) {
        goto loc_559BB1;
    }
	mov(mv, &ts->ebx, x86::mem(0x861E74, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1D);
	mov(&ts->ecx, 0x85AD40);
	game::sub_514280(ts, mv);
	cmp(&ts->eflags, ts->ebx, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_559B86;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xD1AC60BE);
	push(mv, &ts->esp, 0x78FA24);
	push(mv, &ts->esp, ts->eax);
	game::sub_558430(ts, mv);
	add(&ts->esp, 0xC);
	mov(mv, x86::mem(0x838970, 4), 0x34DC1BEC);
	goto loc_559BEC;

loc_559B86:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x44B7167F);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1FAB5998);
	push(mv, &ts->esp, 0x1FAB5998);
	push(mv, &ts->esp, 0x9F00F07);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x78FA24);
	push(mv, &ts->esp, ts->ecx);
	goto loc_559BDA;

loc_559BB1:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xF5AC2B2A);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1FAB5998);
	push(mv, &ts->esp, 0x1FAB5998);
	push(mv, &ts->esp, 0x51123592);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x78FA24);
	push(mv, &ts->esp, ts->edx);

loc_559BDA:
	game::sub_558790(ts, mv);
	add(&ts->esp, 0x24);
	mov(mv, x86::mem(0x838970, 4), 0x1FAB5998);

loc_559BEC:
	pop(mv, &ts->esp, ts->ebx);

loc_559BED:
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x150, 4));
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(ts->ecx + 0x2F, 1), 0x0);
	game::sub_52EB90(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_538C00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	movsx(mv, &ts->eax, x86::mem(ts->eax + 0x8380B8, 1));
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero) {
        goto loc_559C22;
    }
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_458520(ts, mv);

loc_559C22:
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_559C30(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7782A4);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x154);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_559C7E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_556C80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_559C7E:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_778290:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79D2BC);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_559C30:
	mov(&ts->eax, 0x7E37B8);
	goto ___CxxFrameHandler;
}

void sub_559C90(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7782F0);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->esi);
	game::sub_552330(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x150, 4));
	xor_(&ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esi, 4), 0x79D2D0);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x15C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x160, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x161, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x162, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x163, 1), ts->bl);
	mov(&ts->edx, 0x783FE5);
	mov(&ts->ecx, 0x42380000);
	mov(&ts->eax, 0x79AE30);
	mov(mv, x86::mem(ts->esi + 0x16C, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x170, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x174, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x178, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x17C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x180, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x184, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x188, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x18C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x194, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x190, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x198, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x19C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1A0, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1A4, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x168, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x164, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x1A8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1B8, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x1BC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1C0, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1C4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1C8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1CC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1D0, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1D4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1D8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1E0, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1DC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1E4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1E8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1EC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1F0, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x1B4, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x1B0, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x1F4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x204, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x208, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x20C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x210, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x214, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x218, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x21C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x220, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x224, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x22C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x228, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x230, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x234, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x238, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x23C, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x200, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x1FC, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x240, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x248, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x24C, 1), ts->bl);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x18, 1), 0x4);
	mov(mv, x86::mem(0x838528, 1), ts->bl);
	game::sub_547A00(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_559E83;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_559E83;
    }
	push(mv, &ts->esp, 0x444969FE);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_559E9E;
    }

loc_559E83:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_559EA4;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x444969FE);
	game::sub_52C570(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_559EA4;
    }

loc_559E9E:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x18, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_559EA6;
    }

loc_559EA4:
	xor_(&ts->eax, ts->eax);

loc_559EA6:
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x248, 4), ts->eax);
	game::sub_556E60(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0x8109153D);
	mov(mv, &ts->ecx, x86::mem(0x7FA1C8, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_559ED9;
    }
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->ebx);

loc_559ED9:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_7782B0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto ??1strstreambuf@std@@UAE@XZ_5;

loc_7782B8:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x150);
	goto sub_4358E0;

loc_7782C6:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x164);
	goto sub_4957A0;

loc_7782D4:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x1B0);
	goto sub_4957A0;

loc_7782E2:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x1FC);
	goto sub_4957A0;

SEH_559C90:
	mov(&ts->eax, 0x7E37FC);
	goto ___CxxFrameHandler;
}

void sub_559EF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_559F10(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_559F08;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_559F08:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_559F10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x777D78);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x79D2D0);
	mov(&ts->eax, 0x78F544);
	mov(mv, x86::mem(ts->esi + 0x1FC, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x1B0, 4), ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x150, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	mov(mv, x86::mem(ts->esi + 0x164, 4), ts->eax);
	game::sub_4358E0(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	game::std__strstreambuf___strstreambuf_void_(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_777D70:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto ??1strstreambuf@std@@UAE@XZ_5;

SEH_569610:
	mov(&ts->eax, 0x7E3B38);
	goto ___CxxFrameHandler;
}

void sub_559F80(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xC, 4));
	cmp(&ts->eflags, ts->eax, 0x911AB364);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_559F9F;
    }
	mov(mv, x86::mem(0x83855B, 1), 0x1);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x14);

loc_559F9F:
	cmp(&ts->eflags, ts->eax, 0xC407210);
	if (!ts->eflags.zero) {
        goto loc_55A130;
    }
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, 0x8637B0);
	game::sub_51BB70(ts, mv);
	xor_(&ts->esi, ts->esi);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero) {
        goto loc_55A02A;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x14, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	mov(mv, x86::mem(ts->ebp + 0xC, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_559FE1;
    }
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x163, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_559FE1;
    }
	mov(mv, &ts->al, x86::mem(0x83855D, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55A12E;
    }

loc_559FE1:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x838980);
	game::sub_521B90(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_55A02F;
    }
	mov(mv, &ts->ecx, x86::mem(0x7FA1C8, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero) {
        goto loc_55A012;
    }
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->esi);

loc_55A012:
	push(mv, &ts->esp, 0xB84A37FA);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->ebx);
	game::sub_558430(ts, mv);
	add(&ts->esp, 0xC);
	goto loc_55A111;

loc_55A02A:
	mov(mv, x86::mem(ts->ebp + 0xC, 4), ts->esi);
	goto loc_559FE1;

loc_55A02F:
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_55A0C6;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x4C, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x838980);
	game::sub_53B5E0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55A0C6;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4C, 4));
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	lea(mv, &ts->edx, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x85AD40);
	game::sub_5415E0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x861E74, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->ebp + 0x8, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_55A091;
    }
	game::sub_53B690(ts, mv);
	push(mv, &ts->esp, 0xD1AC60BE);
	push(mv, &ts->esp, 0x78FA24);
	push(mv, &ts->esp, ts->ebx);
	game::sub_558430(ts, mv);
	add(&ts->esp, 0xC);
	goto loc_55A111;

loc_55A091:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x838980);
	mov(&ts->esi, 0x94F4C140);
	game::sub_5303C0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_55A0AD;
    }
	mov(&ts->esi, 0xFDDD0C23);

loc_55A0AD:
	game::sub_53B690(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xB4623F67);
	push(mv, &ts->esp, 0xB4623F67);
	push(mv, &ts->esp, 0x9F00F07);
	goto loc_55A0F9;

loc_55A0C6:
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x4C, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x838980);
	mov(&ts->esi, 0xF2D7FFAB);
	game::sub_5303C0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_55A0E2;
    }
	mov(&ts->esi, 0x217453F);

loc_55A0E2:
	game::sub_53B690(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xB4623F67);
	push(mv, &ts->esp, 0xB4623F67);
	push(mv, &ts->esp, 0x51123592);

loc_55A0F9:
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->ebx);
	game::sub_558790(ts, mv);
	add(&ts->esp, 0x24);

loc_55A111:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FEB8);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0xC, 4));
	add(&ts->esp, 0x10);
	game::sub_538C00(ts, mv);

loc_55A12E:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);

loc_55A130:
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x14);
}

void sub_55A140(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	cmp(mv, &ts->eflags, x86::mem(ts->ebp + 0xC, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto loc_55A227;
    }
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x8637B0);
	game::sub_51BB70(ts, mv);
	xor_(&ts->esi, ts->esi);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero) {
        goto loc_55A16B;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x14, 4));
	goto loc_55A16D;

loc_55A16B:
	xor_(&ts->eax, ts->eax);

loc_55A16D:
	mov(&ts->ecx, ts->eax);
	game::sub_538C00(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x838994, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x8395B0);
	game::sub_5995E0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_55A1BC;
    }
	mov(mv, &ts->ecx, x86::mem(0x7FA1C8, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero) {
        goto loc_55A1A7;
    }
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->esi);

loc_55A1A7:
	push(mv, &ts->esp, 0x89D4E03F);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->edi);
	game::sub_558430(ts, mv);
	add(&ts->esp, 0xC);
	goto loc_55A209;

loc_55A1BC:
	mov(mv, &ts->edx, x86::mem(0x7FA1C8, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero) {
        goto loc_55A1DB;
    }
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->esi);

loc_55A1DB:
	push(mv, &ts->esp, 0x5D336F96);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xB4623F67);
	push(mv, &ts->esp, 0xB4623F67);
	push(mv, &ts->esp, 0xE75749D4);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->edi);
	game::sub_558790(ts, mv);
	add(&ts->esp, 0x24);

loc_55A209:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79D2EC);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->edi);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(0x83855E, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);

loc_55A227:
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x14);
}

void sub_55A230(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xC, 4));
	cmp(&ts->eflags, ts->eax, 0x911AB364);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_55A24C;
    }
	mov(mv, x86::mem(0x83855B, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x8);

loc_55A24C:
	mov(mv, &ts->cl, x86::mem(0x83855B, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_55A3FB;
    }
	cmp(&ts->eflags, ts->eax, 0xC407210);
	if (!ts->eflags.zero) {
        goto loc_55A3FB;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x8395B0);
	game::sub_599610(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_55A29E;
    }
	game::sub_53B710(ts, mv);
	game::sub_53B690(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, 0xDA15D7E5);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->esi);
	game::sub_558430(ts, mv);
	add(&ts->esp, 0xC);
	goto loc_55A3AB;

loc_55A29E:
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x1);
	push(mv, &ts->esp, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_55A34D;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x838980);
	game::sub_530350(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55A34D;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(mv, &ts->eax, x86::mem(0x837B90, 4));
	mov(mv, &ts->ecx, x86::mem(0x861E74, 4));
	cmp(mv, &ts->eflags, ts->ecx, x86::mem(ts->eax + 0x8, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_55A2FE;
    }
	game::sub_53B710(ts, mv);
	game::sub_53B690(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, 0xD1AC60BE);
	push(mv, &ts->esp, 0x78FA24);
	push(mv, &ts->esp, ts->esi);
	game::sub_558430(ts, mv);
	add(&ts->esp, 0xC);
	goto loc_55A3AA;

loc_55A2FE:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x838980);
	mov(&ts->edi, 0x44B7167F);
	game::sub_521C10(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_55A317;
    }
	mov(&ts->edi, 0x3949ABEE);

loc_55A317:
	game::sub_53B710(ts, mv);
	game::sub_53B690(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xB4623F67);
	push(mv, &ts->esp, 0xB4623F67);
	push(mv, &ts->esp, 0x9F00F07);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->esi);
	game::sub_558790(ts, mv);
	goto loc_55A3A7;

loc_55A34D:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x838980);
	mov(&ts->edi, 0xF5AC2B2A);
	game::sub_521C10(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_55A369;
    }
	mov(&ts->edi, 0xF1BD1A8A);

loc_55A369:
	game::sub_53B710(ts, mv);
	game::sub_53B690(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xB4623F67);
	push(mv, &ts->esp, 0xB4623F67);
	push(mv, &ts->esp, 0x51123592);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->esi);
	game::sub_558790(ts, mv);
	mov(mv, x86::mem(0x838970, 4), 0xB4623F67);

loc_55A3A7:
	add(&ts->esp, 0x24);

loc_55A3AA:
	pop(mv, &ts->esp, ts->edi);

loc_55A3AB:
	mov(mv, &ts->eax, x86::mem(0x7FA1C8, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x8637B0);
	game::sub_51BB70(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55A3CE;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55A3CE;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x4C, 4));
	game::sub_51FD10(ts, mv);

loc_55A3CE:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FEB8);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->esi);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x7FA1C8, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79D2EC);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x20);

loc_55A3FB:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x8);
}

void sub_55A400(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x778314);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x150);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_55A44E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_5571B0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_55A44E:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_778300:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79D2F4);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_55A400:
	mov(&ts->eax, 0x7E3820);
	goto ___CxxFrameHandler;
}

void sub_55A460(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x777D78);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x10, 4), ts->esi);
	game::sub_552330(ts, mv);
	xor_(&ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esi, 4), 0x79D30C);
	mov(mv, x86::mem(ts->esi + 0x150, 4), ts->ebx);
	push(mv, &ts->esp, 0x790000);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x154, 1), ts->bl);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55A4DE;
    }
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	if (ts->eflags.zero) {
        goto loc_55A4DE;
    }
	cmp(&ts->eflags, ts->eax, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0xFF);
	if (ts->eflags.zero) {
        goto loc_55A4D2;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x790000);
	push(mv, &ts->esp, 0x4);
	goto loc_55A4D9;

loc_55A4D2:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x790000);
	push(mv, &ts->esp, ts->ebx);

loc_55A4D9:
	game::sub_555D00(ts, mv);

loc_55A4DE:
	mov(mv, &ts->eax, x86::mem(0x8384D8, 4));
	mov(&ts->ecx, ts->eax);
	push(mv, &ts->esp, 0x1);
	mov(mv, x86::mem(ts->eax + 0x6C, 1), 0x1);
	game::sub_542990(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_54E6E0(ts, mv);
	mov(mv, x86::mem(0x838528, 1), ts->bl);
	mov(mv, x86::mem(0x83A655, 1), 0x1);
	game::sub_50FE20(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(0x8651AC, 4));
	mov(mv, x86::mem(0x83A650, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x150, 4), ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_557350(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_777D70:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto ??1strstreambuf@std@@UAE@XZ_5;

SEH_569610:
	mov(&ts->eax, 0x7E3B38);
	goto ___CxxFrameHandler;
}

void sub_55A550(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_55A570(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_55A568;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_55A568:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_55A570(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x79D30C);
	goto ??1strstreambuf@std@@UAE@XZ_5;
}

void sub_55A580(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	cmp(mv, &ts->eflags, x86::mem(ts->ebp + 0xC, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto loc_55A61B;
    }
	mov(mv, &ts->eax, x86::mem(0x839C40, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55A5FF;
    }
	mov(mv, &ts->ecx, x86::mem(0x83A540, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_55A5FF;
    }
	mov(mv, &ts->eax, x86::mem(0x83A63C, 4));
	cmp(&ts->eflags, ts->eax, 0xFF);
	if (ts->eflags.zero) {
        goto loc_55A5FF;
    }
	imul(&ts->eax, ts->eax, 0x29);
	add(&ts->eax, 0x83A544);
	push(mv, &ts->esp, ts->eax);
	add(&ts->ecx, 0x14);
	game::sub_59AE90(ts, mv);
	neg(&ts->al);
	sbb(&ts->al, ts->al);
	inc(&ts->al);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_55A5FF;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, 0xA2323032);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x34DC1BCF);
	push(mv, &ts->esp, 0xB4EDEB6D);
	push(mv, &ts->esp, 0x2B5DFEF6);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->eax);
	game::sub_558790(ts, mv);
	add(&ts->esp, 0x24);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x14);

loc_55A5FF:
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_55A61B;
    }
	mov(mv, &ts->edx, x86::mem(0x7FA218, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5377A0(ts, mv);

loc_55A61B:
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x14);
}

void sub_55A620(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x777D78);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x10, 4), ts->esi);
	game::sub_552330(ts, mv);
	xor_(&ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esi, 4), 0x79D328);
	mov(mv, x86::mem(ts->esi + 0x150, 4), ts->ebx);
	push(mv, &ts->esp, 0x790000);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x154, 1), ts->bl);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55A69E;
    }
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	if (ts->eflags.zero) {
        goto loc_55A69E;
    }
	cmp(&ts->eflags, ts->eax, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0xFF);
	if (ts->eflags.zero) {
        goto loc_55A692;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x790000);
	push(mv, &ts->esp, 0x4);
	goto loc_55A699;

loc_55A692:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x790000);
	push(mv, &ts->esp, ts->ebx);

loc_55A699:
	game::sub_555D00(ts, mv);

loc_55A69E:
	mov(mv, &ts->eax, x86::mem(0x8384D8, 4));
	mov(&ts->ecx, ts->eax);
	push(mv, &ts->esp, 0x1);
	mov(mv, x86::mem(ts->eax + 0x6C, 1), 0x1);
	game::sub_542990(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_54E6E0(ts, mv);
	mov(mv, x86::mem(0x838528, 1), ts->bl);
	mov(mv, x86::mem(0x83A655, 1), 0x1);
	game::sub_50FE20(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8651AC, 4));
	mov(mv, x86::mem(ts->esi + 0x150, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(0x83A650, 4), ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_557410(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_777D70:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto ??1strstreambuf@std@@UAE@XZ_5;

SEH_569610:
	mov(&ts->eax, 0x7E3B38);
	goto ___CxxFrameHandler;
}

void sub_55A710(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_55A730(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_55A728;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_55A728:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_55A730(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x79D328);
	goto ??1strstreambuf@std@@UAE@XZ_5;
}

void sub_55A740(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x8, 4));
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_543D40(ts, mv);
	cmp(&ts->eflags, ts->edi, 0xB5AF2461);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_55A96E;
    }
	if (ts->eflags.zero) {
        goto loc_55A90A;
    }
	cmp(&ts->eflags, ts->edi, 0x35F8620B);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_55A82E;
    }
	if (ts->eflags.zero) {
        goto loc_55A81D;
    }
	cmp(&ts->eflags, ts->edi, 0x30ED2368);
	if (ts->eflags.zero) {
        goto loc_55A7A3;
    }
	cmp(&ts->eflags, ts->edi, 0x34DC1BCF);
	if (!ts->eflags.zero) {
        goto loc_55AA38;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_538CA0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_55A7A3:
	mov(mv, &ts->ecx, x86::mem(0x83A640, 4));
	xor_(&ts->eax, ts->eax);
	sub(&ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55A7C3;
    }
	dec(&ts->ecx);
	if (ts->eflags.zero) {
        goto loc_55A7BC;
    }
	dec(&ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_55A7CF;
    }
	mov(&ts->eax, 0x79049C);
	goto loc_55A7CF;

loc_55A7BC:
	mov(&ts->eax, 0x790478);
	goto loc_55A7CF;

loc_55A7C3:
	mov(&ts->eax, 0x78F5A4);
	mov(mv, x86::mem(0x8635B9, 1), 0x1);

loc_55A7CF:
	mov(mv, x86::mem(0x8384C8, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_50B8C0(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->ecx, 0x839C40);
	game::sub_50F970(ts, mv);
	push(mv, &ts->esp, 0x790000);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_55A80A;
    }
	push(mv, &ts->esp, 0x790000);
	game::sub_5379A0(ts, mv);
	add(&ts->esp, 0x4);

loc_55A80A:
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	push(mv, &ts->esp, 0x6);
	game::sub_5F4240(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_55A81D:
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	game::sub_52CDD0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_55A82E:
	cmp(&ts->eflags, ts->edi, 0x911AB364);
	if (!ts->eflags.zero) {
        goto loc_55AA38;
    }
	cmp(mv, &ts->eflags, x86::mem(0x83A63C, 4), 0xFF);
	if (ts->eflags.zero) {
        goto loc_55A882;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537D40(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55AA38;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C60(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_55A882:
	mov(mv, &ts->edx, x86::mem(0x83A64C, 4));
	mov(mv, &ts->eax, x86::mem(0x8900AC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	game::sub_5F4230(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x850078, 4));
	cmp(&ts->eflags, ts->ecx, 0x100);
	mov(&ts->eax, 0x40813F63);
	if (!ts->eflags.zero) {
        goto loc_55A8B8;
    }
	mov(&ts->eax, 0xFC820867);
	goto loc_55A8D0;

loc_55A8B8:
	cmp(&ts->eflags, ts->ecx, 0x1);
	if (!ts->eflags.zero) {
        goto loc_55A8D0;
    }
	mov(mv, &ts->eax, x86::mem(0x83A640, 4));
	neg(&ts->eax);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0xCE5A854B);
	add(&ts->eax, 0xE5A0D45E);

loc_55A8D0:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x34DC1BCF);
	push(mv, &ts->esp, 0x34DC1BCF);
	push(mv, &ts->esp, 0x30ED2368);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->edx);
	game::sub_558790(ts, mv);
	add(&ts->esp, 0x24);
	mov(&ts->ecx, ts->esi);
	game::sub_538C00(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_55A90A:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x150, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(0x8651AC, 4));
	if (ts->eflags.zero) {
        goto loc_55AA38;
    }
	mov(mv, &ts->al, x86::mem(0x83A7A4, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55AA38;
    }
	cmp(mv, &ts->eflags, x86::mem(0x83A63C, 4), 0xFF);
	if (ts->eflags.zero) {
        goto loc_55AA38;
    }
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	push(mv, &ts->esp, 0x1);
	game::sub_5F4240(ts, mv);
	push(mv, &ts->esp, 0x790000);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_55AA38;
    }
	push(mv, &ts->esp, 0x790000);
	game::sub_5379A0(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_55A96E:
	cmp(&ts->eflags, ts->edi, 0xC98356BA);
	if (ts->eflags.zero) {
        goto loc_55AA1B;
    }
	cmp(&ts->eflags, ts->edi, 0xD05FC3A3);
	if (ts->eflags.zero) {
        goto loc_55A9B9;
    }
	cmp(&ts->eflags, ts->edi, 0xE1FDE1D1);
	if (!ts->eflags.zero) {
        goto loc_55AA38;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x13C, 4), 0x911AB364);
	if (!ts->eflags.zero) {
        goto loc_55AA38;
    }
	mov(mv, &ts->ecx, x86::mem(0x7FA21C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_55A9B9:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x48, 4));
	mov(mv, &ts->edi, x86::mem(0x83A63C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x839C40);
	mov(mv, x86::mem(0x83A63C, 4), ts->eax);
	game::sub_50FC60(ts, mv);
	cmp(&ts->eflags, ts->edi, 0xFF);
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	if (!ts->eflags.zero) {
        goto loc_55A9FF;
    }
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_55AA38;
    }
	mov(mv, &ts->edx, x86::mem(0x7FA230, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5377A0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_55A9FF:
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_55AA38;
    }
	mov(mv, &ts->edx, x86::mem(0x7FA21C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5377A0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_55AA1B:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x154, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55AA38;
    }
	push(mv, &ts->esp, 0x1B);
	mov(&ts->ecx, 0x8635BC);
	game::sub_5243D0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x154, 1), 0x1);

loc_55AA38:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);
}

void sub_55AA40(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x777D78);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x10, 4), ts->esi);
	game::sub_552330(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x79D344);
	mov(mv, x86::mem(ts->esi + 0x150, 4), 0x0);
	push(mv, &ts->esp, 0x790000);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), 0x0);
	mov(mv, x86::mem(ts->esi + 0x154, 4), 0xFFFFFFFF);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55AACA;
    }
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	if (ts->eflags.zero) {
        goto loc_55AACA;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFF);
	if (ts->eflags.zero) {
        goto loc_55AABC;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x790000);
	push(mv, &ts->esp, 0x4);
	goto loc_55AAC5;

loc_55AABC:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x790000);
	push(mv, &ts->esp, 0x0);

loc_55AAC5:
	game::sub_555D00(ts, mv);

loc_55AACA:
	mov(mv, &ts->eax, x86::mem(0x8384D8, 4));
	mov(&ts->ecx, ts->eax);
	push(mv, &ts->esp, 0x1);
	mov(mv, x86::mem(ts->eax + 0x6C, 1), 0x1);
	game::sub_542990(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_54E6E0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8651AC, 4));
	mov(mv, x86::mem(0x838528, 1), 0x0);
	mov(mv, x86::mem(ts->esi + 0x150, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(0x83A650, 4), ts->ecx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x7C, 1), 0x1);
	game::sub_557680(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x83A64C, 4));
	mov(mv, &ts->ecx, x86::mem(0x8900AC, 4));
	game::sub_5EA8B0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x83A540, 4));
	neg(&ts->al);
	sbb(&ts->eax, ts->eax);
	neg(&ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_777D70:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto ??1strstreambuf@std@@UAE@XZ_5;

SEH_569610:
	mov(&ts->eax, 0x7E3B38);
	goto ___CxxFrameHandler;
}

void sub_55AB50(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_55AB70(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_55AB68;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_55AB68:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_55AB70(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x79D344);
	goto ??1strstreambuf@std@@UAE@XZ_5;
}

void sub_55AB80(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0x6);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_55AB8C;
    }
	push(mv, &ts->esp, ts->esi);
	jmp(x86::mem(0x55ABF4, 4));

loc_55AB93:
	mov(mv, &ts->esi, x86::mem(0x7FA220, 4));
	goto loc_55ABC2;

loc_55AB9B:
	mov(mv, &ts->ecx, x86::mem(0x83A540, 4));
	push(mv, &ts->esp, 0xA);
	game::sub_59B080(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_55AB93;
    }
	mov(mv, &ts->esi, x86::mem(0x7FA224, 4));
	goto loc_55ABC2;

loc_55ABB4:
	mov(mv, &ts->esi, x86::mem(0x7FA228, 4));
	goto loc_55ABC2;

loc_55ABBC:
	mov(mv, &ts->esi, x86::mem(0x7FA22C, 4));

loc_55ABC2:
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_55ABEE;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55ABEE;
    }
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_55ABEE;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x0);
	game::sub_555D00(ts, mv);

loc_55ABEE:
	pop(mv, &ts->esp, ts->esi);

def_55AB8C:
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_55AC10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x777D98);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x10, 4), ts->esi);
	game::sub_552780(ts, mv);
	xor_(&ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esi, 4), 0x79D360);
	mov(mv, x86::mem(ts->esi + 0x14C, 1), ts->bl);
	push(mv, &ts->esp, 0x790000);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x150, 4), ts->ebx);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55AC8E;
    }
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	if (ts->eflags.zero) {
        goto loc_55AC8E;
    }
	cmp(&ts->eflags, ts->eax, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0xFF);
	if (ts->eflags.zero) {
        goto loc_55AC82;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x790000);
	push(mv, &ts->esp, 0x4);
	goto loc_55AC89;

loc_55AC82:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x790000);
	push(mv, &ts->esp, ts->ebx);

loc_55AC89:
	game::sub_555D00(ts, mv);

loc_55AC8E:
	mov(mv, &ts->eax, x86::mem(0x8384D8, 4));
	mov(&ts->ecx, ts->eax);
	push(mv, &ts->esp, 0x1);
	mov(mv, x86::mem(ts->eax + 0x6C, 1), 0x1);
	game::sub_542990(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_54E6E0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x83A648, 4));
	dec(&ts->eax);
	neg(&ts->eax);
	mov(mv, x86::mem(0x838528, 1), ts->bl);
	sbb(&ts->eax, ts->eax);
	add(&ts->eax, 0x7);
	mov(mv, x86::mem(ts->esi + 0x134, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(0x8651AC, 4));
	mov(mv, x86::mem(ts->esi + 0x150, 4), ts->ecx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x149, 1), ts->bl);
	game::sub_557780(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_777D90:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto ??1strstreambuf@@UAE@XZ;

SEH_55AC10:
	mov(&ts->eax, 0x7E3844);
	goto ___CxxFrameHandler;
}

void sub_55AD00(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_55AD20(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_55AD18;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_55AD18:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_55AD20(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776FE8);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x795CDC);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	game::sub_4358E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->esi, 4), 0x79AC00);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_776FE0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

SEH_569E80:
	mov(&ts->eax, 0x7E3CEC);
	goto ___CxxFrameHandler;
}

void sub_55AD70(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776FE8);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x10, 4), ts->esi);
	game::sub_551DE0(ts, mv);
	xor_(&ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esi, 4), 0x79D374);
	mov(mv, x86::mem(ts->esi + 0x4C, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x4D, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x50, 4), ts->ebx);
	push(mv, &ts->esp, 0x790000);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->ebx);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55ADEE;
    }
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	if (ts->eflags.zero) {
        goto loc_55ADEE;
    }
	cmp(&ts->eflags, ts->eax, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0xFF);
	if (ts->eflags.zero) {
        goto loc_55ADE2;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x790000);
	push(mv, &ts->esp, 0x4);
	goto loc_55ADE9;

loc_55ADE2:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x790000);
	push(mv, &ts->esp, ts->ebx);

loc_55ADE9:
	game::sub_555D00(ts, mv);

loc_55ADEE:
	mov(mv, &ts->eax, x86::mem(0x8384D8, 4));
	mov(&ts->ecx, ts->eax);
	push(mv, &ts->esp, 0x1);
	mov(mv, x86::mem(ts->eax + 0x6C, 1), 0x1);
	game::sub_542990(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_54E6E0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8651AC, 4));
	mov(mv, x86::mem(0x838528, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->eax);
	cmp(mv, &ts->eflags, x86::mem(0x83A644, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_55AE80;
    }
	mov(mv, &ts->eax, x86::mem(0x83A7A0, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_55AE3A;
    }
	mov(&ts->edi, 0x1);
	goto loc_55AE60;

loc_55AE3A:
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_55AE46;
    }
	mov(&ts->edi, 0x2);
	goto loc_55AE60;

loc_55AE46:
	cmp(&ts->eflags, ts->eax, 0x2);
	if (!ts->eflags.zero) {
        goto loc_55AE52;
    }
	mov(&ts->edi, 0x4);
	goto loc_55AE60;

loc_55AE52:
	xor_(&ts->ecx, ts->ecx);
	cmp(&ts->eflags, ts->eax, 0x3);
	setnz(ts->eflags, &ts->cl);
	dec(&ts->ecx);
	and_(&ts->ecx, 0x8);
	mov(&ts->edi, ts->ecx);

loc_55AE60:
	mov(mv, &ts->edx, x86::mem(0x7FA228, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_55AE7F;
    }
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->edi);

loc_55AE7F:
	pop(mv, &ts->esp, ts->edi);

loc_55AE80:
	mov(&ts->ecx, ts->esi);
	game::sub_5578C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_776FE0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

SEH_569E80:
	mov(&ts->eax, 0x7E3CEC);
	goto ___CxxFrameHandler;
}

void sub_55AEA0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::stdiobuf___stdiobuf_void_(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_55AEB8;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_55AEB8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void stdiobuf___stdiobuf_void_(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776FE8);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x79D374);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_55AEFF;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax, 4));
	mov(mv, x86::mem(ts->esi + 0x50, 4), 0x0);

loc_55AEFF:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->esi, 4), 0x79AC00);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_776FE0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

SEH_569E80:
	mov(&ts->eax, 0x7E3CEC);
	goto ___CxxFrameHandler;
}

void sub_55AF20(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x778334);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_55AF6B;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_557A10(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_55AF6B:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_778320:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79D384);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_55AF20:
	mov(&ts->eax, 0x7E3868);
	goto ___CxxFrameHandler;
}

void sub_55AF80(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x778354);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x120);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_55AFCE;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_557BD0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_55AFCE:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_778340:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79D398);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_55AF80:
	mov(&ts->eax, 0x7E388C);
	goto ___CxxFrameHandler;
}

void sub_55AFE0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0xC3960EB9);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_55B096;
    }
	if (ts->eflags.zero) {
        goto loc_55B01E;
    }
	cmp(&ts->eflags, ts->eax, 0x406415E3);
	if (ts->eflags.zero) {
        goto loc_55B00A;
    }
	cmp(&ts->eflags, ts->eax, 0xB5AF2461);
	if (!ts->eflags.zero) {
        goto loc_55B194;
    }

loc_55B00A:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x4C, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_55B194;
    }

loc_55B01E:
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0x54, 4));
	mov(&ts->ecx, ts->ebx);
	game::sub_576410(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x83856C, 4));
	inc(&ts->eax);
	mov(mv, x86::mem(0x83856C, 4), ts->eax);
	shl(&ts->eax, 0x6);
	add(&ts->eax, 0x8382A0);
	mov(&ts->edi, ts->eax);
	cmp(mv, &ts->eflags, x86::mem(ts->edi, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_55B082;
    }
	game::sub_511BC0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x6C6554EE);
	push(mv, &ts->esp, ts->eax);
	game::sub_4955C0(ts, mv);
	push(mv, &ts->esp, ts->edi);
	game::sub_50D350(ts, mv);
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_55B06F;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->ebx);
	game::sub_57DAA0(ts, mv);

loc_55B06F:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_537490(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_55B082:
	mov(&ts->eax, 0x1);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(0x8383A8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x50, 1), ts->al);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_55B096:
	cmp(&ts->eflags, ts->eax, 0xC98356BA);
	if (!ts->eflags.zero) {
        goto loc_55B194;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865198, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x4C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x4C, 4));
	mov(mv, &ts->eax, x86::mem(0x83A9D8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_55B0BD;
    }
	mov(&ts->edi, 0x1);
	goto loc_55B0E3;

loc_55B0BD:
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_55B0C9;
    }
	mov(&ts->edi, 0x2);
	goto loc_55B0E3;

loc_55B0C9:
	cmp(&ts->eflags, ts->eax, 0x2);
	if (!ts->eflags.zero) {
        goto loc_55B0D5;
    }
	mov(&ts->edi, 0x4);
	goto loc_55B0E3;

loc_55B0D5:
	xor_(&ts->ecx, ts->ecx);
	cmp(&ts->eflags, ts->eax, 0x3);
	setnz(ts->eflags, &ts->cl);
	dec(&ts->ecx);
	and_(&ts->ecx, 0x8);
	mov(&ts->edi, ts->ecx);

loc_55B0E3:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55B0FF;
    }
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->edi);

loc_55B0FF:
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	game::sub_576460(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	game::sub_52CDD0(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x50, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_55B194;
    }
	game::sub_511BC0(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(0x838568, 4), 0x2);
	if (!ts->eflags.zero) {
        goto loc_55B157;
    }
	game::sub_4A9330(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_55B14A;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_558F00(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->ecx, ts->esi);
	game::sub_54AF80(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_55B14A:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x790734);
	push(mv, &ts->esp, ts->eax);
	goto loc_55B185;

loc_55B157:
	cmp(mv, &ts->eflags, x86::mem(0x8654A4, 4), 0x3);
	if (!ts->eflags.zero) {
        goto loc_55B17A;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_558F00(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->ecx, ts->esi);
	game::sub_54AF80(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_55B17A:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x790734);
	push(mv, &ts->esp, ts->edx);

loc_55B185:
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);
	mov(&ts->ecx, ts->esi);
	game::sub_54AF80(ts, mv);

loc_55B194:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);
}

void sub_55B1A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x799F48);
	mov(&ts->esi, ts->ecx);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55B1BB;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_557EC0(ts, mv);

loc_55B1BB:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C8, 4));
	mov(mv, x86::mem(ts->eax + 0x4, 1), 0x0);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55B1EB;
    }
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_5234C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->edx + 0x8, 4));

loc_55B1EB:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55B21B;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C8, 4));
	mov(mv, x86::mem(ts->ecx + 0x4, 1), 0x1);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_5234C0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1C8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x50, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C8, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax + 0x8, 4));

loc_55B21B:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_55B220(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x838578, 4));
	dec(&ts->eax);
	neg(&ts->eax);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0xE632EB32);
	add(&ts->eax, 0x3312F33);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x11223345);
	push(mv, &ts->esp, 0x11223344);
	push(mv, &ts->esp, 0xBE503981);
	push(mv, &ts->esp, 0x88579775);
	push(mv, &ts->esp, 0x78FA24);
	push(mv, &ts->esp, ts->eax);
	game::sub_558790(ts, mv);
	add(&ts->esp, 0x24);
	retn(mv, &ts->esp);
}

void sub_55B260(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0x911C0A4B);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_55B308;
    }
	if (ts->eflags.zero) {
        goto loc_55B515;
    }
	cmp(&ts->eflags, ts->eax, 0x172176E8);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_55B2F1;
    }
	if (ts->eflags.zero) {
        goto loc_55B2E4;
    }
	sub(&ts->eax, 0x36FAD7);
	if (ts->eflags.zero) {
        goto loc_55B2B4;
    }
	sub(&ts->eax, 0x10EB386D);
	if (ts->eflags.zero) {
        goto loc_55B2A1;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto loc_55B515;
    }
	game::sub_54B090(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x10);

loc_55B2A1:
	mov(mv, x86::mem(0x7FA29C, 1), 0x0);
	mov(mv, x86::mem(ts->esi + 0x74, 4), 0x1);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x10);

loc_55B2B4:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x70, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_55B2CD;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x6C, 4));
	push(mv, &ts->esp, ts->eax);

loc_55B2BF:
	mov(&ts->ecx, 0x832DAC);
	game::sub_488AA0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x70, 1), 0x0);

loc_55B2CD:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x72, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_55B515;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_54B090(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x10);

loc_55B2E4:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x70, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_55B2CD;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x6C, 4));
	push(mv, &ts->esp, ts->ecx);
	goto loc_55B2BF;

loc_55B2F1:
	cmp(&ts->eflags, ts->eax, 0x406415E3);
	if (!ts->eflags.zero) {
        goto loc_55B515;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_55B220(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x10);

loc_55B308:
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_55B3D2;
    }
	if (ts->eflags.zero) {
        goto loc_55B515;
    }
	cmp(&ts->eflags, ts->eax, 0x9120409E);
	if (ts->eflags.zero) {
        goto loc_55B515;
    }
	cmp(&ts->eflags, ts->eax, 0x9803F6E2);
	if (!ts->eflags.zero) {
        goto loc_55B515;
    }
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CD70(ts, mv);
	mov(mv, &ts->al, x86::mem(0x8763F0, 1));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	movzx(mv, &ts->eax, x86::mem(0x8763F2, 1));
	if (ts->eflags.zero) {
        goto loc_55B358;
    }
	movzx(mv, &ts->eax, x86::mem(0x8763F5, 1));

loc_55B358:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x7C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55B37F;
    }
	game::sub_52D020(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_55B3DD;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_55B220(ts, mv);
	goto loc_55B3DD;

loc_55B37F:
	game::sub_52D020(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x78, 1));
	if (ts->eflags.zero) {
        goto loc_55B3B0;
    }
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55B3DD;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F9C8);
	push(mv, &ts->esp, 0x69BA0838);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	mov(mv, x86::mem(ts->esi + 0x78, 1), 0x1);
	goto loc_55B3DD;

loc_55B3B0:
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_55B3DD;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F9D4);
	push(mv, &ts->esp, 0x69BA0838);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	mov(mv, x86::mem(ts->esi + 0x78, 1), 0x0);
	goto loc_55B3DD;

loc_55B3D2:
	cmp(&ts->eflags, ts->eax, 0xC98356BA);
	if (!ts->eflags.zero) {
        goto loc_55B515;
    }

loc_55B3DD:
	mov(mv, &ts->eax, x86::mem(0x863794, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	if (ts->eflags.zero) {
        goto loc_55B410;
    }
	mov(mv, &ts->ecx, x86::mem(0x86378C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_55B410;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x791898);
	push(mv, &ts->esp, ts->edi);
	game::sub_495400(ts, mv);
	push(mv, &ts->esp, 0x791898);
	push(mv, &ts->esp, ts->edi);
	game::sub_495500(ts, mv);
	add(&ts->esp, 0x14);
	goto loc_55B41E;

loc_55B410:
	push(mv, &ts->esp, 0x791898);
	push(mv, &ts->esp, ts->edi);
	game::sub_4954C0(ts, mv);
	add(&ts->esp, 0x8);

loc_55B41E:
	mov(mv, &ts->eax, x86::mem(0x863798, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55B44D;
    }
	mov(mv, &ts->ecx, x86::mem(0x86378C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_55B44D;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x79D3BC);
	push(mv, &ts->esp, ts->edi);
	game::sub_495400(ts, mv);
	push(mv, &ts->esp, 0x79D3BC);
	push(mv, &ts->esp, ts->edi);
	game::sub_495500(ts, mv);
	add(&ts->esp, 0x14);
	goto loc_55B45B;

loc_55B44D:
	push(mv, &ts->esp, 0x79D3BC);
	push(mv, &ts->esp, ts->edi);
	game::sub_4954C0(ts, mv);
	add(&ts->esp, 0x8);

loc_55B45B:
	mov(mv, &ts->eax, x86::mem(0x86379C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55B48A;
    }
	mov(mv, &ts->ecx, x86::mem(0x86378C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_55B48A;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x791888);
	push(mv, &ts->esp, ts->edi);
	game::sub_495400(ts, mv);
	push(mv, &ts->esp, 0x791888);
	push(mv, &ts->esp, ts->edi);
	game::sub_495500(ts, mv);
	add(&ts->esp, 0x14);
	goto loc_55B498;

loc_55B48A:
	push(mv, &ts->esp, 0x791888);
	push(mv, &ts->esp, ts->edi);
	game::sub_4954C0(ts, mv);
	add(&ts->esp, 0x8);

loc_55B498:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x74, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_55B50E;
    }
	push(mv, &ts->esp, 0x78FA24);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55B50E;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x74, 4));
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_55B50A;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x70, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55B50E;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x6C, 4));
	push(mv, &ts->esp, 0x79D3B0);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1B0);
	push(mv, &ts->esp, 0x140);
	mov(&ts->ecx, 0x832DAC);
	game::sub_4889F0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55B50E;
    }
	mov(&ts->ecx, 0x832DAC);
	mov(mv, x86::mem(ts->esi + 0x70, 1), 0x1);
	game::sub_488B50(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x71, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x72, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x74, 4), 0x0);
	game::sub_523EF0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x10);

loc_55B50A:
	inc(&ts->eax);
	mov(mv, x86::mem(ts->esi + 0x74, 4), ts->eax);

loc_55B50E:
	mov(&ts->ecx, ts->esi);
	game::sub_523EF0(ts, mv);

loc_55B515:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x10);
}

void sub_55B520(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x778374);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x158);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_55B56E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_557F20(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_55B56E:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_778360:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79D3CC);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_55B520:
	mov(&ts->eax, 0x7E38B0);
	goto ___CxxFrameHandler;
}

void sub_55B580(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55B5B5;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	game::sub_558C00(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55B5B5;
    }
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, 0x8637B0);
	game::sub_542390(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	game::sub_50C680(ts, mv);

loc_55B5B5:
	goto sub_4A8630;
}

void sub_55B5C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(0x838521, 1));
	sub(&ts->esp, 0x34);
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ebp, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_55B5EE;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_52CEF0(ts, mv);
	xor_(&ts->ecx, ts->ecx);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_55B5EE;
    }
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->ecx);

loc_55B5EE:
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x40, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->ebp);
	game::sub_54E5B0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55BC79;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_52CEF0(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->ebp + 0x11, 1));
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_55B620;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55B620;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x1C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_55B646;
    }

loc_55B620:
	push(mv, &ts->esp, ts->esi);
	game::sub_50B2A0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_55B646;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x79D618);
	game::sub_50D510(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0x34);
	retn(mv, &ts->esp, 0x10);

loc_55B646:
	cmp(&ts->eflags, ts->esi, 0xC519BFC0);
	push(mv, &ts->esp, ts->edi);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_55B945;
    }
	if (ts->eflags.zero) {
        goto loc_55B756;
    }
	cmp(&ts->eflags, ts->esi, 0x9757A0C0);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_55B737;
    }
	if (ts->eflags.zero) {
        goto loc_55B72B;
    }
	cmp(&ts->eflags, ts->esi, 0x2C0E485A);
	if (ts->eflags.zero) {
        goto loc_55B6AE;
    }
	cmp(&ts->eflags, ts->esi, 0x35F8620B);
	if (ts->eflags.zero) {
        goto loc_55B72B;
    }

loc_55B67F:
	cmp(&ts->eflags, ts->esi, 0x911AB364);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_55BC45;
    }
	if (ts->eflags.zero) {
        goto loc_55BC4D;
    }
	cmp(&ts->eflags, ts->esi, 0xC407210);
	if (ts->eflags.zero) {
        goto loc_55BC4D;
    }
	cmp(&ts->eflags, ts->esi, 0x406415E3);
	if (ts->eflags.zero) {
        goto loc_55BC4D;
    }
	goto loc_55BC63;

loc_55B6AE:
	mov(&ts->ecx, 0x89CF48);
	mov(mv, x86::mem(0x838521, 1), 0x0);
	game::sub_5F00F0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55BC63;
    }
	push(mv, &ts->esp, 0x0);
	game::sub_4A0140(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x8, 4));
	mov(mv, &ts->esi, x86::mem(ts->edx + 0xE8, 4));
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_55B709;
    }

loc_55B6E4:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_49FFA0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55B703;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_5379A0(ts, mv);
	add(&ts->esp, 0x4);

loc_55B703:
	test(&ts->eflags, ts->edi, ts->edi);
	mov(&ts->esi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_55B6E4;
    }

loc_55B709:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, 0x78FCD8);
	push(mv, &ts->esp, 0x78F530);
	game::sub_555F10(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0x34);
	retn(mv, &ts->esp, 0x10);

loc_55B72B:
	mov(&ts->ecx, ts->ebp);
	game::sub_542720(ts, mv);
	goto loc_55B67F;

loc_55B737:
	cmp(&ts->eflags, ts->esi, 0x9803F6E2);
	if (!ts->eflags.zero) {
        goto loc_55B67F;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x1C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55BC78;
    }
	goto loc_55BC63;

loc_55B756:
	push(mv, &ts->esp, 0x78F2F8);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55BC4D;
    }
	mov(mv, &ts->eax, x86::mem(0x8637C8, 4));
	mov(mv, &ts->edx, x86::mem(0x8651AC, 4));
	sub(&ts->edx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x44, 4), ts->edx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7F942C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_55BC4D;
    }
	push(mv, &ts->esp, 0x79D5E4);
	game::sub_50D510(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_52CEF0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x1C, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_55B933;
    }
	cmp(mv, &ts->eflags, x86::mem(0x8500D0, 4), 0xC);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_55B933;
    }
	push(mv, &ts->esp, 0x79D5C4);
	game::sub_50D510(ts, mv);
	movzx(mv, &ts->eax, x86::mem(0x838520, 1));
	movzx(mv, &ts->ecx, x86::mem(0x838528, 1));
	movzx(mv, &ts->edx, x86::mem(ts->ebp + 0x8, 1));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x79D588);
	game::sub_50D510(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->ebp + 0x8, 1));
	add(&ts->esp, 0x14);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55BC4D;
    }
	mov(mv, &ts->al, x86::mem(0x838528, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_55BC4D;
    }
	push(mv, &ts->esp, 0x78FD7C);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55BC4D;
    }
	push(mv, &ts->esp, 0x790038);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55BC4D;
    }
	push(mv, &ts->esp, 0x78F2F8);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55BC4D;
    }
	push(mv, &ts->esp, 0x78FA24);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55BC4D;
    }
	push(mv, &ts->esp, 0x799E74);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55BC4D;
    }
	push(mv, &ts->esp, 0x799E54);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55BC4D;
    }
	push(mv, &ts->esp, 0x799E34);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55BC4D;
    }
	push(mv, &ts->esp, 0x799E14);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55BC4D;
    }
	push(mv, &ts->esp, 0x799DC4);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55BC4D;
    }
	push(mv, &ts->esp, 0x790444);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55BC4D;
    }
	push(mv, &ts->esp, 0x790458);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55BC4D;
    }
	mov(mv, &ts->al, x86::mem(0x838520, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55B933;
    }
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	push(mv, &ts->esp, 0x4A);
	game::sub_458520(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x8384E0);
	game::sub_43DBD0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x7902A0);
	game::sub_555EB0(ts, mv);
	add(&ts->esp, 0x18);
	mov(mv, x86::mem(0x838520, 1), 0x1);

loc_55B933:
	push(mv, &ts->esp, 0x79D558);
	game::sub_50D510(ts, mv);
	add(&ts->esp, 0x4);
	goto loc_55BC4D;

loc_55B945:
	cmp(&ts->eflags, ts->esi, 0xC519BFC3);
	if (ts->eflags.zero) {
        goto loc_55BBD7;
    }
	cmp(&ts->eflags, ts->esi, 0xC98356BA);
	if (ts->eflags.zero) {
        goto loc_55BBCB;
    }
	cmp(&ts->eflags, ts->esi, 0xF764CBE7);
	if (!ts->eflags.zero) {
        goto loc_55B67F;
    }
	cmp(mv, &ts->eflags, x86::mem(0x8500D0, 4), 0xC);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_55BB99;
    }
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x1C, 1), 0x0);
	mov(&ts->ecx, 0x8);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x1D, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	xor_(&ts->edx, ts->edx);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	mov(mv, x86::mem(ts->esp + 0xD, 4), ts->edx);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x15, 4), ts->edx);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	xor_(&ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x50, 1), 0x0);
	mov(mv, x86::mem(ts->esp + 0x10, 1), 0x0);
	mov(mv, x86::mem(ts->esp + 0x19, 4), ts->edx);
	xor_(&ts->edi, ts->edi);

loc_55B9A8:
	push(mv, &ts->esp, ts->edi);
	game::sub_58F6D0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_5847F0(ts, mv);
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_55B9DE;
    }
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, 0x836014);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_55B9D8;
    }
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, x86::mem(ts->esp + 0x50, 1), 0x1);

loc_55B9D8:
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, 0x5);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_55B9A8;
    }

loc_55B9DE:
	mov(mv, &ts->al, x86::mem(ts->esp + 0x50, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_55BB4A;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x836014);
	game::sub_58F6D0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_5847A0(ts, mv);
	push(mv, &ts->esp, 0x79D548);
	push(mv, &ts->esp, 0x24);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->esi, ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, 0x79D53C);
	push(mv, &ts->esp, ts->edx);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_742360(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0xD);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x790380);
	push(mv, &ts->esp, ts->ecx);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_742360(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	add(&ts->esi, 0xC);
	push(mv, &ts->esp, ts->esi);
	game::sub_58F6D0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_58D150(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esp + 0x10, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(&ts->eax, 0x783FE5);
	if (ts->eflags.zero) {
        goto loc_55BA71;
    }
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));

loc_55BA71:
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x85009C);
	game::sub_43DBD0(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esp + 0x18, 1));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	mov(&ts->eax, 0x783FE5);
	if (ts->eflags.zero) {
        goto loc_55BA90;
    }
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));

loc_55BA90:
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x8500A9);
	game::sub_43DBD0(ts, mv);
	mov(mv, &ts->bl, x86::mem(ts->esp + 0x18, 1));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x558F50);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x2C, 4));
	test(&ts->eflags, ts->bl, ts->bl);
	push(mv, &ts->esp, ts->edx);
	setnz(ts->eflags, &ts->al);
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(0x85009B, 1), ts->al);
	game::sub_58F740(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->ecx, ts->eax);
	game::sub_58D6B0(ts, mv);
	mov(&ts->ecx, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x79D4F8);
	game::sub_50D510(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_55BB06;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, 0x836014);
	push(mv, &ts->esp, 0x91070FF2);
	push(mv, &ts->esp, 0x7902C8);
	push(mv, &ts->esp, ts->eax);
	game::sub_558330(ts, mv);
	add(&ts->esp, 0x10);
	mov(mv, x86::mem(0x83852C, 4), ts->eax);
	goto loc_55BB94;

loc_55BB06:
	push(mv, &ts->esp, 0x8384E0);
	push(mv, &ts->esp, 0x79D488);
	game::sub_50D510(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79031C);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, 0x8384E0);
	game::sub_537C00(ts, mv);
	push(mv, &ts->esp, 0x331F4F58);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->eax);
	goto loc_55BB8C;

loc_55BB4A:
	push(mv, &ts->esp, 0x8384E0);
	push(mv, &ts->esp, 0x79D488);
	game::sub_50D510(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79031C);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, 0x8384E0);
	game::sub_537C00(ts, mv);
	push(mv, &ts->esp, 0x331F4F58);
	game::sub_4FFA80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->ecx);

loc_55BB8C:
	game::sub_558540(ts, mv);
	add(&ts->esp, 0x34);

loc_55BB94:
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x48, 4));
	pop(mv, &ts->esp, ts->ebx);

loc_55BB99:
	push(mv, &ts->esp, 0x790000);
	mov(mv, x86::mem(0x838521, 1), 0x0);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55BC63;
    }
	mov(&ts->ecx, 0xFF);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->ecx);
	goto loc_55BC63;

loc_55BBCB:
	mov(&ts->ecx, ts->ebp);
	game::sub_537F50(ts, mv);
	goto loc_55BC63;

loc_55BBD7:
	push(mv, &ts->esp, 0x79D454);
	game::sub_50D510(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_52CEF0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x54, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x1C, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->edx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_55BC36;
    }
	push(mv, &ts->esp, 0x79D430);
	game::sub_50D510(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x28, 4));
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55BC36;
    }
	push(mv, &ts->esp, 0x79D410);
	game::sub_50D510(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, 0x2);
	push(mv, &ts->esp, ts->eax);
	game::sub_51DE60(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x28, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->edx);
	game::sub_558AC0(ts, mv);
	add(&ts->esp, 0x18);

loc_55BC36:
	push(mv, &ts->esp, 0x79D3E0);
	game::sub_50D510(ts, mv);
	add(&ts->esp, 0x4);
	goto loc_55BC63;

loc_55BC45:
	cmp(&ts->eflags, ts->esi, 0xC519BFC0);
	if (!ts->eflags.zero) {
        goto loc_55BC63;
    }

loc_55BC4D:
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x4C, 4), 0x3);
	if (!ts->eflags.zero) {
        goto loc_55BC63;
    }
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	game::sub_50CF10(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55BC78;
    }

loc_55BC63:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x50, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x48, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->ebp);
	call(ts, mv, x86::mem(ts->eax + 0x8, 4));

loc_55BC78:
	pop(mv, &ts->esp, ts->edi);

loc_55BC79:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0x34);
	retn(mv, &ts->esp, 0x10);
}

void sub_55BC90(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	mov(mv, &ts->eax, x86::mem(0x7FA1B8, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_43DCC0(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55BD33;
    }
	mov(mv, &ts->ecx, x86::mem(0x7FA1BC, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	game::sub_43DCC0(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55BD33;
    }
	mov(mv, &ts->edx, x86::mem(0x7FA1D8, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->esi);
	game::sub_43DCC0(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55BD33;
    }
	mov(mv, &ts->eax, x86::mem(0x7FA1E0, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_43DCC0(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55BD33;
    }
	mov(mv, &ts->ecx, x86::mem(0x7FA1F8, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	game::sub_43DCC0(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55BD33;
    }
	mov(mv, &ts->edx, x86::mem(0x7FA1F4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->esi);
	game::sub_43DCC0(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55BD33;
    }
	mov(mv, &ts->eax, x86::mem(0x7FA1E4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_43DCC0(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55BD33;
    }
	mov(&ts->ecx, 0x8637D0);
	game::sub_53D8C0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_55BD33:
	mov(&ts->ecx, 0x8637D0);
	game::sub_557EC0(ts, mv);
	push(mv, &ts->esp, 0x8389D0);
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8637D0);
	game::sub_55B1A0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_55BD60(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_520920(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x4, 4));
	lea(mv, &ts->ebx, x86::mem(ts->edi + 0x4, 4));
	xor_(&ts->ebp, ts->ebp);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_55BDDC;
    }
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_55BD90:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DCC0(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_55BDA7;
    }
	mov(&ts->ebp, ts->esi);

loc_55BDA7:
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_55BD90;
    }
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_55BDDC;
    }
	mov(mv, x86::mem(ts->edi + 0xC, 4), ts->ebp);
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_55BDCE;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_5377A0(ts, mv);

loc_55BDCE:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_55BC90(ts, mv);

loc_55BDDC:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_55BDF0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	game::sub_520A80(ts, mv);
	mov(&ts->edi, ts->eax);
	push(mv, &ts->esp, 0x78F5A4);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	game::sub_43DCC0(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_55BE4B;
    }
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_55BE3C;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_5377A0(ts, mv);

loc_55BE3C:
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x838980);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0xC);
	goto sub_54FD40;

loc_55BE4B:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x794DF0);
	push(mv, &ts->esp, ts->edi);
	game::sub_43DCC0(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55BED7;
    }
	push(mv, &ts->esp, 0x78F354);
	push(mv, &ts->esp, ts->edi);
	game::sub_43DCC0(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55BED7;
    }
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->esi, x86::mem(ts->ebx, 4));
	xor_(&ts->edi, ts->edi);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_55BED0;
    }
	goto loc_55BE80;

loc_55BE80:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DCC0(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_55BE97;
    }
	mov(&ts->edi, ts->esi);

loc_55BE97:
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_55BE80;
    }
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_55BED0;
    }
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->edi);
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_55BEC2;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5377A0(ts, mv);

loc_55BEC2:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_55BC90(ts, mv);

loc_55BED0:
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_55BED7:
	mov(mv, &ts->eax, x86::mem(0x83898C, 4));
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_55BEEA;
    }
	cmp(&ts->eflags, ts->eax, 0x4);
	if (ts->eflags.zero) {
        goto loc_55BEEA;
    }
	xor_(&ts->bl, ts->bl);
	goto loc_55BEEC;

loc_55BEEA:
	mov(&ts->bl, 0x1);

loc_55BEEC:
	mov(&ts->ecx, 0x838980);
	game::sub_521100(ts, mv);
	mov(&ts->ecx, 0x83A9D0);
	game::sub_52A4C0(ts, mv);
	mov(mv, &ts->cl, x86::mem(0x838540, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_55BF0F;
    }
	mov(mv, x86::mem(0x838540, 1), ts->al);

loc_55BF0F:
	test(&ts->eflags, ts->bl, ts->bl);
	if (ts->eflags.zero) {
        goto loc_55BF44;
    }
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_55BF44;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x2042);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4A3100(ts, mv);
	add(&ts->esp, 0x1C);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x838980);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0xC);
	goto sub_54FD40;

loc_55BF44:
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_55BF5D;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_5377A0(ts, mv);

loc_55BF5D:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_55BC90(ts, mv);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x838980);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0xC);
	goto sub_54FD40;
}

void sub_55BF80(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	cmp(mv, &ts->eflags, x86::mem(ts->ebp + 0xC, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto loc_55BFA0;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x5C, 4));
	mov(mv, x86::mem(0x838998, 4), ts->eax);
	game::sub_54F980(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_55BD60(ts, mv);

loc_55BFA0:
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x14);
}

void sub_55BFB0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	cmp(mv, &ts->eflags, x86::mem(ts->ebp + 0xC, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto loc_55C00A;
    }
	push(mv, &ts->esp, 0x22);
	mov(&ts->ecx, 0x8392C0);
	game::sub_6102F0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55BFDA;
    }
	mov(mv, &ts->al, x86::mem(ts->eax + 0x5, 1));
	and_(&ts->al, 0xE0);
	neg(&ts->al);
	sbb(&ts->eax, ts->eax);
	inc(&ts->eax);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_55BFF4;
    }

loc_55BFDA:
	mov(mv, x86::mem(0x838998, 4), 0x2);
	game::sub_54F980(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_55BD60(ts, mv);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x14);

loc_55BFF4:
	mov(mv, x86::mem(0x838998, 4), 0x3);
	game::sub_54F980(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_55BD60(ts, mv);

loc_55C00A:
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x14);
}

void sub_55C010(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x777D78);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	game::sub_552330(ts, mv);
	xor_(&ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esi, 4), 0x79D674);
	mov(mv, x86::mem(ts->esi + 0x150, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x154, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x158, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x160, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x164, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x168, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x169, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x16A, 1), ts->bl);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ebx);
	mov(mv, x86::mem(0x838528, 1), ts->bl);
	game::sub_5205B0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8651AC, 4));
	mov(mv, x86::mem(ts->esi + 0x150, 4), ts->ecx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x154, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x7B, 1), 0x1);
	game::sub_5593E0(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_5470F0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_55C0AF;
    }
	mov(mv, &ts->al, x86::mem(ts->eax + 0x50, 1));
	goto loc_55C0B1;

loc_55C0AF:
	xor_(&ts->al, ts->al);

loc_55C0B1:
	push(mv, &ts->esp, 0x790000);
	mov(mv, x86::mem(ts->esi + 0x15C, 1), ts->al);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55C0F5;
    }
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	if (ts->eflags.zero) {
        goto loc_55C0F5;
    }
	cmp(&ts->eflags, ts->eax, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0xFF);
	if (ts->eflags.zero) {
        goto loc_55C0E9;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x790000);
	push(mv, &ts->esp, 0x4);
	goto loc_55C0F0;

loc_55C0E9:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x790000);
	push(mv, &ts->esp, ts->ebx);

loc_55C0F0:
	game::sub_555D00(ts, mv);

loc_55C0F5:
	mov(mv, &ts->eax, x86::mem(0x8384D8, 4));
	mov(&ts->ecx, ts->eax);
	push(mv, &ts->esp, 0x1);
	mov(mv, x86::mem(ts->eax + 0x6C, 1), 0x1);
	game::sub_542990(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_54E6E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x83854C, 1), ts->bl);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_777D70:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto ??1strstreambuf@std@@UAE@XZ_5;

SEH_569610:
	mov(&ts->eax, 0x7E3B38);
	goto ___CxxFrameHandler;
}

void sub_55C140(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_55C160(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_55C158;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_55C158:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_55C160(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x79D674);
	goto ??1strstreambuf@std@@UAE@XZ_5;
}

void sub_55C170(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x8, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	mov(&ts->ebx, ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_55C1E6;
    }
	cmp(&ts->eflags, ts->edi, 0xAA);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_55C1E6;
    }
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->eax, x86::mem(ts->ebx + 0x940, 4));
	lea(mv, &ts->esi, x86::mem(ts->ebx + 0x50, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_413440(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_631D20(ts, mv);
	cmp(&ts->eflags, ts->edi, 0x1D);
	if (!ts->eflags.zero) {
        goto loc_55C1B8;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x1E);
	mov(&ts->ecx, ts->esi);
	game::sub_631D20(ts, mv);
	goto loc_55C1C4;

loc_55C1B8:
	cmp(&ts->eflags, ts->edi, 0x22);
	if (!ts->eflags.zero) {
        goto loc_55C1C4;
    }
	mov(&ts->ecx, ts->ebx);
	game::sub_547470(ts, mv);

loc_55C1C4:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->esi);
	game::sub_4D8EC0(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x8389D0);
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8637D0);
	game::sub_55B1A0(ts, mv);
	pop(mv, &ts->esp, ts->esi);

loc_55C1E6:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x8);
}

void sub_55C1F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->esi, x86::mem(ts->ecx + 0x50, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_631D20(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->esi);
	game::sub_4D8EC0(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x8389D0);
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8637D0);
	game::sub_55B1A0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x8);
}

void sub_55C230(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x8, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_55C365;
    }
	cmp(&ts->eflags, ts->edi, 0xAA);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_55C365;
    }
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->esi, x86::mem(ts->ecx + 0x940, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_631D20(ts, mv);
	cmp(&ts->eflags, ts->edi, 0x1D);
	if (!ts->eflags.zero) {
        goto loc_55C277;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x1E);
	mov(&ts->ecx, ts->esi);
	game::sub_631D20(ts, mv);
	goto loc_55C32A;

loc_55C277:
	cmp(&ts->eflags, ts->edi, 0x22);
	if (!ts->eflags.zero) {
        goto loc_55C289;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x4, 4));
	game::sub_5474A0(ts, mv);
	goto loc_55C32A;

loc_55C289:
	cmp(&ts->eflags, ts->edi, 0x9);
	if (!ts->eflags.zero) {
        goto loc_55C2BC;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x721AFF7C);
	mov(&ts->ecx, ts->ebx);
	game::sub_61B500(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55C2A8;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x4, 4));
	game::sub_50EC10(ts, mv);

loc_55C2A8:
	mov(mv, &ts->al, x86::mem(ts->ebx + 0x5, 1));
	shr(&ts->al, 0x5);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_55C32A;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x4, 4));
	game::sub_50EC50(ts, mv);
	goto loc_55C32A;

loc_55C2BC:
	cmp(&ts->eflags, ts->edi, 0x5D);
	if (!ts->eflags.zero) {
        goto loc_55C306;
    }
	push(mv, &ts->esp, 0x6);
	mov(&ts->ecx, ts->esi);
	game::sub_6102F0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55C2DF;
    }
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x5, 1));
	shr(&ts->cl, 0x5);
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_55C2DF;
    }
	mov(&ts->edi, 0x1);
	goto loc_55C2E1;

loc_55C2DF:
	xor_(&ts->edi, ts->edi);

loc_55C2E1:
	push(mv, &ts->esp, 0x5D);
	mov(&ts->ecx, ts->esi);
	game::sub_6102F0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55C32A;
    }
	mov(mv, &ts->dl, x86::mem(ts->eax + 0x5, 1));
	shr(&ts->dl, 0x5);
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_55C32A;
    }
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x4, 4));
	if (!ts->eflags.zero) {
        goto loc_55C325;
    }
	game::sub_50EC80(ts, mv);
	goto loc_55C32A;

loc_55C306:
	cmp(&ts->eflags, ts->edi, 0x6);
	if (!ts->eflags.zero) {
        goto loc_55C32A;
    }
	push(mv, &ts->esp, 0x5D);
	mov(&ts->ecx, ts->esi);
	game::sub_6102F0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55C32A;
    }
	mov(mv, &ts->al, x86::mem(ts->eax + 0x5, 1));
	shr(&ts->al, 0x5);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_55C32A;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x4, 4));

loc_55C325:
	game::sub_50ECE0(ts, mv);

loc_55C32A:
	mov(mv, &ts->edi, x86::mem(ts->ebp - 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x50, 4));
	game::sub_413440(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->esi);
	game::sub_4D8EC0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x2C, 4));
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->esi);
	add(&ts->ecx, 0x18);
	game::sub_503950(ts, mv);
	push(mv, &ts->esp, 0x8389D0);
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8637D0);
	game::sub_55B1A0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);

loc_55C365:
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x8);
}

void sub_55C370(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0x40);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_55C456;
    }
	cmp(&ts->eflags, ts->eax, 0x43);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_55C456;
    }
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0xC, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_55C455;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_50EF10(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55C40C;
    }
	mov(&ts->ecx, ts->ebx);
	game::sub_521580(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55C40C;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x564B8CB6);
	mov(&ts->ecx, ts->esi);
	game::sub_61B500(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x40);
	if (ts->eflags.zero) {
        goto loc_55C40C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x48, 4));
	lea(mv, &ts->eax, x86::mem(ts->ebx + 0x48, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55C402;
    }
	mov(&ts->edi, ts->ecx);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55C402;
    }
	nop();

loc_55C3D0:
	mov(mv, &ts->esi, x86::mem(ts->edi + 0xC, 4));
	cmp(&ts->eflags, ts->esi, 0x40);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_55C3DD;
    }
	cmp(&ts->eflags, ts->esi, 0x43);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_55C3E9;
    }

loc_55C3DD:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->ebx);
	game::sub_50E170(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_55C3F6;
    }

loc_55C3E9:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->ebx + 0x50, 4));
	game::sub_631D20(ts, mv);

loc_55C3F6:
	mov(mv, &ts->edi, x86::mem(ts->edi, 4));
	lea(mv, &ts->eax, x86::mem(ts->ebx + 0x48, 4));
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_55C3D0;
    }
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0xC, 4));

loc_55C402:
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->edi, x86::mem(ts->ebx + 0x50, 4));
	push(mv, &ts->esp, ts->ecx);
	goto loc_55C42C;

loc_55C40C:
	mov(&ts->esi, 0x40);
	lea(mv, &ts->edi, x86::mem(ts->ebx + 0x50, 4));

loc_55C414:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	game::sub_631D20(ts, mv);
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, 0x43);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_55C414;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);

loc_55C42C:
	mov(&ts->ecx, ts->edi);
	game::sub_631D20(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	game::sub_4D8EC0(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x8389D0);
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8637D0);
	game::sub_55B1A0(ts, mv);
	pop(mv, &ts->esp, ts->edi);

loc_55C455:
	pop(mv, &ts->esp, ts->esi);

loc_55C456:
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x8);
}

void sub_55C460(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ebx, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->esi, x86::mem(ts->ebx + 0x940, 4));
	lea(mv, &ts->edi, x86::mem(ts->ebx + 0x50, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	game::sub_413440(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->esi);
	game::sub_4D8EC0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x48, 4));
	lea(mv, &ts->eax, x86::mem(ts->ebx + 0x48, 4));
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55C511;
    }
	mov(&ts->ebx, ts->ecx);
	cmp(&ts->eflags, ts->ebx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55C504;
    }

loc_55C498:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0xC, 4));
	cmp(&ts->eflags, ts->eax, 0x40);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_55C4E8;
    }
	cmp(&ts->eflags, ts->eax, 0x43);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_55C4E8;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	game::sub_50EF10(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_55C4E8;
    }
	mov(&ts->esi, 0x40);

loc_55C4B7:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	game::sub_631D20(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	game::sub_4D8EC0(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x8389D0);
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8637D0);
	game::sub_55B1A0(ts, mv);
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, 0x43);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_55C4B7;
    }

loc_55C4E8:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_631D20(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->ebx, x86::mem(ts->ebx, 4));
	add(&ts->eax, 0x48);
	cmp(&ts->eflags, ts->ebx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_55C498;
    }

loc_55C504:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	game::sub_4D8EC0(ts, mv);
	add(&ts->esp, 0xC);

loc_55C511:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_55C520(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x10, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x150, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x8, 4));
	if (!ts->eflags.zero) {
        goto loc_55C549;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_543D40(ts, mv);

loc_55C549:
	cmp(&ts->eflags, ts->edi, 0x911AB364);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_55C779;
    }
	if (ts->eflags.zero) {
        goto loc_55C698;
    }
	cmp(&ts->eflags, ts->edi, 0x34DC1BEC);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_55C668;
    }
	if (ts->eflags.zero) {
        goto loc_55C647;
    }
	cmp(&ts->eflags, ts->edi, 0xC407210);
	if (ts->eflags.zero) {
        goto loc_55C59B;
    }
	cmp(&ts->eflags, ts->edi, 0x1FAB5998);
	if (!ts->eflags.zero) {
        goto loc_55C8C7;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_538CA0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x150, 1), 0x0);
	game::sub_53B660(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_55C59B:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x150, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55C8C7;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537D40(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55C8C7;
    }
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4C, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_527700(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	mov(&ts->ebx, 0x1);
	if (ts->eflags.zero) {
        goto loc_55C5EB;
    }
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_55C5EB;
    }
	mov(mv, &ts->eax, x86::mem(0x83898C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55C635;
    }

loc_55C5EB:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->al, x86::mem(ts->edx + 0x22, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55C8C7;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537D40(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55C8C7;
    }
	mov(&ts->ecx, ts->edi);
	game::sub_51FD10(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C60(ts, mv);
	add(&ts->esp, 0x10);

loc_55C635:
	mov(mv, x86::mem(ts->esi + 0x150, 1), ts->bl);
	game::sub_53B630(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_55C647:
	push(mv, &ts->esp, ts->ebx);
	game::sub_50D2A0(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(0x83A9D8, 4), ts->eax);
	game::sub_53B660(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_54FF30(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_55C668:
	cmp(&ts->eflags, ts->edi, 0x35F8620B);
	if (!ts->eflags.zero) {
        goto loc_55C8C7;
    }
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, 0x8635BC);
	game::sub_5243D0(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, 0x83A9D0);
	game::sub_52A460(ts, mv);
	game::sub_53B660(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_55C698:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x150, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55C8C7;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537D40(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55C8C7;
    }
	mov(mv, &ts->eax, x86::mem(0x83898C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_55C711;
    }
	game::sub_53B630(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xD76E0B5A);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1FAB5998);
	push(mv, &ts->esp, 0x1FAB5998);
	push(mv, &ts->esp, 0xD05FC3A3);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->ecx);
	game::sub_558790(ts, mv);
	add(&ts->esp, 0x24);
	mov(&ts->ecx, ts->esi);
	game::sub_538C00(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_55C711:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537D40(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55C8C7;
    }
	push(mv, &ts->esp, ts->ebx);
	game::sub_50D2A0(ts, mv);
	mov(mv, x86::mem(0x83A9D8, 4), ts->eax);
	mov(&ts->ebx, 0x1);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x150, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x152, 1), ts->bl);
	game::sub_53B630(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	game::sub_51FD10(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C60(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_55C779:
	cmp(&ts->eflags, ts->edi, 0xD05FC3A3);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_55C845;
    }
	if (ts->eflags.zero) {
        goto loc_55C7EF;
    }
	cmp(&ts->eflags, ts->edi, 0xB4EDEB6D);
	if (ts->eflags.zero) {
        goto loc_55C7D5;
    }
	cmp(&ts->eflags, ts->edi, 0xC519BFC3);
	if (!ts->eflags.zero) {
        goto loc_55C8C7;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x150, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55C8C7;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537D40(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55C8C7;
    }
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x151, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_55C7D5:
	mov(&ts->ecx, ts->esi);
	game::sub_538CA0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x151, 1), 0x0);
	game::sub_53B660(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_55C7EF:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x10, 4));
	mov(&ts->ebx, 0x1);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x150, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x152, 1), ts->bl);
	game::sub_50D2A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x7FA1B4, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(0x83A9D8, 4), ts->eax);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55C832;
    }
	mov(&ts->ecx, 0xFF);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->ecx);

loc_55C832:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_552C80(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_55C845:
	cmp(&ts->eflags, ts->edi, 0xE1FDE1D1);
	if (!ts->eflags.zero) {
        goto loc_55C8C7;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x152, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_55C8A3;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50B840(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55C874;
    }
	mov(mv, x86::mem(ts->eax + 0x10, 4), 0x0);

loc_55C874:
	mov(mv, &ts->eax, x86::mem(0x83898C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_55C890;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_552C80(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_55C890:
	game::sub_54F980(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_55BDF0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_55C8A3:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x151, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_55C8BB;
    }
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x150, 1), 0x0);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_55C8BB:
	game::sub_54F980(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_55BD60(ts, mv);

loc_55C8C7:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);
}

void sub_55C8D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x778394);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x250);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_55C91E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_559C90(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_55C91E:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_778380:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79D690);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_55C8D0:
	mov(&ts->eax, 0x7E38D4);
	goto ___CxxFrameHandler;
}

void sub_55C930(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x10, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x14, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_556020(ts, mv);
	cmp(&ts->eflags, ts->edi, 0x72619778);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_55C9EB;
    }
	if (ts->eflags.zero) {
        goto loc_55CA84;
    }
	cmp(&ts->eflags, ts->edi, 0xC407210);
	if (ts->eflags.zero) {
        goto loc_55C98F;
    }
	cmp(&ts->eflags, ts->edi, 0x35F8620B);
	if (!ts->eflags.zero) {
        goto loc_55CAB4;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x28, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55CAB4;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->edx + 0x20, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_55C98F:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537D40(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55CAB4;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x10, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esi + 0x138, 4), 0xC407210);
	mov(mv, x86::mem(ts->esi + 0x64, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x13C, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x140, 4), ts->ebx);
	game::sub_537C60(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_55C9EB:
	cmp(&ts->eflags, ts->edi, 0x911C0A4B);
	if (ts->eflags.zero) {
        goto loc_55CA84;
    }
	cmp(&ts->eflags, ts->edi, 0xE1FDE1D1);
	if (!ts->eflags.zero) {
        goto loc_55CAB4;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x138, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto loc_55CAB4;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_521EF0(ts, mv);
	mov(mv, &ts->esi, x86::mem(0x839BB4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_55CA4F;
    }
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x838980);
	game::sub_54FE50(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x838980);
	game::sub_521340(ts, mv);
	game::sub_54F980(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_55BD60(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_55CA4F:
	mov(mv, &ts->esi, x86::mem(0x839BB0, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_55CA71;
    }
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x838980);
	game::sub_521B00(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x838980);
	game::sub_5213D0(ts, mv);

loc_55CA71:
	game::sub_54F980(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_55BD60(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_55CA84:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x58, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0xC, 4), 0x1);
	push(mv, &ts->esp, 0xB34A6C2B);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_55CAA8;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_495520(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_55CAA8:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_4954E0(ts, mv);
	add(&ts->esp, 0x8);

loc_55CAB4:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);
}

void sub_55CAC0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55CC3D;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x5C, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x8, 4));
	cmp(&ts->eflags, ts->ebx, 0xFFFFFFFF);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_55CB1F;
    }
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x50, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_495900(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55CAFB;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_55CAFD;

loc_55CAFB:
	xor_(&ts->eax, ts->eax);

loc_55CAFD:
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->edi + 0xC, 4));
	if (ts->eflags.zero) {
        goto loc_55CB4B;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	movsx(mv, &ts->eax, x86::mem(ts->ecx + 0x838082, 1));
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_55CB4B;
    }
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_458520(ts, mv);
	goto loc_55CB4B;

loc_55CB1F:
	cmp(&ts->eflags, ts->ebx, 0x1);
	if (!ts->eflags.zero) {
        goto loc_55CB4B;
    }
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x50, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_4958F0(ts, mv);
	mov(&ts->ecx, ts->edi);
	game::sub_4AEBC0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55CB4B;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x7);
	push(mv, &ts->esp, ts->eax);
	game::sub_50D150(ts, mv);
	add(&ts->esp, 0xC);

loc_55CB4B:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x5C, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ebp - 0x4, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_55CC3B;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x2C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x110, 4));
	mov(mv, x86::mem(ts->ecx + 0x4C, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x5C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x2C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x110, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x48, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x838980);
	game::sub_55C170(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x110, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x48, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	game::sub_4C2100(ts, mv);
	add(&ts->esp, 0x10);
	cmp(&ts->eflags, ts->ebx, 0x1);
	if (!ts->eflags.zero) {
        goto loc_55CBB1;
    }
	lea(mv, &ts->edi, x86::mem(ts->esi + 0xB4, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_527610(ts, mv);
	mov(&ts->ecx, ts->edi);
	game::sub_495850(ts, mv);
	goto loc_55CBCA;

loc_55CBB1:
	cmp(&ts->eflags, ts->ebx, 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_55CBCA;
    }
	lea(mv, &ts->edi, x86::mem(ts->esi + 0xB4, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_527660(ts, mv);
	mov(&ts->ecx, ts->edi);
	game::sub_495810(ts, mv);

loc_55CBCA:
	mov(&ts->ecx, ts->esi);
	game::sub_547F30(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	if (ts->eflags.zero) {
        goto loc_55CBE0;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_55CBE2;

loc_55CBE0:
	xor_(&ts->eax, ts->eax);

loc_55CBE2:
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->ecx + 0xC, 4));
	if (!ts->eflags.zero) {
        goto loc_55CBFF;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_55CBFF:
	game::sub_4AEBC0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_55CC20;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x100, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_55CC20:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x100, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0x8);

loc_55CC3B:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);

loc_55CC3D:
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_55CC50(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x18C, 1), 0x1);
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x48, 4));
	cmp(&ts->eflags, ts->edi, 0x46);
	if (!ts->eflags.zero) {
        goto loc_55CC72;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_50F5B0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x174, 4), ts->eax);

loc_55CC72:
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	game::sub_548630(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x158, 4));
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0x158, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	mov(&ts->eax, 0x2DAAB07);
	if (!ts->eflags.zero) {
        goto loc_55CC94;
    }
	cmp(&ts->eflags, ts->edi, 0x3F);
	if (ts->eflags.zero) {
        goto loc_55CCA1;
    }

loc_55CC94:
	cmp(&ts->eflags, ts->edi, 0x45);
	if (!ts->eflags.zero) {
        goto loc_55CCAE;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x174, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_55CCAE;
    }

loc_55CCA1:
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x174, 4), ts->eax);
	game::sub_548630(ts, mv);

loc_55CCAE:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x10, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ebx, 4), ts->ebx);
	pop(mv, &ts->esp, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_55CE72;
    }
	cmp(&ts->eflags, ts->edi, 0x44);
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0x4E4485FE);
	mov(mv, x86::mem(ts->esi + 0x188, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_55CD05;
    }
	mov(mv, &ts->ecx, x86::mem(0x8389AC, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_4A5B10(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_55CCFC;
    }
	push(mv, &ts->esp, 0x3F800000);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x0);
	game::sub_4C1860(ts, mv);
	add(&ts->esp, 0xC);
	goto loc_55CD11;

loc_55CCFC:
	mov(mv, x86::mem(ts->esi + 0x18A, 1), 0x1);
	goto loc_55CD11;

loc_55CD05:
	cmp(&ts->eflags, ts->edi, 0x46);
	if (!ts->eflags.zero) {
        goto loc_55CD11;
    }
	mov(mv, x86::mem(0x839BC1, 1), 0x1);

loc_55CD11:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDF422345);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4954E0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x170, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F970);
	push(mv, &ts->esp, 0xDB285767);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x48, 4));
	add(&ts->eax, 0xFFFFFFC1);
	add(&ts->esp, 0x1C);
	cmp(&ts->eflags, ts->eax, 0xD);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_55CD58;
    }
	movzx(mv, &ts->edx, x86::mem(ts->eax + 0x55CE80, 1));
	jmp(x86::mem(0x55CE78, 4));

loc_55CD5F:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x150, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F970);
	push(mv, &ts->esp, ts->eax);
	game::sub_51CF70(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x154, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F970);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51CF70(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x150, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x154, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0x20);

def_55CD58:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x168, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55CE5E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_55CE5E;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x10, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55CDD0;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, ts->eax);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);

loc_55CDD0:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x168, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x48, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x838980);
	game::sub_55C1F0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x168, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x48, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_4C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	add(&ts->esp, 0x10);
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_55CE2C;
    }
	mov(mv, &ts->eax, x86::mem(0x8389A0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_55CE2C;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x79D6AC);
	push(mv, &ts->esp, ts->eax);
	game::sub_495500(ts, mv);
	add(&ts->esp, 0x8);

loc_55CE2C:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x168, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x48, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x85AD40);
	game::sub_514280(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, 0x79D6AC);
	push(mv, &ts->esp, ts->edi);
	game::sub_542600(ts, mv);
	add(&ts->esp, 0x10);

loc_55CE5E:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x281);
	game::sub_54E6E0(ts, mv);

loc_55CE72:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_55CE90(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x58, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->ebx + 0x188, 1), 0x0);
	mov(mv, x86::mem(ts->ebx + 0x28, 4), 0xDC884CB);
	if (ts->eflags.zero) {
        goto loc_55CEF5;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x48, 4));
	cmp(&ts->eflags, ts->eax, 0x44);
	if (!ts->eflags.zero) {
        goto loc_55CEE9;
    }
	mov(mv, &ts->ecx, x86::mem(0x8389AC, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_4A5B10(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_55CEE0;
    }
	push(mv, &ts->esp, 0x3F800000);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	game::sub_4C1860(ts, mv);
	add(&ts->esp, 0xC);
	goto loc_55CEF5;

loc_55CEE0:
	mov(mv, x86::mem(ts->ebx + 0x18B, 1), 0x1);
	goto loc_55CEF5;

loc_55CEE9:
	cmp(&ts->eflags, ts->eax, 0x46);
	if (!ts->eflags.zero) {
        goto loc_55CEF5;
    }
	mov(mv, x86::mem(0x839BC1, 1), 0x0);

loc_55CEF5:
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0xDF422345);
	push(mv, &ts->esp, ts->ecx);
	game::sub_495520(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0x9BA6D658);
	push(mv, &ts->esp, ts->edx);
	game::sub_4954E0(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->ebp + 0x8, 1));
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_55CF71;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x790A40);
	push(mv, &ts->esp, 0xDB285767);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x150, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x790A40);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51CF70(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x154, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x790A40);
	push(mv, &ts->esp, ts->edx);
	game::sub_51CF70(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x150, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x154, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x30);

loc_55CF71:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x168, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55CF92;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x10, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55CF92;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F21C);
	push(mv, &ts->esp, ts->eax);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);

loc_55CF92:
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0x79D6AC);
	push(mv, &ts->esp, ts->edx);
	game::sub_4954C0(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->ecx, 0x838980);
	game::sub_55C460(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(0x8389A0, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_55D093;
    }
	mov(&ts->ecx, 0x838980);
	game::sub_50EF10(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_55D008;
    }
	mov(&ts->esi, 0x40);
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_55CFD0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x8389D0);
	game::sub_631D20(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x8389D0);
	game::sub_4D8EC0(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x8389D0);
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8637D0);
	game::sub_55B1A0(ts, mv);
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, 0x43);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_55CFD0;
    }

loc_55D008:
	mov(mv, &ts->eax, x86::mem(0x839BB8, 4));
	mov(mv, &ts->ecx, x86::mem(0x8389A8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x8389D0);
	game::sub_631D20(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x8389D0);
	game::sub_4D8EC0(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x8389D0);
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8637D0);
	game::sub_55B1A0(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->ebx + 0x160, 4));
	lea(mv, &ts->edi, x86::mem(ts->ebx + 0x160, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_55D0A7;
    }

loc_55D054:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x8389D0);
	game::sub_631D20(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x8389D0);
	game::sub_4D8EC0(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x8389D0);
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8637D0);
	game::sub_55B1A0(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_55D054;
    }
	goto loc_55D0A7;

loc_55D093:
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x58, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x48, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->ebx);
	game::sub_50F5B0(ts, mv);
	mov(mv, x86::mem(ts->ebx + 0x174, 4), ts->eax);

loc_55D0A7:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	game::sub_54E6E0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_55D0D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	cmp(&ts->eflags, ts->ecx, 0x5073EF13);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x174, 4));
	if (!ts->eflags.zero) {
        goto loc_55D247;
    }
	cmp(&ts->eflags, ts->eax, 0x2DAAB07);
	if (ts->eflags.zero) {
        goto loc_55D238;
    }
	cmp(&ts->eflags, ts->eax, 0x3437A52);
	if (ts->eflags.zero) {
        goto loc_55D270;
    }
	cmp(&ts->eflags, ts->eax, 0x3797533);
	if (!ts->eflags.zero) {
        goto loc_55D112;
    }

loc_55D108:
	mov(mv, x86::mem(ts->esi + 0x174, 4), 0x3437A52);

loc_55D112:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x174, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_55D2C1;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x168, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, 0x1);
	if (ts->eflags.zero) {
        goto loc_55D144;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x10, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55D144;
    }
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x78F21C);
	push(mv, &ts->esp, ts->eax);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);

loc_55D144:
	mov(&ts->ecx, ts->esi);
	game::sub_548630(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x158, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x158, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	push(mv, &ts->esp, 0x9BA6D658);
	if (ts->eflags.zero) {
        goto loc_55D27F;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_495520(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x790534);
	push(mv, &ts->esp, 0x9BA6D658);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x79053C);
	push(mv, &ts->esp, 0x23A43844);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	add(&ts->esp, 0x28);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_55D1B2;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x13C45E);
	push(mv, &ts->esp, ts->eax);
	game::sub_495520(ts, mv);
	add(&ts->esp, 0x8);

loc_55D1B2:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x168, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_55D2B9;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55D2B9;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x48, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x838980);
	game::sub_55C1F0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x168, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x10, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55D1F9;
    }
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, ts->eax);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);

loc_55D1F9:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x168, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x48, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x85AD40);
	game::sub_514280(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, 0x79D6AC);
	push(mv, &ts->esp, ts->edi);
	game::sub_542600(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x10);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x10, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_55D238:
	mov(mv, x86::mem(ts->esi + 0x174, 4), 0x3797533);
	goto loc_55D112;

loc_55D247:
	cmp(&ts->eflags, ts->ecx, 0xD9FEEC59);
	if (!ts->eflags.zero) {
        goto loc_55D112;
    }
	cmp(&ts->eflags, ts->eax, 0x2DAAB07);
	if (ts->eflags.zero) {
        goto loc_55D108;
    }
	cmp(&ts->eflags, ts->eax, 0x3437A52);
	if (ts->eflags.zero) {
        goto loc_55D238;
    }
	cmp(&ts->eflags, ts->eax, 0x3797533);
	if (!ts->eflags.zero) {
        goto loc_55D112;
    }

loc_55D270:
	mov(mv, x86::mem(ts->esi + 0x174, 4), 0x2DAAB07);
	goto loc_55D112;

loc_55D27F:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_4954E0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x78F614);
	push(mv, &ts->esp, 0x23A43844);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	add(&ts->esp, 0x18);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_55D2B9;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x13C45E);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4954E0(ts, mv);
	add(&ts->esp, 0x8);

loc_55D2B9:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x10, 4));
	pop(mv, &ts->esp, ts->edi);

loc_55D2C1:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_55D2D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x158, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x158, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55D3FE;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0x9120409E);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x168, 4));
	if (ts->eflags.zero) {
        goto loc_55D31A;
    }
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	if (ts->eflags.zero) {
        goto loc_55D31A;
    }
	cmp(&ts->eflags, ts->eax, 0x72619778);
	if (ts->eflags.zero) {
        goto loc_55D310;
    }
	cmp(&ts->eflags, ts->eax, 0x911C0A4B);
	if (!ts->eflags.zero) {
        goto loc_55D322;
    }

loc_55D310:
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_522340(ts, mv);
	goto loc_55D322;

loc_55D31A:
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_522240(ts, mv);

loc_55D322:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x168, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55D3FD;
    }
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_55D3FD;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55D3FD;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x10, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55D35A;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F21C);
	push(mv, &ts->esp, ts->eax);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);

loc_55D35A:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x168, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x10, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55D377;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, ts->eax);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);

loc_55D377:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x168, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x48, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x838980);
	game::sub_55C1F0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x168, 4));
	game::sub_5306C0(ts, mv);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x184, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x168, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_5306A0(ts, mv);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x180, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x170, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_51D4D0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x168, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x48, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x85AD40);
	game::sub_514280(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, 0x79D6AC);
	push(mv, &ts->esp, ts->esi);
	game::sub_542600(ts, mv);
	add(&ts->esp, 0x10);

loc_55D3FD:
	pop(mv, &ts->esp, ts->edi);

loc_55D3FE:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_55D410(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8763D4, 4));
	mov(mv, &ts->al, x86::mem(0x8763F0, 1));
	push(mv, &ts->esp, ts->esi);
	test(&ts->eflags, ts->al, ts->al);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x797D50, 4));
	movzx(mv, &ts->eax, x86::mem(0x8763F2, 1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	mov(&ts->esi, ts->ecx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8763D8, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78DA30, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	if (ts->eflags.zero) {
        goto loc_55D44D;
    }
	movzx(mv, &ts->eax, x86::mem(0x8763F5, 1));

loc_55D44D:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55D59D;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x168, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55D4EE;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x184, 4));
	push(mv, &ts->esp, ts->eax);
	sub(&ts->esp, 0x8);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x180, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_52D020(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_55D4EE;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	movsx(mv, &ts->eax, x86::mem(ts->ecx + 0x8380B8, 1));
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_55D4AC;
    }
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_458520(ts, mv);

loc_55D4AC:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xC4C5D271);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x34DC1BCF);
	push(mv, &ts->esp, 0x34DC1BCF);
	push(mv, &ts->esp, 0xD05FC3A3);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x78FA24);
	push(mv, &ts->esp, ts->edx);
	game::sub_558790(ts, mv);
	add(&ts->esp, 0x24);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(0x838970, 4), 0x34DC1BCF);
	game::sub_53BD20(ts, mv);

loc_55D4EE:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x188, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_55D651;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x150, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_52D100(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_55D552;
    }
	push(mv, &ts->esp, 0x5073EF13);
	mov(&ts->ecx, ts->esi);
	game::sub_55D0D0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x150, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F568);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51CF70(ts, mv);
	movsx(mv, &ts->eax, x86::mem(0x838057, 1));
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_55D651;
    }
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_458520(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);

loc_55D552:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x154, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_52D100(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_55D651;
    }
	push(mv, &ts->esp, 0xD9FEEC59);
	mov(&ts->ecx, ts->esi);
	game::sub_55D0D0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x154, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F568);
	push(mv, &ts->esp, ts->eax);
	game::sub_51CF70(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xB);
	push(mv, &ts->esp, 0x5);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50D150(ts, mv);
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);

loc_55D59D:
	mov(mv, &ts->eax, x86::mem(0x8763E4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_55D5B3;
    }
	mov(mv, &ts->eax, x86::mem(0x8763E8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55D651;
    }

loc_55D5B3:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x184, 4));
	sub(&ts->esp, 0x8);
	mov(&ts->ecx, ts->esi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x180, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_5308B0(ts, mv);
	mov(&ts->edi, ts->eax);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_55D650;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x168, 4));
	cmp(&ts->eflags, ts->edi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_55D650;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55D650;
    }
	game::sub_521FD0(ts, mv);
	mov(&ts->ecx, ts->edi);
	game::sub_521FB0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	mov(mv, x86::mem(ts->esi + 0x168, 4), ts->edi);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x48, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x838980);
	game::sub_55C1F0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x168, 4));
	game::sub_5306C0(ts, mv);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x184, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x168, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_5306A0(ts, mv);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x180, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x170, 4));
	push(mv, &ts->esp, ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_51D4D0(ts, mv);
	add(&ts->esp, 0xC);

loc_55D650:
	pop(mv, &ts->esp, ts->edi);

loc_55D651:
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_55D660(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55D7DD;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x5C, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x8, 4));
	cmp(&ts->eflags, ts->ebx, 0xFFFFFFFF);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_55D6BF;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x50, 4));
	if (ts->eflags.zero) {
        goto loc_55D694;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_55D696;

loc_55D694:
	xor_(&ts->eax, ts->eax);

loc_55D696:
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->edi + 0xC, 4));
	if (ts->eflags.zero) {
        goto loc_55D6B6;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	movsx(mv, &ts->eax, x86::mem(ts->ecx + 0x838082, 1));
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_55D6B6;
    }
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_458520(ts, mv);

loc_55D6B6:
	mov(&ts->ecx, ts->edi);
	game::sub_495900(ts, mv);
	goto loc_55D6EB;

loc_55D6BF:
	cmp(&ts->eflags, ts->ebx, 0x1);
	if (!ts->eflags.zero) {
        goto loc_55D6EB;
    }
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x50, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_4AEBC0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55D6E4;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x7);
	push(mv, &ts->esp, ts->eax);
	game::sub_50D150(ts, mv);
	add(&ts->esp, 0xC);

loc_55D6E4:
	mov(&ts->ecx, ts->edi);
	game::sub_4958F0(ts, mv);

loc_55D6EB:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x5C, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ebp - 0x4, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_55D7DB;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x2C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x110, 4));
	mov(mv, x86::mem(ts->ecx + 0x4C, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x5C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x2C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x110, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x48, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x838980);
	game::sub_55C170(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x110, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x48, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	game::sub_4C2100(ts, mv);
	add(&ts->esp, 0x10);
	cmp(&ts->eflags, ts->ebx, 0x1);
	if (!ts->eflags.zero) {
        goto loc_55D751;
    }
	lea(mv, &ts->edi, x86::mem(ts->esi + 0xB4, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_527610(ts, mv);
	mov(&ts->ecx, ts->edi);
	game::sub_495850(ts, mv);
	goto loc_55D76A;

loc_55D751:
	cmp(&ts->eflags, ts->ebx, 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_55D76A;
    }
	lea(mv, &ts->edi, x86::mem(ts->esi + 0xB4, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_527660(ts, mv);
	mov(&ts->ecx, ts->edi);
	game::sub_495810(ts, mv);

loc_55D76A:
	mov(&ts->ecx, ts->esi);
	game::sub_548D20(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	if (ts->eflags.zero) {
        goto loc_55D780;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_55D782;

loc_55D780:
	xor_(&ts->eax, ts->eax);

loc_55D782:
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->ecx + 0xC, 4));
	if (!ts->eflags.zero) {
        goto loc_55D79F;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_55D79F:
	game::sub_4AEBC0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_55D7C0;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x100, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_55D7C0:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x100, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0x8);

loc_55D7DB:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);

loc_55D7DD:
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_55D7F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7783B4);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x158);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_55D83E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_55A460(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_55D83E:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_7783A0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79D6B4);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_55D7F0:
	mov(&ts->eax, 0x7E38F8);
	goto ___CxxFrameHandler;
}

void sub_55D850(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7783D4);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x158);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_55D89E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_55A620(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_55D89E:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_7783C0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79D6C8);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_55D850:
	mov(&ts->eax, 0x7E391C);
	goto ___CxxFrameHandler;
}

void sub_55D8B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7783F4);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x158);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_55D8FE;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_55AA40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_55D8FE:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_7783E0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79D6DC);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_55D8B0:
	mov(&ts->eax, 0x7E3940);
	goto ___CxxFrameHandler;
}

void sub_55D910(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x150, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(0x8651AC, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x8, 4));
	if (ts->eflags.zero) {
        goto loc_55D93C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_543D40(ts, mv);

loc_55D93C:
	cmp(&ts->eflags, ts->edi, 0xB5AF2461);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_55DA5D;
    }
	if (ts->eflags.zero) {
        goto loc_55D9E3;
    }
	cmp(&ts->eflags, ts->edi, 0xC407210);
	if (ts->eflags.zero) {
        goto loc_55D999;
    }
	cmp(&ts->eflags, ts->edi, 0x731BF236);
	if (ts->eflags.zero) {
        goto loc_55D980;
    }
	cmp(&ts->eflags, ts->edi, 0x911AB364);
	if (!ts->eflags.zero) {
        goto loc_55DB02;
    }
	mov(&ts->ecx, 0x839C40);
	mov(mv, x86::mem(0x864618, 1), 0x0);
	game::sub_50FDD0(ts, mv);
	goto loc_55DA20;

loc_55D980:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_54E6E0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_55D999:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x22, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_55DB02;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x48, 4));
	mov(mv, x86::mem(0x83A648, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x48, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x8635BC);
	game::sub_525100(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537950(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x48, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_55AB80(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_55D9E3:
	mov(mv, &ts->ecx, x86::mem(0x8651AC, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x150, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_55DB02;
    }
	mov(mv, &ts->al, x86::mem(0x83A7A4, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55DB02;
    }
	mov(mv, &ts->edx, x86::mem(0x83A64C, 4));
	mov(mv, &ts->eax, x86::mem(0x8900AC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	mov(mv, x86::mem(0x864618, 1), 0x1);
	game::sub_5F6C20(ts, mv);

loc_55DA20:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C60(ts, mv);
	push(mv, &ts->esp, 0x790000);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x14);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_55DB02;
    }
	push(mv, &ts->esp, 0x790000);
	game::sub_5379A0(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_55DA5D:
	cmp(&ts->eflags, ts->edi, 0xC98356BA);
	if (ts->eflags.zero) {
        goto loc_55DAF7;
    }
	cmp(&ts->eflags, ts->edi, 0xE1FDE1D1);
	if (!ts->eflags.zero) {
        goto loc_55DB02;
    }
	mov(mv, &ts->al, x86::mem(0x864618, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_55DAAF;
    }
	push(mv, &ts->esp, 0x790000);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_55DA9C;
    }
	push(mv, &ts->esp, 0x790000);
	game::sub_5379A0(ts, mv);
	add(&ts->esp, 0x4);

loc_55DA9C:
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	push(mv, &ts->esp, 0x1);
	game::sub_5F4240(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_55DAAF:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50B840(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55DACC;
    }
	mov(mv, x86::mem(ts->eax + 0x10, 4), 0x0);

loc_55DACC:
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(0x83A648, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_55DB02;
    }
	mov(mv, &ts->eax, x86::mem(0x7FA21C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_5377A0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_55DAF7:
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	game::sub_52CDD0(ts, mv);

loc_55DB02:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);
}

void sub_55DB10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x778414);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x154);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_55DB5E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_55AC10(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_55DB5E:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_778400:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79D6F4);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_55DB10:
	mov(&ts->eax, 0x7E3964);
	goto ___CxxFrameHandler;
}

void sub_55DB70(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x778434);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x58);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_55DBBB;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_55AD70(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_55DBBB:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_778420:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79D708);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_55DB70:
	mov(&ts->eax, 0x7E3988);
	goto ___CxxFrameHandler;
}

void sub_55DBD0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(0x83A9C0, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero) {
        goto loc_55DBF4;
    }
	mov(mv, &ts->eax, x86::mem(0x83A9C4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55DBF4;
    }
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x83A7B0);
	game::sub_551270(ts, mv);
	goto loc_55DC03;

loc_55DBF4:
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x83A7B0);
	game::sub_558B70(ts, mv);

loc_55DC03:
	mov(mv, &ts->al, x86::mem(0x865934, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_55DC17;
    }
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x865930);
	game::sub_57B8B0(ts, mv);

loc_55DC17:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_55DC20(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_51BB70(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_55DC4D;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto locret_55DC4D;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_55DC4D;
    }
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_55B5C0(ts, mv);

locret_55DC4D:
	retn(mv, &ts->esp, 0x8);
}

void sub_55DC50(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	sub(&ts->esp, 0x80);
	push(mv, &ts->esp, ts->ebp);
	lea(mv, &ts->edx, x86::mem(ts->ecx + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	xor_(&ts->ebp, ts->ebp);

loc_55DC60:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55DC69;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_55DC70;

loc_55DC69:
	xor_(&ts->eax, ts->eax);
	goto loc_55DC70;

loc_55DC70:
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_55DC79;
    }
	lea(mv, &ts->ecx, x86::mem(ts->edx - 0x4, 4));
	goto loc_55DC7B;

loc_55DC79:
	xor_(&ts->ecx, ts->ecx);

loc_55DC7B:
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_55DC95;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_55DC90;
    }
	cmp(&ts->eflags, ts->ebp, 0x20);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_55DC90;
    }
	mov(mv, x86::mem(ts->esp + (ts->ebp*4) + 0x8, 4), ts->eax);
	inc(&ts->ebp);

loc_55DC90:
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	goto loc_55DC60;

loc_55DC95:
	xor_(&ts->esi, ts->esi);
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_55DCD3;
    }
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x90, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x98, 4));
	goto loc_55DCB0;

loc_55DCB0:
	mov(mv, &ts->ecx, x86::mem(ts->esp + (ts->esi*4) + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x18, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55DCCC;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x14, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_55DCCC;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ebx);
	game::sub_55B5C0(ts, mv);

loc_55DCCC:
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, ts->ebp);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_55DCB0;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);

loc_55DCD3:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0x80);
	retn(mv, &ts->esp, 0x8);
}

void sub_55DD50(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0x5922615);
	if (ts->eflags.zero) {
        goto loc_55DD87;
    }
	cmp(&ts->eflags, ts->eax, 0x7E4D1288);
	if (ts->eflags.zero) {
        goto loc_55DD70;
    }
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	mov(&ts->ecx, 0x8637B0);
	goto loc_55DCE0;

loc_55DD70:
	push(mv, &ts->esp, 0x79D72C);
	game::sub_50D510(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x8, 4));
	mov(mv, x86::mem(ts->edx + 0x1, 1), 0x1);
	add(&ts->esp, 0x4);
	retn(mv, &ts->esp, 0x10);

loc_55DD87:
	push(mv, &ts->esp, 0x79D718);
	game::sub_50D510(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x8, 4));
	mov(mv, x86::mem(ts->eax + 0x1, 1), 0x0);
	add(&ts->esp, 0x4);
	retn(mv, &ts->esp, 0x10);

loc_55DCE0:
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	lea(mv, &ts->ebx, x86::mem(ts->ecx + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_55DCF3;
    }
	lea(mv, &ts->esi, x86::mem(ts->eax - 0x4, 4));
	goto loc_55DCF5;

loc_55DCF3:
	xor_(&ts->esi, ts->esi);

loc_55DCF5:
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x1C, 4));
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_55DD00:
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_55DD09;
    }
	lea(mv, &ts->eax, x86::mem(ts->ebx - 0x4, 4));
	goto loc_55DD0B;

loc_55DD09:
	xor_(&ts->eax, ts->eax);

loc_55DD0B:
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55DD42;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55DD32;
    }
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_55DD32;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x14, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_55DD32;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_55B5C0(ts, mv);

loc_55DD32:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_55DD3E;
    }
	add(&ts->esi, 0xFFFFFFFC);
	goto loc_55DD00;

loc_55DD3E:
	xor_(&ts->esi, ts->esi);
	goto loc_55DD00;

loc_55DD42:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);
}

void sub_55DDA0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x8637B0);
	game::sub_51BB70(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_55DDD2;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto locret_55DDD2;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_55DDD2;
    }
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_55B5C0(ts, mv);

locret_55DDD2:
	retn(mv, &ts->esp);
}

void sub_55DDE0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x8637B0);
	game::sub_55DC50(ts, mv);
	retn(mv, &ts->esp);
}

void sub_55DE00(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->edi + 0x6C, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_55DF97;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4C, 4));
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ebx, x86::mem(ts->edi + 0x4C, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero) {
        goto loc_55DF95;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x64, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55DF95;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55DE34;
    }
	lea(mv, &ts->esi, x86::mem(ts->eax - 0x4, 4));
	goto loc_55DE36;

loc_55DE34:
	xor_(&ts->esi, ts->esi);

loc_55DE36:
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_55DE3F;
    }
	lea(mv, &ts->eax, x86::mem(ts->ebx - 0x4, 4));
	goto loc_55DE41;

loc_55DE3F:
	xor_(&ts->eax, ts->eax);

loc_55DE41:
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55DF95;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x18, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_55DE60;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_52D100(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55DE6C;
    }

loc_55DE60:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_55DE34;
    }
	add(&ts->esi, 0xFFFFFFFC);
	goto loc_55DE36;

loc_55DE6C:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x58, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55DE8B;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x5C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->edi + 0x58, 4), ts->eax);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);

loc_55DE8B:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	test(&ts->eflags, ts->al, 0x2);
	if (ts->eflags.zero) {
        goto loc_55DEDD;
    }
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	push(mv, &ts->esp, 0x4B);
	game::sub_458520(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0xD5D46FDF);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x42CA53FC);
	push(mv, &ts->esp, 0x42CA53FC);
	push(mv, &ts->esp, 0x58C27533);
	push(mv, &ts->esp, 0x541389E5);
	push(mv, &ts->esp, 0x545C5292);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->ecx);
	game::sub_558790(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x8651AC, 4));
	add(&ts->esp, 0x24);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x68, 4), ts->edx);
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp);

loc_55DEDD:
	test(&ts->eflags, ts->al, 0x1);
	if (ts->eflags.zero) {
        goto loc_55DF1F;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x9DE6B485);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x42CA53FC);
	push(mv, &ts->esp, 0x42CA53FC);
	push(mv, &ts->esp, 0x919B1DD9);
	push(mv, &ts->esp, 0x541389E5);
	push(mv, &ts->esp, 0x1C101778);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->eax);
	game::sub_558790(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8651AC, 4));
	add(&ts->esp, 0x24);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x68, 4), ts->ecx);
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp);

loc_55DF1F:
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_52D170(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x406415E3);
	if (ts->eflags.zero) {
        goto loc_55DF35;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x58, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	goto loc_55DF84;

loc_55DF35:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x58, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_51CD60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55DF7B;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x58, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_52CEF0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x58, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_51CD60(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xC407210);
	game::sub_51CDC0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8651AC, 4));
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x68, 4), ts->ecx);
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp);

loc_55DF7B:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x58, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x406415E3);

loc_55DF84:
	game::sub_55DDA0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8651AC, 4));
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->edi + 0x68, 4), ts->ecx);

loc_55DF95:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);

loc_55DF97:
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp);
}

void sub_55DFA0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0x9803F6E2);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_55E0A1;
    }
	if (ts->eflags.zero) {
        goto loc_55E072;
    }
	cmp(&ts->eflags, ts->eax, 0x58C27533);
	if (ts->eflags.zero) {
        goto loc_55E00B;
    }
	cmp(&ts->eflags, ts->eax, 0x919B1DD9);
	if (!ts->eflags.zero) {
        goto loc_55E115;
    }
	mov(mv, &ts->eax, x86::mem(0x8654A4, 4));
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.zero) {
        goto loc_55DFFD;
    }
	cmp(&ts->eflags, ts->eax, 0x6);
	if (!ts->eflags.zero) {
        goto loc_55E115;
    }
	mov(&ts->ecx, 0x865480);
	game::sub_571250(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55DFFD;
    }
	mov(&ts->ecx, 0x865480);
	game::sub_571280(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_55E115;
    }

loc_55DFFD:
	mov(mv, x86::mem(0x864F4C, 4), 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_55E00B:
	push(mv, &ts->esp, 0x0);
	game::sub_4A0140(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0xE8, 4));
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_55E055;
    }
	push(mv, &ts->esp, ts->edi);

loc_55E028:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_49FFA0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55E04E;
    }
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_55E04E;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_5376F0(ts, mv);

loc_55E04E:
	test(&ts->eflags, ts->edi, ts->edi);
	mov(&ts->esi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_55E028;
    }
	pop(mv, &ts->esp, ts->edi);

loc_55E055:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, 0x78FCD8);
	push(mv, &ts->esp, 0x78F530);
	game::sub_555F10(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_55E072:
	mov(mv, &ts->al, x86::mem(0x8763F0, 1));
	test(&ts->eflags, ts->al, ts->al);
	movzx(mv, &ts->eax, x86::mem(0x8763F2, 1));
	if (ts->eflags.zero) {
        goto loc_55E089;
    }
	movzx(mv, &ts->eax, x86::mem(0x8763F5, 1));

loc_55E089:
	test(&ts->eflags, ts->eax, ts->eax);
	mov(&ts->ecx, ts->esi);
	if (ts->eflags.zero) {
        goto loc_55E098;
    }
	game::sub_55DE00(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_55E098:
	game::sub_52D4F0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_55E0A1:
	cmp(&ts->eflags, ts->eax, 0xC98356BA);
	if (!ts->eflags.zero) {
        goto loc_55E115;
    }
	mov(mv, &ts->al, x86::mem(0x838528, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_55E0FD;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x64, 4));
	test(&ts->eflags, ts->ah, 0x40);
	if (ts->eflags.zero) {
        goto loc_55E0FD;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x6C, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_55E0FD;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x2BAC0CEE);
	push(mv, &ts->esp, ts->eax);
	game::sub_495520(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FFD0);
	push(mv, &ts->esp, 0x79C82C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_5426C0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0xEB406FEC);
	push(mv, &ts->esp, ts->edx);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x24);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_55E0FD:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FC44);
	push(mv, &ts->esp, 0x79C82C);
	push(mv, &ts->esp, ts->eax);
	game::sub_5426C0(ts, mv);
	add(&ts->esp, 0x10);

loc_55E115:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);
}

void sub_55E120(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_55E15C;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x8637B0);
	game::sub_51BB70(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_55E15C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto locret_55E15C;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_55E15C;
    }
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x81017864);
	mov(&ts->ecx, ts->eax);
	game::sub_55B5C0(ts, mv);

locret_55E15C:
	retn(mv, &ts->esp, 0x8);
}

void sub_55E160(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0x911AB364);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_55E26F;
    }
	if (ts->eflags.zero) {
        goto loc_55E220;
    }
	cmp(&ts->eflags, ts->eax, 0x406415E3);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_55E208;
    }
	if (ts->eflags.zero) {
        goto loc_55E1B2;
    }
	cmp(&ts->eflags, ts->eax, 0xC407210);
	if (ts->eflags.zero) {
        goto loc_55E1B2;
    }
	cmp(&ts->eflags, ts->eax, 0x35F8620B);
	if (!ts->eflags.zero) {
        goto loc_55E2F0;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x68, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + (ts->eax*4) + 0x4C, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_55E1B2:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x64, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55E254;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x58, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55E254;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79031C);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	movzx(mv, &ts->edx, x86::mem(ts->esi + 0x74, 2));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x70, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x6C, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x64, 4));
	game::sub_4957F0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x64, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x58, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xDA52AF6B);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);
	goto loc_55E254;

loc_55E208:
	cmp(&ts->eflags, ts->eax, 0x72619778);
	if (!ts->eflags.zero) {
        goto loc_55E2F0;
    }
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_538E70(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_55E220:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x64, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55E254;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x58, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55E254;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79031C);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x64, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x58, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xAADD0187);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x18);

loc_55E254:
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_55E2F0;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_5376F0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_55E26F:
	cmp(&ts->eflags, ts->eax, 0x9803F6E2);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_55E2E0;
    }
	if (ts->eflags.zero) {
        goto loc_55E2D5;
    }
	cmp(&ts->eflags, ts->eax, 0x911C0A4B);
	if (ts->eflags.zero) {
        goto loc_55E2C8;
    }
	cmp(&ts->eflags, ts->eax, 0x9120409E);
	if (!ts->eflags.zero) {
        goto loc_55E2F0;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x68, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + (ts->eax*4) + 0x4C, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F21C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51CF70(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x68, 4));
	add(&ts->esp, 0xC);
	dec(&ts->eax);
	mov(mv, x86::mem(ts->esi + 0x68, 4), ts->eax);
	if (!ts->eflags.sign) {
        goto loc_55E2AD;
    }
	mov(mv, x86::mem(ts->esi + 0x68, 4), 0x2);

loc_55E2AD:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x68, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + (ts->edx*4) + 0x4C, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, ts->eax);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_55E2C8:
	push(mv, &ts->esp, 0xFFFFFFFF);
	mov(&ts->ecx, ts->esi);
	game::sub_538E70(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_55E2D5:
	mov(&ts->ecx, ts->esi);
	game::sub_544160(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_55E2E0:
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_55E2F0;
    }
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_51FDD0(ts, mv);

loc_55E2F0:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);
}

void sub_55E300(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x7C, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x7C, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55E33A;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x84, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x8, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_610010(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_610130(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x60, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x48, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x838980);
	game::sub_55C170(ts, mv);
	pop(mv, &ts->esp, ts->edi);

loc_55E33A:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_55E340(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x7C, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x7C, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55E37A;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x84, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x8, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_610010(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_610130(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x60, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x48, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x838980);
	game::sub_55C230(ts, mv);
	pop(mv, &ts->esp, ts->edi);

loc_55E37A:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_55E380(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0x9120409E);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_55E483;
    }
	if (ts->eflags.zero) {
        goto loc_55E402;
    }
	cmp(&ts->eflags, ts->eax, 0x406415E3);
	if (ts->eflags.zero) {
        goto loc_55E3F6;
    }
	cmp(&ts->eflags, ts->eax, 0x911AB364);
	if (!ts->eflags.zero) {
        goto loc_55E510;
    }
	mov(&ts->ecx, 0x838980);
	game::sub_54FD40(ts, mv);
	mov(&ts->ecx, 0x83A9D0);
	game::sub_5032C0(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x100);
	push(mv, &ts->esp, 0x0);
	if (!ts->eflags.zero) {
        goto loc_55E3E0;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x794DF0);
	push(mv, &ts->esp, ts->eax);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_55E3E0:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x78F354);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_55E3F6:
	mov(&ts->ecx, ts->esi);
	game::sub_55E340(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_55E402:
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x10, 4));
	sub(&ts->eax, 0x36DB742);
	if (ts->eflags.zero) {
        goto loc_55E46D;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_55E447;
    }
	sub(&ts->eax, 0x3);
	if (!ts->eflags.zero) {
        goto loc_55E509;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x84, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x7C, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_55E42E;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));

loc_55E42E:
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x84, 4), ts->eax);
	game::sub_55E300(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_53A0B0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_55E447:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x60, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_55E457;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));

loc_55E457:
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->eax);
	game::sub_539FF0(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_53A0B0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_55E46D:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_55E4FF;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	goto loc_55E4FF;

loc_55E483:
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_55E510;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x10, 4));
	sub(&ts->eax, 0x36DB742);
	if (ts->eflags.zero) {
        goto loc_55E4F1;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_55E4CD;
    }
	sub(&ts->eax, 0x3);
	if (!ts->eflags.zero) {
        goto loc_55E509;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x84, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x7C, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_55E4B4;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));

loc_55E4B4:
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x84, 4), ts->eax);
	game::sub_55E300(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_53A0B0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_55E4CD:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x60, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_55E4DB;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));

loc_55E4DB:
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->eax);
	game::sub_539FF0(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_53A0B0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_55E4F1:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_55E4FF;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));

loc_55E4FF:
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->eax);
	game::sub_539FF0(ts, mv);

loc_55E509:
	mov(&ts->ecx, ts->esi);
	game::sub_53A0B0(ts, mv);

loc_55E510:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);
}

void sub_55E520(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x8, 4));
	cmp(&ts->eflags, ts->edi, 0x406415E3);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_55E53A;
    }
	cmp(&ts->eflags, ts->edi, 0xC407210);
	if (!ts->eflags.zero) {
        goto loc_55E543;
    }

loc_55E53A:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x10, 4));
	mov(mv, x86::mem(ts->esi + 0x150, 4), ts->eax);

loc_55E543:
	cmp(&ts->eflags, ts->edi, 0x911AB364);
	if (!ts->eflags.zero) {
        goto loc_55E569;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537D40(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55E786;
    }

loc_55E569:
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0xC, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x14, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_543D40(ts, mv);
	cmp(&ts->eflags, ts->edi, 0x461A18EE);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_55E679;
    }
	if (ts->eflags.zero) {
        goto loc_55E5F8;
    }
	cmp(&ts->eflags, ts->edi, 0x1FAB5998);
	if (ts->eflags.zero) {
        goto loc_55E5EC;
    }
	cmp(&ts->eflags, ts->edi, 0x34DC1BEC);
	if (!ts->eflags.zero) {
        goto loc_55E748;
    }
	mov(&ts->ecx, 0x83A9D0);
	game::sub_52A4C0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_55E5CD;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));

loc_55E5B1:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1141);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->eax);
	game::sub_4A3100(ts, mv);
	add(&ts->esp, 0x1C);
	goto loc_55E748;

loc_55E5CD:
	mov(mv, &ts->al, x86::mem(0x83AA00, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	if (ts->eflags.zero) {
        goto loc_55E5B1;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x461A18EE);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);
	goto loc_55E748;

loc_55E5EC:
	mov(&ts->ecx, ts->esi);
	game::sub_538CA0(ts, mv);
	goto loc_55E748;

loc_55E5F8:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50B840(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55E615;
    }
	mov(mv, x86::mem(ts->eax + 0x10, 4), 0x0);

loc_55E615:
	mov(&ts->ecx, 0x838980);
	game::sub_54FD40(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x1);
	mov(mv, &ts->ecx, x86::mem(0x863480, 4));
	if (ts->eflags.zero) {
        goto loc_55E634;
    }
	mov(mv, &ts->ecx, x86::mem(0x83AAB8, 4));

loc_55E634:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x150, 4));
	test(&ts->eflags, ts->al, 0x1);
	if (ts->eflags.zero) {
        goto loc_55E642;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_55E662;

loc_55E642:
	test(&ts->eflags, ts->al, 0x2);
	if (ts->eflags.zero) {
        goto loc_55E64D;
    }
	mov(&ts->eax, 0x1);
	goto loc_55E662;

loc_55E64D:
	test(&ts->eflags, ts->al, 0x4);
	if (ts->eflags.zero) {
        goto loc_55E658;
    }
	mov(&ts->eax, 0x2);
	goto loc_55E662;

loc_55E658:
	and_(&ts->al, 0x8);
	neg(&ts->al);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0x4);
	dec(&ts->eax);

loc_55E662:
	push(mv, &ts->esp, 0x2);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(0x83A9D8, 4), ts->eax);
	game::sub_5309E0(ts, mv);
	add(&ts->esp, 0xC);
	goto loc_55E748;

loc_55E679:
	cmp(&ts->eflags, ts->edi, 0x8867412D);
	if (ts->eflags.zero) {
        goto loc_55E70F;
    }
	cmp(&ts->eflags, ts->edi, 0x911AB364);
	if (ts->eflags.zero) {
        goto loc_55E6DB;
    }
	cmp(&ts->eflags, ts->edi, 0xE1FDE1D1);
	if (!ts->eflags.zero) {
        goto loc_55E748;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x13C, 4));
	cmp(&ts->eflags, ts->eax, 0xC407210);
	if (ts->eflags.zero) {
        goto loc_55E6CD;
    }
	cmp(&ts->eflags, ts->eax, 0x911AB364);
	if (!ts->eflags.zero) {
        goto loc_55E748;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	game::sub_50B8C0(ts, mv);
	add(&ts->esp, 0x8);
	game::sub_54F980(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_55BDF0(ts, mv);
	goto loc_55E748;

loc_55E6CD:
	game::sub_54F980(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_55BD60(ts, mv);
	goto loc_55E748;

loc_55E6DB:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537D40(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55E748;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C60(ts, mv);
	add(&ts->esp, 0x10);
	goto loc_55E748;

loc_55E70F:
	mov(&ts->edx, 0x60D24D65);
	game::sub_4FF9D0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_55E727;
    }
	mov(&ts->edx, 0xC01A6F63);
	game::sub_4FF9D0(ts, mv);

loc_55E727:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->ecx);
	game::sub_558540(ts, mv);
	add(&ts->esp, 0x18);

loc_55E748:
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x100);
	if (!ts->eflags.zero) {
        goto loc_55E785;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xC, 4));
	push(mv, &ts->esp, 0xE);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	add(&ts->esi, 0x154);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_4EFE40(ts, mv);
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_55E785;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x2C0E485A);
	push(mv, &ts->esp, 0x5A6F817F);
	mov(&ts->ecx, ts->esi);
	game::sub_4B8FA0(ts, mv);

loc_55E785:
	pop(mv, &ts->esp, ts->ebx);

loc_55E786:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);
}

void sub_55E790(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_55E815;
    }
	cmp(mv, &ts->eflags, x86::mem(0x8500D0, 4), 0x11);
	mov(&ts->eax, 0x54B649F1);
	if (!ts->eflags.zero) {
        goto loc_55E7AD;
    }
	mov(&ts->eax, 0x843F5D58);

loc_55E7AD:
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1FAB5998);
	push(mv, &ts->esp, 0x1FAB5998);
	push(mv, &ts->esp, 0x34DC1BEC);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x78F2F8);
	push(mv, &ts->esp, ts->esi);
	game::sub_558790(ts, mv);
	add(&ts->esp, 0x24);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x8637B0);
	mov(mv, x86::mem(0x838970, 4), 0x1FAB5998);
	game::sub_51BB70(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero) {
        goto locret_55E815;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto locret_55E815;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_55E815;
    }
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x96DDA9E6);
	mov(&ts->ecx, ts->eax);
	game::sub_55B5C0(ts, mv);

locret_55E815:
	retn(mv, &ts->esp, 0x14);
}

void sub_55E820(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x778475);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x8F8);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->esi);
	game::sub_551DE0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x79C558);
	push(mv, &ts->esp, 0x79C968);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79D778);
	push(mv, &ts->esp, 0x79D768);
	xor_(&ts->ebx, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, x86::mem(ts->esp + 0x924, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi, 4), 0x79D758);
	game::sub_5435D0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79CAF0);
	push(mv, &ts->esp, 0x797F30);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xB0, 4));
	mov(mv, x86::mem(ts->esp + 0x924, 1), 0x1);
	game::sub_5435D0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x796484);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	mov(mv, x86::mem(ts->esp + 0x920, 1), 0x2);
	game::sub_542AC0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F814);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x16C, 4));
	game::sub_542AC0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x1C4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1C8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1CC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1D0, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x1D1, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x1D2, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x1D3, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x1D4, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x1D5, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x1D6, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x1D7, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x1D8, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x1D9, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x1DA, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x1DB, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x1DC, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x1E0, 4), ts->ebx);
	push(mv, &ts->esp, 0x79D740);
	mov(mv, x86::mem(0x838528, 1), ts->bl);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55E9ED;
    }
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_55E9ED;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	game::sub_40C910(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x863480, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x83AD90);
	mov(mv, x86::mem(ts->esp + 0x910, 1), 0x3);
	game::sub_503510(ts, mv);
	mov(&ts->edi, ts->eax);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_55E9B1;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));

loc_55E9B1:
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, 0x2);
	push(mv, &ts->esp, ts->edx);
	game::sub_4D8EC0(ts, mv);
	add(&ts->esp, 0xC);
	game::sub_4A78B0(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(0x838990, 4), 0x2);
	if (!ts->eflags.zero) {
        goto loc_55E9D9;
    }
	mov(&ts->ecx, 0x838980);
	game::sub_55C460(ts, mv);

loc_55E9D9:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x394, 4));
	mov(mv, x86::mem(ts->esp + 0x90C, 1), 0x2);
	game::nullsub_1(ts, mv);

loc_55E9ED:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x640F0F22);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x1CC, 4), ts->ebx);
	game::sub_495520(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x640F0F23);
	push(mv, &ts->esp, ts->ecx);
	game::sub_495520(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xA936C3A2);
	push(mv, &ts->esp, ts->edx);
	game::sub_4954E0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x89782734);
	push(mv, &ts->esp, ts->eax);
	game::sub_4954E0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x797F30);
	push(mv, &ts->esp, ts->eax);
	game::sub_4953E0(ts, mv);
	add(&ts->esp, 0x28);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x1E0, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x78, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0xAC, 4), 0x42200000);
	mov(mv, x86::mem(ts->esi + 0xDC, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0xE0, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x104, 4), 0x43480000);
	mov(mv, x86::mem(ts->esi + 0x110, 4), 0x41A00000);
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0x7A4C4AB2);
	game::sub_54FAE0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x7FA1B8, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_55EA9E;
    }
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->ebx);

loc_55EA9E:
	push(mv, &ts->esp, 0x790000);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55EADC;
    }
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	if (ts->eflags.zero) {
        goto loc_55EADC;
    }
	cmp(&ts->eflags, ts->eax, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0xFF);
	if (ts->eflags.zero) {
        goto loc_55EAD0;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x790000);
	push(mv, &ts->esp, 0x4);
	goto loc_55EAD7;

loc_55EAD0:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x790000);
	push(mv, &ts->esp, ts->ebx);

loc_55EAD7:
	game::sub_555D00(ts, mv);

loc_55EADC:
	mov(mv, &ts->eax, x86::mem(0x8384D8, 4));
	mov(&ts->ecx, ts->eax);
	push(mv, &ts->esp, 0x1);
	mov(mv, x86::mem(ts->eax + 0x6C, 1), 0x1);
	game::sub_542990(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_54E6E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x904, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_778440:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x904, 4));
	goto sub_510D40;

loc_77844B:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x904, 4));
	add(&ts->ecx, 0x4C);
	goto sub_52EA90;

loc_778459:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x904, 4));
	add(&ts->ecx, 0xB0);
	goto sub_52EA90;

loc_77846A:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x900, 4));
	goto sub_401800;

SEH_55E820:
	mov(&ts->eax, 0x7E39C4);
	goto ___CxxFrameHandler;
}

void sub_55EB20(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::std__strstreambuf___strstreambuf_void_(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_55EB38;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_55EB38:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void std__strstreambuf___strstreambuf_void_(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x778493);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x79D758);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xB0, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x1);
	game::sub_52EA90(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 1), 0x0);
	game::sub_52EA90(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->esi, 4), 0x79AC00);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

unknown_libname_67:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

loc_778488:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x4C);
	goto sub_52EA90;

SEH_55EB40:
	mov(&ts->eax, 0x7E39F0);
	goto ___CxxFrameHandler;
}

void sub_55EBA0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x50, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55EDC1;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB4, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xB4, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55EDC1;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1D9, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_55EDC1;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xBC, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x8, 4));
	cmp(&ts->eflags, ts->edi, 0xFFFFFFFF);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_55EC16;
    }
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0xB0, 4));
	mov(&ts->ecx, ts->ebx);
	game::sub_4AEB90(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55EC0D;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x6);
	push(mv, &ts->esp, ts->edx);
	game::sub_50D150(ts, mv);
	add(&ts->esp, 0xC);

loc_55EC0D:
	mov(&ts->ecx, ts->ebx);
	game::sub_495900(ts, mv);
	goto loc_55EC45;

loc_55EC16:
	cmp(&ts->eflags, ts->edi, 0x1);
	if (!ts->eflags.zero) {
        goto loc_55EC45;
    }
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0xB0, 4));
	mov(&ts->ecx, ts->ebx);
	game::sub_4AEBC0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55EC3E;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50D150(ts, mv);
	add(&ts->esp, 0xC);

loc_55EC3E:
	mov(&ts->ecx, ts->ebx);
	game::sub_4958F0(ts, mv);

loc_55EC45:
	mov(mv, &ts->edx, x86::mem(ts->ebp - 0x4, 4));
	cmp(mv, &ts->eflags, ts->edx, x86::mem(ts->esi + 0xBC, 4));
	if (ts->eflags.zero) {
        goto loc_55EDBF;
    }
	cmp(&ts->eflags, ts->edi, 0x1);
	if (!ts->eflags.zero) {
        goto loc_55EC6F;
    }
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x16C, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_527610(ts, mv);
	mov(&ts->ecx, ts->edi);
	game::sub_495850(ts, mv);
	goto loc_55EC88;

loc_55EC6F:
	cmp(&ts->eflags, ts->edi, 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_55EC88;
    }
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x16C, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_527660(ts, mv);
	mov(&ts->ecx, ts->edi);
	game::sub_495810(ts, mv);

loc_55EC88:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xB4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xB4, 4));
	cmp(&ts->eflags, ts->edx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_55EC9F;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_55ECA5;

loc_55EC9F:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xBC, 4));

loc_55ECA5:
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x2C, 4));
	mov(mv, x86::mem(ts->ecx + 0x30, 4), ts->eax);
	mov(mv, &ts->dl, x86::mem(ts->esi + 0x1D4, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.zero) {
        goto loc_55ED17;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_50E510(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x2C, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_55ED51;
    }
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8389D0);
	game::sub_413440(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1D);
	mov(&ts->ecx, 0x8389D0);
	game::sub_631D20(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1E);
	mov(&ts->ecx, 0x8389D0);
	game::sub_631D20(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x8389D0);
	game::sub_4D8EC0(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x8389D0);
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8637D0);
	game::sub_55B1A0(ts, mv);
	goto loc_55ED51;

loc_55ED17:
	mov(mv, &ts->dl, x86::mem(ts->esi + 0x1D7, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.zero) {
        goto loc_55ED42;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_50E510(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x2C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55ED51;
    }
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(0x8389A8, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x838980);
	game::sub_55C370(ts, mv);
	goto loc_55ED51;

loc_55ED42:
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x838980);
	game::sub_55C170(ts, mv);

loc_55ED51:
	mov(&ts->ecx, ts->esi);
	game::sub_545510(ts, mv);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0xB0, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_4AEB90(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_55ED81;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1B4, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_55ED81:
	mov(&ts->ecx, ts->edi);
	game::sub_4AEBC0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_55EDA4;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1B8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_55EDA4:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1B4, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1B8, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0x8);

loc_55EDBF:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);

loc_55EDC1:
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_55EDD0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	push(mv, &ts->esp, 0x4);
	game::sub_458520(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x58, 4));
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_55EF7A;
    }
	mov(mv, &ts->al, x86::mem(ts->ebx + 0x22, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55EF47;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1D7, 1));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	neg(&ts->al);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0xDF422345);
	push(mv, &ts->esp, ts->ecx);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0xCE41165E);
	add(&ts->eax, 0x43A05263);
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->eax);
	game::sub_4954E0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xA936C3A2);
	push(mv, &ts->esp, ts->edx);
	game::sub_495520(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x89782734);
	push(mv, &ts->esp, ts->eax);
	game::sub_495520(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79D788);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x1D0, 1), 0x0);
	mov(mv, x86::mem(ts->esi + 0x1D9, 1), 0x1);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0xC, 4));
	add(&ts->esp, 0x28);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_53A4B0(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xBC, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_55EEDD;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB4, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xB4, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55EEDD;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xB0, 4));
	game::sub_52EB90(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1D7, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_55EEBC;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x2C, 4));
	mov(mv, &ts->ecx, x86::mem(0x8389A8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x838980);
	game::sub_55C370(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x2C, 4));
	mov(mv, &ts->eax, x86::mem(0x8389A8, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	goto loc_55EED6;

loc_55EEBC:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x2C, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x838980);
	game::sub_55C170(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x2C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);

loc_55EED6:
	mov(&ts->ecx, ts->esi);
	game::sub_50E580(ts, mv);

loc_55EEDD:
	mov(&ts->ecx, ts->esi);
	game::sub_545510(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xB0, 4));
	pop(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_55EEFA;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_55EEFC;

loc_55EEFA:
	xor_(&ts->eax, ts->eax);

loc_55EEFC:
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->ecx + 0xC, 4));
	if (!ts->eflags.zero) {
        goto loc_55EF12;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1B4, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);
	goto loc_55EF47;

loc_55EF12:
	game::sub_4AEBC0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_55EF2C;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1B8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);
	goto loc_55EF47;

loc_55EF2C:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1B4, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1B8, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0x8);

loc_55EF47:
	cmp(mv, &ts->eflags, x86::mem(0x838990, 4), 0x2);
	mov(&ts->eax, 0x8);
	if (!ts->eflags.zero) {
        goto loc_55EF64;
    }
	mov(mv, &ts->ecx, x86::mem(0x83899C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_55EF64;
    }
	mov(&ts->eax, 0x10);

loc_55EF64:
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	push(mv, &ts->esp, 0x790634);
	or_(&ts->eax, 0x401);
	push(mv, &ts->esp, ts->eax);
	game::sub_54E6E0(ts, mv);

loc_55EF7A:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_55EF80(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	push(mv, &ts->esp, 0x5);
	game::sub_458520(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDF422345);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0x6109E4B5);
	game::sub_495520(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xA936C3A2);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4954E0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x89782734);
	push(mv, &ts->esp, ts->edx);
	game::sub_4954E0(ts, mv);
	add(&ts->esp, 0x18);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xB0, 4));
	mov(mv, x86::mem(ts->esi + 0x1D9, 1), 0x0);
	mov(mv, x86::mem(ts->esi + 0x1D0, 1), 0x1);
	game::sub_5385C0(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1D7, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_55EFF6;
    }
	mov(&ts->ecx, 0x838980);
	game::sub_55C460(ts, mv);
	goto loc_55F016;

loc_55EFF6:
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8389D0);
	game::sub_413440(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x8392C0);
	game::sub_4D8EC0(ts, mv);
	add(&ts->esp, 0xC);

loc_55F016:
	mov(mv, &ts->al, x86::mem(ts->ebp + 0x8, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, 0x1);
	if (ts->eflags.zero) {
        goto loc_55F02F;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x79D79C);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	goto loc_55F03D;

loc_55F02F:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x79D790);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->ecx);

loc_55F03D:
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x8389D0);
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8637D0);
	game::sub_55B1A0(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x0);
	game::sub_4C2140(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x20, 4));
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x790634);
	push(mv, &ts->esp, ts->edx);
	game::sub_54E6E0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_55F080(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x8, 4));
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_543D40(ts, mv);
	cmp(&ts->eflags, ts->edi, 0x911AB364);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_55F206;
    }
	if (ts->eflags.zero) {
        goto loc_55F1C0;
    }
	cmp(&ts->eflags, ts->edi, 0xC407210);
	if (ts->eflags.zero) {
        goto loc_55F0D6;
    }
	cmp(&ts->eflags, ts->edi, 0x1FAB5998);
	if (ts->eflags.zero) {
        goto loc_55F325;
    }
	cmp(&ts->eflags, ts->edi, 0x34DC1BEC);
	if (ts->eflags.zero) {
        goto loc_55F325;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_55F0D6:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x58, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0x48, 4), 0x3B83203);
	if (!ts->eflags.zero) {
        goto loc_55F179;
    }
	push(mv, &ts->esp, 0x1D);
	mov(&ts->ecx, 0x838980);
	game::sub_53AEA0(ts, mv);
	push(mv, &ts->esp, 0x1D);
	mov(&ts->ecx, 0x8392C0);
	mov(&ts->edi, ts->eax);
	game::sub_6102F0(ts, mv);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_55F131;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDA15D7E5);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->eax);
	game::sub_558430(ts, mv);
	add(&ts->esp, 0xC);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(0x838970, 4), 0x34DC1BEC);
	game::sub_538C00(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_55F131:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x5D336F96);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1FAB5998);
	push(mv, &ts->esp, 0x1FAB5998);
	push(mv, &ts->esp, 0xD05FC3A3);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->ecx);
	game::sub_558790(ts, mv);
	add(&ts->esp, 0x24);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(0x838970, 4), 0x1FAB5998);
	game::sub_538C00(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_55F179:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537D40(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55F32C;
    }
	mov(mv, &ts->al, x86::mem(ts->edi + 0x22, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55F32C;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C60(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_55F1C0:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537D40(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55F32C;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x13C, 4), 0x911AB364);
	game::sub_537C60(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_55F206:
	cmp(&ts->eflags, ts->edi, 0xB4EDEB6D);
	if (ts->eflags.zero) {
        goto loc_55F325;
    }
	cmp(&ts->eflags, ts->edi, 0xD05FC3A3);
	if (ts->eflags.zero) {
        goto loc_55F296;
    }
	cmp(&ts->eflags, ts->edi, 0xE1FDE1D1);
	if (!ts->eflags.zero) {
        goto loc_55F32C;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x13C, 4));
	cmp(&ts->eflags, ts->eax, 0xC407210);
	if (ts->eflags.zero) {
        goto loc_55F268;
    }
	cmp(&ts->eflags, ts->eax, 0x911AB364);
	if (!ts->eflags.zero) {
        goto loc_55F32C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50B8C0(ts, mv);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(0x839BBC, 4), 0x0);
	game::sub_54F980(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_55BDF0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_55F268:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x48, 4));
	mov(mv, x86::mem(0x839BBC, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x48, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50B8C0(ts, mv);
	add(&ts->esp, 0x8);
	game::sub_54F980(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_55BD60(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_55F296:
	push(mv, &ts->esp, 0x1D);
	mov(&ts->ecx, 0x838980);
	game::sub_53AEA0(ts, mv);
	mov(&ts->edi, ts->eax);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1D);
	mov(&ts->ecx, 0x8392C0);
	game::sub_631D20(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1E);
	mov(&ts->ecx, 0x8392C0);
	game::sub_631D20(ts, mv);
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8389D0);
	game::sub_413440(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x8392C0);
	game::sub_4D8EC0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8389AC, 4));
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x8392C0);
	add(&ts->ecx, 0x18);
	game::sub_503950(ts, mv);
	push(mv, &ts->esp, 0x8389D0);
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8637D0);
	game::sub_55B1A0(ts, mv);
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8389D0);
	game::sub_413440(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x8392C0);
	game::sub_4D8EC0(ts, mv);
	add(&ts->esp, 0xC);

loc_55F325:
	mov(&ts->ecx, ts->esi);
	game::sub_538CA0(ts, mv);

loc_55F32C:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);
}

void sub_55F340(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7784DC);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x20);
	mov(mv, &ts->eax, x86::mem(0x839BBC, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ecx);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x79D7B0);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->edx);
	push(mv, &ts->esp, 0x1D);
	mov(mv, x86::mem(ts->esp + 0x38, 4), 0x0);
	game::sub_60FEE0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8389AC, 4));
	mov(&ts->ebx, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	add(&ts->esp, 0x4);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x0);
	mov(&ts->edi, ts->eax);
	push(mv, &ts->esp, 0x1D);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x8A2B68);
	game::sub_61BA30(ts, mv);
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_55F41A;
    }

loc_55F3B8:
	movsx(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 1));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_55F402;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	game::sub_539B70(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_55F402;
    }
	push(mv, &ts->esp, 0x10);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55F3ED;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0xC, 4), 0x0);
	goto loc_55F3EF;

loc_55F3ED:
	xor_(&ts->eax, ts->eax);

loc_55F3EF:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);

loc_55F402:
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1D);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x8A2B68);
	game::sub_61BA50(ts, mv);
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_55F3B8;
    }

loc_55F41A:
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x24, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	game::Iostream_init__Iostream_init_void_(ts, mv);
	cmp(&ts->eflags, ts->edi, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_55F55A;
    }

loc_55F433:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x8, 4));
	game::sub_610000(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	mov(&ts->esi, ts->eax);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->esi);
	game::sub_43DCC0(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55F550;
    }
	push(mv, &ts->esp, 0x54);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->esi);
	xor_(&ts->ebx, ts->ebx);
	game::j__malloc(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->esi);
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x34, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_55F4D3;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43DB50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->eax);
	add(&ts->esp, 0x4);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x20, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0x22, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0x23, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0x2C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x30, 4), ts->eax);
	mov(&ts->eax, 0x3F800000);
	mov(mv, x86::mem(ts->esi + 0x34, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x38, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x3C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x40, 4), ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, x86::mem(ts->esi + 0x21, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x44, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x45, 1), ts->bl);
	mov(mv, x86::mem(ts->esi, 4), 0x79BE44);
	mov(mv, x86::mem(ts->esi + 0x48, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->eax);
	goto loc_55F4D5;

loc_55F4D3:
	xor_(&ts->esi, ts->esi);

loc_55F4D5:
	cmp(mv, &ts->eflags, ts->edi, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->esp + 0x34, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_55F521;
    }

loc_55F4E0:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x8, 4));
	game::sub_610000(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_43DCC0(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_55F521;
    }
	mov(&ts->eax, ts->edi);
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->edi, x86::mem(ts->edi, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x50, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	inc(&ts->ebx);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_55F4E0;
    }

loc_55F521:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	test(&ts->eflags, ts->ebx, ts->ebx);
	setz(ts->eflags, &ts->al);
	add(&ts->ecx, 0x4C);
	mov(mv, x86::mem(ts->esi + 0x22, 1), ts->al);
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55F550;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x24, 4));
	mov(&ts->ecx, 0x294D2A3);
	cmp(&ts->eflags, ts->edx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_55F550;
    }
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->ecx);
	or_(mv, x86::mem(ts->eax + 0x1C, 4), 0x400000);

loc_55F550:
	cmp(mv, &ts->eflags, ts->edi, x86::mem(ts->esp + 0xC, 4));
	if (!ts->eflags.zero) {
        goto loc_55F433;
    }

loc_55F55A:
	push(mv, &ts->esp, 0x1D);
	mov(&ts->ecx, 0x8392C0);
	game::sub_6102F0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, x86::mem(ts->ebx + 0x20C, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_55F5B4;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xEBB03E66);
	mov(&ts->ecx, ts->eax);
	game::sub_61B500(ts, mv);
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esp + 0x10, 4));
	if (!ts->eflags.zero) {
        goto loc_55F5B4;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x20C, 4));
	mov(mv, &ts->esi, x86::mem(ts->ebx + 0x4, 4));
	game::sub_610000(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DB50(ts, mv);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->edi, ts->eax);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50B840(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55F5B4;
    }
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->edi);

loc_55F5B4:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50B840(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55F659;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_55F659;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x50, 4));
	lea(mv, &ts->edi, x86::mem(ts->ebx + 0x50, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x1);

loc_55F5E7:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55F5F0;
    }
	lea(mv, &ts->esi, x86::mem(ts->eax - 0x4, 4));
	goto loc_55F5F2;

loc_55F5F0:
	xor_(&ts->esi, ts->esi);

loc_55F5F2:
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_55F5FB;
    }
	lea(mv, &ts->eax, x86::mem(ts->edi - 0x4, 4));
	goto loc_55F5FD;

loc_55F5FB:
	xor_(&ts->eax, ts->eax);

loc_55F5FD:
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55F664;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x4, 4));
	or_(&ts->ecx, 0xFFFFFFFF);
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_55F62B;
    }
	mov(mv, &ts->al, x86::mem(ts->edx, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_55F62B;
    }

loc_55F611:
	imul(&ts->ecx, ts->ecx, 0x21);
	cmp(&ts->eflags, ts->al, 0x61);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_55F61E;
    }
	cmp(&ts->eflags, ts->al, 0x7A);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_55F61E;
    }
	add(&ts->al, 0xE0);

loc_55F61E:
	movzx(&ts->eax, ts->al);
	add(&ts->ecx, ts->eax);
	mov(mv, &ts->al, x86::mem(ts->edx + 0x1, 1));
	inc(&ts->edx);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55F611;
    }

loc_55F62B:
	push(mv, &ts->esp, ts->ecx);
	game::sub_50B840(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55F63D;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x10, 4));
	goto loc_55F63F;

loc_55F63D:
	xor_(&ts->eax, ts->eax);

loc_55F63F:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xC, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_55F652;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	inc(&ts->edx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edx);
	goto loc_55F5E7;

loc_55F652:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	goto loc_55F65B;

loc_55F659:
	push(mv, &ts->esp, 0x0);

loc_55F65B:
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x4C, 4));
	lea(mv, &ts->ecx, x86::mem(ts->ebx + 0x4C, 4));
	call(ts, mv, x86::mem(ts->edx + 0x20, 4));

loc_55F664:
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x20C, 4));
	mov(mv, &ts->edi, x86::mem(ts->ebx + 0x58, 4));
	game::sub_610000(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DB50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0xC, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_55F6EB;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4C, 4));
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8389D0);
	game::sub_413440(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x1D);
	mov(&ts->ecx, 0x8389D0);
	game::sub_631D20(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x1E);
	mov(&ts->ecx, 0x8389D0);
	game::sub_631D20(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x8389D0);
	game::sub_4D8EC0(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x8389D0);
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8637D0);
	game::sub_55B1A0(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->edi + 0x4C, 4));
	mov(mv, &ts->edi, x86::mem(ts->edi + 0x8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1D);
	game::sub_4C2100(ts, mv);
	add(&ts->esp, 0x10);

loc_55F6EB:
	mov(mv, &ts->eax, x86::mem(ts->ebx, 4));
	mov(&ts->ecx, ts->ebx);
	call(ts, mv, x86::mem(ts->eax + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	pop(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_55F731;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_55F710:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(&ts->edx, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	game::j__free(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_55F710;
    }

loc_55F731:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x2C);
	retn(mv, &ts->esp);

loc_7784C0:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x14, 4));
	goto sub_4DEF30;

loc_7784C8:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79D7A0);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_560D30:
	mov(&ts->eax, 0x7E3A1C);
	goto ___CxxFrameHandler;
}

void sub_55F740(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x214, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_55F8E4;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x15C, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x8, 4));
	cmp(&ts->eflags, ts->ebx, 0xFFFFFFFF);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_55F7A8;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x154, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x150, 4));
	if (ts->eflags.zero) {
        goto loc_55F77D;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_55F77F;

loc_55F77D:
	xor_(&ts->eax, ts->eax);

loc_55F77F:
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->edi + 0xC, 4));
	if (ts->eflags.zero) {
        goto loc_55F79F;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	movsx(mv, &ts->eax, x86::mem(ts->ecx + 0x838082, 1));
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_55F79F;
    }
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_458520(ts, mv);

loc_55F79F:
	mov(&ts->ecx, ts->edi);
	game::sub_495900(ts, mv);
	goto loc_55F7D7;

loc_55F7A8:
	cmp(&ts->eflags, ts->ebx, 0x1);
	if (!ts->eflags.zero) {
        goto loc_55F7D7;
    }
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x150, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_4AEBC0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_55F7D0;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x7);
	push(mv, &ts->esp, ts->eax);
	game::sub_50D150(ts, mv);
	add(&ts->esp, 0xC);

loc_55F7D0:
	mov(&ts->ecx, ts->edi);
	game::sub_4958F0(ts, mv);

loc_55F7D7:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x15C, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ebp - 0x4, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_55F8E2;
    }
	cmp(&ts->eflags, ts->ebx, 0x1);
	if (!ts->eflags.zero) {
        goto loc_55F801;
    }
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0x1B4, 4));
	mov(&ts->ecx, ts->ebx);
	game::sub_527610(ts, mv);
	mov(&ts->ecx, ts->ebx);
	game::sub_495850(ts, mv);
	goto loc_55F81A;

loc_55F801:
	cmp(&ts->eflags, ts->ebx, 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_55F81A;
    }
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0x1B4, 4));
	mov(&ts->ecx, ts->ebx);
	game::sub_527660(ts, mv);
	mov(&ts->ecx, ts->ebx);
	game::sub_495810(ts, mv);

loc_55F81A:
	mov(mv, &ts->edi, x86::mem(ts->edi + 0x2C, 4));
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8389D0);
	game::sub_413440(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1D);
	mov(&ts->ecx, 0x8389D0);
	game::sub_631D20(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1E);
	mov(&ts->ecx, 0x8389D0);
	game::sub_631D20(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x8389D0);
	game::sub_4D8EC0(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x8389D0);
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8637D0);
	game::sub_55B1A0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x154, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x150, 4));
	if (ts->eflags.zero) {
        goto loc_55F887;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_55F889;

loc_55F887:
	xor_(&ts->eax, ts->eax);

loc_55F889:
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->ecx + 0xC, 4));
	if (!ts->eflags.zero) {
        goto loc_55F8A6;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1FC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_55F8A6:
	game::sub_4AEBC0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_55F8C7;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x200, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_55F8C7:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1FC, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x200, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0x8);

loc_55F8E2:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);

loc_55F8E4:
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_55F8F0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x150, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_5385C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	xor_(&ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	add(&ts->eax, 0x4C);
	mov(mv, x86::mem(ts->esi + 0x210, 4), ts->ebx);
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_55F9AC;
    }

loc_55F925:
	push(mv, &ts->esp, 0x30);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_55F95E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x8, 4));
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x20, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x21, 1), 0x1);
	mov(mv, x86::mem(ts->eax + 0x22, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x23, 1), ts->bl);
	mov(mv, x86::mem(ts->eax, 4), 0x79AFDC);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), ts->ecx);
	goto loc_55F960;

loc_55F95E:
	xor_(&ts->eax, ts->eax);

loc_55F960:
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_52ED80(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_55F986;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x24, 4));
	mov(&ts->ecx, 0x73C4EC2D);
	cmp(&ts->eflags, ts->edx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_55F986;
    }
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->ecx);
	or_(mv, x86::mem(ts->eax + 0x1C, 4), 0x400000);

loc_55F986:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x210, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	inc(&ts->eax);
	mov(mv, x86::mem(ts->esi + 0x210, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edx, 4));
	add(&ts->ecx, 0x4C);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_55F925;
    }

loc_55F9AC:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20C, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_55FA22;
    }
	mov(mv, &ts->eax, x86::mem(0x839BBC, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0xEBB03E66);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	game::sub_61B500(ts, mv);
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esp + 0xC, 4));
	if (!ts->eflags.zero) {
        goto loc_55FA22;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20C, 4));
	game::sub_610000(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DB50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0xC, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_55FA22;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x20C, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51F7A0(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_55FA0F;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_55FA0D;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_55FA0F;

loc_55FA0D:
	xor_(&ts->eax, ts->eax);

loc_55FA0F:
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_5386A0(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	game::sub_43BE80(ts, mv);
	goto loc_55FA7B;

loc_55FA22:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_55FA2E;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_55FA30;

loc_55FA2E:
	xor_(&ts->eax, ts->eax);

loc_55FA30:
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->edi + 0xC, 4));
	if (ts->eflags.zero) {
        goto loc_55FA7B;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0x30, 1), ts->bl);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x10, 4));
	mov(mv, x86::mem(ts->edi + 0xC, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_55FA45;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x14, 4));
	goto loc_55FA48;

loc_55FA45:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x18, 4));

loc_55FA48:
	fchs(&ts->fp, x86::fp_index(0));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_55FA5C;
    }
	mov(mv, x86::mem(ts->ecx + 0x2C, 2), 0x2);

loc_55FA5C:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0x2C, 2), ts->bx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_52EEA0(ts, mv);

loc_55FA7B:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x15C, 4));
	mov(mv, x86::mem(ts->esi + 0x17F, 1), ts->bl);
	mov(mv, &ts->edi, x86::mem(ts->edx + 0x2C, 4));
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8389D0);
	game::sub_413440(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1D);
	mov(&ts->ecx, 0x8389D0);
	game::sub_631D20(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1E);
	mov(&ts->ecx, 0x8389D0);
	game::sub_631D20(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x8389D0);
	game::sub_4D8EC0(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x8389D0);
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8637D0);
	game::sub_55B1A0(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1D);
	game::sub_4C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	jmp(x86::mem(ts->eax + 0x10, 4));
}

void sub_55FB00(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0xDF422345);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0x43A05263);
	mov(mv, x86::mem(ts->esi + 0x214, 1), 0x1);
	game::sub_4954E0(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	xor_(&ts->ebx, ts->ebx);
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_55FB4B;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_55FB4B;
    }
	push(mv, &ts->esp, 0x47FF4E7C);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_55FB62;
    }

loc_55FB4B:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_55FBA9;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x47FF4E7C);
	game::sub_52C570(ts, mv);

loc_55FB62:
	mov(&ts->ebp, ts->eax);
	cmp(&ts->eflags, ts->ebp, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_55FBA9;
    }
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x4C, 4));
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_55FBA9;
    }
	nop();

loc_55FB70:
	push(mv, &ts->esp, 0x79D788);
	game::sub_505450(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x30, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55FB8D;
    }
	mov(mv, &ts->edi, x86::mem(ts->edi + 0x4, 4));
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_55FB70;
    }
	goto loc_55FBA9;

loc_55FB8D:
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_55FBA9;
    }
	cmp(mv, &ts->eflags, ts->edi, x86::mem(ts->ebp + 0x54, 4));
	if (ts->eflags.zero) {
        goto loc_55FBA6;
    }
	mov(&ts->ecx, ts->ebp);
	mov(mv, x86::mem(ts->ebp + 0x54, 4), ts->edi);
	game::sub_517720(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x54, 4));
	mov(mv, x86::mem(ts->ecx + 0x10, 4), ts->ebx);

loc_55FBA6:
	mov(mv, x86::mem(ts->edi + 0x10, 4), ts->ebx);

loc_55FBA9:
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x7B, 1), ts->bl);
	game::sub_55F8F0(ts, mv);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x150, 4));
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->edi + 0x2F, 1), 0x1);
	game::sub_52EB90(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xA936C3A2);
	push(mv, &ts->esp, ts->edx);
	game::sub_495520(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x89782734);
	push(mv, &ts->esp, ts->eax);
	game::sub_495520(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	add(&ts->esp, 0x10);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_55FBF1;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_55FBF3;

loc_55FBF1:
	xor_(&ts->eax, ts->eax);

loc_55FBF3:
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->edi + 0xC, 4));
	if (!ts->eflags.zero) {
        goto loc_55FC09;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1FC, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);
	goto loc_55FC48;

loc_55FC09:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x8, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_55FC15;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_55FC17;

loc_55FC15:
	xor_(&ts->eax, ts->eax);

loc_55FC17:
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->edi + 0xC, 4));
	if (!ts->eflags.zero) {
        goto loc_55FC2D;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x200, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);
	goto loc_55FC48;

loc_55FC2D:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1FC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x200, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0x8);

loc_55FC48:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_55FC6C;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_55FC6C;
    }
	push(mv, &ts->esp, 0x55C171E2);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_55FC83;
    }

loc_55FC6C:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_55FCCC;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x55C171E2);
	game::sub_52C570(ts, mv);

loc_55FC83:
	mov(&ts->edi, ts->eax);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_55FCCC;
    }
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x4C, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_55FCCC;
    }

loc_55FC90:
	push(mv, &ts->esp, 0x78FC44);
	game::sub_505450(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55FCB0;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_55FC90;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_55FCB0:
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_55FCCC;
    }
	cmp(mv, &ts->eflags, ts->esi, x86::mem(ts->edi + 0x54, 4));
	if (ts->eflags.zero) {
        goto loc_55FCC9;
    }
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->edi + 0x54, 4), ts->esi);
	game::sub_517720(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x54, 4));
	mov(mv, x86::mem(ts->edx + 0x10, 4), ts->ebx);

loc_55FCC9:
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ebx);

loc_55FCCC:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_55FCE0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	push(mv, &ts->esp, 0x5);
	game::sub_458520(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDF422345);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0x7A4C4AB2);
	mov(mv, x86::mem(ts->esi + 0x214, 1), 0x0);
	game::sub_495520(ts, mv);
	add(&ts->esp, 0x8);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x150, 4));
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(ts->ecx + 0x2F, 1), 0x0);
	game::sub_52EB90(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xA936C3A2);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x7B, 1), 0x1);
	game::sub_4954E0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x89782734);
	push(mv, &ts->esp, ts->edx);
	game::sub_4954E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20C, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x58, 4));
	add(&ts->esp, 0x10);
	game::sub_610000(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DB50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0xC, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	mov(&ts->ecx, 0x8389D0);
	if (ts->eflags.zero) {
        goto loc_55FDD2;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4C, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, 0x8392C0);
	game::sub_413440(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x1D);
	mov(&ts->ecx, 0x8389D0);
	game::sub_631D20(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x1E);
	mov(&ts->ecx, 0x8389D0);
	game::sub_631D20(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x8389D0);
	game::sub_4D8EC0(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x8389D0);
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8637D0);
	game::sub_55B1A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4C, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x1D);
	game::sub_4C2100(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->ebx);
	goto loc_55FE36;

loc_55FDD2:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x20C, 4));
	push(mv, &ts->esp, 0x8392C0);
	game::sub_413440(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1D);
	mov(&ts->ecx, 0x8389D0);
	game::sub_631D20(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1E);
	mov(&ts->ecx, 0x8389D0);
	game::sub_631D20(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x8389D0);
	game::sub_4D8EC0(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x8389D0);
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8637D0);
	game::sub_55B1A0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1D);
	game::sub_4C2100(ts, mv);
	add(&ts->esp, 0x10);

loc_55FE36:
	mov(mv, &ts->al, x86::mem(ts->ebp + 0x8, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, 0x1);
	if (ts->eflags.zero) {
        goto loc_55FE4F;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x79D79C);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->ecx);
	goto loc_55FE5D;

loc_55FE4F:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x79D790);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->edx);

loc_55FE5D:
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x8389D0);
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8637D0);
	game::sub_55B1A0(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x0);
	game::sub_4C2140(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_55FE90(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x58, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x48, 4));
	push(mv, &ts->esp, ts->edi);
	add(&ts->ecx, 0xFFFDFFFA);
	cmp(&ts->eflags, ts->ecx, 0x5);
	mov(&ts->edi, 0xA9);
	mov(&ts->eax, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x4, 4), 0x2);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_55FEB2;
    }
	jmp(x86::mem(0x55FF4C, 4));

loc_55FEB9:
	mov(mv, x86::mem(ts->esp + 0x4, 4), 0x1);

loc_55FEC1:
	mov(&ts->edi, 0x39);
	mov(&ts->eax, 0x89);
	goto def_55FEB2;

loc_55FECD:
	mov(mv, x86::mem(ts->esp + 0x4, 4), 0x1);

loc_55FED5:
	mov(&ts->edi, 0x3A);
	mov(&ts->eax, 0x91);
	goto def_55FEB2;

loc_55FEE1:
	mov(mv, x86::mem(ts->esp + 0x4, 4), 0x1);

loc_55FEE9:
	mov(&ts->edi, 0x34);
	mov(&ts->eax, 0x61);

def_55FEB2:
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ebx, x86::mem(ts->eax + 0x8, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_55FF10;
    }
	mov(&ts->edi, ts->edi);

loc_55FF00:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x838980);
	game::sub_530290(ts, mv);
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_55FF00;
    }

loc_55FF10:
	cmp(&ts->eflags, ts->edi, 0x34);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_55FF3C;
    }
	cmp(&ts->eflags, ts->edi, 0x3E);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_55FF3C;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x838980);
	game::sub_521940(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_55FF3C;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x838980);
	game::sub_53AF20(ts, mv);

loc_55FF3C:
	mov(&ts->ecx, 0x838980);
	pop(mv, &ts->esp, ts->edi);
	add(&ts->esp, 0x4);
	goto sub_55C460;
}

void sub_55FF70(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x58, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x48, 4));
	cmp(&ts->eflags, ts->eax, 0x20007);
	push(mv, &ts->esp, ts->esi);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_55FFAB;
    }
	cmp(&ts->eflags, ts->eax, 0x20006);
	if (!ts->eflags.carry) {
        goto loc_55FFA4;
    }
	sub(&ts->eax, 0x10001);
	cmp(&ts->eflags, ts->eax, 0x4);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_55FF8F;
    }
	jmp(x86::mem(0x55FFF0, 4));

loc_55FF96:
	mov(&ts->esi, 0x79);
	goto loc_55FFC8;

loc_55FF9D:
	mov(&ts->esi, 0x81);
	goto loc_55FFC8;

loc_55FFA4:
	mov(&ts->esi, 0x89);
	goto loc_55FFC8;

loc_55FFAB:
	sub(&ts->eax, 0x20008);
	cmp(&ts->eflags, ts->eax, 0x3);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_55FF8F;
    }
	jmp(x86::mem(0x560004, 4));

loc_55FFBC:
	mov(&ts->esi, 0x91);
	goto loc_55FFC8;

loc_55FFC3:
	mov(&ts->esi, 0x61);

loc_55FFC8:
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x8, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_55FFE0;
    }

loc_55FFD0:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x838980);
	game::sub_530290(ts, mv);
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_55FFD0;
    }

loc_55FFE0:
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x838980);
	pop(mv, &ts->esp, ts->esi);
	goto sub_55C460;

def_55FF8F:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_560020(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x168, 4));
	mov(&ts->ebx, 0x1);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5600EF;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x172, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_5600EF;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_56006D;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x154, 4));
	mov(&ts->ecx, ts->eax);
	sar(&ts->ecx, 0x10);
	mov(mv, x86::mem(ts->esi + (ts->ecx*4) + 0x158, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x48, 4));
	mov(mv, x86::mem(ts->esi + 0x154, 4), ts->eax);
	goto loc_56008F;

loc_56006D:
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_56008F;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x154, 4));
	and_(&ts->ecx, 0xFFFF0000);
	dec(&ts->ecx);
	sar(&ts->ecx, 0x10);
	mov(mv, &ts->edx, x86::mem(ts->esi + (ts->ecx*4) + 0x158, 4));
	mov(mv, x86::mem(ts->esi + 0x154, 4), ts->edx);

loc_56008F:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x168, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_5600B3;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x16C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x81F0B71A);
	mov(mv, x86::mem(ts->esi + 0x168, 4), ts->ebx);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);

loc_5600B3:
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, x86::mem(ts->esi + 0x172, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x173, 1), 0x0);
	game::sub_52F390(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C60(ts, mv);
	mov(mv, x86::mem(0x7FA1FC, 1), ts->bl);
	add(&ts->esp, 0x10);
	mov(mv, x86::mem(ts->esi + 0x16C, 4), 0x799C30);

loc_5600EF:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_560100(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x8, 4));
	cmp(&ts->eflags, ts->edi, 0x72619778);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x5C, 4));
	if (!ts->eflags.zero) {
        goto loc_560120;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	game::sub_495900(ts, mv);
	goto loc_560130;

loc_560120:
	cmp(&ts->eflags, ts->edi, 0x911C0A4B);
	if (!ts->eflags.zero) {
        goto loc_560130;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	game::sub_4958F0(ts, mv);

loc_560130:
	cmp(mv, &ts->eflags, ts->ebx, x86::mem(ts->esi + 0x5C, 4));
	if (ts->eflags.zero) {
        goto loc_560247;
    }
	cmp(&ts->eflags, ts->edi, 0x911C0A4B);
	if (!ts->eflags.zero) {
        goto loc_560157;
    }
	lea(mv, &ts->edi, x86::mem(ts->esi + 0xB4, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_527610(ts, mv);
	mov(&ts->ecx, ts->edi);
	game::sub_495850(ts, mv);
	goto loc_560173;

loc_560157:
	cmp(&ts->eflags, ts->edi, 0x72619778);
	if (!ts->eflags.zero) {
        goto loc_560173;
    }
	lea(mv, &ts->edi, x86::mem(ts->esi + 0xB4, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_527660(ts, mv);
	mov(&ts->ecx, ts->edi);
	game::sub_495810(ts, mv);

loc_560173:
	mov(&ts->ecx, ts->esi);
	game::sub_546F40(ts, mv);
	push(mv, &ts->esp, 0x799C64);
	mov(&ts->ecx, 0x8637B0);
	game::sub_51BB70(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5601A0;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5601A0;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x5C, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x58, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	mov(mv, x86::mem(ts->edx + 0x50, 4), ts->eax);

loc_5601A0:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x5C, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x2C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x8389D0);
	game::sub_631D20(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x8389D0);
	game::sub_4D8EC0(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x8389D0);
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8637D0);
	game::sub_55B1A0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5601E6;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_5601E8;

loc_5601E6:
	xor_(&ts->eax, ts->eax);

loc_5601E8:
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esi + 0x5C, 4));
	if (!ts->eflags.zero) {
        goto loc_560203;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_560203:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_56020F;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_560211;

loc_56020F:
	xor_(&ts->eax, ts->eax);

loc_560211:
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esi + 0x5C, 4));
	if (!ts->eflags.zero) {
        goto loc_56022C;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x100, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_56022C:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x100, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0x8);

loc_560247:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_560250(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7775C8);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x1C);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x50, 4));
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->esi);
	game::sub_5385C0(ts, mv);
	xor_(&ts->ebx, ts->ebx);
	push(mv, &ts->esp, 0x30);
	mov(mv, x86::mem(ts->esi + 0x10C, 4), ts->ebx);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5602B5;
    }
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x20, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x21, 1), 0x1);
	mov(mv, x86::mem(ts->eax + 0x22, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x23, 1), ts->bl);
	mov(mv, x86::mem(ts->eax, 4), 0x79AFDC);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), ts->ebx);
	goto loc_5602B7;

loc_5602B5:
	xor_(&ts->eax, ts->eax);

loc_5602B7:
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_52ED80(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5602DD;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x24, 4));
	mov(&ts->ecx, 0x73C4EC2D);
	cmp(&ts->eflags, ts->edx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_5602DD;
    }
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->ecx);
	or_(mv, x86::mem(ts->eax + 0x1C, 4), 0x400000);

loc_5602DD:
	inc(mv, x86::mem(ts->esi + 0x10C, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5602EF;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_5602F1;

loc_5602EF:
	xor_(&ts->eax, ts->eax);

loc_5602F1:
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_5386A0(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, x86::mem(ts->esp + 0xF, 1), ts->bl);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	xor_(&ts->edx, ts->edx);
	mov(mv, &ts->dl, x86::mem(ts->esi + 0x112, 1));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	mov(mv, x86::mem(ts->esp + 0x30, 4), ts->ebx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_5204E0(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x2C, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x2C, 4));
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->esi, ts->edx);
	if (ts->eflags.zero) {
        goto loc_560504;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	game::Iostream_init__Iostream_init_void_(ts, mv);
	cmp(&ts->eflags, ts->esi, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_56042B;
    }

loc_560350:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0xEBB03E66);
	game::sub_61B500(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x838980);
	game::sub_53B500(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56041F;
    }
	push(mv, &ts->esp, 0x30);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5603A6;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x20, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x21, 1), 0x1);
	mov(mv, x86::mem(ts->eax + 0x22, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x23, 1), ts->bl);
	mov(mv, x86::mem(ts->eax, 4), 0x79AFDC);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), ts->ecx);
	goto loc_5603A8;

loc_5603A6:
	xor_(&ts->eax, ts->eax);

loc_5603A8:
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_52ED80(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5603CE;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x24, 4));
	mov(&ts->ecx, 0x73C4EC2D);
	cmp(&ts->eflags, ts->edx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_5603CE;
    }
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->ecx);
	or_(mv, x86::mem(ts->eax + 0x1C, 4), 0x400000);

loc_5603CE:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	inc(mv, x86::mem(ts->eax + 0x10C, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x114, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_56041F;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0xEBB03E66);
	game::sub_61B500(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0xEBB03E66);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->eax);
	game::sub_61B500(ts, mv);
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esp + 0x18, 4));
	if (!ts->eflags.zero) {
        goto loc_56041F;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->ecx + 0x114, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0xF, 1), 0x1);

loc_56041F:
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(mv, &ts->eflags, ts->esi, x86::mem(ts->esp + 0x1C, 4));
	if (!ts->eflags.zero) {
        goto loc_560350;
    }

loc_56042B:
	mov(mv, &ts->eax, x86::mem(0x8389C8, 4));
	cmp(&ts->eflags, ts->eax, 0x8389C8);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x10, 4));
	if (ts->eflags.zero) {
        goto loc_560457;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	mov(&ts->edi, ts->edi);

loc_560440:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0xC, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_560450;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->eax, 0x8389C8);
	if (!ts->eflags.zero) {
        goto loc_560440;
    }
	goto loc_560457;

loc_560450:
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_560465;
    }

loc_560457:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x8392C0);
	game::sub_6102F0(ts, mv);

loc_560465:
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0xF, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_560488;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	goto loc_56048C;

loc_560473:
	xor_(&ts->eax, ts->eax);

loc_560475:
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_5386A0(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	game::sub_43BE80(ts, mv);
	goto loc_5604BA;

loc_560488:
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5604A4;
    }

loc_56048C:
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51F7A0(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_560475;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_560473;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_560475;

loc_5604A4:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5604B0;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_5604B2;

loc_5604B0:
	xor_(&ts->eax, ts->eax);

loc_5604B2:
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_5386A0(ts, mv);

loc_5604BA:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->edi + 0x2F, 1), 0x1);
	game::sub_52EB90(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x5C, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x2C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x8389D0);
	game::sub_631D20(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x8389D0);
	game::sub_4D8EC0(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x8389D0);
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8637D0);
	game::sub_55B1A0(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x20, 4));

loc_560504:
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	cmp(&ts->eflags, ts->esi, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x30, 4), 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_560535;
    }

loc_560514:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->esi, 4), ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->esi);
	game::j__free(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x24, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_560514;
    }

loc_560535:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x28);
	retn(mv, &ts->esp);

loc_7775C0:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x14, 4));
	goto sub_4DEF30;

SEH_566490:
	mov(&ts->eax, 0x7E3AE8);
	goto ___CxxFrameHandler;
}

void sub_560550(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7784B4);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x16C);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_56059E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_55C010(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_56059E:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_7784A0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79D7B8);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_560550:
	mov(&ts->eax, 0x7E3A40);
	goto ___CxxFrameHandler;
}

void sub_5605B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	push(mv, &ts->esp, 0x5);
	game::sub_458520(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDF422345);
	push(mv, &ts->esp, ts->eax);
	game::sub_495520(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xA2285688);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4954E0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xC318FF76);
	push(mv, &ts->esp, ts->edx);
	game::sub_4954E0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x160, 4));
	xor_(&ts->ebx, ts->ebx);
	add(&ts->esp, 0x18);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x169, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_560632;
    }
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x8637B0);
	game::sub_51BB70(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_56062C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_56062C;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x14, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_56062C;
    }
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x81F0B71A);
	mov(&ts->ecx, ts->eax);
	game::sub_55B5C0(ts, mv);

loc_56062C:
	mov(mv, x86::mem(ts->esi + 0x160, 4), ts->ebx);

loc_560632:
	mov(mv, x86::mem(0x8A1C68, 4), ts->ebx);
	mov(mv, x86::mem(0x8363F8, 4), ts->ebx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x158, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_560651;
    }
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x158, 4), ts->ebx);

loc_560651:
	mov(mv, &ts->eax, x86::mem(0x7FA1C0, 4));
	push(mv, &ts->esp, 0xA936C3A2);
	push(mv, &ts->esp, ts->eax);
	game::sub_4954E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x7FA1C0, 4));
	push(mv, &ts->esp, 0x89782734);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4954E0(ts, mv);
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x8389D0);
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8637D0);
	game::sub_55B1A0(ts, mv);
	push(mv, &ts->esp, 0x799F48);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5606AE;
    }
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5606AE;
    }
	push(mv, &ts->esp, 0x799F48);
	game::sub_5376F0(ts, mv);

loc_5606AE:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ebx);
	game::sub_4C2140(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x20, 4));
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x799AB8);
	push(mv, &ts->esp, ts->edx);
	game::sub_54E6E0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x83854C, 1), 0x1);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_5606E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7775C8);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x110, 4));
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x48, 4));
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x50, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->esi);
	game::sub_5385C0(ts, mv);
	xor_(&ts->ebx, ts->ebx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->edi + 0x10C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->edx);
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x30, 4), ts->ebx);
	game::sub_539960(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x20, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->esi, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	if (!ts->eflags.zero) {
        goto loc_56076C;
    }
	mov(mv, x86::mem(ts->esp + 0x24, 4), 0xFFFFFFFF);
	game::sub_4DEF30(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x1C);
	retn(mv, &ts->esp);

loc_56076C:
	game::Iostream_init__Iostream_init_void_(ts, mv);
	cmp(&ts->eflags, ts->esi, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_5607DF;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_560780:
	push(mv, &ts->esp, 0x30);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5607B5;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x20, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x21, 1), 0x1);
	mov(mv, x86::mem(ts->eax + 0x22, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x23, 1), ts->bl);
	mov(mv, x86::mem(ts->eax, 4), 0x79AFDC);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), ts->ecx);
	goto loc_5607B7;

loc_5607B5:
	xor_(&ts->eax, ts->eax);

loc_5607B7:
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x50, 4));
	game::sub_52ED80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x10C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	inc(&ts->ecx);
	mov(mv, x86::mem(ts->edi + 0x10C, 4), ts->ecx);
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_560780;
    }
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x14, 4));

loc_5607DF:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x54, 4));
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x54, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_560833;
    }
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	cmp(&ts->eflags, ts->esi, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x24, 4), 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_560909;
    }
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_560800:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->esi, 4), ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->esi);
	game::j__free(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x18, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_560800;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x1C);
	retn(mv, &ts->esp);

loc_560833:
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x8392C0);
	game::sub_6102F0(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_56087B;
    }
	cmp(&ts->eflags, ts->esi, 0x1D);
	if (ts->eflags.zero) {
        goto loc_56087B;
    }
	lea(mv, &ts->esi, x86::mem(ts->edi + 0x50, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_51F7A0(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_560868;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_560866;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_560868;

loc_560866:
	xor_(&ts->eax, ts->eax);

loc_560868:
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_5386A0(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	game::sub_43BE80(ts, mv);
	goto loc_560892;

loc_56087B:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x54, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x50, 4));
	if (ts->eflags.zero) {
        goto loc_56088A;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_56088C;

loc_56088A:
	xor_(&ts->eax, ts->eax);

loc_56088C:
	push(mv, &ts->esp, ts->eax);
	game::sub_5386A0(ts, mv);

loc_560892:
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x50, 4));
	push(mv, &ts->esp, 0x1);
	mov(mv, x86::mem(ts->ecx + 0x2F, 1), 0x1);
	game::sub_52EB90(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x5C, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x2C, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5608D4;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x110, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x48, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x838980);
	game::sub_55C170(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x110, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x48, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4C2100(ts, mv);
	add(&ts->esp, 0x10);

loc_5608D4:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	cmp(&ts->eflags, ts->eax, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x24, 4), 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_560909;
    }

loc_5608E8:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(&ts->edx, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	game::j__free(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_5608E8;
    }

loc_560909:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x1C);
	retn(mv, &ts->esp);

loc_7775C0:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x14, 4));
	goto sub_4DEF30;

SEH_566490:
	mov(&ts->eax, 0x7E3AE8);
	goto ___CxxFrameHandler;
}

void sub_560920(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_560AD7;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x5C, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x8, 4));
	cmp(&ts->eflags, ts->ebx, 0xFFFFFFFF);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_56097F;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x50, 4));
	if (ts->eflags.zero) {
        goto loc_560954;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_560956;

loc_560954:
	xor_(&ts->eax, ts->eax);

loc_560956:
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->edi + 0xC, 4));
	if (ts->eflags.zero) {
        goto loc_560976;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	movsx(mv, &ts->eax, x86::mem(ts->ecx + 0x838082, 1));
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_560976;
    }
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_458520(ts, mv);

loc_560976:
	mov(&ts->ecx, ts->edi);
	game::sub_495900(ts, mv);
	goto loc_5609AB;

loc_56097F:
	cmp(&ts->eflags, ts->ebx, 0x1);
	if (!ts->eflags.zero) {
        goto loc_5609AB;
    }
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x50, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_4AEBC0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_5609A4;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x7);
	push(mv, &ts->esp, ts->eax);
	game::sub_50D150(ts, mv);
	add(&ts->esp, 0xC);

loc_5609A4:
	mov(&ts->ecx, ts->edi);
	game::sub_4958F0(ts, mv);

loc_5609AB:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x4, 4));
	cmp(mv, &ts->eflags, ts->ecx, x86::mem(ts->esi + 0x5C, 4));
	if (ts->eflags.zero) {
        goto loc_560AD5;
    }
	mov(mv, &ts->edx, x86::mem(0x8651AC, 4));
	mov(mv, x86::mem(ts->esi + 0x11C, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x5C, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x2C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x110, 4));
	mov(mv, x86::mem(ts->ecx + 0x4C, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x110, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x48, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x838980);
	game::sub_55C170(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x110, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x54, 4));
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_560A18;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_4C18B0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x110, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x48, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x9);
	if (ts->eflags.zero) {
        goto loc_560A13;
    }
	cmp(&ts->eflags, ts->eax, 0xA0);
	if (!ts->eflags.zero) {
        goto loc_560A18;
    }

loc_560A13:
	game::sub_438030(ts, mv);

loc_560A18:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x110, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x48, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4C2100(ts, mv);
	add(&ts->esp, 0x10);
	mov(&ts->ecx, ts->esi);
	game::sub_547250(ts, mv);
	cmp(&ts->eflags, ts->ebx, 0x1);
	if (!ts->eflags.zero) {
        goto loc_560A52;
    }
	lea(mv, &ts->edi, x86::mem(ts->esi + 0xB4, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_527610(ts, mv);
	mov(&ts->ecx, ts->edi);
	game::sub_495850(ts, mv);
	goto loc_560A6B;

loc_560A52:
	cmp(&ts->eflags, ts->ebx, 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_560A6B;
    }
	lea(mv, &ts->edi, x86::mem(ts->esi + 0xB4, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_527660(ts, mv);
	mov(&ts->ecx, ts->edi);
	game::sub_495810(ts, mv);

loc_560A6B:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	if (ts->eflags.zero) {
        goto loc_560A7A;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_560A7C;

loc_560A7A:
	xor_(&ts->eax, ts->eax);

loc_560A7C:
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->ecx + 0xC, 4));
	if (!ts->eflags.zero) {
        goto loc_560A99;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_560A99:
	game::sub_4AEBC0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_560ABA;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x100, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_560ABA:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x100, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0x8);

loc_560AD5:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);

loc_560AD7:
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_560AE0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x838998, 4));
	sub(&ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_560B21;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto locret_560B55;
    }
	mov(mv, &ts->eax, x86::mem(0x7FA200, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x8637B0);
	game::sub_51BB70(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_560B55;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto locret_560B55;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_560B55;
    }
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7FD238FE);
	mov(&ts->ecx, ts->eax);
	game::sub_55B5C0(ts, mv);
	retn(mv, &ts->esp);

loc_560B21:
	mov(mv, &ts->ecx, x86::mem(0x7FA200, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x8637B0);
	game::sub_51BB70(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_560B55;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto locret_560B55;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_560B55;
    }
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x495DC3F0);
	mov(&ts->ecx, ts->eax);
	game::sub_55B5C0(ts, mv);

locret_560B55:
	retn(mv, &ts->esp);
}

void sub_560B60(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x4, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_560B89;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_560B89;
    }
	push(mv, &ts->esp, 0x47FF4E7C);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_560BA0;
    }

loc_560B89:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_560BE9;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x47FF4E7C);
	game::sub_52C570(ts, mv);

loc_560BA0:
	mov(&ts->edi, ts->eax);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_560BE9;
    }
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x4C, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_560BE9;
    }
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_560BB0:
	push(mv, &ts->esp, 0x78FEF4);
	game::sub_505450(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_560BCD;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_560BB0;
    }
	goto loc_560BE9;

loc_560BCD:
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_560BE9;
    }
	cmp(mv, &ts->eflags, ts->esi, x86::mem(ts->edi + 0x54, 4));
	if (ts->eflags.zero) {
        goto loc_560BE6;
    }
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->edi + 0x54, 4), ts->esi);
	game::sub_517720(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x54, 4));
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ebx);

loc_560BE6:
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ebx);

loc_560BE9:
	mov(mv, &ts->ecx, x86::mem(0x7FA200, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x8637B0);
	game::sub_51BB70(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_560C1B;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_560C1B;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x14, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_560C1B;
    }
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x96DDA9E6);
	mov(&ts->ecx, ts->eax);
	game::sub_55B5C0(ts, mv);

loc_560C1B:
	mov(mv, &ts->edx, x86::mem(0x7FA200, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_560C3A;
    }
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->ebx);

loc_560C3A:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_560C40(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_560C66;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_560C66;
    }
	push(mv, &ts->esp, 0x47FF4E7C);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_560C7D;
    }

loc_560C66:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_560CD1;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x47FF4E7C);
	game::sub_52C570(ts, mv);

loc_560C7D:
	mov(&ts->edi, ts->eax);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_560CD1;
    }
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x4C, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_560CD1;
    }
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_560C90:
	push(mv, &ts->esp, 0x79031C);
	game::sub_505450(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_560CAD;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_560C90;
    }
	goto loc_560CD1;

loc_560CAD:
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_560CD1;
    }
	cmp(mv, &ts->eflags, ts->esi, x86::mem(ts->edi + 0x54, 4));
	if (ts->eflags.zero) {
        goto loc_560CCA;
    }
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->edi + 0x54, 4), ts->esi);
	game::sub_517720(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x54, 4));
	mov(mv, x86::mem(ts->eax + 0x10, 4), 0x0);

loc_560CCA:
	mov(mv, x86::mem(ts->esi + 0x10, 4), 0x0);

loc_560CD1:
	mov(mv, &ts->ecx, x86::mem(0x7FA200, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x8637B0);
	game::sub_51BB70(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero) {
        goto loc_560D07;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_560D07;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_560D07;
    }
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x251BF83E);
	mov(&ts->ecx, ts->eax);
	game::sub_55B5C0(ts, mv);

loc_560D07:
	mov(mv, &ts->edx, x86::mem(0x7FA200, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_560D2B;
    }
	mov(&ts->ecx, 0xFF);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->ecx);

locret_560D2B:
	retn(mv, &ts->esp);
}

void sub_560D30(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7784DC);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x20);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x79BDE0);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ecx);
	game::sub_43DB50(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x79D7B0);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->ecx);
	push(mv, &ts->esp, 0x1D);
	mov(mv, x86::mem(ts->esp + 0x3C, 4), 0x0);
	game::sub_60FEE0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8389AC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	add(&ts->esp, 0x8);
	mov(&ts->ebx, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x0);
	mov(&ts->edi, ts->eax);
	push(mv, &ts->esp, 0x1D);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x8A2B68);
	game::sub_61BA30(ts, mv);
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_560E12;
    }
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_560DB0:
	movsx(mv, &ts->eax, x86::mem(ts->esi + 0x4, 1));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_560DFA;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	game::sub_539B70(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_560DFA;
    }
	push(mv, &ts->esp, 0x10);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_560DE5;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0xC, 4), 0x0);
	goto loc_560DE7;

loc_560DE5:
	xor_(&ts->eax, ts->eax);

loc_560DE7:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x24, 4));
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->edx);

loc_560DFA:
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1D);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x8A2B68);
	game::sub_61BA50(ts, mv);
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_560DB0;
    }

loc_560E12:
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x24, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	game::Iostream_init__Iostream_init_void_(ts, mv);
	cmp(&ts->eflags, ts->edi, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_560F5B;
    }
	goto loc_560E30;

loc_560E30:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x8, 4));
	game::sub_610000(ts, mv);
	mov(&ts->esi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->esi);
	game::sub_43DCC0(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_560F51;
    }
	push(mv, &ts->esp, 0x54);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->esi);
	xor_(&ts->ebx, ts->ebx);
	game::j__malloc(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->esi);
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x34, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_560ED0;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DB50(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->eax);
	add(&ts->esp, 0x4);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x20, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0x22, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0x23, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0x2C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x30, 4), ts->eax);
	mov(&ts->eax, 0x3F800000);
	mov(mv, x86::mem(ts->esi + 0x34, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x38, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x3C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x40, 4), ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, x86::mem(ts->esi + 0x21, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x44, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x45, 1), ts->bl);
	mov(mv, x86::mem(ts->esi, 4), 0x79BE44);
	mov(mv, x86::mem(ts->esi + 0x48, 4), ts->edx);
	mov(mv, x86::mem(ts->eax, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->eax);
	goto loc_560ED2;

loc_560ED0:
	xor_(&ts->esi, ts->esi);

loc_560ED2:
	cmp(mv, &ts->eflags, ts->edi, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->esp + 0x34, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_560F21;
    }
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_560EE0:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x8, 4));
	game::sub_610000(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43DCC0(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_560F21;
    }
	mov(&ts->eax, ts->edi);
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->edi, x86::mem(ts->edi, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x50, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	inc(&ts->ebx);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_560EE0;
    }

loc_560F21:
	test(&ts->eflags, ts->ebx, ts->ebx);
	setz(ts->eflags, &ts->cl);
	mov(mv, x86::mem(ts->esi + 0x22, 1), ts->cl);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x4C, 4));
	add(&ts->ecx, 0x4C);
	push(mv, &ts->esp, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_560F51;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x24, 4));
	mov(&ts->ecx, 0x294D2A3);
	cmp(&ts->eflags, ts->edx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_560F51;
    }
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->ecx);
	or_(mv, x86::mem(ts->eax + 0x1C, 4), 0x400000);

loc_560F51:
	cmp(mv, &ts->eflags, ts->edi, x86::mem(ts->esp + 0xC, 4));
	if (!ts->eflags.zero) {
        goto loc_560E30;
    }

loc_560F5B:
	push(mv, &ts->esp, 0x1D);
	mov(&ts->ecx, 0x8392C0);
	game::sub_6102F0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, x86::mem(ts->ebx + 0x20C, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_560FB5;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xEBB03E66);
	mov(&ts->ecx, ts->eax);
	game::sub_61B500(ts, mv);
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esp + 0x10, 4));
	if (!ts->eflags.zero) {
        goto loc_560FB5;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x20C, 4));
	mov(mv, &ts->esi, x86::mem(ts->ebx + 0x4, 4));
	game::sub_610000(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DB50(ts, mv);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->edi, ts->eax);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50B840(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_560FB5;
    }
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->edi);

loc_560FB5:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50B840(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_56105A;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_56105A;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x50, 4));
	lea(mv, &ts->edi, x86::mem(ts->ebx + 0x50, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x1);

loc_560FE8:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_560FF1;
    }
	lea(mv, &ts->esi, x86::mem(ts->eax - 0x4, 4));
	goto loc_560FF3;

loc_560FF1:
	xor_(&ts->esi, ts->esi);

loc_560FF3:
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_560FFC;
    }
	lea(mv, &ts->eax, x86::mem(ts->edi - 0x4, 4));
	goto loc_560FFE;

loc_560FFC:
	xor_(&ts->eax, ts->eax);

loc_560FFE:
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_561065;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x4, 4));
	or_(&ts->ecx, 0xFFFFFFFF);
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_56102C;
    }
	mov(mv, &ts->al, x86::mem(ts->edx, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56102C;
    }

loc_561012:
	imul(&ts->ecx, ts->ecx, 0x21);
	cmp(&ts->eflags, ts->al, 0x61);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_56101F;
    }
	cmp(&ts->eflags, ts->al, 0x7A);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_56101F;
    }
	add(&ts->al, 0xE0);

loc_56101F:
	movzx(&ts->eax, ts->al);
	add(&ts->ecx, ts->eax);
	mov(mv, &ts->al, x86::mem(ts->edx + 0x1, 1));
	inc(&ts->edx);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_561012;
    }

loc_56102C:
	push(mv, &ts->esp, ts->ecx);
	game::sub_50B840(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_56103E;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x10, 4));
	goto loc_561040;

loc_56103E:
	xor_(&ts->eax, ts->eax);

loc_561040:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xC, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_561053;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	inc(&ts->edx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edx);
	goto loc_560FE8;

loc_561053:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	goto loc_56105C;

loc_56105A:
	push(mv, &ts->esp, 0x0);

loc_56105C:
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x4C, 4));
	lea(mv, &ts->ecx, x86::mem(ts->ebx + 0x4C, 4));
	call(ts, mv, x86::mem(ts->edx + 0x20, 4));

loc_561065:
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x20C, 4));
	mov(mv, &ts->edi, x86::mem(ts->ebx + 0x58, 4));
	game::sub_610000(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DB50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0xC, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_5610EC;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4C, 4));
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8389D0);
	game::sub_413440(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x1D);
	mov(&ts->ecx, 0x8389D0);
	game::sub_631D20(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x1E);
	mov(&ts->ecx, 0x8389D0);
	game::sub_631D20(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x8389D0);
	game::sub_4D8EC0(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x8389D0);
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8637D0);
	game::sub_55B1A0(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->edi + 0x4C, 4));
	mov(mv, &ts->edi, x86::mem(ts->edi + 0x8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1D);
	game::sub_4C2100(ts, mv);
	add(&ts->esp, 0x10);

loc_5610EC:
	mov(mv, &ts->eax, x86::mem(ts->ebx, 4));
	mov(&ts->ecx, ts->ebx);
	call(ts, mv, x86::mem(ts->eax + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	pop(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_561131;
    }
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_561110:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(&ts->edx, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	game::j__free(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_561110;
    }

loc_561131:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x2C);
	retn(mv, &ts->esp);

loc_7784C0:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x14, 4));
	goto sub_4DEF30;

loc_7784C8:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79D7A0);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_560D30:
	mov(&ts->eax, 0x7E3A1C);
	goto ___CxxFrameHandler;
}

void sub_561140(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x214, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_561292;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x15C, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x8, 4));
	cmp(&ts->eflags, ts->ebx, 0xFFFFFFFF);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_561175;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x150, 4));
	game::sub_495900(ts, mv);
	goto loc_561185;

loc_561175:
	cmp(&ts->eflags, ts->ebx, 0x1);
	if (!ts->eflags.zero) {
        goto loc_561185;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x150, 4));
	game::sub_4958F0(ts, mv);

loc_561185:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x15C, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ebp - 0x4, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_561290;
    }
	cmp(&ts->eflags, ts->ebx, 0x1);
	if (!ts->eflags.zero) {
        goto loc_5611AF;
    }
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0x1B4, 4));
	mov(&ts->ecx, ts->ebx);
	game::sub_527610(ts, mv);
	mov(&ts->ecx, ts->ebx);
	game::sub_495850(ts, mv);
	goto loc_5611C8;

loc_5611AF:
	cmp(&ts->eflags, ts->ebx, 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_5611C8;
    }
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0x1B4, 4));
	mov(&ts->ecx, ts->ebx);
	game::sub_527660(ts, mv);
	mov(&ts->ecx, ts->ebx);
	game::sub_495810(ts, mv);

loc_5611C8:
	mov(mv, &ts->edi, x86::mem(ts->edi + 0x2C, 4));
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8389D0);
	game::sub_413440(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1D);
	mov(&ts->ecx, 0x8389D0);
	game::sub_631D20(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1E);
	mov(&ts->ecx, 0x8389D0);
	game::sub_631D20(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x8389D0);
	game::sub_4D8EC0(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x8389D0);
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8637D0);
	game::sub_55B1A0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x154, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x150, 4));
	if (ts->eflags.zero) {
        goto loc_561235;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_561237;

loc_561235:
	xor_(&ts->eax, ts->eax);

loc_561237:
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->ecx + 0xC, 4));
	if (!ts->eflags.zero) {
        goto loc_561254;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1FC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_561254:
	game::sub_4AEBC0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_561275;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x200, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_561275:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1FC, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x200, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0x8);

loc_561290:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);

loc_561292:
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_5612A0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x150, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_5385C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	xor_(&ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	add(&ts->eax, 0x4C);
	mov(mv, x86::mem(ts->esi + 0x210, 4), ts->ebx);
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_56135C;
    }

loc_5612D5:
	push(mv, &ts->esp, 0x30);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_56130E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x8, 4));
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x20, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x21, 1), 0x1);
	mov(mv, x86::mem(ts->eax + 0x22, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x23, 1), ts->bl);
	mov(mv, x86::mem(ts->eax, 4), 0x79AFDC);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), ts->ecx);
	goto loc_561310;

loc_56130E:
	xor_(&ts->eax, ts->eax);

loc_561310:
	push(mv, &ts->esp, 0xFFFFFFB4);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_52ED80(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_561336;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x24, 4));
	mov(&ts->ecx, 0x73C4EC2D);
	cmp(&ts->eflags, ts->edx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_561336;
    }
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->ecx);
	or_(mv, x86::mem(ts->eax + 0x1C, 4), 0x400000);

loc_561336:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x210, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	inc(&ts->eax);
	mov(mv, x86::mem(ts->esi + 0x210, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edx, 4));
	add(&ts->ecx, 0x4C);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_5612D5;
    }

loc_56135C:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20C, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5613D2;
    }
	mov(mv, &ts->eax, x86::mem(0x839BBC, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0xEBB03E66);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	game::sub_61B500(ts, mv);
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esp + 0xC, 4));
	if (!ts->eflags.zero) {
        goto loc_5613D2;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20C, 4));
	game::sub_610000(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DB50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0xC, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_5613D2;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x20C, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51F7A0(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_5613BF;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5613BD;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_5613BF;

loc_5613BD:
	xor_(&ts->eax, ts->eax);

loc_5613BF:
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_5386A0(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	game::sub_43BE80(ts, mv);
	goto loc_56142B;

loc_5613D2:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5613DE;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_5613E0;

loc_5613DE:
	xor_(&ts->eax, ts->eax);

loc_5613E0:
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->edi + 0xC, 4));
	if (ts->eflags.zero) {
        goto loc_56142B;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0x30, 1), ts->bl);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x10, 4));
	mov(mv, x86::mem(ts->edi + 0xC, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_5613F5;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x14, 4));
	goto loc_5613F8;

loc_5613F5:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x18, 4));

loc_5613F8:
	fchs(&ts->fp, x86::fp_index(0));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_56140C;
    }
	mov(mv, x86::mem(ts->ecx + 0x2C, 2), 0x2);

loc_56140C:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0x2C, 2), ts->bx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_52EEA0(ts, mv);

loc_56142B:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x15C, 4));
	mov(mv, x86::mem(ts->esi + 0x17F, 1), ts->bl);
	mov(mv, &ts->edi, x86::mem(ts->edx + 0x2C, 4));
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8389D0);
	game::sub_413440(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1D);
	mov(&ts->ecx, 0x8389D0);
	game::sub_631D20(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1E);
	mov(&ts->ecx, 0x8389D0);
	game::sub_631D20(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x8389D0);
	game::sub_4D8EC0(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x8389D0);
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8637D0);
	game::sub_55B1A0(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1D);
	game::sub_4C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	jmp(x86::mem(ts->eax + 0x10, 4));
}

void sub_5614B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	push(mv, &ts->esp, 0x4);
	game::sub_458520(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDF422345);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0x43A05263);
	mov(mv, x86::mem(ts->esi + 0x214, 1), 0x1);
	game::sub_4954E0(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	xor_(&ts->ebx, ts->ebx);
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_561508;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_561508;
    }
	push(mv, &ts->esp, 0x47FF4E7C);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_56151F;
    }

loc_561508:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_561569;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x47FF4E7C);
	game::sub_52C570(ts, mv);

loc_56151F:
	mov(&ts->ebp, ts->eax);
	cmp(&ts->eflags, ts->ebp, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_561569;
    }
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x4C, 4));
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_561569;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_561530:
	push(mv, &ts->esp, 0x79D788);
	game::sub_505450(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x30, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_56154D;
    }
	mov(mv, &ts->edi, x86::mem(ts->edi + 0x4, 4));
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_561530;
    }
	goto loc_561569;

loc_56154D:
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_561569;
    }
	cmp(mv, &ts->eflags, ts->edi, x86::mem(ts->ebp + 0x54, 4));
	if (ts->eflags.zero) {
        goto loc_561566;
    }
	mov(&ts->ecx, ts->ebp);
	mov(mv, x86::mem(ts->ebp + 0x54, 4), ts->edi);
	game::sub_517720(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x54, 4));
	mov(mv, x86::mem(ts->ecx + 0x10, 4), ts->ebx);

loc_561566:
	mov(mv, x86::mem(ts->edi + 0x10, 4), ts->ebx);

loc_561569:
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x7B, 1), ts->bl);
	game::sub_5612A0(ts, mv);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x150, 4));
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->edi + 0x2F, 1), 0x1);
	game::sub_52EB90(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xA936C3A2);
	push(mv, &ts->esp, ts->edx);
	game::sub_495520(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x89782734);
	push(mv, &ts->esp, ts->eax);
	game::sub_495520(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	add(&ts->esp, 0x10);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5615B1;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_5615B3;

loc_5615B1:
	xor_(&ts->eax, ts->eax);

loc_5615B3:
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->edi + 0xC, 4));
	if (!ts->eflags.zero) {
        goto loc_5615C9;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1FC, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);
	goto loc_561608;

loc_5615C9:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x8, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5615D5;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_5615D7;

loc_5615D5:
	xor_(&ts->eax, ts->eax);

loc_5615D7:
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->edi + 0xC, 4));
	if (!ts->eflags.zero) {
        goto loc_5615ED;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x200, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);
	goto loc_561608;

loc_5615ED:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1FC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x200, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0x8);

loc_561608:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_56162C;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_56162C;
    }
	push(mv, &ts->esp, 0x55C171E2);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_561643;
    }

loc_56162C:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_56168C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x55C171E2);
	game::sub_52C570(ts, mv);

loc_561643:
	mov(&ts->edi, ts->eax);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_56168C;
    }
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x4C, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_56168C;
    }

loc_561650:
	push(mv, &ts->esp, 0x78FC44);
	game::sub_505450(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_561670;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_561650;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_561670:
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_56168C;
    }
	cmp(mv, &ts->eflags, ts->esi, x86::mem(ts->edi + 0x54, 4));
	if (ts->eflags.zero) {
        goto loc_561689;
    }
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->edi + 0x54, 4), ts->esi);
	game::sub_517720(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x54, 4));
	mov(mv, x86::mem(ts->edx + 0x10, 4), ts->ebx);

loc_561689:
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ebx);

loc_56168C:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_5616A0(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_561716;
    }
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, 0xF5AC2B2A);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1FAB5998);
	push(mv, &ts->esp, 0x1FAB5998);
	push(mv, &ts->esp, 0xD05FC3A3);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x78FA24);
	push(mv, &ts->esp, ts->esi);
	game::sub_558790(ts, mv);
	add(&ts->esp, 0x24);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x8637B0);
	mov(mv, x86::mem(0x838970, 4), 0x1FAB5998);
	game::sub_51BB70(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero) {
        goto locret_561716;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto locret_561716;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_561716;
    }
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x96DDA9E6);
	mov(&ts->ecx, ts->eax);
	game::sub_55B5C0(ts, mv);

locret_561716:
	retn(mv, &ts->esp, 0x14);
}

void sub_561720(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x152, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x8, 4));
	if (ts->eflags.zero) {
        goto loc_56174C;
    }
	cmp(&ts->eflags, ts->edi, 0xC407210);
	if (ts->eflags.zero) {
        goto loc_56189B;
    }
	cmp(&ts->eflags, ts->edi, 0x911AB364);
	if (ts->eflags.zero) {
        goto loc_56189B;
    }

loc_56174C:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_543D40(ts, mv);
	cmp(&ts->eflags, ts->edi, 0x911AB364);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_5617FC;
    }
	if (ts->eflags.zero) {
        goto loc_5617AD;
    }
	cmp(&ts->eflags, ts->edi, 0x1FAB5998);
	if (ts->eflags.zero) {
        goto loc_561799;
    }
	cmp(&ts->eflags, ts->edi, 0x34DC1BEC);
	if (!ts->eflags.zero) {
        goto loc_56189B;
    }
	mov(&ts->ecx, 0x85B940);
	mov(mv, x86::mem(ts->esi + 0x150, 1), 0x1);
	game::sub_5419C0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_561799:
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x152, 1), 0x0);
	game::sub_538CA0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_5617AD:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x20D0D219);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1FAB5998);
	push(mv, &ts->esp, 0x1FAB5998);
	push(mv, &ts->esp, 0x34DC1BEC);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x78FA24);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x152, 1), 0x1);
	game::sub_558790(ts, mv);
	add(&ts->esp, 0x24);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(0x838970, 4), 0x1FAB5998);
	game::sub_538C00(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_5617FC:
	cmp(&ts->eflags, ts->edi, 0xC98356BA);
	if (ts->eflags.zero) {
        goto loc_561882;
    }
	cmp(&ts->eflags, ts->edi, 0xD05FC3A3);
	if (!ts->eflags.zero) {
        goto loc_56189B;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x151, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_561837;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x48, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x838980);
	game::sub_521430(ts, mv);
	mov(&ts->ecx, 0x8635BC);
	game::sub_525610(ts, mv);
	goto loc_56186B;

loc_561837:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4C, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x48, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x838980);
	game::sub_55C230(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4C, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x48, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x85AD40);
	game::sub_5289F0(ts, mv);
	mov(&ts->ecx, 0x8635BC);
	game::sub_5255D0(ts, mv);

loc_56186B:
	mov(&ts->ecx, 0x85B940);
	game::sub_5419C0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x150, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_561882:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x150, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56189B;
    }
	mov(&ts->ecx, 0x838980);
	game::sub_54FD40(ts, mv);
	game::sub_5404A0(ts, mv);

loc_56189B:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);
}

void sub_5618B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x9986A6E3);
	push(mv, &ts->esp, 0x42ADB44C);
	push(mv, &ts->esp, ts->eax);
	game::sub_495460(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x50, 4));
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x50, 4));
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_561A34;
    }
	mov(mv, &ts->al, x86::mem(ts->edi + 0x151, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56190C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x58, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x2C, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x134, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x58, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x48, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x838980);
	game::sub_521480(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_56190C:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x58, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x4C, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_561A33;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x48, 4), 0x1D);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_5619CA;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xEBB03E66);
	game::sub_61B500(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x838980);
	game::sub_50E960(ts, mv);
	push(mv, &ts->esp, 0x4732DA07);
	mov(&ts->ecx, ts->esi);
	mov(&ts->ebx, ts->eax);
	game::sub_61B4E0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(&ts->ecx, ts->esi);
	push(mv, &ts->esp, 0x0);
	if (ts->eflags.zero) {
        goto loc_56199D;
    }
	push(mv, &ts->esp, 0x4732DA07);
	game::sub_61B500(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xEB0101E2);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	game::sub_61B500(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x134, 4));
	movsx(&ts->eax, ts->al);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x79D7CC);
	push(mv, &ts->esp, ts->edx);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0x14);
	goto loc_561A1D;

loc_56199D:
	push(mv, &ts->esp, 0xEB0101E2);
	game::sub_61B500(ts, mv);
	movsx(&ts->eax, ts->al);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_610000(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x134, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x79D7CC);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0x14);
	goto loc_561A1D;

loc_5619CA:
	push(mv, &ts->esp, 0x4732DA07);
	game::sub_61B4E0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(&ts->ecx, ts->esi);
	if (ts->eflags.zero) {
        goto loc_561A03;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x4732DA07);
	game::sub_61B500(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_4FFA80(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x134, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, ts->edx);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0x10);
	goto loc_561A1D;

loc_561A03:
	game::sub_610000(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x134, 4));
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, ts->eax);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0xC);

loc_561A1D:
	mov(mv, &ts->edi, x86::mem(ts->edi + 0x58, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4C, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x48, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x838980);
	game::sub_55C170(ts, mv);
	pop(mv, &ts->esp, ts->ebx);

loc_561A33:
	pop(mv, &ts->esp, ts->esi);

loc_561A34:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_561A40(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	sub(&ts->eax, 0x0);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_561AB6;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_561AA2;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto loc_561ABD;
    }
	mov(mv, &ts->esi, x86::mem(ts->ebx + 0x48, 4));
	lea(mv, &ts->edi, x86::mem(ts->ebx + 0x48, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_561ABD;
    }
	mov(&ts->edi, ts->edi);

loc_561A60:
	cmp(mv, &ts->eflags, x86::mem(ts->edi, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_561ABD;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	cmp(&ts->eflags, ts->eax, 0x3F);
	if (ts->eflags.zero) {
        goto loc_561A7A;
    }
	cmp(&ts->eflags, ts->eax, 0x43);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_561A76;
    }
	cmp(&ts->eflags, ts->eax, 0x4A);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_561A7A;
    }

loc_561A76:
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	goto loc_561A91;

loc_561A7A:
	mov(&ts->eax, ts->esi);
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_561A91:
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_561A60;
    }
	mov(&ts->ecx, ts->ebx);
	game::sub_55C460(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

loc_561AA2:
	mov(&ts->ecx, ts->ebx);
	game::sub_530240(ts, mv);
	mov(&ts->ecx, ts->ebx);
	game::sub_55C460(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

loc_561AB6:
	mov(&ts->ecx, ts->ebx);
	game::sub_547540(ts, mv);

loc_561ABD:
	mov(&ts->ecx, ts->ebx);
	game::sub_55C460(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_561AD0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x778500);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x18);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0x40);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_561CF1;
    }
	cmp(&ts->eflags, ts->eax, 0x43);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_561CF1;
    }
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0xC, 4));
	cmp(&ts->eflags, ts->edi, 0x40);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_561CF1;
    }
	cmp(&ts->eflags, ts->edi, 0x43);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_561CF1;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edx);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x34, 4), 0x0);
	game::sub_5216C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_561CBA;
    }
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x34, 1), 0x1);
	game::sub_5216C0(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x10, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	game::Iostream_init__Iostream_init_void_(ts, mv);
	mov(&ts->ebx, ts->eax);
	mov(&ts->eax, ts->esi);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_561BC0;
    }
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_561B90:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	cmp(&ts->eflags, ts->eax, 0x40);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_561BA2;
    }
	cmp(&ts->eflags, ts->eax, 0x43);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_561BA2;
    }
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->edi);
	goto loc_561BBA;

loc_561BA2:
	cmp(&ts->eflags, ts->eax, 0x4D);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_561BBA;
    }
	cmp(&ts->eflags, ts->eax, 0x5C);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_561BBA;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_50EF50(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->eax);

loc_561BBA:
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_561B90;
    }

loc_561BC0:
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x18, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	mov(&ts->edi, ts->esi);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	mov(&ts->ebx, ts->eax);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_561C0F;
    }

loc_561BD5:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0xC, 4));
	cmp(&ts->eflags, ts->eax, 0x40);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_561BEA;
    }
	cmp(&ts->eflags, ts->eax, 0x43);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_561BEA;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, x86::mem(ts->edi + 0xC, 4), ts->edx);
	goto loc_561C05;

loc_561BEA:
	cmp(&ts->eflags, ts->eax, 0x4D);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_561C09;
    }
	cmp(&ts->eflags, ts->eax, 0x5C);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_561C09;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50EF50(ts, mv);
	mov(mv, x86::mem(ts->edi + 0xC, 4), ts->eax);

loc_561C05:
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x18, 4));

loc_561C09:
	mov(mv, &ts->edi, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_561BD5;
    }

loc_561C0F:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0xC, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (ts->eflags.zero) {
        goto loc_561C4B;
    }
	lea(mv, &ts->ecx, x86::mem(ts->ebx + 0x48, 4));

loc_561C22:
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edi, 4), ts->edx);
	lea(mv, &ts->esi, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx + 0x4, 4), ts->edi);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi, 4), ts->edx);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_561C22;
    }
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x18, 4));

loc_561C4B:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_561C7D;
    }
	lea(mv, &ts->ecx, x86::mem(ts->ebx + 0x48, 4));

loc_561C56:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	mov(&ts->eax, ts->esi);
	add(&ts->esi, 0x4);
	mov(mv, x86::mem(ts->edi, 4), ts->edx);
	mov(mv, x86::mem(ts->edx + 0x4, 4), ts->edi);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi, 4), ts->edx);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x18, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	cmp(&ts->eflags, ts->esi, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_561C56;
    }

loc_561C7D:
	mov(&ts->ecx, ts->ebx);
	game::sub_55C460(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x2C, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_561CB6;
    }

loc_561C95:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(&ts->edx, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	game::j__free(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_561C95;
    }

loc_561CB6:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));

loc_561CBA:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_561CF1;
    }
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_561CD0:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(&ts->edx, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	game::j__free(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_561CD0;
    }

loc_561CF1:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x8);

loc_7784F0:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x20, 4));
	goto sub_4DEF30;

loc_7784F8:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x18, 4));
	goto sub_4DEF30;

SEH_561AD0:
	mov(&ts->eax, 0x7E3A6C);
	goto ___CxxFrameHandler;
}

void sub_561D10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x8, 4));
	cmp(&ts->eflags, ts->edi, 0xC519BFC3);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_561D50;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x50, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_561D2F;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_561D31;

loc_561D2F:
	xor_(&ts->eax, ts->eax);

loc_561D31:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x58, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_561D49;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_561D42;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_561D44;

loc_561D42:
	xor_(&ts->eax, ts->eax);

loc_561D44:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x58, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_561D50;
    }

loc_561D49:
	mov(mv, x86::mem(0x83855E, 1), 0x1);

loc_561D50:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x24C, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_561D6E;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_543D40(ts, mv);

loc_561D6E:
	cmp(&ts->eflags, ts->edi, 0x911AB364);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x58, 4));
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_561F66;
    }
	if (ts->eflags.zero) {
        goto loc_561F29;
    }
	cmp(&ts->eflags, ts->edi, 0x35F8620B);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_561E87;
    }
	if (ts->eflags.zero) {
        goto loc_561E5F;
    }
	cmp(&ts->eflags, ts->edi, 0x9F00F07);
	if (ts->eflags.zero) {
        goto loc_561E06;
    }
	cmp(&ts->eflags, ts->edi, 0xC407210);
	if (ts->eflags.zero) {
        goto loc_561DED;
    }
	cmp(&ts->eflags, ts->edi, 0x34DC1BEC);
	if (!ts->eflags.zero) {
        goto loc_5620BA;
    }

loc_561DB1:
	mov(mv, &ts->al, x86::mem(0x83855E, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_561FA2;
    }
	mov(mv, &ts->al, x86::mem(ts->ebx + 0x22, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_561FA2;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x790CEC);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	game::sub_53B6C0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_561DED:
	push(mv, &ts->esp, 0x799CD8);
	push(mv, &ts->esp, 0xC407210);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_561E06:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x48, 4));
	mov(&ts->edi, 0x1);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_561E17;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x4C, 4));
	goto loc_561E19;

loc_561E17:
	xor_(&ts->eax, ts->eax);

loc_561E19:
	mov(mv, x86::mem(0x839BB4, 4), ts->eax);
	game::sub_53B6C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x48, 4), ts->edi);
	if (!ts->eflags.zero) {
        goto loc_561E30;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4C, 4));
	goto loc_561E32;

loc_561E30:
	xor_(&ts->eax, ts->eax);

loc_561E32:
	mov(&ts->ecx, ts->eax);
	game::sub_500160(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_561E50;
    }

loc_561E3D:
	game::sub_54F980(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_55BD60(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_561E50:
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_5501E0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_561E5F:
	game::sub_53B6C0(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x162, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, x86::mem(0x83855B, 1), 0x0);
	if (!ts->eflags.zero) {
        goto loc_5620BA;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_521DE0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_561E87:
	cmp(&ts->eflags, ts->edi, 0x422F7587);
	if (ts->eflags.zero) {
        goto loc_561E3D;
    }
	cmp(&ts->eflags, ts->edi, 0x51123592);
	if (ts->eflags.zero) {
        goto loc_561F14;
    }
	cmp(&ts->eflags, ts->edi, 0x8577E0A0);
	if (!ts->eflags.zero) {
        goto loc_5620BA;
    }
	push(mv, &ts->esp, 0x78F9D4);
	mov(mv, x86::mem(0x83855D, 1), 0x0);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537CC0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_561EE3;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F9D4);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_561EE3:
	mov(mv, &ts->al, x86::mem(ts->ebx + 0x22, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_5620BA;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79D7E0);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x163, 1), 0x1);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_561F14:
	game::sub_53B6C0(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_5501E0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_561F29:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537D40(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_5620BA;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C60(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_561F66:
	cmp(&ts->eflags, ts->edi, 0xD90A3ED0);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_561FDB;
    }
	if (ts->eflags.zero) {
        goto loc_561FCD;
    }
	cmp(&ts->eflags, ts->edi, 0xB4623F67);
	if (ts->eflags.zero) {
        goto loc_561DB1;
    }
	cmp(&ts->eflags, ts->edi, 0xB4EDEB6D);
	if (ts->eflags.zero) {
        goto loc_561DB1;
    }
	cmp(&ts->eflags, ts->edi, 0xC516CD37);
	if (!ts->eflags.zero) {
        goto loc_5620BA;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_54FF90(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_561FA2:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79D7D8);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	mov(mv, x86::mem(0x83855E, 1), 0x0);
	game::sub_53B6C0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_561FCD:
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x163, 1), 0x0);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_561FDB:
	cmp(&ts->eflags, ts->edi, 0xE1FDE1D1);
	if (ts->eflags.zero) {
        goto loc_56208D;
    }
	cmp(&ts->eflags, ts->edi, 0xE75749D4);
	if (ts->eflags.zero) {
        goto loc_56203C;
    }
	cmp(&ts->eflags, ts->edi, 0xFA523391);
	if (!ts->eflags.zero) {
        goto loc_5620BA;
    }
	mov(mv, &ts->al, x86::mem(0x83855D, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5620BA;
    }
	push(mv, &ts->esp, 0x799CD8);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_5620BA;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x799CD8);
	game::sub_555F10(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56203C:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79D7D8);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	game::sub_53B6C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x838994, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x838980);
	game::sub_521A20(ts, mv);
	mov(&ts->ecx, 0x838980);
	mov(mv, x86::mem(0x83855E, 1), 0x0);
	game::sub_530140(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_54FF90(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56208D:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x13C, 4), 0x911AB364);
	if (!ts->eflags.zero) {
        goto loc_5620BA;
    }
	mov(mv, x86::mem(0x83855B, 1), 0x1);
	mov(mv, x86::mem(0x83855C, 1), 0x1);
	mov(mv, x86::mem(0x83855D, 1), 0x0);
	game::sub_54F980(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_55BDF0(ts, mv);

loc_5620BA:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);
}

void sub_5620D0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC0, 4));
	cmp(&ts->eflags, ts->eax, 0xFFFFFFF6);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebx, 0x1);
	if (ts->eflags.zero) {
        goto loc_5620EC;
    }
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_562145;
    }

loc_5620EC:
	mov(mv, &ts->al, x86::mem(0x83855D, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_562145;
    }
	mov(mv, &ts->eax, x86::mem(0x7FA1C8, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x8637B0);
	game::sub_51BB70(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_562128;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_562128;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_562128;
    }
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x8577E0A0);
	mov(&ts->ecx, ts->eax);
	game::sub_55B5C0(ts, mv);

loc_562128:
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_56213E;
    }
	mov(mv, &ts->edx, x86::mem(0x7FA1CC, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_5376F0(ts, mv);

loc_56213E:
	mov(mv, x86::mem(0x83855D, 1), 0x0);

loc_562145:
	mov(mv, &ts->eax, x86::mem(0x838994, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_50F1E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x42ADB44C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_495460(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4C, 4));
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_562173;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x2C, 4));
	goto loc_562175;

loc_562173:
	xor_(&ts->eax, ts->eax);

loc_562175:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x666176B);
	push(mv, &ts->esp, ts->edx);
	game::sub_495460(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x48, 4));
	mov(mv, x86::mem(ts->esi + 0x158, 4), ts->ecx);
	mov(mv, &ts->dl, x86::mem(ts->eax + 0x22, 1));
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.zero) {
        goto loc_5621C5;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x78FC44);
	push(mv, &ts->esp, 0x3D3F9F04);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x160, 1), ts->bl);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	mov(&ts->ecx, ts->esi);
	game::sub_54FF90(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);

loc_5621C5:
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_56228B;
    }
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0xA0F26827);
	mov(mv, &ts->al, x86::mem(0x83855D, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_562258;
    }
	push(mv, &ts->esp, 0x799CD8);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_562206;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x799CD8);
	game::sub_555F10(ts, mv);
	add(&ts->esp, 0x10);

loc_562206:
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_562227;
    }
	cmp(mv, &ts->eflags, x86::mem(0x83898C, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_562227;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x79D7E0);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->edx);
	goto loc_562236;

loc_562227:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x79D7F0);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);

loc_562236:
	game::sub_537C00(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x160, 1), ts->bl);
	add(&ts->esp, 0x10);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(0x83855D, 1), ts->bl);
	game::sub_54FF90(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);

loc_562258:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x161, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_562518;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x78FC44);
	push(mv, &ts->esp, 0x3D3F9F04);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	mov(&ts->ecx, ts->esi);
	game::sub_54FF90(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);

loc_56228B:
	cmp(&ts->eflags, ts->ecx, 0x2);
	if (!ts->eflags.zero) {
        goto loc_562321;
    }
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8389D0);
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0x8109153D);
	game::sub_413440(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x8392C0);
	game::sub_4D8EC0(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x838994, 4));
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x8389D0);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x838980);
	game::sub_521A20(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x160, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_56230D;
    }
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	game::sub_43BE80(ts, mv);
	dec(&ts->eax);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_512E20(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x22, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_56230D;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x79D7F0);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);

loc_56230D:
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x160, 1), ts->bl);
	game::sub_54FF90(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);

loc_562321:
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_562518;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x160, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0x8109153D);
	if (ts->eflags.zero) {
        goto loc_562366;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x79D7E0);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x160, 1), 0x0);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x3D3F9F04);
	push(mv, &ts->esp, ts->edx);
	game::sub_495520(ts, mv);
	add(&ts->esp, 0x18);

loc_562366:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x48, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_562373;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4C, 4));
	goto loc_562375;

loc_562373:
	xor_(&ts->eax, ts->eax);

loc_562375:
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_547B60(ts, mv);
	mov(&ts->ecx, 0x838980);
	game::sub_530140(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x48, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_5623A6;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5623A6;
    }
	push(mv, &ts->esp, 0x8389D0);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x838980);
	game::sub_521340(ts, mv);

loc_5623A6:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x48, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_5623B5;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4C, 4));
	goto loc_5623B7;

loc_5623B5:
	xor_(&ts->edx, ts->edx);

loc_5623B7:
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_5623C0;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4C, 4));
	goto loc_5623C2;

loc_5623C0:
	xor_(&ts->eax, ts->eax);

loc_5623C2:
	mov(mv, &ts->edx, x86::mem(ts->edx + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x85AD40);
	game::sub_5415E0(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_5624DD;
    }
	cmp(mv, &ts->eflags, x86::mem(0x83898C, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5624DD;
    }
	mov(&ts->ecx, 0x85AD40);
	game::sub_458340(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_56242C;
    }
	mov(&ts->ecx, 0x85AD40);
	game::sub_458340(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x38, 4), 0x7FC8D0D0);
	if (!ts->eflags.zero) {
        goto loc_56242C;
    }
	push(mv, &ts->esp, 0x66559034);
	game::sub_4FFA80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x6E0C9A8);
	push(mv, &ts->esp, ts->ecx);
	goto loc_562440;

loc_56242C:
	push(mv, &ts->esp, 0x6DA17A25);
	game::sub_4FFA80(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x6E0C9A8);
	push(mv, &ts->esp, ts->edx);

loc_562440:
	game::sub_537B80(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_562461;
    }
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, 0xBE8693E1);
	push(mv, &ts->esp, ts->eax);
	goto loc_562475;

loc_562461:
	push(mv, &ts->esp, 0xA4C02484);
	game::sub_4FFA80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xBE8693E1);
	push(mv, &ts->esp, ts->ecx);

loc_562475:
	game::sub_537B80(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_562496;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, 0x380B632);
	push(mv, &ts->esp, ts->edx);
	goto loc_5624AA;

loc_562496:
	push(mv, &ts->esp, 0xA4C02484);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x380B632);
	push(mv, &ts->esp, ts->eax);

loc_5624AA:
	game::sub_537B80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x861E74, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, 0xEB3A688A);
	push(mv, &ts->esp, ts->edx);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x10);
	mov(&ts->ecx, ts->esi);
	game::sub_54FF90(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);

loc_5624DD:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x6E0C9A8);
	push(mv, &ts->esp, ts->eax);
	game::sub_4954E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xBE8693E1);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4954E0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x380B632);
	push(mv, &ts->esp, ts->edx);
	game::sub_4954E0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x89CA4FDB);
	push(mv, &ts->esp, ts->eax);
	game::sub_4954E0(ts, mv);
	add(&ts->esp, 0x20);

loc_562518:
	mov(&ts->ecx, ts->esi);
	game::sub_54FF90(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_562530(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8389D0);
	game::sub_413440(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x8392C0);
	game::sub_4D8EC0(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->edi + 0x1E5, 1));
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_562588;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x54, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_562588;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_562588;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_562576;
    }
	mov(&ts->eax, ts->ecx);
	goto loc_562578;

loc_562576:
	xor_(&ts->eax, ts->eax);

loc_562578:
	push(mv, &ts->esp, 0x8389D0);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x838980);
	game::sub_5213D0(ts, mv);

loc_562588:
	mov(mv, &ts->eax, x86::mem(0x7FA1C8, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x8637B0);
	game::sub_51BB70(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5625BB;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_5625BB;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5625BB;
    }
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xC516CD37);
	mov(&ts->ecx, ts->eax);
	game::sub_55B5C0(ts, mv);

loc_5625BB:
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->bl, x86::mem(0x83AA1A, 1));
	mov(&ts->cl, ts->bl);
	dec(&ts->cl);
	neg(&ts->cl);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x0);
	sbb(&ts->ecx, ts->ecx);
	and_(&ts->ecx, 0x513709E0);
	add(&ts->ecx, 0x5B81D613);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ecx);
	mov(&ts->ecx, 0x8392D0);
	game::sub_5B5810(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x17C, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x17C, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x170, 4));
	lea(mv, &ts->esi, x86::mem(ts->edi + 0x14C, 4));
	mov(mv, x86::mem(ts->esi + 0x2C, 4), ts->edx);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_562611;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	mov(mv, x86::mem(ts->esi + 0x30, 4), ts->eax);

loc_562611:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x30, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x28, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_562624;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x28, 4));
	mov(mv, x86::mem(ts->esi + 0x30, 4), ts->ecx);

loc_562624:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, 0x8389E0);
	game::sub_5B5810(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x194, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, 0x8392D0);
	game::sub_5B5810(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, 0x8389E0);
	game::sub_5B5810(ts, mv);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	cmp(&ts->eflags, ts->bl, 0x1);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784550, 4));
	if (ts->eflags.zero) {
        goto loc_562674;
    }
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79BEFC, 4));

loc_562674:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	game::sub_4FF9D0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_56268B;
    }
	mov(&ts->edx, 0xC01A6F63);
	game::sub_4FF9D0(ts, mv);

loc_56268B:
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	sub(&ts->esp, 0x8);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 8));
	push(mv, &ts->esp, 0x79D800);
	push(mv, &ts->esp, 0x18531358);
	push(mv, &ts->esp, ts->eax);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x18);
	mov(&ts->cl, ts->bl);
	dec(&ts->cl);
	neg(&ts->cl);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x0);
	sbb(&ts->ecx, ts->ecx);
	and_(&ts->ecx, 0x703A8F58);
	add(&ts->ecx, 0x5B81D5BA);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ecx);
	mov(&ts->ecx, 0x8392D0);
	game::sub_5B56E0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x1C8, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x1C8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x1BC, 4));
	lea(mv, &ts->esi, x86::mem(ts->edi + 0x198, 4));
	mov(mv, x86::mem(ts->esi + 0x2C, 4), ts->edx);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_5626F6;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	mov(mv, x86::mem(ts->esi + 0x30, 4), ts->eax);

loc_5626F6:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x30, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x28, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_562709;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x28, 4));
	mov(mv, x86::mem(ts->esi + 0x30, 4), ts->ecx);

loc_562709:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, 0x8389E0);
	game::sub_5B56E0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x1E0, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, 0x8392D0);
	game::sub_5B56E0(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, 0x8389E0);
	game::sub_5B56E0(ts, mv);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	pop(mv, &ts->esp, ts->esi);
	cmp(&ts->eflags, ts->bl, 0x1);
	pop(mv, &ts->esp, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_562755;
    }
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79BEF0, 8));

loc_562755:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	game::sub_4FF9D0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_56276C;
    }
	mov(&ts->edx, 0xC01A6F63);
	game::sub_4FF9D0(ts, mv);

loc_56276C:
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	sub(&ts->esp, 0x8);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 8));
	push(mv, &ts->esp, 0x79D800);
	push(mv, &ts->esp, 0x6BB32446);
	push(mv, &ts->esp, ts->eax);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->edi);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_562790(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(&ts->esi, 0x1);
	push(mv, &ts->esp, ts->ebx);

loc_56279D:
	mov(mv, &ts->ecx, x86::mem(0x863444, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->esi);
	mov(&ts->eax, 0x4);
	if (ts->eflags.zero) {
        goto loc_5627C8;
    }
	mov(mv, &ts->ecx, x86::mem(0x86344C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_5627C8;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x38, 4), 0x7FC8D0D0);
	if (!ts->eflags.zero) {
        goto loc_5627C8;
    }
	mov(&ts->eax, 0x3);

loc_5627C8:
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_5628C2;
    }
	mov(mv, &ts->edx, x86::mem(0x8383FC, 4));
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_562800;
    }
	mov(mv, &ts->ecx, x86::mem(0x8383F8, 4));

loc_5627E2:
	mov(mv, &ts->ebx, x86::mem(ts->ecx, 4));
	cmp(mv, &ts->eflags, ts->ebx, x86::mem(0x838994, 4));
	if (!ts->eflags.zero) {
        goto loc_5627F5;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x4, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_562886;
    }

loc_5627F5:
	inc(&ts->eax);
	add(&ts->ecx, 0x17C);
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5627E2;
    }

loc_562800:
	xor_(&ts->eax, ts->eax);

loc_562802:
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	xor_(&ts->esi, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	lea(mv, &ts->ebx, x86::mem(ts->eax + 0xC, 4));

loc_562812:
	cmp(mv, &ts->eflags, ts->esi, x86::mem(ts->esp + 0x14, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_5628B8;
    }
	mov(mv, &ts->edx, x86::mem(0x8389B0, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_50F0D0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_52A090(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5628A7;
    }
	push(mv, &ts->esp, 0x50);
	game::j__malloc(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_562899;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x11C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->edi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->edi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_51E1B0(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x79B620);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), 0xC3878000);
	mov(mv, x86::mem(ts->esi + 0x20, 4), 0xC1200000);
	goto loc_56289B;

loc_562886:
	mov(mv, &ts->ecx, x86::mem(0x8383F8, 4));
	imul(&ts->eax, ts->eax, 0x17C);
	add(&ts->eax, ts->ecx);
	goto loc_562802;

loc_562899:
	xor_(&ts->esi, ts->esi);

loc_56289B:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	game::sub_54F820(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xC, 4));

loc_5628A7:
	inc(&ts->esi);
	add(&ts->ebx, 0x5C);
	cmp(&ts->eflags, ts->esi, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_562812;
    }

loc_5628B8:
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x10, 4));
	inc(&ts->esi);
	goto loc_56279D;

loc_5628C2:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4C, 4));
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x4C, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_562929;
    }
	push(mv, &ts->esp, 0x4C);
	mov(mv, x86::mem(ts->edi + 0x1E5, 1), 0x1);
	game::j__malloc(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_56291F;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->edi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x10C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_51E1B0(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x79B660);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), 0xC3878000);
	mov(mv, x86::mem(ts->esi + 0x20, 4), 0xC1200000);
	goto loc_562921;

loc_56291F:
	xor_(&ts->esi, ts->esi);

loc_562921:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	game::sub_54F820(ts, mv);

loc_562929:
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->edi);
	game::sub_539650(ts, mv);
	mov(&ts->ecx, ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0xC);
	goto sub_562530;
}

void sub_562940(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x4, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_562969;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_562969;
    }
	push(mv, &ts->esp, 0x47FF4E7C);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_562980;
    }

loc_562969:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5629C9;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x47FF4E7C);
	game::sub_52C570(ts, mv);

loc_562980:
	mov(&ts->edi, ts->eax);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5629C9;
    }
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x4C, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5629C9;
    }
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_562990:
	push(mv, &ts->esp, 0x78FEF4);
	game::sub_505450(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5629AD;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_562990;
    }
	goto loc_5629C9;

loc_5629AD:
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5629C9;
    }
	cmp(mv, &ts->eflags, ts->esi, x86::mem(ts->edi + 0x54, 4));
	if (ts->eflags.zero) {
        goto loc_5629C6;
    }
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->edi + 0x54, 4), ts->esi);
	game::sub_517720(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x54, 4));
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ebx);

loc_5629C6:
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ebx);

loc_5629C9:
	mov(mv, &ts->ecx, x86::mem(0x7FA1C4, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x8637B0);
	game::sub_51BB70(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5629FB;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5629FB;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x14, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5629FB;
    }
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x96DDA9E6);
	mov(&ts->ecx, ts->eax);
	game::sub_55B5C0(ts, mv);

loc_5629FB:
	mov(mv, &ts->edx, x86::mem(0x7FA1C4, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_562A1A;
    }
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->ebx);

loc_562A1A:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_562A20(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_562A46;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_562A46;
    }
	push(mv, &ts->esp, 0x47FF4E7C);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_562A5D;
    }

loc_562A46:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_562AB1;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x47FF4E7C);
	game::sub_52C570(ts, mv);

loc_562A5D:
	mov(&ts->edi, ts->eax);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_562AB1;
    }
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x4C, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_562AB1;
    }
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_562A70:
	push(mv, &ts->esp, 0x79031C);
	game::sub_505450(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_562A8D;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_562A70;
    }
	goto loc_562AB1;

loc_562A8D:
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_562AB1;
    }
	cmp(mv, &ts->eflags, ts->esi, x86::mem(ts->edi + 0x54, 4));
	if (ts->eflags.zero) {
        goto loc_562AAA;
    }
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->edi + 0x54, 4), ts->esi);
	game::sub_517720(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x54, 4));
	mov(mv, x86::mem(ts->eax + 0x10, 4), 0x0);

loc_562AAA:
	mov(mv, x86::mem(ts->esi + 0x10, 4), 0x0);

loc_562AB1:
	mov(mv, &ts->ecx, x86::mem(0x7FA1C4, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x8637B0);
	game::sub_51BB70(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero) {
        goto loc_562AE7;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_562AE7;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_562AE7;
    }
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x251BF83E);
	mov(&ts->ecx, ts->eax);
	game::sub_55B5C0(ts, mv);

loc_562AE7:
	mov(mv, &ts->edx, x86::mem(0x7FA1C4, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_562B0B;
    }
	mov(&ts->ecx, 0xFF);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->ecx);

locret_562B0B:
	retn(mv, &ts->esp);
}

void sub_562B10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDF422345);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0x71345941);
	game::sub_495520(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x15C, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x159, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_562B74;
    }
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x8637B0);
	game::sub_51BB70(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_562B6A;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_562B6A;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_562B6A;
    }
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x81F0B71A);
	mov(&ts->ecx, ts->eax);
	game::sub_55B5C0(ts, mv);

loc_562B6A:
	mov(mv, x86::mem(ts->esi + 0x15C, 4), 0x0);

loc_562B74:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_50F290(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_562B90(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	cmp(mv, &ts->eflags, x86::mem(ts->ebp + 0xC, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto loc_562C49;
    }
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x8637B0);
	game::sub_51BB70(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_562BD2;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_562BD2;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_562BD2;
    }
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x96DDA9E6);
	mov(&ts->ecx, ts->eax);
	game::sub_55B5C0(ts, mv);

loc_562BD2:
	cmp(mv, &ts->eflags, x86::mem(0x8389C8, 4), 0x8389C8);
	if (ts->eflags.zero) {
        goto loc_562C2B;
    }
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_562C24;
    }
	push(mv, &ts->esp, 0xA0C16CAB);

loc_562BEC:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x34DC1BCF);
	push(mv, &ts->esp, 0x34DC1BCF);
	push(mv, &ts->esp, 0xD05FC3A3);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x78FA24);
	push(mv, &ts->esp, ts->esi);
	game::sub_558790(ts, mv);
	add(&ts->esp, 0x24);
	mov(mv, x86::mem(0x838970, 4), 0x34DC1BCF);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x14);

loc_562C24:
	push(mv, &ts->esp, 0x7F24787);
	goto loc_562BEC;

loc_562C2B:
	push(mv, &ts->esp, 0x51E3F647);
	push(mv, &ts->esp, 0x78FA24);
	push(mv, &ts->esp, ts->esi);
	game::sub_558430(ts, mv);
	add(&ts->esp, 0xC);
	mov(mv, x86::mem(0x838970, 4), 0x34DC1BEC);
	pop(mv, &ts->esp, ts->esi);

loc_562C49:
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x14);
}

void sub_562C50(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x14, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x10, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0xC, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_543D40(ts, mv);
	cmp(&ts->eflags, ts->edi, 0x562F5DAC);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_562E5C;
    }
	if (ts->eflags.zero) {
        goto loc_562E0F;
    }
	cmp(&ts->eflags, ts->edi, 0x35F8620B);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_562D20;
    }
	if (ts->eflags.zero) {
        goto loc_562D01;
    }
	sub(&ts->edi, 0xC407210);
	if (ts->eflags.zero) {
        goto loc_562CB6;
    }
	sub(&ts->edi, 0x289BA9BF);
	if (ts->eflags.zero) {
        goto loc_562CA8;
    }
	sub(&ts->edi, 0x1D);
	if (!ts->eflags.zero) {
        goto loc_5630F2;
    }

loc_562CA8:
	mov(&ts->ecx, ts->esi);
	game::sub_538CA0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_562CB6:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537D40(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_5630F2;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->al, x86::mem(ts->edx + 0x22, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_5630F2;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C60(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_562D01:
	push(mv, &ts->esp, 0xF);
	mov(&ts->ecx, 0x8635BC);
	game::sub_5243D0(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, 0x83A9D0);
	game::sub_52A460(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_562D20:
	cmp(&ts->eflags, ts->edi, 0x51123592);
	if (ts->eflags.zero) {
        goto loc_562D97;
    }
	cmp(&ts->eflags, ts->edi, 0x51A33F36);
	if (!ts->eflags.zero) {
        goto loc_5630F2;
    }
	mov(&ts->ecx, 0x838980);
	game::sub_547570(ts, mv);
	mov(mv, x86::mem(0x838982, 1), 0x0);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50B8C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x83898C, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_562D7A;
    }
	push(mv, &ts->esp, ts->ebx);
	game::sub_50D2A0(ts, mv);
	mov(mv, x86::mem(0x83A9D8, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_552C80(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_562D7A:
	mov(&ts->ecx, 0x838980);
	game::sub_55C460(ts, mv);

loc_562D84:
	game::sub_54F980(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_55BDF0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_562D97:
	cmp(mv, &ts->eflags, x86::mem(0x8389C8, 4), 0x8389C8);
	if (ts->eflags.zero) {
        goto loc_562DE5;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xA6C0D334);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x34DC1BCF);
	push(mv, &ts->esp, 0x562F5DAC);
	push(mv, &ts->esp, 0x51A33F36);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x78FA24);
	push(mv, &ts->esp, ts->eax);
	game::sub_558790(ts, mv);
	add(&ts->esp, 0x24);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x838970, 4), 0x562F5DAC);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_562DE5:
	push(mv, &ts->esp, ts->ebx);
	game::sub_50D2A0(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xDE6EFF34);
	mov(mv, x86::mem(0x83A9D8, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C60(ts, mv);
	add(&ts->esp, 0x14);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_562E0F:
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8389D0);
	game::sub_413440(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x8392C0);
	game::sub_4D8EC0(ts, mv);
	add(&ts->esp, 0xC);
	mov(&ts->ecx, 0x838980);
	game::sub_53B3F0(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_562D84;
    }
	game::sub_5404A0(ts, mv);
	mov(&ts->ecx, 0x838980);
	game::sub_54FD40(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_562E5C:
	cmp(&ts->eflags, ts->edi, 0xD05FC3A3);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_56303E;
    }
	if (ts->eflags.zero) {
        goto loc_562FEB;
    }
	cmp(&ts->eflags, ts->edi, 0x911AB364);
	if (ts->eflags.zero) {
        goto loc_562F07;
    }
	cmp(&ts->eflags, ts->edi, 0xB4EDEB6D);
	if (ts->eflags.zero) {
        goto loc_562CA8;
    }
	cmp(&ts->eflags, ts->edi, 0xC519BFC0);
	if (!ts->eflags.zero) {
        goto loc_5630F2;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	game::sub_495910(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x4);
	if (ts->eflags.zero) {
        goto loc_5630F2;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x48, 4));
	sub(&ts->eax, 0x0);
	mov(&ts->ecx, 0x1A311489);
	if (ts->eflags.zero) {
        goto loc_562EBD;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto loc_562EC2;
    }
	mov(&ts->ecx, 0x449A9DD9);
	goto loc_562EC2;

loc_562EBD:
	mov(&ts->ecx, 0x6EE64972);

loc_562EC2:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xB4EDEB6D);
	push(mv, &ts->esp, 0x34DC1BCF);
	push(mv, &ts->esp, 0xE75749D4);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->eax);
	game::sub_558790(ts, mv);
	add(&ts->esp, 0x24);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(0x838970, 4), 0xB4EDEB6D);
	game::sub_538C00(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_562F07:
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_562F59;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xD76E0B5A);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x34DC1BCF);
	push(mv, &ts->esp, 0x34DC1BCF);
	push(mv, &ts->esp, 0x51123592);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->ecx);
	game::sub_558790(ts, mv);
	add(&ts->esp, 0x24);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(0x838970, 4), 0x34DC1BCF);
	game::sub_538C00(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_562F59:
	cmp(mv, &ts->eflags, x86::mem(0x8389C8, 4), 0x8389C8);
	if (ts->eflags.zero) {
        goto loc_562FAE;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x511CCA10);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x34DC1BCF);
	push(mv, &ts->esp, 0x562F5DAC);
	push(mv, &ts->esp, 0x51A33F36);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x78FA24);
	push(mv, &ts->esp, ts->edx);
	game::sub_558790(ts, mv);
	add(&ts->esp, 0x24);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(0x838970, 4), 0x562F5DAC);
	game::sub_538C00(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_562FAE:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537D40(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_5630F2;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C60(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_562FEB:
	mov(&ts->ecx, ts->esi);
	game::sub_538CA0(ts, mv);
	mov(&ts->ecx, 0x838980);
	game::sub_547570(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	mov(&ts->ecx, 0x838980);
	game::sub_521530(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, 0x2F5E7DA3);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x861E74, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, 0x79D80C);
	push(mv, &ts->esp, ts->edx);
	game::sub_542600(ts, mv);
	add(&ts->esp, 0x20);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56303E:
	cmp(&ts->eflags, ts->edi, 0xE1FDE1D1);
	if (ts->eflags.zero) {
        goto loc_56307F;
    }
	cmp(&ts->eflags, ts->edi, 0xE75749D4);
	if (!ts->eflags.zero) {
        goto loc_5630F2;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_538CA0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x50, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5630F2;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x48, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x838980);
	game::sub_561A40(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56307F:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x13C, 4));
	cmp(&ts->eflags, ts->eax, 0xC407210);
	if (ts->eflags.zero) {
        goto loc_5630D2;
    }
	cmp(&ts->eflags, ts->eax, 0x911AB364);
	if (!ts->eflags.zero) {
        goto loc_5630F2;
    }
	mov(&ts->ecx, 0x838980);
	game::sub_53B3F0(ts, mv);
	mov(mv, x86::mem(0x838982, 1), 0x0);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	game::sub_50B8C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x83898C, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_562D7A;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_552C80(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_5630D2:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x50, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5630F2;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x45, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_5630F2;
    }
	game::sub_54F980(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_55BD60(ts, mv);

loc_5630F2:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);
}

void sub_563100(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	cmp(mv, &ts->eflags, x86::mem(ts->ebp + 0xC, 4), 0xC407210);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_56328B;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x48, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x8389A8, 4), ts->eax);
	mov(&ts->esi, 0x40);

loc_563121:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x8392C0);
	game::sub_6102F0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_563143;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x564B8CB6);
	mov(&ts->ecx, ts->eax);
	game::sub_61B500(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x40);
	if (ts->eflags.zero) {
        goto loc_56314B;
    }

loc_563143:
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, 0x43);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_563121;
    }
	goto loc_563159;

loc_56314B:
	mov(&ts->ecx, 0x838980);
	game::sub_50EF10(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_563167;
    }

loc_563159:
	mov(&ts->ecx, 0x838980);
	game::sub_521580(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5631E2;
    }

loc_563167:
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, 0x80C151D5);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1FAB5998);
	push(mv, &ts->esp, 0xE75749D4);
	push(mv, &ts->esp, 0x51123592);
	push(mv, &ts->esp, 0x7758F62D);
	push(mv, &ts->esp, 0x548B4385);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->esi);
	game::sub_558790(ts, mv);
	add(&ts->esp, 0x24);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x8637B0);
	mov(mv, x86::mem(0x838970, 4), 0x1FAB5998);
	game::sub_51BB70(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_56328A;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_56328A;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_56328A;
    }
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x9E99);
	mov(&ts->ecx, ts->eax);
	game::sub_55B5C0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x14);

loc_5631E2:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x48, 4));
	cmp(&ts->eflags, ts->eax, 0x40);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_563212;
    }
	cmp(&ts->eflags, ts->eax, 0x43);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_563212;
    }
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x8392C0);
	game::sub_6102F0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_563212;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x48, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x838980);
	game::sub_521670(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_563226;
    }

loc_563212:
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x48, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x838980);
	game::sub_521670(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_563272;
    }

loc_563226:
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, 0x6D7902C);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1FAB5998);
	push(mv, &ts->esp, 0xE75749D4);
	push(mv, &ts->esp, 0x51123592);
	push(mv, &ts->esp, 0x7758F62D);
	push(mv, &ts->esp, 0x548B4385);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->esi);
	game::sub_558790(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x9E99);
	mov(mv, x86::mem(0x838970, 4), 0x1FAB5998);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x2C);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x14);

loc_563272:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C60(ts, mv);
	add(&ts->esp, 0x10);

loc_56328A:
	pop(mv, &ts->esp, ts->esi);

loc_56328B:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x14);
}

void sub_563290(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(&ts->esi, 0x40);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_5632A0:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x8392C0);
	game::sub_6102F0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5632C6;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x564B8CB6);
	mov(&ts->ecx, ts->eax);
	game::sub_61B500(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x40);
	if (ts->eflags.zero) {
        goto loc_563404;
    }

loc_5632C6:
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, 0x43);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_5632A0;
    }
	mov(&ts->ecx, 0x838980);
	game::sub_521580(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_563404;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x58, 4));
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x48, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x8, 4));
	cmp(&ts->eflags, ts->ebx, 0x5073EF13);
	if (!ts->eflags.zero) {
        goto loc_563323;
    }
	cmp(&ts->eflags, ts->esi, 0x40);
	if (ts->eflags.zero) {
        goto loc_563403;
    }
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x838980);
	game::sub_50EE60(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_56331D;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x838980);
	game::sub_521670(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_563403;
    }

loc_56331D:
	lea(mv, &ts->ecx, x86::mem(ts->esi - 0x1, 4));
	push(mv, &ts->esp, ts->ecx);
	goto loc_563360;

loc_563323:
	cmp(&ts->eflags, ts->ebx, 0xD9FEEC59);
	if (!ts->eflags.zero) {
        goto loc_563403;
    }
	cmp(&ts->eflags, ts->esi, 0x43);
	if (ts->eflags.zero) {
        goto loc_563403;
    }
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x838980);
	game::sub_50EE60(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_56335C;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x838980);
	game::sub_521670(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_563403;
    }

loc_56335C:
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x1, 4));
	push(mv, &ts->esp, ts->edx);

loc_563360:
	mov(&ts->ecx, 0x838980);
	push(mv, &ts->esp, ts->esi);
	game::sub_561AD0(ts, mv);
	lea(mv, &ts->esi, x86::mem(ts->edi + 0x4C, 4));
	mov(&ts->ecx, ts->esi);
	game::sub_52F390(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50B840(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_563397;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x10, 4));
	goto loc_563399;

loc_563397:
	xor_(&ts->eax, ts->eax);

loc_563399:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x20, 4));
	cmp(&ts->eflags, ts->ebx, 0x5073EF13);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x2C, 1));
	mov(&ts->ecx, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_5633D6;
    }
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_5633C5;
    }
	game::sub_51FAC0(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	game::sub_50B8A0(ts, mv);
	dec(&ts->eax);
	goto loc_5633F2;

loc_5633C5:
	game::sub_51F9F0(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	game::sub_50B8A0(ts, mv);
	dec(&ts->eax);
	goto loc_5633F2;

loc_5633D6:
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, 0x1);
	if (ts->eflags.zero) {
        goto loc_5633E3;
    }
	game::sub_51FAC0(ts, mv);
	goto loc_5633E8;

loc_5633E3:
	game::sub_51F9F0(ts, mv);

loc_5633E8:
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	game::sub_50B8A0(ts, mv);
	inc(&ts->eax);

loc_5633F2:
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_50B8C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	add(&ts->esp, 0xC);
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x10, 4));

loc_563403:
	pop(mv, &ts->esp, ts->ebx);

loc_563404:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_563410(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x188, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x8, 4));
	if (!ts->eflags.zero) {
        goto loc_563457;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x189, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_563457;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_543D40(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x48, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_50F5B0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x174, 4), ts->eax);

loc_563457:
	cmp(&ts->eflags, ts->edi, 0x911AB364);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_56391F;
    }
	if (ts->eflags.zero) {
        goto loc_563876;
    }
	cmp(&ts->eflags, ts->edi, 0x35F8620B);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_56351D;
    }
	if (ts->eflags.zero) {
        goto loc_5634E4;
    }
	cmp(&ts->eflags, ts->edi, 0x34DC1BCF);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_5634D1;
    }
	if (ts->eflags.zero) {
        goto loc_56399A;
    }
	cmp(&ts->eflags, ts->edi, 0x1FAB5998);
	if (ts->eflags.zero) {
        goto loc_56399A;
    }
	cmp(&ts->eflags, ts->edi, 0x2101DCC5);
	if (!ts->eflags.zero) {
        goto loc_563C35;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_538CA0(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x188, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_563C35;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x790CEC);
	push(mv, &ts->esp, 0xDB285767);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_5634D1:
	cmp(&ts->eflags, ts->edi, 0x34DC1BEC);
	if (ts->eflags.zero) {
        goto loc_56399A;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_5634E4:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x79D6AC);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x189, 1), 0x1);
	game::sub_4954C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x83899C, 4));
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, 0x2);
	if (!ts->eflags.zero) {
        goto loc_563C35;
    }
	push(mv, &ts->esp, 0x8);
	mov(&ts->ecx, 0x8635BC);
	game::sub_5243D0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56351D:
	cmp(&ts->eflags, ts->edi, 0x51123592);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_563860;
    }
	if (ts->eflags.zero) {
        goto loc_563809;
    }
	cmp(&ts->eflags, ts->edi, 0x406415E3);
	if (ts->eflags.zero) {
        goto loc_56354D;
    }
	cmp(&ts->eflags, ts->edi, 0x5073EF13);
	if (!ts->eflags.zero) {
        goto loc_563C35;
    }
	mov(&ts->ebx, 0x4);
	goto loc_563A5A;

loc_56354D:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x22, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_563565;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x13);
	push(mv, &ts->esp, ts->edx);
	game::sub_51DE60(ts, mv);
	add(&ts->esp, 0x8);

loc_563565:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x189, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_563C35;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x22, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_563C35;
    }
	cmp(mv, &ts->eflags, x86::mem(0x8389A0, 4), 0x1);
	mov(mv, x86::mem(ts->ebp + 0x8, 4), 0x0);
	if (!ts->eflags.zero) {
        goto loc_5635B5;
    }
	mov(mv, &ts->edi, x86::mem(0x839BB8, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_5635B5;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79BE90);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_61B500(ts, mv);
	mov(mv, x86::mem(ts->ebp + 0x8, 4), ts->eax);

loc_5635B5:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x188, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_5636F7;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_50F310(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5635DC;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_55CC50(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_5635DC:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(&ts->ebx, 0x73BC702E);
	if (ts->eflags.zero) {
        goto def_5635FB;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x48, 4));
	add(&ts->eax, 0xFFFFFFBC);
	cmp(&ts->eflags, ts->eax, 0x8);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_5635FB;
    }
	jmp(x86::mem(0x563C3C, 4));

loc_563602:
	mov(&ts->ebx, 0xD286BE3A);
	goto def_5635FB;

loc_56360C:
	push(mv, &ts->esp, 0xC);
	mov(&ts->ecx, 0x8392C0);
	game::sub_6102F0(ts, mv);
	mov(&ts->edi, ts->eax);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto def_5635FB;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x721AFF7C);
	mov(&ts->ecx, ts->edi);
	game::sub_61B500(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_563649;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x6509EC92);
	mov(&ts->ecx, ts->edi);
	game::sub_61B500(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto def_5635FB;
    }

loc_563649:
	mov(&ts->ebx, 0xE7337E9D);
	goto def_5635FB;

loc_563650:
	push(mv, &ts->esp, 0x20);
	mov(&ts->ecx, 0x8392C0);
	game::sub_6102F0(ts, mv);
	mov(&ts->edi, ts->eax);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto def_5635FB;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x721AFF7C);
	mov(&ts->ecx, ts->edi);
	game::sub_61B500(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_563685;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x6509EC92);
	mov(&ts->ecx, ts->edi);
	game::sub_61B500(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto def_5635FB;
    }

loc_563685:
	mov(&ts->ebx, 0xF152BEFA);
	goto def_5635FB;

loc_56368C:
	push(mv, &ts->esp, 0x7);
	mov(&ts->ecx, 0x8392C0);
	game::sub_6102F0(ts, mv);
	mov(&ts->edi, ts->eax);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto def_5635FB;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x721AFF7C);
	mov(&ts->ecx, ts->edi);
	game::sub_61B500(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_5636C1;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x6509EC92);
	mov(&ts->ecx, ts->edi);
	game::sub_61B500(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto def_5635FB;
    }

loc_5636C1:
	mov(&ts->ebx, 0xAD460262);
	goto def_5635FB;

loc_5636C8:
	mov(&ts->ebx, 0x6BCBCEEA);

def_5635FB:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->ecx);
	game::sub_558430(ts, mv);
	add(&ts->esp, 0xC);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(0x838970, 4), 0x34DC1BEC);
	game::sub_53BD20(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_5636F7:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x158, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x158, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_563C35;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50D150(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x8389A0, 4));
	mov(&ts->ecx, 0x1);
	add(&ts->esp, 0xC);
	xor_(&ts->al, ts->al);
	cmp(&ts->eflags, ts->edx, ts->ecx);
	mov(&ts->ebx, 0xC4C5D271);
	if (!ts->eflags.zero) {
        goto loc_563754;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ebp + 0x8, 4), ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_56373F;
    }
	mov(&ts->ebx, 0x2A2C6AEF);
	goto loc_563789;

loc_56373F:
	mov(mv, &ts->eax, x86::mem(0x839BB8, 4));
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(&ts->ebx, 0x31FBC167);
	if (ts->eflags.zero) {
        goto loc_563780;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x40);
	goto loc_563768;

loc_563754:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x168, 4));
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_563780;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);

loc_563768:
	mov(&ts->ecx, 0x85AD40);
	game::sub_514280(ts, mv);
	mov(&ts->ecx, 0x838980);
	mov(&ts->edi, ts->eax);
	game::sub_521530(ts, mv);
	add(&ts->edi, ts->eax);

loc_563780:
	cmp(mv, &ts->eflags, x86::mem(0x861E74, 4), ts->edi);
	setl(ts->eflags, &ts->al);

loc_563789:
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_5637C4;
    }
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5637C4;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xD1AC60BE);
	push(mv, &ts->esp, 0x78FA24);
	push(mv, &ts->esp, ts->ecx);
	game::sub_558430(ts, mv);
	add(&ts->esp, 0xC);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(0x838970, 4), 0x34DC1BEC);
	game::sub_53BD20(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_5637C4:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x34DC1BCF);
	push(mv, &ts->esp, 0x34DC1BCF);
	push(mv, &ts->esp, 0xD05FC3A3);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x78FA24);
	push(mv, &ts->esp, ts->edx);
	game::sub_558790(ts, mv);
	add(&ts->esp, 0x24);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(0x838970, 4), 0x34DC1BCF);
	game::sub_53BD20(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_563809:
	mov(mv, &ts->al, x86::mem(0x838983, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_563829;
    }
	mov(mv, &ts->eax, x86::mem(0x839BB8, 4));
	mov(mv, &ts->ecx, x86::mem(0x8389A8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x838980);
	game::sub_54FDB0(ts, mv);

loc_563829:
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x160, 4));
	mov(mv, &ts->esi, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_56384D;
    }

loc_563835:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x838980);
	game::sub_5474D0(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_563835;
    }

loc_56384D:
	game::sub_54F980(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_55BD60(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_563860:
	cmp(&ts->eflags, ts->edi, 0x72619778);
	if (!ts->eflags.zero) {
        goto loc_563C35;
    }
	mov(&ts->eax, 0x6);
	goto loc_56395E;

loc_563876:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x189, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_563C35;
    }
	cmp(mv, &ts->eflags, x86::mem(0x8389A0, 4), 0x1);
	setz(ts->eflags, &ts->bl);
	xor_(&ts->cl, ts->cl);
	test(&ts->eflags, ts->bl, ts->bl);
	if (ts->eflags.zero) {
        goto loc_5638B7;
    }
	mov(mv, &ts->edi, x86::mem(0x839BB8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79BE90);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_61B500(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x1);
	setnle(ts->eflags, &ts->cl);

loc_5638B7:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x188, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5638E1;
    }
	test(&ts->eflags, ts->bl, ts->bl);
	if (ts->eflags.zero) {
        goto loc_5638D1;
    }
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5638E1;
    }
	test(&ts->eflags, ts->bl, ts->bl);
	if (ts->eflags.zero) {
        goto loc_5638E1;
    }
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_5638E1;
    }

loc_5638D1:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_55CE90(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_5638E1:
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x160, 4));
	mov(mv, x86::mem(0x838983, 1), 0x0);
	mov(mv, &ts->esi, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_56390C;
    }

loc_5638F4:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x838980);
	game::sub_5474D0(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_5638F4;
    }

loc_56390C:
	game::sub_54F980(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_55BDF0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56391F:
	cmp(&ts->eflags, ts->edi, 0xB5971BF1);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_563A35;
    }
	if (ts->eflags.zero) {
        goto loc_5639E0;
    }
	cmp(&ts->eflags, ts->edi, 0x9803F6E2);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_56398E;
    }
	if (ts->eflags.zero) {
        goto loc_563972;
    }
	cmp(&ts->eflags, ts->edi, 0x911C0A4B);
	if (ts->eflags.zero) {
        goto loc_563959;
    }
	cmp(&ts->eflags, ts->edi, 0x9120409E);
	if (!ts->eflags.zero) {
        goto loc_563C35;
    }
	mov(&ts->eax, 0x4);
	goto loc_5639E5;

loc_563959:
	mov(&ts->eax, 0x7);

loc_56395E:
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x188, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_563C35;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->ecx);
	goto loc_5639F1;

loc_563972:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x188, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_563C35;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_55D410(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56398E:
	cmp(&ts->eflags, ts->edi, 0xB4EDEB6D);
	if (!ts->eflags.zero) {
        goto loc_563C35;
    }

loc_56399A:
	mov(&ts->ecx, ts->esi);
	game::sub_538CA0(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x188, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5639C3;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x790CEC);
	push(mv, &ts->esp, 0xDB285767);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);

loc_5639C3:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x170, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F568);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_5639E0:
	mov(&ts->eax, 0x5);

loc_5639E5:
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x188, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_563A0D;
    }
	push(mv, &ts->esp, 0xB);

loc_5639F1:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_50D150(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_55D2D0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_563A0D:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_563C35;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x48, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_50F5B0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(mv, x86::mem(ts->esi + 0x174, 4), ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x10, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_563A35:
	cmp(&ts->eflags, ts->edi, 0xC98356BA);
	if (ts->eflags.zero) {
        goto loc_563BB6;
    }
	cmp(&ts->eflags, ts->edi, 0xD05FC3A3);
	if (ts->eflags.zero) {
        goto loc_563AA5;
    }
	cmp(&ts->eflags, ts->edi, 0xD9FEEC59);
	if (!ts->eflags.zero) {
        goto loc_563C35;
    }
	mov(&ts->ebx, 0x5);

loc_563A5A:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x188, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_563C35;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x174, 4));
	cmp(&ts->eflags, ts->eax, 0x2DAAB07);
	if (ts->eflags.zero) {
        goto loc_563A87;
    }
	cmp(&ts->eflags, ts->eax, 0x3437A52);
	if (ts->eflags.zero) {
        goto loc_563A87;
    }
	cmp(&ts->eflags, ts->eax, 0x3797533);
	if (!ts->eflags.zero) {
        goto loc_563C35;
    }

loc_563A87:
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_55D0D0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xB);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	game::sub_50D150(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_563AA5:
	cmp(mv, &ts->eflags, x86::mem(0x8389A0, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_563B65;
    }
	mov(mv, &ts->edi, x86::mem(0x839BB8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79BE90);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_61B500(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_563B14;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x168, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_53C160(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_55CE90(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x150, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x154, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->ecx, ts->esi);
	game::sub_538CA0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_563B14:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x168, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_563C35;
    }
	mov(mv, &ts->ecx, x86::mem(0x839BB8, 4));
	mov(mv, &ts->edx, x86::mem(0x8389A8, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x838980);
	game::sub_54FDB0(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x168, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x838980);
	game::sub_5474D0(ts, mv);
	game::sub_54F980(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_55BD60(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_563B65:
	mov(mv, x86::mem(0x838982, 1), 0x1);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x168, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x838980);
	game::sub_53B0C0(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_55CE90(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x150, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x154, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->ecx, ts->esi);
	game::sub_538CA0(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_53BCF0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_563BB6:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x188, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_563BC9;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4C, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));

loc_563BC9:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x18B, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_563BF4;
    }
	mov(mv, &ts->ecx, x86::mem(0x8389AC, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_4A5B10(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_563BF4;
    }
	push(mv, &ts->esp, 0x3F800000);
	push(mv, &ts->esp, 0x0);
	goto loc_563C1D;

loc_563BF4:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x18A, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_563C35;
    }
	mov(mv, &ts->ecx, x86::mem(0x8389AC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->edx + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_4A5B10(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_563C35;
    }
	push(mv, &ts->esp, 0x3F800000);
	push(mv, &ts->esp, 0x1);

loc_563C1D:
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(ts->esi + 0x18B, 1), 0x0);
	mov(mv, x86::mem(ts->esi + 0x18A, 1), 0x0);
	game::sub_4C1860(ts, mv);
	add(&ts->esp, 0xC);

loc_563C35:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);
}

void sub_563C60(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	game::sub_53BD50(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(0x8389A0, 4), 0x1);
	mov(mv, &ts->edi, x86::mem(0x839BB8, 4));
	if (!ts->eflags.zero) {
        goto loc_563CA6;
    }
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_563CA6;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79BE90);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_61B500(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_563CA6;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_548630(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_55CC50(ts, mv);

loc_563CA6:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x10, 4));
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x1);
	mov(&ts->ecx, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_563CE1;
    }
	game::sub_5453B0(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	mov(&ts->ecx, 0x838980);
	game::sub_521530(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, 0x2F5E7DA3);
	push(mv, &ts->esp, ts->esi);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_563CE1:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	goto sub_545460;
}

void sub_563CF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	mov(mv, &ts->eax, x86::mem(0x838560, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, 0x1);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_563D12;
    }
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0xADA7304B);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_563D12:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0x9120409E);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0x1B2794C7);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_564086;
    }
	if (ts->eflags.zero) {
        goto loc_5644AA;
    }
	cmp(&ts->eflags, ts->eax, 0x51123592);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_563FF0;
    }
	if (ts->eflags.zero) {
        goto loc_563EF1;
    }
	cmp(&ts->eflags, ts->eax, 0x9F00F07);
	if (ts->eflags.zero) {
        goto loc_563D94;
    }
	cmp(&ts->eflags, ts->eax, 0x34DC1BEC);
	if (ts->eflags.zero) {
        goto loc_563EDC;
    }
	cmp(&ts->eflags, ts->eax, 0x406415E3);
	if (!ts->eflags.zero) {
        goto loc_5644C9;
    }

loc_563D5C:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5644C9;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x12A, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_5644C9;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x129, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_564135;
    }
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x129, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_563D94:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x5C, 4));
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x2C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x110, 4));
	mov(mv, &ts->ebx, x86::mem(ts->eax + 0x48, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, 0x85AD40);
	game::sub_5289F0(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, 0x838980);
	game::sub_55C230(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x839C24, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0xA4);
	mov(&ts->ecx, 0x8392C0);
	game::sub_631D20(ts, mv);
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8389D0);
	game::sub_413440(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x8392C0);
	game::sub_4D8EC0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8389AC, 4));
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x8392C0);
	add(&ts->ecx, 0x18);
	game::sub_503950(ts, mv);
	push(mv, &ts->esp, 0x8389D0);
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8637D0);
	game::sub_55B1A0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x839C28, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xA6);
	mov(&ts->ecx, 0x8392C0);
	game::sub_631D20(ts, mv);
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8389D0);
	game::sub_413440(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x8392C0);
	game::sub_4D8EC0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8389AC, 4));
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x8392C0);
	add(&ts->ecx, 0x18);
	game::sub_503950(ts, mv);
	push(mv, &ts->esp, 0x8389D0);
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8637D0);
	game::sub_55B1A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x839C2C, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xA5);
	mov(&ts->ecx, 0x8392C0);
	game::sub_631D20(ts, mv);
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8389D0);
	game::sub_413440(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);

loc_563E9D:
	push(mv, &ts->esp, 0x8392C0);
	game::sub_4D8EC0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8389AC, 4));
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x8392C0);
	add(&ts->ecx, 0x18);
	game::sub_503950(ts, mv);
	push(mv, &ts->esp, 0x8389D0);
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8637D0);
	game::sub_55B1A0(ts, mv);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x838980);
	game::sub_521280(ts, mv);

loc_563EDC:
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x114, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x115, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_563EF1:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x5C, 4));
	mov(mv, &ts->edi, x86::mem(ts->edx + 0x2C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x110, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x48, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x838980);
	game::sub_55C230(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x839C24, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0xA4);
	mov(&ts->ecx, 0x8392C0);
	game::sub_631D20(ts, mv);
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8389D0);
	game::sub_413440(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x8392C0);
	game::sub_4D8EC0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8389AC, 4));
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x8392C0);
	add(&ts->ecx, 0x18);
	game::sub_503950(ts, mv);
	push(mv, &ts->esp, 0x8389D0);
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8637D0);
	game::sub_55B1A0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x839C28, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xA6);
	mov(&ts->ecx, 0x8392C0);
	game::sub_631D20(ts, mv);
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8389D0);
	game::sub_413440(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x8392C0);
	game::sub_4D8EC0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8389AC, 4));
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x8392C0);
	add(&ts->ecx, 0x18);
	game::sub_503950(ts, mv);
	push(mv, &ts->esp, 0x8389D0);
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8637D0);
	game::sub_55B1A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x839C2C, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xA5);
	mov(&ts->ecx, 0x8392C0);
	game::sub_631D20(ts, mv);
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8389D0);
	game::sub_413440(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ebx);
	goto loc_563E9D;

loc_563FF0:
	cmp(&ts->eflags, ts->eax, 0x72619778);
	if (ts->eflags.zero) {
        goto loc_564076;
    }
	cmp(&ts->eflags, ts->eax, 0x81F0B71A);
	if (ts->eflags.zero) {
        goto loc_564018;
    }
	cmp(&ts->eflags, ts->eax, 0x911C0A4B);
	if (!ts->eflags.zero) {
        goto loc_5644C9;
    }
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	game::sub_55D660(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_564018:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537D40(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_5644C9;
    }
	push(mv, &ts->esp, 0x799C18);
	mov(mv, x86::mem(ts->esi + 0x12A, 1), 0x1);
	game::sub_5379A0(ts, mv);
	add(&ts->esp, 0x4);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(ts->ecx + 0x2F, 1), 0x0);
	game::sub_52EB90(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C60(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_564076:
	push(mv, &ts->esp, 0xFFFFFFFF);
	mov(&ts->ecx, ts->esi);
	game::sub_55D660(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_564086:
	cmp(&ts->eflags, ts->eax, 0xB4EDEB6D);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_564393;
    }
	if (ts->eflags.zero) {
        goto loc_564328;
    }
	cmp(&ts->eflags, ts->eax, 0x9803F6E2);
	if (ts->eflags.zero) {
        goto loc_5642AC;
    }
	cmp(&ts->eflags, ts->eax, 0x9E382ECD);
	if (ts->eflags.zero) {
        goto loc_563D5C;
    }
	cmp(&ts->eflags, ts->eax, 0xB4623F67);
	if (!ts->eflags.zero) {
        goto loc_5644C9;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x79031C);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, 0x799AB8);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x79031C);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x79031C);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, 0x79D818);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x838560, 4));
	add(&ts->esp, 0x30);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5644C9;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x799A58);
	game::sub_537950(ts, mv);
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, 0x799C18);
	game::sub_537950(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x838560, 4), 0x4);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_564135:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x5C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x2C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x311151F8);
	game::sub_61B500(ts, mv);
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->eax, x86::mem(0x838560, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_564182;
    }
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_564180;
    }
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x128, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_564180;
    }
	push(mv, &ts->esp, 0x799C18);
	push(mv, &ts->esp, 0xFD7C68D8);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x128, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_564180:
	test(&ts->eflags, ts->eax, ts->eax);

loc_564182:
	if (!ts->eflags.zero) {
        goto loc_5644C9;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x5C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x110, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x2C, 4));
	mov(mv, &ts->ebx, x86::mem(ts->ecx + 0x48, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, 0x838980);
	mov(mv, x86::mem(ts->ebp + 0x8, 4), ts->eax);
	game::sub_50F1B0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5641EB;
    }
	test(&ts->eflags, ts->edi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_5641EB;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDA15D7E5);
	push(mv, &ts->esp, 0xB4EDEB6D);
	push(mv, &ts->esp, 0xB4EDEB6D);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x78FA24);
	push(mv, &ts->esp, ts->eax);
	game::sub_558570(ts, mv);
	add(&ts->esp, 0x18);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(0x838970, 4), 0xB4EDEB6D);
	game::sub_560B60(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_5641EB:
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_564263;
    }
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_564263;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, &ts->edi, x86::mem(0x861E74, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, 0x85AD40);
	game::sub_514280(ts, mv);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_564238;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xD1AC60BE);
	push(mv, &ts->esp, 0xB4623F67);
	push(mv, &ts->esp, 0xB4623F67);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x78FA24);
	push(mv, &ts->esp, ts->edx);
	game::sub_558570(ts, mv);
	add(&ts->esp, 0x18);
	goto loc_564294;

loc_564238:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x44B7167F);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xB4623F67);
	push(mv, &ts->esp, 0xB4623F67);
	push(mv, &ts->esp, 0x9F00F07);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x78FA24);
	push(mv, &ts->esp, ts->eax);
	goto loc_56428C;

loc_564263:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xF5AC2B2A);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xB4623F67);
	push(mv, &ts->esp, 0xB4623F67);
	push(mv, &ts->esp, 0x51123592);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x78FA24);
	push(mv, &ts->esp, ts->ecx);

loc_56428C:
	game::sub_558790(ts, mv);
	add(&ts->esp, 0x24);

loc_564294:
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(0x838970, 4), 0xB4623F67);
	game::sub_560B60(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_5642AC:
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xB4, 4));
	game::sub_538130(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xF0, 4));
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_5642F1;
    }
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5642F1;
    }
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8763EC, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_5642DF;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	mov(&ts->eax, ts->ebx);
	goto loc_5642F1;

loc_5642DF:
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_5642F9;
    }
	mov(&ts->eax, 0xFFFFFFFF);

loc_5642F1:
	mov(&ts->ecx, ts->esi);
	push(mv, &ts->esp, ts->eax);
	game::sub_55D660(ts, mv);

loc_5642F9:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x124, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_52D090(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5644C9;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x406415E3);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_564328:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x79031C);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, 0x799AB8);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x79031C);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x79031C);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, 0x79D818);
	game::sub_537C00(ts, mv);
	push(mv, &ts->esp, 0x799AB8);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x34);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5644C9;
    }
	mov(&ts->edi, 0xFF);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_564393:
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	if (ts->eflags.zero) {
        goto loc_5644AA;
    }
	cmp(&ts->eflags, ts->eax, 0xC98356BA);
	if (ts->eflags.zero) {
        goto loc_5643C8;
    }
	cmp(&ts->eflags, ts->eax, 0xE1FDE1D1);
	if (!ts->eflags.zero) {
        goto loc_5644C9;
    }
	mov(&ts->ecx, 0x838980);
	mov(mv, x86::mem(ts->esi + 0x114, 1), 0x1);
	game::sub_530140(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_5643C8:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x128, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(&ts->edi, 0xFF);
	if (ts->eflags.zero) {
        goto loc_56440D;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x799AB8);
	mov(mv, x86::mem(0x838560, 4), 0x2);
	game::sub_537950(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	game::sub_537950(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x799C18);
	game::sub_537950(ts, mv);
	add(&ts->esp, 0x18);
	mov(mv, x86::mem(ts->esi + 0x128, 1), 0x0);

loc_56440D:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x114, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56449B;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x115, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_564432;
    }
	mov(mv, &ts->eax, x86::mem(0x7FA1C0, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x8ACAA8DF);
	goto loc_56443E;

loc_564432:
	mov(mv, &ts->ecx, x86::mem(0x7FA1C0, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x9FBBD1D4);

loc_56443E:
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x799C18);
	mov(mv, x86::mem(ts->esi + 0x114, 1), 0x0);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56446B;
    }
	push(mv, &ts->esp, 0x799C18);
	game::sub_5379A0(ts, mv);
	add(&ts->esp, 0x4);

loc_56446B:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_5379A0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x7FA200, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_537950(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x7FA200, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x251BF83E);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x14);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56449B:
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	game::sub_538760(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_5644AA:
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8389D0);
	game::sub_413440(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x8392C0);
	game::sub_4D8EC0(ts, mv);
	add(&ts->esp, 0xC);

loc_5644C9:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);
}

void sub_5644D0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0x9803F6E2);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_564756;
    }
	if (ts->eflags.zero) {
        goto loc_564722;
    }
	cmp(&ts->eflags, ts->eax, 0x911AB364);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_56470D;
    }
	if (ts->eflags.zero) {
        goto loc_5645EE;
    }
	cmp(&ts->eflags, ts->eax, 0x153E234);
	if (ts->eflags.zero) {
        goto loc_5645CA;
    }
	cmp(&ts->eflags, ts->eax, 0x406415E3);
	if (!ts->eflags.zero) {
        goto loc_564751;
    }
	mov(mv, &ts->eax, x86::mem(0x838560, 4));
	dec(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0x3);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_56451B;
    }
	jmp(x86::mem(0x5647CC, 4));

loc_564522:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(0x838560, 4), 0x3);
	game::sub_549280(ts, mv);
	goto def_56451B;

loc_564537:
	push(mv, &ts->esp, 0x2);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(0x838560, 4), 0x4);
	game::sub_549280(ts, mv);
	goto def_56451B;

loc_56454C:
	mov(mv, x86::mem(0x838560, 4), 0x0);
	goto def_56451B;

loc_564558:
	push(mv, &ts->esp, 0x799A58);
	push(mv, &ts->esp, 0x406415E3);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);

def_56451B:
	mov(&ts->ecx, ts->esi);
	game::sub_5504D0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x838560, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_564751;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_53C560(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x799AB8);
	game::sub_537950(ts, mv);
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, 0x799A58);
	game::sub_537950(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x799C18);
	game::sub_537950(ts, mv);
	push(mv, &ts->esp, 0x799A58);
	push(mv, &ts->esp, 0x9E382ECD);
	mov(mv, x86::mem(ts->esi + 0xA8, 1), 0x0);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x20);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_5645CA:
	mov(mv, &ts->eax, x86::mem(0x838560, 4));
	mov(&ts->edi, 0x4);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_564751;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_53C4A0(ts, mv);
	mov(mv, x86::mem(0x838560, 4), ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_5645EE:
	mov(mv, &ts->eax, x86::mem(0x838560, 4));
	cmp(&ts->eflags, ts->eax, 0x2);
	if (!ts->eflags.zero) {
        goto loc_564664;
    }
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, 0x799AB8);
	game::sub_537950(ts, mv);
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, 0x799A58);
	game::sub_537950(ts, mv);
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, 0x799C18);
	game::sub_537950(ts, mv);
	add(&ts->esp, 0x18);
	mov(&ts->ecx, ts->esi);
	game::sub_53C560(ts, mv);
	push(mv, &ts->esp, 0x0);
	sub(&ts->esp, 0x10);
	mov(&ts->ecx, ts->esp);
	push(mv, &ts->esp, 0xFFFFFFFF);
	game::sub_5054A0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x838560, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_53C620(ts, mv);
	mov(&ts->edi, 0x1);
	mov(mv, x86::mem(ts->esi + 0x74, 4), ts->edi);
	mov(mv, x86::mem(0x838560, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0xA8, 1), 0x0);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_564664:
	mov(&ts->edi, 0x1);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_564684;
    }
	push(mv, &ts->esp, 0x799AB8);
	push(mv, &ts->esp, 0x911AB364);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_564684:
	sub(&ts->eax, 0x3);
	if (ts->eflags.zero) {
        goto loc_5646CC;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto loc_564701;
    }
	push(mv, &ts->esp, 0x0);
	sub(&ts->esp, 0x10);
	mov(&ts->ecx, ts->esp);
	push(mv, &ts->esp, 0xFFFFFFFF);
	game::sub_5054A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x838560, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_53C620(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x9C, 4), ts->edi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(0x838560, 4), 0x3);
	game::sub_549280(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_5504D0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_5646CC:
	push(mv, &ts->esp, 0x0);
	sub(&ts->esp, 0x10);
	mov(&ts->ecx, ts->esp);
	push(mv, &ts->esp, 0xFFFFFFFF);
	game::sub_5054A0(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x838560, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_53C620(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x88, 4), ts->edi);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(0x838560, 4), 0x2);
	game::sub_549280(ts, mv);

loc_564701:
	mov(&ts->ecx, ts->esi);
	game::sub_5504D0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_56470D:
	cmp(&ts->eflags, ts->eax, 0x9120409E);
	if (!ts->eflags.zero) {
        goto loc_564751;
    }

loc_564714:
	push(mv, &ts->esp, 0xFFFFFFFF);
	mov(&ts->ecx, ts->esi);
	game::sub_548E40(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_564722:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xAC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_52D100(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_564714;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB0, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_52D100(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_564751;
    }

loc_564748:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_548E40(ts, mv);

loc_564751:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_564756:
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	if (ts->eflags.zero) {
        goto loc_564748;
    }
	cmp(&ts->eflags, ts->eax, 0xC98356BA);
	if (ts->eflags.zero) {
        goto loc_56478E;
    }
	cmp(&ts->eflags, ts->eax, 0xFD7C68D8);
	if (!ts->eflags.zero) {
        goto loc_564751;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_53C4A0(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_5504D0(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_549280(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xA8, 1), 0x1);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_56478E:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x54, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_564751;
    }
	mov(mv, &ts->eax, x86::mem(0x839BF0, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esi + 0x58, 4));
	if (ts->eflags.zero) {
        goto loc_564751;
    }
	mov(&ts->edx, ts->eax);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x58, 4), ts->eax);
	game::sub_549000(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FFD0);
	push(mv, &ts->esp, 0x79CB18);
	push(mv, &ts->esp, ts->eax);
	game::sub_5426C0(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);
}

void sub_5647E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	mov(mv, &ts->al, x86::mem(0x83A7A4, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_5647FF;
    }
	cmp(&ts->eflags, ts->esi, 0x911AB364);
	if (ts->eflags.zero) {
        goto loc_564C78;
    }

loc_5647FF:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x150, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(0x8651AC, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x14, 4));
	if (ts->eflags.zero) {
        goto loc_564822;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0xC, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	game::sub_543D40(ts, mv);

loc_564822:
	cmp(&ts->eflags, ts->esi, 0x51123592);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_5649E0;
    }
	if (ts->eflags.zero) {
        goto loc_5649C2;
    }
	cmp(&ts->eflags, ts->esi, 0x2B5DFEF6);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_564916;
    }
	if (ts->eflags.zero) {
        goto loc_5648EA;
    }
	cmp(&ts->eflags, ts->esi, 0x1FAB5998);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_5648A5;
    }
	if (ts->eflags.zero) {
        goto loc_564886;
    }
	cmp(&ts->eflags, ts->esi, 0xC407210);
	if (ts->eflags.zero) {
        goto loc_564B69;
    }
	cmp(&ts->eflags, ts->esi, 0x159C894D);
	if (!ts->eflags.zero) {
        goto loc_564C77;
    }
	mov(mv, &ts->eax, x86::mem(0x83A63C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x839C40);
	game::sub_50FC60(ts, mv);
	mov(&ts->ecx, ts->edi);
	game::sub_538CA0(ts, mv);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_564886:
	mov(mv, &ts->ecx, x86::mem(0x83A63C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x839C40);
	game::sub_50FAE0(ts, mv);

loc_564897:
	mov(&ts->ecx, ts->edi);
	game::sub_53CC70(ts, mv);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_5648A5:
	cmp(&ts->eflags, ts->esi, 0x24DD40CF);
	if (!ts->eflags.zero) {
        goto loc_564C77;
    }
	mov(mv, &ts->edx, x86::mem(0x83A63C, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x839C40);
	game::sub_50FAE0(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(ts->edi + 0x154, 1), 0x1);
	mov(mv, &ts->edi, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x151);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edi);
	game::sub_4A3100(ts, mv);
	add(&ts->esp, 0x1C);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_5648EA:
	mov(mv, &ts->eax, x86::mem(0x83A63C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x839C40);
	game::sub_50FC20(ts, mv);

loc_5648FA:
	mov(mv, &ts->ecx, x86::mem(0x7FA218, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_564916:
	cmp(&ts->eflags, ts->esi, 0x35F8620B);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_5649BA;
    }
	if (ts->eflags.zero) {
        goto loc_5649A8;
    }
	cmp(&ts->eflags, ts->esi, 0x30ED2368);
	if (ts->eflags.zero) {
        goto loc_56494A;
    }
	cmp(&ts->eflags, ts->esi, 0x34DC1BCF);
	if (!ts->eflags.zero) {
        goto loc_564C77;
    }
	mov(&ts->ecx, ts->edi);
	game::sub_538CA0(ts, mv);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56494A:
	mov(&ts->ecx, 0x839C40);
	game::sub_50FD10(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_564897;
    }
	mov(mv, &ts->al, x86::mem(0x844AD8, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_564897;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x71851654);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x34DC1BCF);
	push(mv, &ts->esp, 0x1FAB5998);
	push(mv, &ts->esp, 0x24DD40CF);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->eax);
	game::sub_558790(ts, mv);
	add(&ts->esp, 0x24);
	mov(&ts->ecx, ts->edi);
	game::sub_538C00(ts, mv);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_5649A8:
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	game::sub_52CDD0(ts, mv);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_5649BA:
	cmp(&ts->eflags, ts->esi, 0x461A18EE);
	goto loc_564A12;

loc_5649C2:
	mov(mv, &ts->edi, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x51);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edi);
	game::sub_4A3100(ts, mv);
	add(&ts->esp, 0x1C);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_5649E0:
	cmp(&ts->eflags, ts->esi, 0xB4623F67);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_564B21;
    }
	if (ts->eflags.zero) {
        goto loc_564AD0;
    }
	cmp(&ts->eflags, ts->esi, 0x8FB8A616);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_564ABF;
    }
	if (ts->eflags.zero) {
        goto loc_564AA0;
    }
	cmp(&ts->eflags, ts->esi, 0x526ADEFC);
	if (ts->eflags.zero) {
        goto loc_564A26;
    }
	cmp(&ts->eflags, ts->esi, 0x8867412D);

loc_564A12:
	if (!ts->eflags.zero) {
        goto loc_564C77;
    }
	mov(&ts->ecx, ts->edi);
	game::sub_53CC70(ts, mv);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_564A26:
	push(mv, &ts->esp, 0x790000);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_564A44;
    }
	push(mv, &ts->esp, 0x790000);
	game::sub_5379A0(ts, mv);
	add(&ts->esp, 0x4);

loc_564A44:
	mov(&ts->ecx, 0x839C40);
	game::sub_50FDF0(ts, mv);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, 0x839C40);
	mov(mv, x86::mem(0x83A655, 1), 0x0);
	game::sub_50F7E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	push(mv, &ts->esp, 0xA);
	mov(mv, x86::mem(0x83A644, 4), 0x1);
	game::sub_5F4240(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x83A64C, 4));
	mov(mv, &ts->ecx, x86::mem(0x8900AC, 4));
	mov(mv, &ts->esi, x86::mem(0x83A540, 4));
	game::sub_5EA8B0(ts, mv);
	neg(&ts->al);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	sbb(&ts->eax, ts->eax);
	neg(&ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_564AA0:
	mov(mv, &ts->edx, x86::mem(0x83A63C, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x839C40);
	game::sub_50FC20(ts, mv);
	mov(&ts->ecx, ts->edi);
	game::sub_538CA0(ts, mv);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_564ABF:
	cmp(&ts->eflags, ts->esi, 0x911AB364);
	if (!ts->eflags.zero) {
        goto loc_564C77;
    }
	goto loc_564B69;

loc_564AD0:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x251BF83E);
	game::sub_55DDA0(ts, mv);
	push(mv, &ts->esp, 0x790000);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_564B07;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x790000);
	game::sub_555F10(ts, mv);
	add(&ts->esp, 0x10);

loc_564B07:
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x20, 4));
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_54E6E0(ts, mv);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_564B21:
	cmp(&ts->eflags, ts->esi, 0xE1A57D51);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_564C07;
    }
	if (ts->eflags.zero) {
        goto loc_564BBD;
    }
	cmp(&ts->eflags, ts->esi, 0xB4EDEB6D);
	if (ts->eflags.zero) {
        goto loc_5648FA;
    }
	cmp(&ts->eflags, ts->esi, 0xB5AF2461);
	if (!ts->eflags.zero) {
        goto loc_564C77;
    }
	mov(mv, &ts->al, x86::mem(0x83A7A4, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_564C77;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0xC, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	game::sub_50DA20(ts, mv);

loc_564B69:
	mov(&ts->ecx, ts->edi);
	game::sub_5100E0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_564C77;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537D40(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_564C77;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C60(ts, mv);
	push(mv, &ts->esp, 0x790000);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x14);
	goto loc_564C66;

loc_564BBD:
	push(mv, &ts->esp, 0x790000);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_564BDB;
    }
	push(mv, &ts->esp, 0x790000);
	game::sub_5379A0(ts, mv);
	add(&ts->esp, 0x4);

loc_564BDB:
	mov(&ts->ecx, 0x839C40);
	game::sub_50FDF0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	push(mv, &ts->esp, 0x3);
	game::sub_5F4240(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_50B8C0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_564C07:
	cmp(&ts->eflags, ts->esi, 0xE1FDE1D1);
	if (!ts->eflags.zero) {
        goto loc_564C77;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x13C, 4));
	cmp(&ts->eflags, ts->eax, 0x911AB364);
	if (ts->eflags.zero) {
        goto loc_564C23;
    }
	cmp(&ts->eflags, ts->eax, 0xB5AF2461);
	if (!ts->eflags.zero) {
        goto loc_564C77;
    }

loc_564C23:
	push(mv, &ts->esp, 0x790000);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_564C41;
    }
	push(mv, &ts->esp, 0x790000);
	game::sub_5379A0(ts, mv);
	add(&ts->esp, 0x4);

loc_564C41:
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	push(mv, &ts->esp, 0x1);
	game::sub_5F4240(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50B8C0(ts, mv);
	push(mv, &ts->esp, 0x790000);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0xC);

loc_564C66:
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_564C77;
    }
	push(mv, &ts->esp, 0x790000);
	game::sub_5379A0(ts, mv);
	add(&ts->esp, 0x4);

loc_564C77:
	pop(mv, &ts->esp, ts->ebx);

loc_564C78:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);
}

void sub_564C80(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_564CEC;
    }
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, 0x972A44B);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x34DC1BCF);
	push(mv, &ts->esp, 0x34DC1BCF);
	push(mv, &ts->esp, 0xE1A57D51);
	push(mv, &ts->esp, 0x541389E5);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x795000);
	push(mv, &ts->esp, ts->esi);
	game::sub_558790(ts, mv);
	add(&ts->esp, 0x24);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x8637B0);
	game::sub_51BB70(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero) {
        goto locret_564CEC;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto locret_564CEC;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_564CEC;
    }
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x96DDA9E6);
	mov(&ts->ecx, ts->eax);
	game::sub_55B5C0(ts, mv);

locret_564CEC:
	retn(mv, &ts->esp, 0x14);
}

void sub_564CF0(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_564D5C;
    }
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, 0x455C3F80);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x34DC1BCF);
	push(mv, &ts->esp, 0x34DC1BCF);
	push(mv, &ts->esp, 0x526ADEFC);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->esi);
	game::sub_558790(ts, mv);
	add(&ts->esp, 0x24);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x8637B0);
	game::sub_51BB70(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero) {
        goto locret_564D5C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto locret_564D5C;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_564D5C;
    }
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x96DDA9E6);
	mov(&ts->ecx, ts->eax);
	game::sub_55B5C0(ts, mv);

locret_564D5C:
	retn(mv, &ts->esp, 0x14);
}

void sub_564D60(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_564DCC;
    }
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, 0xD7DE8AB);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x34DC1BCF);
	push(mv, &ts->esp, 0x34DC1BCF);
	push(mv, &ts->esp, 0x51123592);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->esi);
	game::sub_558790(ts, mv);
	add(&ts->esp, 0x24);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x8637B0);
	game::sub_51BB70(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero) {
        goto locret_564DCC;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto locret_564DCC;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_564DCC;
    }
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x96DDA9E6);
	mov(&ts->ecx, ts->eax);
	game::sub_55B5C0(ts, mv);

locret_564DCC:
	retn(mv, &ts->esp, 0x14);
}

void sub_564DD0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	cmp(mv, &ts->eflags, x86::mem(ts->ebp + 0xC, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto loc_564E95;
    }
	mov(mv, &ts->ecx, x86::mem(0x83A64C, 4));
	mov(mv, &ts->eax, x86::mem(0x7FA21C, 4));
	mov(mv, &ts->edx, x86::mem(0x8900AC, 4));
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	mov(mv, x86::mem(0x83A650, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_5F4230(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x850078, 4));
	cmp(&ts->eflags, ts->ecx, 0x100);
	mov(&ts->eax, 0x40813F63);
	if (!ts->eflags.zero) {
        goto loc_564E20;
    }
	mov(&ts->eax, 0xFC820867);
	goto loc_564E38;

loc_564E20:
	cmp(&ts->eflags, ts->ecx, 0x1);
	if (!ts->eflags.zero) {
        goto loc_564E38;
    }
	mov(mv, &ts->eax, x86::mem(0x83A640, 4));
	neg(&ts->eax);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0xCE5A854B);
	add(&ts->eax, 0xE5A0D45E);

loc_564E38:
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x34DC1BCF);
	push(mv, &ts->esp, 0x34DC1BCF);
	push(mv, &ts->esp, 0x30ED2368);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->esi);
	game::sub_558790(ts, mv);
	add(&ts->esp, 0x24);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x8637B0);
	game::sub_51BB70(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero) {
        goto loc_564E95;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_564E95;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_564E95;
    }
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x96DDA9E6);
	mov(&ts->ecx, ts->eax);
	game::sub_55B5C0(ts, mv);

loc_564E95:
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x14);
}

void sub_564EA0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, 0x6BB7037E);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x34DC1BCF);
	push(mv, &ts->esp, 0x34DC1BCF);
	push(mv, &ts->esp, 0xD05FC3A3);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->esi);
	game::sub_558790(ts, mv);
	add(&ts->esp, 0x24);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x8637B0);
	game::sub_51BB70(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero) {
        goto locret_564F02;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto locret_564F02;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_564F02;
    }
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x96DDA9E6);
	mov(&ts->ecx, ts->eax);
	game::sub_55B5C0(ts, mv);

locret_564F02:
	retn(mv, &ts->esp, 0x14);
}

void sub_564F10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0xC, 4));
	cmp(&ts->eflags, ts->edi, 0x9120409E);
	mov(&ts->ebx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_564F2F;
    }
	cmp(&ts->eflags, ts->edi, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_564FC7;
    }

loc_564F2F:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x6C, 4));
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->esi, x86::mem(ts->ebx + 0x6C, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x9C, 4));
	mov(mv, &ts->edi, x86::mem(ts->ebx + 0x68, 4));
	mov(mv, x86::mem(ts->ebp - 0x4, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x83A540, 4));
	push(mv, &ts->esp, ts->edi);
	game::sub_59B080(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_564F6C;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebp - 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(0x83A540, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edx);
	game::sub_5B4670(ts, mv);

loc_564F6C:
	mov(mv, &ts->edi, x86::mem(ts->ebx + 0x68, 4));
	mov(mv, &ts->ecx, x86::mem(0x83A540, 4));
	push(mv, &ts->esp, ts->edi);
	game::sub_59B080(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_564F91;
    }
	mov(mv, &ts->ecx, x86::mem(0x83A540, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	game::sub_5B3E40(ts, mv);
	goto loc_564F97;

loc_564F91:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));

loc_564F97:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x30, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x24, 4));
	mov(mv, x86::mem(ts->esi + 0x2C, 4), ts->eax);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_564FB0;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x24, 4));
	mov(mv, x86::mem(ts->esi + 0x30, 4), ts->ecx);

loc_564FB0:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0xC, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x28, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_564FC6;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x28, 4));
	mov(mv, x86::mem(ts->esi + 0x30, 4), ts->edx);

loc_564FC6:
	pop(mv, &ts->esp, ts->esi);

loc_564FC7:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x68, 4));
	cmp(&ts->eflags, ts->eax, 0x9);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_565005;
    }
	cmp(&ts->eflags, ts->eax, 0xF);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_565005;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x8637B0);
	game::sub_51BB70(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_565005;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_565005;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_565005;
    }
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x5FE4BAE4);
	mov(&ts->ecx, ts->eax);
	game::sub_55B5C0(ts, mv);

loc_565005:
	mov(mv, &ts->ecx, x86::mem(0x7FA214, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x8637B0);
	game::sub_51BB70(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_565039;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_565039;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_565039;
    }
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xE15F62F8);
	mov(&ts->ecx, ts->eax);
	game::sub_55B5C0(ts, mv);

loc_565039:
	mov(mv, &ts->edx, x86::mem(ts->ebx, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->ebx);
	call(ts, mv, x86::mem(ts->edx + 0x40, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx, 4));
	mov(&ts->ecx, ts->ebx);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x8);
}

void sub_565050(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->esi, ts->ecx);
	game::sub_52D9F0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x64, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	game::sub_52D020(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5650AA;
    }
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, 0x8637B0);
	game::sub_51BB70(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5650AA;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_5650AA;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5650AA;
    }
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xC519BFC3);
	mov(&ts->ecx, ts->eax);
	game::sub_55B5C0(ts, mv);

loc_5650AA:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0xC);
}

void sub_5650C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	game::sub_556020(ts, mv);
	cmp(&ts->eflags, ts->esi, 0x9120409E);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_565150;
    }
	if (ts->eflags.zero) {
        goto loc_56513D;
    }
	cmp(&ts->eflags, ts->esi, 0x72619778);
	if (ts->eflags.zero) {
        goto loc_56512A;
    }
	cmp(&ts->eflags, ts->esi, 0x911AB364);
	if (ts->eflags.zero) {
        goto loc_565117;
    }
	cmp(&ts->eflags, ts->esi, 0x911C0A4B);
	if (!ts->eflags.zero) {
        goto loc_5651F3;
    }
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	push(mv, &ts->esp, 0x1);
	game::sub_458520(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_565117:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0xA);
	push(mv, &ts->esp, ts->eax);
	game::sub_51DE60(ts, mv);
	add(&ts->esp, 0x8);
	goto loc_5652D9;

loc_56512A:
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	push(mv, &ts->esp, 0x0);
	game::sub_458520(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56513D:
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	push(mv, &ts->esp, 0x9);
	game::sub_458520(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_565150:
	cmp(&ts->eflags, ts->esi, 0xB5971BF1);
	if (ts->eflags.zero) {
        goto loc_5651E0;
    }
	cmp(&ts->eflags, ts->esi, 0xC519BFC0);
	if (ts->eflags.zero) {
        goto loc_565183;
    }
	cmp(&ts->eflags, ts->esi, 0xC519BFC3);
	if (!ts->eflags.zero) {
        goto loc_5651F3;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x2);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51DE60(ts, mv);
	add(&ts->esp, 0x8);
	goto loc_5653DC;

loc_565183:
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	push(mv, &ts->esp, 0xB);
	game::sub_458520(ts, mv);

loc_565190:
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x54, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_5654C0;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x68, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x839C40);
	game::sub_50F9B0(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x68, 4));
	cmp(&ts->eflags, ts->esi, 0x9);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5651CA;
    }
	cmp(&ts->eflags, ts->esi, 0xF);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_5651CA;
    }
	mov(&ts->ecx, 0x839C40);
	game::sub_50FDA0(ts, mv);
	mov(&ts->ecx, 0x839C40);
	game::sub_50FDD0(ts, mv);

loc_5651CA:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4C, 4));
	add(&ts->edi, 0x4C);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_565400;
    }
	lea(mv, &ts->esi, x86::mem(ts->eax - 0x4, 4));
	goto loc_565402;

loc_5651E0:
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	push(mv, &ts->esp, 0x8);
	game::sub_458520(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_5651F3:
	cmp(&ts->eflags, ts->esi, 0xB5AF2461);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_5653B6;
    }
	if (ts->eflags.zero) {
        goto loc_565348;
    }
	cmp(&ts->eflags, ts->esi, 0x5FE4BAE4);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_5652CD;
    }
	if (ts->eflags.zero) {
        goto loc_565246;
    }
	cmp(&ts->eflags, ts->esi, 0xC407210);
	if (ts->eflags.zero) {
        goto loc_565234;
    }
	cmp(&ts->eflags, ts->esi, 0x35F8620B);
	if (!ts->eflags.zero) {
        goto loc_5654C0;
    }
	mov(&ts->ecx, ts->edi);
	game::sub_51FF40(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_565234:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x54, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x24, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_565246:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x54, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x68, 4));
	add(&ts->edi, 0x4C);
	cmp(&ts->eflags, ts->eax, 0x9);
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	if (!ts->eflags.zero) {
        goto loc_56528E;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_56525F;
    }
	lea(mv, &ts->esi, x86::mem(ts->eax - 0x4, 4));
	goto loc_565261;

loc_56525F:
	xor_(&ts->esi, ts->esi);

loc_565261:
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_56526A;
    }
	lea(mv, &ts->eax, x86::mem(ts->edi - 0x4, 4));
	goto loc_56526C;

loc_56526A:
	xor_(&ts->eax, ts->eax);

loc_56526C:
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5654C0;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_530D90(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_56525F;
    }
	add(&ts->esi, 0xFFFFFFFC);
	goto loc_565261;

loc_56528E:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_565297;
    }
	lea(mv, &ts->esi, x86::mem(ts->eax - 0x4, 4));
	goto loc_5652A0;

loc_565297:
	xor_(&ts->esi, ts->esi);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_5652A0:
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_5652A9;
    }
	lea(mv, &ts->eax, x86::mem(ts->edi - 0x4, 4));
	goto loc_5652AB;

loc_5652A9:
	xor_(&ts->eax, ts->eax);

loc_5652AB:
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5654C0;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_530D90(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_565297;
    }
	add(&ts->esi, 0xFFFFFFFC);
	goto loc_5652A0;

loc_5652CD:
	cmp(&ts->eflags, ts->esi, 0x911AB364);
	if (!ts->eflags.zero) {
        goto loc_5654C0;
    }

loc_5652D9:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x54, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_5652E5;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->edx + 0x28, 4));

loc_5652E5:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50B840(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_565302;
    }
	mov(mv, x86::mem(ts->eax + 0x10, 4), 0x0);

loc_565302:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C60(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x7FA214, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F970);
	push(mv, &ts->esp, 0x79C558);
	push(mv, &ts->esp, ts->edx);
	game::sub_5426C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x7FA214, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x731BF236);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x28);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_565348:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x150, 4));
	cmp(mv, &ts->eflags, ts->ecx, x86::mem(0x8651AC, 4));
	if (ts->eflags.zero) {
        goto loc_5654C0;
    }
	mov(mv, &ts->al, x86::mem(0x83A7A4, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_5654C0;
    }
	mov(mv, x86::mem(ts->edi + 0x14C, 1), 0x1);
	mov(mv, &ts->edx, x86::mem(0x83A64C, 4));
	mov(mv, &ts->eax, x86::mem(0x8900AC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	game::sub_5F6C20(ts, mv);
	push(mv, &ts->esp, 0x790000);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5653A3;
    }
	push(mv, &ts->esp, 0x790000);
	game::sub_5379A0(ts, mv);
	add(&ts->esp, 0x4);

loc_5653A3:
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	push(mv, &ts->esp, 0x1);
	game::sub_5F4240(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_5653B6:
	cmp(&ts->eflags, ts->esi, 0xC98356BA);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_565494;
    }
	if (ts->eflags.zero) {
        goto loc_56542F;
    }
	cmp(&ts->eflags, ts->esi, 0xC519BFC0);
	if (ts->eflags.zero) {
        goto loc_565190;
    }
	cmp(&ts->eflags, ts->esi, 0xC519BFC3);
	if (!ts->eflags.zero) {
        goto loc_5654C0;
    }

loc_5653DC:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x54, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x68, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_510120(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->eax);
	game::sub_558430(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_565400:
	xor_(&ts->esi, ts->esi);

loc_565402:
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_56540B;
    }
	lea(mv, &ts->eax, x86::mem(ts->edi - 0x4, 4));
	goto loc_56540D;

loc_56540B:
	xor_(&ts->eax, ts->eax);

loc_56540D:
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5654C0;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_530D90(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_565400;
    }
	add(&ts->esi, 0xFFFFFFFC);
	goto loc_565402;

loc_56542F:
	mov(mv, &ts->al, x86::mem(ts->edi + 0x14C, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5654C0;
    }
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_565450;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_5376F0(ts, mv);

loc_565450:
	mov(mv, &ts->eax, x86::mem(0x83A644, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_56547B;
    }
	mov(mv, &ts->ecx, x86::mem(0x83A7A0, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50D2D0(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x7FA214, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_537950(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56547B:
	mov(mv, &ts->eax, x86::mem(0x7FA214, 4));
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, ts->eax);
	game::sub_537950(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_565494:
	cmp(&ts->eflags, ts->esi, 0xE1FDE1D1);
	if (!ts->eflags.zero) {
        goto loc_5654C0;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->edi + 0x14C, 1), 0x1);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50B840(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5654C0;
    }
	mov(mv, x86::mem(ts->eax + 0x10, 4), 0x0);

loc_5654C0:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);
}

void sub_5654D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_5655C1;
    }
	if (ts->eflags.zero) {
        goto loc_5655B2;
    }
	cmp(&ts->eflags, ts->eax, 0x911C0A4B);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_565584;
    }
	if (ts->eflags.zero) {
        goto loc_56555A;
    }
	cmp(&ts->eflags, ts->eax, 0x72619778);
	if (ts->eflags.zero) {
        goto loc_565556;
    }
	cmp(&ts->eflags, ts->eax, 0x911AB364);
	if (!ts->eflags.zero) {
        goto loc_565749;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C60(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x7FA214, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F970);
	push(mv, &ts->esp, 0x79C558);
	push(mv, &ts->esp, ts->edx);
	game::sub_5426C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x7FA214, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x731BF236);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x28);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_565556:
	push(mv, &ts->esp, 0x1);
	goto loc_56555C;

loc_56555A:
	push(mv, &ts->esp, 0xFFFFFFFF);

loc_56555C:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->edx + 0x20, 4));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_565749;
    }
	mov(mv, &ts->eax, x86::mem(0x7FA214, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xE15F62F8);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_565584:
	cmp(&ts->eflags, ts->eax, 0x9120409E);
	if (ts->eflags.zero) {
        goto loc_5655A3;
    }
	cmp(&ts->eflags, ts->eax, 0x9803F6E2);
	if (!ts->eflags.zero) {
        goto loc_565749;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->edx + 0x24, 4));
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_5655A3:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	call(ts, mv, x86::mem(ts->eax + 0x1C, 4));
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_5655B2:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->edx + 0x1C, 4));
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_5655C1:
	cmp(&ts->eflags, ts->eax, 0xC519BFC3);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_5656BE;
    }
	if (ts->eflags.zero) {
        goto loc_565680;
    }
	cmp(&ts->eflags, ts->eax, 0xB5AF2461);
	if (ts->eflags.zero) {
        goto loc_565626;
    }
	cmp(&ts->eflags, ts->eax, 0xC519BFC0);
	if (!ts->eflags.zero) {
        goto loc_565749;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x50, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_565749;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x839C40);
	game::sub_50F9B0(ts, mv);
	mov(&ts->ecx, 0x839C40);
	game::sub_50FDA0(ts, mv);
	mov(&ts->ecx, 0x839C40);
	game::sub_50FDD0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->edx + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_565626:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	cmp(mv, &ts->eflags, ts->ecx, x86::mem(0x8651AC, 4));
	if (ts->eflags.zero) {
        goto loc_565749;
    }
	mov(mv, &ts->al, x86::mem(0x83A7A4, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_565749;
    }
	mov(&ts->ecx, 0x839C40);
	mov(mv, x86::mem(ts->esi + 0x4D, 1), 0x1);
	game::sub_50FDD0(ts, mv);
	push(mv, &ts->esp, 0x790000);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56566E;
    }
	push(mv, &ts->esp, 0x790000);
	game::sub_5379A0(ts, mv);
	add(&ts->esp, 0x4);

loc_56566E:
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	push(mv, &ts->esp, 0x1);
	game::sub_5F4240(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_565680:
	mov(mv, &ts->eax, x86::mem(0x83A648, 4));
	sub(&ts->eax, 0x4);
	if (ts->eflags.zero) {
        goto loc_5656A2;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_56569B;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_565694;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_5656A7;

loc_565694:
	mov(&ts->eax, 0x46B41BB8);
	goto loc_5656A7;

loc_56569B:
	mov(&ts->eax, 0xCD085170);
	goto loc_5656A7;

loc_5656A2:
	mov(&ts->eax, 0xDACF52C1);

loc_5656A7:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->edx);
	game::sub_558430(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_5656BE:
	cmp(&ts->eflags, ts->eax, 0xC98356BA);
	if (ts->eflags.zero) {
        goto loc_5656F2;
    }
	cmp(&ts->eflags, ts->eax, 0xE1FDE1D1);
	if (!ts->eflags.zero) {
        goto loc_565749;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4D, 1), 0x1);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50B840(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_565749;
    }
	mov(mv, x86::mem(ts->eax + 0x10, 4), 0x0);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_5656F2:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x4D, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_565749;
    }
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_56570C;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_5376F0(ts, mv);

loc_56570C:
	mov(mv, &ts->eax, x86::mem(0x83A644, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_565735;
    }
	mov(mv, &ts->eax, x86::mem(0x83A7A0, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50D2D0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x7FA214, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537950(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_565735:
	mov(mv, &ts->edx, x86::mem(0x7FA214, 4));
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, ts->edx);
	game::sub_537950(ts, mv);
	add(&ts->esp, 0x8);

loc_565749:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);
}

void sub_565750(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x778531);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x908);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x8, 4));
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->esi);
	game::sub_551DE0(ts, mv);
	xor_(&ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esi, 4), 0x79D830);
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x58, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x5C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x64, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x68, 4), ts->ebx);
	mov(mv, &ts->edi, x86::mem(ts->edi + 0x4, 4));
	mov(mv, x86::mem(ts->edi + 0xAC, 1), ts->bl);
	mov(mv, &ts->eax, x86::mem(0x8384D8, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x91C, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5657E1;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x6C, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_5657E1;
    }
	cmp(mv, &ts->eflags, x86::mem(0x8384DC, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_5657E1;
    }
	mov(&ts->edi, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->eax + 0x6C, 1), ts->bl);
	game::sub_542990(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x2BAC0CEE);
	push(mv, &ts->esp, ts->edi);
	game::sub_4954E0(ts, mv);
	add(&ts->esp, 0x8);

loc_5657E1:
	game::sub_5BE190(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x83A9D8, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_5657F6;
    }
	mov(&ts->edi, 0x1);
	goto loc_56581C;

loc_5657F6:
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_565802;
    }
	mov(&ts->edi, 0x2);
	goto loc_56581C;

loc_565802:
	cmp(&ts->eflags, ts->eax, 0x2);
	if (!ts->eflags.zero) {
        goto loc_56580E;
    }
	mov(&ts->edi, 0x4);
	goto loc_56581C;

loc_56580E:
	xor_(&ts->ecx, ts->ecx);
	cmp(&ts->eflags, ts->eax, 0x3);
	setnz(ts->eflags, &ts->cl);
	dec(&ts->ecx);
	and_(&ts->ecx, 0x8);
	mov(&ts->edi, ts->ecx);

loc_56581C:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_565838;
    }
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->edi);

loc_565838:
	push(mv, &ts->esp, ts->ebx);
	game::sub_4AC9B0(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->ecx, 0x832DAC);
	mov(mv, x86::mem(0x7F68B4, 4), ts->ebx);
	game::sub_488AE0(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x70, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x71, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x72, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x74, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x6C, 4), 0x1);
	mov(mv, x86::mem(ts->esi + 0x80, 1), ts->bl);
	game::sub_510C90(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, 0x863780);
	game::sub_510940(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x791898);
	push(mv, &ts->esp, ts->edi);
	game::sub_4954C0(ts, mv);
	push(mv, &ts->esp, 0x79D3BC);
	push(mv, &ts->esp, ts->edi);
	game::sub_4954C0(ts, mv);
	push(mv, &ts->esp, 0x791888);
	push(mv, &ts->esp, ts->edi);
	game::sub_4954C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xB8A7C6CF);
	push(mv, &ts->esp, ts->eax);
	game::sub_495520(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDE02CF84);
	push(mv, &ts->esp, 0xB8A7C6CF);
	push(mv, &ts->esp, ts->eax);
	game::sub_495460(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x69BA0838);
	push(mv, &ts->esp, ts->eax);
	game::sub_495520(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x34);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5658FD;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5658FD;
    }
	push(mv, &ts->esp, 0x69BA0838);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5658FD;
    }
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	goto loc_565918;

loc_5658FD:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_565962;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x69BA0838);
	game::sub_52C570(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);

loc_565918:
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_565962;
    }
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x4C, 4));
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_565962;
    }

loc_565923:
	push(mv, &ts->esp, 0x78F9D4);
	game::sub_505450(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x30, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_565940;
    }
	mov(mv, &ts->edi, x86::mem(ts->edi + 0x4, 4));
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_565923;
    }
	goto loc_565962;

loc_565940:
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_565962;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	cmp(mv, &ts->eflags, ts->edi, x86::mem(ts->ecx + 0x54, 4));
	if (ts->eflags.zero) {
        goto loc_56595F;
    }
	mov(mv, x86::mem(ts->ecx + 0x54, 4), ts->edi);
	game::sub_517720(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x54, 4));
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ebx);

loc_56595F:
	mov(mv, x86::mem(ts->edi + 0x10, 4), ts->ebx);

loc_565962:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	cmp(&ts->eflags, ts->edi, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x78, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_565989;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_565989;
    }
	push(mv, &ts->esp, 0x69BA0838);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_5659A4;
    }

loc_565989:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5659A2;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x69BA0838);
	game::sub_52C570(ts, mv);
	goto loc_5659A4;

loc_5659A2:
	xor_(&ts->eax, ts->eax);

loc_5659A4:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x30, 4));
	mov(mv, x86::mem(ts->esi + 0x7C, 4), ts->eax);
	game::sub_5AC6E0(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0xFFFFFFFF);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x30, 4));
	mov(mv, x86::mem(ts->esp + 0x92C, 1), 0x1);
	game::sub_610270(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x1);
	mov(mv, &ts->eax, x86::mem(0x863480, 4));
	mov(mv, x86::mem(ts->esp + 0x91C, 1), 0x2);
	if (ts->eflags.zero) {
        goto loc_5659E1;
    }
	mov(mv, &ts->eax, x86::mem(0x83AAB8, 4));

loc_5659E1:
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x83AD90);
	game::sub_503510(ts, mv);
	mov(&ts->edi, ts->eax);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_565A07;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));

loc_565A07:
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, 0x2);
	push(mv, &ts->esp, ts->edx);
	game::sub_4D8EC0(ts, mv);
	add(&ts->esp, 0xC);
	game::sub_4A78B0(ts, mv);
	push(mv, &ts->esp, 0x78FCD8);
	mov(&ts->ecx, 0x8637B0);
	game::sub_51BB70(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_565A4C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_565A4C;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x14, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_565A4C;
    }
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0xAD4BBDC);
	mov(&ts->ecx, ts->eax);
	game::sub_55B5C0(ts, mv);

loc_565A4C:
	push(mv, &ts->esp, 0x799FAC);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_565A75;
    }
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_565A75;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x799FAC);
	push(mv, &ts->esp, ts->ebx);
	game::sub_555D00(ts, mv);

loc_565A75:
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x50, 4), ts->ebx);
	game::sub_523D00(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x3A4, 4));
	mov(mv, x86::mem(ts->esp + 0x91C, 1), ts->bl);
	game::nullsub_1(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x914, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_4017F0:
	add(&ts->ecx, 0x374);
	goto nullsub_1;

loc_778510:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x904, 4));
	goto sub_510D40;

loc_77851B:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x8F0, 4));
	goto loc_4017F0;

loc_778526:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x900, 4));
	goto sub_401800;

SEH_565750:
	mov(&ts->eax, 0x7E3AA0);
	goto ___CxxFrameHandler;
}

void sub_565AB0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776FE8);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x79D830);
	push(mv, &ts->esp, 0x799FAC);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x0);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_565B00;
    }
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_565B00;
    }
	push(mv, &ts->esp, 0x799FAC);
	game::sub_5376F0(ts, mv);

loc_565B00:
	push(mv, &ts->esp, 0x78FCD8);
	mov(&ts->ecx, 0x8637B0);
	game::sub_51BB70(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_565B30;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x18, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_565B30;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x14, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_565B30;
    }
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x18883F75);
	game::sub_55B5C0(ts, mv);

loc_565B30:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(0x7F68B4, 4), 0x1);
	mov(mv, x86::mem(ts->esi, 4), 0x79AC00);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_776FE0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

SEH_569E80:
	mov(&ts->eax, 0x7E3CEC);
	goto ___CxxFrameHandler;
}

void sub_565B50(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0x911AB364);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_565CAF;
    }
	if (ts->eflags.zero) {
        goto loc_565C63;
    }
	cmp(&ts->eflags, ts->eax, 0x2B46FE08);
	if (ts->eflags.zero) {
        goto loc_565C23;
    }
	cmp(&ts->eflags, ts->eax, 0x35F8620B);
	if (ts->eflags.zero) {
        goto loc_565BA7;
    }
	cmp(&ts->eflags, ts->eax, 0x42317A19);
	if (!ts->eflags.zero) {
        goto loc_565D7F;
    }
	mov(&ts->ecx, 0x832DAC);
	game::sub_488B10(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x832DAC);
	game::sub_4889D0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x51, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_565BA7:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x50, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_565D7F;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, 0x79D84C);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x1B0);
	push(mv, &ts->esp, 0x140);
	mov(&ts->ecx, 0x832DAC);
	game::sub_4889F0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_565D7F;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, x86::mem(ts->esi + 0x50, 1), 0x1);
	mov(mv, &ts->edi, x86::mem(0x832DB4, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x832DAC);
	game::sub_5BA030(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_523C70(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x2);
	game::sub_4A95B0(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x2B46FE08);
	push(mv, &ts->esp, 0x42317A19);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xCC1);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->esi);
	game::sub_4A3100(ts, mv);
	add(&ts->esp, 0x2C);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_565C23:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x50, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_565C40;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x832DAC);
	game::sub_488AA0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x50, 1), 0x0);
	mov(mv, x86::mem(ts->esi + 0x51, 1), 0x0);

loc_565C40:
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_565D7F;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x799F94);
	push(mv, &ts->esp, ts->edx);
	game::sub_5377A0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_565C63:
	push(mv, &ts->esp, 0x790000);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_565C8C;
    }
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_565D7F;
    }
	push(mv, &ts->esp, 0x790000);
	game::sub_5376F0(ts, mv);

loc_565C8C:
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_565D7F;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x799F94);
	push(mv, &ts->esp, ts->eax);
	game::sub_5377A0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_565CAF:
	cmp(&ts->eflags, ts->eax, 0x9803F6E2);
	if (ts->eflags.zero) {
        goto loc_565D0A;
    }
	cmp(&ts->eflags, ts->eax, 0xC98356BA);
	if (!ts->eflags.zero) {
        goto loc_565D7F;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x50, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_565D7F;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x51, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	if (ts->eflags.zero) {
        goto loc_565D7F;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x832DAC);
	game::sub_4889D0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x24, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x79D840);
	push(mv, &ts->esp, ts->edi);
	game::sub_495400(ts, mv);
	push(mv, &ts->esp, 0x79D840);
	push(mv, &ts->esp, ts->edi);
	game::sub_495500(ts, mv);
	add(&ts->esp, 0x14);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_565D0A:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1C7FCF8B);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A60(ts, mv);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8763D8, 4));
	add(&ts->esp, 0x8);
	mov(&ts->edi, ts->eax);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78DA30, 4));
	push(mv, &ts->esp, ts->edi);
	sub(&ts->esp, 0x8);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8763D4, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x797D50, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_52D020(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	mov(&ts->ecx, ts->edi);
	push(mv, &ts->esp, 0x0);
	if (ts->eflags.zero) {
        goto loc_565D57;
    }
	push(mv, &ts->esp, 0xA3E4657B);
	goto loc_565D5C;

loc_565D57:
	push(mv, &ts->esp, 0x5BAB0FC0);

loc_565D5C:
	game::sub_52B030(ts, mv);
	push(mv, &ts->esp, ts->edi);
	game::sub_52D100(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_565D7F;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x911AB364);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);

loc_565D7F:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);
}

void sub_565D90(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	sub(&ts->esp, 0x1C);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x10C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_52D100(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_565DDE;
    }
	movsx(mv, &ts->eax, x86::mem(0x8381AB, 1));
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	mov(mv, &ts->bl, x86::mem(0x83AA58, 1));
	if (ts->eflags.zero) {
        goto loc_565DCF;
    }
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_458520(ts, mv);

loc_565DCF:
	xor_(&ts->ecx, ts->ecx);
	test(&ts->eflags, ts->bl, ts->bl);
	setz(ts->eflags, &ts->cl);
	mov(mv, x86::mem(0x83AA58, 4), ts->ecx);
	goto loc_565E1B;

loc_565DDE:
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x110, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_52D100(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_565E2D;
    }
	movsx(mv, &ts->eax, x86::mem(0x8381C6, 1));
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	mov(mv, &ts->bl, x86::mem(0x83AA58, 1));
	if (ts->eflags.zero) {
        goto loc_565E0F;
    }
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_458520(ts, mv);

loc_565E0F:
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->bl, ts->bl);
	setz(ts->eflags, &ts->al);
	mov(mv, x86::mem(0x83AA58, 4), ts->eax);

loc_565E1B:
	mov(&ts->ecx, ts->edi);
	game::sub_524120(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	game::sub_479220(ts, mv);

loc_565E2D:
	mov(mv, &ts->al, x86::mem(ts->edi + 0x108, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_565E44;
    }
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x4C, 4));
	game::sub_54EB80(ts, mv);
	goto loc_565EE9;

loc_565E44:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x78, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x1C, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8763D4, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->edx);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x797D50, 4));
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xC47A0000);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0x44FA0000);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8763D8, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x1C, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78DA30, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x18, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7875B8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	game::sub_50CD00(ts, mv);
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_565EB7;
    }
	push(mv, &ts->esp, 0x72619778);
	mov(&ts->ecx, ts->edi);
	game::sub_550F10(ts, mv);

loc_565EB7:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79D85C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->ebx);
	game::sub_50CD00(ts, mv);
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_565EE9;
    }
	push(mv, &ts->esp, 0x911C0A4B);
	mov(&ts->ecx, ts->edi);
	game::sub_550F10(ts, mv);

loc_565EE9:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x54, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_56600C;
    }
	lea(mv, &ts->esi, x86::mem(ts->eax - 0x4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_56600C;
    }
	nop();

loc_565F00:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x1C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x18, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x34, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x24, 4));
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->eax);
	mov(mv, &ts->al, x86::mem(0x8763F0, 1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8763D4, 4));
	test(&ts->eflags, ts->al, ts->al);
	movzx(mv, &ts->eax, x86::mem(0x8763F2, 1));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->edx);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x797D50, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8763D8, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78DA30, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	if (ts->eflags.zero) {
        goto loc_565F56;
    }
	movzx(mv, &ts->eax, x86::mem(0x8763F5, 1));

loc_565F56:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_565F7F;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_52D020(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_565F7F;
    }
	push(mv, &ts->esp, 0x9120409E);
	mov(&ts->ecx, ts->edi);
	game::sub_53DEB0(ts, mv);
	goto loc_565FE4;

loc_565F7F:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x38, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_52D100(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_565F9D;
    }
	push(mv, &ts->esp, 0xB5971BF1);
	mov(&ts->ecx, ts->edi);
	game::sub_53DEB0(ts, mv);
	goto loc_565FE4;

loc_565F9D:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CDB0(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_565FE4;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x8637B0);
	game::sub_51BB70(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_565FE4;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_565FE4;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_565FE4;
    }
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xC407210);
	mov(&ts->ecx, ts->eax);
	game::sub_55B5C0(ts, mv);

loc_565FE4:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x58, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_565FF0;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_565FF2;

loc_565FF0:
	xor_(&ts->eax, ts->eax);

loc_565FF2:
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_56600C;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_566005;
    }
	add(&ts->esi, 0xFFFFFFFC);
	goto loc_565F00;

loc_566005:
	xor_(&ts->esi, ts->esi);
	goto loc_565F00;

loc_56600C:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_566020(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(0x8650A8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_56603D;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xC3960EB9);
	mov(&ts->ecx, 0x8637B0);
	game::sub_55DC50(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_56603D:
	push(mv, &ts->esp, 0x863760);
	mov(mv, x86::mem(0x8383AC, 4), 0x1);
	mov(mv, x86::mem(0x8383A8, 4), 0x0);
	mov(mv, x86::mem(0x8161EC, 4), 0x4FE2B0);
	mov(mv, x86::mem(0x8161F0, 4), 0x4FE320);
	game::sub_6F4880(ts, mv);
	push(mv, &ts->esp, 0x138);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_566089;
    }
	mov(&ts->ecx, ts->eax);
	game::sub_4FE450(ts, mv);
	goto loc_56608B;

loc_566089:
	xor_(&ts->eax, ts->eax);

loc_56608B:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(0x8383A4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(&ts->eax, ts->edx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x4, 1), 0x0);
	lea(mv, &ts->esi, x86::mem(ts->eax + 0x1, 4));

loc_5660A5:
	mov(mv, &ts->cl, x86::mem(ts->eax, 1));
	inc(&ts->eax);
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_5660A5;
    }
	sub(&ts->eax, ts->esi);
	cmp(mv, &ts->eflags, x86::mem(ts->eax + (ts->edx) - 0x1, 1), 0x36);
	pop(mv, &ts->esp, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_5660BB;
    }
	mov(mv, x86::mem(ts->esp, 1), 0x1);

loc_5660BB:
	mov(mv, &ts->eax, x86::mem(ts->esp, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8383A4, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_54BF70(ts, mv);
	game::std__codecvt_base__do_always_noconv_void_(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5660ED;
    }
	game::sub_5B7B10(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5660ED;
    }
	push(mv, &ts->esp, 0x0);
	game::sub_5BE1E0(ts, mv);
	add(&ts->esp, 0x4);

loc_5660ED:
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_5660F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x8383AC, 4));
	sub(&ts->esp, 0x100);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_566230;
    }
	mov(mv, &ts->ecx, x86::mem(0x8383A4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_566230;
    }
	mov(mv, &ts->eax, x86::mem(0x8651AC, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(0x8709FC, 4));
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_566123;
    }
	mov(mv, x86::mem(0x8709FC, 4), ts->eax);

loc_566123:
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	game::sub_531DF0(ts, mv);
	movzx(&ts->esi, ts->al);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_566136;
    }
	mov(&ts->esi, 0x1);

loc_566136:
	mov(mv, &ts->eax, x86::mem(0x8650D0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_566166;
    }
	push(mv, &ts->esp, 0x7);
	push(mv, &ts->esp, 0x4);
	game::sub_57E3B0(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_566164;
    }
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_566164;
    }

loc_566155:
	mov(mv, &ts->ecx, x86::mem(0x8383A4, 4));
	game::sub_531DF0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_566155;
    }

loc_566164:
	mov(&ts->esi, ts->edi);

loc_566166:
	push(mv, &ts->esp, 0x7);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, ts->esi);
	game::sub_57D670(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_56622E;
    }
	mov(mv, &ts->eax, x86::mem(0x8383A4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x24, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x100);
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_43DC00(ts, mv);
	add(&ts->esp, 0xC);
	game::nullsub_1(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8383A4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(0x8383AC, 4), 0x0);
	mov(&ts->ebx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5661E0;
    }
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x2C, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	lea(mv, &ts->edi, x86::mem(ts->eax + 0x2C, 4));
	if (ts->eflags.zero) {
        goto loc_5661D2;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_6FEB46(ts, mv);
	push(mv, &ts->esp, ts->esi);
	call(ts, mv, x86::mem(0x8161F0, 4));
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->edi, 4), 0x0);

loc_5661D2:
	game::sub_5CD1A0(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_5661E0:
	mov(mv, &ts->eax, x86::mem(0x88F19C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->eax, x86::mem(0x8383A0, 4));
	mov(mv, x86::mem(0x8383A4, 4), 0x0);
	pop(mv, &ts->esp, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_566204;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);
	goto loc_566213;

loc_566204:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_566213;
    }
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x88EB00);
	game::sub_5D6130(ts, mv);

loc_566213:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xC3960EB9);
	mov(&ts->ecx, 0x8637B0);
	mov(mv, x86::mem(0x8383A0, 4), 0x0);
	game::sub_55DC50(ts, mv);

loc_56622E:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);

loc_566230:
	add(&ts->esp, 0x100);
	retn(mv, &ts->esp);
}

void sub_566240(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	sub(&ts->esp, 0x40);
	cmp(&ts->eflags, ts->ecx, 0x7);
	if (!ts->eflags.zero) {
        goto loc_5662AF;
    }
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x24, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->esi);
	game::sub_51C580(ts, mv);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->edi, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, 0x40);
	push(mv, &ts->esp, ts->eax);
	game::sub_51C740(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_6F909D(ts, mv);
	add(&ts->esp, 0x14);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_566294;
    }
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edx);
	game::sub_566020(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x40);
	retn(mv, &ts->esp, 0x4);

loc_566294:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xC3960EB9);
	mov(&ts->ecx, 0x8637B0);
	game::sub_55DC50(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x40);
	retn(mv, &ts->esp, 0x4);

loc_5662AF:
	mov(&ts->al, 0x1);
	add(&ts->esp, 0x40);
	retn(mv, &ts->esp, 0x4);
}

void sub_5662C0(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(0x8654A4, 4), 0x6);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_5662E7;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865154, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_5662E7;
    }
	mov(&ts->eax, 0x1);
	goto loc_5662E9;

loc_5662E7:
	xor_(&ts->eax, ts->eax);

loc_5662E9:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865198, 4));
	push(mv, &ts->esp, ts->eax);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78AAA0, 4));
	game::__ftol2(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_558C00(ts, mv);
	xor_(&ts->esi, ts->esi);

loc_566306:
	push(mv, &ts->esp, ts->esi);
	game::sub_571AC0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x7F9414, 4));
	movzx(&ts->eax, ts->al);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_566344;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_571A60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_566344;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_571AC0(ts, mv);
	movzx(&ts->ecx, ts->al);
	mov(mv, x86::mem(0x7F9414, 4), ts->ecx);
	add(&ts->esp, 0x4);
	mov(&ts->ecx, ts->edi);
	game::sub_50C7E0(ts, mv);

loc_566344:
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, 0x2);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_566306;
    }
	mov(mv, &ts->esi, x86::mem(0x836498, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_56636D;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865198, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784550, 4));
	game::__ftol2(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_4F4A20(ts, mv);

loc_56636D:
	game::sub_5660F0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8384BC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero) {
        goto loc_56638C;
    }
	game::sub_4ACA40(ts, mv);
	mov(mv, x86::mem(0x8384BC, 4), 0x0);

loc_56638C:
	mov(mv, &ts->eax, x86::mem(0x8384C0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_5663A9;
    }
	push(mv, &ts->esp, 0x0);
	game::sub_4AC9B0(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(0x8384C0, 4), 0x0);

locret_5663A9:
	retn(mv, &ts->esp);
}

void sub_5663B0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->ecx, 0x85AD40);
	game::sub_551320(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_5663C9;
    }
	game::sub_5662C0(ts, mv);

loc_5663C9:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xC98356BA);
	mov(&ts->ecx, 0x8637B0);
	game::sub_55DC50(ts, mv);
	mov(&ts->ecx, 0x8763D0);
	game::sub_5BF940(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto locret_5663F9;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x9803F6E2);
	mov(&ts->ecx, 0x8637B0);
	game::sub_55DC50(ts, mv);

locret_5663F9:
	retn(mv, &ts->esp);
}

void sub_566400(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7F91C4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_56642F;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x4, 4), 0x4);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, 0x8637B0);
	if (ts->eflags.zero) {
        goto loc_566425;
    }
	push(mv, &ts->esp, 0x32C72D8F);
	game::sub_55DC50(ts, mv);
	retn(mv, &ts->esp);

loc_566425:
	push(mv, &ts->esp, 0xFC946BFA);
	game::sub_55DC50(ts, mv);

locret_56642F:
	retn(mv, &ts->esp);
}

void sub_566430(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x778554);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x1E4);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_56647E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_55E820(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_56647E:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_778540:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79D860);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_566430:
	mov(&ts->eax, 0x7E3AC4);
	goto ___CxxFrameHandler;
}

void sub_566490(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7775C8);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x24);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x22, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	if (ts->eflags.zero) {
        goto loc_5664F6;
    }
	cmp(&ts->eflags, ts->eax, 0xC407210);
	if (ts->eflags.zero) {
        goto loc_5664C9;
    }
	cmp(&ts->eflags, ts->eax, 0x406415E3);
	if (!ts->eflags.zero) {
        goto loc_5664F6;
    }

loc_5664C9:
	movsx(mv, &ts->eax, x86::mem(0x8381E1, 1));
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_567859;
    }
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_458520(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_5664F6:
	cmp(&ts->eflags, ts->eax, 0x911AB364);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_56731F;
    }
	if (ts->eflags.zero) {
        goto loc_5671CA;
    }
	cmp(&ts->eflags, ts->eax, 0x34F8A1DE);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_5665D6;
    }
	if (ts->eflags.zero) {
        goto loc_5665BC;
    }
	cmp(&ts->eflags, ts->eax, 0x1FAB5998);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_5665B2;
    }
	if (ts->eflags.zero) {
        goto loc_5674C8;
    }
	cmp(&ts->eflags, ts->eax, 0x9F00F07);
	if (ts->eflags.zero) {
        goto loc_56653C;
    }
	cmp(&ts->eflags, ts->eax, 0xC407210);
	goto loc_5665F7;

loc_56653C:
	mov(&ts->ecx, ts->esi);
	game::sub_53A2E0(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_50E510(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x2C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->ebx, x86::mem(ts->eax + 0xC, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, 0x85AD40);
	game::sub_5289F0(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, 0x838980);
	game::sub_55C230(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x861E74, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, 0xEB3A688A);
	push(mv, &ts->esp, ts->edx);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x10);

loc_566588:
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, 0x1);
	mov(mv, x86::mem(ts->ecx + 0x2F, 1), 0x1);
	game::sub_52EB90(ts, mv);
	push(mv, &ts->esp, 0x0);

loc_566598:
	mov(&ts->ecx, ts->esi);
	game::sub_55EF80(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_5665B2:
	cmp(&ts->eflags, ts->eax, 0x34DC1BEC);
	goto loc_5674C2;

loc_5665BC:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xDF, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_5665D6:
	cmp(&ts->eflags, ts->eax, 0x51123592);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_5671A3;
    }
	if (ts->eflags.zero) {
        goto loc_566F02;
    }
	cmp(&ts->eflags, ts->eax, 0x35F8620B);
	if (ts->eflags.zero) {
        goto loc_566EB5;
    }
	cmp(&ts->eflags, ts->eax, 0x406415E3);

loc_5665F7:
	if (!ts->eflags.zero) {
        goto loc_567857;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x50, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x50, 4));
	cmp(&ts->eflags, ts->edx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_567857;
    }
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x22, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_567857;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1D4, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_56663D;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0xC, 4), 0x1D);
	if (!ts->eflags.zero) {
        goto loc_56663D;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_53A310(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x8);
	game::sub_51DE30(ts, mv);
	goto loc_567854;

loc_56663D:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1D5, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_56666C;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0xC, 4), 0x5E);
	if (!ts->eflags.zero) {
        goto loc_566664;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_53A3D0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x8);
	game::sub_51DE30(ts, mv);
	goto loc_567854;

loc_566664:
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_566A29;
    }

loc_56666C:
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0xC, 4), 0x60);
	if (!ts->eflags.zero) {
        goto loc_56676E;
    }
	push(mv, &ts->esp, 0x60);
	mov(&ts->ecx, 0x8392C0);
	game::sub_6102F0(ts, mv);
	movzx(mv, &ts->edx, x86::mem(ts->eax + 0x2, 2));
	movzx(mv, &ts->ecx, x86::mem(ts->eax, 2));
	shl(&ts->edx, 0x10);
	or_(&ts->edx, ts->ecx);
	cmp(&ts->eflags, ts->edx, 0xC8D313AC);
	if (!ts->eflags.zero) {
        goto loc_5666E8;
    }
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x1);
	mov(&ts->edi, 0x2B950C36);
	if (!ts->eflags.zero) {
        goto loc_5666BA;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x60);
	mov(&ts->ecx, 0x838980);
	game::sub_521BE0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_5666BA;
    }
	mov(&ts->edi, 0x3175F2B0);

loc_5666BA:
	mov(&ts->ecx, ts->esi);
	game::sub_53A2B0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xB4623F67);
	push(mv, &ts->esp, 0xB4623F67);
	push(mv, &ts->esp, 0x51123592);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->edx);
	goto loc_566718;

loc_5666E8:
	mov(&ts->ecx, ts->esi);
	game::sub_53A2B0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xA645A29E);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xB4623F67);
	push(mv, &ts->esp, 0xB4623F67);
	push(mv, &ts->esp, 0x51123592);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->eax);

loc_566718:
	game::sub_558790(ts, mv);
	add(&ts->esp, 0x24);
	mov(mv, x86::mem(0x838970, 4), 0xB4623F67);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));

loc_56672D:
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(ts->ecx + 0x2F, 1), 0x0);
	game::sub_52EB90(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FEF4);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x8);
	game::sub_51DE30(ts, mv);
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56676E:
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_566A29;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0xC, 4), 0x9);
	if (!ts->eflags.zero) {
        goto loc_566873;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1D9, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_566B46;
    }
	mov(mv, x86::mem(ts->ebp + 0xB, 1), 0x1);
	xor_(&ts->edi, ts->edi);

loc_566794:
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x40, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x8392C0);
	game::sub_6102F0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5667B5;
    }
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x5, 1));
	and_(&ts->cl, 0x1F);
	cmp(&ts->eflags, ts->cl, 0x14);
	if (!ts->eflags.zero) {
        goto loc_5667B5;
    }
	mov(mv, x86::mem(ts->ebp + 0xB, 1), 0x0);

loc_5667B5:
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, 0x4);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_566794;
    }
	xor_(&ts->bl, ts->bl);
	xor_(&ts->edi, ts->edi);
	nop();

loc_5667C0:
	lea(mv, &ts->edx, x86::mem(ts->edi + 0x61, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x8392C0);
	game::sub_6102F0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5667D4;
    }
	mov(&ts->bl, 0x1);

loc_5667D4:
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, 0x8);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5667C0;
    }
	mov(mv, &ts->al, x86::mem(ts->ebp + 0xB, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_566B2E;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_53A2B0(ts, mv);
	test(&ts->eflags, ts->bl, ts->bl);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	if (!ts->eflags.zero) {
        goto loc_56686C;
    }
	push(mv, &ts->esp, 0xB3BBB11D);

loc_5667F8:
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->eax);
	game::sub_558430(ts, mv);
	add(&ts->esp, 0xC);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, x86::mem(0x838970, 4), 0x34DC1BEC);
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(ts->ecx + 0x2F, 1), 0x0);
	game::sub_52EB90(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xB0, 4));
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(ts->ecx + 0x2F, 1), 0x0);
	game::sub_52EB90(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79BE38);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->edx);

loc_566848:
	push(mv, &ts->esp, 0x8);
	game::sub_51DE30(ts, mv);
	add(&ts->esp, 0x18);

loc_566852:
	mov(&ts->ecx, ts->esi);
	game::sub_55EDD0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56686C:
	push(mv, &ts->esp, 0x9796DFB4);
	goto loc_5667F8;

loc_566873:
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_566A29;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0xC, 4), 0x5D);
	if (!ts->eflags.zero) {
        goto loc_566A29;
    }
	push(mv, &ts->esp, 0x6);
	mov(&ts->ecx, 0x8392C0);
	mov(&ts->bl, 0x1);
	game::sub_6102F0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5668A4;
    }
	mov(mv, &ts->al, x86::mem(ts->eax + 0x5, 1));
	shr(&ts->al, 0x5);
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, x86::mem(ts->ebp + 0xB, 1), ts->bl);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_5668A8;
    }

loc_5668A4:
	mov(mv, x86::mem(ts->ebp + 0xB, 1), 0x0);

loc_5668A8:
	xor_(&ts->edi, ts->edi);
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_5668B0:
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x40, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x8392C0);
	game::sub_6102F0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto def_5668DF;
    }
	mov(mv, &ts->cl, x86::mem(ts->ebp + 0xB, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_5668E6;
    }
	movsx(mv, &ts->eax, x86::mem(ts->eax + 0x5, 1));
	and_(&ts->eax, 0x1F);
	add(&ts->eax, 0xFFFFFFF2);
	cmp(&ts->eflags, ts->eax, 0xC);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_5668DF;
    }
	movzx(mv, &ts->edx, x86::mem(ts->eax + 0x567874, 1));
	jmp(x86::mem(0x56786C, 4));

loc_5668E6:
	mov(mv, &ts->al, x86::mem(ts->eax + 0x5, 1));
	and_(&ts->al, 0x1F);
	cmp(&ts->eflags, ts->al, 0x14);
	if (ts->eflags.zero) {
        goto def_5668DF;
    }

loc_5668EF:
	xor_(&ts->bl, ts->bl);

def_5668DF:
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, 0x4);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5668B0;
    }
	push(mv, &ts->esp, 0x5D);
	mov(&ts->ecx, 0x8392C0);
	game::sub_6102F0(ts, mv);
	movzx(mv, &ts->ecx, x86::mem(ts->eax + 0x2, 2));
	movzx(mv, &ts->edx, x86::mem(ts->eax, 2));
	shl(&ts->ecx, 0x10);
	or_(&ts->ecx, ts->edx);
	cmp(&ts->eflags, ts->ecx, 0xC8D313AC);
	if (!ts->eflags.zero) {
        goto loc_5669A3;
    }
	test(&ts->eflags, ts->bl, ts->bl);
	if (ts->eflags.zero) {
        goto loc_566971;
    }
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x1);
	mov(&ts->edi, 0x9E274DAA);
	if (!ts->eflags.zero) {
        goto loc_566943;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x5D);
	mov(&ts->ecx, 0x838980);
	game::sub_521BE0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_566943;
    }
	mov(&ts->edi, 0xB7C84DA4);

loc_566943:
	mov(&ts->ecx, ts->esi);
	game::sub_53A2B0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xB4623F67);
	push(mv, &ts->esp, 0xB4623F67);
	push(mv, &ts->esp, 0x51123592);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->eax);
	goto loc_5669D3;

loc_566971:
	mov(&ts->ecx, ts->esi);
	game::sub_53A2B0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xEE2C85BB);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xB4623F67);
	push(mv, &ts->esp, 0xB4623F67);
	push(mv, &ts->esp, 0x51123592);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->ecx);
	goto loc_5669D3;

loc_5669A3:
	mov(&ts->ecx, ts->esi);
	game::sub_53A2B0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x660BDF52);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xB4623F67);
	push(mv, &ts->esp, 0xB4623F67);
	push(mv, &ts->esp, 0x51123592);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->edx);

loc_5669D3:
	game::sub_558790(ts, mv);
	add(&ts->esp, 0x24);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, x86::mem(0x838970, 4), 0xB4623F67);
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(ts->ecx + 0x2F, 1), 0x0);
	game::sub_52EB90(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FEF4);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x8);
	game::sub_51DE30(ts, mv);
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_566A29:
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xC, 4));
	cmp(&ts->eflags, ts->eax, 0x6);
	if (!ts->eflags.zero) {
        goto loc_566B01;
    }
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x1D9, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_566B01;
    }
	push(mv, &ts->esp, 0x5D);
	mov(&ts->ecx, 0x8392C0);
	game::sub_6102F0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_566B46;
    }
	mov(mv, &ts->dl, x86::mem(ts->eax + 0x5, 1));
	shr(&ts->dl, 0x5);
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_566B46;
    }
	xor_(&ts->bl, ts->bl);
	xor_(&ts->edi, ts->edi);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_566A70:
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x40, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x8392C0);
	game::sub_6102F0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_566A8F;
    }
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x5, 1));
	and_(&ts->cl, 0x1F);
	cmp(&ts->eflags, ts->cl, 0x14);
	if (ts->eflags.zero) {
        goto loc_566A8F;
    }
	mov(&ts->bl, 0x1);

loc_566A8F:
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, 0x4);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_566A70;
    }
	test(&ts->eflags, ts->bl, ts->bl);
	if (ts->eflags.zero) {
        goto loc_566B46;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_53A2B0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x82DFD62A);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->edx);
	game::sub_558430(ts, mv);
	add(&ts->esp, 0xC);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, x86::mem(0x838970, 4), 0x34DC1BEC);
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(ts->ecx + 0x2F, 1), 0x0);
	game::sub_52EB90(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xB0, 4));
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(ts->ecx + 0x2F, 1), 0x0);
	game::sub_52EB90(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79BE38);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->ecx);
	goto loc_566848;

loc_566B01:
	cmp(&ts->eflags, ts->eax, 0x9);
	if (!ts->eflags.zero) {
        goto loc_566B46;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1D9, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_566B46;
    }
	xor_(&ts->bl, ts->bl);
	xor_(&ts->edi, ts->edi);

loc_566B14:
	lea(mv, &ts->edx, x86::mem(ts->edi + 0x61, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x8392C0);
	game::sub_6102F0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_566B28;
    }
	mov(&ts->bl, 0x1);

loc_566B28:
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, 0x8);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_566B14;
    }

loc_566B2E:
	test(&ts->eflags, ts->bl, ts->bl);
	if (ts->eflags.zero) {
        goto loc_566B46;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_53A2B0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x903854F0);
	goto loc_5667F8;

loc_566B46:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->edi, x86::mem(ts->eax + 0xC, 4));
	push(mv, &ts->esp, 0x6);
	mov(&ts->ecx, 0x8392C0);
	game::sub_6102F0(ts, mv);
	mov(&ts->ebx, ts->eax);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1D7, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_566C18;
    }
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_566C10;
    }
	test(mv, &ts->eflags, x86::mem(ts->ebx + 0x5, 1), 0xE0);
	if (ts->eflags.zero) {
        goto loc_566C10;
    }
	cmp(&ts->eflags, ts->edi, 0x1);
	if (ts->eflags.zero) {
        goto loc_566B8D;
    }
	cmp(&ts->eflags, ts->edi, 0x2);
	if (ts->eflags.zero) {
        goto loc_566B8D;
    }
	cmp(&ts->eflags, ts->edi, 0xB);
	if (!ts->eflags.zero) {
        goto loc_566C10;
    }

loc_566B8D:
	mov(&ts->ecx, ts->esi);
	game::sub_53A2B0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x2EFADF61);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->ecx);
	game::sub_558430(ts, mv);
	add(&ts->esp, 0xC);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, x86::mem(0x838970, 4), 0x34DC1BEC);
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(ts->ecx + 0x2F, 1), 0x0);
	game::sub_52EB90(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xB0, 4));
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(ts->ecx + 0x2F, 1), 0x0);
	game::sub_52EB90(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x1DA, 1), 0x1);

loc_566BDA:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79BE38);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x8);
	game::sub_51DE30(ts, mv);
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_566C10:
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_566D56;
    }

loc_566C18:
	push(mv, &ts->esp, 0x5D);
	mov(&ts->ecx, 0x8392C0);
	game::sub_6102F0(ts, mv);
	push(mv, &ts->esp, 0x9);
	mov(&ts->ecx, 0x8392C0);
	mov(&ts->edi, ts->eax);
	game::sub_6102F0(ts, mv);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_566C44;
    }
	mov(mv, &ts->cl, x86::mem(ts->edi + 0x5, 1));
	shr(&ts->cl, 0x5);
	test(&ts->eflags, ts->cl, ts->cl);
	mov(mv, x86::mem(ts->ebp + 0x13, 1), 0x1);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_566C48;
    }

loc_566C44:
	mov(mv, x86::mem(ts->ebp + 0x13, 1), 0x0);

loc_566C48:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_566C62;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x721AFF7C);
	mov(&ts->ecx, ts->eax);
	game::sub_61B500(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_566C62;
    }
	mov(&ts->dl, 0x1);
	goto loc_566C64;

loc_566C62:
	xor_(&ts->dl, ts->dl);

loc_566C64:
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_566C76;
    }
	mov(mv, &ts->al, x86::mem(ts->ebx + 0x5, 1));
	shr(&ts->al, 0x5);
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, x86::mem(ts->ebp + 0xB, 1), 0x1);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_566C7A;
    }

loc_566C76:
	mov(mv, x86::mem(ts->ebp + 0xB, 1), 0x0);

loc_566C7A:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->ebx, x86::mem(ts->ecx + 0xC, 4));
	mov(&ts->eax, 0x1010101);
	mov(&ts->ecx, 0x7);
	lea(mv, &ts->edi, x86::mem(ts->ebp - 0x30, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, &ts->al, x86::mem(ts->ebp + 0x13, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_566CCF;
    }
	mov(mv, &ts->al, x86::mem(ts->ebp + 0xB, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_566CAF;
    }
	mov(&ts->ecx, 0x7);
	xor_(&ts->eax, ts->eax);
	lea(mv, &ts->edi, x86::mem(ts->ebp - 0x30, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x1C, 1), 0x1);
	goto loc_566CCF;

loc_566CAF:
	mov(mv, x86::mem(ts->ebp - 0x1B, 1), 0x0);
	mov(mv, x86::mem(ts->ebp - 0x19, 1), 0x0);
	mov(mv, x86::mem(ts->ebp - 0x1A, 1), 0x0);
	mov(mv, x86::mem(ts->ebp - 0x16, 1), 0x0);
	mov(mv, x86::mem(ts->ebp - 0x22, 1), 0x0);
	mov(mv, x86::mem(ts->ebp - 0x21, 1), 0x0);
	mov(mv, x86::mem(ts->ebp - 0x17, 1), 0x0);
	mov(mv, x86::mem(ts->ebp - 0x18, 1), 0x0);

loc_566CCF:
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.zero) {
        goto loc_566CD7;
    }
	mov(mv, x86::mem(ts->ebp - 0x1C, 1), 0x0);

loc_566CD7:
	mov(mv, &ts->al, x86::mem(ts->ebp + (ts->ebx) - 0x30, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_566D56;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_53A2B0(ts, mv);
	cmp(&ts->eflags, ts->ebx, 0x14);
	if (!ts->eflags.zero) {
        goto loc_566CFB;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x3706F93D);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->edx);
	goto loc_566D20;

loc_566CFB:
	mov(mv, &ts->al, x86::mem(ts->ebp + 0xB, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_566D12;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xD8B8402A);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->eax);
	goto loc_566D20;

loc_566D12:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xEB587F14);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->ecx);

loc_566D20:
	game::sub_558430(ts, mv);
	add(&ts->esp, 0xC);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, x86::mem(0x838970, 4), 0x34DC1BEC);
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(ts->ecx + 0x2F, 1), 0x0);
	game::sub_52EB90(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xB0, 4));
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(ts->ecx + 0x2F, 1), 0x0);
	game::sub_52EB90(ts, mv);
	goto loc_566BDA;

loc_566D56:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1D9, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_566852;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1D7, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(&ts->ecx, ts->esi);
	if (ts->eflags.zero) {
        goto loc_566D88;
    }
	game::sub_559240(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_566D88:
	game::sub_50E510(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_567857;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x2C, 4));
	mov(mv, &ts->ebx, x86::mem(ts->ecx + 0xC, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, 0x838980);
	game::sub_50F1B0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_566DC5;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_53A2B0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDA15D7E5);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->edx);
	goto loc_566E16;

loc_566DC5:
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_566E5A;
    }
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, 0x838980);
	game::sub_521BE0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_566E5A;
    }
	test(mv, &ts->eflags, x86::mem(ts->edi + 0x5, 1), 0xE0);
	if (ts->eflags.zero) {
        goto loc_566E5A;
    }
	mov(mv, &ts->eax, x86::mem(0x861E74, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, 0x85AD40);
	mov(mv, x86::mem(ts->ebp + 0x8, 4), ts->eax);
	game::sub_514280(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(ts->ebp + 0x8, 4), ts->eax);
	mov(&ts->ecx, ts->esi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_566E2A;
    }
	game::sub_53A2B0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xD1AC60BE);
	push(mv, &ts->esp, 0x78FA24);
	push(mv, &ts->esp, ts->ecx);

loc_566E16:
	game::sub_558430(ts, mv);
	add(&ts->esp, 0xC);
	mov(mv, x86::mem(0x838970, 4), 0x34DC1BEC);
	goto loc_566E9C;

loc_566E2A:
	game::sub_53A2B0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x44B7167F);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xB4623F67);
	push(mv, &ts->esp, 0xB4623F67);
	push(mv, &ts->esp, 0x9F00F07);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->edx);
	goto loc_566E8A;

loc_566E5A:
	mov(&ts->ecx, ts->esi);
	game::sub_53A2B0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xF5AC2B2A);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xB4623F67);
	push(mv, &ts->esp, 0xB4623F67);
	push(mv, &ts->esp, 0x51123592);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->eax);

loc_566E8A:
	game::sub_558790(ts, mv);
	add(&ts->esp, 0x24);
	mov(mv, x86::mem(0x838970, 4), 0xB4623F67);

loc_566E9C:
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(ts->ecx + 0x2F, 1), 0x0);
	game::sub_52EB90(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xB0, 4));
	goto loc_56672D;

loc_566EB5:
	mov(&ts->ecx, ts->esi);
	game::sub_53A2E0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x1DB, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x7B, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0xDF, 1), 0x1);
	mov(mv, &ts->eax, x86::mem(0x838990, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_566EE3;
    }
	push(mv, &ts->esp, 0x2);
	mov(&ts->ecx, 0x8635BC);
	game::sub_5243D0(ts, mv);

loc_566EE3:
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, 0x83A9D0);
	game::sub_52A460(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_566F02:
	mov(&ts->ecx, ts->esi);
	game::sub_53A2E0(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1D5, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5670E9;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	cmp(&ts->eflags, ts->ecx, 0x60);
	if (ts->eflags.zero) {
        goto loc_566F2B;
    }
	cmp(&ts->eflags, ts->ecx, 0x5D);
	if (!ts->eflags.zero) {
        goto loc_5670E9;
    }

loc_566F2B:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x14, 4));
	lea(mv, &ts->edx, x86::mem(ts->ebp - 0x14, 4));
	mov(mv, x86::mem(ts->ebp - 0x14, 4), ts->ecx);
	mov(mv, x86::mem(ts->ebp - 0x10, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), 0x0);
	game::sub_60FEE0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8389AC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->ebp + 0x8, 4), ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	mov(&ts->ebx, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xC, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, 0x8A2B68);
	game::sub_61BA30(ts, mv);
	mov(&ts->edi, ts->eax);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_566FDE;
    }

loc_566F76:
	movsx(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 1));
	cmp(mv, &ts->eflags, ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	if (!ts->eflags.zero) {
        goto loc_566FC1;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0xC, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x838980);
	game::sub_530330(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_566FC1;
    }
	push(mv, &ts->esp, 0x10);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_566FAF;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0xC, 4), 0x0);
	goto loc_566FB1;

loc_566FAF:
	xor_(&ts->eax, ts->eax);

loc_566FB1:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x10, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x14, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);

loc_566FC1:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0xC, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x8A2B68);
	game::sub_61BA50(ts, mv);
	mov(&ts->edi, ts->eax);
	test(&ts->eflags, ts->edi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_566F76;
    }

loc_566FDE:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x8392C0);
	game::sub_6102F0(ts, mv);
	movzx(mv, &ts->ecx, x86::mem(ts->eax + 0x2, 2));
	movzx(mv, &ts->edx, x86::mem(ts->eax, 2));
	shl(&ts->ecx, 0x10);
	or_(&ts->ecx, ts->edx);
	cmp(&ts->eflags, ts->ecx, 0xC8D313AC);
	if (!ts->eflags.zero) {
        goto loc_567025;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x14, 4));
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x8, 4));
	movzx(mv, &ts->ecx, x86::mem(ts->edi + 0x2, 2));
	movzx(mv, &ts->edx, x86::mem(ts->edi, 2));
	shl(&ts->ecx, 0x10);
	or_(&ts->ecx, ts->edx);
	cmp(&ts->eflags, ts->ecx, 0xC8D313AC);
	if (!ts->eflags.zero) {
        goto loc_567045;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x8, 4));
	goto loc_567045;

loc_567025:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x14, 4));
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x8, 4));
	movzx(mv, &ts->edx, x86::mem(ts->edi + 0x2, 2));
	movzx(mv, &ts->eax, x86::mem(ts->edi, 2));
	shl(&ts->edx, 0x10);
	or_(&ts->edx, ts->eax);
	cmp(&ts->eflags, ts->edx, 0xC8D313AC);
	if (ts->eflags.zero) {
        goto loc_567045;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x8, 4));

loc_567045:
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_567076;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0xC, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x838980);
	game::sub_521BE0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_567076;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xC, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x85AD40);
	game::sub_5289F0(ts, mv);

loc_567076:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x838980);
	game::sub_55C230(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_545D30(ts, mv);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x838980);
	game::sub_521280(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, 0x1);
	mov(mv, x86::mem(ts->ecx + 0x2F, 1), 0x1);
	game::sub_52EB90(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79D790);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->esi);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x14, 4));
	mov(mv, x86::mem(ts->ebp - 0x4, 4), 0xFFFFFFFF);
	game::sub_4DEF30(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_5670E9:
	mov(&ts->ecx, ts->esi);
	game::sub_50E510(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x2C, 4));
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x1D7, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xC, 4));
	if (ts->eflags.zero) {
        goto loc_567187;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_50E510(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x2C, 4));
	mov(mv, &ts->edx, x86::mem(0x8389A8, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x838980);
	game::sub_54FDB0(ts, mv);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_567168;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x39DD714);
	mov(&ts->ecx, ts->edi);
	game::sub_61B500(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_567168;
    }
	mov(mv, x86::mem(0x839BB8, 4), ts->edi);
	mov(mv, x86::mem(0x8389A0, 4), 0x1);
	game::sub_54F980(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_55BD60(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_567168:
	game::sub_54F980(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_55BDF0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_567187:
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x838980);
	game::sub_55C230(ts, mv);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x838980);
	game::sub_521280(ts, mv);
	goto loc_566588;

loc_5671A3:
	cmp(&ts->eflags, ts->eax, 0x72619778);
	if (!ts->eflags.zero) {
        goto loc_567857;
    }
	push(mv, &ts->esp, 0xFFFFFFFF);
	mov(&ts->ecx, ts->esi);
	game::sub_55EBA0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_5671CA:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1D9, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5671DB;
    }
	push(mv, &ts->esp, 0x1);
	goto loc_566598;

loc_5671DB:
	mov(mv, &ts->eax, x86::mem(0x83898C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_567286;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1D7, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_567286;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1D5, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_567286;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_53A2B0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xD76E0B5A);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1FAB5998);
	push(mv, &ts->esp, 0x1FAB5998);
	push(mv, &ts->esp, 0xD05FC3A3);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->eax);
	game::sub_558790(ts, mv);
	add(&ts->esp, 0x24);
	mov(mv, x86::mem(0x838970, 4), 0x1FAB5998);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, x86::mem(ts->esi + 0x1D2, 1), 0x0);
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(ts->ecx + 0x2F, 1), 0x0);
	game::sub_52EB90(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79BE38);

loc_567262:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);

loc_567270:
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_567286:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1D4, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5672A0;
    }
	mov(mv, x86::mem(ts->esi + 0x1D4, 1), 0x0);
	mov(mv, x86::mem(ts->esi + 0x1D3, 1), 0x1);
	goto loc_5672C1;

loc_5672A0:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1D5, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5672BA;
    }
	mov(mv, x86::mem(ts->esi + 0x1D5, 1), 0x0);
	mov(mv, x86::mem(ts->esi + 0x1D3, 1), 0x1);
	goto loc_5672C1;

loc_5672BA:
	mov(mv, x86::mem(ts->esi + 0x1D3, 1), 0x0);

loc_5672C1:
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(ts->ecx + 0x2F, 1), 0x0);
	game::sub_52EB90(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537D40(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_567301;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C60(ts, mv);
	add(&ts->esp, 0x10);

loc_567301:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xA);
	mov(mv, x86::mem(ts->esi + 0x1D2, 1), 0x0);
	mov(mv, x86::mem(ts->esi + 0x1DC, 1), 0x1);
	game::sub_51DE30(ts, mv);
	goto loc_567854;

loc_56731F:
	cmp(&ts->eflags, ts->eax, 0xB4EDEB6D);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_567551;
    }
	if (ts->eflags.zero) {
        goto loc_5674C8;
    }
	cmp(&ts->eflags, ts->eax, 0x9803F6E2);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_5674BD;
    }
	if (ts->eflags.zero) {
        goto loc_567387;
    }
	cmp(&ts->eflags, ts->eax, 0x911C0A4B);
	if (ts->eflags.zero) {
        goto loc_56736B;
    }
	cmp(&ts->eflags, ts->eax, 0x9120409E);
	if (!ts->eflags.zero) {
        goto loc_567857;
    }
	push(mv, &ts->esp, 0xFFFFFFFF);
	mov(&ts->ecx, ts->esi);
	game::sub_54F9F0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56736B:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_55EBA0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_567387:
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	game::sub_538130(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x150, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0xA, 4));
	cmp(&ts->eflags, ts->ecx, 0x14);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_5673A7;
    }
	movzx(mv, &ts->ecx, x86::mem(ts->ecx + 0x567894, 1));
	jmp(x86::mem(0x567884, 4));

loc_5673AE:
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_54F9F0(ts, mv);
	goto def_5673A7;

loc_5673B8:
	mov(mv, &ts->eax, x86::mem(0x7FA1A8, 4));
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto def_5673A7;
    }

loc_5673C3:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_54F9F0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x7FA1A8, 4));
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5673C3;
    }
	goto def_5673A7;

loc_5673D8:
	mov(mv, &ts->eax, x86::mem(0x7FA1A8, 4));
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto def_5673A7;
    }

loc_5673E3:
	push(mv, &ts->esp, 0xFFFFFFFF);
	mov(&ts->ecx, ts->esi);
	game::sub_54F9F0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x7FA1A8, 4));
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5673E3;
    }

def_5673A7:
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x16C, 4));
	game::sub_538130(ts, mv);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8763EC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1A8, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_567423;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	mov(&ts->ecx, 0x1);
	goto loc_567433;

loc_567423:
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_567433;
    }
	or_(&ts->ecx, 0xFFFFFFFF);

loc_567433:
	lea(mv, &ts->eax, x86::mem(ts->ecx + 0xA, 4));
	cmp(&ts->eflags, ts->eax, 0x14);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_567442;
    }
	movzx(mv, &ts->edx, x86::mem(ts->eax + 0x5678BC, 1));
	jmp(x86::mem(0x5678AC, 4));

loc_567449:
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_55EBA0(ts, mv);
	goto def_567442;

loc_567453:
	mov(mv, &ts->eax, x86::mem(0x7FA1A8, 4));
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto def_567442;
    }
	mov(&ts->edi, ts->edi);

loc_567460:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_55EBA0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x7FA1A8, 4));
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_567460;
    }
	goto def_567442;

loc_567475:
	mov(mv, &ts->eax, x86::mem(0x7FA1A8, 4));
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto def_567442;
    }

loc_567480:
	push(mv, &ts->esp, 0xFFFFFFFF);
	mov(&ts->ecx, ts->esi);
	game::sub_55EBA0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x7FA1A8, 4));
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_567480;
    }

def_567442:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1E0, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_52D090(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_567857;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xC407210);
	game::sub_55DDA0(ts, mv);
	goto loc_567854;

loc_5674BD:
	cmp(&ts->eflags, ts->eax, 0xB4623F67);

loc_5674C2:
	if (!ts->eflags.zero) {
        goto loc_567857;
    }

loc_5674C8:
	mov(mv, &ts->edx, x86::mem(0x7FA1B8, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5674EC;
    }
	mov(&ts->ecx, 0xFF);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->ecx);

loc_5674EC:
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, 0x1);
	mov(mv, x86::mem(ts->ecx + 0x2F, 1), 0x1);
	game::sub_52EB90(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1D9, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, x86::mem(ts->esi + 0x1D2, 1), 0x1);
	push(mv, &ts->esp, 0x1);
	if (ts->eflags.zero) {
        goto loc_567547;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xB0, 4));
	mov(mv, x86::mem(ts->ecx + 0x2F, 1), 0x1);
	game::sub_52EB90(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79031C);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_567547:
	push(mv, &ts->esp, 0x79D790);
	goto loc_567262;

loc_567551:
	cmp(&ts->eflags, ts->eax, 0xD05FC3A3);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_567711;
    }
	if (ts->eflags.zero) {
        goto loc_5676EE;
    }
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	if (ts->eflags.zero) {
        goto loc_5676D2;
    }
	cmp(&ts->eflags, ts->eax, 0xC98356BA);
	if (!ts->eflags.zero) {
        goto loc_567857;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1D1, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_567618;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79053C);
	push(mv, &ts->esp, 0x4A1316E9);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esi + 0x1D1, 1), 0x0);
	mov(mv, x86::mem(ts->esi + 0x1D0, 1), 0x1);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79053C);
	push(mv, &ts->esp, 0x884FBA76);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79053C);
	push(mv, &ts->esp, 0x640F0F23);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79053C);
	push(mv, &ts->esp, 0x640F0F22);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x40);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79053C);
	push(mv, &ts->esp, 0xF31E8ED3);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79053C);
	push(mv, &ts->esp, 0xD82B4A08);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x20);

loc_567618:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1D2, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_567635;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	game::sub_538760(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xB0, 4));
	game::sub_538760(ts, mv);

loc_567635:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1D6, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_567857;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1CC, 4));
	mov(mv, &ts->edx, x86::mem(0x8651AC, 4));
	sub(&ts->edx, ts->eax);
	mov(mv, x86::mem(ts->ebp + 0x8, 4), ts->edx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_567857;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x58, 4));
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x1D6, 1), 0x0);
	game::sub_50E510(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x1D4, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_5676C0;
    }
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_567857;
    }
	mov(mv, &ts->edi, x86::mem(ts->edi + 0xC, 4));
	cmp(&ts->eflags, ts->edi, 0x1D);
	if (ts->eflags.zero) {
        goto loc_5676C0;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_567857;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_50E580(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_5676C0:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1D);
	game::sub_4C2100(ts, mv);
	goto loc_567270;

loc_5676D2:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_54F9F0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_5676EE:
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x1DC, 1), 0x1);
	game::sub_50D2A0(ts, mv);
	mov(mv, x86::mem(0x83A9D8, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_552C80(ts, mv);
	goto loc_567854;

loc_567711:
	cmp(&ts->eflags, ts->eax, 0xE1FDE1D1);
	if (!ts->eflags.zero) {
        goto loc_567857;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1DA, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_567740;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1DA, 1), 0x0);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_567740:
	mov(mv, &ts->eax, x86::mem(0x83898C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_567775;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1D5, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_567775;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1D7, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_567775;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1D4, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_56777F;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1D3, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_567857;
    }

loc_567775:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1D4, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_567790;
    }

loc_56777F:
	game::sub_54F980(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_55BD60(ts, mv);
	goto loc_56784B;

loc_567790:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1D5, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5677D2;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FAB8);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x9);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x7B, 1), 0x0);
	mov(mv, x86::mem(ts->esi + 0xDF, 1), 0x0);
	mov(mv, x86::mem(ts->esi + 0x1D2, 1), 0x1);
	game::sub_545D30(ts, mv);
	goto loc_56784B;

loc_5677D2:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1D3, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_567827;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79D790);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	mov(&ts->ecx, 0x838980);
	mov(mv, x86::mem(ts->esi + 0x7B, 1), 0x0);
	mov(mv, x86::mem(ts->esi + 0xDF, 1), 0x0);
	mov(mv, x86::mem(ts->esi + 0x1D2, 1), 0x1);
	game::sub_55C460(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x1DC, 1), 0x0);
	mov(mv, x86::mem(ts->esi + 0x1D3, 1), 0x0);
	game::sub_54FAE0(ts, mv);
	goto loc_56784B;

loc_567827:
	mov(&ts->ecx, 0x838980);
	game::sub_55C460(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, ts->edx);
	game::sub_50B8C0(ts, mv);
	add(&ts->esp, 0x8);
	game::sub_54F980(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_55BDF0(ts, mv);

loc_56784B:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x0);
	game::sub_4C2140(ts, mv);

loc_567854:
	add(&ts->esp, 0x8);

loc_567857:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);

loc_567859:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_7775C0:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x14, 4));
	goto sub_4DEF30;

SEH_566490:
	mov(&ts->eax, 0x7E3AE8);
	goto ___CxxFrameHandler;
}

void sub_5678E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x778576);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x20, 4));
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->esi);
	game::sub_552330(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79CAF0);
	push(mv, &ts->esp, 0x797F30);
	xor_(&ts->ebx, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x150, 4));
	mov(mv, x86::mem(ts->esp + 0x30, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi, 4), 0x79D874);
	game::sub_5435D0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F814);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x1B4, 4));
	mov(mv, x86::mem(ts->esp + 0x2C, 1), 0x1);
	game::sub_542AC0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x20C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x210, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x214, 1), ts->bl);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx + 0xAC, 1), ts->bl);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x17C, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x180, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x1A4, 4), 0x43480000);
	mov(mv, x86::mem(ts->esi + 0x1B0, 4), 0x41A00000);
	game::sub_55F340(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xA936C3A2);
	push(mv, &ts->esp, ts->edx);
	game::sub_4954E0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x89782734);
	push(mv, &ts->esp, ts->eax);
	game::sub_4954E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_778560:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto ??1strstreambuf@std@@UAE@XZ_5;

loc_778568:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x150);
	goto sub_52EA90;

SEH_569500:
	mov(&ts->eax, 0x7E3B14);
	goto ___CxxFrameHandler;
}

void sub_5679D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_5679F0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_5679E8;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_5679E8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_5679F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x777D78);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x79D874);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x150, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	game::sub_52EA90(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	game::std__strstreambuf___strstreambuf_void_(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_777D70:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto ??1strstreambuf@std@@UAE@XZ_5;

SEH_569610:
	mov(&ts->eax, 0x7E3B38);
	goto ___CxxFrameHandler;
}

void sub_567A50(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x8, 4));
	cmp(&ts->eflags, ts->edi, 0x9803F6E2);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_567B08;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x214, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_567B1E;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x444969FD);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A60(ts, mv);
	mov(&ts->ebx, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x444969FE);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A60(ts, mv);
	mov(mv, x86::mem(ts->ebp + 0x8, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x688A1551);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A60(ts, mv);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x3FBB7A4E);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A60(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->ebp - 0x8, 4), ts->eax);
	game::sub_52D100(ts, mv);
	add(&ts->esp, 0x24);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_568292;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_52D100(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_568292;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_52D100(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_568292;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebp - 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_52D100(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_568292;
    }

loc_567B08:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x214, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_567B1E;
    }
	cmp(&ts->eflags, ts->edi, 0x911AB364);
	if (ts->eflags.zero) {
        goto loc_567E57;
    }

loc_567B1E:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_543D40(ts, mv);
	cmp(&ts->eflags, ts->edi, 0x911AB364);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_567EB2;
    }
	if (ts->eflags.zero) {
        goto loc_567E57;
    }
	cmp(&ts->eflags, ts->edi, 0x34F8A1DE);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_567C66;
    }
	if (ts->eflags.zero) {
        goto loc_567C59;
    }
	cmp(&ts->eflags, ts->edi, 0x9F00F07);
	if (ts->eflags.zero) {
        goto loc_567BAD;
    }
	cmp(&ts->eflags, ts->edi, 0x1FAB5998);
	if (ts->eflags.zero) {
        goto loc_567B72;
    }
	cmp(&ts->eflags, ts->edi, 0x34DC1BEC);
	if (!ts->eflags.zero) {
        goto loc_568292;
    }

loc_567B72:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x214, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_568122;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	game::sub_538B30(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79D790);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x7B, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_567BAD:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x15C, 4));
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x2C, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1D);
	mov(&ts->ecx, 0x85AD40);
	game::sub_5289F0(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1D);
	mov(&ts->ecx, 0x8392C0);
	game::sub_631D20(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1E);
	mov(&ts->ecx, 0x8392C0);
	game::sub_631D20(ts, mv);
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8389D0);
	game::sub_413440(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x8392C0);
	game::sub_4D8EC0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8389AC, 4));
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x8392C0);
	add(&ts->ecx, 0x18);
	game::sub_503950(ts, mv);
	push(mv, &ts->esp, 0x8389D0);
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8637D0);
	game::sub_55B1A0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->esi + 0x20C, 4), ts->edi);
	mov(mv, &ts->ecx, x86::mem(0x861E74, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, 0xEB3A688A);
	push(mv, &ts->esp, ts->edx);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_55FCE0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_567C59:
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x7B, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_567C66:
	cmp(&ts->eflags, ts->edi, 0x406415E3);
	if (ts->eflags.zero) {
        goto loc_567D1A;
    }
	cmp(&ts->eflags, ts->edi, 0x51123592);
	if (ts->eflags.zero) {
        goto loc_567C98;
    }
	cmp(&ts->eflags, ts->edi, 0x72619778);
	if (!ts->eflags.zero) {
        goto loc_568292;
    }
	push(mv, &ts->esp, 0xFFFFFFFF);
	mov(&ts->ecx, ts->esi);
	game::sub_55F740(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_567C98:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x15C, 4));
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x2C, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1D);
	mov(&ts->ecx, 0x8392C0);
	game::sub_631D20(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1E);
	mov(&ts->ecx, 0x8392C0);
	game::sub_631D20(ts, mv);
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8389D0);
	game::sub_413440(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x8392C0);
	game::sub_4D8EC0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8389AC, 4));
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x8392C0);
	add(&ts->ecx, 0x18);
	game::sub_503950(ts, mv);
	push(mv, &ts->esp, 0x8389D0);
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8637D0);
	game::sub_55B1A0(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x20C, 4), ts->edi);
	game::sub_55FCE0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_567D1A:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x22, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_568292;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x214, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_567D50;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_55FB00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x8);
	game::sub_51DE30(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_567D50:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x15C, 4));
	mov(mv, &ts->edi, x86::mem(ts->edx + 0x2C, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1D);
	mov(&ts->ecx, 0x838980);
	game::sub_50F1B0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_567D7A;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDA15D7E5);
	push(mv, &ts->esp, 0x78FA24);
	push(mv, &ts->esp, ts->eax);
	goto loc_567DBF;

loc_567D7A:
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_567DFE;
    }
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1D);
	mov(&ts->ecx, 0x838980);
	game::sub_521BE0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_567DFE;
    }
	test(mv, &ts->eflags, x86::mem(ts->edi + 0x5, 1), 0xE0);
	if (ts->eflags.zero) {
        goto loc_567DFE;
    }
	mov(mv, &ts->ebx, x86::mem(0x861E74, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1D);
	mov(&ts->ecx, 0x85AD40);
	game::sub_514280(ts, mv);
	cmp(&ts->eflags, ts->ebx, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_567DD3;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xD1AC60BE);
	push(mv, &ts->esp, 0x78FA24);
	push(mv, &ts->esp, ts->ecx);

loc_567DBF:
	game::sub_558430(ts, mv);
	add(&ts->esp, 0xC);
	mov(mv, x86::mem(0x838970, 4), 0x34DC1BEC);
	goto loc_567E39;

loc_567DD3:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x44B7167F);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1FAB5998);
	push(mv, &ts->esp, 0x1FAB5998);
	push(mv, &ts->esp, 0x9F00F07);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x78FA24);
	push(mv, &ts->esp, ts->edx);
	goto loc_567E27;

loc_567DFE:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xF5AC2B2A);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1FAB5998);
	push(mv, &ts->esp, 0x1FAB5998);
	push(mv, &ts->esp, 0x51123592);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x78FA24);
	push(mv, &ts->esp, ts->eax);

loc_567E27:
	game::sub_558790(ts, mv);
	add(&ts->esp, 0x24);
	mov(mv, x86::mem(0x838970, 4), 0x1FAB5998);

loc_567E39:
	mov(&ts->ecx, ts->esi);
	game::sub_53A720(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x8);
	game::sub_51DE30(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_567E57:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x214, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_567E73;
    }
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_55FCE0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_567E73:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537D40(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_568292;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C60(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_567EB2:
	cmp(&ts->eflags, ts->edi, 0xB4EDEB6D);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_568136;
    }
	if (ts->eflags.zero) {
        goto loc_567B72;
    }
	cmp(&ts->eflags, ts->edi, 0x911C0A4B);
	if (ts->eflags.zero) {
        goto loc_568110;
    }
	cmp(&ts->eflags, ts->edi, 0x9120409E);
	if (ts->eflags.zero) {
        goto loc_568195;
    }
	cmp(&ts->eflags, ts->edi, 0x9803F6E2);
	if (!ts->eflags.zero) {
        goto loc_568292;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->al, x86::mem(ts->esi + 0x214, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, &ts->ebx, x86::mem(ts->edi + 0x10, 4));
	mov(mv, x86::mem(ts->ebp + 0x8, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_56801E;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x7A, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_567FEF;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20C, 4));
	game::sub_610000(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DB50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0xC, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8389D0);
	if (ts->eflags.zero) {
        goto loc_567F90;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4C, 4));
	mov(mv, &ts->ebx, x86::mem(ts->eax + 0x8, 4));
	game::sub_413440(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x1D);
	mov(&ts->ecx, 0x8389D0);
	game::sub_631D20(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x1E);
	mov(&ts->ecx, 0x8389D0);
	game::sub_631D20(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x8389D0);
	game::sub_4D8EC0(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x8389D0);
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8637D0);
	game::sub_55B1A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4C, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x1D);
	game::sub_4C2100(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x8, 4));
	goto loc_567FEC;

loc_567F90:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x20C, 4));
	game::sub_413440(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1D);
	mov(&ts->ecx, 0x8389D0);
	game::sub_631D20(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1E);
	mov(&ts->ecx, 0x8389D0);
	game::sub_631D20(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x8389D0);
	game::sub_4D8EC0(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x8389D0);
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8637D0);
	game::sub_55B1A0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1D);
	game::sub_4C2100(ts, mv);

loc_567FEC:
	add(&ts->esp, 0x10);

loc_567FEF:
	push(mv, &ts->esp, ts->ebx);
	game::sub_52D100(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_568084;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x22, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_568292;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_55FB00(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56801E:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x38E39AD7);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A60(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->edi, ts->eax);
	game::sub_52D100(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_568059;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->al, x86::mem(ts->edx + 0x22, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_568292;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_559AB0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_568059:
	push(mv, &ts->esp, ts->edi);
	game::sub_52D100(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_568084;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x22, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_568292;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_559AB0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_568084:
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x1B4, 4));
	game::sub_538130(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1F0, 4));
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_5680F1;
    }
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.zero) {
        goto loc_5680F1;
    }
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8763EC, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_5680CA;
    }
	mov(&ts->eax, 0x1);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_55F740(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_5680CA:
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_568292;
    }
	mov(&ts->eax, 0xFFFFFFFF);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_55F740(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_5680F1:
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x214, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_568292;
    }
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_55F740(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_568110:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_55F740(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_568122:
	mov(&ts->ecx, ts->esi);
	game::sub_53A740(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x7B, 1), 0x0);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_568136:
	cmp(&ts->eflags, ts->edi, 0xB5971BF1);
	if (ts->eflags.zero) {
        goto loc_568195;
    }
	cmp(&ts->eflags, ts->edi, 0xC98356BA);
	if (ts->eflags.zero) {
        goto loc_568181;
    }
	cmp(&ts->eflags, ts->edi, 0xE1FDE1D1);
	if (!ts->eflags.zero) {
        goto loc_568292;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x13C, 4), 0x911AB364);
	if (!ts->eflags.zero) {
        goto loc_568292;
    }
	mov(&ts->ecx, 0x838980);
	game::sub_530140(ts, mv);
	game::sub_54F980(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_55BDF0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_568181:
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x150, 4));
	game::sub_538760(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_568195:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x214, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_568292;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20C, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x58, 4));
	game::sub_610000(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DB50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0xC, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8389D0);
	if (ts->eflags.zero) {
        goto loc_568233;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x4C, 4));
	mov(mv, &ts->esi, x86::mem(ts->edx + 0x8, 4));
	game::sub_413440(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x1D);
	mov(&ts->ecx, 0x8389D0);
	game::sub_631D20(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x1E);
	mov(&ts->ecx, 0x8389D0);
	game::sub_631D20(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x8389D0);
	game::sub_4D8EC0(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x8389D0);
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8637D0);
	game::sub_55B1A0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x1D);
	game::sub_4C2100(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_568233:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x20C, 4));
	game::sub_413440(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1D);
	mov(&ts->ecx, 0x8389D0);
	game::sub_631D20(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1E);
	mov(&ts->ecx, 0x8389D0);
	game::sub_631D20(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x8389D0);
	game::sub_4D8EC0(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x8389D0);
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8637D0);
	game::sub_55B1A0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x20C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x1D);
	game::sub_4C2100(ts, mv);
	add(&ts->esp, 0x10);

loc_568292:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);
}

void sub_5682A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x170, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_56844C;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x172, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_56844C;
    }
	push(mv, &ts->esp, 0x78FA24);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_56844C;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0xC407210);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_5683BD;
    }
	cmp(&ts->eflags, ts->eax, 0x911AB364);
	if (!ts->eflags.zero) {
        goto loc_56844A;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x174, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(&ts->ebx, 0x1);
	if (ts->eflags.zero) {
        goto loc_56834F;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x168, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_56834F;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x16C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x81F0B71A);
	game::sub_55DDA0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x154, 4));
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, 0x10003);
	mov(mv, x86::mem(ts->esi + 0x168, 4), ts->ebx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_568342;
    }
	cmp(&ts->eflags, ts->eax, 0x10005);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_568342;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0xB36E7C1E);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_568342:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0xAADE3025);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_56834F:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x154, 4));
	test(&ts->eflags, ts->eax, 0xFFFF0000);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_568376;
    }
	sar(&ts->eax, 0x10);
	push(mv, &ts->esp, 0xFFFFFFFF);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->eax + (ts->esi) + 0x164, 1), 0x0);
	game::sub_560020(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_568376:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x168, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_56839A;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x16C, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x81F0B71A);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->esi + 0x168, 4), ts->ebx);

loc_56839A:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C60(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x170, 1), ts->bl);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_5683BD:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->al, x86::mem(ts->eax + 0x4C, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_568419;
    }
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x174, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_568415;
    }
	mov(&ts->ebx, 0x1);
	mov(mv, x86::mem(ts->esi + 0x174, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x7B, 1), 0x0);
	mov(mv, x86::mem(0x7FA1FC, 1), ts->bl);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDF422345);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x16C, 4), 0x799C30);
	game::sub_4954E0(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->ecx, ts->esi);
	game::sub_556870(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0x73332E68);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_568415:
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_56844A;
    }

loc_568419:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x154, 4));
	mov(&ts->edx, ts->edi);
	and_(&ts->edx, 0xFFFF0000);
	cmp(&ts->eflags, ts->edx, 0x20000);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_56844A;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	game::sub_495910(ts, mv);
	sar(&ts->edi, 0x10);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->edi + (ts->esi) + 0x164, 1), ts->al);
	game::sub_560020(ts, mv);

loc_56844A:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);

loc_56844C:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_568450(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x777DC3);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x8, 4));
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->ebp - 0x10, 4), ts->esi);
	game::sub_551DE0(ts, mv);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0x1);
	mov(mv, x86::mem(ts->esi, 4), 0x79D890);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x10, 4));
	push(mv, &ts->esp, 0x79CAF0);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x797F30);
	xor_(&ts->ebx, ts->ebx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), ts->ebx);
	game::sub_5435D0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F814);
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xB4, 4));
	mov(mv, x86::mem(ts->ebp - 0x4, 1), 0x1);
	game::sub_542AC0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x10C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x110, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x111, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x112, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x114, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x118, 4), ts->ebx);
	mov(mv, x86::mem(0x838528, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x7C, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x80, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0xA4, 4), 0x43480000);
	mov(mv, x86::mem(ts->esi + 0xB0, 4), 0x41A00000);
	mov(mv, &ts->eax, x86::mem(0x8389C8, 4));
	cmp(&ts->eflags, ts->eax, 0x8389C8);
	if (ts->eflags.zero) {
        goto loc_568537;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));

loc_568520:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0xC, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_568530;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->eax, 0x8389C8);
	if (!ts->eflags.zero) {
        goto loc_568520;
    }
	goto loc_568537;

loc_568530:
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x8, 4));
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_56854B;
    }

loc_568537:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x8392C0);
	game::sub_6102F0(ts, mv);
	mov(&ts->edi, ts->eax);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_568582;
    }

loc_56854B:
	push(mv, &ts->esp, 0x79AC28);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_61B500(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0xEBB03E66);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->ebp + 0x8, 4), ts->eax);
	game::sub_61B500(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(ts->ebp + 0x8, 4), ts->eax);
	setnz(ts->eflags, &ts->al);
	cmp(&ts->eflags, ts->al, ts->bl);
	setz(ts->eflags, &ts->dl);
	mov(mv, x86::mem(ts->esi + 0x112, 1), ts->dl);

loc_568582:
	mov(&ts->ecx, ts->esi);
	game::sub_560250(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_546F40(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(0x7FA1FC, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_5685B6;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FAB8);
	mov(mv, x86::mem(0x7FA1FC, 1), ts->bl);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);

loc_5685B6:
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_5685D0;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x380B632);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4954E0(ts, mv);
	add(&ts->esp, 0x8);

loc_5685D0:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_50E5A0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_4C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	add(&ts->esp, 0x10);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5685F3;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_5685F5;

loc_5685F3:
	xor_(&ts->eax, ts->eax);

loc_5685F5:
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esi + 0x5C, 4));
	if (!ts->eflags.zero) {
        goto loc_56860B;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);
	goto loc_56864A;

loc_56860B:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_568617;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_568619;

loc_568617:
	xor_(&ts->eax, ts->eax);

loc_568619:
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esi + 0x5C, 4));
	if (!ts->eflags.zero) {
        goto loc_56862F;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x100, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);
	goto loc_56864A;

loc_56862F:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x100, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0x8);

loc_56864A:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_568666;
    }
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->ebx);

loc_568666:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_777DB0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

loc_777DB8:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x50);
	goto sub_52EA90;

SEH_56BF70:
	mov(&ts->eax, 0x7E3218);
	goto ___CxxFrameHandler;
}

void sub_568680(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	cmp(&ts->eflags, ts->eax, 0x6);
	if (ts->eflags.zero) {
        goto locret_568690;
    }
	cmp(&ts->eflags, ts->eax, 0x7);
	if (ts->eflags.zero) {
        goto locret_568690;
    }
	xor_(&ts->eax, ts->eax);

locret_568690:
	retn(mv, &ts->esp, 0x14);
}

void sub_5686A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_5686C0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_5686B8;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_5686B8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_5686C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776FE8);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x79D890);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	game::sub_52EA90(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->esi, 4), 0x79AC00);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_776FE0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

SEH_569E80:
	mov(&ts->eax, 0x7E3CEC);
	goto ___CxxFrameHandler;
}

void sub_568710(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x112, 1));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x5C, 4));
	test(&ts->eflags, ts->al, ts->al);
	setz(ts->eflags, &ts->al);
	mov(mv, x86::mem(ts->ecx + 0x112, 1), ts->al);
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x2C, 4));
	mov(mv, x86::mem(ts->ecx + 0x114, 4), ts->eax);
	goto sub_560250;
}

void sub_568740(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x8, 4));
	cmp(&ts->eflags, ts->edi, 0xC407210);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_56877E;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x22, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_56877E;
    }
	movsx(mv, &ts->eax, x86::mem(0x8381E1, 1));
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_568D25;
    }
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_458520(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56877E:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x169, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5687A0;
    }
	cmp(&ts->eflags, ts->edi, 0x9120409E);
	if (ts->eflags.zero) {
        goto loc_568D25;
    }
	cmp(&ts->eflags, ts->edi, 0xB5971BF1);
	if (ts->eflags.zero) {
        goto loc_568D25;
    }

loc_5687A0:
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x10, 4));
	if (!ts->eflags.zero) {
        goto loc_5687B9;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_543D40(ts, mv);

loc_5687B9:
	cmp(&ts->eflags, ts->edi, 0x911AB364);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_568BB0;
    }
	if (ts->eflags.zero) {
        goto loc_568AE0;
    }
	cmp(&ts->eflags, ts->edi, 0x495DC3F0);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_5689D0;
    }
	if (ts->eflags.zero) {
        goto loc_56899D;
    }
	cmp(&ts->eflags, ts->edi, 0x34DC1BEC);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_568965;
    }
	if (ts->eflags.zero) {
        goto loc_5687FF;
    }
	cmp(&ts->eflags, ts->edi, 0xC407210);
	if (ts->eflags.zero) {
        goto loc_56881F;
    }
	cmp(&ts->eflags, ts->edi, 0x1FAB5998);
	if (!ts->eflags.zero) {
        goto loc_568D24;
    }

loc_5687FF:
	mov(&ts->ecx, ts->esi);
	game::sub_538CA0(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x169, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_568D24;
    }
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x7B, 1), 0x0);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56881F:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537D40(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_568D24;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x22, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_568D24;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x48, 4), 0xA2);
	if (!ts->eflags.zero) {
        goto loc_568890;
    }
	mov(&ts->ecx, 0x838980);
	game::sub_50F180(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_568890;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x20B30CD8);
	push(mv, &ts->esp, 0x78FA24);
	push(mv, &ts->esp, ts->eax);
	game::sub_558430(ts, mv);
	add(&ts->esp, 0xC);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(0x838970, 4), 0x34DC1BEC);
	game::sub_538C00(ts, mv);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_568890:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x48, 4));
	cmp(&ts->eflags, ts->eax, 0x1D);
	if (!ts->eflags.zero) {
        goto loc_5688C4;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xDE6EFF34);
	mov(mv, x86::mem(0x838998, 4), 0x8);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C60(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_5688C4:
	cmp(&ts->eflags, ts->eax, 0x9);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x169, 1));
	if (!ts->eflags.zero) {
        goto loc_56893E;
    }
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_568942;
    }
	xor_(&ts->bl, ts->bl);
	xor_(&ts->edi, ts->edi);

loc_5688D7:
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x61, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x8392C0);
	game::sub_6102F0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5688EB;
    }
	mov(&ts->bl, 0x1);

loc_5688EB:
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, 0x8);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5688D7;
    }
	test(&ts->eflags, ts->bl, ts->bl);
	if (ts->eflags.zero) {
        goto loc_568938;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x903854F0);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->ecx);
	game::sub_558430(ts, mv);
	add(&ts->esp, 0xC);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(0x838970, 4), 0x34DC1BEC);
	game::sub_538C00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x8);
	game::sub_51DE30(ts, mv);
	add(&ts->esp, 0x8);

loc_56892A:
	mov(&ts->ecx, ts->esi);
	game::sub_556930(ts, mv);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_568938:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x169, 1));

loc_56893E:
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56892A;
    }

loc_568942:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x160, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_568D24;
    }
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0xC407210);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_568965:
	cmp(&ts->eflags, ts->edi, 0x35F8620B);
	if (!ts->eflags.zero) {
        goto loc_568D24;
    }
	mov(mv, &ts->eax, x86::mem(0x838998, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_568D24;
    }
	push(mv, &ts->esp, 0x12);
	mov(&ts->ecx, 0x8635BC);
	game::sub_5243D0(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, 0x83A9D0);
	game::sub_52A460(ts, mv);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56899D:
	mov(mv, x86::mem(0x838998, 4), 0x5);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x160, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xE1FDE1D1);
	game::sub_55DDA0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xE1FDE1D1);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_5689D0:
	cmp(&ts->eflags, ts->edi, 0x6691C08E);
	if (ts->eflags.zero) {
        goto loc_568ABC;
    }
	cmp(&ts->eflags, ts->edi, 0x7FD238FE);
	if (ts->eflags.zero) {
        goto loc_568A8C;
    }
	cmp(&ts->eflags, ts->edi, 0x8ACAA8DF);
	if (!ts->eflags.zero) {
        goto loc_568D24;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDF422345);
	push(mv, &ts->esp, ts->edx);
	game::sub_495520(ts, mv);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x169, 1), 0x0);
	mov(mv, x86::mem(0x8363F8, 4), ts->ecx);
	mov(mv, x86::mem(0x8A1C68, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x158, 4));
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_568A2D;
    }
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x158, 4), ts->ecx);

loc_568A2D:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x7B, 1), 0x1);
	game::sub_4C2140(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x7FA1C0, 4));
	push(mv, &ts->esp, 0xA936C3A2);
	push(mv, &ts->esp, ts->eax);
	game::sub_4954E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x7FA1C0, 4));
	push(mv, &ts->esp, 0x89782734);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4954E0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79031C);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	add(&ts->esp, 0x28);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	game::sub_54E6E0(ts, mv);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_568A8C:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x160, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0xE1FDE1D1);
	mov(mv, x86::mem(0x86461A, 1), 0x1);
	game::sub_55DDA0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xE1FDE1D1);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_568ABC:
	mov(mv, &ts->ecx, x86::mem(0x861E74, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, 0xEB3A688A);
	push(mv, &ts->esp, ts->edx);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_568AE0:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x169, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, &ts->eax, x86::mem(0x838998, 4));
	if (ts->eflags.zero) {
        goto loc_568B02;
    }
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_568B02;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_5605B0(ts, mv);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_568B02:
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_568B62;
    }
	mov(mv, &ts->ecx, x86::mem(0x83898C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_568B62;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_568B62;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xD76E0B5A);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1FAB5998);
	push(mv, &ts->esp, 0x1FAB5998);
	push(mv, &ts->esp, 0xD05FC3A3);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->eax);
	game::sub_558790(ts, mv);
	add(&ts->esp, 0x24);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(0x838970, 4), 0x1FAB5998);
	game::sub_538C00(ts, mv);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_568B62:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x168, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, x86::mem(0x86461A, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_568B80;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_54FB70(ts, mv);

loc_568B80:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x160, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x81F0B71A);
	game::sub_55DDA0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C60(ts, mv);
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_568BB0:
	cmp(&ts->eflags, ts->edi, 0xC539A4B0);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_568C43;
    }
	if (ts->eflags.zero) {
        goto loc_568C2A;
    }
	cmp(&ts->eflags, ts->edi, 0x9FBBD1D4);
	if (ts->eflags.zero) {
        goto loc_568C1F;
    }
	cmp(&ts->eflags, ts->edi, 0xB4EDEB6D);
	if (ts->eflags.zero) {
        goto loc_5687FF;
    }
	cmp(&ts->eflags, ts->edi, 0xC519BFC3);
	if (!ts->eflags.zero) {
        goto loc_568D24;
    }
	push(mv, &ts->esp, 0x799AA0);
	game::sub_51BD10(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_568D24;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x116, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_568D24;
    }
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x74, 4));
	game::sub_458C40(ts, mv);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x116, 1), 0x0);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_568C1F:
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x7B, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_568C2A:
	push(mv, &ts->esp, 0x799AA0);
	push(mv, &ts->esp, 0xC519BFC0);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_568C43:
	cmp(&ts->eflags, ts->edi, 0xC98356BA);
	if (ts->eflags.zero) {
        goto loc_568C90;
    }
	cmp(&ts->eflags, ts->edi, 0xD05FC3A3);
	if (ts->eflags.zero) {
        goto loc_568C6D;
    }
	cmp(&ts->eflags, ts->edi, 0xE1FDE1D1);
	if (!ts->eflags.zero) {
        goto loc_568D24;
    }
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(0x864619, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_568C6D:
	push(mv, &ts->esp, ts->ebx);
	game::sub_50D2A0(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(0x83A9D8, 4), ts->eax);
	mov(mv, x86::mem(0x86461A, 1), 0x1);
	mov(mv, x86::mem(0x864619, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_568C90:
	mov(mv, &ts->al, x86::mem(0x864619, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_568D24;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x58, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->edx + 0x48, 4), 0x1D);
	mov(mv, x86::mem(0x864619, 1), 0x0);
	if (!ts->eflags.zero) {
        goto loc_568CB9;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x13C, 4), 0xC407210);
	if (ts->eflags.zero) {
        goto loc_568D18;
    }

loc_568CB9:
	mov(mv, &ts->al, x86::mem(0x86461A, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_568D18;
    }
	mov(mv, &ts->eax, x86::mem(0x83898C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(0x86461A, 1), 0x0);
	if (!ts->eflags.zero) {
        goto loc_568CEE;
    }
	mov(mv, &ts->eax, x86::mem(0x838998, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_568CEE;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_552C80(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_568CEE:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50B8C0(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x0);
	game::sub_4C2140(ts, mv);
	add(&ts->esp, 0x10);
	game::sub_54F980(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_55BDF0(ts, mv);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_568D18:
	game::sub_54F980(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_55BD60(ts, mv);

loc_568D24:
	pop(mv, &ts->esp, ts->ebx);

loc_568D25:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);
}

void sub_568D30(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0x911C0A4B);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_5690B6;
    }
	if (ts->eflags.zero) {
        goto loc_5690A6;
    }
	cmp(&ts->eflags, ts->eax, 0x406415E3);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_568FA8;
    }
	if (ts->eflags.zero) {
        goto loc_568D7C;
    }
	cmp(&ts->eflags, ts->eax, 0x1FAB5998);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_568E51;
    }
	if (ts->eflags.zero) {
        goto loc_5691C3;
    }
	cmp(&ts->eflags, ts->eax, 0x9F00F07);
	if (ts->eflags.zero) {
        goto loc_568DD4;
    }
	cmp(&ts->eflags, ts->eax, 0xC407210);
	if (!ts->eflags.zero) {
        goto loc_5694C9;
    }

loc_568D7C:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5694C9;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x110, 4));
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x48, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x5C, 4));
	mov(mv, &ts->ebx, x86::mem(ts->ecx + 0x2C, 4));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5694C9;
    }
	cmp(&ts->eflags, ts->edi, 0xAA);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_5694C9;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x838980);
	game::sub_50F1B0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_568E63;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDA15D7E5);
	push(mv, &ts->esp, 0x78FA24);
	push(mv, &ts->esp, ts->edx);
	goto loc_568EB5;

loc_568DD4:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x110, 4));
	mov(mv, &ts->ebx, x86::mem(ts->eax + 0x48, 4));
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x5C, 4));
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x2C, 4));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5694C9;
    }
	cmp(&ts->eflags, ts->ebx, 0xAA);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_5694C9;
    }
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, 0x85AD40);
	game::sub_5289F0(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, 0x838980);
	game::sub_55C230(ts, mv);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x838980);
	game::sub_521280(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_560C40(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_560AE0(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x7FA200, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x6691C08E);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x115, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x114, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_568E51:
	cmp(&ts->eflags, ts->eax, 0x34DC1BEC);
	if (ts->eflags.zero) {
        goto loc_5691C3;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_568E63:
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_568F2F;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x838980);
	game::sub_521BE0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_568F2F;
    }
	test(mv, &ts->eflags, x86::mem(ts->ebx + 0x5, 1), 0xE0);
	if (ts->eflags.zero) {
        goto loc_568F2F;
    }
	mov(mv, &ts->eax, x86::mem(0x861E74, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x85AD40);
	mov(mv, x86::mem(ts->ebp + 0x8, 4), ts->eax);
	game::sub_514280(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(ts->ebp + 0x8, 4), ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_568ED5;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xD1AC60BE);
	push(mv, &ts->esp, 0x78FA24);
	push(mv, &ts->esp, ts->ecx);

loc_568EB5:
	game::sub_558430(ts, mv);
	add(&ts->esp, 0xC);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(0x838970, 4), 0x34DC1BEC);
	game::sub_560B60(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_568ED5:
	cmp(&ts->eflags, ts->edi, 0x22);
	mov(&ts->eax, 0x44B7167F);
	if (!ts->eflags.zero) {
        goto loc_568F08;
    }
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x838980);
	game::sub_50F150(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_568EF5;
    }
	mov(&ts->eax, 0xF58C0CD9);
	goto loc_568F08;

loc_568EF5:
	mov(mv, &ts->al, x86::mem(ts->ebx + 0x5, 1));
	and_(&ts->al, 0xE0);
	neg(&ts->al);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0x294E7F46);
	add(&ts->eax, 0x266131CE);

loc_568F08:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xB4623F67);
	push(mv, &ts->esp, 0xB4623F67);
	push(mv, &ts->esp, 0x9F00F07);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x78FA24);
	push(mv, &ts->esp, ts->edx);
	goto loc_568F88;

loc_568F2F:
	cmp(&ts->eflags, ts->edi, 0x22);
	mov(&ts->eax, 0xF5AC2B2A);
	if (!ts->eflags.zero) {
        goto loc_568F63;
    }
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x838980);
	game::sub_50F150(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_568F4F;
    }
	mov(&ts->eax, 0x113EAB80);
	goto loc_568F63;

loc_568F4F:
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_568F5E;
    }
	test(mv, &ts->eflags, x86::mem(ts->ebx + 0x5, 1), 0xE0);
	mov(&ts->eax, 0x266131CE);
	if (ts->eflags.zero) {
        goto loc_568F63;
    }

loc_568F5E:
	mov(&ts->eax, 0x8E4312B0);

loc_568F63:
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xB4623F67);
	push(mv, &ts->esp, 0xB4623F67);
	push(mv, &ts->esp, 0x51123592);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x78FA24);
	push(mv, &ts->esp, ts->eax);

loc_568F88:
	game::sub_558790(ts, mv);
	add(&ts->esp, 0x24);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(0x838970, 4), 0xB4623F67);
	game::sub_560B60(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_568FA8:
	cmp(&ts->eflags, ts->eax, 0x81F0B71A);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_569075;
    }
	if (ts->eflags.zero) {
        goto loc_569033;
    }
	cmp(&ts->eflags, ts->eax, 0x51123592);
	if (ts->eflags.zero) {
        goto loc_568FD7;
    }
	cmp(&ts->eflags, ts->eax, 0x72619778);
	if (!ts->eflags.zero) {
        goto loc_5694C9;
    }
	push(mv, &ts->esp, 0xFFFFFFFF);
	mov(&ts->ecx, ts->esi);
	game::sub_560920(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_568FD7:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x110, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x48, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x5C, 4));
	mov(mv, &ts->edi, x86::mem(ts->edx + 0x2C, 4));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5694C9;
    }
	cmp(&ts->eflags, ts->eax, 0xAA);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_5694C9;
    }
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x838980);
	game::sub_55C230(ts, mv);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x838980);
	game::sub_521280(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_560C40(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_560AE0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x115, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x114, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_569033:
	game::sub_438030(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537D40(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_5694C9;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C60(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_569075:
	cmp(&ts->eflags, ts->eax, 0x911AB364);
	if (!ts->eflags.zero) {
        goto loc_5694C9;
    }
	mov(mv, &ts->al, x86::mem(0x83854C, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_5694C9;
    }
	push(mv, &ts->esp, 0x799AB8);
	push(mv, &ts->esp, 0x911AB364);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_5690A6:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_560920(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_5690B6:
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_5691F8;
    }
	if (ts->eflags.zero) {
        goto loc_5691D1;
    }
	cmp(&ts->eflags, ts->eax, 0xB4623F67);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_5691B8;
    }
	if (ts->eflags.zero) {
        goto loc_5691C3;
    }
	cmp(&ts->eflags, ts->eax, 0x9120409E);
	if (ts->eflags.zero) {
        goto loc_5691D1;
    }
	cmp(&ts->eflags, ts->eax, 0x9803F6E2);
	if (!ts->eflags.zero) {
        goto loc_5694C9;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xB4, 4));
	game::sub_538130(ts, mv);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8763EC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xF0, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_56911B;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	mov(&ts->ecx, 0x1);
	goto loc_56912B;

loc_56911B:
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_56912B;
    }
	or_(&ts->ecx, 0xFFFFFFFF);

loc_56912B:
	lea(mv, &ts->eax, x86::mem(ts->ecx + 0xA, 4));
	cmp(&ts->eflags, ts->eax, 0x14);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_56913A;
    }
	movzx(mv, &ts->edx, x86::mem(ts->eax + 0x5694E0, 1));
	jmp(x86::mem(0x5694D0, 4));

loc_569141:
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_560920(ts, mv);
	goto def_56913A;

loc_56914B:
	mov(mv, &ts->eax, x86::mem(0x7FA1A8, 4));
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto def_56913A;
    }

loc_569156:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_560920(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x7FA1A8, 4));
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_569156;
    }
	goto def_56913A;

loc_56916B:
	mov(mv, &ts->eax, x86::mem(0x7FA1A8, 4));
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto def_56913A;
    }

loc_569176:
	push(mv, &ts->esp, 0xFFFFFFFF);
	mov(&ts->ecx, ts->esi);
	game::sub_560920(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x7FA1A8, 4));
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_569176;
    }

def_56913A:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x120, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_52D090(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5694C9;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xC407210);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_5691B8:
	cmp(&ts->eflags, ts->eax, 0xB4EDEB6D);
	if (!ts->eflags.zero) {
        goto loc_5694C9;
    }

loc_5691C3:
	mov(&ts->ecx, ts->esi);
	game::sub_560C40(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_5691D1:
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8389D0);
	game::sub_413440(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x8392C0);
	game::sub_4D8EC0(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_5691F8:
	cmp(&ts->eflags, ts->eax, 0xD871B0A4);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_5694B1;
    }
	if (ts->eflags.zero) {
        goto loc_569486;
    }
	cmp(&ts->eflags, ts->eax, 0xC519BFC0);
	if (ts->eflags.zero) {
        goto loc_569305;
    }
	cmp(&ts->eflags, ts->eax, 0xC98356BA);
	if (!ts->eflags.zero) {
        goto loc_5694C9;
    }
	mov(mv, &ts->al, x86::mem(0x838558, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56926F;
    }
	mov(mv, &ts->eax, x86::mem(0x7FA208, 4));
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_56926F;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_4C1810(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_56926F;
    }
	mov(mv, &ts->edx, x86::mem(0x838554, 4));
	mov(mv, &ts->eax, x86::mem(0x838550, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x838980);
	game::sub_55C170(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x838550, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x8389D0);
	game::sub_6102F0(ts, mv);
	mov(mv, x86::mem(0x838558, 1), 0x0);

loc_56926F:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x114, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5692DB;
    }
	game::sub_438030(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x116, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56929D;
    }
	mov(mv, &ts->edx, x86::mem(0x82B884, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x74, 4));
	game::sub_458C40(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x116, 1), 0x0);

loc_56929D:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x115, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5692B4;
    }
	mov(mv, &ts->eax, x86::mem(0x7FA1C0, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x8ACAA8DF);
	goto loc_5692C0;

loc_5692B4:
	mov(mv, &ts->ecx, x86::mem(0x7FA1C0, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x9FBBD1D4);

loc_5692C0:
	game::sub_55DDA0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->edx);
	game::sub_5379A0(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_5692DB:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x116, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5692F6;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x3F800000);
	push(mv, &ts->esp, 0xD);
	game::sub_4C1920(ts, mv);
	add(&ts->esp, 0xC);

loc_5692F6:
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	game::sub_538760(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_569305:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x110, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x48, 4));
	sub(&ts->eax, 0x9);
	if (ts->eflags.zero) {
        goto loc_569426;
    }
	sub(&ts->eax, 0x97);
	if (ts->eflags.zero) {
        goto loc_569366;
    }
	sub(&ts->eax, 0x2);
	if (!ts->eflags.zero) {
        goto loc_5694C9;
    }
	mov(mv, &ts->dl, x86::mem(ts->esi + 0x116, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	setz(ts->eflags, &ts->al);
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, x86::mem(ts->esi + 0x116, 1), ts->al);
	if (ts->eflags.zero) {
        goto loc_569351;
    }
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x74, 4));
	game::sub_458B30(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_569351:
	mov(mv, &ts->edx, x86::mem(0x82B884, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x74, 4));
	game::sub_458C40(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_569366:
	game::sub_4C2030(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, x86::mem(0x838559, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_5693D0;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x110, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x54, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(0x838559, 1), 0x1);
	game::sub_4C18B0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_56939F;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x83855A, 1), ts->al);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56939F:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x110, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x54, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_4C18B0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_5693C2;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x83855A, 1), ts->al);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_5693C2:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x838559, 1), 0x0);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_5693D0:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x110, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x48, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x8389D0);
	game::sub_6102F0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x110, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x54, 4));
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_5693FF;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_4C18B0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_56944D;
    }

loc_5693FF:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x110, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x54, 4));
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_5694C9;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_4C18B0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_5694C9;
    }
	push(mv, &ts->esp, ts->eax);
	goto loc_56944F;

loc_569426:
	push(mv, &ts->esp, 0x9);
	mov(&ts->ecx, 0x8389D0);
	game::sub_6102F0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x110, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x54, 4));
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_569467;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_4C18B0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_569467;
    }

loc_56944D:
	push(mv, &ts->esp, 0x0);

loc_56944F:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x110, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x54, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_521040(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_569467:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x110, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x54, 4));
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_5694C9;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_4C18B0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_5694C9;
    }
	push(mv, &ts->esp, ts->eax);
	goto loc_56944F;

loc_569486:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x110, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x48, 4), 0xA2);
	if (!ts->eflags.zero) {
        goto loc_5694C9;
    }
	mov(mv, x86::mem(ts->esi + 0x116, 1), 0x0);
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x74, 4));
	game::sub_458C40(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_5694B1:
	cmp(&ts->eflags, ts->eax, 0xE1FDE1D1);
	if (!ts->eflags.zero) {
        goto loc_5694C9;
    }
	mov(&ts->ecx, 0x838980);
	mov(mv, x86::mem(ts->esi + 0x114, 1), 0x1);
	game::sub_530140(ts, mv);

loc_5694C9:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);
}

void sub_569500(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x778576);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x20, 4));
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->esi);
	game::sub_552330(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79CAF0);
	push(mv, &ts->esp, 0x797F30);
	xor_(&ts->ebx, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x150, 4));
	mov(mv, x86::mem(ts->esp + 0x30, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi, 4), 0x79D8A0);
	game::sub_5435D0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F814);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x1B4, 4));
	mov(mv, x86::mem(ts->esp + 0x2C, 1), 0x1);
	game::sub_542AC0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x20C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x210, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x214, 1), ts->bl);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx + 0xAC, 1), ts->bl);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x17C, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x180, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x1A4, 4), 0x43480000);
	mov(mv, x86::mem(ts->esi + 0x1B0, 4), 0x41A00000);
	game::sub_560D30(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xA936C3A2);
	push(mv, &ts->esp, ts->edx);
	game::sub_4954E0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x89782734);
	push(mv, &ts->esp, ts->eax);
	game::sub_4954E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_778560:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto ??1strstreambuf@std@@UAE@XZ_5;

loc_778568:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x150);
	goto sub_52EA90;

SEH_569500:
	mov(&ts->eax, 0x7E3B14);
	goto ___CxxFrameHandler;
}

void sub_5695F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_569610(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_569608;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_569608:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_569610(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x777D78);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x79D8A0);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x150, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	game::sub_52EA90(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	game::std__strstreambuf___strstreambuf_void_(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_777D70:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto ??1strstreambuf@std@@UAE@XZ_5;

SEH_569610:
	mov(&ts->eax, 0x7E3B38);
	goto ___CxxFrameHandler;
}

void sub_569670(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x214, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x8, 4));
	if (!ts->eflags.zero) {
        goto loc_569699;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_543D40(ts, mv);

loc_569699:
	cmp(&ts->eflags, ts->edi, 0x911AB364);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_5698F8;
    }
	if (ts->eflags.zero) {
        goto loc_5698A1;
    }
	cmp(&ts->eflags, ts->edi, 0x34F8A1DE);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_5697C7;
    }
	if (ts->eflags.zero) {
        goto loc_5697BC;
    }
	cmp(&ts->eflags, ts->edi, 0x9F00F07);
	if (ts->eflags.zero) {
        goto loc_569712;
    }
	cmp(&ts->eflags, ts->edi, 0x1FAB5998);
	if (ts->eflags.zero) {
        goto loc_5696D9;
    }
	cmp(&ts->eflags, ts->edi, 0x34DC1BEC);
	if (!ts->eflags.zero) {
        goto loc_569CB2;
    }

loc_5696D9:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x214, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_569B39;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	game::sub_538B30(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79D790);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x7B, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_569712:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x15C, 4));
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x2C, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1D);
	mov(&ts->ecx, 0x85AD40);
	game::sub_5289F0(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1D);
	mov(&ts->ecx, 0x8392C0);
	game::sub_631D20(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1E);
	mov(&ts->ecx, 0x8392C0);
	game::sub_631D20(ts, mv);
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8389D0);
	game::sub_413440(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x8392C0);
	game::sub_4D8EC0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8389AC, 4));
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x8392C0);
	add(&ts->ecx, 0x18);
	game::sub_503950(ts, mv);
	push(mv, &ts->esp, 0x8389D0);
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8637D0);
	game::sub_55B1A0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->esi + 0x20C, 4), ts->edi);
	mov(mv, &ts->ecx, x86::mem(0x861E74, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, 0xEB3A688A);
	push(mv, &ts->esp, ts->edx);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_55FCE0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_5697BC:
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x7B, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_5697C7:
	cmp(&ts->eflags, ts->edi, 0x406415E3);
	if (ts->eflags.zero) {
        goto loc_569877;
    }
	cmp(&ts->eflags, ts->edi, 0x51123592);
	if (ts->eflags.zero) {
        goto loc_5697F7;
    }
	cmp(&ts->eflags, ts->edi, 0x72619778);
	if (!ts->eflags.zero) {
        goto loc_569CB2;
    }
	push(mv, &ts->esp, 0xFFFFFFFF);
	mov(&ts->ecx, ts->esi);
	game::sub_561140(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_5697F7:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x15C, 4));
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x2C, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1D);
	mov(&ts->ecx, 0x8392C0);
	game::sub_631D20(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1E);
	mov(&ts->ecx, 0x8392C0);
	game::sub_631D20(ts, mv);
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8389D0);
	game::sub_413440(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x8392C0);
	game::sub_4D8EC0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8389AC, 4));
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x8392C0);
	add(&ts->ecx, 0x18);
	game::sub_503950(ts, mv);
	push(mv, &ts->esp, 0x8389D0);
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8637D0);
	game::sub_55B1A0(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x20C, 4), ts->edi);
	game::sub_55FCE0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_569877:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x22, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_569CB2;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x214, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(&ts->ecx, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_569AB4;
    }
	game::sub_5614B0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_5698A1:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x214, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5698BB;
    }
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_55FCE0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_5698BB:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537D40(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_569CB2;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C60(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_5698F8:
	cmp(&ts->eflags, ts->edi, 0xB4EDEB6D);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_569B5C;
    }
	if (ts->eflags.zero) {
        goto loc_5696D9;
    }
	cmp(&ts->eflags, ts->edi, 0x911C0A4B);
	if (ts->eflags.zero) {
        goto loc_569B29;
    }
	cmp(&ts->eflags, ts->edi, 0x9120409E);
	if (ts->eflags.zero) {
        goto loc_569BB7;
    }
	cmp(&ts->eflags, ts->edi, 0x9803F6E2);
	if (!ts->eflags.zero) {
        goto loc_569CB2;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->al, x86::mem(ts->esi + 0x214, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, &ts->ebx, x86::mem(ts->edi + 0x10, 4));
	mov(mv, x86::mem(ts->ebp + 0x8, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_569A5E;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x7A, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_569A35;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20C, 4));
	game::sub_610000(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DB50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0xC, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8389D0);
	if (ts->eflags.zero) {
        goto loc_5699D6;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4C, 4));
	mov(mv, &ts->ebx, x86::mem(ts->eax + 0x8, 4));
	game::sub_413440(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x1D);
	mov(&ts->ecx, 0x8389D0);
	game::sub_631D20(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x1E);
	mov(&ts->ecx, 0x8389D0);
	game::sub_631D20(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x8389D0);
	game::sub_4D8EC0(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x8389D0);
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8637D0);
	game::sub_55B1A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4C, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x1D);
	game::sub_4C2100(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x8, 4));
	goto loc_569A32;

loc_5699D6:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x20C, 4));
	game::sub_413440(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1D);
	mov(&ts->ecx, 0x8389D0);
	game::sub_631D20(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1E);
	mov(&ts->ecx, 0x8389D0);
	game::sub_631D20(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x8389D0);
	game::sub_4D8EC0(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x8389D0);
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8637D0);
	game::sub_55B1A0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1D);
	game::sub_4C2100(ts, mv);

loc_569A32:
	add(&ts->esp, 0x10);

loc_569A35:
	push(mv, &ts->esp, ts->ebx);
	game::sub_52D100(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_569AC0;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x22, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_569CB2;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_5614B0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_569A5E:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x38E39AD7);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A60(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->edi, ts->eax);
	game::sub_52D100(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_569A97;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->al, x86::mem(ts->edx + 0x22, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_569CB2;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_559AB0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_569A97:
	push(mv, &ts->esp, ts->edi);
	game::sub_52D100(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_569AC0;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x22, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_569CB2;
    }
	mov(&ts->ecx, ts->esi);

loc_569AB4:
	game::sub_559AB0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_569AC0:
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x1B4, 4));
	game::sub_538130(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1F0, 4));
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_569B1A;
    }
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.zero) {
        goto loc_569B1A;
    }
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8763EC, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_569B04;
    }
	mov(&ts->eax, 0x1);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_561140(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_569B04:
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_569CB2;
    }
	mov(&ts->eax, 0xFFFFFFFF);

loc_569B1A:
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_561140(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_569B29:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_561140(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_569B39:
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x150, 4));
	push(mv, &ts->esp, 0x1);
	mov(mv, x86::mem(ts->ecx + 0x2F, 1), 0x1);
	game::sub_52EB90(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_538CA0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x7B, 1), 0x0);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_569B5C:
	cmp(&ts->eflags, ts->edi, 0xB5971BF1);
	if (ts->eflags.zero) {
        goto loc_569BB7;
    }
	cmp(&ts->eflags, ts->edi, 0xC98356BA);
	if (ts->eflags.zero) {
        goto loc_569BA5;
    }
	cmp(&ts->eflags, ts->edi, 0xE1FDE1D1);
	if (!ts->eflags.zero) {
        goto loc_569CB2;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x13C, 4), 0x911AB364);
	if (!ts->eflags.zero) {
        goto loc_569CB2;
    }
	mov(&ts->ecx, 0x838980);
	game::sub_530140(ts, mv);
	game::sub_54F980(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_55BDF0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_569BA5:
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x150, 4));
	game::sub_538760(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_569BB7:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x214, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_569CB2;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20C, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x58, 4));
	game::sub_610000(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DB50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0xC, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8389D0);
	if (ts->eflags.zero) {
        goto loc_569C53;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x4C, 4));
	mov(mv, &ts->esi, x86::mem(ts->edx + 0x8, 4));
	game::sub_413440(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x1D);
	mov(&ts->ecx, 0x8389D0);
	game::sub_631D20(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x1E);
	mov(&ts->ecx, 0x8389D0);
	game::sub_631D20(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x8389D0);
	game::sub_4D8EC0(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x8389D0);
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8637D0);
	game::sub_55B1A0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x1D);
	game::sub_4C2100(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_569C53:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x20C, 4));
	game::sub_413440(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1D);
	mov(&ts->ecx, 0x8389D0);
	game::sub_631D20(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1E);
	mov(&ts->ecx, 0x8389D0);
	game::sub_631D20(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x8389D0);
	game::sub_4D8EC0(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x8389D0);
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8637D0);
	game::sub_55B1A0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x20C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x1D);
	game::sub_4C2100(ts, mv);
	add(&ts->esp, 0x10);

loc_569CB2:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);
}

void sub_569CC0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7785A4);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	game::sub_552780(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x79D8BC);
	xor_(&ts->ebx, ts->ebx);
	mov(&ts->edx, 0x783FE5);
	mov(&ts->ecx, 0x42380000);
	mov(&ts->eax, 0x79AE30);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x154, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x158, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x15C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x160, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x164, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x168, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x16C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x170, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x174, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x17C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x178, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x180, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x184, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x188, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x18C, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x150, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x14C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x190, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1A0, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x1A4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1A8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1AC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1B0, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1B4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1B8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1BC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1C0, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1C8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1C4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1CC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1D0, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1D4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1D8, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x19C, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x198, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x1DC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1E4, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x1E5, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x1E6, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x149, 1), ts->bl);
	mov(mv, x86::mem(0x838528, 1), ts->bl);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x14, 1), 0x2);
	mov(mv, x86::mem(0x83855C, 1), ts->bl);
	mov(mv, x86::mem(0x83855B, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x134, 4), 0x4);
	game::sub_547E30(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_562790(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x7FA1CC, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_569E42;
    }
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->ebx);

loc_569E42:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_778580:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto ??1strstreambuf@@UAE@XZ;

loc_778588:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x14C);
	goto sub_4957A0;

loc_778596:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x198);
	goto sub_4957A0;

SEH_569CC0:
	mov(&ts->eax, 0x7E3B6C);
	goto ___CxxFrameHandler;
}

void sub_569E60(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_569E80(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_569E78;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_569E78:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_569E80(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776FE8);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(&ts->eax, 0x78F544);
	mov(mv, x86::mem(ts->esi + 0x198, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x14C, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x795CDC);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	game::sub_4358E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->esi, 4), 0x79AC00);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_776FE0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

SEH_569E80:
	mov(&ts->eax, 0x7E3CEC);
	goto ___CxxFrameHandler;
}

void sub_569EE0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	mov(mv, &ts->al, x86::mem(0x83855B, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x14, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x8, 4));
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_569F12;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1E6, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_569F12;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0xC, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_556020(ts, mv);

loc_569F12:
	cmp(&ts->eflags, ts->edi, 0x72619778);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_56A14B;
    }
	if (ts->eflags.zero) {
        goto loc_56A113;
    }
	cmp(&ts->eflags, ts->edi, 0x34DC1BEC);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_56A047;
    }
	if (ts->eflags.zero) {
        goto loc_56A179;
    }
	cmp(&ts->eflags, ts->edi, 0x153E234);
	if (ts->eflags.zero) {
        goto loc_56A0F9;
    }
	cmp(&ts->eflags, ts->edi, 0x9F00F07);
	if (ts->eflags.zero) {
        goto loc_569F6A;
    }
	cmp(&ts->eflags, ts->edi, 0xC407210);
	if (!ts->eflags.zero) {
        goto loc_56A2F7;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_569F6A:
	game::sub_53B740(ts, mv);
	game::sub_53B6C0(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_50F270(ts, mv);
	mov(mv, x86::mem(0x839BB0, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_569FB0;
    }
	mov(mv, &ts->ecx, x86::mem(0x7FA1C8, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x422F7587);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x1E4, 1), 0x1);
	game::sub_562530(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_569FB0:
	mov(&ts->ecx, ts->esi);
	game::sub_50F270(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x838980);
	game::sub_521B00(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_50F270(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x838980);
	game::sub_5213D0(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x861E74, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, 0xEB3A688A);
	push(mv, &ts->esp, ts->eax);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x7FA1C8, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x14);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_56A00A;
    }
	mov(&ts->ecx, ts->eax);
	game::sub_53B6F0(ts, mv);

loc_56A00A:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x790CEC);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x7FA1C8, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79D7D8);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x20);
	mov(&ts->ecx, ts->esi);
	game::sub_562530(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56A047:
	cmp(&ts->eflags, ts->edi, 0x35F8620B);
	if (ts->eflags.zero) {
        goto loc_56A0ED;
    }
	cmp(&ts->eflags, ts->edi, 0x51123592);
	if (!ts->eflags.zero) {
        goto loc_56A2F7;
    }
	mov(mv, &ts->ecx, x86::mem(0x7FA1C8, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_56A079;
    }
	mov(&ts->ecx, ts->eax);
	game::sub_53B6F0(ts, mv);

loc_56A079:
	game::sub_53B740(ts, mv);
	game::sub_53B6C0(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_50F270(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x838980);
	game::sub_5213D0(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_50F270(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x838980);
	game::sub_521510(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x790CEC);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x7FA1C8, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79D7D8);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x20);
	mov(&ts->ecx, ts->esi);
	game::sub_51FF40(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_562530(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56A0ED:
	game::sub_53B740(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x1E6, 1), 0x0);

loc_56A0F9:
	mov(&ts->ecx, ts->esi);
	game::sub_51FF40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x24, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56A113:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1E6, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_56A2F7;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_562530(ts, mv);
	movsx(mv, &ts->eax, x86::mem(0x838082, 1));
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_56A2F7;
    }
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_458520(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56A14B:
	cmp(&ts->eflags, ts->edi, 0xB5971BF1);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_56A26C;
    }
	if (ts->eflags.zero) {
        goto loc_56A20B;
    }
	cmp(&ts->eflags, ts->edi, 0x911C0A4B);
	if (ts->eflags.zero) {
        goto loc_56A1E1;
    }
	cmp(&ts->eflags, ts->edi, 0xB4623F67);
	if (ts->eflags.zero) {
        goto loc_56A179;
    }
	cmp(&ts->eflags, ts->edi, 0xB4EDEB6D);
	if (!ts->eflags.zero) {
        goto loc_56A2F7;
    }

loc_56A179:
	mov(mv, &ts->ecx, x86::mem(0x7FA1C8, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x8637B0);
	game::sub_51BB70(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_56A1A1;
    }
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x14, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_56A1A1;
    }
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x4C, 4));
	game::sub_538B30(ts, mv);
	mov(mv, x86::mem(ts->edi + 0x7B, 1), 0x1);

loc_56A1A1:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x790CEC);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x7FA1C8, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79D7D8);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x20);
	game::sub_53B740(ts, mv);
	game::sub_53B6C0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56A1E1:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1E6, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_56A2F7;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_562530(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x7);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51DE60(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56A20B:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1E6, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_56A2F7;
    }
	mov(mv, &ts->edx, x86::mem(0x7FA1C8, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x8637B0);
	game::sub_51BB70(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_56A246;
    }
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x14, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_56A246;
    }
	game::sub_53B710(ts, mv);
	game::sub_53B690(ts, mv);
	mov(mv, x86::mem(ts->edi + 0x163, 1), 0x1);

loc_56A246:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x10, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x140, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x138, 4), 0xB5971BF1);
	mov(mv, x86::mem(ts->esi + 0x64, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x13C, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56A26C:
	cmp(&ts->eflags, ts->edi, 0xC98356BA);
	if (ts->eflags.zero) {
        goto loc_56A2D1;
    }
	cmp(&ts->eflags, ts->edi, 0xE1FDE1D1);
	if (!ts->eflags.zero) {
        goto loc_56A2F7;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1E6, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_56A2F7;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x138, 4));
	cmp(&ts->eflags, ts->eax, 0x911AB364);
	if (ts->eflags.zero) {
        goto loc_56A2BC;
    }
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_56A2F7;
    }
	mov(mv, &ts->edx, x86::mem(0x7FA1C8, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x8577E0A0);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x1E4, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56A2BC:
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x1E4, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x83855B, 1), 0x1);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56A2D1:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1E4, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_56A2E4;
    }
	mov(mv, &ts->al, x86::mem(0x83855C, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56A2F7;
    }

loc_56A2E4:
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_56A2F7;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_5376F0(ts, mv);

loc_56A2F7:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);
}

void sub_56A300(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x8, 4));
	cmp(&ts->eflags, ts->edi, 0x911C0A4B);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_56A63A;
    }
	if (ts->eflags.zero) {
        goto loc_56A62A;
    }
	cmp(&ts->eflags, ts->edi, 0x51123592);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_56A58C;
    }
	if (ts->eflags.zero) {
        goto loc_56A551;
    }
	cmp(&ts->eflags, ts->edi, 0x34DC1BEC);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_56A3AF;
    }
	if (ts->eflags.zero) {
        goto loc_56A744;
    }
	cmp(&ts->eflags, ts->edi, 0x9F00F07);
	if (ts->eflags.zero) {
        goto loc_56A354;
    }
	cmp(&ts->eflags, ts->edi, 0xC407210);
	if (ts->eflags.zero) {
        goto loc_56A3BB;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56A354:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x5C, 4));
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x2C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x110, 4));
	mov(mv, &ts->ebx, x86::mem(ts->eax + 0x48, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, 0x85AD40);
	game::sub_5289F0(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, 0x838980);
	game::sub_55C230(ts, mv);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x838980);
	game::sub_521280(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x7FA1C4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x6691C08E);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x116, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x114, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56A3AF:
	cmp(&ts->eflags, ts->edi, 0x406415E3);
	if (!ts->eflags.zero) {
        goto loc_56A842;
    }

loc_56A3BB:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_56A842;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x110, 4));
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x48, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x5C, 4));
	mov(mv, &ts->ebx, x86::mem(ts->ecx + 0x2C, 4));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_56A842;
    }
	cmp(&ts->eflags, ts->edi, 0xAA);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_56A842;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x838980);
	game::sub_50F1B0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56A40C;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDA15D7E5);
	push(mv, &ts->esp, 0x78FA24);
	push(mv, &ts->esp, ts->edx);
	goto loc_56A45E;

loc_56A40C:
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_56A4D8;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x838980);
	game::sub_521BE0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_56A4D8;
    }
	test(mv, &ts->eflags, x86::mem(ts->ebx + 0x5, 1), 0xE0);
	if (ts->eflags.zero) {
        goto loc_56A4D8;
    }
	mov(mv, &ts->eax, x86::mem(0x861E74, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x85AD40);
	mov(mv, x86::mem(ts->ebp + 0x8, 4), ts->eax);
	game::sub_514280(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(ts->ebp + 0x8, 4), ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_56A47E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xD1AC60BE);
	push(mv, &ts->esp, 0x78FA24);
	push(mv, &ts->esp, ts->ecx);

loc_56A45E:
	game::sub_558430(ts, mv);
	add(&ts->esp, 0xC);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(0x838970, 4), 0x34DC1BEC);
	game::sub_562940(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56A47E:
	cmp(&ts->eflags, ts->edi, 0x22);
	mov(&ts->eax, 0x44B7167F);
	if (!ts->eflags.zero) {
        goto loc_56A4B1;
    }
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x838980);
	game::sub_50F150(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56A49E;
    }
	mov(&ts->eax, 0xF58C0CD9);
	goto loc_56A4B1;

loc_56A49E:
	mov(mv, &ts->al, x86::mem(ts->ebx + 0x5, 1));
	and_(&ts->al, 0xE0);
	neg(&ts->al);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0x294E7F46);
	add(&ts->eax, 0x266131CE);

loc_56A4B1:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xB4623F67);
	push(mv, &ts->esp, 0xB4623F67);
	push(mv, &ts->esp, 0x9F00F07);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x78FA24);
	push(mv, &ts->esp, ts->edx);
	goto loc_56A531;

loc_56A4D8:
	cmp(&ts->eflags, ts->edi, 0x22);
	mov(&ts->eax, 0xF5AC2B2A);
	if (!ts->eflags.zero) {
        goto loc_56A50C;
    }
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x838980);
	game::sub_50F150(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56A4F8;
    }
	mov(&ts->eax, 0x113EAB80);
	goto loc_56A50C;

loc_56A4F8:
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_56A507;
    }
	test(mv, &ts->eflags, x86::mem(ts->ebx + 0x5, 1), 0xE0);
	mov(&ts->eax, 0x266131CE);
	if (ts->eflags.zero) {
        goto loc_56A50C;
    }

loc_56A507:
	mov(&ts->eax, 0x8E4312B0);

loc_56A50C:
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xB4623F67);
	push(mv, &ts->esp, 0xB4623F67);
	push(mv, &ts->esp, 0x51123592);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x78FA24);
	push(mv, &ts->esp, ts->eax);

loc_56A531:
	game::sub_558790(ts, mv);
	add(&ts->esp, 0x24);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(0x838970, 4), 0xB4623F67);
	game::sub_562940(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56A551:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x5C, 4));
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x2C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x110, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x48, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x838980);
	game::sub_55C230(ts, mv);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x838980);
	game::sub_521280(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x116, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x114, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56A58C:
	cmp(&ts->eflags, ts->edi, 0x72619778);
	if (ts->eflags.zero) {
        goto loc_56A61A;
    }
	cmp(&ts->eflags, ts->edi, 0x81F0B71A);
	if (ts->eflags.zero) {
        goto loc_56A5C1;
    }
	cmp(&ts->eflags, ts->edi, 0x911AB364);
	if (!ts->eflags.zero) {
        goto loc_56A842;
    }
	push(mv, &ts->esp, 0x799A88);
	push(mv, &ts->esp, ts->edi);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56A5C1:
	push(mv, &ts->esp, 0x3F800000);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	game::sub_4C1860(ts, mv);
	push(mv, &ts->esp, 0x3F800000);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	game::sub_4C1860(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537D40(ts, mv);
	add(&ts->esp, 0x24);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_56A842;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C60(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56A61A:
	push(mv, &ts->esp, 0xFFFFFFFF);
	mov(&ts->ecx, ts->esi);
	game::sub_55CAC0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56A62A:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_55CAC0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56A63A:
	cmp(&ts->eflags, ts->edi, 0xB4EDEB6D);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_56A764;
    }
	if (ts->eflags.zero) {
        goto loc_56A744;
    }
	cmp(&ts->eflags, ts->edi, 0x9120409E);
	if (ts->eflags.zero) {
        goto loc_56A822;
    }
	cmp(&ts->eflags, ts->edi, 0x9803F6E2);
	if (ts->eflags.zero) {
        goto loc_56A67A;
    }
	cmp(&ts->eflags, ts->edi, 0xB4623F67);
	if (!ts->eflags.zero) {
        goto loc_56A842;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_562A20(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56A67A:
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xB4, 4));
	game::sub_538130(ts, mv);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8763EC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xF0, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_56A6A7;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	mov(&ts->ecx, 0x1);
	goto loc_56A6B7;

loc_56A6A7:
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_56A6B7;
    }
	or_(&ts->ecx, 0xFFFFFFFF);

loc_56A6B7:
	lea(mv, &ts->eax, x86::mem(ts->ecx + 0xA, 4));
	cmp(&ts->eflags, ts->eax, 0x14);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_56A6C6;
    }
	movzx(mv, &ts->edx, x86::mem(ts->eax + 0x56A85C, 1));
	jmp(x86::mem(0x56A84C, 4));

loc_56A6CD:
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_55CAC0(ts, mv);
	goto def_56A6C6;

loc_56A6D7:
	mov(mv, &ts->eax, x86::mem(0x7FA1A8, 4));
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto def_56A6C6;
    }

loc_56A6E2:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_55CAC0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x7FA1A8, 4));
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_56A6E2;
    }
	goto def_56A6C6;

loc_56A6F7:
	mov(mv, &ts->eax, x86::mem(0x7FA1A8, 4));
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto def_56A6C6;
    }

loc_56A702:
	push(mv, &ts->esp, 0xFFFFFFFF);
	mov(&ts->ecx, ts->esi);
	game::sub_55CAC0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x7FA1A8, 4));
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_56A702;
    }

def_56A6C6:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_52D090(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56A842;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xC407210);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56A744:
	mov(&ts->ecx, ts->esi);
	game::sub_562A20(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x7FA1C4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	game::sub_51CDF0(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56A764:
	cmp(&ts->eflags, ts->edi, 0xB5971BF1);
	if (ts->eflags.zero) {
        goto loc_56A822;
    }
	cmp(&ts->eflags, ts->edi, 0xC98356BA);
	if (ts->eflags.zero) {
        goto loc_56A79C;
    }
	cmp(&ts->eflags, ts->edi, 0xE1FDE1D1);
	if (!ts->eflags.zero) {
        goto loc_56A842;
    }
	mov(&ts->ecx, 0x838980);
	mov(mv, x86::mem(ts->esi + 0x114, 1), 0x1);
	game::sub_530140(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56A79C:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x114, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56A813;
    }
	push(mv, &ts->esp, 0x3F800000);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	game::sub_4C1860(ts, mv);
	push(mv, &ts->esp, 0x3F800000);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	game::sub_4C1860(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x116, 1));
	add(&ts->esp, 0x18);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56A7DC;
    }
	mov(mv, &ts->eax, x86::mem(0x7FA1C4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x8ACAA8DF);
	goto loc_56A7E8;

loc_56A7DC:
	mov(mv, &ts->ecx, x86::mem(0x7FA1C4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x9FBBD1D4);

loc_56A7E8:
	game::sub_55DDA0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esi + 0x114, 1), 0x0);
	game::sub_5379A0(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x0);
	game::sub_4C2140(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56A813:
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	game::sub_538760(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56A822:
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8389D0);
	game::sub_413440(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x8392C0);
	game::sub_4D8EC0(ts, mv);
	add(&ts->esp, 0xC);

loc_56A842:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);
}

void sub_56A880(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x159, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x8, 4));
	if (!ts->eflags.zero) {
        goto loc_56A8A8;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_543D40(ts, mv);

loc_56A8A8:
	cmp(&ts->eflags, ts->edi, 0x911AB364);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_56AA76;
    }
	if (ts->eflags.zero) {
        goto loc_56A9FE;
    }
	cmp(&ts->eflags, ts->edi, 0xC407210);
	if (ts->eflags.zero) {
        goto loc_56A931;
    }
	cmp(&ts->eflags, ts->edi, 0x34DC1BEC);
	if (ts->eflags.zero) {
        goto loc_56A919;
    }
	cmp(&ts->eflags, ts->edi, 0x8ACAA8DF);
	if (!ts->eflags.zero) {
        goto loc_56AAF5;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDF422345);
	push(mv, &ts->esp, ts->eax);
	game::sub_495520(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(ts->esi + 0x159, 1), 0x0);
	mov(mv, x86::mem(ts->esi + 0x7B, 1), 0x1);
	game::sub_4C2140(ts, mv);
	add(&ts->esp, 0x10);
	mov(&ts->ecx, ts->esi);
	game::sub_538CA0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537950(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56A919:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x159, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56AAF5;
    }
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x7B, 1), 0x0);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56A931:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->al, x86::mem(ts->edx + 0x22, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_56AAF5;
    }
	push(mv, &ts->esp, 0xD);
	mov(&ts->ecx, 0x8392C0);
	game::sub_6102F0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x48, 4), 0x9B);
	if (!ts->eflags.zero) {
        goto loc_56A96D;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_56A966;
    }
	mov(mv, &ts->dl, x86::mem(ts->eax + 0x5, 1));
	shr(&ts->dl, 0x5);
	cmp(&ts->eflags, ts->dl, 0x3);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_56A96D;
    }

loc_56A966:
	push(mv, &ts->esp, 0xD649BE08);
	goto loc_56A999;

loc_56A96D:
	push(mv, &ts->esp, 0x22);
	mov(&ts->ecx, 0x8392C0);
	game::sub_6102F0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x48, 4), 0x9D);
	if (!ts->eflags.zero) {
        goto loc_56A9BA;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_56A994;
    }
	mov(mv, &ts->dl, x86::mem(ts->eax + 0x5, 1));
	shr(&ts->dl, 0x5);
	cmp(&ts->eflags, ts->dl, 0x3);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_56A9BA;
    }

loc_56A994:
	push(mv, &ts->esp, 0xA9E966D7);

loc_56A999:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x78FA24);
	push(mv, &ts->esp, ts->eax);
	game::sub_558430(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(0x838970, 4), 0x34DC1BEC);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56A9BA:
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x22, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_56AAF5;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x159, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_56A9DC;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_557130(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56A9DC:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x15C, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_56AAF5;
    }
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0xC407210);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56A9FE:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x159, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56AA15;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_562B10(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56AA15:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537D40(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_56AAF5;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x15B, 1), 0x1);
	game::sub_50F290(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x15C, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x81F0B71A);
	game::sub_55DDA0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C60(ts, mv);
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56AA76:
	cmp(&ts->eflags, ts->edi, 0x9FBBD1D4);
	if (ts->eflags.zero) {
        goto loc_56AAF1;
    }
	cmp(&ts->eflags, ts->edi, 0xC98356BA);
	if (ts->eflags.zero) {
        goto loc_56AA9B;
    }
	cmp(&ts->eflags, ts->edi, 0xE1FDE1D1);
	if (!ts->eflags.zero) {
        goto loc_56AAF5;
    }
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x15A, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56AA9B:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x15A, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56AAF5;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x15B, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, x86::mem(ts->esi + 0x15A, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_56AADF;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50B8C0(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x0);
	game::sub_4C2140(ts, mv);
	add(&ts->esp, 0x10);
	game::sub_54F980(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_55BDF0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56AADF:
	game::sub_54F980(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_55BD60(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56AAF1:
	mov(mv, x86::mem(ts->esi + 0x7B, 1), 0x1);

loc_56AAF5:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);
}

void sub_56AB00(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0xC, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	game::sub_543D40(ts, mv);
	cmp(&ts->eflags, ts->esi, 0x9803F6E2);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_56AC33;
    }
	if (ts->eflags.zero) {
        goto loc_56ABCF;
    }
	cmp(&ts->eflags, ts->esi, 0x5073EF13);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_56AB74;
    }
	if (ts->eflags.zero) {
        goto loc_56AD2C;
    }
	cmp(&ts->eflags, ts->esi, 0x1FAB5998);
	if (ts->eflags.zero) {
        goto loc_56AB66;
    }
	cmp(&ts->eflags, ts->esi, 0x35F8620B);
	if (!ts->eflags.zero) {
        goto loc_56AE77;
    }
	push(mv, &ts->esp, 0xE);
	mov(&ts->ecx, 0x8635BC);
	game::sub_5243D0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56AB66:
	mov(&ts->ecx, ts->edi);
	game::sub_538CA0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56AB74:
	cmp(&ts->eflags, ts->esi, 0x51123592);
	if (ts->eflags.zero) {
        goto loc_56AE6B;
    }
	cmp(&ts->eflags, ts->esi, 0x911AB364);
	if (!ts->eflags.zero) {
        goto loc_56AE77;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537D40(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_56AE77;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->edi + 0x13C, 4), ts->esi);
	game::sub_537C60(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56ABCF:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0xCF6F0439);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A60(ts, mv);
	mov(&ts->esi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0xABA93D3F);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A60(ts, mv);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ebx, ts->eax);
	game::sub_52D100(ts, mv);
	add(&ts->esp, 0x14);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56AC0F;
    }
	push(mv, &ts->esp, 0x5073EF13);
	mov(&ts->ecx, ts->edi);
	game::sub_563290(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56AC0F:
	push(mv, &ts->esp, ts->ebx);
	game::sub_52D100(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56AE77;
    }
	push(mv, &ts->esp, 0xD9FEEC59);
	mov(&ts->ecx, ts->edi);
	game::sub_563290(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56AC33:
	cmp(&ts->eflags, ts->esi, 0xD9FEEC59);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_56AD3B;
    }
	if (ts->eflags.zero) {
        goto loc_56AD2C;
    }
	cmp(&ts->eflags, ts->esi, 0x9A3B571D);
	if (ts->eflags.zero) {
        goto loc_56AE6B;
    }
	cmp(&ts->eflags, ts->esi, 0xC519BFC0);
	if (!ts->eflags.zero) {
        goto loc_56AE77;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x58, 4));
	mov(mv, &ts->ebx, x86::mem(ts->ecx + 0x48, 4));
	mov(&ts->ecx, 0x838980);
	game::sub_521580(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_56AC88;
    }
	push(mv, &ts->esp, 0xA9);
	mov(&ts->ecx, 0x838980);
	game::sub_50EE90(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, x86::mem(ts->ebp + 0xB, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_56AC8C;
    }

loc_56AC88:
	mov(mv, x86::mem(ts->ebp + 0xB, 1), 0x1);

loc_56AC8C:
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, 0x838980);
	game::sub_521850(ts, mv);
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_56ACB2;
    }
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, 0x8392C0);
	game::sub_6102F0(ts, mv);
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_56AE77;
    }

loc_56ACB2:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x39DD714);
	mov(&ts->ecx, ts->esi);
	game::sub_61B500(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->ebp + 0xB, 1));
	test(&ts->eflags, ts->eax, ts->eax);
	setnz(ts->eflags, &ts->al);
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_56AE77;
    }
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56AE77;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xC519BFC0);
	mov(&ts->ecx, ts->edi);
	game::sub_50DA20(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C60(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(0x839BB8, 4), ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x8389A8, 4), ts->ebx);
	mov(mv, x86::mem(0x838983, 1), 0x1);
	mov(mv, x86::mem(0x8389A0, 4), 0x1);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56AD2C:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	game::sub_563290(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56AD3B:
	cmp(&ts->eflags, ts->esi, 0xE1FDE1D1);
	if (ts->eflags.zero) {
        goto loc_56AE50;
    }
	cmp(&ts->eflags, ts->esi, 0xE75749D4);
	if (!ts->eflags.zero) {
        goto loc_56AE77;
    }
	mov(&ts->ecx, 0x838980);
	game::sub_521580(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_56AD78;
    }
	push(mv, &ts->esp, 0xA9);
	mov(&ts->ecx, 0x838980);
	game::sub_50EE90(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_56AD78;
    }
	xor_(&ts->bl, ts->bl);
	goto loc_56AD7A;

loc_56AD78:
	mov(&ts->bl, 0x1);

loc_56AD7A:
	mov(mv, &ts->eax, x86::mem(0x8389A8, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x838980);
	game::sub_5477F0(ts, mv);
	test(&ts->eflags, ts->bl, ts->bl);
	if (ts->eflags.zero) {
        goto loc_56ADF0;
    }
	mov(&ts->esi, 0x1);

loc_56AD93:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x50, 4));
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x50, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_56ADD5;
    }
	lea(mv, &ts->edx, x86::mem(ts->esi - 0x1, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_43BE60(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_56ADAF;
    }
	lea(mv, &ts->ebx, x86::mem(ts->eax - 0x4, 4));
	goto loc_56ADB1;

loc_56ADAF:
	xor_(&ts->ebx, ts->ebx);

loc_56ADB1:
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x79D8D0);
	game::sub_50B990(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x10, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_56ADD5;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x24, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_56ADD5;
    }
	mov(mv, x86::mem(ts->ecx + 0x24, 4), ts->eax);
	or_(mv, x86::mem(ts->ecx + 0x1C, 4), 0x400000);

loc_56ADD5:
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, 0x4);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_56AD93;
    }
	mov(&ts->ecx, ts->edi);
	game::sub_538CA0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x10, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56ADF0:
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x4C, 4));
	xor_(&ts->esi, ts->esi);
	game::sub_495910(ts, mv);
	dec(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0x3);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_56AE00;
    }
	jmp(x86::mem(0x56AEA0, 4));

loc_56AE07:
	mov(&ts->esi, 0x27B8F0DD);
	goto def_56AE00;

loc_56AE0E:
	mov(&ts->esi, 0x27B8F0DE);
	goto def_56AE00;

loc_56AE15:
	mov(&ts->esi, 0x27B8F0DF);
	goto def_56AE00;

loc_56AE1C:
	mov(&ts->esi, 0x27B8F0E0);

def_56AE00:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x50, 4));
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x50, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_56AE3B;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x58, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C990(ts, mv);
	add(&ts->esp, 0x8);

loc_56AE3B:
	mov(&ts->ecx, ts->edi);
	game::sub_538CA0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x10, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56AE50:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x13C, 4));
	cmp(&ts->eflags, ts->eax, 0xC407210);
	if (ts->eflags.zero) {
        goto loc_56AE6B;
    }
	cmp(&ts->eflags, ts->eax, 0x911AB364);
	if (ts->eflags.zero) {
        goto loc_56AE7E;
    }
	cmp(&ts->eflags, ts->eax, 0xC519BFC0);
	if (!ts->eflags.zero) {
        goto loc_56AE77;
    }

loc_56AE6B:
	game::sub_54F980(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_55BD60(ts, mv);

loc_56AE77:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56AE7E:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_50B8C0(ts, mv);
	add(&ts->esp, 0x8);
	game::sub_54F980(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_55BDF0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);
}

void sub_56AEB0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7785D4);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->esi);
	game::sub_552330(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x158, 4));
	xor_(&ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esi, 4), 0x79D8EC);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x160, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x168, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x16C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x170, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x174, 4), 0x2DAAB07);
	mov(mv, x86::mem(ts->esi + 0x178, 4), 0x14);
	mov(mv, x86::mem(ts->esi + 0x17C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x180, 4), 0x43180000);
	mov(mv, x86::mem(ts->esi + 0x184, 4), 0x43250000);
	mov(mv, x86::mem(ts->esi + 0x188, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x189, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x18A, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x18B, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x18C, 1), ts->bl);
	mov(mv, x86::mem(0x838528, 1), ts->bl);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x79D8E0);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x20, 1), 0x2);
	game::sub_4953C0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x16C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x79CB30);
	push(mv, &ts->esp, ts->eax);
	game::sub_4953E0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x170, 4), ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x14);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x189, 1), 0x1);
	game::sub_563C60(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	cmp(&ts->eflags, ts->edi, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x30, 4), 0xA);
	mov(mv, x86::mem(ts->esi + 0x2C, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_56AFD1;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_56AFD1;
    }
	push(mv, &ts->esp, 0xCF6F0439);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_56AFEC;
    }

loc_56AFD1:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_56AFEA;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0xCF6F0439);
	game::sub_52C570(ts, mv);
	goto loc_56AFEC;

loc_56AFEA:
	xor_(&ts->eax, ts->eax);

loc_56AFEC:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	cmp(&ts->eflags, ts->edi, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x150, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_56B016;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_56B016;
    }
	push(mv, &ts->esp, 0xABA93D3F);
	mov(&ts->ecx, ts->eax);
	game::sub_517F80(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_56B031;
    }

loc_56B016:
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_56B02F;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0xABA93D3F);
	game::sub_52C570(ts, mv);
	goto loc_56B031;

loc_56B02F:
	xor_(&ts->eax, ts->eax);

loc_56B031:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x150, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x154, 4), ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x154, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_7785B0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto ??1strstreambuf@std@@UAE@XZ_5;

loc_7785B8:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x158);
	goto sub_4DEF30;

loc_7785C6:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x160);
	goto sub_4DEF30;

SEH_56AEB0:
	mov(&ts->eax, 0x7E3BA0);
	goto ___CxxFrameHandler;
}

void sub_56B070(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::std__locale___Locimp____Locimp_void_(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_56B088;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_56B088:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void std__locale___Locimp____Locimp_void_(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7785F6);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edi);
	mov(mv, x86::mem(ts->edi, 4), 0x79D8EC);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x160, 4));
	lea(mv, &ts->esi, x86::mem(ts->edi + 0x160, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_56B0E9;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_56B0D0:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	game::j__free(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_56B0D0;
    }

loc_56B0E9:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x158, 4));
	lea(mv, &ts->esi, x86::mem(ts->edi + 0x158, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x14, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_56B119;
    }
	mov(&ts->edi, ts->edi);

loc_56B100:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	game::j__free(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_56B100;
    }

loc_56B119:
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0xFFFFFFFF);
	game::std__strstreambuf___strstreambuf_void_(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_7785E0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto ??1strstreambuf@std@@UAE@XZ_5;

loc_7785E8:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x158);
	goto sub_4DEF30;

??1_Locimp@locale@std@@UAE@XZ_13_SEH:
	mov(&ts->eax, 0x7E3BCC);
	goto ___CxxFrameHandler;
}

void sub_56B140(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x778614);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xAC);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_56B18E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_565750(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_56B18E:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_778600:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79D908);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_56B140:
	mov(&ts->eax, 0x7E3BF0);
	goto ___CxxFrameHandler;
}

void sub_56B1A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_565AB0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_56B1B8;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_56B1B8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_56B1C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0x911C0A4B);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_56B2A1;
    }
	if (ts->eflags.zero) {
        goto loc_56B282;
    }
	cmp(&ts->eflags, ts->eax, 0x5073EF13);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_56B232;
    }
	if (ts->eflags.zero) {
        goto loc_56B321;
    }
	cmp(&ts->eflags, ts->eax, 0xC407210);
	if (ts->eflags.zero) {
        goto loc_56B1FE;
    }
	cmp(&ts->eflags, ts->eax, 0x35F8620B);
	if (ts->eflags.zero) {
        goto loc_56B226;
    }
	cmp(&ts->eflags, ts->eax, 0x406415E3);
	if (!ts->eflags.zero) {
        goto loc_56B349;
    }

loc_56B1FE:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x70, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	game::sub_480C10(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50D150(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_56B226:
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	game::sub_4958D0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_56B232:
	cmp(&ts->eflags, ts->eax, 0x72619778);
	if (ts->eflags.zero) {
        goto loc_56B282;
    }
	cmp(&ts->eflags, ts->eax, 0x911AB364);
	if (!ts->eflags.zero) {
        goto loc_56B349;
    }
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	game::sub_479220(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xA);
	push(mv, &ts->esp, ts->edx);
	game::sub_50D150(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78FA3C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537980(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	add(&ts->esp, 0x18);
	push(mv, &ts->esp, 0xFFFFFFFF);
	game::sub_480C30(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_56B282:
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x108, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	if (ts->eflags.zero) {
        goto loc_56B298;
    }
	game::sub_550F10(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_56B298:
	game::sub_550E60(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_56B2A1:
	cmp(&ts->eflags, ts->eax, 0xC519BFC0);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_56B313;
    }
	if (ts->eflags.zero) {
        goto loc_56B2DA;
    }
	cmp(&ts->eflags, ts->eax, 0x9120409E);
	if (ts->eflags.zero) {
        goto loc_56B2C3;
    }
	cmp(&ts->eflags, ts->eax, 0x9803F6E2);
	if (ts->eflags.zero) {
        goto loc_56B2CF;
    }
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_56B349;
    }

loc_56B2C3:
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_53DEB0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_56B2CF:
	mov(&ts->ecx, ts->esi);
	game::sub_565D90(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_56B2DA:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x108, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(&ts->ecx, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_56B2ED;
    }
	game::sub_531630(ts, mv);
	goto loc_56B2F4;

loc_56B2ED:
	push(mv, &ts->esp, 0x1);
	game::sub_5316B0(ts, mv);

loc_56B2F4:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	movsx(mv, &ts->eax, x86::mem(ts->ecx + 0x8380B8, 1));
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_56B349;
    }
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_458520(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_56B313:
	cmp(&ts->eflags, ts->eax, 0xC98356BA);
	if (ts->eflags.zero) {
        goto loc_56B32D;
    }
	cmp(&ts->eflags, ts->eax, 0xD9FEEC59);
	if (!ts->eflags.zero) {
        goto loc_56B349;
    }

loc_56B321:
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_5241E0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_56B32D:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x78, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_56B342;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, ts->edx);
	game::sub_51EE80(ts, mv);

loc_56B342:
	mov(&ts->ecx, ts->esi);
	game::sub_524170(ts, mv);

loc_56B349:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);
}

void sub_56B350(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x778634);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x218);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_56B39E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_5678E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_56B39E:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_778620:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79D91C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_56B350:
	mov(&ts->eax, 0x7E3C14);
	goto ___CxxFrameHandler;
}

void sub_56B3B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x8, 4));
	cmp(&ts->eflags, ts->edi, 0x251BF83E);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_56B3D2;
    }
	mov(mv, x86::mem(ts->esi + 0x171, 1), 0x0);
	mov(mv, x86::mem(ts->esi + 0x173, 1), 0x1);
	goto loc_56B40E;

loc_56B3D2:
	cmp(&ts->eflags, ts->edi, 0x9120409E);
	if (ts->eflags.zero) {
        goto loc_56B3E2;
    }
	cmp(&ts->eflags, ts->edi, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_56B40E;
    }

loc_56B3E2:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	mov(&ts->ecx, 0x838980);
	mov(mv, x86::mem(ts->esi + 0x150, 4), ts->eax);
	game::sub_521530(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, 0x2F5E7DA3);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->ebx);

loc_56B40E:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x174, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_56B42C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_543D40(ts, mv);

loc_56B42C:
	cmp(&ts->eflags, ts->edi, 0x96DDA9E6);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_56B6DA;
    }
	if (ts->eflags.zero) {
        goto loc_56B6CD;
    }
	cmp(&ts->eflags, ts->edi, 0x35F8620B);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_56B653;
    }
	if (ts->eflags.zero) {
        goto loc_56B631;
    }
	cmp(&ts->eflags, ts->edi, 0xC407210);
	if (ts->eflags.zero) {
        goto loc_56B496;
    }
	cmp(&ts->eflags, ts->edi, 0x1FAB5998);
	if (ts->eflags.zero) {
        goto loc_56B484;
    }
	cmp(&ts->eflags, ts->edi, 0x251BF83E);
	if (!ts->eflags.zero) {
        goto loc_56B8F4;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x174, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56B8F4;
    }
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x7B, 1), 0x0);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56B484:
	game::sub_53A790(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_538CA0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56B496:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x174, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56B4D1;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x16C, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56B8F4;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x16C, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0xC407210);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56B4D1:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x173, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56B8F4;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x171, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_56B8F4;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537D40(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_56B8F4;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x78FAB8);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537CC0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_56B8F4;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x22, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_56B8F4;
    }
	push(mv, &ts->esp, 0x9);
	mov(&ts->ecx, 0x8392C0);
	game::sub_6102F0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x48, 4), 0x10005);
	if (!ts->eflags.zero) {
        goto loc_56B584;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_56B584;
    }
	test(mv, &ts->eflags, x86::mem(ts->eax + 0x5, 1), 0xE0);
	if (ts->eflags.zero) {
        goto loc_56B584;
    }
	game::sub_53A760(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xD104AD36);
	push(mv, &ts->esp, 0x78FA24);
	push(mv, &ts->esp, ts->ecx);
	game::sub_558430(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(0x838970, 4), 0x34DC1BEC);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56B584:
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x4C, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_56B607;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_53A7C0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56B607;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_53A890(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56B5EE;
    }
	game::sub_53A760(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x10B83327);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1FAB5998);
	push(mv, &ts->esp, 0x1FAB5998);
	push(mv, &ts->esp, 0xD05FC3A3);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x78FA24);
	push(mv, &ts->esp, ts->edx);
	game::sub_558790(ts, mv);
	add(&ts->esp, 0x24);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(0x838970, 4), 0x1FAB5998);
	game::sub_538C00(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56B5EE:
	mov(&ts->ecx, ts->esi);
	game::sub_55FE90(ts, mv);
	push(mv, &ts->esp, 0xC407210);
	mov(&ts->ecx, ts->esi);
	game::sub_5682A0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56B607:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x174, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56B61F;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_51DE60(ts, mv);
	add(&ts->esp, 0x8);

loc_56B61F:
	push(mv, &ts->esp, 0xC407210);
	mov(&ts->ecx, ts->esi);
	game::sub_5682A0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56B631:
	push(mv, &ts->esp, 0x5);
	mov(&ts->ecx, 0x8635BC);
	game::sub_5243D0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x7B, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x173, 1), 0x1);
	game::sub_53A790(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56B653:
	cmp(&ts->eflags, ts->edi, 0x911AB364);
	if (ts->eflags.zero) {
        goto loc_56B667;
    }
	cmp(&ts->eflags, ts->edi, 0x9120409E);
	if (!ts->eflags.zero) {
        goto loc_56B8F4;
    }

loc_56B667:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x173, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56B8F4;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x171, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_56B8F4;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537D40(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_56B8F4;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x78FAB8);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537CC0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_56B8F4;
    }
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_5682A0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56B6CD:
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x171, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56B6DA:
	cmp(&ts->eflags, ts->edi, 0xD05FC3A3);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_56B87D;
    }
	if (ts->eflags.zero) {
        goto loc_56B7FD;
    }
	cmp(&ts->eflags, ts->edi, 0x9FBBD1D4);
	if (ts->eflags.zero) {
        goto loc_56B7A7;
    }
	cmp(&ts->eflags, ts->edi, 0xB5971BF1);
	if (ts->eflags.zero) {
        goto loc_56B667;
    }
	cmp(&ts->eflags, ts->edi, 0xC519BFC0);
	if (!ts->eflags.zero) {
        goto loc_56B8F4;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x174, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56B730;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x16C, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56B730:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x173, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56B8F4;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x171, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_56B8F4;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->al, x86::mem(ts->edx + 0x4C, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_56B8F4;
    }
	game::sub_53A760(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x30F7037F);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1FAB5998);
	push(mv, &ts->esp, 0x1FAB5998);
	push(mv, &ts->esp, 0xE75749D4);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x78FA24);
	push(mv, &ts->esp, ts->eax);
	game::sub_558790(ts, mv);
	add(&ts->esp, 0x24);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(0x838970, 4), 0x1FAB5998);
	game::sub_538C00(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56B7A7:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x174, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, x86::mem(ts->esi + 0x168, 4), 0x2);
	if (ts->eflags.zero) {
        goto loc_56B7E4;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDF422345);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x174, 1), 0x0);
	game::sub_495520(ts, mv);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->esi + 0x7B, 1), 0x1);
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	push(mv, &ts->esp, 0x5);
	game::sub_458520(ts, mv);

loc_56B7E4:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_54E6E0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56B7FD:
	mov(mv, &ts->ecx, x86::mem(0x7FA1E0, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_56B821;
    }
	mov(&ts->ecx, 0xFF);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->ecx);

loc_56B821:
	mov(&ts->ecx, ts->esi);
	game::sub_55FE90(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x154, 4));
	mov(&ts->edx, ts->eax);
	sar(&ts->edx, 0x10);
	mov(mv, x86::mem(ts->esi + (ts->edx*4) + 0x158, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x48, 4));
	mov(mv, x86::mem(ts->esi + 0x154, 4), ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	game::sub_52F390(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C60(ts, mv);
	add(&ts->esp, 0x10);
	mov(mv, x86::mem(0x7FA1FC, 1), 0x1);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x16C, 4), 0x799C30);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56B87D:
	cmp(&ts->eflags, ts->edi, 0xE1FDE1D1);
	if (ts->eflags.zero) {
        goto loc_56B8A6;
    }
	cmp(&ts->eflags, ts->edi, 0xE75749D4);
	if (!ts->eflags.zero) {
        goto loc_56B8F4;
    }
	game::sub_53A790(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_55FF70(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_538CA0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56B8A6:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x170, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56B8CE;
    }
	game::sub_54F980(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_55BDF0(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x0);
	game::sub_4C2140(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56B8CE:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x172, 1), 0x0);
	call(ts, mv, x86::mem(ts->eax + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FAB8);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);

loc_56B8F4:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);
}

void sub_56B900(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x778654);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x11C);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_56B94E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_568450(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_56B94E:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_778640:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79D928);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_56B900:
	mov(&ts->eax, 0x7E3C38);
	goto ___CxxFrameHandler;
}

void sub_56B960(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0x9803F6E2);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_56BDF1;
    }
	if (ts->eflags.zero) {
        goto loc_56BD77;
    }
	cmp(&ts->eflags, ts->eax, 0x35F8620B);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_56BD24;
    }
	if (ts->eflags.zero) {
        goto loc_56BCA8;
    }
	cmp(&ts->eflags, ts->eax, 0x251BF83E);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_56BC96;
    }
	if (ts->eflags.zero) {
        goto loc_56BC69;
    }
	cmp(&ts->eflags, ts->eax, 0xC407210);
	if (ts->eflags.zero) {
        goto loc_56B9EC;
    }
	cmp(&ts->eflags, ts->eax, 0x1FAB5998);
	if (!ts->eflags.zero) {
        goto loc_56BF62;
    }

loc_56B9B0:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79031C);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	push(mv, &ts->esp, 0x799C64);
	push(mv, &ts->esp, 0x251BF83E);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x18);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	push(mv, &ts->esp, 0x1);
	mov(mv, x86::mem(ts->ecx + 0x2F, 1), 0x1);
	game::sub_52EB90(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56B9EC:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x111, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56BF62;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x110, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_56BF62;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537D40(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_56BF62;
    }
	push(mv, &ts->esp, 0x78FA24);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_56BF62;
    }
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0x50, 4));
	mov(&ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->ebp + 0x8, 4), ts->ebx);
	game::sub_51F7E0(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_56BB26;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x838980);
	game::sub_50F0B0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_56BAB0;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	cmp(&ts->eflags, ts->ecx, 0x61);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_56BA8E;
    }
	cmp(&ts->eflags, ts->ecx, 0x98);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_56BA8E;
    }
	mov(mv, &ts->eax, x86::mem(0x8389C8, 4));
	cmp(&ts->eflags, ts->eax, 0x8389C8);
	if (ts->eflags.zero) {
        goto loc_56BA8E;
    }
	nop();

loc_56BA80:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0xC, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_56BAB0;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->eax, 0x8389C8);
	if (!ts->eflags.zero) {
        goto loc_56BA80;
    }

loc_56BA8E:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x91BB4EA);
	push(mv, &ts->esp, 0x78FA24);
	push(mv, &ts->esp, ts->ecx);
	game::sub_558430(ts, mv);
	add(&ts->esp, 0xC);
	mov(mv, x86::mem(0x838970, 4), 0x34DC1BEC);
	goto loc_56BAEB;

loc_56BAB0:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x74E34714);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1FAB5998);
	push(mv, &ts->esp, 0x1FAB5998);
	push(mv, &ts->esp, 0xE75749D4);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x78FA24);
	push(mv, &ts->esp, ts->edx);
	game::sub_558790(ts, mv);
	add(&ts->esp, 0x24);
	mov(mv, x86::mem(0x838970, 4), 0x1FAB5998);

loc_56BAEB:
	push(mv, &ts->esp, 0x799C64);
	push(mv, &ts->esp, 0x96DDA9E6);
	game::sub_55DDA0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FEF4);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x18);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->ebx + 0x2F, 1), 0x0);
	game::sub_52EB90(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56BB26:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x5C, 4));
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x2C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x838980);
	game::sub_50F1B0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_56BC0E;
    }
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, 0x838980);
	game::sub_5219E0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_56BC0B;
    }
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_56BBE0;
    }
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, 0x85AD40);
	game::sub_514280(ts, mv);
	mov(&ts->ecx, 0x838980);
	mov(&ts->edi, ts->eax);
	game::sub_521530(ts, mv);
	add(&ts->edi, ts->eax);
	cmp(mv, &ts->eflags, x86::mem(0x861E74, 4), ts->edi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_56BBA0;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xD1AC60BE);
	push(mv, &ts->esp, 0x78FA24);
	push(mv, &ts->esp, ts->eax);
	game::sub_558430(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x8, 4));
	goto loc_56BC21;

loc_56BBA0:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x44B7167F);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1FAB5998);
	push(mv, &ts->esp, 0x1FAB5998);
	push(mv, &ts->esp, 0xD05FC3A3);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x78FA24);
	push(mv, &ts->esp, ts->ecx);

loc_56BBC9:
	game::sub_558790(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x8, 4));
	add(&ts->esp, 0x24);
	mov(mv, x86::mem(0x838970, 4), 0x1FAB5998);
	goto loc_56BC2E;

loc_56BBE0:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xF5AC2B2A);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1FAB5998);
	push(mv, &ts->esp, 0x1FAB5998);
	push(mv, &ts->esp, 0xD05FC3A3);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x78FA24);
	push(mv, &ts->esp, ts->edx);
	goto loc_56BBC9;

loc_56BC0B:
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x8, 4));

loc_56BC0E:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDA15D7E5);
	push(mv, &ts->esp, 0x78FA24);
	push(mv, &ts->esp, ts->eax);
	game::sub_558430(ts, mv);

loc_56BC21:
	add(&ts->esp, 0xC);
	mov(mv, x86::mem(0x838970, 4), 0x34DC1BEC);

loc_56BC2E:
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->ebx + 0x2F, 1), 0x0);
	game::sub_52EB90(ts, mv);
	push(mv, &ts->esp, 0x799C64);
	push(mv, &ts->esp, 0x96DDA9E6);
	game::sub_55DDA0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FEF4);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56BC69:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79031C);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	push(mv, &ts->esp, 0x1);
	mov(mv, x86::mem(ts->ecx + 0x2F, 1), 0x1);
	game::sub_52EB90(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56BC96:
	cmp(&ts->eflags, ts->eax, 0x34DC1BEC);
	if (ts->eflags.zero) {
        goto loc_56B9B0;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56BCA8:
	mov(&ts->ecx, ts->esi);
	game::sub_53A9A0(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x111, 1), 0x1);
	game::sub_546F40(ts, mv);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x50, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_4AEB90(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56BCE1;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56BCE1:
	mov(&ts->ecx, ts->edi);
	game::sub_4AEBC0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56BD02;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x100, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56BD02:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x100, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56BD24:
	cmp(&ts->eflags, ts->eax, 0x72619778);
	if (ts->eflags.zero) {
        goto loc_56BD3D;
    }
	cmp(&ts->eflags, ts->eax, 0x81F0B71A);
	if (ts->eflags.zero) {
        goto loc_56BD5A;
    }
	cmp(&ts->eflags, ts->eax, 0x911C0A4B);
	if (!ts->eflags.zero) {
        goto loc_56BF62;
    }

loc_56BD3D:
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x111, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_56BF62;
    }
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_560100(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56BD5A:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C60(ts, mv);
	add(&ts->esp, 0x10);
	goto loc_56BF4F;

loc_56BD77:
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xB4, 4));
	game::sub_538130(ts, mv);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8763EC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xF0, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_56BDC9;
    }
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.zero) {
        goto loc_56BDDE;
    }
	cmp(&ts->eflags, ts->ecx, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_56BDDE;
    }
	cmp(&ts->eflags, ts->ecx, 0x1);
	if (!ts->eflags.zero) {
        goto loc_56BF62;
    }
	push(mv, &ts->esp, 0x911C0A4B);
	mov(&ts->ecx, ts->esi);
	game::sub_560100(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56BDC9:
	push(mv, &ts->esp, 0x911C0A4B);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	mov(&ts->ecx, ts->esi);
	game::sub_560100(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56BDDE:
	push(mv, &ts->esp, 0x72619778);
	mov(&ts->ecx, ts->esi);
	game::sub_560100(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56BDF1:
	cmp(&ts->eflags, ts->eax, 0xC98356BA);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_56BE8D;
    }
	if (ts->eflags.zero) {
        goto loc_56BE41;
    }
	cmp(&ts->eflags, ts->eax, 0xB4EDEB6D);
	if (ts->eflags.zero) {
        goto loc_56B9B0;
    }
	cmp(&ts->eflags, ts->eax, 0xC0FAF20B);
	if (ts->eflags.zero) {
        goto loc_56BE29;
    }
	cmp(&ts->eflags, ts->eax, 0xC519BFC0);
	if (!ts->eflags.zero) {
        goto loc_56BF62;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_568710(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56BE29:
	mov(&ts->ecx, 0x838980);
	game::sub_55C460(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x110, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56BE41:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x110, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56BE7E;
    }
	mov(mv, x86::mem(ts->esi + 0x110, 1), 0x0);
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_56BE65;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_5376F0(ts, mv);

loc_56BE65:
	push(mv, &ts->esp, 0x799C64);
	push(mv, &ts->esp, 0x9FBBD1D4);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56BE7E:
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	game::sub_538760(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56BE8D:
	cmp(&ts->eflags, ts->eax, 0xD05FC3A3);
	if (ts->eflags.zero) {
        goto loc_56BF00;
    }
	cmp(&ts->eflags, ts->eax, 0xE1FDE1D1);
	if (ts->eflags.zero) {
        goto loc_56BED4;
    }
	cmp(&ts->eflags, ts->eax, 0xE75749D4);
	if (!ts->eflags.zero) {
        goto loc_56BF62;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x838980);
	game::sub_530290(ts, mv);
	push(mv, &ts->esp, 0x799C64);
	push(mv, &ts->esp, 0x251BF83E);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x110, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56BED4:
	mov(&ts->ecx, 0x838980);
	game::sub_55C460(ts, mv);
	push(mv, &ts->esp, 0x8389D0);
	push(mv, &ts->esp, 0x8392C0);
	mov(&ts->ecx, 0x8637D0);
	game::sub_55B1A0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x110, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_56BF00:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x5C, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x2C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x838980);
	game::sub_53AF20(ts, mv);
	mov(&ts->ecx, 0x838980);
	game::sub_521530(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x7FA1E0, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, 0x2F5E7DA3);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537B80(ts, mv);
	push(mv, &ts->esp, 0x799C64);
	push(mv, &ts->esp, 0x251BF83E);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x18);
	mov(mv, x86::mem(ts->esi + 0x110, 1), 0x1);

loc_56BF4F:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_54E6E0(ts, mv);

loc_56BF62:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);
}

void sub_56BF70(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x777DC3);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->esi);
	game::sub_551DE0(ts, mv);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0x1);
	xor_(&ts->ebx, ts->ebx);
	push(mv, &ts->esp, 0x79CAF0);
	mov(mv, x86::mem(ts->esi, 4), 0x79BA14);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->ebx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x797F30);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x50, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x34, 4), ts->ebx);
	game::sub_5435D0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F814);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xB4, 4));
	mov(mv, x86::mem(ts->esp + 0x30, 1), 0x1);
	game::sub_542AC0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x10C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x114, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x116, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x118, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x11C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x115, 1), ts->bl);
	mov(mv, &ts->ecx, x86::mem(0x8651AC, 4));
	mov(mv, x86::mem(0x838528, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(0x8651AC, 4));
	mov(mv, x86::mem(ts->esi + 0x11C, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x10, 4));
	mov(mv, x86::mem(ts->esi + 0x110, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x797F30);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x7C, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x80, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0xA4, 4), 0x43480000);
	mov(mv, x86::mem(ts->esi + 0xB0, 4), 0x41A00000);
	game::sub_4953E0(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x120, 4), ts->eax);
	game::sub_5606E0(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_547250(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_56C081;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_56C083;

loc_56C081:
	xor_(&ts->eax, ts->eax);

loc_56C083:
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->edi + 0xC, 4));
	if (!ts->eflags.zero) {
        goto loc_56C099;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);
	goto loc_56C0D4;

loc_56C099:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x8, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_56C0A3;
    }
	lea(mv, &ts->ebx, x86::mem(ts->eax - 0x4, 4));

loc_56C0A3:
	cmp(mv, &ts->eflags, ts->ebx, x86::mem(ts->edi + 0xC, 4));
	if (!ts->eflags.zero) {
        goto loc_56C0B9;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x100, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);
	goto loc_56C0D4;

loc_56C0B9:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x100, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0x8);

loc_56C0D4:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_777DB0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

loc_777DB8:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x50);
	goto sub_52EA90;

SEH_56BF70:
	mov(&ts->eax, 0x7E3218);
	goto ___CxxFrameHandler;
}

void sub_56C0F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x778674);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x218);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_56C13E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_569500(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_56C13E:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_778660:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79D93C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_56C0F0:
	mov(&ts->eax, 0x7E3C5C);
	goto ___CxxFrameHandler;
}

void sub_56C150(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x778694);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x1E8);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_56C19E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_569CC0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_56C19E:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_778680:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79D950);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_56C150:
	mov(&ts->eax, 0x7E3C80);
	goto ___CxxFrameHandler;
}

void sub_56C1B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7786B4);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x190);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_56C1FE;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_56AEB0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_56C1FE:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_7786A0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79D964);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_56C1B0:
	mov(&ts->eax, 0x7E3CA4);
	goto ___CxxFrameHandler;
}

void sub_56C210(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7786C8);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x20, 4));
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->esi);
	game::sub_56BF70(ts, mv);
	xor_(&ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esi, 4), 0x79D978);
	mov(mv, x86::mem(ts->esi + 0x124, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x128, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x129, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x12A, 1), ts->bl);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	mov(mv, x86::mem(ts->eax + 0xAC, 1), ts->bl);
	mov(mv, &ts->ecx, x86::mem(0x8651AC, 4));
	mov(mv, x86::mem(0x838528, 1), ts->bl);
	mov(&ts->eax, 0x1);
	mov(mv, x86::mem(0x838560, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x10, 4));
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x110, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x7C, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0x80, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0xA4, 4), 0x43480000);
	mov(mv, x86::mem(ts->esi + 0xB0, 4), 0x41A00000);
	game::sub_53C1F0(ts, mv);
	game::sub_50F650(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_548D20(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_56C2C4;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_56C2C6;

loc_56C2C4:
	xor_(&ts->eax, ts->eax);

loc_56C2C6:
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esi + 0x5C, 4));
	if (!ts->eflags.zero) {
        goto loc_56C2DC;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);
	goto loc_56C31B;

loc_56C2DC:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_56C2E8;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_56C2EA;

loc_56C2E8:
	xor_(&ts->eax, ts->eax);

loc_56C2EA:
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esi + 0x5C, 4));
	if (!ts->eflags.zero) {
        goto loc_56C300;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x100, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);
	goto loc_56C31B;

loc_56C300:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x100, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0x8);

loc_56C31B:
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(&ts->edi, 0xFF);
	if (ts->eflags.zero) {
        goto loc_56C349;
    }
	cmp(&ts->eflags, ts->eax, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_56C33D;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x799C18);
	push(mv, &ts->esp, 0x4);
	goto loc_56C344;

loc_56C33D:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x799C18);
	push(mv, &ts->esp, ts->ebx);

loc_56C344:
	game::sub_555D00(ts, mv);

loc_56C349:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_56C365;
    }
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->edi);

loc_56C365:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x797F30);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0x1B2794C7);
	game::sub_4953E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->esi + 0x124, 4), ts->eax);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_7786C0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_5326F0;

SEH_56C210:
	mov(&ts->eax, 0x7E3CC8);
	goto ___CxxFrameHandler;
}

void sub_56C3A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_5326F0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_56C3B8;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_56C3B8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_56C3C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7786F4);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x124);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_56C40E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_56BF70(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_56C40E:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_7786E0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79D988);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_56C3C0:
	mov(&ts->eax, 0x7E3D10);
	goto ___CxxFrameHandler;
}

void sub_56C420(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x778714);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x12C);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_56C46E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_56C210(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_56C46E:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_778700:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79D998);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_56C420:
	mov(&ts->eax, 0x7E3D34);
	goto ___CxxFrameHandler;
}

void sub_56C480(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(0x864628, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_43F920(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_56C4A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F00F0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	mov(&ts->eax, 0x8651AC);
	if (!ts->eflags.zero) {
        goto locret_56C4B8;
    }
	mov(&ts->eax, 0x86518C);

locret_56C4B8:
	retn(mv, &ts->esp);
}

void sub_56C4C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), 0x34A07);
	if (!ts->eflags.zero) {
        goto loc_56C4DD;
    }
	add(&ts->eax, 0x17);
	and_(&ts->eax, 0xFFFFFFF0);
	mov(mv, x86::mem(0x864624, 4), ts->eax);
	mov(&ts->eax, 0x1);
	retn(mv, &ts->esp);

loc_56C4DD:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);
}

void sub_56C4E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), 0x34A07);
	if (!ts->eflags.zero) {
        goto loc_56C4FC;
    }
	mov(mv, x86::mem(0x864624, 4), 0x0);
	mov(&ts->eax, 0x1);
	retn(mv, &ts->esp);

loc_56C4FC:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);
}

void sub_56C500(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->bl, x86::mem(0x89E7D9, 1));
	push(mv, &ts->esp, ts->esi);
	xor_(&ts->esi, ts->esi);
	test(&ts->eflags, ts->bl, ts->bl);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(0x890104, 4));
	if (!ts->eflags.zero) {
        goto loc_56C519;
    }
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_56C51D;
    }

loc_56C519:
	mov(&ts->al, 0x4);
	goto loc_56C57D;

loc_56C51D:
	mov(mv, &ts->al, x86::mem(0x89E7D8, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_56C52F;
    }
	mov(mv, &ts->eax, x86::mem(0x890108, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_56C533;
    }

loc_56C52F:
	mov(&ts->al, 0x2);
	goto loc_56C57D;

loc_56C533:
	mov(mv, &ts->eax, x86::mem(0x89E7B4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_56C540;
    }
	mov(&ts->al, 0x8);
	goto loc_56C57D;

loc_56C540:
	mov(mv, &ts->al, x86::mem(0x89E7E5, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_56C552;
    }
	mov(mv, &ts->eax, x86::mem(0x836474, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_56C556;
    }

loc_56C552:
	mov(&ts->al, 0x20);
	goto loc_56C57D;

loc_56C556:
	mov(mv, &ts->al, x86::mem(0x89E7E3, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_56C568;
    }
	mov(mv, &ts->eax, x86::mem(0x89010C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_56C56C;
    }

loc_56C568:
	mov(&ts->al, 0x10);
	goto loc_56C57D;

loc_56C56C:
	mov(mv, &ts->dl, x86::mem(0x89E7E1, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	setz(ts->eflags, &ts->al);
	dec(&ts->al);
	and_(&ts->al, 0x3F);
	inc(&ts->al);

loc_56C57D:
	mov(mv, &ts->ecx, x86::mem(0x864624, 4));
	add(&ts->ecx, 0x37);
	mov(&ts->edx, 0xD);
	goto loc_56C590;

loc_56C590:
	test(mv, &ts->eflags, x86::mem(ts->ecx - 0x30, 1), ts->al);
	if (ts->eflags.zero) {
        goto loc_56C596;
    }
	inc(&ts->esi);

loc_56C596:
	test(mv, &ts->eflags, x86::mem(ts->ecx, 1), ts->al);
	if (ts->eflags.zero) {
        goto loc_56C59B;
    }
	inc(&ts->esi);

loc_56C59B:
	test(mv, &ts->eflags, x86::mem(ts->ecx + 0x30, 1), ts->al);
	if (ts->eflags.zero) {
        goto loc_56C5A1;
    }
	inc(&ts->esi);

loc_56C5A1:
	add(&ts->ecx, 0x90);
	dec(&ts->edx);
	if (!ts->eflags.zero) {
        goto loc_56C590;
    }
	test(&ts->eflags, ts->bl, ts->bl);
	if (!ts->eflags.zero) {
        goto loc_56C5B2;
    }
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_56C5C1;
    }

loc_56C5B2:
	mov(mv, &ts->eax, x86::mem(0x89E7C0, 4));
	mov(mv, &ts->ecx, x86::mem(0x89E7C4, 4));
	add(&ts->eax, ts->ecx);
	goto loc_56C5C6;

loc_56C5C1:
	mov(mv, &ts->eax, x86::mem(0x89E7C0, 4));

loc_56C5C6:
	imul(&ts->eax, ts->esi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79DBD0);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x58);
	game::sub_440DF0(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x864628, 4), ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_56C5F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x864628, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_440E40(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_56C600(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->dl, x86::mem(ts->ecx, 1));
	xor_(&ts->al, ts->al);
	cmp(&ts->eflags, ts->dl, 0x27);
	if (!ts->eflags.carry) {
        goto locret_56C670;
    }
	movzx(&ts->edx, ts->dl);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(0x864624, 4));
	lea(mv, &ts->eax, x86::mem(ts->edx + (ts->edx*2), 4));
	shl(&ts->eax, 0x4);
	add(&ts->esi, ts->eax);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x14, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (ts->eflags.parity) {
        goto loc_56C65C;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x6, 1));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	test(&ts->eflags, ts->al, ts->al);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x18, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7FA520, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	if (ts->eflags.zero) {
        goto loc_56C64B;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));

loc_56C64B:
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x28, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmulp(&ts->fp, x86::fp_index(2), x86::fp_index(0));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784258, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(1));

loc_56C65C:
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	pop(mv, &ts->esp, ts->esi);
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.parity) {
        goto loc_56C66E;
    }
	mov(&ts->al, 0x1);
	retn(mv, &ts->esp);

loc_56C66E:
	xor_(&ts->al, ts->al);

locret_56C670:
	retn(mv, &ts->esp);
}

void sub_56C680(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, 0x79DBE4);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->edi);
	game::sub_578CE0(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x14, 1));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 1), ts->al);
	game::sub_5716C0(ts, mv);
	movzx(mv, &ts->edx, x86::mem(ts->esp + 0xC, 1));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->edx);
	game::sub_571640(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_571770(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, 0x4);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_571640(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_571770(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x28, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_571770(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_571770(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_571640(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x34, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_571770(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x38, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_571770(ts, mv);
	add(&ts->esi, 0x3C);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	game::sub_571770(ts, mv);
	mov(&ts->ecx, ts->edi);
	game::sub_578D90(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_56C740(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x28, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x28, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DA44, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x24, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x14, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x14, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_56C784;
    }
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_56C7A7;
    }
	goto loc_56C7A1;

loc_56C784:
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_56C7A7;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x14, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_56C7A7;
    }

loc_56C7A1:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));

loc_56C7A7:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_56C7BE;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));

loc_56C7BE:
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x3C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x3C, 4));
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x4);
}

void sub_56C7D0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(ts->esp + 0x4, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_56C891;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x9C, 4), 0x0);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x8, 4));
	mov(&ts->ebx, 0xD);

loc_56C7F3:
	mov(mv, &ts->eax, x86::mem(ts->edi - 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_56C824;
    }
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x10, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_56C824;
    }
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x18, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_56C824;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x2C, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x9C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x9C, 4));

loc_56C824:
	mov(mv, &ts->eax, x86::mem(ts->edi - 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_56C855;
    }
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x10, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_56C855;
    }
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x18, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_56C855;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x2C, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x9C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x9C, 4));

loc_56C855:
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_56C885;
    }
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x10, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_56C885;
    }
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x18, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_56C885;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x2C, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x9C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x9C, 4));

loc_56C885:
	add(&ts->edi, 0xC);
	dec(&ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_56C7F3;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);

loc_56C891:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x9C, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_56C8A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x79DBF0);
	mov(&ts->edi, ts->ecx);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->ebx);
	game::sub_578CE0(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x9C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	game::sub_571770(ts, mv);
	xor_(&ts->esi, ts->esi);

loc_56C8C7:
	mov(mv, &ts->ecx, x86::mem(ts->edi + (ts->esi*4), 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_56C8DB;
    }
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x10, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56C8DB;
    }
	push(mv, &ts->esp, ts->ebx);
	game::sub_56C680(ts, mv);

loc_56C8DB:
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, 0x27);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_56C8C7;
    }
	mov(&ts->ecx, ts->ebx);
	game::sub_578D90(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_56C8F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, ts->ecx);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->ecx);
	mov(&ts->edx, 0x3F800000);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), 0x1);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0x15, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0x16, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0x17, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), 0xBF800000);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x30, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x34, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x3C, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x40, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x44, 4), ts->ecx);
	retn(mv, &ts->esp);
}

void sub_56C940(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x3C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x120, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_56C96D;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp, 0x4);

loc_56C96D:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x14, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x30, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (!ts->eflags.zero) {
        goto loc_56CA50;
    }
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x40, 4));
	game::sub_59FA10(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x430, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x10, 4));
	fabs(&ts->fp, x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edx);
	game::sub_5B5330(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x118, 4));
	movsx(&ts->ebx, ts->al);
	fabs(&ts->fp, x86::fp_index(0));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DAF8, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_56C9E2;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x40, 4));
	game::sub_59FA10(ts, mv);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x118, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_56C9E2;
    }
	mov(&ts->al, 0x1);
	goto loc_56C9E4;

loc_56C9E2:
	xor_(&ts->al, ts->al);

loc_56C9E4:
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x14, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_56C9FC;
    }
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_56C9FC;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DA60, 4));
	goto loc_56CA03;

loc_56C9FC:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DA50, 4));

loc_56CA03:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x28, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_56CA12;
    }
	cmp(&ts->eflags, ts->eax, 0x7FFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_56CA4E;
    }

loc_56CA12:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DAF4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784244, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_56CA4E;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_56CA50;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DA5C, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));

loc_56CA4E:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));

loc_56CA50:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x14, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x30, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_56CA6C;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));

loc_56CA6C:
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x30, 4));
	pop(mv, &ts->esp, ts->edi);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp, 0x4);
}

void sub_56CA80(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x394, 4));
	xor_(&ts->ecx, ts->ecx);
	mov(&ts->edx, 0x1);
	cmp(&ts->eflags, ts->edi, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_56CAAB;
    }
	mov(&ts->ecx, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->ecx);

loc_56CAAB:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x398, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_56CAB8;
    }
	inc(&ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->ecx);

loc_56CAB8:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x39C, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_56CAC5;
    }
	inc(&ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->ecx);

loc_56CAC5:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x3A0, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_56CAD2;
    }
	inc(&ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->ecx);

loc_56CAD2:
	cmp(&ts->eflags, ts->ecx, ts->edx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_56CB2E;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x10, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	game::sub_5B5930(ts, mv);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DB0C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x430, 4));
	fdiv(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_56CB36;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_56CB28;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));

loc_56CB28:
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fmulp(&ts->fp, x86::fp_index(1), x86::fp_index(0));

loc_56CB2E:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x4);

loc_56CB36:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	pop(mv, &ts->esp, ts->edi);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	pop(mv, &ts->esp, ts->esi);
	fmulp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x4);
}

void sub_56CB50(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->ecx, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x16, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x17, 1), ts->bl);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_56CBE4;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x28, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_56CB7A;
    }
	cmp(&ts->eflags, ts->eax, 0x7FFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_56CB99;
    }

loc_56CB7A:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x430, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DA70, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DA70, 4));
	fcompp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_56CBE4;
    }

loc_56CB99:
	mov(mv, x86::mem(ts->esi + 0x16, 1), 0x1);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, &ts->edx, x86::mem(0x8651AC, 4));
	if (ts->eflags.zero) {
        goto loc_56CBD9;
    }
	cmp(&ts->eflags, ts->eax, 0x7FFFFFFF);
	if (ts->eflags.zero) {
        goto loc_56CBD9;
    }
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x24, 4));
	mov(&ts->eax, ts->edx);
	sub(&ts->eax, ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	pop(mv, &ts->esp, ts->ebp);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DB08, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_56CC8E;
    }

loc_56CBD9:
	lea(mv, &ts->edi, x86::mem(ts->ecx - 0x1, 4));
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->edx);
	goto loc_56CC8E;

loc_56CBE4:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_56CC21;
    }
	cmp(&ts->eflags, ts->eax, 0x7FFFFFFF);
	if (ts->eflags.zero) {
        goto loc_56CC21;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	mov(mv, x86::mem(ts->esi + 0x17, 1), 0x1);
	mov(mv, &ts->ecx, x86::mem(0x8651AC, 4));
	sub(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ecx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DB08, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_56CC8E;
    }
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->ebx);
	goto loc_56CC8E;

loc_56CC21:
	cmp(&ts->eflags, ts->ecx, 0x4);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_56CC4E;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x430, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DA74, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DA70, 4));
	fcompp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_56CC4E;
    }
	mov(mv, x86::mem(ts->esi + 0x17, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->ebx);
	goto loc_56CC8E;

loc_56CC4E:
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->ebx);
	cmp(mv, &ts->eflags, x86::mem(ts->edx + 0x14, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_56CC8E;
    }
	cmp(&ts->eflags, ts->ecx, 0x5);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_56CC8E;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x24, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x20, 4));
	fcompp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_56CC8E;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xC, 4));
	lea(mv, &ts->eax, x86::mem(ts->ecx + (ts->edx*4), 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DA88, 4));
	lea(mv, &ts->edi, x86::mem(ts->ecx + 0x1, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DAE4, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x20, 4), ts->eax);

loc_56CC8E:
	cmp(&ts->eflags, ts->edi, 0x5);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_56CCBD;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	lea(mv, &ts->edx, x86::mem(ts->edi + (ts->ecx*4), 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DA84, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DAE4, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x20, 4), ts->eax);
	mov(&ts->eax, ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);

loc_56CCBD:
	mov(&ts->eax, ts->edi);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x20, 4), ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);
}

void sub_56CCD0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x14, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_56CD9F;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x40, 4));
	cmp(&ts->eflags, ts->ecx, 0x7);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_56CD3F;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x24, 4));
	mov(mv, &ts->edx, x86::mem(0x864624, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(0x79DAC8, 4));
	mov(mv, &ts->edi, x86::mem(ts->eax + (ts->edi*4), 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0xC, 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*2), 4));
	shl(&ts->eax, 0x4);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + (ts->edx) + 0x8, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_56CD3E;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	inc(&ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x40, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x18, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_56CD3E;
    }
	mov(mv, &ts->edi, x86::mem(ts->edi + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(0x864624, 4));
	lea(mv, &ts->ecx, x86::mem(ts->edi + (ts->edi*2), 4));
	shl(&ts->ecx, 0x4);
	mov(mv, &ts->ecx, x86::mem(ts->ecx + (ts->edx), 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x9A4, 4));
	game::sub_4AC120(ts, mv);

loc_56CD3E:
	pop(mv, &ts->esp, ts->edi);

loc_56CD3F:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	add(&ts->ecx, 0x40);
	game::sub_59FA10(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x44, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_56CD9A;
    }
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x44, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_56CDC4;
    }
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_56CD83;
    }
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x44, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_56CD9A;
    }

loc_56CD83:
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_56CDC4;
    }
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x44, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_56CDC4;
    }

loc_56CD9A:
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x44, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_56CD9F:
	mov(mv, x86::mem(ts->esi + 0x44, 4), 0x0);
	mov(mv, x86::mem(ts->esi + 0x40, 4), 0x0);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_56CDC6;
    }
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x10, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_56CDC6;
    }
	mov(mv, x86::mem(ts->eax + 0x1C, 4), 0x3F800000);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_56CDC4:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));

loc_56CDC6:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_56CDD0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x10, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.parity) {
        goto loc_56CDEB;
    }
	mov(&ts->eax, 0x1);
	retn(mv, &ts->esp);

loc_56CDEB:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);
}

void sub_56CDF0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	mov(&ts->eax, ts->ecx);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->edx + 0x1D4, 4));
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	mov(&ts->dl, 0x1);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x30, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x38, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0xB, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0xC, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0x8, 1), ts->dl);
	mov(mv, x86::mem(ts->eax + 0x9, 1), ts->dl);
	mov(mv, x86::mem(ts->eax + 0xA, 1), ts->dl);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x1C, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0x14, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0x1D, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0x34, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->eax + 0x1E, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->ecx);
	retn(mv, &ts->esp, 0x4);
}

void sub_56CE50(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, 0x79DC04);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->edi);
	game::sub_578CE0(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_571640(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x9, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_571640(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xA, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_571640(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xB, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_571640(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_571640(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, 0x4);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_571640(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_5716C0(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_5716C0(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x18, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_571770(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_571770(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_571770(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, 0x4);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x34, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_571640(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x38, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_571640(ts, mv);
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0x1D, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->edi);
	game::sub_5716C0(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x1E, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_571640(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(ts->ebx, 1), 0x0);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_56CFB4;
    }
	mov(mv, &ts->al, x86::mem(ts->edi + 0x41, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_56CF69;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x24, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x28, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, &ts->ax, x86::mem(ts->edx + 0x14, 2));
	xor_(&ts->edx, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	mov(mv, &ts->dx, x86::mem(ts->ecx + 0x14, 2));
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edx);

loc_56CF69:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_571710(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_571710(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->edi + 0x41, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56CFB4;
    }
	movsx(mv, &ts->edx, x86::mem(ts->esp + 0x14, 2));
	push(mv, &ts->esp, ts->edx);
	game::sub_5930D0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->eax);
	movsx(mv, &ts->eax, x86::mem(ts->esp + 0x10, 2));
	push(mv, &ts->esp, ts->eax);
	game::sub_5930D0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->eax);
	game::sub_5A0490(ts, mv);
	add(&ts->esp, 0x10);
	mov(mv, x86::mem(ts->esi + 0x20, 4), ts->eax);

loc_56CFB4:
	mov(&ts->ecx, ts->edi);
	game::sub_578D90(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);
}

void sub_56CFD0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DC18, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_56D015;
    }
	cmp(&ts->eflags, ts->eax, 0x7FFFFFFF);
	if (ts->eflags.zero) {
        goto loc_56D015;
    }
	mov(&ts->ecx, 0x89CF48);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	game::sub_5F00F0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	mov(&ts->eax, 0x8651AC);
	if (!ts->eflags.zero) {
        goto loc_56D002;
    }
	mov(&ts->eax, 0x86518C);

loc_56D002:
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	sub(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));

loc_56D015:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_56D020(x86::thread_state* ts, x86::memory_view* mv) {
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fabs(&ts->fp, x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78450C, 4));
	fsub(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto locret_56D047;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));

locret_56D047:
	retn(mv, &ts->esp);
}

void sub_56D050(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79DC1C);
	mov(&ts->esi, ts->ecx);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_637DB0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xC0, 4), 0x0);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_56D080(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	sub(&ts->esp, 0x2C);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x0);
	game::sub_611030(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x70, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x74, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x78, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x88, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x84, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x80, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fabs(&ts->fp, x86::fp_index(0));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_56D118;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fsqrt(&ts->fp, x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DB90, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_56D11E;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_56D118:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));

loc_56D11E:
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_56D130(x86::thread_state* ts, x86::memory_view* mv) {
	goto sub_633FD0;
}

void sub_56D140(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77872B);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	push(mv, &ts->esp, 0x56D130);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, 0xD0);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x40, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0x0);
	game::_eh_vector_destructor_iterator__void_P_uint_int_void__P__void_P__(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	game::sub_5768E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_778720:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0xC);
	goto sub_5768E0;

SEH_56E610:
	mov(&ts->eax, 0x7E3D84);
	goto ___CxxFrameHandler;
}

void sub_56D1A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	sub(&ts->esp, 0x24);
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(0x79DB88, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ebx, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->edi, ts->edi);
	mov(mv, x86::mem(ts->ebx, 4), ts->edx);
	mov(mv, x86::mem(ts->ebx + 0x4, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	lea(mv, &ts->esi, x86::mem(ts->ebx + 0xB8, 4));
	goto loc_56D1D0;

loc_56D1C9:
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x8, 4));
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_56D1D0:
	mov(mv, &ts->eax, x86::mem(ts->ebx, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x20, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + (ts->ecx) + 0x10, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x0);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DB8C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + (ts->ecx) + 0x18, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xB0, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x90, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xA0, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xC0, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xB4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x94, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xA4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xC4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xB8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x98, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xA8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xC8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x5CC, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x64, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x68, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x60, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	if (ts->eflags.zero) {
        goto loc_56D2DF;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->edx + 0x5C4, 4));
	game::sub_5E7E70(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DB8C, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	goto loc_56D2EC;

loc_56D2DF:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DB8C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x68, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));

loc_56D2EC:
	mov(mv, &ts->ecx, x86::mem(ts->ebx, 4));
	add(&ts->ecx, 0x90);
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_4012B0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	fchs(&ts->fp, x86::fp_index(0));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, x86::mem(ts->esi - 0x8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi - 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi, 4), ts->edx);
	add(&ts->edi, 0x30);
	add(&ts->esp, 0x8);
	add(&ts->esi, 0xD0);
	cmp(&ts->eflags, ts->edi, 0xC0);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_56D1C9;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_56D340(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x0);
	game::sub_5EBA30(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x0);
	game::sub_5F46A0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x1C, 4));
	add(&ts->ecx, 0x1A0);
	game::sub_5EDE10(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x890118, 4));
	mov(mv, x86::mem(ts->ecx + 0x14, 4), 0x0);
	mov(mv, &ts->edx, x86::mem(0x890118, 4));
	mov(mv, &ts->eax, x86::mem(0x86518C, 4));
	mov(mv, x86::mem(ts->edx + 0x10, 4), ts->eax);
	mov(mv, &ts->edi, x86::mem(ts->esi, 4));
	add(&ts->edi, 0x40);
	push(mv, &ts->esp, 0x86B390);
	mov(&ts->ecx, ts->edi);
	game::sub_592160(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x86B394, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x86B398, 4));
	mov(mv, &ts->ecx, x86::mem(0x86B390, 4));
	mov(mv, x86::mem(ts->edi + 0xE0, 4), ts->ecx);
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0xE4, 4));
	xor_(&ts->eax, ts->eax);
	xor_(&ts->edx, ts->edx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0xE8, 4));
	mov(mv, x86::mem(ts->edi + 0x400, 4), ts->eax);
	mov(mv, x86::mem(ts->edi + 0x3EC, 4), ts->eax);
	mov(mv, x86::mem(ts->edi + 0x3F4, 4), 0x1);
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x2F0, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->edx);
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x1);
	game::sub_5F46A0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x30, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	call(ts, mv, x86::mem(ts->edx + 0x28, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x28, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_56D40A;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x34, 4));
	push(mv, &ts->esp, 0x1);
	game::sub_599200(ts, mv);

loc_56D40A:
	lea(mv, &ts->edi, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->edi);
	game::sub_5769D0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	mov(mv, x86::mem(ts->esi + 0x4, 4), 0x1);
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x30, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x2);
	call(ts, mv, x86::mem(ts->edx + 0x28, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x8, 4), 0x2);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_56D440(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x4, 4), 0x2);
	if (!ts->eflags.zero) {
        goto loc_56D452;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x434, 4), 0x4);
	if (!ts->eflags.zero) {
        goto loc_56D498;
    }

loc_56D452:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x18, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x20, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x1F8, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78AAAC, 4));
	fdivp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_56D498;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_56D496;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));

loc_56D496:
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_56D498:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_56D4A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	lea(mv, &ts->esi, x86::mem(ts->ecx + 0x40, 4));
	mov(&ts->edi, 0x4);

loc_56D4B8:
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	game::sub_56D080(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.zero) {
        goto loc_56D4D3;
    }
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	goto loc_56D4D5;

loc_56D4D3:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));

loc_56D4D5:
	add(&ts->esi, 0xD0);
	dec(&ts->edi);
	if (!ts->eflags.zero) {
        goto loc_56D4B8;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);
}

void sub_56D4F0(x86::thread_state* ts, x86::memory_view* mv) {
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_56D4FB;
    }
	lea(mv, &ts->eax, x86::mem(ts->ecx - 0x230, 4));
	retn(mv, &ts->esp);

loc_56D4FB:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);
}

void sub_56D500(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_56D5AF;
    }
	cmp(&ts->eflags, ts->eax, 0x3);
	if (!ts->eflags.zero) {
        goto loc_56D539;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x1C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	inc(&ts->eax);
	mov(mv, x86::mem(ts->esi + 0x20, 4), ts->eax);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x18, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_56D539;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x1C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x1C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x1C, 4));

loc_56D539:
	cmp(&ts->eflags, ts->edi, 0x3);
	if (!ts->eflags.zero) {
        goto loc_56D5AC;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x4C, 4));
	mov(&ts->ecx, 0x89CF48);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x48, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	game::sub_5F00F0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	mov(&ts->eax, 0x8651AC);
	if (!ts->eflags.zero) {
        goto loc_56D560;
    }
	mov(&ts->eax, 0x86518C);

loc_56D560:
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	sub(mv, &ts->eax, x86::mem(ts->esi + 0x38, 4));
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x40, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_56D582;
    }
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x40, 4));
	goto loc_56D584;

loc_56D582:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));

loc_56D584:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x24, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x44, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_56D597;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x24, 4));
	mov(mv, x86::mem(ts->esi + 0x44, 4), ts->ecx);

loc_56D597:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x50, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_56D5AC;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esi + 0x50, 4), ts->edx);

loc_56D5AC:
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->edi);

loc_56D5AF:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);
}

void sub_56D5C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x14, 4));
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_56D5DD;
    }
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x24, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x3C, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x30, 1), ts->al);
	mov(mv, x86::mem(ts->ecx + 0x14, 4), 0x2);
	retn(mv, &ts->esp, 0x4);

loc_56D5DD:
	cmp(&ts->eflags, ts->eax, 0x4);
	mov(mv, &ts->dl, x86::mem(ts->esp + 0x4, 1));
	mov(mv, x86::mem(ts->ecx + 0x30, 1), ts->dl);
	if (ts->eflags.zero) {
        goto locret_56D615;
    }
	cmp(&ts->eflags, ts->eax, 0x3);
	if (!ts->eflags.zero) {
        goto loc_56D60E;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x20, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x1C, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x8, 4));
	inc(&ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x20, 4), ts->eax);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x18, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_56D60E;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x1C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x1C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x1C, 4));

loc_56D60E:
	mov(mv, x86::mem(ts->ecx + 0x14, 4), 0x4);

locret_56D615:
	retn(mv, &ts->esp, 0x4);
}

void sub_56D620(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x24, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->al, x86::mem(ts->esp + 0xC, 1));
	push(mv, &ts->esp, 0x3);
	mov(&ts->ecx, ts->esi);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x2C, 4));
	mov(mv, x86::mem(ts->esi + 0x30, 1), ts->al);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x2C, 4));
	game::sub_56D500(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);
}

void sub_56D650(x86::thread_state* ts, x86::memory_view* mv) {
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x20, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x24, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x3C, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x2C, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x40, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x44, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x30, 1), ts->al);
	mov(mv, x86::mem(ts->ecx + 0x48, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4C, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x50, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x54, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x38, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x34, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x14, 4));
	cmp(&ts->eflags, ts->eax, 0x2);
	mov(&ts->edx, 0x3F800000);
	mov(mv, x86::mem(ts->ecx + 0x1C, 4), ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x28, 4), ts->edx);
	if (ts->eflags.zero) {
        goto locret_56D6BE;
    }
	cmp(&ts->eflags, ts->eax, 0x3);
	if (!ts->eflags.zero) {
        goto loc_56D6B7;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	mov(mv, x86::mem(ts->ecx + 0x20, 4), 0x1);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x18, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_56D6B7;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x1C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x1C, 4));

loc_56D6B7:
	mov(mv, x86::mem(ts->ecx + 0x14, 4), 0x2);

locret_56D6BE:
	retn(mv, &ts->esp);
}

void sub_56D6C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->dl, x86::mem(ts->ecx + 0x30, 1));
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->dl, ts->al);
	if (ts->eflags.zero) {
        goto loc_56D6CD;
    }
	mov(mv, x86::mem(ts->ecx + 0x30, 1), ts->al);
	retn(mv, &ts->esp);

loc_56D6CD:
	mov(mv, x86::mem(ts->ecx + 0x24, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x3C, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x38, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x14, 4));
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto locret_56D70A;
    }
	cmp(&ts->eflags, ts->eax, 0x3);
	if (!ts->eflags.zero) {
        goto loc_56D703;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x20, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x1C, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x8, 4));
	inc(&ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x20, 4), ts->eax);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x18, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_56D703;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x1C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x1C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x1C, 4));

loc_56D703:
	mov(mv, x86::mem(ts->ecx + 0x14, 4), 0x2);

locret_56D70A:
	retn(mv, &ts->esp);
}

void sub_56D710(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebp, ts->ecx);
	xor_(&ts->edi, ts->edi);

loc_56D718:
	mov(mv, &ts->esi, x86::mem(ts->ebp + (ts->edi*4), 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_56D760;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x10, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56D760;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_56D753;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x24, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, 0x3);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x30, 1), 0x1);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x2C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x2C, 4));
	game::sub_56D500(ts, mv);
	goto loc_56D760;

loc_56D753:
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_56D760;
    }
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_56D5C0(ts, mv);

loc_56D760:
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, 0x27);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_56D718;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_56D770(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, ts->ecx);
	or_(&ts->edx, 0xFFFFFFFF);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0x18, 4), 0x783FE5);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0xC, 4), 0x3);
	retn(mv, &ts->esp);
}

void sub_56D7A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x864630, 4));
	cmp(&ts->eflags, ts->eax, 0x864630);
	if (ts->eflags.zero) {
        goto locret_56D7C6;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_56D7B0:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x864630, 4));
	cmp(&ts->eflags, ts->eax, 0x864630);
	if (!ts->eflags.zero) {
        goto loc_56D7B0;
    }

locret_56D7C6:
	retn(mv, &ts->esp);
}

void sub_56D7D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->edi);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x1D4, 4));
	mov(mv, x86::mem(ts->esi, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x10, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	game::sub_5B5330(ts, mv);
	movsx(&ts->eax, ts->al);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->eax);
	shl(&ts->eax, 0x4);
	mov(mv, x86::mem(ts->esi + 0x10, 4), 0x0);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x79DA88, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DAE4, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x20, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x14, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->edx + 0x4, 4), 0x2);
	if (!ts->eflags.zero) {
        goto loc_56D83C;
    }
	mov(mv, &ts->eax, x86::mem(0x89E7F4, 4));
	mov(mv, &ts->ecx, x86::mem(0x79DAE8, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x38, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_56D83C:
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x38, 4), 0x3F800000);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_56D850(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x778756);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x958);
	mov(mv, &ts->eax, x86::mem(0x864630, 4));
	cmp(&ts->eflags, ts->eax, 0x864630);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_56D896;
    }

loc_56D880:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x864630, 4));
	cmp(&ts->eflags, ts->eax, 0x864630);
	if (!ts->eflags.zero) {
        goto loc_56D880;
    }

loc_56D896:
	mov(mv, &ts->eax, x86::mem(0x89E7C8, 4));
	mov(mv, &ts->ecx, x86::mem(0x89E7C0, 4));
	xor_(&ts->ebx, ts->ebx);
	add(&ts->eax, ts->ecx);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x24, 4), 0x3E7);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_56D9F1;
    }
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x864640);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_56D8D0:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x89E7A0);
	game::sub_5ED900(ts, mv);
	mov(&ts->esi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x900, 1));
	xor_(&ts->edi, ts->edi);
	cmp(&ts->eflags, ts->eax, 0x1);
	mov(mv, x86::mem(ts->esp + 0x17, 1), 0x0);
	if (!ts->eflags.zero) {
        goto loc_56D927;
    }
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_56D92B;
    }
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	mov(&ts->ecx, 0x89CF48);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x17, 1), 0x1);
	game::sub_5F00F0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56D91F;
    }
	mov(mv, &ts->edi, x86::mem(0x89CF4C, 4));
	add(&ts->edi, 0x12);
	goto loc_56D942;

loc_56D91F:
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x90C, 4));
	goto loc_56D942;

loc_56D927:
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_56D942;
    }

loc_56D92B:
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_56D942;
    }
	movsx(mv, &ts->ecx, x86::mem(ts->esi + 0x1, 1));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F0220(ts, mv);
	lea(mv, &ts->edi, x86::mem(ts->eax + 0x12, 4));

loc_56D942:
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0x20, 4));
	mov(&ts->ecx, ts->ebx);
	game::sub_5B5330(ts, mv);
	movsx(mv, &ts->edx, x86::mem(ts->esi + 0x1, 1));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	mov(mv, x86::mem(ts->esp + 0x58, 4), ts->edx);
	mov(mv, &ts->dl, x86::mem(ts->esp + 0x17, 1));
	movsx(&ts->eax, ts->al);
	mov(mv, x86::mem(ts->esp + 0x64, 1), ts->dl);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, x86::mem(ts->esp + 0x6C, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x68, 4), ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, x86::mem(ts->esp + 0x5C, 4), ts->eax);
	mov(&ts->ecx, 0x8);
	lea(mv, &ts->esi, x86::mem(ts->esp + 0x50, 4));
	mov(mv, x86::mem(ts->esp + 0x60, 4), 0x0);
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));
	inc(&ts->edx);
	mov(&ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->edx);
	game::sub_5B5330(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	movsx(&ts->eax, ts->al);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_56D9AE;
    }
	mov(&ts->ecx, ts->ebx);
	game::sub_5B5330(ts, mv);
	movsx(&ts->ecx, ts->al);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ecx);

loc_56D9AE:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->ecx, x86::mem(0x864634, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(0x89E7C8, 4));
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, x86::mem(0x864634, 4), ts->eax);
	mov(mv, x86::mem(ts->eax, 4), 0x864630);
	add(&ts->eax, 0x20);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x89E7C0, 4));
	inc(&ts->ecx);
	add(&ts->edx, ts->eax);
	cmp(&ts->eflags, ts->ecx, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_56D8D0;
    }
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x18, 4));

loc_56D9F1:
	mov(mv, &ts->eax, x86::mem(0x89E7A0, 4));
	cmp(&ts->eflags, ts->eax, 0x104E);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_56DBE3;
    }
	cmp(&ts->eflags, ts->eax, 0x1053);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_56DBE3;
    }
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F00F0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_56DBE3;
    }
	mov(mv, &ts->eax, x86::mem(0x8900BC, 4));
	xor_(&ts->edi, ts->edi);
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_56DA2F;
    }
	mov(&ts->edi, 0x3);

loc_56DA2F:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x50, 4));
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x1F, 1), 0x0);
	game::sub_4FE970(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_56DC7E;
    }
	mov(&ts->esi, 0x64);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x50, 4));
	shl(&ts->ebx, 0x5);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->edx);
	add(&ts->ebx, 0x864640);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->edi);
	goto loc_56DA70;

loc_56DA6B:
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x18, 4));
	nop();

loc_56DA70:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x80, 4));
	game::sub_5AC6E0(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFFFFFFFF);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x80, 4));
	mov(mv, x86::mem(ts->esp + 0x97C, 4), 0x0);
	game::sub_610270(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x28, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, 0xBF800000);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x84, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x988, 4), 0x1);
	mov(mv, x86::mem(ts->esp + 0x48, 4), ts->ecx);
	game::sub_4FEAF0(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esp + 0x33, 1));
	add(&ts->esp, 0x1C);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_56DAE6;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x70, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->edi, 4));
	mov(mv, x86::mem(ts->esp + 0x17, 1), 0x0);
	if (!ts->eflags.zero) {
        goto loc_56DAEB;
    }

loc_56DAE6:
	mov(mv, x86::mem(ts->esp + 0x17, 1), 0x1);

loc_56DAEB:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	mov(mv, &ts->edx, x86::mem(0x89E7A0, 4));
	xor_(&ts->ecx, ts->ecx);
	mov(&ts->eax, 0x7FA5C0);
	mov(&ts->edi, ts->edi);

loc_56DB00:
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_56DB15;
    }
	add(&ts->eax, 0x34);
	inc(&ts->ecx);
	cmp(&ts->eflags, ts->eax, 0x7FA6F8);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_56DB00;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	goto loc_56DB32;

loc_56DB15:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	imul(&ts->ecx, ts->ecx, 0xD);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	mov(mv, &ts->edi, x86::mem(0x89E7F4, 4));
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2), 4));
	add(&ts->edi, ts->ecx);
	add(&ts->edx, ts->edi);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7FA5C4, 4));

loc_56DB32:
	lea(mv, &ts->ecx, x86::mem(ts->esi - 0x63, 4));
	cmp(&ts->eflags, ts->ecx, 0x2);
	if (!ts->eflags.zero) {
        goto loc_56DB42;
    }
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DA48, 4));
	goto loc_56DB4D;

loc_56DB42:
	cmp(&ts->eflags, ts->ecx, 0x3);
	if (!ts->eflags.zero) {
        goto loc_56DB4D;
    }
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DA4C, 4));

loc_56DB4D:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x2C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x70, 4));
	mov(mv, x86::mem(ts->esp + 0x48, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x38, 4), ts->esi);
	mov(mv, x86::mem(ts->esp + 0x3C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x864634, 4));
	mov(mv, x86::mem(ts->esp + 0x4C, 4), ts->edx);
	mov(&ts->ecx, 0x8);
	lea(mv, &ts->esi, x86::mem(ts->esp + 0x30, 4));
	mov(&ts->edi, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x44, 1), 0x0);
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ebx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x3F4, 4));
	mov(mv, x86::mem(0x864634, 4), ts->ebx);
	mov(mv, x86::mem(ts->ebx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->ebx, 4), 0x864630);
	mov(mv, x86::mem(ts->esp + 0x96C, 4), 0xFFFFFFFF);
	game::nullsub_1(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	add(&ts->ebx, 0x20);
	inc(&ts->edx);
	add(&ts->ecx, 0x4);
	dec(&ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_56DA6B;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x964, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_56DBE3:
	mov(mv, &ts->eax, x86::mem(0x89E7C4, 4));
	xor_(&ts->ebx, ts->ebx);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_56DC7E;
    }

loc_56DBF2:
	mov(mv, &ts->ecx, x86::mem(0x89E7C0, 4));
	mov(mv, &ts->eax, x86::mem(0x89E7C8, 4));
	lea(mv, &ts->esi, x86::mem(ts->eax + (ts->ecx), 4));
	add(&ts->esi, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x89E7A0);
	game::sub_5ED900(ts, mv);
	mov(&ts->edi, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x20, 4));
	game::sub_5B5330(ts, mv);
	movsx(mv, &ts->edx, x86::mem(ts->edi + 0x1, 1));
	movsx(&ts->eax, ts->al);
	shl(&ts->esi, 0x5);
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x90C, 4));
	mov(mv, x86::mem(ts->esp + 0x3C, 4), ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x864640, 4));
	mov(mv, x86::mem(ts->esp + 0x38, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x10, 4));
	mov(mv, x86::mem(ts->esp + 0x48, 4), ts->ecx);
	mov(&ts->edi, ts->eax);
	mov(&ts->ecx, 0x8);
	lea(mv, &ts->esi, x86::mem(ts->esp + 0x30, 4));
	mov(mv, x86::mem(ts->esp + 0x40, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x44, 1), 0x1);
	mov(mv, x86::mem(ts->esp + 0x4C, 4), ts->edx);
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(0x864634, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(0x864634, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), 0x864630);
	mov(mv, &ts->eax, x86::mem(0x89E7C4, 4));
	inc(&ts->ebx);
	cmp(&ts->eflags, ts->ebx, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_56DBF2;
    }

loc_56DC7E:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x964, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_4017F0:
	add(&ts->ecx, 0x374);
	goto nullsub_1;

loc_778740:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x8F0, 4));
	goto loc_4017F0;

loc_77874B:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x900, 4));
	goto sub_401800;

SEH_56D850:
	mov(&ts->eax, 0x7E3D60);
	goto ___CxxFrameHandler;
}

void sub_56DCA0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DC18, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x1DC, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x2C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_56DCF9;
    }
	cmp(&ts->eflags, ts->eax, 0x7FFFFFFF);
	if (ts->eflags.zero) {
        goto loc_56DCF9;
    }
	mov(&ts->ecx, 0x89CF48);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	game::sub_5F00F0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	mov(&ts->eax, 0x8651AC);
	if (!ts->eflags.zero) {
        goto loc_56DCE6;
    }
	mov(&ts->eax, 0x86518C);

loc_56DCE6:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	sub(mv, &ts->ecx, x86::mem(ts->edi + 0x2C, 4));
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ecx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));

loc_56DCF9:
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DB04, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_56DD41;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x15, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_56DD45;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x1DC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x34, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x30, 4));
	cmp(&ts->eflags, ts->ecx, 0x3);
	if (ts->eflags.zero) {
        goto loc_56DD33;
    }
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x38, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_56DD33;
    }
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x15, 1), ts->al);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);

loc_56DD33:
	mov(&ts->eax, 0x1);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x15, 1), ts->al);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);

loc_56DD41:
	mov(mv, x86::mem(ts->esi + 0x15, 1), 0x0);

loc_56DD45:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_56DD50(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(0x864630, 4));
	mov(&ts->ecx, 0x864630);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_56DD7B;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_56DD70:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x8, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_56DD7F;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_56DD70;
    }

loc_56DD7B:
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_56DD7F:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_56DD90(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(0x864630, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x864630);
	mov(&ts->edi, 0x1);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_56DDBC;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	nop();

loc_56DDB0:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x8, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_56DDC1;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	inc(&ts->edi);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_56DDB0;
    }

loc_56DDBC:
	pop(mv, &ts->esp, ts->edi);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_56DDC1:
	mov(&ts->eax, ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_56DDD0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(0x890080, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	xor_(&ts->ebp, ts->ebp);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_56DE88;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x864630);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	mov(&ts->edi, ts->eax);
	mov(&ts->ebx, 0x1C);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_56DE00:
	mov(mv, &ts->esi, x86::mem(ts->ebx + (ts->esi), 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x900, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_56DE46;
    }
	movsx(mv, &ts->ecx, x86::mem(ts->esi + 0xA, 2));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F0220(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(0x864630, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_56DE3E;
    }
	movsx(mv, &ts->ecx, x86::mem(ts->esi + 0xA, 2));

loc_56DE33:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x8, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_56DE40;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_56DE33;
    }

loc_56DE3E:
	xor_(&ts->eax, ts->eax);

loc_56DE40:
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	goto loc_56DE6E;

loc_56DE46:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x1D4, 4));
	mov(mv, &ts->eax, x86::mem(0x864630, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x2C, 4));
	if (ts->eflags.zero) {
        goto loc_56DE6C;
    }
	movsx(mv, &ts->ecx, x86::mem(ts->esi + 0xA, 2));

loc_56DE61:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x8, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_56DE6E;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_56DE61;
    }

loc_56DE6C:
	xor_(&ts->eax, ts->eax);

loc_56DE6E:
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x10, 4));
	mov(mv, &ts->esi, x86::mem(0x890080, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	inc(&ts->ebp);
	add(&ts->ebx, 0x4);
	cmp(&ts->eflags, ts->ebp, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_56DE00;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);

loc_56DE88:
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F00F0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56DEA5;
    }
	mov(mv, &ts->ecx, x86::mem(0x89CF4C, 4));
	game::sub_5F8FE0(ts, mv);
	mov(&ts->esi, ts->eax);
	goto loc_56DEAD;

loc_56DEA5:
	mov(mv, &ts->eax, x86::mem(0x890080, 4));
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x1C, 4));

loc_56DEAD:
	mov(mv, &ts->eax, x86::mem(0x864630, 4));
	mov(&ts->ecx, 0x864630);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_56DEDC;
    }
	push(mv, &ts->esp, 0x56CDD0);
	game::sub_43E650(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x18, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x9A4, 4));
	push(mv, &ts->esp, 0x864630);
	push(mv, &ts->esp, ts->edx);
	game::sub_4DA570(ts, mv);
	add(&ts->esp, 0x8);

loc_56DEDC:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_56DEE0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x14, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	xor_(&ts->edx, ts->edx);
	cmp(&ts->eflags, ts->edi, 0x1);
	if (!ts->eflags.zero) {
        goto loc_56DEFE;
    }
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x18, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x248, 1), ts->dl);
	if (!ts->eflags.zero) {
        goto loc_56DF15;
    }

loc_56DEFE:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x42C, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_56DF15;
    }
	xor_(&ts->al, ts->al);
	goto loc_56DF17;

loc_56DF15:
	mov(&ts->al, 0x1);

loc_56DF17:
	cmp(&ts->eflags, ts->al, ts->dl);
	mov(mv, x86::mem(ts->ecx + 0x2C, 4), 0xBF800000);
	if (ts->eflags.zero) {
        goto loc_56DF82;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x28, 4));
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (ts->eflags.zero) {
        goto loc_56DF30;
    }
	cmp(&ts->eflags, ts->eax, 0x7FFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_56DF38;
    }

loc_56DF30:
	mov(mv, &ts->eax, x86::mem(0x8651AC, 4));
	mov(mv, x86::mem(ts->ecx + 0x28, 4), ts->eax);

loc_56DF38:
	mov(mv, &ts->eax, x86::mem(0x8651AC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DB14, 4));
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x28, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DB10, 4));
	sub(&ts->eax, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fcom(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_56DF68;
    }
	mov(mv, x86::mem(ts->ecx + 0x28, 4), ts->edx);

loc_56DF68:
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DB10, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_56DF89;
    }
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	pop(mv, &ts->esp, ts->edi);
	fsub(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	pop(mv, &ts->esp, ts->esi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x2C, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_56DF82:
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->ecx + 0x28, 4), ts->edx);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_56DF89:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	pop(mv, &ts->esp, ts->edi);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_56DFA0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, x86::mem(ts->esi + 0x1C, 4), 0x1);
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_56DFCC;
    }
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x10, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56DFCC;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_56DFC5;
    }
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_56DFCC;
    }

loc_56DFC5:
	push(mv, &ts->esp, 0x1);
	game::sub_56D5C0(ts, mv);

loc_56DFCC:
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero) {
        goto locret_56DFE3;
    }
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x10, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto locret_56DFE3;
    }
	mov(mv, x86::mem(ts->eax + 0x1C, 4), 0x3F800000);

locret_56DFE3:
	retn(mv, &ts->esp);
}

void sub_56DFF0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x14, 4));
	mov(mv, &ts->dl, x86::mem(ts->ecx + 0x900, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.zero) {
        goto loc_56E006;
    }
	xor_(&ts->al, ts->al);
	retn(mv, &ts->esp, 0x4);

loc_56E006:
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x1C, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x1D8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x34, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_56E027;
    }
	mov(&ts->eax, 0x1);
	retn(mv, &ts->esp, 0x4);

loc_56E027:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp, 0x4);
}

void sub_56E030(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x10, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_56E086;
    }
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x8, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_56E086;
    }
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	game::sub_56DFF0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56E07C;
    }
	add(&ts->esi, 0x60);
	push(mv, &ts->esp, ts->esi);
	add(&ts->edi, 0x60);
	push(mv, &ts->esp, ts->edi);
	game::sub_43CE10(ts, mv);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7FA708, 4));
	add(&ts->esp, 0x8);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_56E07C;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);

loc_56E07C:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);

loc_56E086:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);
}

void sub_56E0A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_56E1C1;
    }
	mov(mv, &ts->ecx, x86::mem(0x890080, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x18, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x10, 4));
	push(mv, &ts->esp, ts->esi);
	sub(&ts->edx, ts->eax);
	xor_(&ts->esi, ts->esi);
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_56E1C0;
    }

loc_56E0D6:
	add(&ts->eax, ts->esi);
	mov(mv, &ts->eax, x86::mem(ts->ecx + (ts->eax*4) + 0x1C, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x28, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_56E1AF;
    }
	add(&ts->eax, 0x60);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x8, 4));
	add(&ts->eax, 0x60);
	push(mv, &ts->esp, ts->eax);
	game::sub_43CE10(ts, mv);
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7FA70C, 4));
	add(&ts->esp, 0x8);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.zero) {
        goto loc_56E111;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7FA70C, 4));

loc_56E111:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7FA710, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_56E128;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7FA710, 4));

loc_56E128:
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7FA70C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7FA710, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7FA70C, 4));
	fdivp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x430, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7FA714, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.zero) {
        goto loc_56E160;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7FA714, 4));

loc_56E160:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7FA718, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_56E177;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7FA718, 4));

loc_56E177:
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7FA714, 4));
	mov(mv, &ts->ecx, x86::mem(0x890080, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7FA718, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7FA714, 4));
	fdivp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7FA720, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7FA71C, 4));
	fmulp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7FA71C, 4));
	fmulp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));

loc_56E1AF:
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x18, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x10, 4));
	inc(&ts->esi);
	sub(&ts->edx, ts->eax);
	cmp(&ts->eflags, ts->esi, ts->edx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_56E0D6;
    }

loc_56E1C0:
	pop(mv, &ts->esp, ts->esi);

loc_56E1C1:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);
}

void sub_56E1D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	sub(&ts->esp, 0x8C);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC0, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x3F800000);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78423C, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x24, 4), 0x3F800000);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x30, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x34, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x38, 4), 0x3F800000);
	mov(mv, x86::mem(ts->esp + 0x3C, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x40, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x44, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x48, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x4C, 4), 0x3F800000);
	game::__ftol2(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_5BADA0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xB0, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x80, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x90, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xA0, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x5C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x94, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xA4, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x84, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xB4, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x60, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x98, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xA8, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xB8, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x88, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x64, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xBC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x8C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x9C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xAC, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x68, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xB0, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x90, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xA0, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x80, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x6C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xA4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x84, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xB4, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x94, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x70, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x98, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xA8, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x88, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xB8, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x74, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xBC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x9C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xAC, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x8C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x78, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x90, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xA0, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x80, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xB0, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x7C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xA4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x84, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xB4, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x94, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x80, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x98, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xB8, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xA8, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x88, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x84, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x9C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xAC, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x8C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xBC, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x88, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x50, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x90, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x54, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xA0, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x80, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xB0, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x54, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xA4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x84, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x50, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x94, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x5C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x5C, 4));
	push(mv, &ts->esp, ts->eax);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xB4, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x98, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x60, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xB8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x5C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xA8, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x54, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x88, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x98, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x9C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x9C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x5C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xAC, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x54, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x8C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x60, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xBC, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xA0, 4));
	game::sub_4012B0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x74, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x70, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x78, 4));
	add(&ts->esp, 0x14);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esp + 0x40, 4), ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x50, 4), 0x3F800000);
	game::sub_40F010(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_61D150(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_56E610(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77872B);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, 0x14);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	game::sub_579F20(ts, mv);
	push(mv, &ts->esp, 0x56D130);
	push(mv, &ts->esp, 0x56D050);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, 0xD0);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x40, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x24, 4), 0x0);
	game::sub_75C461(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->esi, 4), 0x0);
	mov(mv, x86::mem(ts->esi + 0x4, 4), 0x0);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_778720:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0xC);
	goto sub_5768E0;

SEH_56E610:
	mov(&ts->eax, 0x7E3D84);
	goto ___CxxFrameHandler;
}

void sub_56E680(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(ts->esp + 0x4, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_56E6C7;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x0);
	game::sub_5F46A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	game::sub_5F6D50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x14, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x4, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_56E6BC;
    }
	mov(mv, &ts->dl, x86::mem(ts->ecx + 0x900, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	if (!ts->eflags.zero) {
        goto loc_56E6BC;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x30, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x1C, 4));

loc_56E6BC:
	mov(mv, x86::mem(ts->esi + 0x4, 4), 0x0);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_56E6C7:
	mov(mv, x86::mem(ts->esi + 0x4, 4), 0x3);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_56E6E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(0x86462C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_56E70E;
    }
	mov(mv, &ts->eax, x86::mem(0x890080, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_56D1A0(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(0x86462C, 4), 0x0);
	game::sub_56D340(ts, mv);

loc_56E70E:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	dec(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0x3);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_56E71B;
    }
	jmp(x86::mem(0x56E8D8, 4));

loc_56E722:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x30, 4));
	push(mv, &ts->esp, 0x0);
	game::sub_5EB8F0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x434, 4));
	cmp(&ts->eflags, ts->ecx, 0x4);
	if (!ts->eflags.zero) {
        goto loc_56E747;
    }
	mov(mv, x86::mem(ts->esi + 0x4, 4), 0x2);
	goto def_56E71B;

loc_56E747:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	cmp(&ts->eflags, ts->ecx, ts->edx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x30, 4));
	if (ts->eflags.zero) {
        goto loc_56E768;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->edx);
	call(ts, mv, x86::mem(ts->eax + 0x28, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x30, 4));
	push(mv, &ts->esp, 0x0);
	game::sub_5EB910(ts, mv);
	goto def_56E71B;

loc_56E768:
	push(mv, &ts->esp, 0x3F800000);
	game::sub_5EB910(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	game::sub_4018C0(ts, mv);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DB94, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (!ts->eflags.zero) {
        goto loc_56E789;
    }
	inc(mv, x86::mem(ts->esi + 0x8, 4));

loc_56E789:
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	game::sub_576970(ts, mv);
	goto def_56E71B;

loc_56E798:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x30, 4));
	push(mv, &ts->esp, 0x0);
	game::sub_5EB8F0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x30, 4));
	push(mv, &ts->esp, 0x3F800000);
	game::sub_5EB910(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7FBED8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784258, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_56E7D2;
    }
	mov(mv, &ts->ecx, x86::mem(0x7FBED8, 4));
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->ecx);
	goto loc_56E7DE;

loc_56E7D2:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x440, 4));
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);

loc_56E7DE:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	game::sub_576970(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_56D440(ts, mv);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (ts->eflags.parity) {
        goto def_56E71B;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x30, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	call(ts, mv, x86::mem(ts->eax + 0x28, 4));
	mov(mv, x86::mem(ts->esi + 0x4, 4), 0x3);
	goto def_56E71B;

loc_56E814:
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x30, 4));
	push(mv, &ts->esp, 0x0);
	game::sub_5EB910(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x434, 4), 0x2);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x30, 4));
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_56E835;
    }
	push(mv, &ts->esp, 0x3F800000);
	goto loc_56E837;

loc_56E835:
	push(mv, &ts->esp, 0x0);

loc_56E837:
	game::sub_5EB8F0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x430, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78426C, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (ts->eflags.parity) {
        goto def_56E71B;
    }
	mov(mv, x86::mem(ts->esi + 0x4, 4), 0x4);
	goto def_56E71B;

loc_56E860:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_56E680(ts, mv);

def_56E71B:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_56E8D0;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x330, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x100, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x100, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x334, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x1D0, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x1D0, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x338, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x2A0, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x2A0, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x33C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x370, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x370, 4));

loc_56E8D0:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);
}

void sub_56E8F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->esi, x86::mem(ts->ecx + 0x40, 4));
	mov(&ts->edi, 0x4);
	nop();

loc_56E900:
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	game::sub_56E1D0(ts, mv);
	add(&ts->esi, 0xD0);
	dec(&ts->edi);
	if (!ts->eflags.zero) {
        goto loc_56E900;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_56E920(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F00F0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56E93D;
    }
	mov(mv, &ts->eax, x86::mem(0x865198, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);

loc_56E93D:
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F00F0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	mov(&ts->eax, 0x8651AC);
	if (!ts->eflags.zero) {
        goto loc_56E955;
    }
	mov(&ts->eax, 0x86518C);

loc_56E955:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x34, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	sub(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->ecx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0xC, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_56E9BE;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_56E9AB;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x24, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, 0x3);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x30, 1), 0x0);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x2C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x2C, 4));
	game::sub_56D500(ts, mv);
	goto loc_56E9BE;

loc_56E9AB:
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_56E9BE;
    }
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_56D5C0(ts, mv);
	game::sub_56D6C0(ts, mv);

loc_56E9BE:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_56E9CA;
    }
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_56E9EA;
    }

loc_56E9CA:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_56E9EA;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_56C740(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x24, 4));

loc_56E9EA:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x14, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_56EA9E;
    }
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F00F0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	mov(&ts->eax, 0x8651AC);
	if (!ts->eflags.zero) {
        goto loc_56EA0C;
    }
	mov(&ts->eax, 0x86518C);

loc_56EA0C:
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	sub(&ts->edx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_56EA9E;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x28, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_56EA4B;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x3C, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x10, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_56EA68;
    }

loc_56EA4B:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x28, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_56EA9E;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x3C, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x10, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_56EA9E;
    }

loc_56EA68:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	inc(&ts->eax);
	mov(mv, x86::mem(ts->esi + 0x20, 4), ts->eax);
	mov(&ts->edx, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_56EA9E;
    }
	cmp(&ts->eflags, ts->eax, 0x3);
	if (!ts->eflags.zero) {
        goto loc_56EA97;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x1C, 4));
	inc(&ts->edx);
	mov(mv, x86::mem(ts->esi + 0x20, 4), ts->edx);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x18, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_56EA97;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x1C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x1C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x1C, 4));

loc_56EA97:
	mov(mv, x86::mem(ts->esi + 0x14, 4), 0x0);

loc_56EA9E:
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x4);
}

void sub_56EAB0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->al, x86::mem(ts->eax + 0x2C, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_56EAC9;
    }
	movsx(&ts->ecx, ts->al);
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x20, 4), ts->ecx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_56EBDA;
    }

loc_56EAC9:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.zero) {
        goto loc_56EBDA;
    }
	cmp(&ts->eflags, ts->eax, 0x4);
	if (ts->eflags.zero) {
        goto loc_56EBDA;
    }
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F00F0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56EB10;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	movsx(mv, &ts->ecx, x86::mem(ts->edx + 0x4, 1));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7FA520, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_56EB10;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7FA520, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));

loc_56EB10:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(&ts->ecx, 0x89CF48);
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->eax);
	game::sub_5F00F0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	mov(&ts->eax, 0x8651AC);
	if (!ts->eflags.zero) {
        goto loc_56EB2F;
    }
	mov(&ts->eax, 0x86518C);

loc_56EB2F:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->esi + 0x34, 4), ts->ecx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x28, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x54, 4));
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->edx);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_56EB4E;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x28, 4));
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->eax);

loc_56EB4E:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x6, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_56EBB4;
    }
	push(mv, &ts->esp, 0x3F800000);
	mov(&ts->ecx, ts->esi);
	game::sub_56C740(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x28, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_56EB81;
    }
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x10, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_56EB9B;
    }

loc_56EB81:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x28, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_56EBD8;
    }
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x10, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_56EBD8;
    }

loc_56EB9B:
	push(mv, &ts->esp, 0x0);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x24, 4));
	mov(&ts->ecx, ts->esi);
	game::sub_56D500(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_56D620(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);

loc_56EBB4:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x14, 4), 0x2);
	if (!ts->eflags.zero) {
        goto loc_56EBDA;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->esi + 0x48, 4), ts->edx);
	game::sub_56C4A0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x38, 4), ts->eax);
	game::sub_56D500(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);

loc_56EBD8:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));

loc_56EBDA:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_56EBE0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77876B);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ebp, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x27);
	mov(&ts->edi, ts->ebp);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	xor_(&ts->ebx, ts->ebx);
	xor_(&ts->esi, ts->esi);
	xor_(&ts->edi, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_56EC10:
	cmp(mv, &ts->eflags, x86::mem(0x89E7D9, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto loc_56EC20;
    }
	cmp(mv, &ts->eflags, x86::mem(0x890104, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_56EC24;
    }

loc_56EC20:
	mov(&ts->al, 0x4);
	goto loc_56EC7B;

loc_56EC24:
	cmp(mv, &ts->eflags, x86::mem(0x89E7D8, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto loc_56EC34;
    }
	cmp(mv, &ts->eflags, x86::mem(0x890108, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_56EC38;
    }

loc_56EC34:
	mov(&ts->al, 0x2);
	goto loc_56EC7B;

loc_56EC38:
	cmp(mv, &ts->eflags, x86::mem(0x89E7B4, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_56EC44;
    }
	mov(&ts->al, 0x8);
	goto loc_56EC7B;

loc_56EC44:
	cmp(mv, &ts->eflags, x86::mem(0x89E7E5, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto loc_56EC54;
    }
	cmp(mv, &ts->eflags, x86::mem(0x836474, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_56EC58;
    }

loc_56EC54:
	mov(&ts->al, 0x20);
	goto loc_56EC7B;

loc_56EC58:
	cmp(mv, &ts->eflags, x86::mem(0x89E7E3, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto loc_56EC68;
    }
	cmp(mv, &ts->eflags, x86::mem(0x89010C, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_56EC6C;
    }

loc_56EC68:
	mov(&ts->al, 0x10);
	goto loc_56EC7B;

loc_56EC6C:
	cmp(mv, &ts->eflags, x86::mem(0x89E7E1, 1), ts->bl);
	setz(ts->eflags, &ts->al);
	dec(&ts->al);
	and_(&ts->al, 0x3F);
	inc(&ts->al);

loc_56EC7B:
	mov(mv, &ts->ecx, x86::mem(0x864624, 4));
	test(mv, &ts->eflags, x86::mem(ts->edi + (ts->ecx) + 0x7, 1), ts->al);
	if (ts->eflags.zero) {
        goto loc_56ECD8;
    }
	mov(mv, &ts->edx, x86::mem(0x864628, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_440E50(ts, mv);
	mov(&ts->ecx, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_56ECC6;
    }
	mov(mv, x86::mem(ts->ecx + 0x34, 4), ts->ebx);
	mov(mv, x86::mem(ts->ecx + 0x38, 4), ts->ebx);
	mov(mv, x86::mem(ts->ecx + 0x10, 1), ts->bl);
	mov(mv, x86::mem(ts->ecx + 0x18, 1), 0x1);
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->esi);
	mov(mv, &ts->eax, x86::mem(0x864624, 4));
	lea(mv, &ts->edx, x86::mem(ts->edi + (ts->eax), 4));
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->edx);
	game::sub_56D650(ts, mv);
	goto loc_56ECC8;

loc_56ECC6:
	xor_(&ts->ecx, ts->ecx);

loc_56ECC8:
	mov(mv, x86::mem(ts->ebp + (ts->esi*4), 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->ecx + 0x10, 1), 0x1);

loc_56ECD8:
	add(&ts->edi, 0x30);
	inc(&ts->esi);
	cmp(&ts->eflags, ts->edi, 0x750);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_56EC10;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->ebp + 0x9C, 4), ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->eax, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

unknown_libname_68:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_56C480(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

SEH_56EBE0:
	mov(&ts->eax, 0x7E3DA8);
	goto ___CxxFrameHandler;
}

void sub_56ED10(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + (ts->eax*4), 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto locret_56ED31;
    }
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x10, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto locret_56ED31;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_56EAB0(ts, mv);

locret_56ED31:
	retn(mv, &ts->esp, 0xC);
}

void sub_56ED40(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F00F0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56ED5F;
    }
	mov(mv, &ts->eax, x86::mem(0x865198, 4));
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);

loc_56ED5F:
	mov(&ts->ecx, ts->esi);
	game::sub_56CCD0(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_56DEE0(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_56C940(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_56CB50(ts, mv);
	mov(&ts->ebp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebp);
	game::sub_56CA80(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x18, 4));
	mov(&ts->ecx, ts->esi);
	game::sub_56DCA0(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_56E030(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_56E0A0(ts, mv);
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x3C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x18, 4));
	mov(mv, x86::mem(ts->esi + 0x34, 4), ts->ecx);
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DAE4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DAFC, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_56EE4B;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x15, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56EE4B;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(&ts->edi, 0x1);
	if (ts->eflags.zero) {
        goto loc_56EE19;
    }
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x10, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56EE19;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_56EE12;
    }
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_56EE19;
    }

loc_56EE12:
	push(mv, &ts->esp, 0x1);
	game::sub_56D5C0(ts, mv);

loc_56EE19:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DB00, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_56EE3F;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x1DC, 4));
	mov(mv, x86::mem(ts->eax + 0x9, 1), 0x0);
	mov(mv, x86::mem(ts->eax + 0xA, 1), 0x0);
	mov(mv, x86::mem(ts->eax + 0x8, 1), 0x0);

loc_56EE3F:
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp, 0x4);

loc_56EE4B:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_56EEC5;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->edi, x86::mem(ts->ecx, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, 0x0);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x1C, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_56EAB0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_56EEC5;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x40, 4));
	game::sub_59FA10(ts, mv);
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x44, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_56EEC3;
    }
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->ebp);
	fabs(&ts->fp, x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DB18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78D898, 4));
	fcompp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_56EED1;
    }
	pop(mv, &ts->esp, ts->edi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x44, 4));
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp, 0x4);

loc_56EEC3:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));

loc_56EEC5:
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->ebp);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp, 0x4);

loc_56EED1:
	pop(mv, &ts->esp, ts->edi);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp, 0x4);
}

void sub_56EEE0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->al, x86::mem(ts->eax + 0xE, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(&ts->bl, 0x1);
	if (ts->eflags.zero) {
        goto loc_56EF3E;
    }
	mov(mv, &ts->cl, x86::mem(ts->esi + 0xB, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_56EF3C;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x8, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, x86::mem(ts->esi + 0xB, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_56EF1F;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x48, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_56EF44;
    }
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x10, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56EF44;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x3F800000);
	game::sub_56EAB0(ts, mv);
	goto loc_56EF44;

loc_56EF1F:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->esi + 0x8, 1), ts->bl);
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x48, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_56EF44;
    }
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x10, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_56EF44;
    }
	mov(mv, x86::mem(ts->eax + 0x1C, 4), 0x3F800000);
	goto loc_56EF44;

loc_56EF3C:
	test(&ts->eflags, ts->al, ts->al);

loc_56EF3E:
	setnz(ts->eflags, &ts->al);
	mov(mv, x86::mem(ts->esi + 0xB, 1), ts->al);

loc_56EF44:
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	mov(mv, &ts->al, x86::mem(ts->ecx + 0xD, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56F012;
    }
	mov(mv, &ts->cl, x86::mem(ts->esi + 0xC, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_56F010;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x9, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, x86::mem(ts->esi + 0xC, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_56EF85;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x4C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_56EFA0;
    }
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x10, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56EFA0;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x3F800000);
	game::sub_56EAB0(ts, mv);
	goto loc_56EFA0;

loc_56EF85:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->esi + 0x9, 1), ts->bl);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_56EFA0;
    }
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x10, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_56EFA0;
    }
	mov(mv, x86::mem(ts->eax + 0x1C, 4), 0x3F800000);

loc_56EFA0:
	mov(mv, &ts->al, x86::mem(0x89E7D9, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_56EFB2;
    }
	mov(mv, &ts->eax, x86::mem(0x890104, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_56EFC5;
    }

loc_56EFB2:
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	movsx(mv, &ts->eax, x86::mem(ts->edx + 0xA, 2));
	push(mv, &ts->esp, ts->eax);
	game::sub_56DD90(ts, mv);
	add(&ts->esp, 0x4);
	goto loc_56EFD1;

loc_56EFC5:
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	mov(mv, &ts->dl, x86::mem(ts->ecx + 0xA, 1));
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->dl, ts->bl);
	setz(ts->eflags, &ts->al);

loc_56EFD1:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_56EFF5;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x44, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_56F018;
    }
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x10, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56F018;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x3F800000);
	game::sub_56EAB0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_56EFF5:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x44, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_56F018;
    }
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x10, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_56F018;
    }
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), 0x3F800000);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_56F010:
	test(&ts->eflags, ts->al, ts->al);

loc_56F012:
	setnz(ts->eflags, &ts->cl);
	mov(mv, x86::mem(ts->esi + 0xC, 1), ts->cl);

loc_56F018:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_56F020(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->eax, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8, 4), 0x47C34FF3);
	if (ts->eflags.zero) {
        goto loc_56F06E;
    }
	cmp(&ts->eflags, ts->eax, 0x7FFFFFFF);
	if (ts->eflags.zero) {
        goto loc_56F06E;
    }
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F00F0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	mov(&ts->eax, 0x8651AC);
	if (!ts->eflags.zero) {
        goto loc_56F057;
    }
	mov(&ts->eax, 0x86518C);

loc_56F057:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	sub(mv, &ts->ecx, x86::mem(ts->esi + 0x2C, 4));
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->ecx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));

loc_56F06E:
	mov(mv, &ts->edx, x86::mem(0x890118, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->edx, 4), 0x4);
	push(mv, &ts->esp, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_56F0F9;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	game::sub_5EE250(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_56F0F9;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_56F0F9;
    }
	mov(&ts->ecx, ts->edi);
	game::sub_5ED290(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_56F0F9;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x424, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_56F0F9;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x3C, 4));
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x18, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_56F0F9;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0xB8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7850EC, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.zero) {
        goto loc_56F0D4;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x8C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x14, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_56F0F9;
    }

loc_56F0D4:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DB24, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.zero) {
        goto loc_56F0F5;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x8C, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_56F0F9;
    }

loc_56F0F5:
	mov(&ts->bl, 0x1);
	goto loc_56F0FB;

loc_56F0F9:
	xor_(&ts->bl, ts->bl);

loc_56F0FB:
	mov(&ts->ecx, ts->edi);
	game::sub_5ED400(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x68, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x60, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x5C4, 4));
	game::sub_5E7E70(ts, mv);
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	test(&ts->eflags, ts->bl, ts->bl);
	pop(mv, &ts->esp, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_56F15B;
    }
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DB40, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_56F15D;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x8C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_56F15D;
    }
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x10, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56F15D;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x3F800000);
	game::sub_56EAB0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_56F15B:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));

loc_56F15D:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_56F170(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	sub(&ts->esp, 0x24);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ebx, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->eax, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x2C, 4));
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->edi, ts->edi);
	cmp(&ts->eflags, ts->eax, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->esi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x47C34FF3);
	if (ts->eflags.zero) {
        goto loc_56F1CD;
    }
	cmp(&ts->eflags, ts->eax, 0x7FFFFFFF);
	if (ts->eflags.zero) {
        goto loc_56F1CD;
    }
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F00F0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	mov(&ts->eax, 0x8651AC);
	if (!ts->eflags.zero) {
        goto loc_56F1B6;
    }
	mov(&ts->eax, 0x86518C);

loc_56F1B6:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	sub(mv, &ts->ecx, x86::mem(ts->ebx + 0x2C, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ecx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));

loc_56F1CD:
	mov(&ts->ecx, ts->esi);
	game::sub_5EBFA0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_56F463;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x430, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DB5C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_56F463;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DB60, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_56F463;
    }
	movsx(mv, &ts->eax, x86::mem(ts->ebx + 0x1D, 1));
	sub(&ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_56F275;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto loc_56F470;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x28, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x24, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_593050(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_56F233;
    }
	inc(mv, x86::mem(ts->ebx + 0x1D, 1));
	goto loc_56F470;

loc_56F233:
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x20, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x244, 4), ts->edi);
	if (!ts->eflags.zero) {
        goto loc_56F46C;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x10, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->edx);
	game::sub_592E60(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_56F26D;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DB54, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7862E8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_56F470;
    }

loc_56F26D:
	inc(mv, x86::mem(ts->ebx + 0x1D, 1));
	goto loc_56F470;

loc_56F275:
	mov(mv, x86::mem(ts->ebx + 0x1E, 1), 0x0);
	mov(mv, x86::mem(ts->ebx + 0x20, 4), ts->edi);
	mov(mv, x86::mem(ts->ebx + 0x28, 4), ts->edi);
	mov(mv, x86::mem(ts->ebx + 0x24, 4), ts->edi);
	mov(mv, &ts->esi, x86::mem(0x86B490, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_56F294;
    }
	add(&ts->esi, 0xFFFFFDD0);
	goto loc_56F296;

loc_56F294:
	xor_(&ts->esi, ts->esi);

loc_56F296:
	mov(&ts->ecx, 0x86B490);
	game::sub_56D4F0(ts, mv);
	cmp(&ts->eflags, ts->esi, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_56F459;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_56F2B0:
	mov(&ts->ecx, ts->esi);
	game::sub_592E60(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_56F41E;
    }
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_598730(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_56F41E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x238, 4));
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x11, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_56F41E;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x23C, 4));
	mov(mv, &ts->dl, x86::mem(ts->eax + 0x11, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	if (!ts->eflags.zero) {
        goto loc_56F41E;
    }
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x130, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	cmp(&ts->eflags, ts->edi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x130, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_56F311;
    }
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_56F41C;
    }

loc_56F311:
	mov(&ts->ecx, ts->edi);
	game::sub_5EBFA0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_56F41C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	game::sub_5EBFA0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_56F41C;
    }
	mov(&ts->ecx, ts->edi);
	game::sub_5EC060(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_56F41C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	game::sub_5EC060(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_56F41C;
    }
	mov(mv, &ts->al, x86::mem(ts->edi + 0x550, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56F41C;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x550, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_56F41C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	cmp(&ts->eflags, ts->edi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_56F381;
    }
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edi);

loc_56F381:
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x424, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_56F3CE;
    }
	add(&ts->eax, 0x60);
	push(mv, &ts->esp, ts->eax);
	add(&ts->edi, 0x60);
	push(mv, &ts->esp, ts->edi);
	game::sub_401150(ts, mv);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DB4C, 4));
	add(&ts->esp, 0x8);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_56F41C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	game::sub_401890(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x68, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DB50, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_56F41C;
    }
	mov(mv, x86::mem(ts->ebx + 0x1E, 1), 0x1);
	goto loc_56F442;

loc_56F3CE:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x10, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DB54, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_56F41C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x23C, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x238, 4));
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_4011B0(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_440F70(ts, mv);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DB58, 4));
	add(&ts->esp, 0x10);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.zero) {
        goto loc_56F43E;
    }

loc_56F41C:
	xor_(&ts->edi, ts->edi);

loc_56F41E:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x230, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_56F430;
    }
	add(&ts->esi, 0xFFFFFDD0);
	goto loc_56F432;

loc_56F430:
	xor_(&ts->esi, ts->esi);

loc_56F432:
	cmp(mv, &ts->eflags, ts->esi, x86::mem(ts->esp + 0x1C, 4));
	if (!ts->eflags.zero) {
        goto loc_56F2B0;
    }
	goto loc_56F459;

loc_56F43E:
	mov(mv, x86::mem(ts->ebx + 0x1E, 1), 0x0);

loc_56F442:
	mov(mv, x86::mem(ts->ebx + 0x20, 4), ts->esi);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x238, 4));
	mov(mv, x86::mem(ts->ebx + 0x24, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x23C, 4));
	mov(mv, x86::mem(ts->ebx + 0x28, 4), ts->ecx);
	xor_(&ts->edi, ts->edi);

loc_56F459:
	cmp(mv, &ts->eflags, x86::mem(ts->ebx + 0x20, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_56F470;
    }
	inc(mv, x86::mem(ts->ebx + 0x1D, 1));
	goto loc_56F470;

loc_56F463:
	mov(mv, x86::mem(ts->ebx + 0x20, 4), ts->edi);
	mov(mv, x86::mem(ts->ebx + 0x28, 4), ts->edi);
	mov(mv, x86::mem(ts->ebx + 0x24, 4), ts->edi);

loc_56F46C:
	mov(mv, x86::mem(ts->ebx + 0x1D, 1), 0x0);

loc_56F470:
	cmp(mv, &ts->eflags, x86::mem(ts->ebx + 0x1D, 1), 0x2);
	if (!ts->eflags.zero) {
        goto loc_56F4B2;
    }
	mov(mv, &ts->al, x86::mem(ts->ebx + 0x1E, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56F485;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x6C, 4));
	goto loc_56F48B;

loc_56F485:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x54, 4));

loc_56F48B:
	cmp(&ts->eflags, ts->ecx, ts->edi);
	if (ts->eflags.zero) {
        goto loc_56F4A1;
    }
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x10, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56F4A1;
    }
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x3F800000);
	game::sub_56EAB0(ts, mv);

loc_56F4A1:
	mov(mv, x86::mem(ts->ebx + 0x1D, 1), 0x0);
	mov(mv, x86::mem(ts->ebx + 0x1E, 1), 0x0);
	mov(mv, x86::mem(ts->ebx + 0x20, 4), ts->edi);
	mov(mv, x86::mem(ts->ebx + 0x28, 4), ts->edi);
	mov(mv, x86::mem(ts->ebx + 0x24, 4), ts->edi);

loc_56F4B2:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_56F4C0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->eax, 4));
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x40, 4));
	xor_(&ts->bl, ts->bl);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x3F800000);
	game::sub_59FA10(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x430, 4));
	fabs(&ts->fp, x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DB34, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784244, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_56F557;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DB38, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_56F557;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0x424, 4), 0x4);
	if (!ts->eflags.zero) {
        goto loc_56F557;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DB3C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_56F548;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x3F800000);
	goto loc_56F54C;

loc_56F548:
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));

loc_56F54C:
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x3C, 4));
	mov(mv, &ts->al, x86::mem(ts->edx + 0x18, 1));
	test(&ts->eflags, ts->al, ts->al);
	setz(ts->eflags, &ts->bl);

loc_56F557:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DC18, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_56F598;
    }
	cmp(&ts->eflags, ts->eax, 0x7FFFFFFF);
	if (ts->eflags.zero) {
        goto loc_56F598;
    }
	mov(&ts->ecx, 0x89CF48);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	game::sub_5F00F0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	mov(&ts->eax, 0x8651AC);
	if (!ts->eflags.zero) {
        goto loc_56F585;
    }
	mov(&ts->eax, 0x86518C);

loc_56F585:
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	sub(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));

loc_56F598:
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DB20, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_56F5E3;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x30, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DB30, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_56F5E3;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x88, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_56F60F;
    }
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x10, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56F60F;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_56F5D5;
    }
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_56F60F;
    }

loc_56F5D5:
	push(mv, &ts->esp, 0x1);
	game::sub_56D5C0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_56F5E3:
	test(&ts->eflags, ts->bl, ts->bl);
	if (ts->eflags.zero) {
        goto loc_56F60F;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x88, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_56F60F;
    }
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x10, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56F60F;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x410, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_56EAB0(ts, mv);

loc_56F60F:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);
}

void sub_56F620(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->eax, 4));
	movzx(mv, &ts->ecx, x86::mem(ts->edi + 0x40C, 2));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ecx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784248, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x118, 4));
	fabs(&ts->fp, x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	if (ts->eflags.zero) {
        goto loc_56F668;
    }
	cmp(&ts->eflags, ts->eax, 0x7FFFFFFF);
	if (ts->eflags.zero) {
        goto loc_56F668;
    }
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F00F0(ts, mv);

loc_56F668:
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0x424, 4), 0x4);
	push(mv, &ts->esp, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_56F6E6;
    }
	mov(mv, &ts->bl, x86::mem(ts->esi + 0x14, 1));
	test(&ts->eflags, ts->bl, ts->bl);
	if (!ts->eflags.zero) {
        goto loc_56F68C;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DB44, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.zero) {
        goto loc_56F69F;
    }
	test(&ts->eflags, ts->bl, ts->bl);

loc_56F68C:
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_56F6E6;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DB48, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_56F6E6;
    }

loc_56F69F:
	test(&ts->eflags, ts->bl, ts->bl);
	if (ts->eflags.zero) {
        goto loc_56F6D8;
    }
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_56F6EA;
    }
	cmp(&ts->eflags, ts->bl, 0x2);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_56F6EA;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_56D020(ts, mv);
	fabs(&ts->fp, x86::fp_index(0));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DC34, 4));
	add(&ts->esp, 0x8);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (!ts->eflags.zero) {
        goto loc_56F6EA;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	inc(&ts->bl);
	mov(mv, x86::mem(ts->esi + 0x14, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->ecx);
	goto loc_56F6EA;

loc_56F6D8:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	inc(&ts->bl);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x14, 1), ts->bl);
	goto loc_56F6EA;

loc_56F6E6:
	mov(mv, x86::mem(ts->esi + 0x14, 1), 0x0);

loc_56F6EA:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x14, 1), 0x3);
	pop(mv, &ts->esp, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_56F712;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x58, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_56F70E;
    }
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x10, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56F70E;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x3F800000);
	game::sub_56EAB0(ts, mv);

loc_56F70E:
	mov(mv, x86::mem(ts->esi + 0x14, 1), 0x0);

loc_56F712:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_56F720(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x89E7B0, 4));
	mov(mv, &ts->edx, x86::mem(0x890118, 4));
	sub(&ts->esp, 0x18);
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ecx, 4));
	if (ts->eflags.zero) {
        goto loc_56F7BE;
    }
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_56F7BE;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->edx, 4), 0x4);
	if (!ts->eflags.zero) {
        goto loc_56F7BE;
    }
	mov(mv, &ts->eax, x86::mem(0x89E7C8, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(0x89E7CC, 4));
	add(&ts->eax, ts->ebx);
	add(mv, &ts->eax, x86::mem(0x89E7C4, 4));
	add(mv, &ts->eax, x86::mem(0x89E7C0, 4));
	cmp(&ts->eflags, ts->eax, 0x1);
	pop(mv, &ts->esp, ts->ebx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_56F7BE;
    }
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DB6C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_56F7BC;
    }
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DB68, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_56F7BE;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0xA, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_56F7BE;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x430, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DB64, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_56F7BE;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x3F800000);
	push(mv, &ts->esp, 0x18);
	game::sub_56ED10(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x890118, 4));
	goto loc_56F7BE;

loc_56F7BC:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));

loc_56F7BE:
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DB6C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_56F849;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_56F7E4;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	movsx(mv, &ts->edx, x86::mem(ts->ecx + 0xA, 1));
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->edx);

loc_56F7E4:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	cmp(&ts->eflags, ts->ecx, 0x1);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_56F849;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->dl, x86::mem(ts->eax + 0xA, 1));
	movsx(&ts->eax, ts->dl);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x20);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x1F);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x1E);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x1D);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x1C);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_56F849;
    }
	cmp(&ts->eflags, ts->dl, 0x5);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_56F849;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + (ts->eax*4) + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->edx + (ts->ecx*4), 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_56F849;
    }
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x10, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56F849;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x3F800000);
	game::sub_56EAB0(ts, mv);

loc_56F849:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x430, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DB80, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_56F891;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x4DC, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DB84, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_56F891;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x90, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_56F891;
    }
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x10, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56F891;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x4DC, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	game::sub_56EAB0(ts, mv);

loc_56F891:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x42C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DB74, 4));
	fchs(&ts->fp, x86::fp_index(0));
	fcompp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_56F8C8;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x94, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_56F8C8;
    }
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x10, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56F8C8;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x3F800000);
	game::sub_56EAB0(ts, mv);

loc_56F8C8:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DC18, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_56F909;
    }
	cmp(&ts->eflags, ts->eax, 0x7FFFFFFF);
	if (ts->eflags.zero) {
        goto loc_56F909;
    }
	mov(&ts->ecx, 0x89CF48);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	game::sub_5F00F0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	mov(&ts->eax, 0x8651AC);
	if (!ts->eflags.zero) {
        goto loc_56F8F6;
    }
	mov(&ts->eax, 0x86518C);

loc_56F8F6:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	sub(mv, &ts->ecx, x86::mem(ts->esi + 0x2C, 4));
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->ecx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));

loc_56F909:
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DB24, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_56F94D;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x30, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DB70, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_56F94D;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x94, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_56F94D;
    }
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x10, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56F94D;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_56F946;
    }
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_56F94D;
    }

loc_56F946:
	push(mv, &ts->esp, 0x1);
	game::sub_56D5C0(ts, mv);

loc_56F94D:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x18);
	retn(mv, &ts->esp);
}

void sub_56F960(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xB);
	add(&ts->eax, 0x8E0);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x88F298);
	game::sub_5D9BF0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_56F9A9;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x1A, 2), 0x0);
	if (!ts->eflags.zero) {
        goto loc_56F9A9;
    }
	mov(mv, x86::mem(ts->eax + 0x1A, 2), 0x1);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x50, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_56F9A9;
    }
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x10, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56F9A9;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x3F800000);
	game::sub_56EAB0(ts, mv);

loc_56F9A9:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_56F9B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ebx, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ebx, 4));
	xor_(&ts->esi, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->eax, 4));
	xor_(&ts->ebp, ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->esi);

loc_56F9C3:
	mov(mv, &ts->al, x86::mem(ts->edi + (ts->esi) + 0x408, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56F9CF;
    }
	inc(&ts->ebp);

loc_56F9CF:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	game::sub_5ED470(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_56F9E9;
    }
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	game::sub_5ED470(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x3);
	if (!ts->eflags.zero) {
        goto loc_56F9ED;
    }

loc_56F9E9:
	inc(mv, x86::mem(ts->esp + 0x10, 4));

loc_56F9ED:
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, 0x4);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_56F9C3;
    }
	cmp(&ts->eflags, ts->ebp, 0x2);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_56FA18;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x84, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_56FA18;
    }
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x10, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56FA18;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x3F800000);
	game::sub_56EAB0(ts, mv);

loc_56FA18:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_56FA54;
    }
	mov(&ts->ecx, ts->edi);
	game::sub_5ED290(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_56FA54;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x98, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_56FA54;
    }
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x10, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56FA54;
    }
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784D28, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_56EAB0(ts, mv);

loc_56FA54:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_56FA60(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->eax, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0x424, 4), 0x4);
	if (!ts->eflags.zero) {
        goto loc_56FB10;
    }
	game::sub_56CFD0(ts, mv);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DB20, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_56FB10;
    }
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x1C, 1));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x42C, 4));
	movsx(&ts->eax, ts->cl);
	sub(&ts->eax, 0x0);
	if (ts->eflags.zero) {
        goto loc_56FAF6;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto loc_56FAB6;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x430, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DB7C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_56FAE2;
    }
	mov(mv, x86::mem(ts->esi + 0x1C, 1), 0x0);

loc_56FAB6:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));

loc_56FAB8:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x1C, 1), 0x2);
	if (!ts->eflags.zero) {
        goto loc_56FADF;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x64, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_56FADB;
    }
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x10, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56FADB;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x3F800000);
	game::sub_56EAB0(ts, mv);

loc_56FADB:
	mov(mv, x86::mem(ts->esi + 0x1C, 1), 0x0);

loc_56FADF:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_56FAE2:
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DB7C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_56FAB8;
    }
	inc(&ts->cl);
	mov(mv, x86::mem(ts->esi + 0x1C, 1), ts->cl);
	goto loc_56FAB8;

loc_56FAF6:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DB78, 4));
	fchs(&ts->fp, x86::fp_index(0));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fcompp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.parity) {
        goto loc_56FAB8;
    }
	inc(&ts->cl);
	mov(mv, x86::mem(ts->esi + 0x1C, 1), ts->cl);
	goto loc_56FAB8;

loc_56FB10:
	mov(mv, x86::mem(ts->esi + 0x1C, 1), 0x0);
	goto loc_56FAB8;
}

void sub_56FB20(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x60, 4));
	mov(&ts->esi, ts->ecx);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DB2C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_56FC8A;
    }
	mov(mv, &ts->eax, x86::mem(0x86518C, 4));
	sub(mv, &ts->eax, x86::mem(ts->edi + 0x8, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DB20, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.zero) {
        goto loc_56FC8A;
    }
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->edi);
	game::sub_5A0160(ts, mv);
	xor_(&ts->ebx, ts->ebx);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_56FBA2;
    }
	mov(&ts->ecx, ts->edi);
	game::sub_592C60(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_56FBA2;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x424, 4), ts->ebx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_56FBA2;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xB8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7850F0, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.zero) {
        goto loc_56FC89;
    }

loc_56FBA2:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x60, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DB1C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_56FBBB;
    }
	mov(mv, x86::mem(ts->esi + 0x9, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0xA, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x8, 1), ts->bl);

loc_56FBBB:
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x38, 1), ts->bl);
	game::sub_592C60(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56FC5F;
    }
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_592C90(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x4, 4));
	mov(&ts->eax, 0x3);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_56FBFD;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x14, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->edx + 0x4, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_56FC44;
    }

loc_56FBFD:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x60, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DB28, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_56FC21;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x3F800000);
	goto loc_56FC25;

loc_56FC21:
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));

loc_56FC25:
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	game::sub_5EE250(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_56FC40;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x10);
	game::sub_56ED10(ts, mv);

loc_56FC40:
	mov(mv, x86::mem(ts->esi + 0x38, 1), 0x1);

loc_56FC44:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x54, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_56FC5A;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x10, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_56FC5A;
    }
	mov(mv, x86::mem(ts->eax + 0x1C, 4), 0x3F800000);

loc_56FC5A:
	mov(mv, x86::mem(ts->esi + 0x34, 4), ts->ebx);
	goto loc_56FC66;

loc_56FC5F:
	mov(mv, x86::mem(ts->esi + 0x34, 4), 0x3);

loc_56FC66:
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F00F0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	mov(&ts->eax, 0x8651AC);
	if (!ts->eflags.zero) {
        goto loc_56FC7E;
    }
	mov(&ts->eax, 0x86518C);

loc_56FC7E:
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	mov(mv, x86::mem(ts->esi + 0x2C, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x60, 4));
	mov(mv, x86::mem(ts->esi + 0x30, 4), ts->eax);

loc_56FC89:
	pop(mv, &ts->esp, ts->ebx);

loc_56FC8A:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x4);
}

void sub_56FCE0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	xor_(&ts->esi, ts->esi);

loc_56FCE6:
	mov(mv, &ts->eax, x86::mem(ts->edi + (ts->esi*4), 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_56FCFC;
    }
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(0x864628, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43F920(ts, mv);
	add(&ts->esp, 0x8);

loc_56FCFC:
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, 0x27);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_56FCE6;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_56FD10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x778788);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(&ts->ecx, 0x89CF48);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	game::sub_5F00F0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56FD49;
    }
	mov(mv, &ts->eax, x86::mem(0x865198, 4));
	mov(mv, x86::mem(ts->esp + 0x34, 4), ts->eax);

loc_56FD49:
	mov(mv, &ts->eax, x86::mem(0x864620, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_56FD5F;
    }
	game::nullsub_1(ts, mv);
	mov(mv, x86::mem(0x864620, 4), ts->ebx);

loc_56FD5F:
	lea(mv, &ts->esi, x86::mem(ts->esp + 0x18, 4));
	lea(mv, &ts->ebp, x86::mem(ts->esp + 0x18, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebp);
	mov(mv, x86::mem(ts->edi + 0x9C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->ebx);
	xor_(&ts->edi, ts->edi);
	goto loc_56FD80;

loc_56FD80:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + (ts->edi*4), 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_56FDE5;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x10, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_56FDE5;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x14, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_56FDA1;
    }
	cmp(&ts->eflags, ts->ecx, 0x2);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_56FDC0;
    }
	cmp(&ts->eflags, ts->ecx, 0x4);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_56FDC0;
    }

loc_56FDA1:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x30, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto loc_56FDC0;
    }
	mov(mv, x86::mem(ts->ebp, 4), ts->eax);
	mov(&ts->ecx, ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->edx);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x18, 4));

loc_56FDC0:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x18, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_56FDE5;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x2C, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x9C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x9C, 4));

loc_56FDE5:
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, 0x27);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_56FD80;
    }
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_56FE5E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x30, 4));
	game::sub_5EE3A0(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_56FE3C;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x9A4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_4DA6F0(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F00F0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56FE3C;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x9C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x89CF48);
	game::sub_5FEE50(ts, mv);

loc_56FE3C:
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x18, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	cmp(&ts->eflags, ts->esi, ts->edx);
	if (ts->eflags.zero) {
        goto loc_56FE5E;
    }

loc_56FE48:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->esi, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x18, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_56FE48;
    }

loc_56FE5E:
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x34, 4));
	xor_(&ts->edi, ts->edi);

loc_56FE64:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + (ts->edi*4), 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_56FECF;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x10, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_56FECF;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x14, 4));
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.zero) {
        goto loc_56FE81;
    }
	cmp(&ts->eflags, ts->eax, 0x4);
	if (!ts->eflags.zero) {
        goto loc_56FEC5;
    }

loc_56FE81:
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x30, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_56FE8B;
    }
	mov(mv, x86::mem(ts->ecx + 0x30, 1), ts->bl);
	goto loc_56FEC5;

loc_56FE8B:
	cmp(&ts->eflags, ts->eax, 0x2);
	mov(mv, x86::mem(ts->ecx + 0x24, 4), ts->ebx);
	mov(mv, x86::mem(ts->ecx + 0x3C, 4), ts->ebx);
	mov(mv, x86::mem(ts->ecx + 0x38, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_56FEC5;
    }
	cmp(&ts->eflags, ts->eax, 0x3);
	if (!ts->eflags.zero) {
        goto loc_56FEBE;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x20, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x1C, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x8, 4));
	inc(&ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x20, 4), ts->eax);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x18, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_56FEBE;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x1C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x1C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x1C, 4));

loc_56FEBE:
	mov(mv, x86::mem(ts->ecx + 0x14, 4), 0x2);

loc_56FEC5:
	push(mv, &ts->esp, ts->ebp);
	game::sub_56E920(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x18, 4));

loc_56FECF:
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, 0x27);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_56FE64;
    }
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	cmp(&ts->eflags, ts->esi, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_56FF0C;
    }

loc_56FEE5:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(&ts->edx, ts->esi);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(0x864628, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_43F920(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x20, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->esi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_56FEE5;
    }

loc_56FF0C:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x1C);
	retn(mv, &ts->esp, 0x8);

loc_56FCA0:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero) {
        goto loc_56FCCF;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_56FCB0:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(0x864628, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43F920(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_56FCB0;
    }

loc_56FCCF:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_778780:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x14, 4));
	goto loc_56FCA0;

SEH_56FD10:
	mov(&ts->eax, 0x7E3DCC);
	goto ___CxxFrameHandler;
}

void sub_56FF30(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F00F0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_56FF4B;
    }
	mov(mv, &ts->eax, x86::mem(0x890118, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), 0x4);
	if (!ts->eflags.zero) {
        goto loc_56FF94;
    }

loc_56FF4B:
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F00F0(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_56EEE0(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_56F020(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_56F4C0(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_56F620(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_56F170(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_56F720(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_56F960(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_56FA60(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_56F9B0(ts, mv);

loc_56FF94:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_56FFA0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x864F18, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto locret_5701C7;
    }
	push(mv, &ts->esp, 0x865230);
	push(mv, &ts->esp, 0x865230);
	mov(mv, x86::mem(0x865230, 4), 0x0);
	mov(mv, x86::mem(0x865234, 4), 0xBF000000);
	mov(mv, x86::mem(0x865238, 4), 0x3F800000);
	mov(mv, x86::mem(0x86523C, 4), 0xBF000000);
	mov(mv, x86::mem(0x865240, 4), 0x3F800000);
	mov(mv, x86::mem(0x865244, 4), 0x0);
	mov(mv, x86::mem(0x865248, 4), 0xC0200000);
	mov(mv, x86::mem(0x86524C, 4), 0x3FC00000);
	mov(mv, x86::mem(0x865250, 4), 0x0);
	mov(mv, x86::mem(0x865254, 4), 0x3F000000);
	mov(mv, x86::mem(0x865258, 4), 0x40000000);
	mov(mv, x86::mem(0x86525C, 4), 0xBFC00000);
	mov(mv, x86::mem(0x865260, 4), 0x0);
	mov(mv, x86::mem(0x865264, 4), 0x0);
	mov(mv, x86::mem(0x865268, 4), 0xBF000000);
	mov(mv, x86::mem(0x86526C, 4), 0x3F000000);
	mov(mv, x86::mem(0x865270, 4), 0xBF000000);
	mov(mv, x86::mem(0x865274, 4), 0x40000000);
	mov(mv, x86::mem(0x865278, 4), 0xBFC00000);
	mov(mv, x86::mem(0x86527C, 4), 0x0);
	mov(mv, x86::mem(0x865280, 4), 0x0);
	mov(mv, x86::mem(0x865284, 4), 0xC0A00000);
	mov(mv, x86::mem(0x865288, 4), 0x40900000);
	mov(mv, x86::mem(0x86528C, 4), 0x0);
	mov(mv, x86::mem(0x865290, 4), 0x3F000000);
	mov(mv, x86::mem(0x865294, 4), 0x40800000);
	mov(mv, x86::mem(0x865298, 4), 0xC0900000);
	mov(mv, x86::mem(0x86529C, 4), 0x0);
	mov(mv, x86::mem(0x8652A0, 4), 0x0);
	mov(mv, x86::mem(0x8652A4, 4), 0xBF800000);
	mov(mv, x86::mem(0x8652A8, 4), 0x3FC00000);
	mov(mv, x86::mem(0x8652AC, 4), 0x0);
	mov(mv, x86::mem(0x8652B0, 4), 0x40000000);
	mov(mv, x86::mem(0x8652B4, 4), 0xC0400000);
	mov(mv, x86::mem(0x8652B8, 4), 0x0);
	mov(mv, x86::mem(0x8652BC, 4), 0x0);
	mov(mv, x86::mem(0x8652C0, 4), 0xC0A00000);
	mov(mv, x86::mem(0x8652C4, 4), 0x41100000);
	mov(mv, x86::mem(0x8652C8, 4), 0x0);
	mov(mv, x86::mem(0x8652CC, 4), 0x0);
	mov(mv, x86::mem(0x8652D0, 4), 0x40800000);
	mov(mv, x86::mem(0x8652D4, 4), 0xC1100000);
	mov(mv, x86::mem(0x8652D8, 4), 0x0);
	mov(mv, x86::mem(0x8652DC, 4), 0x0);
	mov(mv, x86::mem(0x8652E0, 4), 0xBF800000);
	mov(mv, x86::mem(0x8652E4, 4), 0x40400000);
	mov(mv, x86::mem(0x8652E8, 4), 0x0);
	mov(mv, x86::mem(0x8652EC, 4), 0x0);
	game::sub_43C9D0(ts, mv);
	push(mv, &ts->esp, 0x865270);
	push(mv, &ts->esp, 0x865270);
	game::sub_43C9D0(ts, mv);
	push(mv, &ts->esp, 0x8652B0);
	push(mv, &ts->esp, 0x8652B0);
	game::sub_43C9D0(ts, mv);
	add(&ts->esp, 0x18);
	mov(mv, x86::mem(0x864F18, 4), 0x1);

locret_5701C7:
	retn(mv, &ts->esp);
}

void sub_5701D0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	xor_(&ts->esi, ts->esi);
	cmp(&ts->eflags, ts->ax, ts->si);
	mov(mv, x86::mem(ts->ecx + 0x18, 1), 0x1);
	mov(mv, x86::mem(ts->ecx + 0x1E, 2), ts->ax);
	if (ts->eflags.zero) {
        goto loc_57022E;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x4, 4));
	sub(&ts->edx, ts->esi);
	if (ts->eflags.zero) {
        goto loc_570219;
    }
	dec(&ts->edx);
	if (ts->eflags.zero) {
        goto loc_570203;
    }
	dec(&ts->edx);
	if (!ts->eflags.zero) {
        goto loc_570234;
    }
	mov(mv, x86::mem(ts->ecx + 0x10, 4), 0xCB18967F);
	mov(mv, x86::mem(ts->ecx + 0xC, 4), 0x4B18967F);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_570203:
	movzx(&ts->eax, ts->ax);
	dec(&ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x10, 4), ts->esi);
	pop(mv, &ts->esp, ts->esi);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC, 4));
	retn(mv, &ts->esp, 0x4);

loc_570219:
	movzx(&ts->edx, ts->ax);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x10, 4), ts->esi);
	pop(mv, &ts->esp, ts->esi);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC, 4));
	retn(mv, &ts->esp, 0x4);

loc_57022E:
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->esi);
	mov(mv, x86::mem(ts->ecx + 0x10, 4), ts->esi);

loc_570234:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_570240(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	sub(&ts->esp, 0x28);
	mov(mv, &ts->ax, x86::mem(ts->ecx + 0x1E, 2));
	test(&ts->eflags, ts->ax, ts->ax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_570438;
    }
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x24, 4));
	movzx(&ts->edi, ts->ax);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	sub(&ts->eax, 0x0);
	if (ts->eflags.zero) {
        goto loc_5703A0;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_57032C;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto loc_570438;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, 0xBF800000);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x14, 4));
	push(mv, &ts->esp, ts->edx);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x18, 4));
	push(mv, &ts->esp, ts->esi);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x1C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x34, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC, 4));
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esi - 0x10, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x38, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->ecx);
	game::sub_43D100(ts, mv);
	mov(&ts->ecx, ts->edi);
	shl(&ts->ecx, 0x4);
	lea(mv, &ts->edx, x86::mem(ts->ecx + (ts->esi), 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx - 0x10, 4));
	lea(mv, &ts->ecx, x86::mem(ts->edx - 0x10, 4));
	lea(mv, &ts->eax, x86::mem(ts->edi - 0x2, 4));
	shl(&ts->eax, 0x4);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + (ts->esi), 4));
	add(&ts->eax, ts->esi);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	push(mv, &ts->esp, 0x3F800000);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x3C, 4));
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x40, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(mv, x86::mem(ts->esp + 0x30, 4), ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_43D100(ts, mv);
	add(&ts->esp, 0x20);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_57032C:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, x86::mem(ts->esi - 0x4, 4), ts->edx);
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi - 0xC, 4));
	mov(mv, x86::mem(ts->esi - 0x10, 4), ts->eax);
	shl(&ts->edi, 0x4);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi - 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + (ts->esi) - 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + (ts->esi) - 0xC, 4));
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + (ts->esi) - 0x8, 4));
	lea(mv, &ts->edx, x86::mem(ts->edi + (ts->esi), 4));
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(mv, &ts->eax, x86::mem(ts->edx - 0x10, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x8, 4));
	mov(mv, x86::mem(ts->edx + 0xC, 4), ts->eax);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x14, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_570438;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x1C, 4));
	fchs(&ts->fp, x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi - 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x14, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx - 0x4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_5703A0:
	shl(&ts->edi, 0x4);
	mov(mv, &ts->eax, x86::mem(ts->edi + (ts->esi) - 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + (ts->esi) - 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + (ts->esi) - 0x8, 4));
	lea(mv, &ts->edx, x86::mem(ts->edi + (ts->esi), 4));
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(mv, &ts->eax, x86::mem(ts->edx - 0x10, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi - 0xC, 4));
	mov(mv, x86::mem(ts->esi - 0x10, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi - 0x8, 4));
	mov(mv, x86::mem(ts->esi - 0x4, 4), ts->eax);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x8, 4));
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x8, 4));
	mov(mv, x86::mem(ts->edx + 0xC, 4), ts->eax);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x18, 4));
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x14, 4));
	mov(mv, x86::mem(ts->edx + 0x10, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x18, 4));
	mov(mv, x86::mem(ts->edx + 0x1C, 4), ts->eax);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x14, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_570438;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx - 0x4, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x14, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi - 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x14, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x1C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x14, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x1C, 4));

loc_570438:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_570440(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	sub(&ts->esp, 0x20);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0xC, 4));
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x10, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->edx);
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x28, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0xC, 4));
	shl(&ts->eax, 0x6);
	add(&ts->eax, ts->edx);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x3F800000);
	game::sub_43C9B0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_43C9B0(ts, mv);
	add(&ts->esp, 0x18);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);
}

void sub_5704A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_5704BD;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_43C240(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);

loc_5704BD:
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_5704FC;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7A0354, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_5704E5;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));

loc_5704E5:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_570500;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);

loc_5704FC:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));

loc_570500:
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);
}

void sub_570510(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	sub(&ts->esp, 0x44);
	movzx(mv, &ts->edx, x86::mem(ts->ecx + 0x1E, 2));
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xC, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x24, 4));
	mov(&ts->ecx, ts->eax);
	neg(&ts->ecx);
	mov(&ts->ebx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	shl(&ts->eax, 0x4);
	mov(&ts->ecx, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->esi) + 0x8, 4));
	sub(&ts->ecx, ts->edx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0x4);

loc_570555:
	cmp(&ts->eflags, ts->ebx, 0xFFFFFFFF);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_5705A2;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->ecx);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x10, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x34, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x4, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x14, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x8, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x18, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x1C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);

loc_57058F:
	push(mv, &ts->esp, ts->edi);
	game::sub_43D100(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x2C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	add(&ts->esp, 0x10);
	goto loc_570616;

loc_5705A2:
	cmp(&ts->eflags, ts->ebx, ts->edx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_5705FA;
    }
	mov(&ts->ecx, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->edx - 0x2, 4));
	shl(&ts->ecx, 0x4);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + (ts->esi) - 0x10, 4));
	lea(mv, &ts->ecx, x86::mem(ts->ecx + (ts->esi) - 0x10, 4));
	shl(&ts->eax, 0x4);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + (ts->esi), 4));
	add(&ts->eax, ts->esi);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x24, 4));
	add(&ts->edx, ts->ebx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->edx);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xC, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x44, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x50, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	goto loc_57058F;

loc_5705FA:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax - 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->ecx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax - 0x8, 4));
	mov(mv, x86::mem(ts->edi + 0xC, 4), ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x8, 4));

loc_570616:
	dec(mv, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	add(&ts->eax, 0x10);
	inc(&ts->ebx);
	add(&ts->edi, 0x10);
	dec(&ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_570555;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x8);
}

void sub_570640(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	sub(&ts->esp, 0x44);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x18, 1));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->al, ts->bl);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_57065F;
    }
	game::sub_570240(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x18, 1), ts->bl);

loc_57065F:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x1E, 2), ts->bx);
	if (!ts->eflags.zero) {
        goto loc_57067C;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0xC);

loc_57067C:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_5704A0(ts, mv);
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fcom(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_5706A5;
    }
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));

loc_5706A5:
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	game::__ftol2(ts, mv);
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fsub(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(&ts->edi, ts->eax);
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x4, 4), 0x2);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	if (!ts->eflags.zero) {
        goto loc_5706FC;
    }
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5706CB;
    }
	movzx(mv, &ts->ecx, x86::mem(ts->esi + 0x1E, 2));
	dec(&ts->ecx);
	cmp(&ts->eflags, ts->edi, ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5706FC;
    }

loc_5706CB:
	push(mv, &ts->esp, 0x502FD0);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, 0x10);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_401650(ts, mv);
	dec(&ts->edi);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_570510(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	goto loc_570710;

loc_5706FC:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x24, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x10, 4));
	shl(&ts->edi, 0x4);
	lea(mv, &ts->edx, x86::mem(ts->edi + (ts->ecx) - 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);

loc_570710:
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x8, 4));
	mov(&ts->ecx, ts->esi);
	push(mv, &ts->esp, ts->edi);
	game::sub_570440(ts, mv);
	mov(&ts->eax, ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0xC);
}

void sub_570730(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x24, 4));
	mov(&ts->eax, ts->ebx);
	shl(&ts->eax, 0x4);
	add(&ts->eax, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ebp, ts->ebx);
	game::sub_43CE10(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	movzx(mv, &ts->edx, x86::mem(ts->edi + 0x1E, 2));
	lea(mv, &ts->esi, x86::mem(ts->ebx + 0x1, 4));
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->esi, ts->edx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_5707A8;
    }
	mov(&ts->ebx, ts->esi);
	shl(&ts->ebx, 0x4);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_570770:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x24, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	add(&ts->eax, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_43CE10(ts, mv);
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	add(&ts->esp, 0x8);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (ts->eflags.zero) {
        goto loc_5707A2;
    }
	movzx(mv, &ts->edx, x86::mem(ts->edi + 0x1E, 2));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	mov(&ts->ebp, ts->esi);
	inc(&ts->esi);
	add(&ts->ebx, 0x10);
	cmp(&ts->eflags, ts->esi, ts->edx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_570770;
    }
	goto loc_5707A4;

loc_5707A2:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));

loc_5707A4:
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x1C, 4));

loc_5707A8:
	lea(mv, &ts->esi, x86::mem(ts->ebx - 0x1, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5707EC;
    }
	mov(&ts->ebx, ts->esi);
	shl(&ts->ebx, 0x4);

loc_5707B4:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x24, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	add(&ts->eax, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_43CE10(ts, mv);
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	add(&ts->esp, 0x8);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (ts->eflags.zero) {
        goto loc_5707EA;
    }
	mov(&ts->ebp, ts->esi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	dec(&ts->esi);
	sub(&ts->ebx, 0x10);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_5707B4;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->eax, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x8);

loc_5707EA:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));

loc_5707EC:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->eax, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x8);
}

void sub_570800(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	sub(&ts->esp, 0x34);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x18, 1));
	xor_(&ts->bl, ts->bl);
	cmp(&ts->eflags, ts->al, ts->bl);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_57081F;
    }
	game::sub_570240(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x18, 1), ts->bl);

loc_57081F:
	movzx(mv, &ts->edx, x86::mem(ts->esi + 0x1E, 2));
	add(&ts->edx, 0x3);
	cmp(&ts->eflags, ts->edx, 0x3);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_570834;
    }
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_570834:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	lea(mv, &ts->eax, x86::mem(ts->edx - 0x2, 4));
	cmp(&ts->eflags, ts->eax, 0x4);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ecx);
	mov(&ts->edi, 0x2);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5709BD;
    }
	mov(&ts->esi, 0x5);
	add(&ts->ecx, 0x14);

loc_570854:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx - 0x14, 4));
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx - 0x4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx - 0x10, 4));
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx - 0xC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx - 0x4, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x10, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x14, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	faddp(&ts->fp, x86::fp_index(2), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	faddp(&ts->fp, x86::fp_index(2), x86::fp_index(0));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_5708B7;
    }
	mov(&ts->bl, 0x1);

loc_5708B7:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x1C, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x20, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x10, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x24, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x14, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	faddp(&ts->fp, x86::fp_index(2), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	faddp(&ts->fp, x86::fp_index(2), x86::fp_index(0));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_570910;
    }
	mov(&ts->bl, 0x1);

loc_570910:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x2C, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x1C, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x30, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x20, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x34, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x24, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	faddp(&ts->fp, x86::fp_index(2), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	faddp(&ts->fp, x86::fp_index(2), x86::fp_index(0));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_570969;
    }
	mov(&ts->bl, 0x1);

loc_570969:
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x3C, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x2C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x40, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x44, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x34, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	test(&ts->eflags, ts->ah, 0x5);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	if (ts->eflags.parity) {
        goto loc_5709A8;
    }
	mov(&ts->bl, 0x1);

loc_5709A8:
	add(&ts->esi, 0x4);
	add(&ts->edi, 0x4);
	add(&ts->ecx, 0x40);
	cmp(&ts->eflags, ts->esi, ts->edx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_570854;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));

loc_5709BD:
	cmp(&ts->eflags, ts->edi, ts->edx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_570A1B;
    }
	mov(&ts->eax, ts->edi);
	shl(&ts->eax, 0x4);
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->ecx) - 0xC, 4));
	sub(&ts->edx, ts->edi);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_5709D0:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx - 0x14, 4));
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx - 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx - 0x10, 4));
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx - 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx - 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x10, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x14, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fnstsw(&ts->fp, ts->ax);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	test(&ts->eflags, ts->ah, 0x5);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	if (ts->eflags.parity) {
        goto loc_570A15;
    }
	mov(&ts->bl, 0x1);

loc_570A15:
	add(&ts->ecx, 0x10);
	dec(&ts->edx);
	if (!ts->eflags.zero) {
        goto loc_5709D0;
    }

loc_570A1B:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->al, ts->bl);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_570A30(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x864F24, 4));
	retn(mv, &ts->esp);
}

void sub_570A40(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x864F24, 4));
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.zero) {
        goto loc_570A57;
    }
	cmp(&ts->eflags, ts->eax, 0x4);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_570A54;
    }
	cmp(&ts->eflags, ts->eax, 0x9);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_570A57;
    }

loc_570A54:
	xor_(&ts->al, ts->al);
	retn(mv, &ts->esp);

loc_570A57:
	mov(&ts->al, 0x1);
	retn(mv, &ts->esp);
}

void std__codecvt_base__do_always_noconv_void_(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->al, 0x1);
	retn(mv, &ts->esp);
}

void sub_570A70(x86::thread_state* ts, x86::memory_view* mv) {
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp, 0x14);
}

void sub_570A80(x86::thread_state* ts, x86::memory_view* mv) {
	xor_(&ts->eax, ts->eax);
	xor_(&ts->edx, ts->edx);
	retn(mv, &ts->esp, 0x4);
}

void sub_570A90(x86::thread_state* ts, x86::memory_view* mv) {
	xor_(&ts->eax, ts->eax);
	xor_(&ts->edx, ts->edx);
	retn(mv, &ts->esp);
}

void sub_570AA0(x86::thread_state* ts, x86::memory_view* mv) {
	lea(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	retn(mv, &ts->esp);
}

void sub_570AB0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x44, 1), 0x0);
	retn(mv, &ts->esp);
}

void sub_570AC0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(0x864F78, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_43F920(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_570AE0(x86::thread_state* ts, x86::memory_view* mv) {
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(&ts->edx, 0x2);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_570AFD;
    }
	mov(mv, x86::mem(ts->ecx + 0x2C, 2), ts->dx);

loc_570AFD:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x38, 4));
	mov(mv, x86::mem(ts->ecx + 0x30, 4), ts->eax);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_570B16;
    }
	mov(mv, x86::mem(ts->ecx + 0x5C, 2), ts->dx);

loc_570B16:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x68, 4));
	mov(mv, x86::mem(ts->ecx + 0x60, 4), ts->eax);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto locret_570B32;
    }
	mov(mv, x86::mem(ts->ecx + 0x8C, 2), ts->dx);

locret_570B32:
	retn(mv, &ts->esp, 0xC);
}

void sub_570B40(x86::thread_state* ts, x86::memory_view* mv) {
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC, 4));
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(&ts->edx, 0x2);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_570B5E;
    }
	mov(mv, x86::mem(ts->ecx + 0x2C, 2), ts->dx);

loc_570B5E:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x3C, 4));
	mov(mv, x86::mem(ts->ecx + 0x34, 4), ts->eax);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_570B77;
    }
	mov(mv, x86::mem(ts->ecx + 0x5C, 2), ts->dx);

loc_570B77:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x6C, 4));
	mov(mv, x86::mem(ts->ecx + 0x64, 4), ts->eax);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto locret_570B93;
    }
	mov(mv, x86::mem(ts->ecx + 0x8C, 2), ts->dx);

locret_570B93:
	retn(mv, &ts->esp, 0xC);
}

void sub_570BA0(x86::thread_state* ts, x86::memory_view* mv) {
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->eax);
	mov(&ts->edx, 0x2);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_570BBD;
    }
	mov(mv, x86::mem(ts->ecx + 0x2C, 2), ts->dx);

loc_570BBD:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x30, 4));
	mov(mv, x86::mem(ts->ecx + 0x38, 4), ts->eax);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_570BD6;
    }
	mov(mv, x86::mem(ts->ecx + 0x5C, 2), ts->dx);

loc_570BD6:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x60, 4));
	mov(mv, x86::mem(ts->ecx + 0x68, 4), ts->eax);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto locret_570BF2;
    }
	mov(mv, x86::mem(ts->ecx + 0x8C, 2), ts->dx);

locret_570BF2:
	retn(mv, &ts->esp, 0xC);
}

void sub_570C00(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0xC);
	game::sub_5B7680(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_5B7680(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(0x864F48, 4));
	mov(mv, &ts->ecx, x86::mem(0x864F44, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_43BE20(ts, mv);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	add(&ts->esp, 0x8);
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784358, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_570C47;
    }
	mov(mv, x86::mem(ts->esp, 4), 0x3DCCCCCD);

loc_570C47:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784550, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784358, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_570C78;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784550, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));

loc_570C78:
	mov(mv, &ts->edx, x86::mem(0x8665B8, 4));
	mov(mv, &ts->eax, x86::mem(0x7FB708, 4));
	xor_(&ts->edx, ts->eax);
	test(&ts->eflags, ts->dl, 0x8);
	if (ts->eflags.zero) {
        goto loc_570CB4;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x864F40, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(0x8665B8, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp, 4));
	mov(mv, x86::mem(0x864F34, 4), ts->eax);
	mov(mv, x86::mem(0x864F38, 4), ts->ecx);
	mov(mv, x86::mem(0x864F3C, 4), ts->edx);
	goto loc_570CB6;

loc_570CB4:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));

loc_570CB6:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x864F40, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (ts->eflags.parity) {
        goto loc_570CD5;
    }
	mov(mv, &ts->eax, x86::mem(0x864F3C, 4));
	mov(mv, x86::mem(0x865350, 4), ts->eax);
	goto loc_570CFC;

loc_570CD5:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x864F3C, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x864F40, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_570CF0;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x864F3C, 4));
	goto loc_570CF6;

loc_570CF0:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x864F40, 4));

loc_570CF6:
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865350, 4));

loc_570CFC:
	mov(mv, &ts->eax, x86::mem(0x890080, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_570D4A;
    }
	mov(mv, &ts->ecx, x86::mem(0x8650A0, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_570D64;
    }
	mov(mv, &ts->ecx, x86::mem(0x82A3A4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_570D4A;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	push(mv, &ts->esp, ts->esi);
	xor_(&ts->esi, ts->esi);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_570D49;
    }
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, 0x1C);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_570D30:
	mov(mv, &ts->ecx, x86::mem(ts->edi + (ts->eax), 4));
	game::sub_5F49B0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x890080, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	inc(&ts->esi);
	add(&ts->edi, 0x4);
	cmp(&ts->eflags, ts->esi, ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_570D30;
    }
	pop(mv, &ts->esp, ts->edi);

loc_570D49:
	pop(mv, &ts->esp, ts->esi);

loc_570D4A:
	mov(mv, &ts->eax, x86::mem(0x8650A0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_570D64;
    }
	mov(mv, &ts->eax, x86::mem(0x82A3A4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_570D64;
    }
	add(&ts->esp, 0xC);
	goto sub_57A510;

loc_570D64:
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);
}

void sub_570D70(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_570D82;
    }
	mov(&ts->eax, 0x1);
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp);

loc_570D82:
	push(mv, &ts->esp, ts->eax);
	game::sub_43C100(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_570D9A;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, ts->eax);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp);

loc_570D9A:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, 0x7FA858);

loc_570DA0:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, ts->eax);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_570DBA;
    }
	add(&ts->esi, 0x4);
	cmp(&ts->eflags, ts->esi, 0x7FA8E8);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_570DA0;
    }
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp);

loc_570DBA:
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->eax, 0x1);
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp);
}

void sub_570DD0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0xA);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_570DE3;
    }
	game::sub_43BD50(ts, mv);

loc_570DE3:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xC, 4));
	add(&ts->eax, ts->esi);
	cmp(&ts->eflags, ts->esi, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	if (!ts->eflags.carry) {
        goto loc_570EF0;
    }
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->edi);
	goto loc_570E10;

loc_570E0B:
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x18, 4));
	nop();

loc_570E10:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_570E6C;
    }
	mov(&ts->eax, ts->esi);
	sub(&ts->eax, ts->ebp);
	and_(&ts->eax, 0x7F);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_570E33;
    }
	cmp(&ts->eflags, ts->eax, 0x8);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_570E33;
    }
	add(&ts->eax, 0x80);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->eax);

loc_570E33:
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_570E6A;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_570E6A;
    }
	add(&ts->eax, 0xFFFFFFF8);
	mov(&ts->ecx, ts->eax);
	mov(&ts->edx, ts->ecx);
	mov(mv, x86::mem(ts->ebx + (ts->ebp) + 0x4, 4), ts->eax);
	shr(&ts->ecx, 0x2);
	mov(mv, x86::mem(ts->ebx + (ts->ebp), 4), 0x0);
	mov(&ts->eax, 0x11111111);
	lea(mv, &ts->edi, x86::mem(ts->ebx + (ts->ebp) + 0x8, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(&ts->ecx, ts->edx);
	and_(&ts->ecx, 0x3);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));

loc_570E6A:
	add(&ts->ebp, ts->eax);

loc_570E6C:
	cmp(mv, &ts->eflags, x86::mem(ts->esi, 4), 0x0);
	if (!ts->eflags.sign) {
        goto loc_570EA8;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x28, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->edi, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_570DD0(ts, mv);
	add(&ts->esp, 0x18);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_570ED2;
    }
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_570EA4;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	mov(&ts->edx, ts->eax);
	sub(&ts->edx, ts->ebp);
	sub(&ts->edx, 0x8);
	mov(mv, x86::mem(ts->ebx + (ts->ebp), 4), ts->ecx);
	mov(mv, x86::mem(ts->ebx + (ts->ebp) + 0x4, 4), ts->edx);

loc_570EA4:
	mov(&ts->ebp, ts->eax);
	goto loc_570ED2;

loc_570EA8:
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_570ED2;
    }
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_570ECB;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	add(&ts->ecx, 0x8);
	mov(&ts->eax, ts->ecx);
	shr(&ts->ecx, 0x2);
	lea(mv, &ts->edi, x86::mem(ts->ebx + (ts->ebp), 4));
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->eax);
	and_(&ts->ecx, 0x3);
	movs(mv, x86::mem(ts->edi, 1), x86::mem(ts->esi, 1));
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x18, 4));

loc_570ECB:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->ebp, x86::mem(ts->ecx + (ts->ebp) + 0x8, 4));

loc_570ED2:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	lea(mv, &ts->esi, x86::mem(ts->esi + (ts->edx) + 0x8, 4));
	cmp(&ts->eflags, ts->esi, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->esi);
	if (ts->eflags.carry) {
        goto loc_570E0B;
    }
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_570EF0:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_570F00(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xC, 4));
	lea(mv, &ts->ebx, x86::mem(ts->esi + (ts->eax), 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (!ts->eflags.carry) {
        goto loc_570F3F;
    }
	push(mv, &ts->esp, ts->edi);

loc_570F12:
	cmp(mv, &ts->eflags, x86::mem(ts->esi, 4), 0x0);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->edi, x86::mem(ts->eax + (ts->esi) + 0x8, 4));
	if (!ts->eflags.sign) {
        goto loc_570F32;
    }
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_570F00(ts, mv);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->esi + 0x4, 4), 0x0);

loc_570F32:
	cmp(&ts->eflags, ts->edi, ts->ebx);
	mov(mv, x86::mem(ts->esi, 4), 0x0);
	mov(&ts->esi, ts->edi);
	if (ts->eflags.carry) {
        goto loc_570F12;
    }
	pop(mv, &ts->esp, ts->edi);

loc_570F3F:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_570F50(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(0x864F74, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto locret_570F76;
    }
	game::sub_43BDF0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x82DAB4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_570F71;
    }
	game::nullsub_1(ts, mv);
	game::sub_4908F0(ts, mv);

loc_570F71:
	goto sub_4887C0;

locret_570F76:
	retn(mv, &ts->esp);
}

void sub_570F80(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7A0390);
	push(mv, &ts->esp, 0x50);
	push(mv, &ts->esp, 0xF0);
	game::sub_440DF0(ts, mv);
	add(&ts->esp, 0x10);
	mov(mv, x86::mem(0x864F78, 4), ts->eax);
	retn(mv, &ts->esp);
}

void sub_570FA0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	lea(mv, &ts->edx, x86::mem(ts->ecx + 0x94, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->ecx + 0xC4, 4), ts->eax);
	xor_(&ts->eax, ts->eax);
	mov(&ts->edi, ts->edx);
	mov(&ts->ecx, 0xC);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, 0x2F);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_43DC00(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp, 0x8);
}

void sub_570FD0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xDC, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_571007;
    }
	test(mv, &ts->eflags, x86::mem(ts->esi + 0x10, 1), 0x2);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC4, 4));
	if (ts->eflags.zero) {
        goto loc_570FEC;
    }
	or_(&ts->eax, 0x8);

loc_570FEC:
	mov(mv, &ts->dl, x86::mem(ts->esp + 0x8, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.zero) {
        goto loc_570FF7;
    }
	or_(&ts->eax, 0x8);

loc_570FF7:
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->esi + 0xD8, 4), ts->eax);

loc_571007:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_571010(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(ts->esp + 0x4, 1));
	mov(mv, x86::mem(ts->ecx + 0x8, 1), ts->al);
	retn(mv, &ts->esp, 0x4);
}

void sub_571020(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x8, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_571047;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xD8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_571047;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0xD8, 4), 0x0);

loc_571047:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_571050(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	dec(mv, x86::mem(ts->eax + 0xC8, 4));
	retn(mv, &ts->esp);
}

void sub_571060(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(0x864F54, 4));
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->ecx, ts->ecx);
	setz(ts->eflags, &ts->al);
	retn(mv, &ts->esp);
}

void sub_571070(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(0x864F58, 4), ts->eax);
	mov(mv, x86::mem(0x864F5C, 4), ts->ecx);
	retn(mv, &ts->esp);
}

void sub_571090(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(0x864F7C, 4));
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->ecx, ts->ecx);
	setnz(ts->eflags, &ts->al);
	retn(mv, &ts->esp);
}

void sub_5710A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x30, 4));
	push(mv, &ts->esp, ts->esi);
	xor_(&ts->esi, ts->esi);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_5710D4;
    }
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->ebx + 0x34, 4));

loc_5710B1:
	movzx(mv, &ts->eax, x86::mem(ts->edi, 2));
	push(mv, &ts->esp, ts->eax);
	game::sub_5D6430(ts, mv);
	and_(mv, x86::mem(ts->eax + 0x4, 1), 0xEF);
	add(&ts->esp, 0x4);
	mov(&ts->ecx, ts->eax);
	game::sub_5DB0E0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x30, 4));
	inc(&ts->esi);
	add(&ts->edi, 0x2);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5710B1;
    }
	pop(mv, &ts->esp, ts->edi);

loc_5710D4:
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->ebx + 0x2C, 4), 0x1);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_5710E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x30, 4));
	push(mv, &ts->esp, ts->esi);
	xor_(&ts->esi, ts->esi);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_57111E;
    }
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->ebx + 0x34, 4));

loc_5710F1:
	movzx(mv, &ts->eax, x86::mem(ts->edi, 2));
	push(mv, &ts->esp, ts->eax);
	game::sub_5D6430(ts, mv);
	or_(mv, x86::mem(ts->eax + 0x4, 1), 0x10);
	add(&ts->esp, 0x4);
	mov(&ts->ecx, ts->eax);
	game::sub_5DB0E0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x30, 4));
	inc(&ts->esi);
	add(&ts->edi, 0x2);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5710F1;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->ebx + 0x2C, 4), 0x0);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_57111E:
	mov(mv, x86::mem(ts->ebx + 0x2C, 4), ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_571130(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x864F80, 4), 0x0);
	retn(mv, &ts->esp);
}

void sub_571140(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	goto sub_57DC60;
}

void sub_571150(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	goto sub_57F2D0;
}

void sub_571160(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->esi);
	game::sub_5D7400(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->edi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_571178;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_571178:
	push(mv, &ts->esp, ts->esi);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->esi, ts->eax);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x883E70);
	game::sub_5D7470(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->edi + 0x4, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5711A8;
    }
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x88F768);
	game::sub_5D3C60(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5711A8;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 1), 0x1);

loc_5711A8:
	push(mv, &ts->esp, ts->esi);
	game::sub_5DB340(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_5711BE;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_5710A0(ts, mv);

loc_5711BE:
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_5711D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x88F298);
	game::sub_5D4FE0(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x8);
	mov(&ts->edi, 0x88A28C);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x18, 4));
	xor_(&ts->edi, ts->edi);
	cmp(&ts->eflags, ts->ecx, ts->edi);
	if (ts->eflags.zero) {
        goto loc_5711FD;
    }
	game::sub_5710E0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->edi);

loc_5711FD:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	cmp(&ts->eflags, ts->ecx, ts->edi);
	if (ts->eflags.zero) {
        goto loc_57120C;
    }
	game::sub_5710E0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->edi);

loc_57120C:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	cmp(&ts->eflags, ts->ecx, ts->edi);
	if (ts->eflags.zero) {
        goto loc_57121B;
    }
	game::sub_5710E0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x20, 4), ts->edi);

loc_57121B:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x24, 4));
	cmp(&ts->eflags, ts->ecx, ts->edi);
	if (ts->eflags.zero) {
        goto loc_57122A;
    }
	game::sub_5710E0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->edi);

loc_57122A:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x28, 4));
	cmp(&ts->eflags, ts->ecx, ts->edi);
	if (ts->eflags.zero) {
        goto loc_571239;
    }
	game::sub_5710E0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->edi);

loc_571239:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x2C, 4));
	cmp(&ts->eflags, ts->ecx, ts->edi);
	if (ts->eflags.zero) {
        goto loc_571248;
    }
	game::sub_5710E0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x2C, 4), ts->edi);

loc_571248:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_571250(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F00F0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_571261;
    }
	xor_(&ts->al, ts->al);
	retn(mv, &ts->esp);

loc_571261:
	mov(mv, &ts->eax, x86::mem(0x8900D8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_571275;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), 0x6);
	if (!ts->eflags.zero) {
        goto loc_571275;
    }
	mov(&ts->eax, 0x1);
	retn(mv, &ts->esp);

loc_571275:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);
}

void sub_571280(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x8900D8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_571294;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), 0x7);
	if (!ts->eflags.zero) {
        goto loc_571294;
    }
	mov(&ts->eax, 0x1);
	retn(mv, &ts->esp);

loc_571294:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);
}

void sub_5712A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x864F24, 4));
	cmp(&ts->eflags, ts->eax, 0xC);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_5712AA;
    }
	jmp(x86::mem(0x571320, 4));

loc_5712B1:
	mov(&ts->eax, 0x7A03CC);
	retn(mv, &ts->esp);

loc_5712B7:
	game::sub_4FF970(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5712B1;
    }
	cmp(&ts->eflags, ts->eax, 0x8);
	if (ts->eflags.zero) {
        goto loc_5712CD;
    }
	game::sub_43BD50(ts, mv);

def_5712AA:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_5712CD:
	mov(&ts->eax, 0x7A02B0);
	retn(mv, &ts->esp);

loc_5712D3:
	mov(&ts->eax, 0x7A03C8);
	retn(mv, &ts->esp);

loc_5712D9:
	mov(&ts->eax, 0x7A03C4);
	retn(mv, &ts->esp);

loc_5712DF:
	mov(&ts->eax, 0x7A0214);
	retn(mv, &ts->esp);

loc_5712E5:
	game::sub_4FF970(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x7);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_5712AA;
    }
	jmp(x86::mem(0x571354, 4));

loc_5712F6:
	mov(&ts->eax, 0x79C6F8);
	retn(mv, &ts->esp);

loc_5712FC:
	mov(&ts->eax, 0x7A0258);
	retn(mv, &ts->esp);

loc_571302:
	mov(&ts->eax, 0x7A024C);
	retn(mv, &ts->esp);

loc_571308:
	mov(&ts->eax, 0x7A0240);
	retn(mv, &ts->esp);

loc_57130E:
	mov(&ts->eax, 0x7A03C0);
	retn(mv, &ts->esp);

loc_571314:
	mov(&ts->eax, 0x7A03BC);
	retn(mv, &ts->esp);

loc_57131A:
	mov(&ts->eax, 0x7A03B8);
	retn(mv, &ts->esp);
}

void sub_571380(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x864F24, 4));
	cmp(&ts->eflags, ts->eax, 0xC);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_57138A;
    }
	jmp(x86::mem(0x5713FC, 4));

loc_571391:
	mov(&ts->eax, 0x7A03D8);
	retn(mv, &ts->esp);

loc_571397:
	mov(&ts->eax, 0x7A03D4);
	retn(mv, &ts->esp);

loc_57139D:
	mov(&ts->eax, 0x7A0298);
	retn(mv, &ts->esp);

loc_5713A3:
	mov(&ts->eax, 0x7A0280);
	retn(mv, &ts->esp);

loc_5713A9:
	mov(&ts->eax, 0x7A0224);
	retn(mv, &ts->esp);

loc_5713AF:
	mov(&ts->eax, 0x7A0214);
	retn(mv, &ts->esp);

loc_5713B5:
	game::sub_4FF970(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x7);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_57138A;
    }
	jmp(x86::mem(0x571430, 4));

loc_5713C6:
	mov(&ts->eax, 0x7A026C);
	retn(mv, &ts->esp);

loc_5713CC:
	mov(&ts->eax, 0x79C6F8);
	retn(mv, &ts->esp);

loc_5713D2:
	mov(&ts->eax, 0x7A0258);
	retn(mv, &ts->esp);

loc_5713D8:
	mov(&ts->eax, 0x7A024C);
	retn(mv, &ts->esp);

loc_5713DE:
	mov(&ts->eax, 0x7A0240);
	retn(mv, &ts->esp);

loc_5713E4:
	mov(&ts->eax, 0x7A03C0);
	retn(mv, &ts->esp);

loc_5713EA:
	mov(&ts->eax, 0x7A03D0);
	retn(mv, &ts->esp);

loc_5713F0:
	mov(&ts->eax, 0x7A03B8);
	retn(mv, &ts->esp);

def_57138A:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);
}

void sub_571450(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x64);
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x4, 1), 0x0);
	mov(&ts->ecx, 0x18);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x5, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	push(mv, &ts->esp, 0x2);
	push(mv, &ts->esp, 0x1);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, 0x7A03DC);
	push(mv, &ts->esp, ts->eax);
	game::sub_4400D0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x7C, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_43DBD0(ts, mv);
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->edi);
	add(&ts->esp, 0x64);
	retn(mv, &ts->esp);
}

void sub_5714A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	mov(&ts->esi, ts->ecx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DBD0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x86518C, 4));
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(0x7FB724, 4));
	xor_(&ts->ebx, ts->ebx);
	push(mv, &ts->esp, 0x7A03E4);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x30, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x34, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x3C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x40, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x41, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x42, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x43, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x44, 1), 0xFF);
	mov(mv, x86::mem(ts->esi + 0x46, 1), ts->bl);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_5714F6;
    }
	mov(mv, x86::mem(ts->esi + 0x46, 1), 0x1);

loc_5714F6:
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x48, 2), ts->bx);
	mov(mv, x86::mem(ts->esi + 0x4A, 2), ts->bx);
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1D8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1DC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1E0, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x50, 4), 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_571520(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	or_(&ts->eax, 0xFFFFFFFF);
	xor_(&ts->ecx, ts->ecx);
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto locret_571543;
    }
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edi);

loc_571533:
	movzx(mv, &ts->edi, x86::mem(ts->ecx + (ts->esi), 1));
	imul(&ts->eax, ts->eax, 0x21);
	add(&ts->eax, ts->edi);
	inc(&ts->ecx);
	cmp(&ts->eflags, ts->ecx, ts->edx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_571533;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);

locret_571543:
	retn(mv, &ts->esp, 0xC);
}

void sub_571550(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1DC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1E4, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	lea(mv, &ts->eax, x86::mem(ts->edx + (ts->edi), 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_57159C;
    }
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_571591;
    }
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x10, 4));
	goto loc_571580;

loc_571580:
	mov(mv, &ts->cl, x86::mem(ts->eax + (ts->ebp), 1));
	mov(mv, x86::mem(ts->esi + (ts->edx) + 0x1E8, 1), ts->cl);
	inc(&ts->edx);
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_571580;
    }
	pop(mv, &ts->esp, ts->ebp);

loc_571591:
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x1DC, 4), ts->edx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_57159C:
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x1DC, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);
}

void sub_5715B0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x1E0, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x1DC, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + (ts->eax), 4));
	cmp(&ts->eflags, ts->ecx, ts->edx);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_57162A;
    }
	push(mv, &ts->esp, ts->ebx);
	xor_(&ts->edx, ts->edx);
	xor_(&ts->bl, ts->bl);
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_5715F0;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_5715E0:
	mov(mv, &ts->bl, x86::mem(ts->esi + (ts->ebp) + 0x1E8, 1));
	inc(&ts->esi);
	mov(mv, x86::mem(ts->edx + (ts->edi), 1), ts->bl);
	inc(&ts->edx);
	cmp(&ts->eflags, ts->edx, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5715E0;
    }

loc_5715F0:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	cmp(&ts->eflags, ts->edx, ts->ecx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_571628;
    }
	xor_(&ts->al, ts->al);
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x20, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_57160A;
    }
	movzx(&ts->eax, ts->bl);
	shl(&ts->eax, 0x18);
	sar(&ts->eax, 0x1F);

loc_57160A:
	mov(&ts->bl, ts->al);
	mov(&ts->bh, ts->bl);
	sub(&ts->ecx, ts->edx);
	add(&ts->edi, ts->edx);
	mov(&ts->edx, ts->ecx);
	shr(&ts->ecx, 0x2);
	mov(&ts->eax, ts->ebx);
	shl(&ts->eax, 0x10);
	mov(&ts->ax, ts->bx);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(&ts->ecx, ts->edx);
	and_(&ts->ecx, 0x3);
	stos(mv, x86::mem(ts->edi, 1), ts->al);

loc_571628:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);

loc_57162A:
	mov(mv, x86::mem(ts->ebp + 0x1DC, 4), ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);
}

void sub_571640(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	if (!ts->eflags.zero) {
        goto loc_571652;
    }
	mov(&ts->eax, ts->ecx);

loc_571652:
	mov(mv, &ts->dl, x86::mem(ts->esi + 0x40, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.zero) {
        goto loc_571670;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_571550(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_571670:
	mov(mv, &ts->dl, x86::mem(ts->esi + 0x41, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.zero) {
        goto loc_57168E;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_5715B0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_57168E:
	mov(mv, &ts->dl, x86::mem(ts->esi + 0x42, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.zero) {
        goto loc_5716B9;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_571520(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x2);
	push(mv, &ts->esp, 0x2);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	game::sub_571550(ts, mv);

loc_5716B9:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);
}

void sub_5716C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x40, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5716F2;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x1DC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x1E4, 4));
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->esi, x86::mem(ts->eax + 0x1, 4));
	cmp(&ts->eflags, ts->esi, ts->edx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_5716E8;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->dl, x86::mem(ts->edx, 1));
	mov(mv, x86::mem(ts->eax + (ts->ecx) + 0x1E8, 1), ts->dl);

loc_5716E8:
	mov(mv, x86::mem(ts->ecx + 0x1DC, 4), ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_5716F2:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	game::sub_571640(ts, mv);
	retn(mv, &ts->esp, 0x4);
}

void sub_571710(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x40, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_571750;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x1DC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x1E4, 4));
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->eax + 0x2, 4));
	cmp(&ts->eflags, ts->edi, ts->edx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_571746;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->bl, x86::mem(ts->esi, 1));
	mov(mv, &ts->dl, x86::mem(ts->esi + 0x1, 1));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->eax + (ts->ecx) + 0x1E8, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + (ts->ecx) + 0x1E9, 1), ts->dl);
	pop(mv, &ts->esp, ts->ebx);

loc_571746:
	mov(mv, x86::mem(ts->ecx + 0x1DC, 4), ts->edi);
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp, 0x4);

loc_571750:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x2);
	push(mv, &ts->esp, ts->eax);
	game::sub_571640(ts, mv);
	retn(mv, &ts->esp, 0x4);
}

void sub_571770(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x40, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5717D6;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x1DC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x1E4, 4));
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->eax + 0x4, 4));
	cmp(&ts->eflags, ts->edi, ts->edx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_5717CB;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->bl, x86::mem(ts->esi + 0x2, 1));
	mov(mv, &ts->dl, x86::mem(ts->esi + 0x1, 1));
	mov(mv, x86::mem(ts->esp + 0x14, 1), ts->bl);
	mov(mv, &ts->bl, x86::mem(ts->esi + 0x3, 1));
	mov(mv, x86::mem(ts->esp + 0xF, 1), ts->bl);
	mov(mv, &ts->bl, x86::mem(ts->esi, 1));
	mov(mv, x86::mem(ts->eax + (ts->ecx) + 0x1E9, 1), ts->dl);
	mov(mv, &ts->dl, x86::mem(ts->esp + 0x14, 1));
	mov(mv, x86::mem(ts->eax + (ts->ecx) + 0x1EA, 1), ts->dl);
	mov(mv, &ts->dl, x86::mem(ts->esp + 0xF, 1));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->eax + (ts->ecx) + 0x1E8, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + (ts->ecx) + 0x1EB, 1), ts->dl);
	pop(mv, &ts->esp, ts->ebx);

loc_5717CB:
	mov(mv, x86::mem(ts->ecx + 0x1DC, 4), ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);

loc_5717D6:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_571640(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);
}

void sub_5717F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebx, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->ebx + 0x44, 1));
	push(mv, &ts->esp, ts->esi);
	xor_(&ts->ebp, ts->ebp);
	xor_(&ts->esi, ts->esi);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_571823;
    }
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->ebx + 0x58, 4));

loc_571804:
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_571809;
    }
	inc(&ts->ebp);

loc_571809:
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43DBB0(ts, mv);
	movsx(mv, &ts->ecx, x86::mem(ts->ebx + 0x44, 1));
	add(&ts->esp, 0x4);
	add(&ts->ebp, ts->eax);
	inc(&ts->esi);
	add(&ts->edi, 0x18);
	cmp(&ts->eflags, ts->esi, ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_571804;
    }
	pop(mv, &ts->esp, ts->edi);

loc_571823:
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->eax, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_571830(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x80, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto locret_571844;
    }
	mov(mv, x86::mem(ts->ecx + 0x80, 4), 0x1);

locret_571844:
	retn(mv, &ts->esp);
}

void sub_571850(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0xD8, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->edx, ts->edx);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_57186D;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + (ts->edx*4) + 0xE0, 4), ts->esi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_57186D;
    }
	mov(&ts->eax, ts->edx);

loc_57186D:
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->ecx + 0xD4, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_571892;
    }
	lea(mv, &ts->edx, x86::mem(ts->ecx + (ts->eax*4) + 0xE0, 4));
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_571880:
	cmp(mv, &ts->eflags, x86::mem(ts->edx, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_571899;
    }
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0xD4, 4));
	inc(&ts->eax);
	add(&ts->edx, 0x4);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_571880;
    }

loc_571892:
	pop(mv, &ts->esp, ts->edi);
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_571899:
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->ecx + 0xD8, 4), ts->eax);
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_5718B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x40E4, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_571940;
    }
	mov(mv, &ts->ecx, x86::mem(0x7FB724, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ebx + 0x40E8, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5718F2;
    }
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x40F, 4));
	shl(&ts->eax, 0x4);
	add(&ts->eax, ts->ebx);
	mov(&ts->edi, ts->edi);

loc_5718E0:
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5718EE;
    }
	dec(&ts->esi);
	sub(&ts->eax, 0x10);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_5718E0;
    }
	goto loc_5718F2;

loc_5718EE:
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_5718F4;
    }

loc_5718F2:
	xor_(&ts->esi, ts->esi);

loc_5718F4:
	cmp(&ts->eflags, ts->esi, ts->edx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_57192B;
    }
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x40F, 4));
	shl(&ts->edi, 0x4);
	add(&ts->edi, ts->ebx);

loc_571903:
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_57192B;
    }
	if (!ts->eflags.zero) {
        goto loc_57191D;
    }
	lea(mv, &ts->eax, x86::mem(ts->edi - 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_4A7B30(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x7FB724, 4));
	add(&ts->esp, 0x4);

loc_57191D:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x40E4, 4));
	inc(&ts->esi);
	add(&ts->edi, 0x10);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_571903;
    }

loc_57192B:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x40E4, 4));
	dec(&ts->eax);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_571938;
    }
	mov(&ts->esi, ts->eax);

loc_571938:
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->ebx + 0x40E8, 4), ts->esi);
	pop(mv, &ts->esp, ts->esi);

loc_571940:
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_571950(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x30, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->edx + 0x30, 4));
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->ecx, ts->esi);
	setle(ts->eflags, &ts->al);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_571970(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(&ts->ecx, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_57197F;
    }
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_571981;
    }

loc_57197F:
	xor_(&ts->ecx, ts->ecx);

loc_571981:
	mov(mv, &ts->ecx, x86::mem(0x7FAB40, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_5719B5;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_571996;
    }
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_571998;
    }

loc_571996:
	xor_(&ts->eax, ts->eax);

loc_571998:
	mov(mv, &ts->edx, x86::mem(0x7FAB40, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x7A03F4);
	push(mv, &ts->esp, ts->eax);
	game::sub_4400D0(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp, 0x8);

loc_5719B5:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 1), 0x0);
	retn(mv, &ts->esp, 0x8);
}

void sub_5719C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	xor_(&ts->edx, ts->edx);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_5719F6;
    }
	mov(mv, &ts->cl, x86::mem(ts->esp + 0xC, 1));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x7, 4));

loc_5719D8:
	movzx(mv, &ts->ebp, x86::mem(ts->eax - 0x1, 1));
	cmp(&ts->eflags, ts->ebp, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_5719EA;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 1), ts->cl);
	if (!ts->eflags.zero) {
        goto loc_5719EA;
    }
	mov(mv, x86::mem(ts->eax - 0x3, 2), 0x0);

loc_5719EA:
	mov(mv, &ts->ebp, x86::mem(ts->esi, 4));
	inc(&ts->edx);
	add(&ts->eax, 0xC);
	cmp(&ts->eflags, ts->edx, ts->ebp);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5719D8;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);

loc_5719F6:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_571A00(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	imul(&ts->eax, ts->eax, 0x1C8);
	mov(mv, &ts->al, x86::mem(ts->eax + (ts->ecx) + 0x865658, 1));
	retn(mv, &ts->esp);
}

void sub_571A20(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	game::sub_5726A0(ts, mv);
	mov(mv, &ts->bl, x86::mem(ts->esp + 0x18, 1));
	movzx(&ts->eax, ts->bl);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_50C5D0(ts, mv);
	add(&ts->esp, 0xC);
	mov(mv, x86::mem(ts->esi + 0x864788, 1), ts->bl);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_571A50(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(ts->esp + 0xC, 1));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(ts->ecx + 0x8647A0, 1), ts->al);
	retn(mv, &ts->esp);
}

void sub_571A60(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->dl, x86::mem(ts->ecx + 0x864788, 1));
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->dl, 0xFF);
	setnz(ts->eflags, &ts->al);
	retn(mv, &ts->esp);
}

void sub_571A80(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(0x8650C0, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_571A9D;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->al, x86::mem(ts->eax + 0x8647A0, 1));
	xor_(&ts->edx, ts->edx);
	cmp(&ts->eflags, ts->al, 0xFF);
	setnz(ts->eflags, &ts->dl);
	mov(&ts->eax, ts->edx);
	retn(mv, &ts->esp);

loc_571A9D:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x864788, 1));
	xor_(&ts->edx, ts->edx);
	cmp(&ts->eflags, ts->al, 0xFF);
	setnz(ts->eflags, &ts->dl);
	mov(&ts->eax, ts->edx);
	retn(mv, &ts->esp);
}

void sub_571AC0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->al, x86::mem(ts->eax + 0x864788, 1));
	retn(mv, &ts->esp);
}

void sub_571AD0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	xor_(&ts->esi, ts->esi);
	goto loc_571AE0;

loc_571AE0:
	mov(mv, &ts->eax, x86::mem(0x7FABAC, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DCC0(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_571B03;
    }
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, 0xDF);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_571AE0;
    }
	pop(mv, &ts->esp, ts->edi);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_571B03:
	mov(mv, &ts->eax, x86::mem(0x7FABA8, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_571B10(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->cl, x86::mem(ts->ebx + 0x12, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, 0x1);
	mov(&ts->eax, ts->esi);
	mov(mv, x86::mem(ts->esp + 0xB, 1), ts->cl);
	if (ts->eflags.zero) {
        goto loc_571B48;
    }
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x18, 4));
	movzx(&ts->ecx, ts->cl);
	mov(&ts->edx, ts->ecx);
	shr(&ts->edx, 0x5);
	mov(mv, &ts->esi, x86::mem(ts->esi + (ts->edx*4), 4));
	and_(&ts->ecx, 0x1F);
	shr(&ts->esi, ts->cl);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, &ts->cl, x86::mem(ts->ebx + 0x10, 1));
	xor_(&ts->esi, ts->ecx);
	and_(&ts->esi, ts->eax);

loc_571B48:
	mov(mv, &ts->cl, x86::mem(ts->ebx + 0x13, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_571BC0;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->bl, x86::mem(ts->ebx + 0x11, 1));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	movzx(&ts->edi, ts->cl);
	mov(&ts->edx, ts->edi);
	shr(&ts->edx, 0x5);
	shl(&ts->edx, 0x2);
	mov(mv, &ts->eax, x86::mem(ts->edx + (ts->eax), 4));
	and_(&ts->edi, 0x1F);
	mov(&ts->ecx, ts->edi);
	shr(&ts->eax, ts->cl);
	movzx(&ts->ebp, ts->bl);
	xor_(&ts->eax, ts->ebp);
	and_(&ts->eax, 0x1);
	test(&ts->eflags, ts->bl, ts->bl);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ebp);
	if (ts->eflags.zero) {
        goto loc_571BBE;
    }
	movzx(mv, &ts->ecx, x86::mem(ts->esp + 0x13, 1));
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x24, 4));
	mov(mv, &ts->edx, x86::mem(ts->edx + (ts->ebp), 4));
	mov(&ts->ebx, ts->ecx);
	shr(&ts->ebx, 0x5);
	mov(mv, &ts->ebx, x86::mem(ts->ebp + (ts->ebx*4), 4));
	and_(&ts->ecx, 0x1F);
	shr(&ts->ebx, ts->cl);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	movzx(mv, &ts->ecx, x86::mem(ts->ecx + 0x10, 1));
	xor_(&ts->ebx, ts->ecx);
	mov(&ts->ecx, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));
	shr(&ts->edx, ts->cl);
	and_(&ts->ebx, 0x1);
	xor_(&ts->ebx, ts->esi);
	and_(&ts->esi, ts->ebx);
	xor_(&ts->edx, ts->edi);
	and_(&ts->edx, 0x1);
	xor_(&ts->edx, ts->eax);
	neg(&ts->edx);
	sbb(&ts->edx, ts->edx);
	inc(&ts->edx);
	and_(&ts->eax, ts->edx);

loc_571BBE:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);

loc_571BC0:
	and_(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_571BD0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->al, x86::mem(ts->eax + 0x1B8, 1));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x18, 4));
	movzx(&ts->eax, ts->al);
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_571BF3;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x1C, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_571BF3;
    }
	xor_(&ts->ax, ts->ax);
	retn(mv, &ts->esp);

loc_571BF3:
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x8, 4));
	mov(mv, x86::mem(ts->ecx + 0x18, 4), ts->eax);
	shl(&ts->eax, 0x8);
	mov(mv, x86::mem(ts->ecx + 0x1C, 4), 0x0);
	add(&ts->eax, ts->edx);
	retn(mv, &ts->esp);
}

void sub_571C10(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	game::sub_571B10(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_571C36;
    }
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x14, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_571C36;
    }
	movzx(&ts->eax, ts->cl);

loc_571C36:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x1C, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	pop(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero) {
        goto loc_571C4C;
    }
	mov(mv, x86::mem(ts->ecx + 0x1C, 4), 0x0);
	mov(mv, x86::mem(ts->ecx + 0x18, 4), ts->eax);

loc_571C4C:
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->ecx + 0x18, 4));
	if (ts->eflags.zero) {
        goto loc_571C61;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x18, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_571C61;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x8, 4));
	shl(&ts->eax, 0x8);
	add(&ts->eax, ts->edx);
	retn(mv, &ts->esp);

loc_571C61:
	xor_(&ts->ax, ts->ax);
	retn(mv, &ts->esp);
}

void sub_571C70(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	game::sub_571B10(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_571C96;
    }
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x14, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_571C96;
    }
	movzx(&ts->eax, ts->cl);

loc_571C96:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->ecx + 0x18, 4));
	pop(mv, &ts->esp, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_571CAB;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x1C, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_571CAB;
    }
	xor_(&ts->ax, ts->ax);
	retn(mv, &ts->esp);

loc_571CAB:
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x8, 4));
	mov(mv, x86::mem(ts->ecx + 0x18, 4), ts->eax);
	shl(&ts->eax, 0x8);
	mov(mv, x86::mem(ts->ecx + 0x1C, 4), 0x0);
	add(&ts->eax, ts->edx);
	retn(mv, &ts->esp);
}

void sub_571CC0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x18, 4));
	movzx(mv, &ts->ecx, x86::mem(ts->esi + 0x12, 1));
	mov(&ts->eax, ts->ecx);
	and_(&ts->ecx, 0x1F);
	shr(&ts->eax, 0x5);
	mov(mv, &ts->eax, x86::mem(ts->edx + (ts->eax*4), 4));
	shr(&ts->eax, ts->cl);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x10, 1));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->bl, 0x80);
	xor_(&ts->eax, ts->ecx);
	movzx(mv, &ts->ecx, x86::mem(ts->esi + 0x13, 1));
	mov(&ts->edi, ts->ecx);
	shr(&ts->edi, 0x5);
	mov(mv, &ts->edx, x86::mem(ts->edx + (ts->edi*4), 4));
	and_(&ts->ecx, 0x1F);
	shr(&ts->edx, ts->cl);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x11, 1));
	and_(&ts->eax, 0x1);
	xor_(&ts->edx, ts->ecx);
	and_(&ts->edx, 0x1);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_571D0F;
    }
	test(&ts->eflags, ts->edx, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_571D16;
    }
	xor_(&ts->bl, ts->bl);
	goto loc_571D16;

loc_571D0F:
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_571D16;
    }
	or_(&ts->bl, 0xFF);

loc_571D16:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x18, 4));
	movzx(&ts->eax, ts->bl);
	cmp(&ts->eflags, ts->edx, ts->eax);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_571D32;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x1C, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_571D32;
    }
	xor_(&ts->ax, ts->ax);
	retn(mv, &ts->esp);

loc_571D32:
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x8, 4));
	mov(mv, x86::mem(ts->ecx + 0x18, 4), ts->eax);
	shl(&ts->eax, 0x8);
	mov(mv, x86::mem(ts->ecx + 0x1C, 4), 0x0);
	add(&ts->eax, ts->edx);
	retn(mv, &ts->esp);
}

void sub_571D50(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->al, x86::mem(0x7FDD08, 1));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->cl, x86::mem(0x7FDD09, 1));
	mov(mv, x86::mem(ts->esp + 0x2, 1), ts->al);
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x1B4, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x7, 1), ts->cl);
	game::sub_5C1000(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_571D8D;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x3, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x6, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_5C0F60(ts, mv);
	add(&ts->esp, 0x8);

loc_571D8D:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	movzx(mv, &ts->ecx, x86::mem(ts->eax + 0x12, 1));
	mov(&ts->edx, ts->ecx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->edi);
	shr(&ts->edx, 0x5);
	mov(mv, &ts->edi, x86::mem(ts->esi + (ts->edx*4), 4));
	and_(&ts->ecx, 0x1F);
	shr(&ts->edi, ts->cl);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x10, 1));
	mov(&ts->edx, 0x80);
	xor_(&ts->edi, ts->ecx);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x13, 1));
	and_(&ts->edi, 0xFF);
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_571DDF;
    }
	movzx(&ts->ecx, ts->cl);
	mov(&ts->edx, ts->ecx);
	shr(&ts->edx, 0x5);
	mov(mv, &ts->edx, x86::mem(ts->esi + (ts->edx*4), 4));
	and_(&ts->ecx, 0x1F);
	shr(&ts->edx, ts->cl);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x11, 1));
	xor_(&ts->edx, ts->ecx);
	and_(&ts->edx, 0xFF);

loc_571DDF:
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x1C, 4));
	xor_(&ts->esi, ts->esi);
	cmp(&ts->eflags, ts->ecx, ts->esi);
	if (ts->eflags.zero) {
        goto loc_571DFF;
    }
	shl(&ts->edx, 0x8);
	or_(&ts->edx, ts->edi);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->ebp + 0x1C, 4), ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->ebp + 0x18, 4), ts->edx);
	xor_(&ts->ax, ts->ax);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_571DFF:
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x14, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	push(mv, &ts->esp, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_571E85;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x18, 4));
	mov(mv, x86::mem(ts->ebp + 0x18, 4), ts->edi);
	movzx(mv, &ts->ecx, x86::mem(0x7FDD0A, 1));
	and_(&ts->eax, 0xFF);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_571E3D;
    }
	cmp(&ts->eflags, ts->edi, ts->ecx);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_571E3B;
    }

loc_571E21:
	mov(mv, &ts->edx, x86::mem(0x865138, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	add(&ts->edx, 0x19);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->ebp + 0x20, 4), ts->edx);
	add(&ts->eax, 0x100);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_571E3B:
	cmp(&ts->eflags, ts->eax, ts->ecx);

loc_571E3D:
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_571E4D;
    }
	cmp(&ts->eflags, ts->edi, ts->ecx);
	if (!ts->eflags.carry) {
        goto loc_571E4D;
    }

loc_571E43:
	mov(mv, &ts->ax, x86::mem(ts->ebp + 0x8, 2));
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_571E4D:
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_571F64;
    }
	cmp(&ts->eflags, ts->edi, ts->ecx);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_571F64;
    }
	mov(mv, &ts->eax, x86::mem(0x865138, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->ebp + 0x20, 4));
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_571F64;
    }
	mov(mv, &ts->ecx, x86::mem(0x865138, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	add(&ts->ecx, 0x6);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->ebp + 0x20, 4), ts->ecx);
	add(&ts->eax, 0x100);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_571E85:
	cmp(&ts->eflags, ts->cl, 0x1);
	if (ts->eflags.zero) {
        goto loc_571E93;
    }
	cmp(&ts->eflags, ts->cl, 0x2);
	if (!ts->eflags.zero) {
        goto loc_571F64;
    }

loc_571E93:
	movzx(mv, &ts->ecx, x86::mem(ts->ebp + 0x19, 1));
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x18, 4));
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ecx);
	mov(&ts->ecx, ts->edx);
	shl(&ts->ecx, 0x8);
	and_(&ts->ebx, 0xFF);
	or_(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->ebp + 0x18, 4), ts->ecx);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x14, 1));
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->esi);
	mov(mv, x86::mem(ts->esp + 0x28, 1), ts->cl);
	goto loc_571EC0;

loc_571EBB:
	mov(mv, &ts->cl, x86::mem(ts->esp + 0x28, 1));
	nop();

loc_571EC0:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_571ECE;
    }
	mov(&ts->eax, ts->edi);
	mov(&ts->esi, ts->ebx);
	goto loc_571ED4;

loc_571ECE:
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x1C, 4));
	mov(&ts->eax, ts->edx);

loc_571ED4:
	cmp(&ts->eflags, ts->cl, 0x1);
	if (!ts->eflags.zero) {
        goto loc_571F21;
    }
	movzx(mv, &ts->ecx, x86::mem(ts->esp + 0x12, 1));
	cmp(&ts->eflags, ts->esi, ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_571EEE;
    }
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_571E21;
    }
	cmp(&ts->eflags, ts->esi, ts->ecx);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_571F52;
    }

loc_571EEE:
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_571E43;
    }
	cmp(&ts->eflags, ts->esi, ts->ecx);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_571F52;
    }
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_571F52;
    }
	mov(mv, &ts->eax, x86::mem(0x865138, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->ebp + 0x20, 4));
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_571F52;
    }
	mov(mv, &ts->eax, x86::mem(0x865138, 4));
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->eax, 0x6);
	mov(mv, x86::mem(ts->ebp + 0x20, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->eax, 0x100);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_571F21:
	cmp(&ts->eflags, ts->cl, 0x2);
	if (!ts->eflags.zero) {
        goto loc_571F52;
    }
	movzx(mv, &ts->ecx, x86::mem(ts->esp + 0x13, 1));
	cmp(&ts->eflags, ts->esi, ts->ecx);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_571F37;
    }
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_571F6D;
    }
	cmp(&ts->eflags, ts->esi, ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_571F52;
    }

loc_571F37:
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_571E43;
    }
	cmp(&ts->eflags, ts->esi, ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_571F52;
    }
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_571F52;
    }
	mov(mv, &ts->ecx, x86::mem(0x865138, 4));
	cmp(mv, &ts->eflags, ts->ecx, x86::mem(ts->ebp + 0x20, 4));
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_571F87;
    }

loc_571F52:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0x2);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_571EBB;
    }

loc_571F64:
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	xor_(&ts->ax, ts->ax);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_571F6D:
	mov(mv, &ts->ecx, x86::mem(0x865138, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	add(&ts->ecx, 0x19);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->ebp + 0x20, 4), ts->ecx);
	add(&ts->eax, 0x100);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_571F87:
	mov(mv, &ts->edx, x86::mem(0x865138, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	add(&ts->edx, 0x6);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->ebp + 0x20, 4), ts->edx);
	add(&ts->eax, 0x100);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_571FB0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	imul(&ts->eax, ts->eax, 0x1C8);
	mov(mv, x86::mem(ts->eax + 0x865764, 4), ts->ecx);
	retn(mv, &ts->esp);
}

void sub_571FD0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(0x7FE7F0, 4));
	push(mv, &ts->esp, ts->esi);
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->edx, ts->edx);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_571FF3;
    }
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x14, 4));
	mov(&ts->ecx, 0x7FE778);

loc_571FE7:
	cmp(mv, &ts->eflags, x86::mem(ts->ecx, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_571FF8;
    }
	inc(&ts->eax);
	add(&ts->ecx, 0x14);
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_571FE7;
    }

loc_571FF3:
	xor_(&ts->eax, ts->eax);

loc_571FF5:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_571FF8:
	mov(mv, &ts->dl, x86::mem(ts->ecx + 0x4, 1));
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xC, 4));
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.zero) {
        goto loc_572017;
    }
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_572017;
    }
	movsx(&ts->eax, ts->dl);
	mov(mv, x86::mem(ts->esi, 4), ts->eax);
	mov(&ts->eax, 0x1);

loc_572017:
	mov(mv, &ts->dl, x86::mem(ts->ecx + 0x5, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.zero) {
        goto loc_572029;
    }
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_572029;
    }
	movsx(&ts->edx, ts->dl);
	mov(mv, x86::mem(ts->esi + (ts->eax*4), 4), ts->edx);
	inc(&ts->eax);

loc_572029:
	mov(mv, &ts->dl, x86::mem(ts->ecx + 0x6, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.zero) {
        goto loc_57203B;
    }
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_57203B;
    }
	movsx(&ts->edx, ts->dl);
	mov(mv, x86::mem(ts->esi + (ts->eax*4), 4), ts->edx);
	inc(&ts->eax);

loc_57203B:
	mov(mv, &ts->dl, x86::mem(ts->ecx + 0x7, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.zero) {
        goto loc_57204D;
    }
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_57204D;
    }
	movsx(&ts->edx, ts->dl);
	mov(mv, x86::mem(ts->esi + (ts->eax*4), 4), ts->edx);
	inc(&ts->eax);

loc_57204D:
	mov(mv, &ts->dl, x86::mem(ts->ecx + 0x8, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.zero) {
        goto loc_57205F;
    }
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_57205F;
    }
	movsx(&ts->edx, ts->dl);
	mov(mv, x86::mem(ts->esi + (ts->eax*4), 4), ts->edx);
	inc(&ts->eax);

loc_57205F:
	mov(mv, &ts->dl, x86::mem(ts->ecx + 0x9, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.zero) {
        goto loc_572071;
    }
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_572071;
    }
	movsx(&ts->edx, ts->dl);
	mov(mv, x86::mem(ts->esi + (ts->eax*4), 4), ts->edx);
	inc(&ts->eax);

loc_572071:
	mov(mv, &ts->dl, x86::mem(ts->ecx + 0xA, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.zero) {
        goto loc_572083;
    }
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_572083;
    }
	movsx(&ts->edx, ts->dl);
	mov(mv, x86::mem(ts->esi + (ts->eax*4), 4), ts->edx);
	inc(&ts->eax);

loc_572083:
	mov(mv, &ts->dl, x86::mem(ts->ecx + 0xB, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.zero) {
        goto loc_572095;
    }
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_572095;
    }
	movsx(&ts->edx, ts->dl);
	mov(mv, x86::mem(ts->esi + (ts->eax*4), 4), ts->edx);
	inc(&ts->eax);

loc_572095:
	mov(mv, &ts->dl, x86::mem(ts->ecx + 0xC, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.zero) {
        goto loc_5720A7;
    }
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_5720A7;
    }
	movsx(&ts->edx, ts->dl);
	mov(mv, x86::mem(ts->esi + (ts->eax*4), 4), ts->edx);
	inc(&ts->eax);

loc_5720A7:
	mov(mv, &ts->cl, x86::mem(ts->ecx + 0xD, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_571FF5;
    }
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_571FF5;
    }
	movsx(&ts->ecx, ts->cl);
	mov(mv, x86::mem(ts->esi + (ts->eax*4), 4), ts->ecx);
	pop(mv, &ts->esp, ts->edi);
	inc(&ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_5720D0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	sub(&ts->esp, 0x28);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, 0xA);
	push(mv, &ts->esp, ts->ecx);
	game::sub_571FD0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_5720EF;
    }
	add(&ts->esp, 0x28);
	retn(mv, &ts->esp);

loc_5720EF:
	xor_(&ts->ecx, ts->ecx);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_57210B;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x30, 4));
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_572100:
	cmp(mv, &ts->eflags, x86::mem(ts->esp + (ts->ecx*4), 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_572113;
    }
	inc(&ts->ecx);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_572100;
    }

loc_57210B:
	mov(mv, &ts->eax, x86::mem(ts->esp, 4));
	add(&ts->esp, 0x28);
	retn(mv, &ts->esp);

loc_572113:
	mov(&ts->eax, ts->edx);
	add(&ts->esp, 0x28);
	retn(mv, &ts->esp);
}

void sub_572120(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_5720D0(ts, mv);
	mov(mv, &ts->ebp, x86::mem(0x7FE770, 4));
	add(&ts->esp, 0x8);
	xor_(&ts->ebx, ts->ebx);
	test(&ts->eflags, ts->ebp, ts->ebp);
	mov(&ts->edi, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_572186;
    }
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x14, 4));
	mov(&ts->eax, 0x7FDD10);
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_572150:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x8, 4), ts->esi);
	if (!ts->eflags.zero) {
        goto loc_57217E;
    }
	xor_(&ts->edx, ts->edx);

loc_572157:
	test(&ts->eflags, ts->edi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_572165;
    }
	cmp(&ts->eflags, ts->esi, 0x1);
	if (ts->eflags.zero) {
        goto loc_572188;
    }
	cmp(&ts->eflags, ts->esi, 0x2);
	goto loc_572176;

loc_572165:
	mov(mv, &ts->cl, x86::mem(ts->eax + (ts->edx), 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_572178;
    }
	cmp(&ts->eflags, ts->cl, 0xFF);
	if (ts->eflags.zero) {
        goto loc_572188;
    }
	movsx(&ts->ecx, ts->cl);
	cmp(&ts->eflags, ts->ecx, ts->edi);

loc_572176:
	if (ts->eflags.zero) {
        goto loc_572188;
    }

loc_572178:
	inc(&ts->edx);
	cmp(&ts->eflags, ts->edx, 0x8);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_572157;
    }

loc_57217E:
	inc(&ts->ebx);
	add(&ts->eax, 0x20);
	cmp(&ts->eflags, ts->ebx, ts->ebp);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_572150;
    }

loc_572186:
	xor_(&ts->eax, ts->eax);

loc_572188:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_572190(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_571AD0(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->bl, x86::mem(ts->esi + 0x864788, 1));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->bl, 0xFF);
	mov(&ts->edi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5721DA;
    }
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_5721D5;
    }
	mov(&ts->ecx, ts->esi);
	imul(&ts->ecx, ts->ecx, 0x1C8);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x865764, 4));
	movzx(&ts->eax, ts->bl);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_572120(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_5721FE;
    }

loc_5721D5:
	cmp(&ts->eflags, ts->bl, 0xFF);
	if (!ts->eflags.zero) {
        goto loc_572205;
    }

loc_5721DA:
	mov(mv, &ts->eax, x86::mem(0x7F9414, 4));
	mov(&ts->ecx, ts->esi);
	imul(&ts->ecx, ts->ecx, 0x1C8);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x865764, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_572120(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_572205;
    }

loc_5721FE:
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x18, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_572205:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_572210(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->edx, x86::mem(0x7FE7F0, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	mov(&ts->ecx, 0xC);
	mov(mv, x86::mem(ts->esp, 4), 0x20);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_572257;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x18, 4));
	mov(&ts->eax, 0x7FE788);

loc_572238:
	cmp(mv, &ts->eflags, x86::mem(ts->eax - 0x10, 4), ts->edi);
	if (!ts->eflags.zero) {
        goto loc_57224E;
    }
	cmp(&ts->eflags, ts->esi, 0x1);
	if (!ts->eflags.zero) {
        goto loc_572278;
    }
	movzx(mv, &ts->ebx, x86::mem(ts->eax - 0x1, 1));
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ebx);

loc_57224A:
	movzx(mv, &ts->ecx, x86::mem(ts->eax - 0x2, 1));

loc_57224E:
	add(&ts->eax, 0x14);
	dec(&ts->edx);
	if (!ts->eflags.zero) {
        goto loc_572238;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);

loc_572257:
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784540, 4));
	mov(mv, x86::mem(ts->eax + 0x28, 1), ts->cl);
	fsub(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784540, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x10, 4));
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_572278:
	cmp(&ts->eflags, ts->esi, 0x2);
	if (!ts->eflags.zero) {
        goto loc_57228A;
    }
	movzx(mv, &ts->ebx, x86::mem(ts->eax + 0x1, 1));
	movzx(mv, &ts->ecx, x86::mem(ts->eax, 1));
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ebx);
	goto loc_57224E;

loc_57228A:
	cmp(&ts->eflags, ts->esi, 0x3);
	if (!ts->eflags.zero) {
        goto loc_57224A;
    }
	movzx(mv, &ts->ebx, x86::mem(ts->eax + 0x3, 1));
	movzx(mv, &ts->ecx, x86::mem(ts->eax + 0x2, 1));
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ebx);
	goto loc_57224E;
}

void sub_5722A0(x86::thread_state* ts, x86::memory_view* mv) {
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ecx, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_5722C2;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + (ts->edx*8) - 0x8, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (!ts->eflags.zero) {
        goto loc_5722CC;
    }

loc_5722C2:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp, 0x4);

loc_5722CC:
	xor_(&ts->ecx, ts->ecx);
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_5722F4;
    }
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->edi);

loc_5722D5:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_5722EA;
    }
	inc(&ts->ecx);
	add(&ts->esi, 0x8);
	cmp(&ts->eflags, ts->ecx, ts->edx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5722D5;
    }

loc_5722EA:
	test(&ts->eflags, ts->ecx, ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_5722F2;
    }
	dec(&ts->ecx);
	test(&ts->eflags, ts->ecx, ts->ecx);

loc_5722F2:
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_57231D;
    }

loc_5722F4:
	add(&ts->edx, 0xFFFFFFFE);
	cmp(&ts->eflags, ts->ecx, ts->edx);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_57231D;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + (ts->ecx*8) + 0xC, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + (ts->ecx*8) + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + (ts->ecx*8) + 0x8, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + (ts->ecx*8), 4));
	fdivp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + (ts->ecx*8), 4));
	fmulp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + (ts->ecx*8) + 0x4, 4));
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp, 0x4);

loc_57231D:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + (ts->ecx*8), 4));
	fmulp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + (ts->ecx*8) + 0x4, 4));
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp, 0x4);
}

void sub_572340(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->edx, ts->ecx);
	xor_(&ts->ebx, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->ecx, ts->ecx);
	lea(mv, &ts->eax, x86::mem(ts->edx + 0x18, 4));
	goto loc_572350;

loc_572350:
	mov(mv, x86::mem(ts->eax - 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax - 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax, 4), ts->ebx);
	mov(mv, x86::mem(ts->edx + (ts->ecx) + 0x24, 1), ts->bl);
	inc(&ts->ecx);
	add(&ts->eax, 0x4);
	cmp(&ts->eflags, ts->ecx, 0x3);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_572350;
    }
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x18);
	mov(&ts->edi, 0x864728);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(&ts->ecx, 0x18);
	mov(&ts->edi, 0x8651B0);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->edx);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_572390(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	or_(&ts->esi, 0xFFFFFFFF);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	lea(mv, &ts->ebp, x86::mem(ts->edi + 0x18, 4));

loc_5723A5:
	mov(mv, &ts->al, x86::mem(ts->edi + (ts->ecx) + 0x24, 1));
	cmp(mv, &ts->eflags, ts->al, x86::mem(ts->esp + 0x24, 1));
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_572418;
    }
	mov(mv, &ts->ebx, x86::mem(ts->ebp - 0x18, 4));
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_572427;
    }
	cmp(&ts->eflags, ts->esi, 0xFFFFFFFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_5723FE;
    }
	mov(mv, &ts->dl, x86::mem(ts->edi + (ts->esi) + 0x24, 1));
	cmp(&ts->eflags, ts->al, ts->dl);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_572418;
    }
	if (!ts->eflags.zero) {
        goto loc_5723FE;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + (ts->esi*4) + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + (ts->esi*4), 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_5722A0(ts, mv);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + (ts->esi*4) + 0x18, 4));
	game::__ftol2(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	game::sub_5722A0(ts, mv);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp, 4));
	game::__ftol2(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_572418;
    }

loc_5723FE:
	mov(mv, &ts->dl, x86::mem(ts->esp + 0x24, 1));
	cmp(mv, &ts->eflags, x86::mem(ts->edi + (ts->ecx) + 0x24, 1), ts->dl);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_572416;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_572418;
    }

loc_572416:
	mov(&ts->esi, ts->ecx);

loc_572418:
	inc(&ts->ecx);
	add(&ts->ebp, 0x4);
	cmp(&ts->eflags, ts->ecx, 0x3);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5723A5;
    }
	goto loc_572429;

loc_572427:
	mov(&ts->esi, ts->ecx);

loc_572429:
	cmp(&ts->eflags, ts->esi, 0xFFFFFFFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_572459;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->cl, x86::mem(ts->esp + 0x24, 1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + (ts->esi*4) + 0x18, 4));
	mov(mv, x86::mem(ts->edi + (ts->esi*4), 4), ts->eax);
	mov(mv, x86::mem(ts->edi + (ts->esi*4) + 0xC, 4), 0x0);
	mov(mv, x86::mem(ts->esi + (ts->edi) + 0x24, 1), ts->cl);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0xC);

loc_572459:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0xC);
}

void sub_572470(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x28, 4));
	xor_(&ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x2C, 4), ts->eax);
	mov(mv, x86::mem(ts->edi + 0x28, 4), ts->ebx);
	xor_(&ts->ebp, ts->ebp);
	lea(mv, &ts->esi, x86::mem(ts->edi + 0xC, 4));

loc_572486:
	mov(mv, &ts->ecx, x86::mem(ts->esi - 0xC, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5724CF;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_572505;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + (ts->eax*8) - 0x8, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (ts->eflags.zero) {
        goto loc_572507;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_5722A0(ts, mv);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC, 4));
	game::__ftol2(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x28, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_5724C1;
    }
	mov(&ts->eax, ts->ecx);

loc_5724C1:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->edi + 0x28, 4), ts->eax);
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi, 4));

loc_5724CF:
	inc(&ts->ebp);
	add(&ts->esi, 0x4);
	cmp(&ts->eflags, ts->ebp, 0x3);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_572486;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0x28, 4), ts->ebx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_5724E0;
    }
	mov(mv, x86::mem(ts->edi + 0x28, 4), ts->ebx);

loc_5724E0:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x28, 4));
	mov(&ts->eax, 0xFF);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_5724EF;
    }
	mov(mv, x86::mem(ts->edi + 0x28, 4), ts->eax);

loc_5724EF:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x28, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x2C, 4));
	pop(mv, &ts->esp, ts->edi);
	xor_(&ts->ecx, ts->ecx);
	cmp(&ts->eflags, ts->eax, ts->edx);
	pop(mv, &ts->esp, ts->esi);
	setnz(ts->eflags, &ts->cl);
	pop(mv, &ts->esp, ts->ebp);
	mov(&ts->al, ts->cl);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

loc_572505:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));

loc_572507:
	mov(mv, x86::mem(ts->esi - 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + (ts->ebp) + 0x24, 1), 0xFF);
	goto loc_5724CF;
}

void sub_572520(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(0x8651AC, 4));
	xor_(&ts->esi, ts->esi);
	xor_(&ts->ecx, ts->ecx);
	mov(&ts->edi, ts->edi);

loc_572530:
	mov(&ts->edx, 0x2);
	goto loc_572540;

loc_572540:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x864728, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (!ts->eflags.zero) {
        goto loc_5725CB;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x8651B0, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero) {
        goto loc_5725B0;
    }
	cmp(&ts->eflags, ts->eax, 0x7FFFFFFF);
	if (ts->eflags.zero) {
        goto loc_5725B0;
    }
	mov(mv, &ts->ebx, x86::mem(ts->ecx + 0x8651B0, 4));
	mov(&ts->eax, ts->edi);
	sub(&ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DD44, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_5725B0;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x864728, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x864728, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DD3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (!ts->eflags.zero) {
        goto loc_5725F8;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DD40, 4));
	fchs(&ts->fp, x86::fp_index(0));
	goto loc_5725F2;

loc_5725B0:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x864728, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_5725EC;
    }
	goto loc_5725E4;

loc_5725CB:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x864728, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_5725EC;
    }

loc_5725E4:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));

loc_5725EC:
	mov(mv, x86::mem(ts->ecx + 0x8651B0, 4), ts->esi);

loc_5725F2:
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x864728, 4));

loc_5725F8:
	add(&ts->ecx, 0x4);
	dec(&ts->edx);
	if (!ts->eflags.zero) {
        goto loc_572540;
    }
	cmp(&ts->eflags, ts->ecx, 0x60);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_572530;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_572610(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	mov(&ts->ebp, 0x8653D8);

loc_572624:
	xor_(&ts->bl, ts->bl);
	lea(mv, &ts->esi, x86::mem(ts->ebp - 0x28, 4));
	mov(&ts->edi, 0x2);
	mov(&ts->edi, ts->edi);

loc_572630:
	mov(mv, &ts->eax, x86::mem(0x865198, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_572470(ts, mv);
	or_(&ts->bl, ts->al);
	add(&ts->esi, 0x30);
	dec(&ts->edi);
	if (!ts->eflags.zero) {
        goto loc_572630;
    }
	test(&ts->eflags, ts->bl, ts->bl);
	if (ts->eflags.zero) {
        goto loc_572676;
    }
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x864788, 1));
	mov(mv, x86::mem(ts->esp + 0x14, 1), ts->cl);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->edx);
	game::std__codecvt_base__do_always_noconv_void_(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_572676;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::nullsub_1(ts, mv);
	add(&ts->esp, 0xC);

loc_572676:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	inc(&ts->edx);
	add(&ts->ebp, 0x60);
	cmp(&ts->eflags, ts->ebp, 0x865498);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_572624;
    }
	mov(mv, &ts->eax, x86::mem(0x865198, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_572520(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_5726A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->al, x86::mem(ts->esi + 0x864788, 1));
	mov(mv, x86::mem(ts->esp + 0x8, 1), ts->al);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	game::std__codecvt_base__do_always_noconv_void_(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5726CD;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->esi);
	game::nullsub_1(ts, mv);
	add(&ts->esp, 0xC);

loc_5726CD:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_5726D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->edx, x86::mem(0x8654A4, 4));
	cmp(&ts->eflags, ts->edx, 0x6);
	if (!ts->eflags.zero) {
        goto loc_5726F0;
    }
	mov(mv, &ts->eax, x86::mem(0x8900D8, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (ts->eflags.zero) {
        goto loc_5726F0;
    }
	cmp(&ts->eflags, ts->eax, 0x4);
	if (!ts->eflags.zero) {
        goto loc_5727A0;
    }

loc_5726F0:
	mov(mv, &ts->eax, x86::mem(0x7FAA14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5727A0;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x5, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5727A0;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_5727A0;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	lea(mv, &ts->eax, x86::mem(ts->edi + (ts->eax*2), 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x864728, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_5727A0;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_57274A;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);

loc_57274A:
	cmp(&ts->eflags, ts->edx, 0x3);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fdivp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	fmulp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	if (ts->eflags.zero) {
        goto loc_5727A0;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	xor_(&ts->ecx, ts->ecx);
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x4, 1));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->edi + (ts->edi*2), 4));
	push(mv, &ts->esp, ts->edx);
	shl(&ts->ecx, 0x5);
	push(mv, &ts->esp, ts->eax);
	add(&ts->ecx, 0x8653B0);
	game::sub_572390(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5727A0;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	mov(mv, &ts->eax, x86::mem(0x8651AC, 4));
	lea(mv, &ts->edx, x86::mem(ts->edi + (ts->ecx*2), 4));
	mov(mv, x86::mem(0x8651B0, 4), ts->eax);

loc_5727A0:
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_5727B0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->eax);
	shl(&ts->esi, 0x4);
	add(&ts->esi, 0x7FB7D8);
	dec(&ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	if (!ts->eflags.zero) {
        goto loc_5727F9;
    }
	test(&ts->eflags, ts->edi, ts->edi);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fdivp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x14, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x10, 4));
	fmulp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x10, 4));
	mov(&ts->eax, 0x7FB778);
	if (ts->eflags.zero) {
        goto loc_5727F1;
    }
	mov(&ts->eax, 0x7FB780);

loc_5727F1:
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));

loc_5727F9:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_5726D0(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_572810(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7842A0, 4));
	mov(mv, x86::mem(ts->ecx + 0x10, 4), 0x7FB7A0);
	mov(mv, x86::mem(ts->ecx + 0x14, 4), 0x0);
	mov(mv, x86::mem(ts->ecx + 0x18, 4), ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	mov(mv, x86::mem(ts->ecx + 0x1C, 4), ts->edx);
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7842A0, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7842A0, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	retn(mv, &ts->esp, 0xC);
}

void sub_572860(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x14, 4));
	game::__ftol2(ts, mv);
	not(&ts->eax);
	test(&ts->eflags, ts->al, 0x1);
	if (ts->eflags.zero) {
        goto loc_572887;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_572887;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_5722A0(ts, mv);
	goto loc_57288D;

loc_572887:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));

loc_57288D:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi, 4));
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);
}

void sub_5728C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x8650C4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_572936;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7FB730, 4));
	mov(mv, &ts->eax, x86::mem(0x79DC64, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7842A0, 4));
	mov(mv, &ts->edx, x86::mem(0x79DC68, 4));
	mov(&ts->ecx, 0x7FB7A0);
	mov(mv, x86::mem(0x8650C4, 4), 0x0);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865360, 4));
	mov(mv, x86::mem(0x865370, 4), ts->ecx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7FB734, 4));
	mov(mv, x86::mem(0x865374, 4), 0x0);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7842A0, 4));
	mov(mv, x86::mem(0x865378, 4), ts->eax);
	mov(mv, x86::mem(0x86537C, 4), ts->edx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865364, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7FB738, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7842A0, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865368, 4));
	goto loc_57293C;

loc_572936:
	mov(mv, &ts->ecx, x86::mem(0x865370, 4));

loc_57293C:
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_57297F;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865154, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865378, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865374, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865374, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_572973;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + (ts->eax*8) - 0x8, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (!ts->eflags.zero) {
        goto loc_57297F;
    }
	goto loc_572975;

loc_572973:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));

loc_572975:
	mov(mv, x86::mem(0x865370, 4), 0x0);

loc_57297F:
	mov(mv, &ts->edx, x86::mem(0x865390, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto locret_5729D1;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865154, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865398, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865394, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865394, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_5729C5;
    }
	mov(mv, &ts->edx, x86::mem(ts->edx + 0x4, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + (ts->edx*8) - 0x8, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (!ts->eflags.zero) {
        goto locret_5729D1;
    }
	mov(mv, x86::mem(0x865390, 4), 0x0);
	retn(mv, &ts->esp);

loc_5729C5:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	mov(mv, x86::mem(0x865390, 4), 0x0);

locret_5729D1:
	retn(mv, &ts->esp);
}

void sub_5729E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(0x79DC68, 4));
	xor_(&ts->eax, ts->eax);
	mov(&ts->edx, ts->ecx);
	mov(mv, x86::mem(0x865360, 4), 0x0);
	mov(mv, x86::mem(0x865364, 4), 0x0);
	mov(mv, x86::mem(0x865368, 4), 0x0);
	mov(mv, x86::mem(0x865370, 4), ts->eax);
	mov(mv, x86::mem(0x865374, 4), ts->eax);
	mov(mv, x86::mem(0x865378, 4), 0x3F800000);
	mov(mv, x86::mem(0x86537C, 4), ts->ecx);
	mov(mv, x86::mem(0x865380, 4), ts->eax);
	mov(mv, x86::mem(0x865384, 4), ts->eax);
	mov(mv, x86::mem(0x865388, 4), ts->eax);
	mov(mv, x86::mem(0x865390, 4), ts->eax);
	mov(mv, x86::mem(0x865394, 4), ts->eax);
	mov(mv, x86::mem(0x865398, 4), 0x3F800000);
	mov(mv, x86::mem(0x86539C, 4), ts->edx);
	retn(mv, &ts->esp);
}

void sub_572A50(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	sub(&ts->esp, 0x9C);
	mov(mv, &ts->eax, x86::mem(0x890080, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x108, 4));
	push(mv, &ts->esp, ts->esi);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_572E3A;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_572A8D;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_572E3F;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto loc_572E3A;
    }

loc_572A8D:
	xor_(&ts->ecx, ts->ecx);

loc_572A8F:
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x50, 4));
	shl(&ts->ecx, 0x5);
	push(mv, &ts->esp, ts->edx);
	add(&ts->ecx, 0x865360);
	game::sub_572860(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43C780(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x5C, 4));
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x20, 4));
	mov(mv, x86::mem(ts->esp + 0x50, 4), 0x3F800000);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x10, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x54, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x14, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x5C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x24, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x54, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x4, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x34, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x18, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x5C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x28, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x54, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x8, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x38, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x5C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x5C, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(mv, x86::mem(ts->esp + 0x4C, 4), ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7FB740, 4));
	game::__ftol2(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_5BACF0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7FB744, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x50, 4));
	game::__ftol2(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_5BADA0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x5C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x60, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7FB748, 4));
	game::__ftol2(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_5BAE60(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x8, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x68, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x88, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x5C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x8, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x6C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x50, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x60, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x8, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x70, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x90, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x54, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x64, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x8, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x74, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x94, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x14, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x68, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x1C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x10, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x18, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x98, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x14, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x6C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x1C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x10, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x5C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x18, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x9C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x50, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x14, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x70, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x1C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x10, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x60, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x18, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xA0, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x54, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x14, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x74, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x1C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x10, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x64, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x18, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xA4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x28, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x68, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x2C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x20, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x24, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xA8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x5C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x28, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x6C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x2C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x20, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x24, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xAC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x60, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x28, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x70, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x2C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x20, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x50, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x24, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xB0, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x64, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x28, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x74, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x2C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x20, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x54, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x24, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xB4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x34, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x30, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x68, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x3C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x38, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xB8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x34, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x30, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x6C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x3C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x5C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x38, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xBC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x50, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x34, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x30, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x70, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x3C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x60, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x38, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC0, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x54, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x34, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x30, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x88, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->esi);
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x7C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x3C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x6C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x38, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xCC, 4));
	game::sub_4012B0(ts, mv);
	add(&ts->esp, 0x30);

loc_572E3A:
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_572E3F:
	mov(&ts->ecx, 0x1);
	goto loc_572A8F;
}

void sub_572E50(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	sub(&ts->esp, 0x28);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(0x8900AC, 4));
	game::sub_5EA7C0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_572FBF;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7FB750, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7FB754, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7FB758, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fsqrt(&ts->fp, x86::fp_index(0));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DCD4, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_572FBD;
    }
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DCD8, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_572EDB;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DCD8, 4));

loc_572EDB:
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DCD4, 4));
	mov(&ts->eax, ts->edi);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DCD8, 4));
	shl(&ts->eax, 0x5);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DCD4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x865370, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	fdivp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	lea(mv, &ts->esi, x86::mem(ts->eax + 0x865360, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DCE0, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DCDC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DCDC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	if (ts->eflags.zero) {
        goto loc_572F2D;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x14, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_5722A0(ts, mv);
	goto loc_572F33;

loc_572F2D:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));

loc_572F33:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_572FBF;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DCE8, 4));
	mov(mv, &ts->edi, x86::mem(0x8900AC, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DCE4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DCE4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	if (ts->eflags.zero) {
        goto loc_572F89;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0x58, 4), 0x7);
	if (!ts->eflags.zero) {
        goto loc_572F89;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7850EC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A0EC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));

loc_572F89:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_43CF90(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x79DC68, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_572810(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_572FBD:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));

loc_572FBF:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_572FD0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x24, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->eax);
	game::sub_43DBD0(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x20, 4), ts->eax);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x128, 4));
	add(&ts->esp, 0x8);
	mov(&ts->ecx, 0x1000);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_573020(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0xC, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));
	mov(&ts->eax, ts->edi);
	sub(&ts->eax, ts->edx);
	lea(mv, &ts->esi, x86::mem(ts->eax + (ts->ecx) + 0x128, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x4, 1));
	mov(mv, &ts->dl, x86::mem(ts->eax, 1));
	shl(&ts->cl, 0x4);
	add(&ts->cl, ts->dl);
	mov(mv, x86::mem(ts->esi, 1), ts->cl);
	mov(mv, &ts->ebx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x8, 4));
	inc(&ts->esi);
	xor_(&ts->ecx, ts->ecx);
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_573060;
    }

loc_573052:
	mov(mv, x86::mem(ts->ecx + (ts->esi), 1), ts->dl);
	mov(mv, &ts->ebx, x86::mem(ts->eax + 0x4, 4));
	shr(&ts->edx, 0x8);
	inc(&ts->ecx);
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_573052;
    }

loc_573060:
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	lea(mv, &ts->eax, x86::mem(ts->edx + (ts->edi) + 0x1, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x8);
}

void sub_573070(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(0x8650D0, 4));
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto locret_573086;
    }
	mov(mv, x86::mem(0x8650D8, 4), ts->eax);
	mov(mv, x86::mem(0x8650D0, 4), ts->eax);

locret_573086:
	retn(mv, &ts->esp);
}

void sub_573090(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	sub(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->ebp);
	xor_(&ts->ebp, ts->ebp);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_57312E;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(0x8650E4, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	nop();

loc_5730B0:
	cmp(mv, &ts->eflags, ts->ebx, x86::mem(0x8650E0, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_57312B;
    }
	mov(mv, &ts->ecx, x86::mem(0x8650E8, 4));
	lea(mv, &ts->esi, x86::mem(ts->ecx + (ts->ebx), 4));
	movzx(mv, &ts->ecx, x86::mem(ts->esi, 1));
	mov(&ts->edx, ts->ecx);
	and_(&ts->ecx, 0xF);
	shr(&ts->edx, 0x4);
	inc(&ts->esi);
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->edx, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_5730F0;
    }
	lea(mv, &ts->esi, x86::mem(ts->esi + (ts->edx) - 0x1, 4));
	mov(&ts->ecx, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_5730E0:
	movzx(mv, &ts->eax, x86::mem(ts->esi, 1));
	shl(&ts->edi, 0x8);
	or_(&ts->edi, ts->eax);
	dec(&ts->esi);
	dec(&ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_5730E0;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));

loc_5730F0:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	cmp(mv, &ts->eflags, ts->ecx, x86::mem(ts->esp + 0x28, 4));
	lea(mv, &ts->ebx, x86::mem(ts->ebx + (ts->edx) + 0x1, 4));
	mov(mv, x86::mem(0x8650E4, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_573125;
    }
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_573125;
    }
	xor_(&ts->ecx, ts->ecx);
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_573110:
	mov(&ts->ebx, ts->edi);
	shr(&ts->ebx, ts->cl);
	inc(&ts->ebp);
	add(&ts->ecx, 0x8);
	dec(&ts->edx);
	mov(mv, x86::mem(ts->eax + (ts->ebp) - 0x1, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto loc_573110;
    }
	mov(mv, &ts->ebx, x86::mem(0x8650E4, 4));

loc_573125:
	cmp(mv, &ts->eflags, ts->ebp, x86::mem(ts->esp + 0x24, 4));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5730B0;
    }

loc_57312B:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);

loc_57312E:
	mov(&ts->eax, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);
}

void sub_573140(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	mov(&ts->eax, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ecx);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->eax + 0x14, 4), 0x1);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->ecx);
	retn(mv, &ts->esp, 0xC);
}

void sub_573180(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	sub(&ts->esp, 0x1C);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->cl, x86::mem(0x866630, 1));
	mov(&ts->eax, 0x1);
	test(&ts->eflags, ts->al, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_5731A1;
    }
	or_(mv, x86::mem(0x866630, 4), ts->eax);

loc_5731A1:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	mov(&ts->eax, ts->ecx);
	sub(&ts->eax, 0x0);
	if (ts->eflags.zero) {
        goto loc_5731C0;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_5731BB;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_5731C0;
    }
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	goto loc_5731D0;

loc_5731BB:
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x4, 4));
	goto loc_5731CC;

loc_5731C0:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	dec(&ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));

loc_5731CC:
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));

loc_5731D0:
	mov(&ts->eax, ts->ecx);
	sub(&ts->eax, 0x0);
	if (ts->eflags.zero) {
        goto loc_573354;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_57333E;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto loc_573382;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_573281;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x10, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x14, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x18, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(&ts->eax, 0x866620);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x866620, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x866620, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x866620, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x866624, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x866628, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x866620, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x866620, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x866624, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x866624, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x866628, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x866628, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_573281:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_573382;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xC, 4));
	mov(&ts->ecx, ts->eax);
	add(&ts->eax, 0xFFFFFFFE);
	shl(&ts->eax, 0x4);
	add(&ts->eax, ts->edx);
	shl(&ts->ecx, 0x4);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + (ts->edx) - 0x10, 4));
	lea(mv, &ts->ecx, x86::mem(ts->ecx + (ts->edx) - 0x10, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x866620, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x8, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x866620, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x866620, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x866624, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x866628, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	shl(&ts->edx, 0x4);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	lea(mv, &ts->eax, x86::mem(ts->edx + (ts->eax) - 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x866620, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	mov(&ts->eax, 0x866620);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x866620, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x866624, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x866624, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x866628, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x866628, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_57333E:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_43C240(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x8, 4));
	add(&ts->esp, 0x8);
	goto loc_573382;

loc_573354:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_57336D;
    }
	mov(mv, x86::mem(ts->ebp + 0x8, 4), 0x0);
	goto loc_573382;

loc_57336D:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_573382;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->ebp + 0x8, 4), ts->eax);

loc_573382:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x8, 4));
	game::__ftol2(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	shl(&ts->eax, 0x4);
	add(&ts->eax, ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_5733A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	sub(&ts->esp, 0x1C);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->esi, ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_573180(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x10, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x10, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	game::sub_573180(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43D0C0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x18, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_573180(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43D0C0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x1C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7844C0, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_573180(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43D0C0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x28, 4));
	add(&ts->esp, 0x10);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->edx);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x18);
}

void sub_573480(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_5734B2;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));

loc_5734B2:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	sub(&ts->esp, 0x10);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787ADC, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fsub(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7844F8, 4));
	fsub(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7843E8, 4));
	fsubr(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7844C0, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fsub(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fsub(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	mov(&ts->ecx, ts->esi);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	game::sub_5733A0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x8);
}

void sub_573540(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_573590;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, 0x1);
	cmp(&ts->eflags, ts->eax, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x20, 4), 0x0);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_573588;
    }
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, 0x10);

loc_573564:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	add(&ts->eax, ts->ebx);
	lea(mv, &ts->ecx, x86::mem(ts->eax - 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_43CE10(ts, mv);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x20, 4));
	add(&ts->esp, 0x8);
	inc(&ts->edi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x20, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	add(&ts->ebx, 0x10);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_573564;
    }
	pop(mv, &ts->esp, ts->ebx);

loc_573588:
	mov(mv, x86::mem(ts->esi + 0x14, 4), 0x0);
	pop(mv, &ts->esp, ts->edi);

loc_573590:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x20, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_5735A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(0x8650F0, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_43F920(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_5735C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x58, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->edx + 0x58, 4));
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->ecx, ts->esi);
	setle(ts->eflags, &ts->al);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_5735E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->eax + 0x70, 4), 0x2);
	retn(mv, &ts->esp);
}

void sub_5735F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	cmp(&ts->eflags, ts->eax, 0x10);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_573603;
    }
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);

loc_573603:
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x50, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_57361B;
    }

loc_573611:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);

loc_57361B:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_573636;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	add(&ts->eax, 0xC);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->ebx + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_573611;
    }

loc_573636:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x48, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x4C, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0xC, 4));
	mov(&ts->edi, ts->eax);
	add(&ts->eax, ts->ecx);
	add(&ts->ebx, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	and_(&ts->edi, 0xFFFFF800);
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_57366C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	cmp(&ts->eflags, ts->edi, ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_57365F;
    }
	mov(&ts->edi, ts->ecx);

loc_57365F:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_57366C;
    }
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	mov(&ts->eax, ts->ecx);

loc_57366C:
	mov(&ts->ebp, ts->eax);
	sub(&ts->ebp, ts->edi);
	cmp(&ts->eflags, ts->ebp, 0x40000);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_573611;
    }
	mov(&ts->edx, ts->ebp);
	sub(&ts->edx, ts->ebx);
	cmp(&ts->eflags, ts->edx, 0x8000);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_573611;
    }
	push(mv, &ts->esp, 0x0);
	game::sub_43E910(ts, mv);
	sub(&ts->eax, 0x40000);
	lea(mv, &ts->ecx, x86::mem(ts->ebp + (ts->ebp), 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_573611;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + (ts->eax*4) + 0x14, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	inc(&ts->eax);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);
}

void sub_5736D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7A0408);
	push(mv, &ts->esp, 0x64);
	push(mv, &ts->esp, 0x7C);
	game::sub_440DF0(ts, mv);
	add(&ts->esp, 0x10);
	mov(mv, x86::mem(0x8650F0, 4), ts->eax);
	retn(mv, &ts->esp);
}

void sub_5736F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(ts->esp + 0x4, 1));
	mov(mv, x86::mem(0x7FB534, 1), ts->al);
	retn(mv, &ts->esp);
}

void sub_573840(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x408);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x40C, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->eax);
	xor_(&ts->eax, ts->eax);
	xor_(&ts->edx, ts->edx);
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->edi, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x4C, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_5744B0;
    }
	mov(mv, &ts->ecx, x86::mem(0x8650F8, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, 0xFFFFFFF0);
	if (ts->eflags.zero) {
        goto loc_573888;
    }
	xor_(&ts->esi, ts->esi);
	shl(&ts->esi, ts->cl);
	sub(&ts->ebp, ts->ecx);
	if (!ts->eflags.sign) {
        goto loc_5738A5;
    }

loc_573888:
	xor_(&ts->edx, ts->edx);
	mov(mv, &ts->dh, x86::mem(ts->edi, 1));
	mov(&ts->ecx, ts->ebp);
	neg(&ts->ecx);
	add(&ts->edi, 0x2);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edi);
	mov(mv, &ts->dl, x86::mem(ts->edi - 0x1, 1));
	mov(&ts->esi, ts->edx);
	shl(&ts->esi, ts->cl);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->edx);
	add(&ts->ebp, 0x10);

loc_5738A5:
	mov(&ts->eax, ts->esi);
	shr(&ts->eax, 0x10);
	shl(&ts->esi, 0x10);
	sub(&ts->ebp, 0x10);
	if (!ts->eflags.sign) {
        goto loc_5738D9;
    }
	movzx(mv, &ts->ecx, x86::mem(ts->edi, 1));
	shl(&ts->edx, 0x8);
	or_(&ts->edx, ts->ecx);
	movzx(mv, &ts->ecx, x86::mem(ts->edi + 0x1, 1));
	shl(&ts->edx, 0x8);
	or_(&ts->edx, ts->ecx);
	mov(&ts->ecx, ts->ebp);
	neg(&ts->ecx);
	add(&ts->edi, 0x2);
	mov(&ts->esi, ts->edx);
	shl(&ts->esi, ts->cl);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edi);
	add(&ts->ebp, 0x10);

loc_5738D9:
	test(&ts->eflags, ts->ah, ts->ah);
	if (!ts->eflags.sign) {
        goto loc_573956;
    }
	test(&ts->eflags, ts->ah, 0x1);
	if (ts->eflags.zero) {
        goto loc_573940;
    }
	shl(&ts->esi, 0x10);
	sub(&ts->ebp, 0x10);
	if (!ts->eflags.sign) {
        goto loc_573911;
    }
	movzx(mv, &ts->ecx, x86::mem(ts->edi, 1));
	shl(&ts->edx, 0x8);
	or_(&ts->edx, ts->ecx);
	movzx(mv, &ts->ecx, x86::mem(ts->edi + 0x1, 1));
	shl(&ts->edx, 0x8);
	or_(&ts->edx, ts->ecx);
	mov(&ts->ecx, ts->ebp);
	neg(&ts->ecx);
	add(&ts->edi, 0x2);
	mov(&ts->esi, ts->edx);
	shl(&ts->esi, ts->cl);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edi);
	add(&ts->ebp, 0x10);

loc_573911:
	shl(&ts->esi, 0x10);
	sub(&ts->ebp, 0x10);
	if (!ts->eflags.sign) {
        goto loc_573940;
    }
	movzx(mv, &ts->ecx, x86::mem(ts->edi, 1));
	shl(&ts->edx, 0x8);
	or_(&ts->edx, ts->ecx);
	movzx(mv, &ts->ecx, x86::mem(ts->edi + 0x1, 1));
	shl(&ts->edx, 0x8);
	or_(&ts->edx, ts->ecx);
	mov(&ts->ecx, ts->ebp);
	neg(&ts->ecx);
	add(&ts->edi, 0x2);
	mov(&ts->esi, ts->edx);
	shl(&ts->esi, ts->cl);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edi);
	add(&ts->ebp, 0x10);

loc_573940:
	and_(&ts->eax, 0xFFFFFEFF);
	mov(mv, x86::mem(ts->esp + 0x4C, 4), ts->eax);
	mov(&ts->eax, ts->esi);
	shr(&ts->eax, 0x10);
	shl(&ts->esi, 0x10);
	sub(&ts->ebp, 0x10);
	goto loc_5739CD;

loc_573956:
	test(&ts->eflags, ts->ah, 0x1);
	if (ts->eflags.zero) {
        goto loc_5739B9;
    }
	shl(&ts->esi, 0x8);
	sub(&ts->ebp, 0x8);
	if (!ts->eflags.sign) {
        goto loc_57398A;
    }
	movzx(mv, &ts->ecx, x86::mem(ts->edi, 1));
	shl(&ts->edx, 0x8);
	or_(&ts->edx, ts->ecx);
	movzx(mv, &ts->ecx, x86::mem(ts->edi + 0x1, 1));
	shl(&ts->edx, 0x8);
	or_(&ts->edx, ts->ecx);
	mov(&ts->ecx, ts->ebp);
	neg(&ts->ecx);
	add(&ts->edi, 0x2);
	mov(&ts->esi, ts->edx);
	shl(&ts->esi, ts->cl);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edi);
	add(&ts->ebp, 0x10);

loc_57398A:
	shl(&ts->esi, 0x10);
	sub(&ts->ebp, 0x10);
	if (!ts->eflags.sign) {
        goto loc_5739B9;
    }
	movzx(mv, &ts->ecx, x86::mem(ts->edi, 1));
	shl(&ts->edx, 0x8);
	or_(&ts->edx, ts->ecx);
	movzx(mv, &ts->ecx, x86::mem(ts->edi + 0x1, 1));
	shl(&ts->edx, 0x8);
	or_(&ts->edx, ts->ecx);
	mov(&ts->ecx, ts->ebp);
	neg(&ts->ecx);
	add(&ts->edi, 0x2);
	mov(&ts->esi, ts->edx);
	shl(&ts->esi, ts->cl);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edi);
	add(&ts->ebp, 0x10);

loc_5739B9:
	and_(&ts->eax, 0xFFFFFEFF);
	mov(mv, x86::mem(ts->esp + 0x4C, 4), ts->eax);
	mov(&ts->eax, ts->esi);
	shr(&ts->eax, 0x18);
	shl(&ts->esi, 0x8);
	sub(&ts->ebp, 0x8);

loc_5739CD:
	if (!ts->eflags.sign) {
        goto loc_5739F6;
    }
	movzx(mv, &ts->ecx, x86::mem(ts->edi, 1));
	shl(&ts->edx, 0x8);
	or_(&ts->edx, ts->ecx);
	movzx(mv, &ts->ecx, x86::mem(ts->edi + 0x1, 1));
	shl(&ts->edx, 0x8);
	or_(&ts->edx, ts->ecx);
	mov(&ts->ecx, ts->ebp);
	neg(&ts->ecx);
	mov(&ts->esi, ts->edx);
	add(&ts->edi, 0x2);
	shl(&ts->esi, ts->cl);
	add(&ts->ebp, 0x10);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edi);

loc_5739F6:
	mov(&ts->ecx, ts->esi);
	shr(&ts->ecx, 0x10);
	shl(&ts->esi, 0x10);
	sub(&ts->ebp, 0x10);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ecx);
	if (!ts->eflags.sign) {
        goto loc_573A32;
    }
	movzx(mv, &ts->ecx, x86::mem(ts->edi, 1));
	shl(&ts->edx, 0x8);
	or_(&ts->edx, ts->ecx);
	movzx(mv, &ts->ecx, x86::mem(ts->edi + 0x1, 1));
	shl(&ts->edx, 0x8);
	or_(&ts->edx, ts->ecx);
	mov(&ts->ecx, ts->ebp);
	neg(&ts->ecx);
	mov(&ts->esi, ts->edx);
	add(&ts->edi, 0x2);
	shl(&ts->esi, ts->cl);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edi);
	add(&ts->ebp, 0x10);

loc_573A32:
	shl(&ts->eax, 0x10);
	or_(&ts->ecx, ts->eax);
	mov(&ts->eax, ts->esi);
	shr(&ts->eax, 0x18);
	shl(&ts->esi, 0x8);
	sub(&ts->ebp, 0x8);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x44, 4), ts->eax);
	if (!ts->eflags.sign) {
        goto loc_573A73;
    }
	movzx(mv, &ts->eax, x86::mem(ts->edi, 1));
	movzx(mv, &ts->ecx, x86::mem(ts->edi + 0x1, 1));
	shl(&ts->edx, 0x8);
	or_(&ts->edx, ts->eax);
	shl(&ts->edx, 0x8);
	or_(&ts->edx, ts->ecx);
	mov(&ts->ecx, ts->ebp);
	neg(&ts->ecx);
	add(&ts->edi, 0x2);
	mov(&ts->esi, ts->edx);
	shl(&ts->esi, ts->cl);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edi);
	add(&ts->ebp, 0x10);

loc_573A73:
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0x1);
	goto loc_573A90;

loc_573A83:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	goto loc_573A90;

loc_573A90:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x2C, 4));
	shl(&ts->eax, 0x1);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	sub(&ts->eax, ts->ecx);
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	mov(mv, x86::mem(ts->esp + (ts->ecx*4) + 0x1D8, 4), ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_573ADF;
    }
	mov(&ts->ebx, ts->esi);
	shr(&ts->ebx, 0x1D);
	shl(&ts->esi, 0x3);
	sub(&ts->ebp, 0x3);
	if (!ts->eflags.sign) {
        goto loc_573AD7;
    }
	movzx(mv, &ts->eax, x86::mem(ts->edi, 1));
	movzx(mv, &ts->ecx, x86::mem(ts->edi + 0x1, 1));
	shl(&ts->edx, 0x8);
	or_(&ts->edx, ts->eax);
	shl(&ts->edx, 0x8);
	or_(&ts->edx, ts->ecx);
	mov(&ts->ecx, ts->ebp);
	neg(&ts->ecx);
	mov(&ts->esi, ts->edx);
	add(&ts->edi, 0x2);
	shl(&ts->esi, ts->cl);
	add(&ts->ebp, 0x10);

loc_573AD7:
	sub(&ts->ebx, 0x4);
	goto loc_573C61;

loc_573ADF:
	test(&ts->eflags, ts->esi, 0xFFFF0000);
	mov(&ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_573B50;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_573AF0:
	shl(&ts->esi, 0x1);
	inc(&ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_573AF0;
    }
	mov(&ts->ecx, 0x1);
	sub(&ts->ecx, ts->eax);
	add(&ts->ebp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8650F8, 4));
	shl(&ts->esi, 0x1);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_573B27;
    }
	mov(mv, &ts->ebx, x86::mem(0x8650F8, 4));
	mov(&ts->ecx, 0x20);
	sub(&ts->ecx, ts->ebx);
	mov(&ts->ebx, ts->esi);
	shr(&ts->ebx, ts->cl);
	mov(mv, &ts->ecx, x86::mem(0x8650F8, 4));
	shl(&ts->esi, ts->cl);
	sub(&ts->ebp, ts->ecx);

loc_573B27:
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_573B7E;
    }
	movzx(mv, &ts->ecx, x86::mem(ts->edi, 1));
	shl(&ts->edx, 0x8);
	or_(&ts->edx, ts->ecx);
	movzx(mv, &ts->ecx, x86::mem(ts->edi + 0x1, 1));
	shl(&ts->edx, 0x8);
	or_(&ts->edx, ts->ecx);
	mov(&ts->ecx, ts->ebp);
	neg(&ts->ecx);
	mov(&ts->esi, ts->edx);
	add(&ts->edi, 0x2);
	shl(&ts->esi, ts->cl);
	add(&ts->ebp, 0x10);
	goto loc_573B7E;

loc_573B50:
	mov(&ts->ebx, ts->esi);
	inc(&ts->eax);
	shr(&ts->ebx, 0x1F);
	shl(&ts->esi, 0x1);
	dec(&ts->ebp);
	if (!ts->eflags.sign) {
        goto loc_573B7A;
    }
	movzx(mv, &ts->ecx, x86::mem(ts->edi, 1));
	shl(&ts->edx, 0x8);
	or_(&ts->edx, ts->ecx);
	movzx(mv, &ts->ecx, x86::mem(ts->edi + 0x1, 1));
	shl(&ts->edx, 0x8);
	or_(&ts->edx, ts->ecx);
	mov(&ts->ecx, ts->ebp);
	neg(&ts->ecx);
	mov(&ts->esi, ts->edx);
	add(&ts->edi, 0x2);
	shl(&ts->esi, ts->cl);
	add(&ts->ebp, 0x10);

loc_573B7A:
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_573B50;
    }

loc_573B7E:
	cmp(&ts->eflags, ts->eax, 0x10);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_573C14;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax - 0x10, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_573BA7;
    }
	mov(&ts->ecx, 0x30);
	sub(&ts->ecx, ts->eax);
	mov(&ts->ebx, ts->esi);
	shr(&ts->ebx, ts->cl);
	lea(mv, &ts->ecx, x86::mem(ts->eax - 0x10, 4));
	shl(&ts->esi, ts->cl);
	mov(&ts->ecx, 0x10);
	sub(&ts->ecx, ts->eax);
	add(&ts->ebp, ts->ecx);

loc_573BA7:
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_573BCA;
    }
	movzx(mv, &ts->ecx, x86::mem(ts->edi, 1));
	shl(&ts->edx, 0x8);
	or_(&ts->edx, ts->ecx);
	movzx(mv, &ts->ecx, x86::mem(ts->edi + 0x1, 1));
	shl(&ts->edx, 0x8);
	or_(&ts->edx, ts->ecx);
	mov(&ts->ecx, ts->ebp);
	neg(&ts->ecx);
	mov(&ts->esi, ts->edx);
	add(&ts->edi, 0x2);
	shl(&ts->esi, ts->cl);
	add(&ts->ebp, 0x10);

loc_573BCA:
	mov(&ts->ecx, ts->esi);
	shr(&ts->ecx, 0x10);
	shl(&ts->esi, 0x10);
	sub(&ts->ebp, 0x10);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ecx);
	if (!ts->eflags.sign) {
        goto loc_573BFA;
    }
	movzx(mv, &ts->ecx, x86::mem(ts->edi, 1));
	shl(&ts->edx, 0x8);
	or_(&ts->edx, ts->ecx);
	movzx(mv, &ts->ecx, x86::mem(ts->edi + 0x1, 1));
	shl(&ts->edx, 0x8);
	or_(&ts->edx, ts->ecx);
	mov(&ts->ecx, ts->ebp);
	neg(&ts->ecx);
	mov(&ts->esi, ts->edx);
	add(&ts->edi, 0x2);
	shl(&ts->esi, ts->cl);
	add(&ts->ebp, 0x10);

loc_573BFA:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	shl(&ts->ebx, 0x10);
	or_(&ts->ebx, ts->ecx);
	mov(&ts->ecx, 0x1);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ecx);
	mov(&ts->ecx, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	goto loc_573C5B;

loc_573C14:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_573C29;
    }
	mov(&ts->ecx, 0x20);
	sub(&ts->ecx, ts->eax);
	mov(&ts->ebx, ts->esi);
	shr(&ts->ebx, ts->cl);
	mov(&ts->ecx, ts->eax);
	shl(&ts->esi, ts->cl);
	sub(&ts->ebp, ts->eax);

loc_573C29:
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_573C4C;
    }
	movzx(mv, &ts->ecx, x86::mem(ts->edi, 1));
	shl(&ts->edx, 0x8);
	or_(&ts->edx, ts->ecx);
	movzx(mv, &ts->ecx, x86::mem(ts->edi + 0x1, 1));
	shl(&ts->edx, 0x8);
	or_(&ts->edx, ts->ecx);
	mov(&ts->ecx, ts->ebp);
	neg(&ts->ecx);
	mov(&ts->esi, ts->edx);
	add(&ts->edi, 0x2);
	shl(&ts->esi, ts->cl);
	add(&ts->ebp, 0x10);

loc_573C4C:
	mov(&ts->ecx, 0x1);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ecx);
	mov(&ts->ecx, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));

loc_573C5B:
	shl(&ts->eax, ts->cl);
	lea(mv, &ts->ebx, x86::mem(ts->ebx + (ts->eax) - 0x4, 4));

loc_573C61:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x2C, 4));
	mov(mv, x86::mem(ts->esp + (ts->eax*4) + 0x58, 4), ts->ebx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	add(&ts->eax, ts->ebx);
	add(&ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_573C99;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	mov(&ts->ecx, 0x10);
	sub(&ts->ecx, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	shl(&ts->eax, ts->cl);
	and_(&ts->eax, 0xFFFF);

loc_573C99:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	mov(mv, x86::mem(ts->esp + (ts->ecx*4) + 0x98, 4), ts->eax);
	inc(&ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->ecx);
	xor_(&ts->ecx, ts->ecx);
	cmp(&ts->eflags, ts->ebx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_573A83;
    }
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_573A83;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	mov(mv, x86::mem(ts->esp + (ts->eax*4) + 0x94, 4), 0xFFFFFFFF);
	dec(&ts->eax);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xE0, 4));
	mov(&ts->ebx, 0x10);

loc_573CE3:
	mov(mv, x86::mem(ts->eax - 0x8, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax - 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	add(&ts->eax, 0x10);
	dec(&ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_573CE3;
    }
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x2C, 4));
	or_(&ts->al, 0xFF);
	cmp(&ts->eflags, ts->ebx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x1B, 1), ts->al);
	mov(mv, x86::mem(ts->esp + 0x38, 4), ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_573F17;
    }
	goto loc_573D10;

loc_573D0C:
	xor_(&ts->ecx, ts->ecx);
	mov(&ts->edi, ts->edi);

loc_573D10:
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->esi, ts->ecx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_573D4A;
    }
	mov(&ts->ebx, ts->esi);
	shr(&ts->ebx, 0x1D);
	shl(&ts->esi, 0x3);
	sub(&ts->ebp, 0x3);
	if (!ts->eflags.sign) {
        goto loc_573D42;
    }
	movzx(mv, &ts->ecx, x86::mem(ts->edi, 1));
	shl(&ts->edx, 0x8);
	or_(&ts->edx, ts->ecx);
	movzx(mv, &ts->ecx, x86::mem(ts->edi + 0x1, 1));
	shl(&ts->edx, 0x8);
	or_(&ts->edx, ts->ecx);
	mov(&ts->ecx, ts->ebp);
	neg(&ts->ecx);
	mov(&ts->esi, ts->edx);
	add(&ts->edi, 0x2);
	shl(&ts->esi, ts->cl);
	add(&ts->ebp, 0x10);

loc_573D42:
	sub(&ts->ebx, 0x4);
	goto loc_573EC8;

loc_573D4A:
	test(&ts->eflags, ts->esi, 0xFFFF0000);
	mov(&ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_573DB3;
    }

loc_573D57:
	shl(&ts->esi, 0x1);
	inc(&ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_573D57;
    }
	mov(&ts->ecx, 0x1);
	sub(&ts->ecx, ts->eax);
	add(&ts->ebp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8650F8, 4));
	shl(&ts->esi, 0x1);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_573D8E;
    }
	mov(mv, &ts->ebx, x86::mem(0x8650F8, 4));
	mov(&ts->ecx, 0x20);
	sub(&ts->ecx, ts->ebx);
	mov(&ts->ebx, ts->esi);
	shr(&ts->ebx, ts->cl);
	mov(mv, &ts->ecx, x86::mem(0x8650F8, 4));
	shl(&ts->esi, ts->cl);
	sub(&ts->ebp, ts->ecx);

loc_573D8E:
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_573DE1;
    }
	movzx(mv, &ts->ecx, x86::mem(ts->edi, 1));
	shl(&ts->edx, 0x8);
	or_(&ts->edx, ts->ecx);
	movzx(mv, &ts->ecx, x86::mem(ts->edi + 0x1, 1));
	shl(&ts->edx, 0x8);
	or_(&ts->edx, ts->ecx);
	mov(&ts->ecx, ts->ebp);
	neg(&ts->ecx);
	mov(&ts->esi, ts->edx);
	add(&ts->edi, 0x2);
	shl(&ts->esi, ts->cl);
	add(&ts->ebp, 0x10);
	goto loc_573DE1;

loc_573DB3:
	mov(&ts->ebx, ts->esi);
	inc(&ts->eax);
	shr(&ts->ebx, 0x1F);
	shl(&ts->esi, 0x1);
	dec(&ts->ebp);
	if (!ts->eflags.sign) {
        goto loc_573DDD;
    }
	movzx(mv, &ts->ecx, x86::mem(ts->edi, 1));
	shl(&ts->edx, 0x8);
	or_(&ts->edx, ts->ecx);
	movzx(mv, &ts->ecx, x86::mem(ts->edi + 0x1, 1));
	shl(&ts->edx, 0x8);
	or_(&ts->edx, ts->ecx);
	mov(&ts->ecx, ts->ebp);
	neg(&ts->ecx);
	mov(&ts->esi, ts->edx);
	add(&ts->edi, 0x2);
	shl(&ts->esi, ts->cl);
	add(&ts->ebp, 0x10);

loc_573DDD:
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_573DB3;
    }

loc_573DE1:
	cmp(&ts->eflags, ts->eax, 0x10);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_573E77;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax - 0x10, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_573E0A;
    }
	mov(&ts->ecx, 0x30);
	sub(&ts->ecx, ts->eax);
	mov(&ts->ebx, ts->esi);
	shr(&ts->ebx, ts->cl);
	lea(mv, &ts->ecx, x86::mem(ts->eax - 0x10, 4));
	shl(&ts->esi, ts->cl);
	mov(&ts->ecx, 0x10);
	sub(&ts->ecx, ts->eax);
	add(&ts->ebp, ts->ecx);

loc_573E0A:
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_573E2D;
    }
	movzx(mv, &ts->ecx, x86::mem(ts->edi, 1));
	shl(&ts->edx, 0x8);
	or_(&ts->edx, ts->ecx);
	movzx(mv, &ts->ecx, x86::mem(ts->edi + 0x1, 1));
	shl(&ts->edx, 0x8);
	or_(&ts->edx, ts->ecx);
	mov(&ts->ecx, ts->ebp);
	neg(&ts->ecx);
	mov(&ts->esi, ts->edx);
	add(&ts->edi, 0x2);
	shl(&ts->esi, ts->cl);
	add(&ts->ebp, 0x10);

loc_573E2D:
	mov(&ts->ecx, ts->esi);
	shr(&ts->ecx, 0x10);
	shl(&ts->esi, 0x10);
	sub(&ts->ebp, 0x10);
	mov(mv, x86::mem(ts->esp + 0x30, 4), ts->ecx);
	if (!ts->eflags.sign) {
        goto loc_573E5D;
    }
	movzx(mv, &ts->ecx, x86::mem(ts->edi, 1));
	shl(&ts->edx, 0x8);
	or_(&ts->edx, ts->ecx);
	movzx(mv, &ts->ecx, x86::mem(ts->edi + 0x1, 1));
	shl(&ts->edx, 0x8);
	or_(&ts->edx, ts->ecx);
	mov(&ts->ecx, ts->ebp);
	neg(&ts->ecx);
	mov(&ts->esi, ts->edx);
	add(&ts->edi, 0x2);
	shl(&ts->esi, ts->cl);
	add(&ts->ebp, 0x10);

loc_573E5D:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x30, 4));
	shl(&ts->ebx, 0x10);
	or_(&ts->ebx, ts->ecx);
	mov(&ts->ecx, 0x1);
	mov(mv, x86::mem(ts->esp + 0x30, 4), ts->ecx);
	mov(&ts->ecx, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x30, 4));
	goto loc_573EBE;

loc_573E77:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_573E8C;
    }
	mov(&ts->ecx, 0x20);
	sub(&ts->ecx, ts->eax);
	mov(&ts->ebx, ts->esi);
	shr(&ts->ebx, ts->cl);
	mov(&ts->ecx, ts->eax);
	shl(&ts->esi, ts->cl);
	sub(&ts->ebp, ts->eax);

loc_573E8C:
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_573EAF;
    }
	movzx(mv, &ts->ecx, x86::mem(ts->edi, 1));
	shl(&ts->edx, 0x8);
	or_(&ts->edx, ts->ecx);
	movzx(mv, &ts->ecx, x86::mem(ts->edi + 0x1, 1));
	shl(&ts->edx, 0x8);
	or_(&ts->edx, ts->ecx);
	mov(&ts->ecx, ts->ebp);
	neg(&ts->ecx);
	mov(&ts->esi, ts->edx);
	add(&ts->edi, 0x2);
	shl(&ts->esi, ts->cl);
	add(&ts->ebp, 0x10);

loc_573EAF:
	mov(&ts->ecx, 0x1);
	mov(mv, x86::mem(ts->esp + 0x30, 4), ts->ecx);
	mov(&ts->ecx, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x30, 4));

loc_573EBE:
	shl(&ts->eax, ts->cl);
	lea(mv, &ts->ebx, x86::mem(ts->ebx + (ts->eax) - 0x4, 4));
	mov(mv, &ts->al, x86::mem(ts->esp + 0x1B, 1));

loc_573EC8:
	inc(&ts->ebx);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_573ED0:
	inc(&ts->al);
	movzx(&ts->ecx, ts->al);
	cmp(mv, &ts->eflags, x86::mem(ts->esp + (ts->ecx) + 0xD8, 1), 0x0);
	if (!ts->eflags.zero) {
        goto loc_573EE0;
    }
	dec(&ts->ebx);

loc_573EE0:
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_573ED0;
    }
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x2C, 4));
	movzx(&ts->ecx, ts->al);
	mov(mv, x86::mem(ts->esp + (ts->ecx) + 0xD8, 1), 0x1);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x38, 4));
	mov(mv, x86::mem(ts->esp + (ts->ecx) + 0x318, 1), ts->al);
	inc(&ts->ecx);
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1B, 1), ts->al);
	mov(mv, x86::mem(ts->esp + 0x38, 4), ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_573D0C;
    }
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->edx);

loc_573F17:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x220, 4));
	mov(&ts->ebx, 0x10);
	mov(&ts->ecx, 0x40404040);

loc_573F28:
	mov(mv, x86::mem(ts->eax - 0x8, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax - 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	add(&ts->eax, 0x10);
	dec(&ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_573F28;
    }
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x318, 4));
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xD8, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x218, 4));
	mov(mv, x86::mem(ts->esp + 0x3C, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	mov(mv, x86::mem(ts->esp + 0x38, 4), ts->eax);
	mov(&ts->eax, 0x1);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_574070;
    }
	mov(&ts->ecx, 0x7);
	mov(mv, x86::mem(ts->esp + 0x30, 4), ts->ecx);
	goto loc_573F80;

loc_573F80:
	cmp(&ts->eflags, ts->ecx, 0xFFFFFFFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_574070;
    }
	mov(&ts->ebx, 0x1);
	shl(&ts->ebx, ts->cl);
	mov(mv, &ts->ecx, x86::mem(ts->esp + (ts->eax*4) + 0x58, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x54, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_57404D;
    }
	movzx(mv, &ts->ecx, x86::mem(ts->esp + 0x44, 1));
	mov(mv, x86::mem(ts->esp + 0x34, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + (ts->eax*4) + 0x58, 4));
	mov(mv, x86::mem(ts->esp + 0x40, 4), ts->ecx);

loc_573FB1:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	movzx(mv, &ts->ecx, x86::mem(ts->ecx, 1));
	mov(mv, x86::mem(ts->esp + 0x48, 4), ts->ecx);
	inc(mv, x86::mem(ts->esp + 0x28, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x34, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x48, 4), ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_573FD7;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x2C, 4));
	mov(mv, x86::mem(ts->esp + 0x50, 4), ts->eax);
	mov(&ts->eax, 0x60);

loc_573FD7:
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_57403F;
    }
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x38, 4));
	mov(&ts->ecx, ts->ebx);
	mov(&ts->bl, ts->al);
	mov(&ts->bh, ts->bl);
	mov(&ts->edx, ts->ecx);
	shr(&ts->ecx, 0x2);
	mov(&ts->eax, ts->ebx);
	shl(&ts->eax, 0x10);
	mov(&ts->ax, ts->bx);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(&ts->ecx, ts->edx);
	and_(&ts->ecx, 0x3);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	mov(mv, &ts->al, x86::mem(ts->esp + 0x48, 1));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x54, 4));
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x3C, 4));
	mov(&ts->bl, ts->al);
	mov(&ts->bh, ts->bl);
	mov(&ts->edx, ts->ecx);
	shr(&ts->ecx, 0x2);
	mov(&ts->eax, ts->ebx);
	shl(&ts->eax, 0x10);
	mov(&ts->ax, ts->bx);
	mov(&ts->ebx, ts->edx);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(&ts->ecx, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	and_(&ts->ecx, 0x3);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x3C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x38, 4));
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));
	add(&ts->ecx, ts->ebx);
	add(&ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x3C, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x38, 4), ts->eax);

loc_57403F:
	dec(mv, x86::mem(ts->esp + 0x40, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x2C, 4));
	if (!ts->eflags.zero) {
        goto loc_573FB1;
    }

loc_57404D:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x30, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x24, 4));
	inc(&ts->eax);
	dec(&ts->ecx);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x30, 4), ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_573F80;
    }
	goto loc_574070;

loc_574070:
	mov(&ts->ebx, ts->esi);
	shr(&ts->ebx, 0x18);
	movzx(mv, &ts->ecx, x86::mem(ts->esp + (ts->ebx) + 0x218, 1));
	sub(&ts->ebp, ts->ecx);
	if (ts->eflags.sign) {
        goto loc_57411C;
    }
	goto loc_574090;

loc_574090:
	mov(mv, &ts->bl, x86::mem(ts->esp + (ts->ebx) + 0xD8, 1));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	shl(&ts->esi, ts->cl);
	mov(mv, x86::mem(ts->eax, 1), ts->bl);
	inc(&ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	mov(&ts->ebx, ts->esi);
	shr(&ts->ebx, 0x18);
	movzx(mv, &ts->ecx, x86::mem(ts->esp + (ts->ebx) + 0x218, 1));
	sub(&ts->ebp, ts->ecx);
	if (ts->eflags.sign) {
        goto loc_57411C;
    }
	mov(mv, &ts->bl, x86::mem(ts->esp + (ts->ebx) + 0xD8, 1));
	shl(&ts->esi, ts->cl);
	mov(mv, x86::mem(ts->eax, 1), ts->bl);
	inc(&ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	mov(&ts->ebx, ts->esi);
	shr(&ts->ebx, 0x18);
	movzx(mv, &ts->ecx, x86::mem(ts->esp + (ts->ebx) + 0x218, 1));
	sub(&ts->ebp, ts->ecx);
	if (ts->eflags.sign) {
        goto loc_57411C;
    }
	mov(mv, &ts->bl, x86::mem(ts->esp + (ts->ebx) + 0xD8, 1));
	shl(&ts->esi, ts->cl);
	mov(mv, x86::mem(ts->eax, 1), ts->bl);
	inc(&ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	mov(&ts->ebx, ts->esi);
	shr(&ts->ebx, 0x18);
	movzx(mv, &ts->ecx, x86::mem(ts->esp + (ts->ebx) + 0x218, 1));
	sub(&ts->ebp, ts->ecx);
	if (ts->eflags.sign) {
        goto loc_57411C;
    }
	mov(mv, &ts->bl, x86::mem(ts->esp + (ts->ebx) + 0xD8, 1));
	shl(&ts->esi, ts->cl);
	mov(mv, x86::mem(ts->eax, 1), ts->bl);
	inc(&ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	mov(&ts->ebx, ts->esi);
	shr(&ts->ebx, 0x18);
	movzx(mv, &ts->ecx, x86::mem(ts->esp + (ts->ebx) + 0x218, 1));
	sub(&ts->ebp, ts->ecx);
	if (!ts->eflags.sign) {
        goto loc_574090;
    }

loc_57411C:
	add(&ts->ebp, 0x10);
	if (ts->eflags.sign) {
        goto loc_57415C;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	shr(&ts->esi, 0x18);
	mov(mv, &ts->cl, x86::mem(ts->esp + (ts->esi) + 0xD8, 1));
	mov(mv, x86::mem(ts->eax, 1), ts->cl);
	movzx(mv, &ts->ecx, x86::mem(ts->edi + 0x1, 1));
	inc(&ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	movzx(mv, &ts->eax, x86::mem(ts->edi, 1));
	shl(&ts->edx, 0x8);
	or_(&ts->edx, ts->eax);
	shl(&ts->edx, 0x8);
	or_(&ts->edx, ts->ecx);
	mov(&ts->ecx, 0x10);
	sub(&ts->ecx, ts->ebp);
	mov(&ts->eax, ts->edx);
	add(&ts->edi, 0x2);
	shl(&ts->eax, ts->cl);
	mov(&ts->esi, ts->eax);
	goto loc_574070;

loc_57415C:
	cmp(&ts->eflags, ts->ecx, 0x60);
	lea(mv, &ts->ebp, x86::mem(ts->ecx + (ts->ebp) - 0x10, 4));
	if (ts->eflags.zero) {
        goto loc_57417E;
    }
	mov(&ts->eax, ts->esi);
	shr(&ts->eax, 0x10);
	mov(&ts->ebx, 0x8);
	nop();

loc_574170:
	mov(mv, &ts->ecx, x86::mem(ts->esp + (ts->ebx*4) + 0x9C, 4));
	inc(&ts->ebx);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (!ts->eflags.carry) {
        goto loc_574170;
    }
	goto loc_574182;

loc_57417E:
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x50, 4));

loc_574182:
	mov(&ts->ecx, 0x20);
	sub(&ts->ecx, ts->ebx);
	mov(&ts->eax, ts->esi);
	shr(&ts->eax, ts->cl);
	mov(&ts->ecx, ts->ebx);
	shl(&ts->esi, ts->cl);
	sub(mv, &ts->eax, x86::mem(ts->esp + (ts->ebx*4) + 0x1D8, 4));
	mov(mv, &ts->al, x86::mem(ts->esp + (ts->eax) + 0x318, 1));
	sub(&ts->ebp, ts->ebx);
	mov(mv, &ts->bl, x86::mem(ts->esp + 0x44, 1));
	cmp(&ts->eflags, ts->al, ts->bl);
	if (ts->eflags.zero) {
        goto loc_5741BD;
    }
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5741C1;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->ecx, 1), ts->al);
	inc(&ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	goto loc_574070;

loc_5741BD:
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_5741E0;
    }

loc_5741C1:
	movzx(mv, &ts->ecx, x86::mem(ts->edi, 1));
	shl(&ts->edx, 0x8);
	or_(&ts->edx, ts->ecx);
	movzx(mv, &ts->ecx, x86::mem(ts->edi + 0x1, 1));
	shl(&ts->edx, 0x8);
	or_(&ts->edx, ts->ecx);
	mov(&ts->ecx, ts->ebp);
	neg(&ts->ecx);
	mov(&ts->esi, ts->edx);
	add(&ts->edi, 0x2);
	shl(&ts->esi, ts->cl);
	add(&ts->ebp, 0x10);

loc_5741E0:
	cmp(&ts->eflags, ts->al, ts->bl);
	if (ts->eflags.zero) {
        goto loc_5741F4;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->ecx, 1), ts->al);
	inc(&ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	goto loc_574070;

loc_5741F4:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	xor_(&ts->ebx, ts->ebx);
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_574236;
    }
	mov(&ts->ebx, ts->esi);
	shr(&ts->ebx, 0x1D);
	shl(&ts->esi, 0x3);
	sub(&ts->ebp, 0x3);
	if (!ts->eflags.sign) {
        goto loc_57422E;
    }
	movzx(mv, &ts->ecx, x86::mem(ts->edi, 1));
	shl(&ts->edx, 0x8);
	or_(&ts->edx, ts->ecx);
	movzx(mv, &ts->ecx, x86::mem(ts->edi + 0x1, 1));
	shl(&ts->edx, 0x8);
	or_(&ts->edx, ts->ecx);
	mov(&ts->ecx, ts->ebp);
	neg(&ts->ecx);
	mov(&ts->esi, ts->edx);
	add(&ts->edi, 0x2);
	shl(&ts->esi, ts->cl);
	add(&ts->ebp, 0x10);

loc_57422E:
	sub(&ts->ebx, 0x4);
	goto loc_5743B5;

loc_574236:
	test(&ts->eflags, ts->esi, 0xFFFF0000);
	mov(&ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_5742A0;
    }

loc_574243:
	shl(&ts->esi, 0x1);
	inc(&ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_574243;
    }
	mov(&ts->ecx, 0x1);
	sub(&ts->ecx, ts->eax);
	add(&ts->ebp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8650F8, 4));
	shl(&ts->esi, 0x1);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_57427A;
    }
	mov(mv, &ts->ebx, x86::mem(0x8650F8, 4));
	mov(&ts->ecx, 0x20);
	sub(&ts->ecx, ts->ebx);
	mov(&ts->ebx, ts->esi);
	shr(&ts->ebx, ts->cl);
	mov(mv, &ts->ecx, x86::mem(0x8650F8, 4));
	shl(&ts->esi, ts->cl);
	sub(&ts->ebp, ts->ecx);

loc_57427A:
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_5742CE;
    }
	movzx(mv, &ts->ecx, x86::mem(ts->edi, 1));
	shl(&ts->edx, 0x8);
	or_(&ts->edx, ts->ecx);
	movzx(mv, &ts->ecx, x86::mem(ts->edi + 0x1, 1));
	shl(&ts->edx, 0x8);
	or_(&ts->edx, ts->ecx);
	mov(&ts->ecx, ts->ebp);
	neg(&ts->ecx);
	mov(&ts->esi, ts->edx);
	add(&ts->edi, 0x2);
	shl(&ts->esi, ts->cl);
	add(&ts->ebp, 0x10);
	goto loc_5742CE;

loc_5742A0:
	mov(&ts->ebx, ts->esi);
	inc(&ts->eax);
	shr(&ts->ebx, 0x1F);
	shl(&ts->esi, 0x1);
	dec(&ts->ebp);
	if (!ts->eflags.sign) {
        goto loc_5742CA;
    }
	movzx(mv, &ts->ecx, x86::mem(ts->edi, 1));
	shl(&ts->edx, 0x8);
	or_(&ts->edx, ts->ecx);
	movzx(mv, &ts->ecx, x86::mem(ts->edi + 0x1, 1));
	shl(&ts->edx, 0x8);
	or_(&ts->edx, ts->ecx);
	mov(&ts->ecx, ts->ebp);
	neg(&ts->ecx);
	mov(&ts->esi, ts->edx);
	add(&ts->edi, 0x2);
	shl(&ts->esi, ts->cl);
	add(&ts->ebp, 0x10);

loc_5742CA:
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5742A0;
    }

loc_5742CE:
	cmp(&ts->eflags, ts->eax, 0x10);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_574364;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax - 0x10, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_5742F7;
    }
	mov(&ts->ecx, 0x30);
	sub(&ts->ecx, ts->eax);
	mov(&ts->ebx, ts->esi);
	shr(&ts->ebx, ts->cl);
	lea(mv, &ts->ecx, x86::mem(ts->eax - 0x10, 4));
	shl(&ts->esi, ts->cl);
	mov(&ts->ecx, 0x10);
	sub(&ts->ecx, ts->eax);
	add(&ts->ebp, ts->ecx);

loc_5742F7:
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_57431A;
    }
	movzx(mv, &ts->ecx, x86::mem(ts->edi, 1));
	shl(&ts->edx, 0x8);
	or_(&ts->edx, ts->ecx);
	movzx(mv, &ts->ecx, x86::mem(ts->edi + 0x1, 1));
	shl(&ts->edx, 0x8);
	or_(&ts->edx, ts->ecx);
	mov(&ts->ecx, ts->ebp);
	neg(&ts->ecx);
	mov(&ts->esi, ts->edx);
	add(&ts->edi, 0x2);
	shl(&ts->esi, ts->cl);
	add(&ts->ebp, 0x10);

loc_57431A:
	mov(&ts->ecx, ts->esi);
	shr(&ts->ecx, 0x10);
	shl(&ts->esi, 0x10);
	sub(&ts->ebp, 0x10);
	mov(mv, x86::mem(ts->esp + 0x34, 4), ts->ecx);
	if (!ts->eflags.sign) {
        goto loc_57434A;
    }
	movzx(mv, &ts->ecx, x86::mem(ts->edi, 1));
	shl(&ts->edx, 0x8);
	or_(&ts->edx, ts->ecx);
	movzx(mv, &ts->ecx, x86::mem(ts->edi + 0x1, 1));
	shl(&ts->edx, 0x8);
	or_(&ts->edx, ts->ecx);
	mov(&ts->ecx, ts->ebp);
	neg(&ts->ecx);
	mov(&ts->esi, ts->edx);
	add(&ts->edi, 0x2);
	shl(&ts->esi, ts->cl);
	add(&ts->ebp, 0x10);

loc_57434A:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x34, 4));
	shl(&ts->ebx, 0x10);
	or_(&ts->ebx, ts->ecx);
	mov(&ts->ecx, 0x1);
	mov(mv, x86::mem(ts->esp + 0x34, 4), ts->ecx);
	mov(&ts->ecx, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x34, 4));
	goto loc_5743AB;

loc_574364:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_574379;
    }
	mov(&ts->ecx, 0x20);
	sub(&ts->ecx, ts->eax);
	mov(&ts->ebx, ts->esi);
	shr(&ts->ebx, ts->cl);
	mov(&ts->ecx, ts->eax);
	shl(&ts->esi, ts->cl);
	sub(&ts->ebp, ts->eax);

loc_574379:
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_57439C;
    }
	movzx(mv, &ts->ecx, x86::mem(ts->edi, 1));
	shl(&ts->edx, 0x8);
	or_(&ts->edx, ts->ecx);
	movzx(mv, &ts->ecx, x86::mem(ts->edi + 0x1, 1));
	shl(&ts->edx, 0x8);
	or_(&ts->edx, ts->ecx);
	mov(&ts->ecx, ts->ebp);
	neg(&ts->ecx);
	mov(&ts->esi, ts->edx);
	add(&ts->edi, 0x2);
	shl(&ts->esi, ts->cl);
	add(&ts->ebp, 0x10);

loc_57439C:
	mov(&ts->ecx, 0x1);
	mov(mv, x86::mem(ts->esp + 0x34, 4), ts->ecx);
	mov(&ts->ecx, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x34, 4));

loc_5743AB:
	shl(&ts->eax, ts->cl);
	lea(mv, &ts->ebx, x86::mem(ts->ebx + (ts->eax) - 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));

loc_5743B5:
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5743D2;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	add(&ts->ebx, ts->ecx);
	mov(mv, &ts->cl, x86::mem(ts->ecx - 0x1, 1));

loc_5743C2:
	mov(mv, x86::mem(ts->eax, 1), ts->cl);
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.carry) {
        goto loc_5743C2;
    }
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	goto loc_574070;

loc_5743D2:
	mov(&ts->eax, ts->esi);
	shr(&ts->eax, 0x1F);
	shl(&ts->esi, 0x1);
	dec(&ts->ebp);
	if (!ts->eflags.sign) {
        goto loc_5743FB;
    }
	movzx(mv, &ts->ecx, x86::mem(ts->edi, 1));
	shl(&ts->edx, 0x8);
	or_(&ts->edx, ts->ecx);
	movzx(mv, &ts->ecx, x86::mem(ts->edi + 0x1, 1));
	shl(&ts->edx, 0x8);
	or_(&ts->edx, ts->ecx);
	mov(&ts->ecx, ts->ebp);
	neg(&ts->ecx);
	mov(&ts->esi, ts->edx);
	add(&ts->edi, 0x2);
	shl(&ts->esi, ts->cl);
	add(&ts->ebp, 0x10);

loc_5743FB:
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_57443B;
    }
	mov(&ts->eax, ts->esi);
	shr(&ts->eax, 0x18);
	shl(&ts->esi, 0x8);
	sub(&ts->ebp, 0x8);
	if (!ts->eflags.sign) {
        goto loc_57442B;
    }
	movzx(mv, &ts->ecx, x86::mem(ts->edi, 1));
	shl(&ts->edx, 0x8);
	or_(&ts->edx, ts->ecx);
	movzx(mv, &ts->ecx, x86::mem(ts->edi + 0x1, 1));
	shl(&ts->edx, 0x8);
	or_(&ts->edx, ts->ecx);
	mov(&ts->ecx, ts->ebp);
	neg(&ts->ecx);
	mov(&ts->esi, ts->edx);
	add(&ts->edi, 0x2);
	shl(&ts->esi, ts->cl);
	add(&ts->ebp, 0x10);

loc_57442B:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->ecx, 1), ts->al);
	inc(&ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	goto loc_574070;

loc_57443B:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4C, 4));
	cmp(&ts->eflags, ts->eax, 0x32FB);
	pop(mv, &ts->esp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_57448D;
    }
	cmp(&ts->eflags, ts->eax, 0xB2FB);
	if (ts->eflags.zero) {
        goto loc_57448D;
    }
	cmp(&ts->eflags, ts->eax, 0x34FB);
	if (ts->eflags.zero) {
        goto loc_57445C;
    }
	cmp(&ts->eflags, ts->eax, 0xB4FB);
	if (!ts->eflags.zero) {
        goto loc_5744AC;
    }

loc_57445C:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x418, 4));
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x1C, 4));
	add(&ts->esi, ts->eax);
	xor_(&ts->ecx, ts->ecx);
	xor_(&ts->edx, ts->edx);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.carry) {
        goto loc_5744AC;
    }

loc_574471:
	movzx(mv, &ts->edi, x86::mem(ts->eax, 1));
	add(&ts->ecx, ts->edi);
	add(&ts->edx, ts->ecx);
	mov(mv, x86::mem(ts->eax, 1), ts->dl);
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.carry) {
        goto loc_574471;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x408);
	retn(mv, &ts->esp);

loc_57448D:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x418, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	add(&ts->edx, ts->eax);
	xor_(&ts->ecx, ts->ecx);
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (!ts->eflags.carry) {
        goto loc_5744AC;
    }

loc_5744A0:
	movzx(mv, &ts->esi, x86::mem(ts->eax, 1));
	add(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->eax, 1), ts->cl);
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (ts->eflags.carry) {
        goto loc_5744A0;
    }

loc_5744AC:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));

loc_5744B0:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x408);
	retn(mv, &ts->esp);
}

void sub_574630(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	cmp(&ts->eflags, ts->eax, 0x57574152);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_574659;
    }
	if (ts->eflags.zero) {
        goto loc_57464D;
    }
	cmp(&ts->eflags, ts->eax, 0x46465548);
	if (ts->eflags.zero) {
        goto loc_57464D;
    }
	cmp(&ts->eflags, ts->eax, 0x504D4F43);
	if (!ts->eflags.zero) {
        goto loc_574660;
    }

loc_57464D:
	mov(mv, &ts->dl, x86::mem(ts->ecx + 0x4, 1));
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->dl, 0x1);
	setz(ts->eflags, &ts->al);
	retn(mv, &ts->esp);

loc_574659:
	cmp(&ts->eflags, ts->eax, 0x5A4C444A);
	if (ts->eflags.zero) {
        goto loc_574663;
    }

loc_574660:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_574663:
	mov(mv, &ts->dl, x86::mem(ts->ecx + 0x4, 1));
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->dl, 0x2);
	setz(ts->eflags, &ts->al);
	retn(mv, &ts->esp);
}

void sub_574670(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_5746D4;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_5746D4;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	cmp(&ts->eflags, ts->eax, 0x57574152);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_5746C0;
    }
	if (ts->eflags.zero) {
        goto loc_5746B3;
    }
	cmp(&ts->eflags, ts->eax, 0x46465548);
	if (ts->eflags.zero) {
        goto loc_5746A6;
    }
	cmp(&ts->eflags, ts->eax, 0x504D4F43);
	if (!ts->eflags.zero) {
        goto loc_5746D4;
    }
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->ecx);
	goto loc_574530;

loc_5746A6:
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->ecx);
	goto loc_5744C0;

loc_5746B3:
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->ecx);
	goto loc_5744F0;

loc_5746C0:
	cmp(&ts->eflags, ts->eax, 0x5A4C444A);
	if (!ts->eflags.zero) {
        goto loc_5746D4;
    }
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->ecx);
	goto loc_573700;

loc_5746D4:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_573700:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx, 4));
	sub(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->ecx, 0x5A4C444A);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));
	mov(&ts->eax, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_57371E;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->edx + 0x4, 1), 0x2);
	if (ts->eflags.zero) {
        goto loc_573725;
    }

loc_57371E:
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->edi);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);

loc_573725:
	push(mv, &ts->esp, ts->ebx);
	movzx(mv, &ts->bx, x86::mem(ts->edx + 0x10, 1));
	lea(mv, &ts->ecx, x86::mem(ts->edx + 0x8, 4));
	add(&ts->edx, 0x10);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx, 4));
	add(&ts->esi, ts->edi);
	add(&ts->edx, 0x2);
	or_(&ts->ebx, 0x100);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebx);
	movzx(mv, &ts->bx, x86::mem(ts->edx - 0x1, 1));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	or_(&ts->ebx, 0x100);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->eax + 0xC, 4));
	sub(&ts->ebx, 0x12);
	if (ts->eflags.zero) {
        goto loc_573830;
    }
	push(mv, &ts->esp, ts->ebp);

loc_573767:
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x1C, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_5737DE;
    }
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x20, 1), 0x1);
	movzx(mv, &ts->esi, x86::mem(ts->edx + 0x1, 1));
	mov(&ts->ebp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_5737A0;
    }
	movzx(mv, &ts->ecx, x86::mem(ts->edx, 1));
	mov(&ts->eax, ts->ecx);
	and_(&ts->eax, 0xFFFFFFF0);
	shl(&ts->eax, 0x4);
	or_(&ts->eax, ts->esi);
	and_(&ts->ecx, 0xF);
	add(&ts->eax, 0x3);
	inc(&ts->ecx);
	xor_(&ts->esi, ts->esi);
	sub(&ts->ebp, ts->ecx);

loc_573793:
	mov(mv, &ts->cl, x86::mem(ts->esi + (ts->ebp), 1));
	mov(mv, x86::mem(ts->esi + (ts->edi), 1), ts->cl);
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_573793;
    }
	goto loc_5737CB;

loc_5737A0:
	movzx(mv, &ts->eax, x86::mem(ts->edx, 1));
	mov(&ts->ecx, ts->eax);
	and_(&ts->ecx, 0xFFFFFFE0);
	shl(&ts->ecx, 0x3);
	or_(&ts->ecx, ts->esi);
	and_(&ts->eax, 0x1F);
	add(&ts->ecx, 0x11);
	add(&ts->eax, 0x3);
	xor_(&ts->esi, ts->esi);
	sub(&ts->ebp, ts->ecx);
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_5737C0:
	mov(mv, &ts->cl, x86::mem(ts->esi + (ts->ebp), 1));
	mov(mv, x86::mem(ts->esi + (ts->edi), 1), ts->cl);
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5737C0;
    }

loc_5737CB:
	sar(mv, x86::mem(ts->esp + 0x20, 2), 0x1);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x10, 4));
	add(&ts->edx, 0x2);
	sub(&ts->ebx, 0x2);
	add(&ts->edi, ts->eax);
	goto loc_5737E9;

loc_5737DE:
	cmp(&ts->eflags, ts->edi, ts->esi);
	if (!ts->eflags.carry) {
        goto loc_5737E8;
    }
	mov(mv, &ts->al, x86::mem(ts->edx, 1));
	mov(mv, x86::mem(ts->edi, 1), ts->al);
	inc(&ts->edi);
	inc(&ts->edx);

loc_5737E8:
	dec(&ts->ebx);

loc_5737E9:
	mov(mv, &ts->ax, x86::mem(ts->esp + 0x1C, 2));
	sar(&ts->ax, 0x1);
	cmp(&ts->eflags, ts->ax, 0x1);
	mov(mv, x86::mem(ts->esp + 0x1C, 2), ts->ax);
	if (!ts->eflags.zero) {
        goto loc_57380C;
    }
	movzx(mv, &ts->cx, x86::mem(ts->edx, 1));
	or_(&ts->ecx, 0x100);
	inc(&ts->edx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ecx);
	dec(&ts->ebx);

loc_57380C:
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x20, 2), 0x1);
	if (!ts->eflags.zero) {
        goto loc_573823;
    }
	movzx(mv, &ts->ax, x86::mem(ts->edx, 1));
	or_(&ts->eax, 0x100);
	inc(&ts->edx);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->eax);
	dec(&ts->ebx);

loc_573823:
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_573767;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	pop(mv, &ts->esp, ts->ebp);

loc_573830:
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);

loc_5744C0:
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->esi, 4), 0x46465548);
	if (!ts->eflags.zero) {
        goto loc_5744E8;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x4, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_5744E8;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	game::sub_573840(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_5744E8:
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_5744F0:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), 0x57574152);
	if (!ts->eflags.zero) {
        goto loc_574522;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x4, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_574522;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->edx, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	shr(&ts->ecx, 0x2);
	lea(mv, &ts->esi, x86::mem(ts->eax + 0x10, 4));
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->edx);
	and_(&ts->ecx, 0x3);
	movs(mv, x86::mem(ts->edi, 1), x86::mem(ts->esi, 1));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_574522:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_574530:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_574625;
    }
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x18, 4));
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_574625;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx, 4), 0x504D4F43);
	mov(mv, &ts->ebp, x86::mem(ts->ecx + 0xC, 4));
	if (!ts->eflags.zero) {
        goto loc_574625;
    }
	mov(&ts->edx, 0x1);
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x6, 2), ts->dx);
	lea(mv, &ts->edi, x86::mem(ts->ecx + (ts->ebp), 4));
	lea(mv, &ts->esi, x86::mem(ts->ecx + 0x10, 4));
	mov(&ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edi);
	if (!ts->eflags.zero) {
        goto loc_57458D;
    }
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	mov(&ts->eax, ts->ecx);
	shr(&ts->ecx, 0x2);
	mov(&ts->edi, ts->ebx);
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->eax);
	and_(&ts->ecx, 0x3);
	movs(mv, x86::mem(ts->edi, 1), x86::mem(ts->esi, 1));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	lea(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_57458D:
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_57461E;
    }

loc_574595:
	cmp(&ts->eflags, ts->edx, 0x1);
	if (!ts->eflags.zero) {
        goto loc_5745AC;
    }
	movzx(mv, &ts->edx, x86::mem(ts->esi, 1));
	or_(&ts->edx, 0x10000);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, &ts->ch, x86::mem(ts->esi + 0x1, 1));
	inc(&ts->esi);
	or_(&ts->edx, ts->ecx);
	inc(&ts->esi);

loc_5745AC:
	lea(mv, &ts->ecx, x86::mem(ts->edi - 0x20, 4));
	cmp(&ts->eflags, ts->ecx, ts->esi);
	sbb(&ts->edi, ts->edi);
	and_(&ts->edi, 0xFFFFFFF1);
	add(&ts->edi, 0x10);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_5745C0:
	test(&ts->eflags, ts->dl, 0x1);
	if (ts->eflags.zero) {
        goto loc_574603;
    }
	movzx(mv, &ts->ebp, x86::mem(ts->esi, 1));
	movzx(mv, &ts->ecx, x86::mem(ts->esi + 0x1, 1));
	inc(&ts->esi);
	mov(&ts->ebx, ts->ebp);
	and_(&ts->ebx, 0xF0);
	shl(&ts->ebx, 0x4);
	or_(&ts->ebx, ts->ecx);
	mov(&ts->ecx, ts->eax);
	sub(&ts->ecx, ts->ebx);
	mov(mv, &ts->bl, x86::mem(ts->ecx, 1));
	inc(&ts->esi);
	mov(mv, x86::mem(ts->eax, 1), ts->bl);
	mov(mv, &ts->bl, x86::mem(ts->ecx + 0x1, 1));
	inc(&ts->eax);
	inc(&ts->ecx);
	mov(mv, x86::mem(ts->eax, 1), ts->bl);
	mov(mv, &ts->bl, x86::mem(ts->ecx + 0x1, 1));
	inc(&ts->eax);
	inc(&ts->ecx);
	mov(mv, x86::mem(ts->eax, 1), ts->bl);
	inc(&ts->eax);
	inc(&ts->ecx);
	and_(&ts->ebp, 0xF);
	if (ts->eflags.zero) {
        goto loc_574609;
    }

loc_5745F8:
	mov(mv, &ts->bl, x86::mem(ts->ecx, 1));
	mov(mv, x86::mem(ts->eax, 1), ts->bl);
	inc(&ts->eax);
	inc(&ts->ecx);
	dec(&ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_5745F8;
    }
	goto loc_574609;

loc_574603:
	mov(mv, &ts->cl, x86::mem(ts->esi, 1));
	mov(mv, x86::mem(ts->eax, 1), ts->cl);
	inc(&ts->eax);
	inc(&ts->esi);

loc_574609:
	shr(&ts->edx, 0x1);
	dec(&ts->edi);
	if (!ts->eflags.zero) {
        goto loc_5745C0;
    }
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_574595;
    }
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x18, 4));

loc_57461E:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	sub(&ts->eax, ts->ebx);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_574625:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_5746E0(x86::thread_state* ts, x86::memory_view* mv) {
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fabs(&ts->fp, x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x10, 4));
	fcompp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.parity) {
        goto loc_574726;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	fabs(&ts->fp, x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x14, 4));
	fcompp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.parity) {
        goto loc_574726;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	fabs(&ts->fp, x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x18, 4));
	fcompp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.parity) {
        goto loc_574726;
    }
	mov(&ts->eax, 0x1);
	retn(mv, &ts->esp, 0xC);

loc_574726:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp, 0xC);
}

void sub_574730(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	movsx(mv, &ts->edx, x86::mem(ts->eax + 0xE, 2));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	xor_(&ts->ebx, ts->ebx);
	test(&ts->eflags, ts->edx, ts->edx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_5747C5;
    }
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x20, 4));
	lea(mv, &ts->edi, x86::mem(ts->eax + 0x1C, 4));
	nop();

loc_574750:
	movsx(mv, &ts->eax, x86::mem(ts->edi, 2));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	shl(&ts->ecx, 0x4);
	add(&ts->ecx, ts->eax);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fabs(&ts->fp, x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x10, 4));
	fcompp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.parity) {
        goto loc_5747BD;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	fabs(&ts->fp, x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x14, 4));
	fcompp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.parity) {
        goto loc_5747BD;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	fabs(&ts->fp, x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x18, 4));
	fcompp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.parity) {
        goto loc_5747BD;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0xE, 2), 0x0);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_5747CE;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_574730(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_5747C7;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));

loc_5747BD:
	inc(&ts->ebx);
	add(&ts->edi, 0x2);
	cmp(&ts->eflags, ts->ebx, ts->edx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_574750;
    }

loc_5747C5:
	xor_(&ts->eax, ts->eax);

loc_5747C7:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_5747CE:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	mov(&ts->eax, ts->ecx);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);
}

void sub_5747E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->ebx, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_5747EF;
    }
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0xC);

loc_5747EF:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	game::sub_5746E0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_57480F;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0xC);

loc_57480F:
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0xE, 2), 0x0);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_57481E;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->eax, ts->ecx);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0xC);

loc_57481E:
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebx);
	game::sub_574730(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0xC);
}

void sub_574830(x86::thread_state* ts, x86::memory_view* mv) {
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	mov(mv, x86::mem(ts->ecx + 0x18, 4), ts->eax);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC, 4));
	mov(mv, x86::mem(ts->ecx + 0x1C, 4), ts->edx);
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787ADC, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x14, 4));
	retn(mv, &ts->esp);
}

void sub_574870(x86::thread_state* ts, x86::memory_view* mv) {
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x10, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x1C, 4));
	retn(mv, &ts->esp, 0x4);
}

void sub_574890(x86::thread_state* ts, x86::memory_view* mv) {
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7859D0, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x14, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	retn(mv, &ts->esp, 0x4);
}

void sub_5748B0(x86::thread_state* ts, x86::memory_view* mv) {
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	retn(mv, &ts->esp);
}

void sub_5748C0(x86::thread_state* ts, x86::memory_view* mv) {
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x24, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x24, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787ADC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x14, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x18, 4));
	fmulp(&ts->fp, x86::fp_index(2), x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fabs(&ts->fp, x86::fp_index(0));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_574909;
    }
	fdiv(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x24, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	retn(mv, &ts->esp, 0x4);

loc_574909:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	retn(mv, &ts->esp, 0x4);
}

void sub_574910(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0xC);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	xor_(&ts->dl, ts->dl);
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x24, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x14, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7859D0, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fabs(&ts->fp, x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7859D0, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmulp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fabs(&ts->fp, x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_57498D;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	mov(&ts->dl, 0x1);
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));

loc_57498D:
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_5749A0;
    }
	fdivrp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	goto loc_5749A6;

loc_5749A0:
	test(&ts->eflags, ts->dl, ts->dl);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	if (ts->eflags.zero) {
        goto loc_5749CF;
    }

loc_5749A6:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x24, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmulp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x14, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fsub(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x786D94, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x10, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));

loc_5749CF:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp, 0x4);
}

void sub_5749E0(x86::thread_state* ts, x86::memory_view* mv) {
	movsx(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 2));
	sub(&ts->eax, 0x0);
	if (ts->eflags.zero) {
        goto locret_574AFE;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_574A77;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto locret_574AFE;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x2E, 2), 0x0);
	mov(mv, x86::mem(ts->ecx + 0x20, 4), 0x0);
	if (!ts->eflags.zero) {
        goto loc_574A0F;
    }
	mov(mv, x86::mem(ts->ecx + 0x2C, 2), 0x1);

loc_574A0F:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_574A2A;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_5748C0(ts, mv);

loc_574A2A:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC, 4));
	mov(mv, x86::mem(ts->ecx + 0x1C, 4), ts->eax);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	mov(mv, x86::mem(ts->ecx + 0x18, 4), ts->edx);
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787ADC, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x14, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_574A77;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_574910(ts, mv);

loc_574A77:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x24, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7845A0, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_574A96;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x24, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x20, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x20, 4));
	goto loc_574A9D;

loc_574A96:
	mov(mv, x86::mem(ts->ecx + 0x20, 4), 0x3F800000);

loc_574A9D:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x20, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x28, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (!ts->eflags.zero) {
        goto loc_574ACE;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x28, 4));
	mov(mv, x86::mem(ts->ecx + 0x2C, 2), 0x0);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (!ts->eflags.zero) {
        goto locret_574AFE;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0xC, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	retn(mv, &ts->esp, 0xC);

loc_574ACE:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x20, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x10, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x14, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x18, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x1C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787ADC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x14, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x18, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));

locret_574AFE:
	retn(mv, &ts->esp, 0xC);
}

void sub_574B10(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	mov(&ts->edx, 0x2);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_574B2E;
    }
	mov(mv, x86::mem(ts->ecx + 0x2C, 2), ts->dx);

loc_574B2E:
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x30, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x38, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto locret_574B3F;
    }
	mov(mv, x86::mem(ts->ecx + 0x5C, 2), ts->dx);

locret_574B3F:
	retn(mv, &ts->esp, 0x4);
}

void sub_574B50(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	mov(&ts->edx, 0x2);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_574B6F;
    }
	mov(mv, x86::mem(ts->ecx + 0x2C, 2), ts->dx);

loc_574B6F:
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x34, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto locret_574B80;
    }
	mov(mv, x86::mem(ts->ecx + 0x5C, 2), ts->dx);

locret_574B80:
	retn(mv, &ts->esp, 0x4);
}

void sub_574B90(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	mov(&ts->edx, 0x2);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_574BAE;
    }
	mov(mv, x86::mem(ts->ecx + 0x2C, 2), ts->dx);

loc_574BAE:
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x38, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x30, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto locret_574BBF;
    }
	mov(mv, x86::mem(ts->ecx + 0x5C, 2), ts->dx);

locret_574BBF:
	retn(mv, &ts->esp, 0x4);
}

void sub_574BD0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x3C, 4));
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->eax);
	retn(mv, &ts->esp, 0x4);
}

void sub_574BF0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->edx);
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x30, 4));
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	retn(mv, &ts->esp, 0x4);
}

void sub_574C10(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->edx);
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x34, 4));
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	retn(mv, &ts->esp, 0x4);
}

void sub_574C30(x86::thread_state* ts, x86::memory_view* mv) {
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x10, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x1C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x40, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x44, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x48, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	retn(mv, &ts->esp, 0x8);
}

void sub_574C70(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->edx);
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x38, 4));
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	retn(mv, &ts->esp, 0x4);
}

void sub_574C90(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_570AE0(ts, mv);
	retn(mv, &ts->esp, 0x4);
}

void sub_574CB0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_570B40(ts, mv);
	retn(mv, &ts->esp, 0x4);
}

void sub_574CD0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_570BA0(ts, mv);
	retn(mv, &ts->esp, 0x4);
}

void sub_574CF0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x3C, 4));
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x6C, 4));
	retn(mv, &ts->esp, 0x4);
}

void sub_574D10(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x54, 4));
	mov(mv, x86::mem(ts->ecx + 0x24, 4), ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x84, 4));
	retn(mv, &ts->esp, 0x4);
}

void sub_574D30(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x30, 4));
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x60, 4));
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ecx);
	retn(mv, &ts->esp, 0x4);
}

void sub_574D50(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x34, 4));
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x64, 4));
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ecx);
	retn(mv, &ts->esp, 0x4);
}

void sub_574D70(x86::thread_state* ts, x86::memory_view* mv) {
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x10, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x1C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x40, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x44, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x48, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x70, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x74, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x78, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x7C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	retn(mv, &ts->esp, 0x8);
}

void sub_574DD0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x38, 4));
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x68, 4));
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ecx);
	retn(mv, &ts->esp, 0x4);
}

void sub_574DF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->esi, ts->ecx);
	game::sub_5749E0(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	game::sub_5749E0(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x60, 4));
	game::sub_5749E0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0xC);
}

void sub_574E30(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	movsx(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 2));
	sub(&ts->eax, 0x0);
	if (ts->eflags.zero) {
        goto locret_574F33;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_574ECB;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto locret_574F33;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x2E, 2), 0x0);
	mov(mv, x86::mem(ts->ecx + 0x20, 4), 0x0);
	if (!ts->eflags.zero) {
        goto loc_574E63;
    }
	mov(mv, x86::mem(ts->ecx + 0x2C, 2), 0x1);

loc_574E63:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_574E7E;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_5748C0(ts, mv);

loc_574E7E:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC, 4));
	mov(mv, x86::mem(ts->ecx + 0x1C, 4), ts->eax);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	mov(mv, x86::mem(ts->ecx + 0x18, 4), ts->edx);
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787ADC, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x14, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_574ECB;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_574910(ts, mv);

loc_574ECB:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x24, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x20, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x28, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x20, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (!ts->eflags.zero) {
        goto loc_574F06;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	mov(mv, x86::mem(ts->ecx + 0x2C, 2), 0x0);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x28, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (!ts->eflags.zero) {
        goto locret_574F33;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0xC, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	retn(mv, &ts->esp);

loc_574F06:
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x10, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x14, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x18, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x1C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787ADC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x14, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x18, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));

locret_574F33:
	retn(mv, &ts->esp);
}

void sub_574F40(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	game::sub_574E30(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->esi);
	add(&ts->edi, 0x30);
	push(mv, &ts->esp, ts->edi);
	game::sub_574E30(ts, mv);
	add(&ts->esp, 0x20);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_574F70(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	mov(&ts->eax, ts->edi);
	cdq(&ts->eax, ts->edx);
	and_(&ts->edx, 0x7);
	add(&ts->eax, ts->edx);
	mov(&ts->esi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	sar(&ts->esi, 0x3);
	add(&ts->esi, ts->ecx);
	and_(&ts->edi, 0x7);
	xor_(&ts->ebp, ts->ebp);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_574FC4;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ebx);

loc_574F98:
	mov(&ts->ecx, ts->ebp);
	mov(&ts->edx, ts->eax);
	sar(&ts->edx, ts->cl);
	mov(&ts->ecx, ts->edi);
	mov(&ts->bl, 0x1);
	shl(&ts->bl, ts->cl);
	and_(&ts->dl, 0x1);
	shl(&ts->dl, ts->cl);
	mov(mv, &ts->cl, x86::mem(ts->esi, 1));
	not(&ts->bl);
	and_(&ts->bl, ts->cl);
	or_(&ts->dl, ts->bl);
	inc(&ts->edi);
	and_(&ts->edi, 0x7);
	mov(mv, x86::mem(ts->esi, 1), ts->dl);
	if (!ts->eflags.zero) {
        goto loc_574FBA;
    }
	inc(&ts->esi);

loc_574FBA:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	inc(&ts->ebp);
	cmp(&ts->eflags, ts->ebp, ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_574F98;
    }
	pop(mv, &ts->esp, ts->ebx);

loc_574FC4:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0xC);
}

void sub_574FD0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x8, 4));
	mov(&ts->eax, ts->ebx);
	cdq(&ts->eax, ts->edx);
	and_(&ts->edx, 0x7);
	add(&ts->edx, ts->eax);
	push(mv, &ts->esp, ts->esi);
	sar(&ts->edx, 0x3);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));
	add(&ts->edx, ts->ecx);
	and_(&ts->ebx, 0x7);
	xor_(&ts->eax, ts->eax);
	xor_(&ts->esi, ts->esi);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_575011;
    }
	push(mv, &ts->esp, ts->ebp);

loc_574FF4:
	movzx(mv, &ts->ebp, x86::mem(ts->edx, 1));
	mov(&ts->cl, ts->bl);
	shr(&ts->ebp, ts->cl);
	mov(&ts->ecx, ts->esi);
	and_(&ts->ebp, 0x1);
	shl(&ts->ebp, ts->cl);
	or_(&ts->eax, ts->ebp);
	inc(&ts->ebx);
	and_(&ts->ebx, 0x7);
	if (!ts->eflags.zero) {
        goto loc_57500B;
    }
	inc(&ts->edx);

loc_57500B:
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_574FF4;
    }
	pop(mv, &ts->esp, ts->ebp);

loc_575011:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x8);
}

void sub_575020(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(&ts->edx, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->eax*8), 4));
	lea(mv, &ts->ecx, x86::mem(0x30, 4));
	mov(mv, x86::mem(ts->edx + 0xC, 4), ts->ecx);
	shl(&ts->ecx, 0x3);
	mov(mv, x86::mem(ts->edx + 0x8, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(ts->edx + 0x14, 4), ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	add(&ts->ecx, 0xFFFFFFD0);
	push(mv, &ts->esp, ts->esi);
	xor_(&ts->esi, ts->esi);
	mov(mv, x86::mem(ts->edx + 0x18, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	mov(&ts->ebx, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->edx + 0x1C, 4), ts->eax);
	shr(&ts->ecx, 0x2);
	mov(mv, x86::mem(ts->edx + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->edx + 0x10, 4), ts->esi);
	mov(mv, x86::mem(ts->edx + 0x20, 4), ts->esi);
	mov(mv, x86::mem(ts->edx + 0x24, 4), ts->esi);
	mov(mv, x86::mem(ts->edx + 0x28, 4), ts->esi);
	mov(mv, x86::mem(ts->edx, 4), 0x12345678);
	xor_(&ts->eax, ts->eax);
	lea(mv, &ts->edi, x86::mem(ts->edx + 0x30, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(&ts->ecx, ts->ebx);
	and_(&ts->ecx, 0x3);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->edx + 0x2C, 4), ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0xC);
}

void sub_575090(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ebx, ts->ecx);
	mov(mv, &ts->ebp, x86::mem(ts->ebx + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ebx + 0xC, 4));
	shl(&ts->edi, 0x3);
	and_(&ts->ebp, 0xFFFFFFF8);
	cmp(&ts->eflags, ts->edi, ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_5750F5;
    }
	goto loc_5750B0;

loc_5750B0:
	mov(&ts->eax, ts->ebp);
	sub(&ts->eax, ts->edi);
	cdq(&ts->eax, ts->edx);
	and_(&ts->edx, 0x7);
	add(&ts->eax, ts->edx);
	mov(&ts->esi, ts->eax);
	sar(&ts->esi, 0x3);
	cmp(&ts->eflags, ts->esi, 0x7E0);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_5750CC;
    }
	mov(&ts->esi, 0x7E0);

loc_5750CC:
	mov(&ts->eax, ts->edi);
	cdq(&ts->eax, ts->edx);
	and_(&ts->edx, 0x7);
	add(&ts->eax, ts->edx);
	sar(&ts->eax, 0x3);
	push(mv, &ts->esp, ts->esi);
	add(&ts->eax, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x41);
	push(mv, &ts->esp, 0x7A0420);
	game::nullsub_1(ts, mv);
	lea(mv, &ts->edi, x86::mem(ts->edi + (ts->esi*8), 4));
	add(&ts->esp, 0x10);
	cmp(&ts->eflags, ts->edi, ts->ebp);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5750B0;
    }
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));

loc_5750F5:
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x18, 4));
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_575112;
    }
	lea(mv, &ts->ecx, x86::mem(ts->ebx + 0x40, 4));

loc_575101:
	mov(mv, x86::mem(ts->ecx, 4), 0x0);
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x18, 4));
	inc(&ts->eax);
	add(&ts->ecx, 0x24);
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_575101;
    }

loc_575112:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x8, 4));
	mov(&ts->esi, ts->eax);
	sub(&ts->esi, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_575134;
    }
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->esi);
	sub(&ts->eax, ts->esi);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	game::sub_574FD0(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->ebx);
	game::sub_574F70(ts, mv);

loc_575134:
	add(&ts->esi, ts->edi);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->ebx + 0x8, 4), ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_575140(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_575158;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	lea(mv, &ts->edx, x86::mem(0xFFFFFFBC, 4));
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_57515E;
    }

loc_575158:
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_57515E:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x20, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ebp);
	inc(&ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->eax*8), 4));
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->esi + (ts->ecx*4) + 0x30, 4));
	mov(mv, x86::mem(ts->esi + 0x20, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x10, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_5751B7;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0x8, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_5751B7;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	mov(&ts->ebp, 0x1);
	shl(&ts->ebp, ts->cl);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0xC, 4));
	dec(&ts->ebp);
	cmp(&ts->eflags, ts->ecx, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_5751B7;
    }
	mov(mv, &ts->ebp, x86::mem(ts->edi + 0x14, 4));
	cmp(mv, &ts->eflags, ts->ebp, x86::mem(ts->esp + 0x14, 4));
	if (!ts->eflags.zero) {
        goto loc_5751B7;
    }
	lea(mv, &ts->eax, x86::mem(ts->ecx + 0x1, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->edi + 0xC, 4), ts->eax);
	game::sub_574F70(ts, mv);
	goto loc_575207;

loc_5751B7:
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_574F70(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	add(&ts->eax, 0x4);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->edi + 0x10, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_574F70(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	mov(mv, x86::mem(ts->edi + 0xC, 4), 0x0);
	add(mv, x86::mem(ts->esi + 0x8, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x14, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_574F70(ts, mv);
	add(mv, x86::mem(ts->esi + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x8, 4), ts->ebx);

loc_575207:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_575239;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	inc(&ts->ecx);
	mov(&ts->eax, ts->ecx);
	cmp(&ts->eflags, ts->eax, 0x1);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_575239;
    }
	push(mv, &ts->esp, 0x4);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x3F);
	push(mv, &ts->esp, 0x7A0420);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->esi);
	game::nullsub_1(ts, mv);
	add(&ts->esp, 0x10);

loc_575239:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	lea(mv, &ts->edx, x86::mem(0xFFFFFFBC, 4));
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_575258;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_575258;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_575090(ts, mv);

loc_575258:
	mov(&ts->eax, 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);
}

void sub_575270(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->eax, x86::mem(ts->ebp + (ts->ebp*8), 4));
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->esi + (ts->eax*4) + 0x30, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x1C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5752B0;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	mov(mv, &ts->ebx, x86::mem(ts->edi + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_574FD0(ts, mv);
	cmp(&ts->eflags, ts->ebx, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_5752B0;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x20, 4));
	inc(&ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x18, 4), ts->ebx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x24, 4));
	pop(mv, &ts->esp, ts->edi);
	inc(&ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x8);

loc_5752B0:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x24, 4));
	cmp(mv, &ts->eflags, ts->edx, x86::mem(ts->esi + 0x20, 4));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5752D0;
    }

loc_5752B8:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x24, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	pop(mv, &ts->esp, ts->edi);
	inc(&ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0x1);
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x8);

loc_5752D0:
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	game::sub_574FD0(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	lea(mv, &ts->ecx, x86::mem(ts->ebx + 0x4, 4));
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_5752B8;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->edi + 0x1C, 4), ts->ecx);
	mov(mv, x86::mem(ts->edi + 0x18, 4), 0x0);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	add(&ts->ecx, ts->eax);
	mov(&ts->eax, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_574FD0(ts, mv);
	mov(mv, x86::mem(ts->edi + 0x20, 4), ts->eax);
	add(mv, x86::mem(ts->esi + 0x10, 4), ts->ebx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x24, 4));
	pop(mv, &ts->esp, ts->edi);
	inc(&ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x8);
}

void sub_575320(x86::thread_state* ts, x86::memory_view* mv) {
	goto sub_57B630;
}

void sub_575330(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0xA0);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0xA8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebx);
	xor_(&ts->esi, ts->esi);
	game::sub_43DBB0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_575381;
    }
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ebx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	sub(&ts->edi, ts->eax);

loc_575357:
	lea(mv, &ts->ecx, x86::mem(ts->edi + (ts->esi), 4));
	mov(mv, &ts->al, x86::mem(ts->esp + (ts->ecx) + 0xC, 1));
	cmp(&ts->eflags, ts->al, 0x61);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_575368;
    }
	cmp(&ts->eflags, ts->al, 0x7A);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_575368;
    }
	and_(&ts->al, 0x5F);

loc_575368:
	cmp(&ts->eflags, ts->al, 0x2F);
	if (!ts->eflags.zero) {
        goto loc_57536E;
    }
	mov(&ts->al, 0x5C);

loc_57536E:
	mov(mv, x86::mem(ts->esp + (ts->esi) + 0xC, 1), ts->al);
	push(mv, &ts->esp, ts->ebx);
	inc(&ts->esi);
	game::sub_43DBB0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_575357;
    }
	pop(mv, &ts->esp, ts->edi);

loc_575381:
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esp + (ts->esi) + 0xC, 1), 0x0);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0xA0);
	retn(mv, &ts->esp);
}

void sub_5753A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(0x865104, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_43F920(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_5753C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x20);
	mov(&ts->edi, ts->esi);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, 0x7F);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_43DC00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, x86::mem(ts->esi + 0x80, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->esi + 0x84, 4), ts->edx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	mov(mv, x86::mem(ts->esi + 0x88, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->esi + 0x8C, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x10, 4));
	cdq(&ts->eax, ts->edx);
	mov(mv, x86::mem(ts->esi + 0x90, 4), ts->eax);
	xor_(&ts->eax, ts->eax);
	add(&ts->esp, 0xC);
	mov(mv, x86::mem(ts->esi + 0x98, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x9C, 4), ts->eax);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x94, 4), ts->edx);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_575430(x86::thread_state* ts, x86::memory_view* mv) {
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x45C, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x460, 4), ts->eax);
	mov(&ts->al, 0x1);
	retn(mv, &ts->esp);
}

void sub_575450(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(0x865104, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_43F920(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x4);
}

void sub_575470(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	cmp(mv, &ts->eflags, ts->edx, x86::mem(ts->ecx + 0x94, 4));
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_57549A;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	if (ts->eflags.carry) {
        goto loc_57548E;
    }
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->ecx + 0x90, 4));
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_57549A;
    }

loc_57548E:
	mov(mv, x86::mem(ts->ecx + 0x98, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x9C, 4), ts->edx);

loc_57549A:
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x98, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x9C, 4));
	retn(mv, &ts->esp, 0x18);
}

void sub_5754B0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x90, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x94, 4));
	retn(mv, &ts->esp, 0x4);
}

void sub_5754D0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x98, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x9C, 4));
	retn(mv, &ts->esp, 0x4);
}

void sub_5754F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	if (!ts->eflags.zero) {
        goto loc_575506;
    }
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);

loc_575506:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_575330(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x18, 4));
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_57556D;
    }
	xor_(&ts->ebx, ts->ebx);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_57556D;
    }
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x14, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebp);
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_575530:
	lea(mv, &ts->ecx, x86::mem(ts->ebx + (ts->edi), 4));
	sar(&ts->ecx, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->ecx + (ts->ecx*2), 4));
	mov(mv, &ts->esi, x86::mem(ts->ebp + (ts->edx*8), 4));
	cmp(&ts->eflags, ts->esi, ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->ebp + (ts->edx*8), 4));
	if (!ts->eflags.zero) {
        goto loc_57554F;
    }
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_575567;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->edx - 0x18, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_575567;
    }
	cmp(&ts->eflags, ts->esi, ts->eax);

loc_57554F:
	if (ts->eflags.carry) {
        goto loc_575556;
    }
	lea(mv, &ts->edi, x86::mem(ts->ecx - 0x1, 4));
	goto loc_575559;

loc_575556:
	lea(mv, &ts->ebx, x86::mem(ts->ecx + 0x1, 4));

loc_575559:
	cmp(&ts->eflags, ts->ebx, ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_575530;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);

loc_575567:
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_575577;
    }

loc_57556D:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);

loc_575577:
	mov(&ts->ebx, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->ecx + (ts->ecx*2), 4));
	lea(mv, &ts->edx, x86::mem(ts->ebp + (ts->ecx*8), 4));
	cmp(mv, &ts->eflags, x86::mem(ts->edx, 4), ts->eax);
	mov(&ts->edi, 0x7FFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_5755B4;
    }
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ebp, x86::mem(ts->ebp + 0x45C, 4));
	mov(&ts->ecx, ts->edx);

loc_575595:
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0xC, 4));
	sub(&ts->ecx, ts->ebp);
	if (!ts->eflags.sign) {
        goto loc_57559E;
    }
	neg(&ts->ecx);

loc_57559E:
	cmp(&ts->eflags, ts->ecx, ts->edi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_5755A6;
    }
	mov(&ts->edi, ts->ecx);
	mov(&ts->ebx, ts->esi);

loc_5755A6:
	add(&ts->edx, 0x18);
	inc(&ts->esi);
	cmp(mv, &ts->eflags, x86::mem(ts->edx, 4), ts->eax);
	mov(&ts->ecx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_575595;
    }
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x18, 4));

loc_5755B4:
	lea(mv, &ts->edx, x86::mem(ts->ebx + (ts->ebx*2), 4));
	pop(mv, &ts->esp, ts->edi);
	lea(mv, &ts->eax, x86::mem(ts->ebp + (ts->edx*8), 4));
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);
}

void sub_5755D0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6F76E9(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_5755E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5755EF;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto locret_5755F1;
    }

loc_5755EF:
	xor_(&ts->eax, ts->eax);

locret_5755F1:
	retn(mv, &ts->esp);
}

void sub_575600(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_575613;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_575613;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	retn(mv, &ts->esp);

loc_575613:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);
}

void j__malloc(x86::thread_state* ts, x86::memory_view* mv) {
	goto _malloc;
}

void j__free(x86::thread_state* ts, x86::memory_view* mv) {
	goto _free;
}

void sub_575640(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	cmp(&ts->eflags, ts->eax, 0x6);
	push(mv, &ts->esp, ts->esi);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_57564C;
    }
	jmp(x86::mem(0x5756E4, 4));

loc_575653:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->dl, x86::mem(ts->eax, 1));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 1), ts->dl);
	add(&ts->eax, 0x4);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_575665:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->dx, x86::mem(ts->eax, 2));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 2), ts->dx);
	add(&ts->eax, 0x4);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_575679:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->edx);
	add(&ts->eax, 0x4);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_57568B:
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	call(ts, mv, x86::mem(ts->ecx + 0x4, 4));
	add(&ts->esp, 0x8);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_5756A1:
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x0);
	call(ts, mv, x86::mem(ts->ecx + 0x4, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	add(&ts->esp, 0x8);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_5756B9:
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x4, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->esi, 4), 0x7);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	if (ts->eflags.zero) {
        goto loc_5756E0;
    }

loc_5756C5:
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_575640(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	add(&ts->esi, 0xC);
	cmp(&ts->eflags, ts->ecx, 0x7);
	if (!ts->eflags.zero) {
        goto loc_5756C5;
    }
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

def_57564C:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));

loc_5756E0:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_575700(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	cmp(mv, &ts->eflags, x86::mem(ts->esi, 4), 0x7);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	if (ts->eflags.zero) {
        goto loc_575723;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_575710:
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_575640(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	add(&ts->esi, 0xC);
	cmp(&ts->eflags, ts->ecx, 0x7);
	if (!ts->eflags.zero) {
        goto loc_575710;
    }

loc_575723:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_575730(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(0x865128, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto locret_575761;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->esi, x86::mem(ts->ecx + 0x8, 4));
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_57575A;
    }
	cmp(&ts->eflags, ts->eax, 0x9);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_57575A;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x7FB6DC, 4));
	game::sub_575700(ts, mv);

loc_57575A:
	mov(mv, x86::mem(ts->esi, 4), 0x0);
	pop(mv, &ts->esp, ts->esi);

locret_575761:
	retn(mv, &ts->esp);
}

void sub_575770(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7787AE);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->al, x86::mem(0x866634, 1));
	push(mv, &ts->esp, ts->ebx);
	xor_(&ts->ebx, ts->ebx);
	test(&ts->eflags, ts->al, 0x1);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi, 4), 0x7A0604);
	mov(mv, x86::mem(ts->esi + 0x4, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x5, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x34, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x38, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_575F51;
    }
	or_(mv, x86::mem(0x866634, 4), 0x1);
	push(mv, &ts->esp, 0x7A05F4);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebx);
	game::sub_43DB50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x7A05EC, 4));
	mov(mv, &ts->edx, x86::mem(0x7A05F0, 4));
	mov(mv, x86::mem(0x7FBA54, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x7A05E8, 4));
	mov(mv, x86::mem(0x7FBA64, 4), ts->eax);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x7FBA70, 4), ts->eax);
	mov(mv, x86::mem(0x7FBA74, 4), ts->eax);
	mov(mv, x86::mem(0x7FBA78, 4), ts->eax);
	mov(mv, x86::mem(0x7FBA7C, 4), ts->eax);
	mov(&ts->ebp, 0x6);
	push(mv, &ts->esp, 0x7A05D8);
	mov(mv, x86::mem(0x7FBA58, 4), ts->ebx);
	mov(mv, x86::mem(0x7FBA5C, 4), ts->ebx);
	mov(mv, x86::mem(0x7FBA60, 1), ts->bl);
	mov(mv, x86::mem(0x7FBA61, 1), 0x1);
	mov(mv, x86::mem(0x7FBA62, 1), 0x1);
	mov(mv, x86::mem(0x7FBA68, 4), ts->ecx);
	mov(mv, x86::mem(0x7FBA6C, 4), ts->edx);
	mov(mv, x86::mem(0x7FBA80, 4), ts->eax);
	mov(mv, x86::mem(0x7FBA84, 4), ts->ebp);
	game::sub_43DB50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x7A05CC, 4));
	mov(mv, &ts->edx, x86::mem(0x7A05D0, 4));
	mov(mv, x86::mem(0x7FBA98, 4), ts->ecx);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(0x7FBAA1, 4), ts->ecx);
	mov(mv, x86::mem(0x7FBAA5, 4), ts->ecx);
	mov(mv, x86::mem(0x7FBAA9, 4), ts->ecx);
	mov(mv, x86::mem(0x7FBAAD, 4), ts->ecx);
	mov(mv, x86::mem(0x7FBAB1, 4), ts->ecx);
	mov(mv, x86::mem(0x7FBA88, 4), ts->eax);
	mov(mv, &ts->al, x86::mem(0x7A05D4, 1));
	mov(mv, x86::mem(0x7FBAB5, 2), ts->cx);
	push(mv, &ts->esp, 0x7A05C0);
	mov(mv, x86::mem(0x7FBA8C, 4), ts->ebx);
	mov(mv, x86::mem(0x7FBA90, 4), ts->ebx);
	mov(mv, x86::mem(0x7FBA94, 1), ts->bl);
	mov(mv, x86::mem(0x7FBA95, 1), 0x1);
	mov(mv, x86::mem(0x7FBA96, 1), 0x1);
	mov(mv, x86::mem(0x7FBA9C, 4), ts->edx);
	mov(mv, x86::mem(0x7FBAA0, 1), ts->al);
	mov(mv, x86::mem(0x7FBAB7, 1), ts->cl);
	mov(mv, x86::mem(0x7FBAB8, 4), ts->ebp);
	game::sub_43DB50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x7A05B4, 4));
	mov(mv, &ts->edx, x86::mem(0x7A05AC, 4));
	mov(mv, x86::mem(0x7FBAD4, 4), ts->ecx);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(0x7FBABC, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x7A05B0, 4));
	mov(mv, x86::mem(0x7FBADE, 4), ts->ecx);
	mov(mv, x86::mem(0x7FBAE2, 4), ts->ecx);
	mov(mv, x86::mem(0x7FBACC, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(0x7A05B8, 4));
	mov(mv, x86::mem(0x7FBAD0, 4), ts->eax);
	mov(mv, &ts->ax, x86::mem(0x7A05BC, 2));
	mov(mv, x86::mem(0x7FBAE6, 4), ts->ecx);
	push(mv, &ts->esp, 0x7A0598);
	mov(mv, x86::mem(0x7FBAC0, 4), ts->ebx);
	mov(mv, x86::mem(0x7FBAC4, 4), ts->ebx);
	mov(mv, x86::mem(0x7FBAC8, 1), ts->bl);
	mov(mv, x86::mem(0x7FBAC9, 1), 0x1);
	mov(mv, x86::mem(0x7FBACA, 1), 0x1);
	mov(mv, x86::mem(0x7FBAD8, 4), ts->edx);
	mov(mv, x86::mem(0x7FBADC, 2), ts->ax);
	mov(mv, x86::mem(0x7FBAEA, 2), ts->cx);
	mov(mv, x86::mem(0x7FBAEC, 4), ts->ebp);
	game::sub_43DB50(ts, mv);
	mov(mv, x86::mem(0x7FBAF0, 4), ts->eax);
	mov(mv, x86::mem(0x7FBAF4, 4), ts->ebx);
	mov(mv, x86::mem(0x7FBAF8, 4), ts->ebx);
	mov(mv, x86::mem(0x7FBAFC, 1), ts->bl);
	mov(mv, x86::mem(0x7FBAFD, 1), 0x1);
	mov(mv, &ts->eax, x86::mem(0x7A058C, 4));
	mov(mv, &ts->edx, x86::mem(0x7A0588, 4));
	mov(mv, &ts->ecx, x86::mem(0x7A0590, 4));
	mov(mv, x86::mem(0x7FBB04, 4), ts->eax);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x7FBB0D, 4), ts->eax);
	mov(mv, x86::mem(0x7FBB11, 4), ts->eax);
	mov(mv, x86::mem(0x7FBB15, 4), ts->eax);
	mov(mv, x86::mem(0x7FBB19, 4), ts->eax);
	mov(mv, x86::mem(0x7FBB00, 4), ts->edx);
	mov(mv, &ts->dl, x86::mem(0x7A0594, 1));
	mov(mv, x86::mem(0x7FBB1D, 2), ts->ax);
	push(mv, &ts->esp, 0x7A0574);
	mov(mv, x86::mem(0x7FBAFE, 1), 0x1);
	mov(mv, x86::mem(0x7FBB08, 4), ts->ecx);
	mov(mv, x86::mem(0x7FBB0C, 1), ts->dl);
	mov(mv, x86::mem(0x7FBB1F, 1), ts->al);
	mov(mv, x86::mem(0x7FBB20, 4), ts->ebp);
	game::sub_43DB50(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x7A0568, 4));
	mov(mv, &ts->ecx, x86::mem(0x7A0564, 4));
	mov(mv, x86::mem(0x7FBB38, 4), ts->edx);
	xor_(&ts->edx, ts->edx);
	mov(mv, x86::mem(0x7FBB44, 4), ts->edx);
	mov(mv, x86::mem(0x7FBB48, 4), ts->edx);
	mov(mv, x86::mem(0x7FBB24, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x7A056C, 4));
	mov(mv, x86::mem(0x7FBB34, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x7A0570, 4));
	mov(mv, x86::mem(0x7FBB4C, 4), ts->edx);
	push(mv, &ts->esp, 0x7A0550);
	mov(mv, x86::mem(0x7FBB28, 4), ts->ebx);
	mov(mv, x86::mem(0x7FBB2C, 4), ts->ebx);
	mov(mv, x86::mem(0x7FBB30, 1), ts->bl);
	mov(mv, x86::mem(0x7FBB31, 1), 0x1);
	mov(mv, x86::mem(0x7FBB32, 1), 0x1);
	mov(mv, x86::mem(0x7FBB3C, 4), ts->eax);
	mov(mv, x86::mem(0x7FBB40, 4), ts->ecx);
	mov(mv, x86::mem(0x7FBB50, 4), ts->edx);
	mov(mv, x86::mem(0x7FBB54, 4), ts->ebp);
	game::sub_43DB50(ts, mv);
	mov(mv, &ts->cx, x86::mem(0x7A054C, 2));
	mov(mv, &ts->dl, x86::mem(0x7A054E, 1));
	mov(mv, x86::mem(0x7FBB58, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x7A0548, 4));
	mov(mv, x86::mem(0x7FBB68, 4), ts->eax);
	mov(mv, x86::mem(0x7FBB6C, 2), ts->cx);
	mov(mv, x86::mem(0x7FBB5C, 4), ts->ebx);
	mov(mv, x86::mem(0x7FBB60, 4), ts->ebx);
	mov(mv, x86::mem(0x7FBB64, 1), ts->bl);
	mov(mv, x86::mem(0x7FBB65, 1), 0x1);
	mov(mv, x86::mem(0x7FBB66, 1), 0x1);
	mov(mv, x86::mem(0x7FBB6E, 1), ts->dl);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, ts->ebp);
	mov(&ts->edi, 0x7FBB6F);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	push(mv, &ts->esp, 0x7A0534);
	mov(mv, x86::mem(0x7FBB88, 4), ts->ebp);
	game::sub_43DB50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x7A052C, 4));
	mov(mv, &ts->dx, x86::mem(0x7A0530, 2));
	mov(mv, x86::mem(0x7FBB8C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x7A0528, 4));
	mov(mv, x86::mem(0x7FBB9C, 4), ts->eax);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x7FBBA6, 4), ts->eax);
	mov(mv, x86::mem(0x7FBBAA, 4), ts->eax);
	mov(mv, x86::mem(0x7FBBAE, 4), ts->eax);
	mov(mv, x86::mem(0x7FBBB2, 4), ts->eax);
	mov(mv, x86::mem(0x7FBBB6, 4), ts->eax);
	mov(mv, x86::mem(0x7FBB90, 4), ts->ebx);
	mov(mv, x86::mem(0x7FBB94, 4), ts->ebx);
	mov(mv, x86::mem(0x7FBB98, 1), ts->bl);
	mov(mv, x86::mem(0x7FBB99, 1), 0x1);
	mov(mv, x86::mem(0x7FBB9A, 1), 0x1);
	mov(mv, x86::mem(0x7FBBA0, 4), ts->ecx);
	mov(mv, x86::mem(0x7FBBA4, 2), ts->dx);
	mov(mv, x86::mem(0x7FBBBA, 2), ts->ax);
	mov(mv, x86::mem(0x7FBBBC, 4), ts->ebp);
	push(mv, &ts->esp, 0x7A0514);
	game::sub_43DB50(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x7A0508, 4));
	mov(mv, &ts->ecx, x86::mem(0x7A0504, 4));
	mov(mv, x86::mem(0x7FBBD4, 4), ts->edx);
	xor_(&ts->edx, ts->edx);
	mov(mv, x86::mem(0x7FBBDE, 4), ts->edx);
	mov(mv, x86::mem(0x7FBBE2, 4), ts->edx);
	mov(mv, x86::mem(0x7FBBE6, 4), ts->edx);
	mov(mv, x86::mem(0x7FBBC0, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x7A050C, 4));
	mov(mv, x86::mem(0x7FBBD0, 4), ts->ecx);
	mov(mv, &ts->cx, x86::mem(0x7A0510, 2));
	mov(mv, x86::mem(0x7FBBEA, 4), ts->edx);
	mov(&ts->ebp, 0x7);
	push(mv, &ts->esp, 0x79C1B8);
	mov(mv, x86::mem(0x7FBBC4, 4), ts->ebx);
	mov(mv, x86::mem(0x7FBBC8, 4), ts->ebx);
	mov(mv, x86::mem(0x7FBBCC, 1), ts->bl);
	mov(mv, x86::mem(0x7FBBCD, 1), 0x1);
	mov(mv, x86::mem(0x7FBBCE, 1), 0x1);
	mov(mv, x86::mem(0x7FBBD8, 4), ts->eax);
	mov(mv, x86::mem(0x7FBBDC, 2), ts->cx);
	mov(mv, x86::mem(0x7FBBEE, 2), ts->dx);
	mov(mv, x86::mem(0x7FBBF0, 4), ts->ebp);
	game::sub_43DB50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x7A04F8, 4));
	mov(mv, &ts->edx, x86::mem(0x7A04FC, 4));
	mov(mv, x86::mem(0x7FBC08, 4), ts->ecx);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(0x7FBC12, 4), ts->ecx);
	mov(mv, x86::mem(0x7FBBF4, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x7A04F4, 4));
	mov(mv, x86::mem(0x7FBC16, 4), ts->ecx);
	mov(mv, x86::mem(0x7FBC1A, 4), ts->ecx);
	mov(mv, x86::mem(0x7FBC04, 4), ts->eax);
	mov(mv, &ts->ax, x86::mem(0x7A0500, 2));
	mov(mv, x86::mem(0x7FBC1E, 4), ts->ecx);
	push(mv, &ts->esp, 0x7A04E8);
	mov(mv, x86::mem(0x7FBBF8, 4), ts->ebx);
	mov(mv, x86::mem(0x7FBBFC, 4), ts->ebx);
	mov(mv, x86::mem(0x7FBC00, 1), ts->bl);
	mov(mv, x86::mem(0x7FBC01, 1), 0x1);
	mov(mv, x86::mem(0x7FBC02, 1), 0x1);
	mov(mv, x86::mem(0x7FBC0C, 4), ts->edx);
	mov(mv, x86::mem(0x7FBC10, 2), ts->ax);
	mov(mv, x86::mem(0x7FBC22, 2), ts->cx);
	mov(mv, x86::mem(0x7FBC24, 4), ts->ebp);
	game::sub_43DB50(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x7A04DC, 4));
	mov(mv, &ts->cx, x86::mem(0x7A04E4, 2));
	mov(mv, x86::mem(0x7FBC38, 4), ts->edx);
	xor_(&ts->edx, ts->edx);
	mov(mv, x86::mem(0x7FBC42, 4), ts->edx);
	mov(mv, x86::mem(0x7FBC46, 4), ts->edx);
	mov(mv, x86::mem(0x7FBC4A, 4), ts->edx);
	mov(mv, x86::mem(0x7FBC4E, 4), ts->edx);
	mov(mv, x86::mem(0x7FBC28, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x7A04E0, 4));
	mov(mv, x86::mem(0x7FBC52, 4), ts->edx);
	push(mv, &ts->esp, 0x7A04D4);
	mov(mv, x86::mem(0x7FBC2C, 4), ts->ebx);
	mov(mv, x86::mem(0x7FBC30, 4), ts->ebx);
	mov(mv, x86::mem(0x7FBC34, 1), ts->bl);
	mov(mv, x86::mem(0x7FBC35, 1), 0x1);
	mov(mv, x86::mem(0x7FBC36, 1), 0x1);
	mov(mv, x86::mem(0x7FBC3C, 4), ts->eax);
	mov(mv, x86::mem(0x7FBC40, 2), ts->cx);
	mov(mv, x86::mem(0x7FBC56, 2), ts->dx);
	mov(mv, x86::mem(0x7FBC58, 4), ts->ebp);
	game::sub_43DB50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x7A04CC, 4));
	mov(mv, x86::mem(0x7FBC5C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x7A04C8, 4));
	mov(mv, x86::mem(0x7FBC60, 4), ts->ebx);
	mov(mv, x86::mem(0x7FBC64, 4), ts->ebx);
	mov(mv, x86::mem(0x7FBC68, 1), ts->bl);
	mov(mv, x86::mem(0x7FBC69, 1), 0x1);
	mov(mv, x86::mem(0x7FBC6A, 1), 0x1);
	mov(mv, x86::mem(0x7FBC6C, 4), ts->eax);
	mov(mv, x86::mem(0x7FBC70, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(0x7A04D0, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x7FBC78, 4), ts->eax);
	mov(mv, x86::mem(0x7FBC7C, 4), ts->eax);
	mov(mv, x86::mem(0x7FBC80, 4), ts->eax);
	mov(mv, x86::mem(0x7FBC84, 4), ts->eax);
	push(mv, &ts->esp, 0x7A04B8);
	mov(mv, x86::mem(0x7FBC74, 4), ts->edx);
	mov(mv, x86::mem(0x7FBC88, 4), ts->eax);
	mov(mv, x86::mem(0x7FBC8C, 4), ts->ebp);
	game::sub_43DB50(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x7A04AC, 4));
	mov(mv, &ts->ecx, x86::mem(0x7A04A8, 4));
	mov(mv, x86::mem(0x7FBCA4, 4), ts->edx);
	xor_(&ts->edx, ts->edx);
	mov(mv, x86::mem(0x7FBCAE, 4), ts->edx);
	mov(mv, x86::mem(0x7FBCB2, 4), ts->edx);
	mov(mv, x86::mem(0x7FBCB6, 4), ts->edx);
	mov(mv, x86::mem(0x7FBC90, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x7A04B0, 4));
	mov(mv, x86::mem(0x7FBCA0, 4), ts->ecx);
	mov(mv, &ts->cx, x86::mem(0x7A04B4, 2));
	mov(mv, x86::mem(0x7FBCBA, 4), ts->edx);
	push(mv, &ts->esp, 0x7A049C);
	mov(mv, x86::mem(0x7FBC94, 4), ts->ebx);
	mov(mv, x86::mem(0x7FBC98, 4), ts->ebx);
	mov(mv, x86::mem(0x7FBC9C, 1), ts->bl);
	mov(mv, x86::mem(0x7FBC9D, 1), 0x1);
	mov(mv, x86::mem(0x7FBC9E, 1), 0x1);
	mov(mv, x86::mem(0x7FBCA8, 4), ts->eax);
	mov(mv, x86::mem(0x7FBCAC, 2), ts->cx);
	mov(mv, x86::mem(0x7FBCBE, 2), ts->dx);
	mov(mv, x86::mem(0x7FBCC0, 4), ts->ebp);
	game::sub_43DB50(ts, mv);
	mov(mv, &ts->dx, x86::mem(0x7A0498, 2));
	mov(mv, &ts->ecx, x86::mem(0x7A0494, 4));
	mov(mv, x86::mem(0x7FBCC4, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x7A0490, 4));
	mov(mv, x86::mem(0x7FBCD4, 4), ts->eax);
	mov(mv, x86::mem(0x7FBCDC, 2), ts->dx);
	mov(mv, &ts->edx, x86::mem(0x7A0488, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x7FBD0C, 4), ts->edx);
	mov(mv, x86::mem(0x7FBCDE, 4), ts->eax);
	mov(mv, x86::mem(0x7FBCE2, 4), ts->eax);
	add(&ts->esp, 0x34);
	xor_(&ts->edx, ts->edx);
	mov(mv, x86::mem(0x7FBD12, 4), ts->edx);
	mov(mv, x86::mem(0x7FBCE6, 4), ts->eax);
	mov(mv, x86::mem(0x7FBD16, 4), ts->edx);
	mov(mv, x86::mem(0x7FBCEA, 4), ts->eax);
	mov(mv, x86::mem(0x7FBCD8, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x7A0484, 4));
	mov(mv, x86::mem(0x7FBD1A, 4), ts->edx);
	mov(mv, x86::mem(0x7FBCEE, 4), ts->eax);
	mov(mv, x86::mem(0x7FBD1E, 4), ts->edx);
	mov(mv, x86::mem(0x7FBCF2, 2), ts->ax);
	mov(&ts->eax, 0x5);
	mov(mv, x86::mem(0x7FBD08, 4), ts->ecx);
	mov(mv, &ts->cx, x86::mem(0x7A048C, 2));
	mov(mv, x86::mem(0x7FBD22, 4), ts->edx);
	mov(mv, x86::mem(0x7FBCC8, 4), ts->ebx);
	mov(mv, x86::mem(0x7FBCCC, 4), ts->ebx);
	mov(mv, x86::mem(0x7FBCD0, 1), ts->bl);
	mov(mv, x86::mem(0x7FBCD1, 1), 0x1);
	mov(mv, x86::mem(0x7FBCD2, 1), 0x1);
	mov(mv, x86::mem(0x7FBCF4, 4), ts->eax);
	mov(mv, x86::mem(0x7FBCF8, 4), 0x2);
	mov(mv, x86::mem(0x7FBCFC, 4), ts->ebx);
	mov(mv, x86::mem(0x7FBD00, 4), ts->ebx);
	mov(mv, x86::mem(0x7FBD04, 1), ts->bl);
	mov(mv, x86::mem(0x7FBD05, 1), 0x1);
	mov(mv, x86::mem(0x7FBD06, 1), 0x1);
	mov(mv, x86::mem(0x7FBD10, 2), ts->cx);
	mov(mv, x86::mem(0x7FBD26, 2), ts->dx);
	mov(mv, x86::mem(0x7FBD28, 4), ts->eax);
	mov(mv, x86::mem(0x7FBD2C, 4), 0x3);
	mov(mv, x86::mem(0x7FBD30, 4), ts->ebx);
	mov(mv, x86::mem(0x7FBD34, 4), ts->ebx);
	mov(mv, x86::mem(0x7FBD38, 1), ts->bl);
	mov(mv, x86::mem(0x7FBD39, 1), 0x1);
	mov(mv, &ts->edx, x86::mem(0x7A047C, 4));
	mov(mv, &ts->ecx, x86::mem(0x7A0478, 4));
	mov(mv, x86::mem(0x7FBD40, 4), ts->edx);
	xor_(&ts->edx, ts->edx);
	mov(mv, x86::mem(0x7FBD48, 4), ts->edx);
	mov(mv, x86::mem(0x7FBD4C, 4), ts->edx);
	mov(mv, x86::mem(0x7FBD50, 4), ts->edx);
	mov(mv, x86::mem(0x7FBD3C, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x7A0480, 4));
	mov(mv, x86::mem(0x7FBD54, 4), ts->edx);
	mov(mv, x86::mem(0x7FBD3A, 1), 0x1);
	mov(mv, x86::mem(0x7FBD44, 4), ts->ecx);
	mov(mv, x86::mem(0x7FBD58, 4), ts->edx);
	mov(mv, x86::mem(0x7FBD5C, 4), ts->eax);
	mov(mv, x86::mem(0x7FBD60, 4), 0x4);
	mov(mv, x86::mem(0x7FBD64, 4), ts->ebx);
	mov(mv, x86::mem(0x7FBD68, 4), ts->ebx);
	mov(mv, x86::mem(0x7FBD6C, 1), ts->bl);
	mov(mv, x86::mem(0x7FBD6D, 1), 0x1);
	mov(mv, x86::mem(0x7FBD6E, 1), 0x1);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xFFFFFFFF);
	goto loc_575F56;

loc_575F51:
	mov(&ts->ebp, 0x7);

loc_575F56:
	mov(mv, x86::mem(ts->esi + 0xC, 4), 0x7FB960);
	mov(mv, x86::mem(ts->esi + 0x10, 4), 0x14);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	xor_(&ts->edi, ts->edi);
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_575F70:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->edi + (ts->eax) + 0x20, 4), ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_575FA2;
    }
	mov(&ts->ecx, ts->eax);
	push(mv, &ts->esp, 0x79C1B8);
	lea(mv, &ts->ebp, x86::mem(ts->edi + (ts->ecx), 4));
	game::sub_43DB50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x24, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_575F9D;
    }
	cmp(mv, &ts->eflags, x86::mem(0x864F24, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_575F9D;
    }
	mov(mv, x86::mem(ts->ebp + 0x32, 1), ts->bl);

loc_575F9D:
	mov(&ts->ebp, 0x7);

loc_575FA2:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	inc(&ts->eax);
	add(&ts->edi, 0x34);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	if (ts->eflags.carry) {
        goto loc_575F70;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_7787A0:
	mov(mv, &ts->eax, x86::mem(0x866634, 4));
	and_(&ts->eax, 0xFFFFFFFE);
	mov(mv, x86::mem(0x866634, 4), ts->eax);
	retn(mv, &ts->esp);

SEH_575770:
	mov(&ts->eax, 0x7E3DF0);
	goto ___CxxFrameHandler;
}

void sub_575FD0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x10, 4));
	push(mv, &ts->esp, ts->esi);
	xor_(&ts->esi, ts->esi);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_575FFA;
    }
	xor_(&ts->edx, ts->edx);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_575FE0:
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xC, 4));
	add(&ts->eax, ts->edx);
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x31, 1), 0x0);
	if (!ts->eflags.zero) {
        goto loc_575FEF;
    }
	mov(mv, x86::mem(ts->eax + 0x30, 1), 0x0);

loc_575FEF:
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x10, 4));
	inc(&ts->esi);
	add(&ts->edx, 0x34);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.carry) {
        goto loc_575FE0;
    }

loc_575FFA:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_576000(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x10, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->edx, ts->edx);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_576031;
    }
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0xC, 4));
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x10, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x24, 4));
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_576020:
	cmp(mv, &ts->eflags, x86::mem(ts->ecx - 0x4, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_576029;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_576039;
    }

loc_576029:
	inc(&ts->eax);
	add(&ts->ecx, 0x34);
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (ts->eflags.carry) {
        goto loc_576020;
    }

loc_576031:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x8);

loc_576039:
	imul(&ts->eax, ts->eax, 0x34);
	mov(mv, &ts->al, x86::mem(ts->eax + (ts->esi) + 0x30, 1));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x8);
}

void sub_576050(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x8, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_576084;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x10, 4));
	push(mv, &ts->esp, ts->esi);
	xor_(&ts->esi, ts->esi);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_576083;
    }
	xor_(&ts->edx, ts->edx);
	push(mv, &ts->esp, ts->ebp);

loc_576066:
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xC, 4));
	mov(mv, &ts->ebp, x86::mem(ts->eax + (ts->edx) + 0x28, 4));
	add(&ts->eax, ts->edx);
	cmp(&ts->eflags, ts->ebp, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_576077;
    }
	mov(mv, x86::mem(ts->eax + 0x30, 1), 0x0);

loc_576077:
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x10, 4));
	inc(&ts->esi);
	add(&ts->edx, 0x34);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.carry) {
        goto loc_576066;
    }
	pop(mv, &ts->esp, ts->ebp);

loc_576083:
	pop(mv, &ts->esp, ts->esi);

loc_576084:
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp, 0x4);
}

void sub_576090(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x86512C, 4));
	mov(mv, &ts->ecx, x86::mem(0x865130, 4));
	add(&ts->eax, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_5760A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	sub(&ts->eax, 0x0);
	if (ts->eflags.zero) {
        goto loc_57611D;
    }
	sub(&ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_5760E9;
    }
	sub(&ts->eax, 0x2);
	if (!ts->eflags.zero) {
        goto loc_576127;
    }
	mov(mv, &ts->al, x86::mem(0x86347C, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, x86::mem(0x865130, 4), 0x3E8);
	if (!ts->eflags.zero) {
        goto loc_576127;
    }
	mov(&ts->ecx, 0x861E74);
	game::sub_500F90(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_576127;
    }
	push(mv, &ts->esp, 0x3E8);
	mov(&ts->ecx, 0x861E74);
	game::sub_500F80(ts, mv);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_5760E9:
	mov(mv, &ts->al, x86::mem(0x86347C, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, x86::mem(0x86512C, 4), 0xC8);
	if (!ts->eflags.zero) {
        goto loc_576127;
    }
	mov(&ts->ecx, 0x861E74);
	game::sub_500F90(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_576127;
    }
	push(mv, &ts->esp, 0xC8);
	mov(&ts->ecx, 0x861E74);
	game::sub_500F80(ts, mv);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_57611D:
	mov(mv, x86::mem(0x8383C8, 4), 0x1);

loc_576127:
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_576130(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	sub(&ts->esp, 0x8);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_576141;
    }
	xor_(&ts->eax, ts->eax);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);

loc_576141:
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->esi, ts->esi);
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_576238;
    }
	mov(&ts->eax, 0x3);
	sub(&ts->eax, ts->ebp);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	if (!ts->eflags.carry) {
        goto loc_576171;
    }

loc_576168:
	mov(mv, &ts->al, x86::mem(ts->ecx + (ts->esi), 1));
	mov(mv, x86::mem(ts->esp + 0x12, 1), ts->al);
	goto loc_576176;

loc_576171:
	mov(mv, x86::mem(ts->esp + 0x12, 1), 0x0);

loc_576176:
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x1, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.carry) {
        goto loc_576187;
    }
	mov(mv, &ts->dl, x86::mem(ts->esi + (ts->ecx) + 0x1, 1));
	mov(mv, x86::mem(ts->esp + 0x13, 1), ts->dl);
	goto loc_57618C;

loc_576187:
	mov(mv, x86::mem(ts->esp + 0x13, 1), 0x0);

loc_57618C:
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.carry) {
        goto loc_57619B;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + (ts->ecx) + 0x2, 1));
	mov(mv, x86::mem(ts->esp + 0x11, 1), ts->al);
	goto loc_5761A0;

loc_57619B:
	mov(mv, x86::mem(ts->esp + 0x11, 1), 0x0);

loc_5761A0:
	add(&ts->esi, 0x3);
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_57622D;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	lea(mv, &ts->edx, x86::mem(ts->edi + (ts->ebp), 4));
	add(&ts->ecx, ts->edx);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.carry) {
        goto loc_576229;
    }
	movzx(mv, &ts->ecx, x86::mem(ts->esp + 0x12, 1));
	mov(&ts->eax, ts->ecx);
	shr(&ts->eax, 0x2);
	mov(mv, &ts->al, x86::mem(ts->eax + 0x79DD60, 1));
	mov(mv, x86::mem(ts->edx, 1), ts->al);
	movzx(mv, &ts->edx, x86::mem(ts->esp + 0x13, 1));
	and_(&ts->ecx, 0x3);
	shl(&ts->ecx, 0x4);
	mov(&ts->eax, ts->edx);
	shr(&ts->eax, 0x4);
	or_(&ts->eax, ts->ecx);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x79DD60, 1));
	lea(mv, &ts->eax, x86::mem(ts->ebx + 0x2, 4));
	cmp(&ts->eflags, ts->esi, ts->eax);
	mov(mv, x86::mem(ts->edi + (ts->ebp) + 0x1, 1), ts->cl);
	mov(mv, &ts->cl, x86::mem(ts->esp + 0x11, 1));
	if (!ts->eflags.zero) {
        goto loc_5761F9;
    }
	mov(&ts->al, 0x3D);
	goto loc_57620D;

loc_5761F9:
	movzx(&ts->eax, ts->cl);
	and_(&ts->edx, 0xF);
	shr(&ts->eax, 0x6);
	shl(&ts->edx, 0x2);
	or_(&ts->eax, ts->edx);
	mov(mv, &ts->al, x86::mem(ts->eax + 0x79DD60, 1));

loc_57620D:
	lea(mv, &ts->edx, x86::mem(ts->ebx + 0x1, 4));
	cmp(&ts->eflags, ts->esi, ts->edx);
	mov(mv, x86::mem(ts->edi + (ts->ebp) + 0x2, 1), ts->al);
	if (ts->eflags.carry) {
        goto loc_57621C;
    }
	mov(&ts->al, 0x3D);
	goto loc_576225;

loc_57621C:
	and_(&ts->ecx, 0x3F);
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x79DD60, 1));

loc_576225:
	mov(mv, x86::mem(ts->edi + (ts->ebp) + 0x3, 1), ts->al);

loc_576229:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));

loc_57622D:
	add(&ts->edi, 0x4);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.carry) {
        goto loc_576168;
    }

loc_576238:
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x2C, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_57624E;
    }
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_57624D;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x28, 4), ts->edi);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_57624D;
    }
	mov(mv, x86::mem(ts->edi + (ts->ebp), 1), 0x0);

loc_57624D:
	inc(&ts->edi);

loc_57624E:
	mov(&ts->eax, ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_576260(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x18, 4));
	xor_(&ts->ecx, ts->ecx);
	cmp(&ts->eflags, ts->ebp, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_57627A;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	test(&ts->eflags, ts->al, 0x3);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_576281;
    }

loc_57627A:
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_576281:
	cmp(&ts->eflags, ts->eax, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_5763BC;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_576290:
	mov(mv, &ts->dl, x86::mem(ts->ecx + (ts->ebp), 1));
	mov(mv, &ts->al, x86::mem(ts->ecx + (ts->ebp) + 0x1, 1));
	inc(&ts->ecx);
	mov(mv, &ts->bl, x86::mem(ts->ecx + (ts->ebp) + 0x1, 1));
	inc(&ts->ecx);
	inc(&ts->ecx);
	movsx(&ts->edi, ts->dl);
	mov(mv, x86::mem(ts->esp + 0x24, 1), ts->bl);
	mov(mv, &ts->bl, x86::mem(ts->ecx + (ts->ebp), 1));
	mov(&ts->esi, 0xFF);
	inc(&ts->ecx);
	cmp(mv, &ts->eflags, x86::mem(0x79DDA0, 4), ts->esi);
	if (!ts->eflags.zero) {
        goto loc_5762C0;
    }
	cmp(&ts->eflags, ts->dl, 0x3D);
	if (!ts->eflags.zero) {
        goto loc_5763C8;
    }

loc_5762C0:
	movsx(&ts->edx, ts->al);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(0x79DDA0, 4));
	cmp(&ts->eflags, ts->edx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edx);
	if (!ts->eflags.zero) {
        goto loc_5762DE;
    }
	cmp(&ts->eflags, ts->al, 0x3D);
	if (!ts->eflags.zero) {
        goto loc_5763C8;
    }

loc_5762DE:
	mov(mv, &ts->al, x86::mem(ts->esp + 0x24, 1));
	movsx(&ts->edx, ts->al);
	cmp(mv, &ts->eflags, x86::mem(0x79DDA0, 4), ts->esi);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->edx);
	if (!ts->eflags.zero) {
        goto loc_5762FA;
    }
	cmp(&ts->eflags, ts->al, 0x3D);
	if (!ts->eflags.zero) {
        goto loc_5763C8;
    }

loc_5762FA:
	movsx(&ts->edx, ts->bl);
	cmp(mv, &ts->eflags, x86::mem(0x79DDA0, 4), ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->edx);
	if (!ts->eflags.zero) {
        goto loc_576313;
    }
	cmp(&ts->eflags, ts->bl, 0x3D);
	if (!ts->eflags.zero) {
        goto loc_5763C8;
    }

loc_576313:
	cmp(&ts->eflags, ts->al, 0x3D);
	if (!ts->eflags.zero) {
        goto loc_57631E;
    }
	mov(&ts->esi, 0x1);
	goto loc_57632B;

loc_57631E:
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->bl, 0x3D);
	setnz(ts->eflags, &ts->al);
	add(&ts->eax, 0x2);
	mov(&ts->esi, ts->eax);

loc_57632B:
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x2C, 4));
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	if (ts->eflags.zero) {
        goto loc_5763AC;
    }
	lea(mv, &ts->edx, x86::mem(ts->eax + 0x2, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x30, 4), ts->edx);
	if (ts->eflags.carry) {
        goto loc_5763AC;
    }
	cmp(&ts->eflags, ts->esi, 0x1);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_57635F;
    }
	mov(mv, &ts->bl, x86::mem(0x79DDA0, 1));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	shl(&ts->bl, 0x2);
	shr(&ts->edx, 0x4);
	or_(&ts->dl, ts->bl);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x2C, 4));
	mov(mv, x86::mem(ts->eax + (ts->ebx), 1), ts->dl);

loc_57635F:
	cmp(&ts->eflags, ts->esi, 0x2);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_57638A;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x24, 4));
	mov(mv, &ts->edx, x86::mem(0x79DDA0, 4));
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->bl, x86::mem(0x79DDA0, 1));
	shl(&ts->bl, 0x4);
	shr(&ts->edx, 0x2);
	or_(&ts->dl, ts->bl);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x2C, 4));
	mov(mv, x86::mem(ts->eax + (ts->ebx) + 0x1, 1), ts->dl);

loc_57638A:
	cmp(&ts->eflags, ts->esi, 0x3);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5763AC;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x24, 4));
	mov(mv, &ts->dl, x86::mem(0x79DDA0, 1));
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x1C, 4));
	shl(&ts->dl, 0x6);
	or_(mv, &ts->dl, x86::mem(0x79DDA0, 1));
	mov(mv, x86::mem(ts->eax + (ts->ebx) + 0x2, 1), ts->dl);

loc_5763AC:
	add(&ts->eax, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	cmp(mv, &ts->eflags, ts->ecx, x86::mem(ts->esp + 0x28, 4));
	if (ts->eflags.carry) {
        goto loc_576290;
    }

loc_5763BC:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_5763C8:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_5763E0(x86::thread_state* ts, x86::memory_view* mv) {
	xor_(&ts->eax, ts->eax);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esi, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->eax);
	mov(mv, x86::mem(0x865134, 4), ts->esi);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->eax);
	game::sub_43BD90(ts, mv);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_576410(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57642A;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x4, 4), 0x0);

loc_57642A:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_576430(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	game::sub_43BDF0(ts, mv);
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_43BE20(ts, mv);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78435C, 4));
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->edi);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_576460(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5764A5;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5764A5;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5764A5;
    }
	game::sub_576430(ts, mv);
	game::__ftol2(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->edx + (ts->ecx*8), 2), ts->ax);
	lea(mv, &ts->ecx, x86::mem(ts->edx + (ts->ecx*8), 4));
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_5764A5;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x8);
	inc(&ts->eax);
	mov(mv, x86::mem(ts->esi, 4), ts->eax);

loc_5764A5:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_5764B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(0x865134, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_5764C3;
    }
	game::sub_43BDF0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->eax);

loc_5764C3:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_5764D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esi, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	game::__ftol2(ts, mv);
	mov(&ts->ecx, ts->eax);
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_57654F;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_57654F;
    }
	lea(mv, &ts->eax, x86::mem(ts->edi - 0x1, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_576519;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + (ts->edi*4) - 0x4, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);

loc_576519:
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_57652E;
    }
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));

loc_57652E:
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	lea(mv, &ts->eax, x86::mem(ts->edx + (ts->ecx*4), 4));
	fsub(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);

loc_57654F:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);
}

void sub_576560(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->ecx + 0x10, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp, 4));
	fabs(&ts->fp, x86::fp_index(0));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787594, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_576583;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp, 4));
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);

loc_576583:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp, 4));
	push(mv, &ts->esp, ts->ebx);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_57659B;
    }
	mov(&ts->ebx, 0x1);
	goto loc_57659D;

loc_57659B:
	xor_(&ts->ebx, ts->ebx);

loc_57659D:
	mov(mv, &ts->esi, x86::mem(ts->ecx, 4));
	mov(&ts->edx, 0x1);
	cmp(&ts->eflags, ts->esi, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_5765ED;
    }
	lea(mv, &ts->edi, x86::mem(ts->ebp + 0x4, 4));
	nop();

loc_5765B0:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi, 4));
	fabs(&ts->fp, x86::fp_index(0));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787594, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_576604;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_5765D9;
    }
	mov(&ts->eax, 0x1);
	goto loc_5765DB;

loc_5765D9:
	xor_(&ts->eax, ts->eax);

loc_5765DB:
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_57661A;
    }
	inc(&ts->edx);
	add(&ts->edi, 0x4);
	cmp(&ts->eflags, ts->edx, ts->esi);
	mov(&ts->ebx, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5765B0;
    }
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edx);

loc_5765ED:
	dec(&ts->esi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->esi);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC, 4));
	pop(mv, &ts->esp, ts->ebp);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);

loc_576604:
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC, 4));
	pop(mv, &ts->esp, ts->ebp);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);

loc_57661A:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	lea(mv, &ts->eax, x86::mem(ts->ebp + (ts->edx*4) - 0x4, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + (ts->edx*4), 4));
	dec(&ts->edx);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->edx);
	pop(mv, &ts->esp, ts->edi);
	fdivp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	fiadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);
}

void sub_576650(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->eax);
	game::sub_43D090(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x10);
}

void sub_576690(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->eax);
	game::sub_43D0C0(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x10);
}

void sub_5766E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->ecx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->eax);
	game::sub_43D100(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x10);
}

void sub_576740(x86::thread_state* ts, x86::memory_view* mv) {
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx, 4));
	retn(mv, &ts->esp, 0x10);
}

void sub_576770(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	mov(&ts->eax, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	retn(mv, &ts->esp, 0x8);
}

void sub_576790(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x4, 4));
	cmp(&ts->eflags, ts->edi, 0x1);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_5767FA;
    }
	mov(mv, &ts->esi, x86::mem(ts->ecx, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.parity) {
        goto loc_5767B3;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x4, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

loc_5767B3:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + (ts->edi*8) - 0x8, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (!ts->eflags.zero) {
        goto loc_5767CC;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + (ts->edi*8) - 0x4, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

loc_5767CC:
	lea(mv, &ts->ebx, x86::mem(ts->edi - 0x1, 4));
	xor_(&ts->edx, ts->edx);
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_5767FA;
    }
	mov(&ts->edi, ts->esi);

loc_5767D7:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (!ts->eflags.zero) {
        goto loc_5767F2;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x8, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_576805;
    }

loc_5767F2:
	inc(&ts->edx);
	add(&ts->edi, 0x8);
	cmp(&ts->eflags, ts->edx, ts->ebx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5767D7;
    }

loc_5767FA:
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

loc_576805:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + (ts->edx*8) + 0xC, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + (ts->edx*8) + 0x4, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + (ts->edx*8) + 0x8, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + (ts->edx*8), 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fabs(&ts->fp, x86::fp_index(0));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787594, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_57683E;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	pop(mv, &ts->esp, ts->edi);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + (ts->edx*8), 4));
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	fdiv(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmulp(&ts->fp, x86::fp_index(2), x86::fp_index(0));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	retn(mv, &ts->esp, 0x4);

loc_57683E:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	pop(mv, &ts->esp, ts->edi);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	retn(mv, &ts->esp, 0x4);
}

void sub_576850(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->dl, x86::mem(ts->esp + 0x8, 1));
	mov(&ts->eax, ts->ecx);
	mov(mv, &ts->cl, x86::mem(ts->esp + 0x4, 1));
	mov(mv, x86::mem(ts->eax + 0x4, 1), ts->cl);
	xor_(&ts->cl, ts->cl);
	mov(mv, x86::mem(ts->eax, 4), 0x787584);
	mov(mv, x86::mem(ts->eax + 0x5, 1), ts->dl);
	mov(mv, x86::mem(ts->eax + 0x6, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0x7, 1), ts->cl);
	retn(mv, &ts->esp, 0x8);
}

void sub_576880(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, ts->ecx);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x4, 1), 0x4);
	mov(mv, x86::mem(ts->eax + 0x5, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0x6, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0x7, 1), ts->cl);
	mov(mv, x86::mem(ts->eax, 4), 0x7A0608);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ecx);
	retn(mv, &ts->esp);
}

void sub_5768A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x8, 4));
	cmp(&ts->eflags, ts->ebx, 0x5);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x5, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_5768CA;
    }
	lea(mv, &ts->ecx, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->ecx);
	game::_malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->eax);

loc_5768CA:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x10, 4));
	mov(&ts->ecx, ts->ebx);
	xor_(&ts->eax, ts->eax);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_5768E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x14, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esi, 4), 0x7A0608);
	if (ts->eflags.zero) {
        goto loc_5768FC;
    }
	push(mv, &ts->esp, ts->eax);
	game::_free(ts, mv);
	add(&ts->esp, 0x4);

loc_5768FC:
	mov(mv, x86::mem(ts->esi, 4), 0x787584);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_576910(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	mov(mv, &ts->dl, x86::mem(ts->ecx + 0x5, 1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->dl, ts->dl);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_576945;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x10, 4));
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_576930:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx, 4));
	inc(&ts->eax);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	add(&ts->edx, 0x4);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	movzx(mv, &ts->esi, x86::mem(ts->ecx + 0x5, 1));
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_576930;
    }
	pop(mv, &ts->esp, ts->esi);

loc_576945:
	movzx(mv, &ts->eax, x86::mem(ts->ecx + 0x6, 1));
	cmp(&ts->eflags, ts->eax, 0x1);
	mov(mv, x86::mem(ts->esp, 4), 0x1);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_57695A;
    }
	mov(mv, x86::mem(ts->esp, 4), ts->eax);

loc_57695A:
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fdivr(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC, 4));
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_576970(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x6, 1));
	cmp(mv, &ts->eflags, ts->al, x86::mem(ts->ecx + 0x5, 1));
	if (!ts->eflags.carry) {
        goto loc_57697D;
    }
	inc(&ts->al);
	mov(mv, x86::mem(ts->ecx + 0x6, 1), ts->al);

loc_57697D:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	movzx(mv, &ts->eax, x86::mem(ts->ecx + 0x7, 1));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x10, 4));
	lea(mv, &ts->eax, x86::mem(ts->edx + (ts->eax*4), 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->edx);
	movzx(mv, &ts->eax, x86::mem(ts->ecx + 0x6, 1));
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x7, 1));
	mov(mv, &ts->dl, x86::mem(ts->ecx + 0x5, 1));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	inc(&ts->al);
	cmp(&ts->eflags, ts->al, ts->dl);
	mov(mv, x86::mem(ts->ecx + 0x7, 1), ts->al);
	fdivr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC, 4));
	if (ts->eflags.carry) {
        goto locret_5769C1;
    }
	mov(mv, x86::mem(ts->ecx + 0x7, 1), 0x0);

locret_5769C1:
	retn(mv, &ts->esp, 0x4);
}

void sub_5769D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->dl, x86::mem(ts->ecx + 0x5, 1));
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_5769F3;
    }
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_5769E0:
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + (ts->eax*4), 4));
	movzx(mv, &ts->edx, x86::mem(ts->ecx + 0x5, 1));
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5769E0;
    }

loc_5769F3:
	movzx(mv, &ts->eax, x86::mem(ts->ecx + 0x5, 1));
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x6, 1), 0x0);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);
}

void sub_576A10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->dl, x86::mem(ts->ecx + 0x5, 1));
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_576A33;
    }
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_576A20:
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + (ts->eax*4), 4));
	movzx(mv, &ts->edx, x86::mem(ts->ecx + 0x5, 1));
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_576A20;
    }

loc_576A33:
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x5, 1));
	movzx(&ts->edx, ts->al);
	mov(mv, x86::mem(ts->esp, 4), ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x6, 1), ts->al);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->eax);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);
}

void sub_576A60(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi, 4), 0x7A0610);
	game::_free(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x14, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esi, 4), 0x7A0608);
	if (ts->eflags.zero) {
        goto loc_576A8E;
    }
	push(mv, &ts->esp, ts->eax);
	game::_free(ts, mv);
	add(&ts->esp, 0x4);

loc_576A8E:
	mov(mv, x86::mem(ts->esi, 4), 0x787584);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_576AA0(x86::thread_state* ts, x86::memory_view* mv) {
	movzx(mv, &ts->edx, x86::mem(ts->ecx + 0x7, 1));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x10, 4));
	shl(&ts->edx, 0x2);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->esi, x86::mem(ts->edx + (ts->eax), 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (ts->eflags.parity) {
        goto loc_576AD5;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + (ts->eax), 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (ts->eflags.parity) {
        goto loc_576AD5;
    }
	inc(mv, x86::mem(ts->ecx + 0x6, 1));
	goto loc_576ADD;

loc_576AD5:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));

loc_576ADD:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	mov(mv, x86::mem(ts->esi, 4), ts->edx);
	movzx(mv, &ts->eax, x86::mem(ts->ecx + 0x7, 1));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x30, 4));
	pop(mv, &ts->esp, ts->esi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + (ts->eax*4), 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + (ts->eax*4), 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x28, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_576B7D;
    }

loc_576B13:
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x2C, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x30, 4));
	shl(&ts->edx, 0x2);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + (ts->eax), 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_576B50;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + (ts->edx), 4));
	add(&ts->eax, ts->edx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	mov(mv, x86::mem(ts->eax, 4), 0x0);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x30, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x2C, 4));
	mov(mv, x86::mem(ts->eax + (ts->edx*4), 4), 0x0);
	dec(mv, x86::mem(ts->ecx + 0x6, 1));

loc_576B50:
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	movzx(mv, &ts->edx, x86::mem(ts->ecx + 0x5, 1));
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x2C, 4), ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_576B66;
    }
	mov(mv, x86::mem(ts->ecx + 0x2C, 4), 0x0);

loc_576B66:
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x30, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + (ts->eax*4), 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x28, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.zero) {
        goto loc_576B13;
    }

loc_576B7D:
	movzx(mv, &ts->eax, x86::mem(ts->ecx + 0x6, 1));
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x7, 1));
	mov(mv, &ts->dl, x86::mem(ts->ecx + 0x5, 1));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	inc(&ts->al);
	cmp(&ts->eflags, ts->al, ts->dl);
	mov(mv, x86::mem(ts->ecx + 0x7, 1), ts->al);
	fdivr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC, 4));
	if (ts->eflags.carry) {
        goto locret_576BA2;
    }
	mov(mv, x86::mem(ts->ecx + 0x7, 1), 0x0);

locret_576BA2:
	retn(mv, &ts->esp, 0x8);
}

void sub_576BB0(x86::thread_state* ts, x86::memory_view* mv) {
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x7C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->esi + 0x80, 4), ts->eax);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x80, 4));
	mov(mv, &ts->al, x86::mem(ts->esp + 0x14, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, x86::mem(ts->esi + 0x7C, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_576BDF;
    }
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x0);
	goto loc_576BF5;

loc_576BDF:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x80, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));

loc_576BF5:
	mov(mv, &ts->al, x86::mem(ts->esp + 0x10, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_576C09;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	goto loc_576C11;

loc_576C09:
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));

loc_576C11:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_576970(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x28, 4));
	game::sub_576970(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	game::sub_576970(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);
}

void sub_576C40(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(ts->ecx + 0x7C, 4), 0x0);
	mov(mv, x86::mem(ts->ecx + 0x80, 4), ts->eax);
	add(&ts->ecx, 0x50);
	goto sub_5769D0;
}

void sub_576C60(x86::thread_state* ts, x86::memory_view* mv) {
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fdivp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	retn(mv, &ts->esp, 0x10);
}

void sub_576C90(x86::thread_state* ts, x86::memory_view* mv) {
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	retn(mv, &ts->esp, 0x4);
}

void sub_576CA0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7FB700, 4));
	retn(mv, &ts->esp);
}

void sub_576CB0(x86::thread_state* ts, x86::memory_view* mv) {
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865558, 4));
	retn(mv, &ts->esp);
}

void sub_576CD0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7FB710, 4));
	mov(mv, x86::mem(0x865558, 4), ts->eax);
	retn(mv, &ts->esp);
}

void sub_576CE0(x86::thread_state* ts, x86::memory_view* mv) {
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7A0618, 4));
	retn(mv, &ts->esp);
}

void sub_576CF0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x1);
	mov(mv, x86::mem(0x7FB71C, 4), ts->eax);
	mov(mv, x86::mem(0x7FB720, 4), ts->eax);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x86518C, 4), 0xFA0);
	mov(mv, x86::mem(0x7FB718, 4), 0x3F800000);
	mov(mv, x86::mem(0x865150, 4), ts->eax);
	mov(mv, x86::mem(0x865154, 4), ts->eax);
	mov(mv, x86::mem(0x865158, 4), ts->eax);
	mov(mv, x86::mem(0x7FB724, 4), ts->eax);
	retn(mv, &ts->esp);
}

void sub_576D30(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x28);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x44, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x40, 4));
	shr(&ts->eax, 0x3);
	and_(&ts->al, 0x1);
	test(&ts->eflags, ts->esi, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x48, 4));
	mov(mv, x86::mem(ts->esp + 0x13, 1), ts->al);
	if (ts->eflags.zero) {
        goto loc_576EC2;
    }
	mov(&ts->ebp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x7);
	game::sub_4FF970(ts, mv);
	add(&ts->eax, 0xFFFFFFFE);
	cmp(&ts->eflags, ts->eax, 0x5);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_576D76;
    }
	jmp(x86::mem(0x57717C, 4));

loc_576D7D:
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x40, 1), 0x4);
	mov(&ts->ebp, 0x3);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x6);
	if (ts->eflags.zero) {
        goto loc_576DDC;
    }
	mov(&ts->eax, 0x7A06F0);
	goto loc_576DF4;

loc_576D98:
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x40, 1), 0x4);
	mov(&ts->ebp, 0x3);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x6);
	if (ts->eflags.zero) {
        goto loc_576DB3;
    }
	mov(&ts->eax, 0x7A06E4);
	goto loc_576DF4;

loc_576DB3:
	mov(&ts->eax, 0x7A06D8);
	goto loc_576DF4;

loc_576DBA:
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x40, 1), 0x4);
	mov(&ts->ebp, 0x3);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x6);
	if (ts->eflags.zero) {
        goto loc_576DD5;
    }
	mov(&ts->eax, 0x7A06CC);
	goto loc_576DF4;

loc_576DD5:
	mov(&ts->eax, 0x7A06C0);
	goto loc_576DF4;

loc_576DDC:
	mov(&ts->eax, 0x7909EC);
	goto loc_576DF4;

def_576D76:
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x40, 1), 0x4);
	mov(&ts->eax, 0x7A06B4);
	if (!ts->eflags.zero) {
        goto loc_576DF4;
    }
	mov(&ts->eax, 0x7A06A8);

loc_576DF4:
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_43DBD0(ts, mv);
	mov(&ts->ecx, ts->esi);
	add(&ts->esp, 0x8);
	lea(mv, &ts->esi, x86::mem(ts->ebx + 0x1, 4));
	mov(&ts->edi, 0x2);

loc_576E08:
	mov(&ts->eax, ts->ecx);
	cdq(&ts->eax, ts->edx);
	mov(&ts->ebx, 0xA);
	idiv(&ts->eax, ts->ebx);
	test(&ts->eflags, ts->edx, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_576E1F;
    }
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_576E1F;
    }
	mov(mv, x86::mem(ts->esi, 1), 0x20);
	goto loc_576E24;

loc_576E1F:
	add(&ts->dl, 0x30);
	mov(mv, x86::mem(ts->esi, 1), ts->dl);

loc_576E24:
	dec(&ts->esi);
	dec(&ts->edi);
	mov(&ts->ecx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_576E08;
    }
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x3C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x48, 4));
	lea(mv, &ts->ecx, x86::mem(ts->ebx + (ts->ebp) + 0x1, 4));
	mov(&ts->esi, 0x2);
	goto loc_576E40;

loc_576E40:
	cdq(&ts->eax, ts->edx);
	mov(&ts->edi, 0xA);
	idiv(&ts->eax, ts->edi);
	add(&ts->dl, 0x30);
	mov(mv, x86::mem(ts->ecx, 1), ts->dl);
	dec(&ts->ecx);
	dec(&ts->esi);
	if (!ts->eflags.zero) {
        goto loc_576E40;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4C, 4));
	lea(mv, &ts->ecx, x86::mem(ts->ecx + (ts->ebx) + 0x1, 4));
	mov(&ts->esi, 0x2);

loc_576E62:
	cdq(&ts->eax, ts->edx);
	mov(&ts->edi, 0xA);
	idiv(&ts->eax, ts->edi);
	add(&ts->dl, 0x30);
	mov(mv, x86::mem(ts->ecx, 1), ts->dl);
	dec(&ts->ecx);
	dec(&ts->esi);
	if (!ts->eflags.zero) {
        goto loc_576E62;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x40, 4));
	mov(&ts->esi, ts->eax);
	and_(&ts->esi, 0x1);
	if (!ts->eflags.zero) {
        goto loc_576E86;
    }
	test(&ts->eflags, ts->al, 0x2);
	if (ts->eflags.zero) {
        goto loc_57715A;
    }

loc_576E86:
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x44, 4), 0x9);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_57715A;
    }
	push(mv, &ts->esp, ts->ebx);
	game::sub_43DBB0(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->edi, ts->eax);
	game::sub_43DBD0(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esp + 0x1F, 1));
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_576EB4;
    }
	mov(mv, x86::mem(ts->esp + (ts->edi) + 0x17, 1), 0x0);

loc_576EB4:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->ebx + 0x1, 4));
	push(mv, &ts->esp, ts->eax);
	goto loc_577152;

loc_576EC2:
	game::sub_4FF970(ts, mv);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_576FE0;
    }
	add(&ts->eax, 0xFFFFFFFC);
	cmp(&ts->eflags, ts->eax, 0x3);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_576ED7;
    }
	jmp(x86::mem(0x577194, 4));

loc_576EDE:
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x40, 1), 0x4);
	if (ts->eflags.zero) {
        goto loc_576EEC;
    }
	mov(&ts->eax, 0x7A069C);
	goto loc_576F19;

loc_576EEC:
	mov(&ts->eax, 0x7A0690);
	goto loc_576F19;

loc_576EF3:
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x40, 1), 0x4);
	if (ts->eflags.zero) {
        goto loc_576F01;
    }
	mov(&ts->eax, 0x7A0684);
	goto loc_576F19;

loc_576F01:
	mov(&ts->eax, 0x7A0678);
	goto loc_576F19;

def_576ED7:
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x40, 1), 0x4);
	mov(&ts->eax, 0x7A066C);
	if (!ts->eflags.zero) {
        goto loc_576F19;
    }
	mov(&ts->eax, 0x7A0660);

loc_576F19:
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_43DBD0(ts, mv);
	mov(&ts->ecx, ts->edi);
	add(&ts->esp, 0x8);
	lea(mv, &ts->esi, x86::mem(ts->ebx + 0x1, 4));
	mov(&ts->edi, 0x2);
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_576F30:
	mov(&ts->eax, ts->ecx);
	cdq(&ts->eax, ts->edx);
	mov(&ts->ebp, 0xA);
	idiv(&ts->eax, ts->ebp);
	test(&ts->eflags, ts->edx, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_576F47;
    }
	cmp(&ts->eflags, ts->ecx, ts->ebp);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_576F47;
    }
	mov(mv, x86::mem(ts->esi, 1), 0x20);
	goto loc_576F4C;

loc_576F47:
	add(&ts->dl, 0x30);
	mov(mv, x86::mem(ts->esi, 1), ts->dl);

loc_576F4C:
	dec(&ts->esi);
	dec(&ts->edi);
	mov(&ts->ecx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_576F30;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4C, 4));
	lea(mv, &ts->ecx, x86::mem(ts->ebx + 0x4, 4));
	mov(&ts->esi, 0x2);
	mov(&ts->edi, ts->edi);

loc_576F60:
	cdq(&ts->eax, ts->edx);
	mov(&ts->edi, 0xA);
	idiv(&ts->eax, ts->edi);
	add(&ts->dl, 0x30);
	mov(mv, x86::mem(ts->ecx, 1), ts->dl);
	dec(&ts->ecx);
	dec(&ts->esi);
	if (!ts->eflags.zero) {
        goto loc_576F60;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x50, 4));
	lea(mv, &ts->ecx, x86::mem(ts->ebx + 0x7, 4));
	mov(&ts->esi, 0x2);
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_576F80:
	cdq(&ts->eax, ts->edx);
	mov(&ts->edi, 0xA);
	idiv(&ts->eax, ts->edi);
	add(&ts->dl, 0x30);
	mov(mv, x86::mem(ts->ecx, 1), ts->dl);
	dec(&ts->ecx);
	dec(&ts->esi);
	if (!ts->eflags.zero) {
        goto loc_576F80;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x40, 4));
	mov(&ts->esi, ts->eax);
	and_(&ts->esi, 0x1);
	if (!ts->eflags.zero) {
        goto loc_576FA4;
    }
	test(&ts->eflags, ts->al, 0x2);
	if (ts->eflags.zero) {
        goto loc_57715A;
    }

loc_576FA4:
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x48, 4), 0x9);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_57715A;
    }
	push(mv, &ts->esp, ts->ebx);
	game::sub_43DBB0(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->edi, ts->eax);
	game::sub_43DBD0(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esp + 0x1F, 1));
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_576FD2;
    }
	mov(mv, x86::mem(ts->esp + (ts->edi) + 0x17, 1), 0x0);

loc_576FD2:
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->ebx + 0x1, 4));
	push(mv, &ts->esp, ts->eax);
	goto loc_577152;

loc_576FE0:
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_5770C0;
    }
	cmp(&ts->eflags, ts->eax, 0x4);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_577007;
    }
	cmp(&ts->eflags, ts->eax, 0x7);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_577007;
    }
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x40, 1), 0x4);
	if (ts->eflags.zero) {
        goto loc_577000;
    }
	mov(&ts->eax, 0x7A0658);
	goto loc_577018;

loc_577000:
	mov(&ts->eax, 0x7A0650);
	goto loc_577018;

loc_577007:
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x40, 1), 0x4);
	mov(&ts->eax, 0x7A0648);
	if (!ts->eflags.zero) {
        goto loc_577018;
    }
	mov(&ts->eax, 0x7A0640);

loc_577018:
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_43DBD0(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->ecx, ts->ebp);
	lea(mv, &ts->esi, x86::mem(ts->ebx + 0x1, 4));
	mov(&ts->edi, 0x2);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_577030:
	mov(&ts->eax, ts->ecx);
	cdq(&ts->eax, ts->edx);
	mov(&ts->ebp, 0xA);
	idiv(&ts->eax, ts->ebp);
	test(&ts->eflags, ts->edx, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_577047;
    }
	cmp(&ts->eflags, ts->ecx, ts->ebp);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_577047;
    }
	mov(mv, x86::mem(ts->esi, 1), 0x20);
	goto loc_57704C;

loc_577047:
	add(&ts->dl, 0x30);
	mov(mv, x86::mem(ts->esi, 1), ts->dl);

loc_57704C:
	dec(&ts->esi);
	dec(&ts->edi);
	mov(&ts->ecx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_577030;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x50, 4));
	lea(mv, &ts->ecx, x86::mem(ts->ebx + 0x4, 4));
	mov(&ts->esi, 0x2);
	mov(&ts->edi, ts->edi);

loc_577060:
	cdq(&ts->eax, ts->edx);
	mov(&ts->edi, 0xA);
	idiv(&ts->eax, ts->edi);
	add(&ts->dl, 0x30);
	mov(mv, x86::mem(ts->ecx, 1), ts->dl);
	dec(&ts->ecx);
	dec(&ts->esi);
	if (!ts->eflags.zero) {
        goto loc_577060;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x40, 4));
	mov(&ts->esi, ts->eax);
	and_(&ts->esi, 0x1);
	if (!ts->eflags.zero) {
        goto loc_577084;
    }
	test(&ts->eflags, ts->al, 0x2);
	if (ts->eflags.zero) {
        goto loc_57715A;
    }

loc_577084:
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x4C, 4), 0x9);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_57715A;
    }
	push(mv, &ts->esp, ts->ebx);
	game::sub_43DBB0(ts, mv);
	mov(&ts->edi, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DBD0(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esp + 0x1F, 1));
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_5770B2;
    }
	mov(mv, x86::mem(ts->esp + (ts->edi) + 0x17, 1), 0x0);

loc_5770B2:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->eax, x86::mem(ts->ebx + 0x1, 4));
	push(mv, &ts->esp, ts->eax);
	goto loc_577152;

loc_5770C0:
	cmp(&ts->eflags, ts->eax, 0x4);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5770DF;
    }
	cmp(&ts->eflags, ts->eax, 0x7);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_5770DF;
    }
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x40, 1), 0x4);
	if (ts->eflags.zero) {
        goto loc_5770D8;
    }
	mov(&ts->eax, 0x7A0638);
	goto loc_5770F0;

loc_5770D8:
	mov(&ts->eax, 0x7A0630);
	goto loc_5770F0;

loc_5770DF:
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x40, 1), 0x4);
	mov(&ts->eax, 0x7A0628);
	if (!ts->eflags.zero) {
        goto loc_5770F0;
    }
	mov(&ts->eax, 0x7A0620);

loc_5770F0:
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_43DBD0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x58, 4));
	add(&ts->esp, 0x8);
	lea(mv, &ts->ecx, x86::mem(ts->ebx + 0x3, 4));
	mov(&ts->esi, 0x2);

loc_577106:
	cdq(&ts->eax, ts->edx);
	mov(&ts->edi, 0xA);
	idiv(&ts->eax, ts->edi);
	add(&ts->dl, 0x30);
	mov(mv, x86::mem(ts->ecx, 1), ts->dl);
	dec(&ts->ecx);
	dec(&ts->esi);
	if (!ts->eflags.zero) {
        goto loc_577106;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x40, 4));
	mov(&ts->esi, ts->eax);
	and_(&ts->esi, 0x1);
	if (!ts->eflags.zero) {
        goto loc_577126;
    }
	test(&ts->eflags, ts->al, 0x2);
	if (ts->eflags.zero) {
        goto loc_57715A;
    }

loc_577126:
	push(mv, &ts->esp, ts->ebx);
	game::sub_43DBB0(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->edi, ts->eax);
	game::sub_43DBD0(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esp + 0x1F, 1));
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_577149;
    }
	mov(mv, x86::mem(ts->esp + (ts->edi) + 0x17, 1), 0x0);

loc_577149:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->ebx + 0x1, 4));
	push(mv, &ts->esp, ts->ecx);

loc_577152:
	game::sub_43DBD0(ts, mv);
	add(&ts->esp, 0x8);

loc_57715A:
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_577169;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(ts->ebx, 1), 0x2D);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x28);
	retn(mv, &ts->esp);

loc_577169:
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x40, 1), 0x2);
	if (ts->eflags.zero) {
        goto loc_577173;
    }
	mov(mv, x86::mem(ts->ebx, 1), 0x2B);

loc_577173:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x28);
	retn(mv, &ts->esp);
}

void sub_5771B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx, 4));
	mov(&ts->eax, 0x10624DD3);
	imul(&ts->eax, ts->esi);
	mov(&ts->ecx, ts->edx);
	sar(&ts->ecx, 0x8);
	mov(&ts->eax, ts->ecx);
	shr(&ts->eax, 0x1F);
	add(&ts->ecx, ts->eax);
	mov(&ts->edx, ts->ecx);
	imul(&ts->edx, ts->edx, 0xFA0);
	sub(&ts->esi, ts->edx);
	mov(&ts->eax, 0x91A2B3C5);
	imul(&ts->esi, ts->esi, 0x3E8);
	imul(&ts->eax, ts->ecx);
	add(&ts->edx, ts->ecx);
	sar(&ts->edx, 0xB);
	mov(&ts->eax, ts->edx);
	shr(&ts->eax, 0x1F);
	add(&ts->edx, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->edx);
	imul(&ts->edx, ts->edx, 0xFFFFF1F0);
	add(&ts->ecx, ts->edx);
	mov(&ts->eax, 0x88888889);
	imul(&ts->eax, ts->ecx);
	add(&ts->edx, ts->ecx);
	sar(&ts->edx, 0x5);
	mov(&ts->eax, ts->edx);
	shr(&ts->eax, 0x1F);
	add(&ts->edx, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->edx);
	imul(&ts->edx, ts->edx, 0x3C);
	sub(&ts->ecx, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(&ts->eax, 0x10624DD3);
	imul(&ts->eax, ts->esi);
	sar(&ts->edx, 0x8);
	mov(&ts->eax, ts->edx);
	shr(&ts->eax, 0x1F);
	add(&ts->edx, ts->eax);
	mov(mv, x86::mem(ts->ecx, 4), ts->edx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);
}

void sub_577240(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->esi, x86::mem(ts->edi, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_577255;
    }
	cmp(&ts->eflags, ts->esi, 0x7FFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_577277;
    }

loc_577255:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_576D30(ts, mv);
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x8);

loc_577277:
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_5772A0;
    }
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	neg(&ts->esi);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->edi, 4), ts->esi);
	game::sub_5771B0(ts, mv);
	neg(&ts->esi);
	mov(mv, x86::mem(ts->edi, 4), ts->esi);
	goto loc_5772BB;

loc_5772A0:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_5771B0(ts, mv);

loc_5772BB:
	cmp(mv, &ts->eflags, x86::mem(ts->edi, 4), 0x0);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_5772C5;
    }
	or_(mv, x86::mem(ts->esp + 0x20, 4), 0x1);

loc_5772C5:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(&ts->eax, 0x66666667);
	imul(&ts->eax, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	sar(&ts->edx, 0x2);
	mov(&ts->ecx, ts->edx);
	shr(&ts->ecx, 0x1F);
	add(&ts->edx, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_576D30(ts, mv);
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x8);
}

void sub_577310(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_57733D;
    }
	cmp(&ts->eflags, ts->edi, 0x7FFFFFFF);
	if (ts->eflags.zero) {
        goto loc_577344;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784264, 4));
	game::__ftol2(ts, mv);
	sub(&ts->edi, ts->eax);
	mov(mv, x86::mem(ts->esi, 4), ts->edi);
	if (!ts->eflags.sign) {
        goto loc_577344;
    }
	mov(mv, x86::mem(ts->esi, 4), 0x0);

loc_57733D:
	pop(mv, &ts->esp, ts->edi);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_577344:
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_57733D;
    }
	cmp(&ts->eflags, ts->esi, 0x7FFFFFFF);
	if (ts->eflags.zero) {
        goto loc_57733D;
    }
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_577360(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_577399;
    }
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));

loc_577399:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (!ts->eflags.zero) {
        goto loc_5773BA;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));

loc_5773BA:
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784264, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_5773E6;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));

loc_5773E6:
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x4);
}

void sub_577400(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->esi, ts->ecx);
	game::sub_577360(ts, mv);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784264, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_577430(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x4022C0);
	push(mv, &ts->esp, 0x570AB0);
	push(mv, &ts->esp, 0x1);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, 0x54);
	push(mv, &ts->esp, ts->esi);
	game::sub_75C461(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x54, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->eax);
	mov(&ts->edi, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x44, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x50, 4), 0x42700000);
	mov(mv, x86::mem(ts->esi + 0x40, 4), 0xFFFF0000);
	mov(mv, x86::mem(ts->esi + 0x48, 4), 0x40888889);
	mov(&ts->ecx, 0x10);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_577480(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, ts->ecx);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x1E4, 4), 0x800);
	retn(mv, &ts->esp);
}

void sub_5774A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x19, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto locret_5774B1;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	game::_free(ts, mv);
	pop(mv, &ts->esp, ts->ecx);

locret_5774B1:
	retn(mv, &ts->esp);
}

void sub_5774C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	sub(&ts->esp, 0x54);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x18, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_5774DE;
    }
	game::sub_570240(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x18, 1), 0x0);

loc_5774DE:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x1E, 2), 0x0);
	if (!ts->eflags.zero) {
        goto loc_5774F4;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_5774F4:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xC, 4));
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x3F800000);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), 0x3E6);
	mov(&ts->edi, ts->edi);

loc_577520:
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x48, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_570640(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x40, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x48, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x44, 4));
	push(mv, &ts->esp, 0x1);
	mov(mv, x86::mem(ts->esp + 0x34, 4), ts->edx);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x58, 4));
	mov(mv, x86::mem(ts->esp + 0x40, 4), ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x40, 4), ts->eax);
	game::sub_570640(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x50, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x54, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fsqrt(&ts->fp, x86::fp_index(0));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_5776FB;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + 0x4, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + 0x8, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fabs(&ts->fp, x86::fp_index(0));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x10, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_577701;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (ts->eflags.parity) {
        goto loc_5775E8;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	goto loc_577607;

loc_5775E8:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fchs(&ts->fp, x86::fp_index(0));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_5776FF;
    }

loc_577607:
	fdivr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fchs(&ts->fp, x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.zero) {
        goto loc_577626;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));

loc_577626:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_57763F;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	goto loc_577643;

loc_57763F:
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));

loc_577643:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	if (!ts->eflags.zero) {
        goto loc_57766B;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_43C240(ts, mv);
	add(&ts->esp, 0x8);
	goto loc_5776A8;

loc_57766B:
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_5776A8;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7A0354, 4));
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.zero) {
        goto loc_577695;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));

loc_577695:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_5776A8;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));

loc_5776A8:
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_5776CF;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));

loc_5776CF:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x2C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	dec(&ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_577520;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_5776FB:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));

loc_5776FF:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));

loc_577701:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);
}

void sub_577710(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	sub(&ts->esp, 0x38);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0xC, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	sub(&ts->eax, 0x0);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_577756;
    }
	sub(&ts->eax, 0x2);
	if (!ts->eflags.zero) {
        goto loc_577764;
    }
	movzx(mv, &ts->eax, x86::mem(ts->edi + 0x1E, 2));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	neg(&ts->eax);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	goto loc_577760;

loc_577756:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78435C, 4));

loc_577760:
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));

loc_577764:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (ts->eflags.zero) {
        goto loc_5777C6;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_570640(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x38, 4));
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_570640(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x3C, 4));
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ecx);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_5777C6;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.parity) {
        goto loc_5777D2;
    }

loc_5777C6:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_5777D2:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (!ts->eflags.zero) {
        goto loc_5777EC;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_5777EC:
	xor_(&ts->esi, ts->esi);
	goto loc_5777F2;

loc_5777F0:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));

loc_5777F2:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, 0x0);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	mov(&ts->ecx, ts->edi);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fdivp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fsub(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_570640(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x8, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	inc(&ts->esi);
	fabs(&ts->fp, x86::fp_index(0));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79DC38, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.parity) {
        goto loc_57788A;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_577863;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x2C, 4));
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->edx);

loc_577863:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_577881;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x2C, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ecx);

loc_577881:
	cmp(&ts->eflags, ts->esi, 0x28);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5777F0;
    }

loc_57788A:
	mov(mv, &ts->eax, x86::mem(0x864F1C, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_577895;
    }
	mov(&ts->esi, ts->eax);

loc_577895:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x864F20, 4));
	mov(mv, x86::mem(0x864F1C, 4), ts->esi);
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_5778B2;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x864F20, 4));

loc_5778B2:
	pop(mv, &ts->esp, ts->edi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x864F20, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_5778D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	sub(&ts->esp, 0x74);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	xor_(&ts->eax, ts->eax);
	mov(&ts->esi, ts->ecx);
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x1E, 2), ts->ax);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_577A32;
    }
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_577900:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + (ts->ecx), 4));
	add(&ts->eax, ts->ecx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x78, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x78, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->edx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0x2);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	mov(mv, x86::mem(ts->esi + 0x18, 1), 0x1);
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC, 4));
	if (!ts->eflags.zero) {
        goto loc_577951;
    }
	movzx(mv, &ts->edx, x86::mem(ts->esi + 0x1E, 2));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	dec(&ts->edx);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->edx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));

loc_577951:
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_577A12;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x58, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_570640(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x50, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x54, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x58, 4));
	mov(&ts->edi, 0x1);
	cmp(&ts->eflags, ts->ebx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x40, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x44, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x48, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->edi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_577A12;
    }
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));

loc_5779A1:
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x68, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	mov(&ts->ecx, ts->esi);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_570640(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x60, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x64, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x68, 4));
	mov(mv, x86::mem(ts->esp + 0x30, 4), ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x40, 4));
	mov(mv, x86::mem(ts->esp + 0x34, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x34, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x40, 4), ts->edx);
	game::sub_43CE10(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x38, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x3C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x40, 4));
	add(&ts->esp, 0x8);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	mov(mv, x86::mem(ts->esp + 0x40, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x44, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x48, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_5779A1;
    }

loc_577A12:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	add(&ts->edx, 0x10);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->edx);
	movzx(mv, &ts->edx, x86::mem(ts->esi + 0x1E, 2));
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_577900;
    }

loc_577A32:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->eax);
	game::sub_570240(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x18, 1), 0x0);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_577A50(x86::thread_state* ts, x86::memory_view* mv) {
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x4, 1), 0x1);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esi, 4), 0x7A0358);
	if (ts->eflags.zero) {
        goto loc_577A69;
    }
	push(mv, &ts->esp, ts->esi);
	game::_free(ts, mv);
	add(&ts->esp, 0x4);

loc_577A69:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_577A80(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->edx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_577A8C;
    }
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);

loc_577A8C:
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x18, 1), ts->al);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_577A9B;
    }
	mov(mv, x86::mem(ts->ecx + 0x18, 1), ts->al);

loc_577A9B:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	retn(mv, &ts->esp, 0x8);
}

void sub_577AB0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->esi + (ts->eax), 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (!ts->eflags.carry) {
        goto loc_577AE3;
    }

loc_577AC1:
	game::sub_43BDF0(ts, mv);
	push(mv, &ts->esp, ts->esi);
	game::sub_570D70(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_577AD8;
    }
	game::sub_43BD50(ts, mv);

loc_577AD8:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->esi, x86::mem(ts->esi + (ts->ecx) + 0x8, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.carry) {
        goto loc_577AC1;
    }

loc_577AE3:
	mov(mv, &ts->al, x86::mem(0x864F74, 1));
	test(&ts->eflags, ts->al, ts->al);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	if (!ts->eflags.zero) {
        goto locret_577B0B;
    }
	game::sub_43BDF0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x82DAB4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_577B06;
    }
	game::nullsub_1(ts, mv);
	game::sub_4908F0(ts, mv);

loc_577B06:
	goto sub_4887C0;

locret_577B0B:
	retn(mv, &ts->esp);
}

void sub_577B10(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x100);
	push(mv, &ts->esp, ts->edi);
	game::nullsub_1(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x108, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10C, 4));
	lea(mv, &ts->edi, x86::mem(ts->edx + (ts->eax), 4));
	cmp(&ts->eflags, ts->edx, ts->edi);
	if (!ts->eflags.carry) {
        goto loc_577C19;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);

loc_577B38:
	xor_(&ts->ecx, ts->ecx);
	cmp(&ts->eflags, ts->edx, ts->edi);
	mov(&ts->eax, ts->edx);
	if (!ts->eflags.carry) {
        goto loc_577B5F;
    }

loc_577B40:
	mov(&ts->esi, ts->ecx);
	and_(&ts->esi, 0x8000003F);
	if (!ts->eflags.sign) {
        goto loc_577B4F;
    }
	dec(&ts->esi);
	or_(&ts->esi, 0xFFFFFFC0);
	inc(&ts->esi);

loc_577B4F:
	mov(mv, x86::mem(ts->esp + (ts->esi*4) + 0x10, 4), ts->eax);
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x4, 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->esi) + 0x8, 4));
	inc(&ts->ecx);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.carry) {
        goto loc_577B40;
    }

loc_577B5F:
	cmp(&ts->eflags, ts->ecx, 0x40);
	mov(&ts->eax, ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_577B6D;
    }
	mov(&ts->eax, 0x40);
	goto loc_577B75;

loc_577B6D:
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_577C0E;
    }

loc_577B75:
	lea(mv, &ts->ebx, x86::mem(ts->ecx - 0x1, 4));
	mov(&ts->ebp, ts->eax);
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_577B80:
	mov(&ts->ecx, ts->ebx);
	and_(&ts->ecx, 0x8000003F);
	if (!ts->eflags.sign) {
        goto loc_577B8F;
    }
	dec(&ts->ecx);
	or_(&ts->ecx, 0xFFFFFFC0);
	inc(&ts->ecx);

loc_577B8F:
	mov(mv, &ts->edi, x86::mem(ts->esp + (ts->ecx*4) + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	mov(&ts->eax, 0x7FAA0C);
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_577BA0:
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_577BD5;
    }
	add(&ts->eax, 0x8);
	cmp(&ts->eflags, ts->eax, 0x7FAA14);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_577BA0;
    }
	mov(mv, &ts->eax, x86::mem(0x866610, 4));
	inc(&ts->eax);
	and_(&ts->eax, 0x3);
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*4), 4));
	mov(mv, x86::mem(0x866610, 4), ts->eax);
	lea(mv, &ts->eax, x86::mem(0x8665C0, 4));
	push(mv, &ts->esp, 0x7A03A8);
	push(mv, &ts->esp, ts->eax);
	game::sub_4400D0(ts, mv);
	add(&ts->esp, 0xC);

loc_577BD5:
	game::sub_43BDF0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_577BFF;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_43C100(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_577C46;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xC, 4));
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, ts->eax);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_577BFF;
    }

loc_577BFA:
	game::sub_43BD50(ts, mv);

loc_577BFF:
	dec(&ts->ebx);
	dec(&ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_577B80;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x114, 4));

loc_577C0E:
	cmp(&ts->eflags, ts->edx, ts->edi);
	if (ts->eflags.carry) {
        goto loc_577B38;
    }
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);

loc_577C19:
	mov(mv, &ts->al, x86::mem(0x864F74, 1));
	test(&ts->eflags, ts->al, ts->al);
	pop(mv, &ts->esp, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_577C69;
    }
	game::sub_43BDF0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x82DAB4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_577C3B;
    }
	game::nullsub_1(ts, mv);
	game::sub_4908F0(ts, mv);

loc_577C3B:
	add(&ts->esp, 0x100);
	goto sub_4887C0;

loc_577C46:
	mov(&ts->esi, 0x7FA8E8);
	goto loc_577C50;

loc_577C50:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, ts->eax);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_577BFF;
    }
	add(&ts->esi, 0x4);
	cmp(&ts->eflags, ts->esi, 0x7FA978);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_577C50;
    }
	goto loc_577BFA;

loc_577C69:
	add(&ts->esp, 0x100);
	retn(mv, &ts->esp);
}

void sub_577C70(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->eax, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_577D02;
    }
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_577D02;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x0);
	game::sub_570DD0(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->ebx + (ts->esi), 4));
	add(&ts->esp, 0x18);
	cmp(&ts->eflags, ts->esi, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	mov(&ts->edi, ts->esi);
	if (!ts->eflags.carry) {
        goto loc_577CF3;
    }

loc_577CB2:
	cmp(mv, &ts->eflags, x86::mem(ts->edi, 4), 0x0);
	if (!ts->eflags.sign) {
        goto loc_577CDD;
    }
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	add(&ts->ebp, 0x8);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->edi + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x1);
	game::sub_570DD0(ts, mv);
	add(&ts->esp, 0x18);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_577CDD;
    }
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);

loc_577CDD:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	lea(mv, &ts->edi, x86::mem(ts->edi + (ts->eax) + 0x8, 4));
	lea(mv, &ts->eax, x86::mem(ts->ebx + (ts->esi), 4));
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.carry) {
        goto loc_577CB2;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_577D0C;
    }

loc_577CF3:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	game::sub_577AB0(ts, mv);
	add(&ts->esp, 0xC);

loc_577D02:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);

loc_577D0C:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x24, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_440820(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	mov(&ts->edi, ts->eax);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x0);
	game::sub_570DD0(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	game::sub_570F00(ts, mv);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x50, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	game::sub_577AB0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x48, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	game::sub_577AB0(ts, mv);
	add(&ts->esp, 0x40);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	game::sub_577B10(ts, mv);
	push(mv, &ts->esp, ts->esi);
	game::sub_440540(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x30, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x24, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x2C, 4));
	add(&ts->esp, 0x10);
	mov(mv, x86::mem(ts->eax, 4), ts->edx);
	mov(mv, x86::mem(ts->ecx, 4), ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_577D80(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xEC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_577D96;
    }
	push(mv, &ts->esp, ts->eax);
	game::nullsub_1(ts, mv);
	add(&ts->esp, 0x4);

loc_577D96:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xD8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_577DD8;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xDC, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_577B10(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x8, 1));
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_577DD8;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xD8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_577DD8;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0xD8, 4), 0x0);

loc_577DD8:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_577DE0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xCC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_577EA0;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_577EA0;
    }
	test(mv, &ts->eflags, x86::mem(ts->esi + 0x10, 1), 0x8);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_577E57;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xD8, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_577E57;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_574630(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_577E57;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0xDC, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xD8, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_577E4E;
    }
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_570FD0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xD8, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	game::sub_574670(ts, mv);
	add(&ts->esp, 0x8);

loc_577E4E:
	push(mv, &ts->esp, ts->edi);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_577E57:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC4, 4));
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x94, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0xDC, 4));
	lea(mv, &ts->edi, x86::mem(ts->esi + 0xD8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	game::sub_577C70(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x10, 1));
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->al, 0x4);
	if (ts->eflags.zero) {
        goto loc_577E94;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->edi, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_577E8E;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_571020(ts, mv);

loc_577E8E:
	mov(mv, x86::mem(ts->ebx, 4), 0x0);

loc_577E94:
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0xCC, 4), 0x1);
	pop(mv, &ts->esp, ts->ebx);

loc_577EA0:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_577EB0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(0x8651A8, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x8651A4);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	mov(&ts->edi, ts->eax);
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_577EE8;
    }
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x10, 4));
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_577ED0:
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_577EEE;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_577ED0;
    }

loc_577EE8:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_577EEE:
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_577F00(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(0x827E8C, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(&ts->ecx, 0x827E88);
	if (ts->eflags.zero) {
        goto loc_577F41;
    }
	game::sub_43B930(ts, mv);

loc_577F13:
	mov(mv, &ts->eax, x86::mem(0x864F54, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_577F56;
    }
	mov(mv, &ts->al, x86::mem(0x865498, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_577F2C;
    }
	mov(mv, x86::mem(0x865498, 1), 0x0);

loc_577F2C:
	mov(mv, x86::mem(0x865484, 4), 0x577F00);
	mov(mv, x86::mem(0x86548C, 4), 0x7A0704);
	retn(mv, &ts->esp);

loc_577F41:
	game::sub_430550(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_577F56;
    }
	mov(&ts->ecx, 0x827E88);
	game::sub_43BB10(ts, mv);
	goto loc_577F13;

loc_577F56:
	mov(&ts->ecx, 0x8654A8);
	goto sub_57F2D0;
}

void sub_577F60(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x30);
	movzx(mv, &ts->eax, x86::mem(0x83AA1A, 1));
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, 0x89E7A0);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	game::sub_5ED960(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_577F86;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 1), 0x0);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_577F92;
    }

loc_577F86:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, 0x89E7A0);
	game::sub_5ED960(ts, mv);

loc_577F92:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_578050;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 1), 0x0);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_578050;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->esi, x86::mem(ts->eax + 0x10, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	game::sub_5B5350(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	mov(&ts->edi, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ecx);
	push(mv, &ts->esp, 0xA3);
	mov(&ts->ecx, ts->esi);
	add(&ts->edi, 0x1F0);
	game::sub_6102F0(ts, mv);
	mov(&ts->ebx, ts->eax);
	xor_(&ts->esi, ts->esi);
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_577FED;
    }
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x798538);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	game::sub_61B500(ts, mv);
	mov(&ts->esi, ts->eax);

loc_577FED:
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, 0x7A0714);
	push(mv, &ts->esp, ts->edx);
	game::sub_4400D0(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ebp + 0x78, 4), 0x0);
	mov(mv, x86::mem(ts->ebp + 0x7C, 4), ts->esi);
	game::sub_4944D0(ts, mv);
	push(mv, &ts->esp, 0x0);
	game::sub_490170(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x30, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x34, 4));
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->ebx, x86::mem(ts->ebp + 0x80, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edx);
	game::sub_5ED9B0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x7C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x78, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->ebx);
	game::sub_494D60(ts, mv);
	add(&ts->esp, 0x48);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);

loc_578050:
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0x30);
	retn(mv, &ts->esp, 0x8);
}

void sub_578060(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x2C);
	mov(mv, &ts->eax, x86::mem(0x883DAC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_57807D;
    }
	movsx(mv, &ts->eax, x86::mem(ts->eax + 0x8A, 2));
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	goto loc_578085;

loc_57807D:
	mov(mv, x86::mem(ts->esp, 4), 0x0);

loc_578085:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x1);
	push(mv, &ts->esp, ts->edi);

loc_578090:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	add(&ts->eax, 0xA28);
	movsx(&ts->esi, ts->ax);
	push(mv, &ts->esp, ts->esi);
	game::sub_5D6D70(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DB50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x883E70);
	mov(&ts->edi, ts->eax);
	game::sub_5DB610(ts, mv);
	mov(&ts->bl, ts->al);
	neg(&ts->bl);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x88F768);
	sbb(&ts->ebx, ts->ebx);
	inc(&ts->ebx);
	game::sub_5D3C60(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5780D6;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 1), ts->bl);

loc_5780D6:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0x14);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_578090;
    }
	mov(&ts->ecx, 0x88F298);
	game::sub_5D4FE0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, 0x7A0794);
	push(mv, &ts->esp, ts->eax);
	game::sub_4400D0(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_5D7400(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_578161;
    }
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->esi, ts->eax);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x883E70);
	game::sub_5D7470(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->edi + 0x4, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_578149;
    }
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x88F768);
	game::sub_5D3C60(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_578149;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 1), 0x1);

loc_578149:
	push(mv, &ts->esp, ts->esi);
	game::sub_5DB340(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_57815F;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_5710A0(ts, mv);

loc_57815F:
	mov(&ts->eax, ts->esi);

loc_578161:
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->ebx + 0x18, 4), ts->eax);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x88F298);
	game::sub_5D5010(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, 0x7A0780);
	push(mv, &ts->esp, ts->edx);
	game::sub_4400D0(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_5D7400(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_5781EC;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->edi, ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x883E70);
	game::sub_5D7470(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x4, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5781D4;
    }
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x88F768);
	game::sub_5D3C60(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5781D4;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 1), 0x1);

loc_5781D4:
	push(mv, &ts->esp, ts->edi);
	game::sub_5DB340(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_5781EA;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_5710A0(ts, mv);

loc_5781EA:
	mov(&ts->eax, ts->esi);

loc_5781EC:
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x88F298);
	mov(mv, x86::mem(ts->ebx + 0x1C, 4), ts->eax);
	game::sub_5D5010(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x89E7B0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_57829B;
    }
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_57824A;
    }
	mov(mv, &ts->ecx, x86::mem(0x862838, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(&ts->eax, 0x7A0774);
	if (!ts->eflags.zero) {
        goto loc_578239;
    }
	mov(mv, &ts->al, x86::mem(0x86347D, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(&ts->eax, 0x7A0760);
	if (!ts->eflags.zero) {
        goto loc_578239;
    }
	mov(&ts->eax, 0x7A074C);

loc_578239:
	push(mv, &ts->esp, ts->eax);
	game::sub_571160(ts, mv);
	mov(mv, x86::mem(ts->ebx + 0x28, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	add(&ts->esp, 0x4);

loc_57824A:
	cmp(&ts->eflags, ts->eax, 0x200);
	mov(mv, &ts->ecx, x86::mem(0x862838, 4));
	if (ts->eflags.zero) {
        goto loc_57825C;
    }
	cmp(&ts->eflags, ts->eax, 0x8);
	if (!ts->eflags.zero) {
        goto loc_57826A;
    }

loc_57825C:
	cmp(mv, &ts->eflags, x86::mem(0x850088, 4), 0x8);
	if (!ts->eflags.zero) {
        goto loc_57826A;
    }
	mov(&ts->ecx, 0x5);

loc_57826A:
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, 0x7A0738);
	push(mv, &ts->esp, ts->eax);
	game::sub_4400D0(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_571160(ts, mv);
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x88F298);
	mov(mv, x86::mem(ts->ebx + 0x2C, 4), ts->eax);
	game::sub_5D5010(ts, mv);

loc_57829B:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x2C);
	retn(mv, &ts->esp);
}

void sub_5782B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x8654A8);
	game::sub_5711D0(ts, mv);
	mov(&ts->ecx, 0x8654A8);
	game::sub_578060(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x890080, 4));
	mov(mv, &ts->esi, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5782E1;
    }

loc_5782D0:
	mov(&ts->ecx, ts->esi);
	game::sub_5F54A0(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(mv, &ts->eflags, ts->esi, x86::mem(0x890080, 4));
	if (!ts->eflags.zero) {
        goto loc_5782D0;
    }

loc_5782E1:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_5782F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	mov(mv, x86::mem(0x8654A4, 4), 0x6);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_5F43D0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x1C, 4));
	mov(mv, &ts->ecx, x86::mem(0x890118, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_5FC900(ts, mv);
	retn(mv, &ts->esp);
}

void sub_578320(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->edx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57832C;
    }
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);

loc_57832C:
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x18, 1), ts->al);
	mov(mv, x86::mem(ts->ecx + 0xC, 4), 0x7A07B0);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), 0x581A20);
	if (ts->eflags.zero) {
        goto locret_578342;
    }
	mov(mv, x86::mem(ts->ecx + 0x18, 1), ts->al);

locret_578342:
	retn(mv, &ts->esp);
}

void sub_578350(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->cl, x86::mem(0x7F63E0, 1));
	xor_(&ts->al, ts->al);
	cmp(&ts->eflags, ts->cl, ts->al);
	mov(mv, &ts->cl, x86::mem(0x865498, 1));
	if (ts->eflags.zero) {
        goto loc_578380;
    }
	cmp(&ts->eflags, ts->cl, ts->al);
	if (ts->eflags.zero) {
        goto loc_57836B;
    }
	mov(mv, x86::mem(0x865498, 1), ts->al);

loc_57836B:
	mov(mv, x86::mem(0x865484, 4), 0x580090);
	mov(mv, x86::mem(0x86548C, 4), 0x7A07E0);
	retn(mv, &ts->esp);

loc_578380:
	cmp(&ts->eflags, ts->cl, ts->al);
	if (ts->eflags.zero) {
        goto loc_578389;
    }
	mov(mv, x86::mem(0x865498, 1), ts->al);

loc_578389:
	mov(mv, x86::mem(0x865484, 4), 0x578350);
	mov(mv, x86::mem(0x86548C, 4), 0x7A07C4);
	retn(mv, &ts->esp);
}

void sub_5783A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(0x865498, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, x86::mem(0x86548C, 4), 0x7A07C4);
	mov(mv, x86::mem(0x865484, 4), 0x578350);
	if (ts->eflags.zero) {
        goto locret_5783C4;
    }
	mov(mv, x86::mem(0x865498, 1), 0x0);

locret_5783C4:
	retn(mv, &ts->esp);
}

void sub_5783D0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(0x865484, 4));
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5783E1;
    }
	mov(mv, x86::mem(0x865484, 4), ts->eax);

loc_5783E1:
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x5783A0);
	mov(mv, x86::mem(0x865498, 1), 0x1);
	mov(mv, x86::mem(0x86549C, 4), 0x7A07FC);
	mov(mv, x86::mem(0x8654A0, 4), ts->eax);
	game::sub_486E70(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_578410(x86::thread_state* ts, x86::memory_view* mv) {
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7A081C, 4));
	push(mv, &ts->esp, ts->esi);
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	mov(&ts->esi, ts->ecx);
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi, 4));
	game::__ftol2(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_571710(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x41, 1));
	or_(mv, &ts->cl, x86::mem(ts->esi + 0x40, 1));
	if (ts->eflags.zero) {
        goto loc_578454;
    }
	movsx(mv, &ts->edx, x86::mem(ts->esp + 0x10, 2));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fdiv(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi, 4));

loc_578454:
	pop(mv, &ts->esp, ts->edi);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_578460(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x14, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC, 4));
	xor_(&ts->bl, ts->bl);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x13, 1), ts->bl);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (ts->eflags.parity) {
        goto loc_5784E2;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x1C, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (ts->eflags.parity) {
        goto loc_5784E2;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x2C, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (ts->eflags.parity) {
        goto loc_5784E2;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x3C, 4), 0x3F800000);
	if (!ts->eflags.zero) {
        goto loc_5784E2;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x30, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (ts->eflags.parity) {
        goto loc_5784DC;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x34, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (ts->eflags.parity) {
        goto loc_5784DC;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x38, 4));
	mov(&ts->bl, 0x1);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_5784DE;
    }

loc_5784DC:
	mov(&ts->bl, 0x2);

loc_5784DE:
	mov(mv, x86::mem(ts->esp + 0x13, 1), ts->bl);

loc_5784E2:
	mov(mv, &ts->al, x86::mem(ts->edi + 0x40, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_57850D;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x1DC, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x1E4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x1, 4));
	cmp(&ts->eflags, ts->ecx, ts->edx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_578503;
    }
	mov(mv, x86::mem(ts->eax + (ts->edi) + 0x1E8, 1), ts->bl);

loc_578503:
	mov(mv, x86::mem(ts->edi + 0x1DC, 4), ts->ecx);
	xor_(&ts->ebp, ts->ebp);
	goto loc_578524;

loc_57850D:
	xor_(&ts->ebp, ts->ebp);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x1F, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_571640(ts, mv);
	mov(mv, &ts->bl, x86::mem(ts->esp + 0x13, 1));

loc_578524:
	test(&ts->eflags, ts->bl, ts->bl);
	mov(&ts->ecx, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_57853D;
    }
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x40);
	push(mv, &ts->esp, ts->esi);
	game::sub_571640(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);

loc_57853D:
	push(mv, &ts->esp, ts->esi);
	game::sub_402050(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_402050(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_402050(ts, mv);
	cmp(&ts->eflags, ts->bl, 0x2);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->ebp);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->ebp);
	mov(mv, x86::mem(ts->esi + 0x2C, 4), ts->ebp);
	mov(mv, x86::mem(ts->esi + 0x3C, 4), 0x3F800000);
	if (!ts->eflags.zero) {
        goto loc_578581;
    }
	add(&ts->esi, 0x30);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	game::sub_402050(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);

loc_578581:
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x30, 4), ts->ebp);
	mov(mv, x86::mem(ts->esi + 0x34, 4), ts->ebp);
	mov(mv, x86::mem(ts->esi + 0x38, 4), ts->ebp);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);
}

void sub_5785A0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x41, 1));
	xor_(&ts->ebp, ts->ebp);
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_5787D3;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_5789F3;
    }
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x20, 4));

loc_5785C6:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x40, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5785F3;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1DC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1E4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x1, 4));
	cmp(&ts->eflags, ts->ecx, ts->edx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_5785EB;
    }
	mov(mv, &ts->dl, x86::mem(ts->esp + 0x12, 1));
	mov(mv, x86::mem(ts->eax + (ts->esi) + 0x1E8, 1), ts->dl);

loc_5785EB:
	mov(mv, x86::mem(ts->esi + 0x1DC, 4), ts->ecx);
	goto loc_578633;

loc_5785F3:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x41, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_57860E;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x1E, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_5715B0(ts, mv);
	goto loc_578633;

loc_57860E:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x42, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_578633;
    }
	movzx(mv, &ts->eax, x86::mem(ts->esp + 0x12, 1));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x2);
	push(mv, &ts->esp, 0x2);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	sub(&ts->eax, 0x21);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->eax);
	game::sub_571550(ts, mv);

loc_578633:
	movzx(mv, &ts->edx, x86::mem(ts->esp + 0x12, 1));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_57865F;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	mov(&ts->bx, ts->ax);
	lea(mv, &ts->edi, x86::mem(ts->edi + (ts->ebp*2), 4));
	mov(&ts->ecx, ts->edx);
	shl(&ts->ebx, 0x10);
	mov(&ts->bx, ts->ax);
	shr(&ts->ecx, 0x1);
	mov(&ts->eax, ts->ebx);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	adc(&ts->ecx, ts->ecx);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x20, 4));
	add(&ts->ebp, ts->edx);

loc_57865F:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x40, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_57868C;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1DC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1E4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x1, 4));
	cmp(&ts->eflags, ts->ecx, ts->edx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_578684;
    }
	mov(mv, &ts->dl, x86::mem(ts->esp + 0x13, 1));
	mov(mv, x86::mem(ts->eax + (ts->esi) + 0x1E8, 1), ts->dl);

loc_578684:
	mov(mv, x86::mem(ts->esi + 0x1DC, 4), ts->ecx);
	goto loc_5786F1;

loc_57868C:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x41, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5786BB;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1DC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1E0, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x1, 4));
	cmp(&ts->eflags, ts->ecx, ts->edx);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_5786B3;
    }
	mov(mv, &ts->dl, x86::mem(ts->eax + (ts->esi) + 0x1E8, 1));
	mov(&ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x13, 1), ts->dl);

loc_5786B3:
	mov(mv, x86::mem(ts->esi + 0x1DC, 4), ts->eax);
	goto loc_5786F1;

loc_5786BB:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x42, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5786F1;
    }
	movzx(mv, &ts->eax, x86::mem(ts->esp + 0x13, 1));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1DC, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x1E4, 4));
	lea(mv, &ts->edx, x86::mem(ts->ecx + 0x2, 4));
	sub(&ts->eax, 0x21);
	cmp(&ts->eflags, ts->edx, ts->ebx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_5786EB;
    }
	mov(mv, x86::mem(ts->ecx + (ts->esi) + 0x1E8, 1), ts->al);
	mov(mv, x86::mem(ts->ecx + (ts->esi) + 0x1E9, 1), ts->ah);

loc_5786EB:
	mov(mv, x86::mem(ts->esi + 0x1DC, 4), ts->edx);

loc_5786F1:
	movzx(mv, &ts->eax, x86::mem(ts->esp + 0x13, 1));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_5787BF;
    }
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);

loc_578702:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x40, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_578737;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1DC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1E4, 4));
	lea(mv, &ts->edx, x86::mem(ts->eax + 0x2, 4));
	cmp(&ts->eflags, ts->edx, ts->ecx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_5787A9;
    }
	mov(mv, &ts->cl, x86::mem(ts->edi + (ts->ebp*2) + 0x1, 1));
	mov(mv, &ts->bl, x86::mem(ts->edi + (ts->ebp*2), 1));
	mov(mv, x86::mem(ts->eax + (ts->esi) + 0x1E8, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + (ts->esi) + 0x1E9, 1), ts->cl);
	goto loc_5787A9;

loc_578737:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x41, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_578770;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1DC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1E0, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x2, 4));
	cmp(&ts->eflags, ts->ecx, ts->edx);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_578768;
    }
	mov(mv, &ts->dl, x86::mem(ts->eax + (ts->esi) + 0x1E8, 1));
	mov(mv, x86::mem(ts->edi + (ts->ebp*2), 1), ts->dl);
	mov(mv, &ts->al, x86::mem(ts->eax + (ts->esi) + 0x1E9, 1));
	mov(mv, x86::mem(ts->edi + (ts->ebp*2) + 0x1, 1), ts->al);
	mov(&ts->eax, ts->ecx);

loc_578768:
	mov(mv, x86::mem(ts->esi + 0x1DC, 4), ts->eax);
	goto loc_5787AF;

loc_578770:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x42, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5787AF;
    }
	movzx(mv, &ts->eax, x86::mem(ts->edi + (ts->ebp*2), 1));
	movzx(mv, &ts->ecx, x86::mem(ts->edi + (ts->ebp*2) + 0x1, 1));
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x1E4, 4));
	sub(&ts->eax, 0x21);
	imul(&ts->eax, ts->eax, 0x21);
	add(&ts->ecx, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1DC, 4));
	lea(mv, &ts->edx, x86::mem(ts->eax + 0x2, 4));
	cmp(&ts->eflags, ts->edx, ts->ebx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_5787A9;
    }
	mov(mv, x86::mem(ts->eax + (ts->esi) + 0x1E8, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + (ts->esi) + 0x1E9, 1), ts->ch);

loc_5787A9:
	mov(mv, x86::mem(ts->esi + 0x1DC, 4), ts->edx);

loc_5787AF:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	inc(&ts->ebp);
	dec(&ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_578702;
    }

loc_5787BF:
	cmp(mv, &ts->eflags, ts->ebp, x86::mem(ts->esp + 0x24, 4));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5785C6;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp, 0xC);

loc_5787D3:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_5789F3;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ecx);

loc_5787E3:
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x28, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	xor_(&ts->al, ts->al);
	cmp(mv, &ts->eflags, x86::mem(ts->edx, 2), ts->di);
	if (!ts->eflags.zero) {
        goto loc_578809;
    }

loc_5787F2:
	cmp(&ts->eflags, ts->al, 0xFF);
	if (!ts->eflags.carry) {
        goto loc_578809;
    }
	cmp(mv, &ts->eflags, ts->ebp, x86::mem(ts->esp + 0x24, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_578809;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	inc(&ts->al);
	inc(&ts->ebp);
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + (ts->ebp*2), 2), ts->di);
	if (ts->eflags.zero) {
        goto loc_5787F2;
    }

loc_578809:
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x40, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_578832;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1DC, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x1E4, 4));
	lea(mv, &ts->edx, x86::mem(ts->ecx + 0x1, 4));
	cmp(&ts->eflags, ts->edx, ts->ebx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_57882A;
    }
	mov(mv, x86::mem(ts->ecx + (ts->esi) + 0x1E8, 1), ts->al);

loc_57882A:
	mov(mv, x86::mem(ts->esi + 0x1DC, 4), ts->edx);
	goto loc_578870;

loc_578832:
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x41, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_57884D;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x1F, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_5715B0(ts, mv);
	goto loc_578870;

loc_57884D:
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x42, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_578870;
    }
	movzx(&ts->eax, ts->al);
	push(mv, &ts->esp, 0x0);
	sub(&ts->eax, 0x21);
	push(mv, &ts->esp, 0x2);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->eax);
	push(mv, &ts->esp, 0x2);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_571550(ts, mv);

loc_578870:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	lea(mv, &ts->eax, x86::mem(ts->ecx + (ts->ebp*2), 4));
	xor_(&ts->bl, ts->bl);
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 2), ts->di);
	mov(mv, x86::mem(ts->esp + 0x12, 1), ts->bl);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_5788A5;
    }

loc_578886:
	cmp(&ts->eflags, ts->bl, 0xFF);
	if (!ts->eflags.carry) {
        goto loc_5788A1;
    }
	cmp(mv, &ts->eflags, ts->ebp, x86::mem(ts->esp + 0x24, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_5788A1;
    }
	inc(&ts->bl);
	inc(&ts->ebp);
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + (ts->ebp*2), 2), ts->di);
	lea(mv, &ts->eax, x86::mem(ts->ecx + (ts->ebp*2), 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_578886;
    }

loc_5788A1:
	mov(mv, x86::mem(ts->esp + 0x12, 1), ts->bl);

loc_5788A5:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x40, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5788CE;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1DC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1E4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x1, 4));
	cmp(&ts->eflags, ts->ecx, ts->edx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_5788C6;
    }
	mov(mv, x86::mem(ts->eax + (ts->esi) + 0x1E8, 1), ts->bl);

loc_5788C6:
	mov(mv, x86::mem(ts->esi + 0x1DC, 4), ts->ecx);
	goto loc_578910;

loc_5788CE:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x41, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5788ED;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1E, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_5715B0(ts, mv);
	mov(mv, &ts->bl, x86::mem(ts->esp + 0x12, 1));
	goto loc_578910;

loc_5788ED:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x42, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_578910;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x2);
	movzx(&ts->eax, ts->bl);
	push(mv, &ts->esp, 0x2);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x24, 4));
	sub(&ts->eax, 0x21);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->eax);
	game::sub_571550(ts, mv);

loc_578910:
	movzx(&ts->eax, ts->bl);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_5789E9;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	mov(&ts->ecx, ts->ebp);
	sub(&ts->ecx, ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->edx + (ts->ecx*2), 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_578930:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x40, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_578963;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1DC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1E4, 4));
	lea(mv, &ts->edi, x86::mem(ts->eax + 0x2, 4));
	cmp(&ts->eflags, ts->edi, ts->ecx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_5789D1;
    }
	mov(mv, &ts->cl, x86::mem(ts->edx + 0x1, 1));
	mov(mv, &ts->bl, x86::mem(ts->edx, 1));
	mov(mv, x86::mem(ts->eax + (ts->esi) + 0x1E8, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + (ts->esi) + 0x1E9, 1), ts->cl);
	goto loc_5789D1;

loc_578963:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x41, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_57899A;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1DC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1E0, 4));
	lea(mv, &ts->edi, x86::mem(ts->eax + 0x2, 4));
	cmp(&ts->eflags, ts->edi, ts->ecx);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_578992;
    }
	mov(mv, &ts->cl, x86::mem(ts->eax + (ts->esi) + 0x1E8, 1));
	mov(mv, x86::mem(ts->edx, 1), ts->cl);
	mov(mv, &ts->al, x86::mem(ts->eax + (ts->esi) + 0x1E9, 1));
	mov(mv, x86::mem(ts->edx + 0x1, 1), ts->al);
	mov(&ts->eax, ts->edi);

loc_578992:
	mov(mv, x86::mem(ts->esi + 0x1DC, 4), ts->eax);
	goto loc_5789D7;

loc_57899A:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x42, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5789D7;
    }
	movzx(mv, &ts->eax, x86::mem(ts->edx, 1));
	movzx(mv, &ts->ecx, x86::mem(ts->edx + 0x1, 1));
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x1E4, 4));
	sub(&ts->eax, 0x21);
	imul(&ts->eax, ts->eax, 0x21);
	add(&ts->ecx, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1DC, 4));
	lea(mv, &ts->edi, x86::mem(ts->eax + 0x2, 4));
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_5789D1;
    }
	mov(mv, x86::mem(ts->eax + (ts->esi) + 0x1E8, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + (ts->esi) + 0x1E9, 1), ts->ch);

loc_5789D1:
	mov(mv, x86::mem(ts->esi + 0x1DC, 4), ts->edi);

loc_5789D7:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	add(&ts->edx, 0x2);
	dec(&ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_578930;
    }

loc_5789E9:
	cmp(mv, &ts->eflags, ts->ebp, x86::mem(ts->esp + 0x24, 4));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5787E3;
    }

loc_5789F3:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp, 0xC);
}

void sub_578A00(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x41, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_578B72;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	xor_(&ts->ebx, ts->ebx);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_578CC8;
    }

loc_578A22:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x40, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_578A4F;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1DC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1E4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x1, 4));
	cmp(&ts->eflags, ts->ecx, ts->edx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_578A47;
    }
	mov(mv, &ts->dl, x86::mem(ts->esp + 0x12, 1));
	mov(mv, x86::mem(ts->eax + (ts->esi) + 0x1E8, 1), ts->dl);

loc_578A47:
	mov(mv, x86::mem(ts->esi + 0x1DC, 4), ts->ecx);
	goto loc_578A8F;

loc_578A4F:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x41, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_578A6A;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x1E, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_5715B0(ts, mv);
	goto loc_578A8F;

loc_578A6A:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x42, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_578A8F;
    }
	movzx(mv, &ts->eax, x86::mem(ts->esp + 0x12, 1));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x2);
	push(mv, &ts->esp, 0x2);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	sub(&ts->eax, 0x21);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->eax);
	game::sub_571550(ts, mv);

loc_578A8F:
	movzx(mv, &ts->edx, x86::mem(ts->esp + 0x12, 1));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_578AA9;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	lea(mv, &ts->edi, x86::mem(ts->eax + (ts->ebx*4), 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	mov(&ts->ecx, ts->edx);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	add(&ts->ebx, ts->edx);

loc_578AA9:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x40, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_578AD6;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1DC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1E4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x1, 4));
	cmp(&ts->eflags, ts->ecx, ts->edx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_578ACE;
    }
	mov(mv, &ts->dl, x86::mem(ts->esp + 0x13, 1));
	mov(mv, x86::mem(ts->eax + (ts->esi) + 0x1E8, 1), ts->dl);

loc_578ACE:
	mov(mv, x86::mem(ts->esi + 0x1DC, 4), ts->ecx);
	goto loc_578B3B;

loc_578AD6:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x41, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_578B05;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1DC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1E0, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x1, 4));
	cmp(&ts->eflags, ts->ecx, ts->edx);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_578AFD;
    }
	mov(mv, &ts->dl, x86::mem(ts->eax + (ts->esi) + 0x1E8, 1));
	mov(&ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x13, 1), ts->dl);

loc_578AFD:
	mov(mv, x86::mem(ts->esi + 0x1DC, 4), ts->eax);
	goto loc_578B3B;

loc_578B05:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x42, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_578B3B;
    }
	movzx(mv, &ts->eax, x86::mem(ts->esp + 0x13, 1));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1DC, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x1E4, 4));
	lea(mv, &ts->edx, x86::mem(ts->ecx + 0x2, 4));
	sub(&ts->eax, 0x21);
	cmp(&ts->eflags, ts->edx, ts->edi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_578B35;
    }
	mov(mv, x86::mem(ts->ecx + (ts->esi) + 0x1E8, 1), ts->al);
	mov(mv, x86::mem(ts->ecx + (ts->esi) + 0x1E9, 1), ts->ah);

loc_578B35:
	mov(mv, x86::mem(ts->esi + 0x1DC, 4), ts->edx);

loc_578B3B:
	movzx(mv, &ts->ebp, x86::mem(ts->esp + 0x13, 1));
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_578B5E;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	lea(mv, &ts->edi, x86::mem(ts->eax + (ts->ebx*4), 4));
	add(&ts->ebx, ts->ebp);
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_578B50:
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_571770(ts, mv);
	add(&ts->edi, 0x4);
	dec(&ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_578B50;
    }

loc_578B5E:
	cmp(mv, &ts->eflags, ts->ebx, x86::mem(ts->esp + 0x20, 4));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_578A22;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0xC);

loc_578B72:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	xor_(&ts->ebp, ts->ebp);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_578CC8;
    }
	goto loc_578B86;

loc_578B82:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));

loc_578B86:
	xor_(&ts->al, ts->al);

loc_578B88:
	cmp(&ts->eflags, ts->ebp, ts->ecx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_578BA0;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x24, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->edx + (ts->ebp*4), 4), ts->edi);
	if (!ts->eflags.zero) {
        goto loc_578BA4;
    }
	inc(&ts->al);
	inc(&ts->ebp);
	cmp(&ts->eflags, ts->al, 0xFF);
	if (ts->eflags.carry) {
        goto loc_578B88;
    }

loc_578BA0:
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x24, 4));

loc_578BA4:
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x40, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_578BCD;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1DC, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x1E4, 4));
	lea(mv, &ts->edx, x86::mem(ts->ecx + 0x1, 4));
	cmp(&ts->eflags, ts->edx, ts->ebx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_578BC5;
    }
	mov(mv, x86::mem(ts->ecx + (ts->esi) + 0x1E8, 1), ts->al);

loc_578BC5:
	mov(mv, x86::mem(ts->esi + 0x1DC, 4), ts->edx);
	goto loc_578C0B;

loc_578BCD:
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x41, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_578BE8;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x1F, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_5715B0(ts, mv);
	goto loc_578C0B;

loc_578BE8:
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x42, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_578C0B;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x2);
	movzx(&ts->eax, ts->al);
	push(mv, &ts->esp, 0x2);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	sub(&ts->eax, 0x21);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->eax);
	game::sub_571550(ts, mv);

loc_578C0B:
	xor_(&ts->bl, ts->bl);
	mov(mv, x86::mem(ts->esp + 0x12, 1), ts->bl);

loc_578C11:
	cmp(mv, &ts->eflags, ts->ebp, x86::mem(ts->esp + 0x20, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_578C28;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->edx + (ts->ebp*4), 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_578C28;
    }
	inc(&ts->bl);
	inc(&ts->ebp);
	cmp(&ts->eflags, ts->bl, 0xFF);
	if (ts->eflags.carry) {
        goto loc_578C11;
    }

loc_578C28:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x40, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, x86::mem(ts->esp + 0x12, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_578C55;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1DC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1E4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x1, 4));
	cmp(&ts->eflags, ts->ecx, ts->edx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_578C4D;
    }
	mov(mv, x86::mem(ts->eax + (ts->esi) + 0x1E8, 1), ts->bl);

loc_578C4D:
	mov(mv, x86::mem(ts->esi + 0x1DC, 4), ts->ecx);
	goto loc_578C97;

loc_578C55:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x41, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_578C74;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x1E, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_5715B0(ts, mv);
	mov(mv, &ts->bl, x86::mem(ts->esp + 0x12, 1));
	goto loc_578C97;

loc_578C74:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x42, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_578C97;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x2);
	movzx(&ts->eax, ts->bl);
	push(mv, &ts->esp, 0x2);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	sub(&ts->eax, 0x21);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->eax);
	game::sub_571550(ts, mv);

loc_578C97:
	movzx(&ts->eax, ts->bl);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_578CBE;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	mov(&ts->edx, ts->ebp);
	sub(&ts->edx, ts->eax);
	lea(mv, &ts->edi, x86::mem(ts->ecx + (ts->edx*4), 4));
	mov(&ts->ebx, ts->eax);
	goto loc_578CB0;

loc_578CB0:
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_571770(ts, mv);
	add(&ts->edi, 0x4);
	dec(&ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_578CB0;
    }

loc_578CBE:
	cmp(mv, &ts->eflags, ts->ebp, x86::mem(ts->esp + 0x20, 4));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_578B82;
    }

loc_578CC8:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0xC);
}

void sub_578CE0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x44, 1));
	cmp(&ts->eflags, ts->al, 0xFF);
	if (!ts->eflags.zero) {
        goto loc_578CF0;
    }
	mov(mv, x86::mem(ts->esi + 0x48, 2), 0x0);

loc_578CF0:
	mov(mv, &ts->cx, x86::mem(ts->esi + 0x48, 2));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	inc(&ts->al);
	mov(mv, x86::mem(ts->esi + 0x44, 1), ts->al);
	movsx(&ts->eax, ts->al);
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*2), 4));
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->esi + (ts->eax*8) + 0x58, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->edi + 0x8, 2), ts->cx);
	inc(mv, x86::mem(ts->esi + 0x48, 2));
	mov(mv, x86::mem(ts->edi, 4), ts->edx);
	mov(mv, x86::mem(ts->edi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->edi + 0xA, 1), 0x0);
	mov(mv, x86::mem(ts->edi + 0xB, 1), 0x0);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1DC, 4));
	mov(mv, x86::mem(ts->edi + 0xC, 4), ts->ecx);
	game::sub_43BDF0(ts, mv);
	mov(mv, x86::mem(ts->edi + 0x10, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x50, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->edi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_578D85;
    }
	movsx(mv, &ts->edx, x86::mem(ts->esi + 0x44, 1));
	cmp(&ts->eflags, ts->edx, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_578D85;
    }
	mov(mv, &ts->eax, x86::mem(0x7FB724, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esi + 0x54, 4));
	if (!ts->eflags.zero) {
        goto loc_578D85;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_5717F0(ts, mv);
	mov(&ts->esi, 0x50);
	sub(&ts->esi, ts->eax);
	if (ts->eflags.sign) {
        goto loc_578D85;
    }
	push(mv, &ts->esp, 0x7FAAE0);
	game::sub_43DBB0(ts, mv);
	add(&ts->esp, 0x4);
	dec(&ts->eax);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_578D7E;
    }
	push(mv, &ts->esp, 0x7FAAE0);
	game::sub_43DBB0(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	dec(&ts->esi);

loc_578D7E:
	mov(mv, x86::mem(ts->esi + 0x7FAAE0, 1), 0x20);

loc_578D85:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_578D90(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	movsx(mv, &ts->eax, x86::mem(ts->esi + 0x44, 1));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1DC, 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + (ts->eax*8) + 0x64, 4));
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->esi + (ts->eax*8) + 0x58, 4));
	sub(&ts->ecx, ts->edx);
	mov(mv, x86::mem(ts->edi + 0xC, 4), ts->ecx);
	game::sub_43BDF0(ts, mv);
	mov(mv, x86::mem(ts->edi + 0x14, 4), ts->eax);
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x46, 1));
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->cl, ts->al);
	if (ts->eflags.zero) {
        goto loc_578DEA;
    }
	movsx(mv, &ts->edx, x86::mem(ts->esi + 0x4A, 2));
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0xC, 4));
	cmp(&ts->eflags, ts->ecx, ts->edx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_578DD3;
    }
	mov(mv, x86::mem(ts->esi + 0x4A, 2), ts->cx);
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->edx);

loc_578DD3:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x44, 1), ts->al);
	if (!ts->eflags.zero) {
        goto loc_578DE4;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x4A, 2), 0x400);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_578DE4;
    }
	mov(mv, x86::mem(ts->esi + 0x4A, 2), ts->ax);

loc_578DE4:
	mov(mv, x86::mem(ts->esi + 0x1DC, 4), ts->eax);

loc_578DEA:
	mov(mv, &ts->dl, x86::mem(ts->esi + 0x44, 1));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	dec(&ts->dl);
	movsx(&ts->eax, ts->dl);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x44, 1), ts->dl);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_578E03;
    }
	mov(mv, x86::mem(ts->esi + 0x50, 4), 0xFFFFFFFF);

loc_578E03:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_578E10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x10, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_578E56;
    }
	mov(mv, &ts->eax, x86::mem(0x7FB724, 4));
	inc(&ts->eax);
	mov(mv, x86::mem(ts->esi + 0x7C, 4), ts->eax);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865154, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784264, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	game::__ftol2(ts, mv);
	add(mv, &ts->eax, x86::mem(0x86518C, 4));
	mov(mv, x86::mem(ts->esi + 0x88, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), 0x0);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_578E56:
	cmp(mv, &ts->eflags, x86::mem(ts->esi, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_578E8B;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x7C, 4));
	mov(mv, x86::mem(ts->esi, 4), 0x0);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), 0x0);
	mov(mv, &ts->eax, x86::mem(0x7FB724, 4));
	dec(&ts->ecx);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_578E8B;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7C8D5450);
	mov(mv, x86::mem(ts->esi + 0x14, 4), 0x1);
	game::sub_55DDE0(ts, mv);
	add(&ts->esp, 0x8);

loc_578E8B:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_578E90(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_578EDD;
    }
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x98, 4));
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->ecx + 0x98, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_578EDB;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_578EB0:
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, 0x79545C);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_578ED5;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x1D8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x1D8, 4));

loc_578ED5:
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_578EB0;
    }

loc_578EDB:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);

locret_578EDD:
	retn(mv, &ts->esp, 0x8);
}

void sub_578EE0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0x7A0820);
	push(mv, &ts->esp, 0xC2C60000);
	game::sub_578E90(ts, mv);
	retn(mv, &ts->esp);
}

void sub_578EF0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x10);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(0x7FB724, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x78, 4), 0xFFFFFFFF);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x20, 4));
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->esi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_578FB0;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x80, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_578FB0;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x8C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_578FB0;
    }
	mov(mv, &ts->al, x86::mem(ts->esp + 0x2C, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_578F75;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x40E4, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_578F75;
    }
	mov(&ts->eax, ts->edx);
	shl(&ts->eax, 0x4);
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->eax + (ts->ecx) + 0x40E0, 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->ecx) + 0x40DC, 4));
	cmp(&ts->eflags, ts->ebp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_578F75;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), ts->edi);
	if (!ts->eflags.zero) {
        goto loc_578F75;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x8, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_578F75;
    }
	dec(&ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x40E4, 4), ts->edx);

loc_578F75:
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x40E4, 4));
	cmp(&ts->eflags, ts->eax, 0x100);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_578FAB;
    }
	shl(&ts->eax, 0x4);
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->ecx) + 0x40EC, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->edi);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->edx + 0x4, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->edx + 0x8, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	mov(mv, x86::mem(ts->edx + 0xC, 4), ts->eax);
	inc(mv, x86::mem(ts->ecx + 0x40E4, 4));
	goto loc_578FB0;

loc_578FAB:
	game::sub_571830(ts, mv);

loc_578FB0:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_4A7B30(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x10);
}

void sub_578FD0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x98, 4));
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->ecx + 0x98, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_57900C;
    }
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x18, 4));
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_578FF0:
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_579006;
    }
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_579015;
    }
	dec(&ts->ebx);

loc_579006:
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_578FF0;
    }

loc_57900C:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x8);

loc_579015:
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x8);
}

void sub_579020(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x98, 4));
	add(&ts->ecx, 0x98);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_57903F;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));

loc_579034:
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto locret_579041;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	dec(&ts->edx);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_579034;
    }

loc_57903F:
	xor_(&ts->eax, ts->eax);

locret_579041:
	retn(mv, &ts->esp, 0x4);
}

void sub_579050(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->esi, 4), ts->edx);
	mov(mv, x86::mem(ts->edx + 0x4, 4), ts->esi);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x94, 4));
	add(&ts->ecx, 0x90);
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_579080(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(ts->esp + 0x4, 1));
	push(mv, &ts->esp, ts->ebx);
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->al, ts->bl);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_5790B1;
    }

loc_57908E:
	push(mv, &ts->esp, 0x171E8);
	game::_malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5790C1;
    }
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x1E4, 4), 0x17000);
	goto loc_5790C3;

loc_5790B1:
	mov(mv, &ts->eax, x86::mem(0x803680, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43E910(ts, mv);
	add(&ts->esp, 0x4);
	goto loc_57908E;

loc_5790C1:
	xor_(&ts->eax, ts->eax);

loc_5790C3:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x94, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x90, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_5790E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	cmp(mv, &ts->eflags, x86::mem(ts->esi, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_57911C;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_57911C;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8C, 4));
	game::sub_575270(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x28, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_57911E;
    }
	mov(mv, x86::mem(ts->esi + 0x8, 4), 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);

loc_57911C:
	xor_(&ts->eax, ts->eax);

loc_57911E:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_579130(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_579184;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8C, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_575140(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x14, 4));
	lea(mv, &ts->edx, x86::mem(0xFFFFFFBC, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x8, 4), ts->edx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_579184;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x80, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), 0x0);
	if (!ts->eflags.zero) {
        goto loc_579184;
    }
	mov(mv, x86::mem(ts->esi + 0x80, 4), 0x1);

loc_579184:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);
}

void sub_579190(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(0x86519C, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x86519C);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	mov(&ts->edi, ts->eax);
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_5791CB;
    }
	goto loc_5791B0;

loc_5791B0:
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, 0x7A082C);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5791CB;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_5791B0;
    }

loc_5791CB:
	mov(&ts->ecx, 0x89E7A0);
	mov(mv, x86::mem(ts->esi + 0x1DC, 4), 0x0);
	mov(mv, x86::mem(ts->esi + 0x41, 1), 0x1);
	game::sub_5ED5F0(ts, mv);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x89E7A0);
	game::sub_5ED6B0(ts, mv);
	mov(mv, x86::mem(0x89E7AD, 1), 0x1);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x41, 1), 0x0);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_579200(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	add(&ts->eax, 0x3);
	cdq(&ts->eax, ts->edx);
	and_(&ts->edx, 0x3);
	push(mv, &ts->esp, ts->esi);
	add(&ts->eax, ts->edx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->eax);
	sar(&ts->edi, 0x2);
	xor_(&ts->esi, ts->esi);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_579248;
    }
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x10, 4));
	nop();

loc_579220:
	push(mv, &ts->esp, 0xC);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_573090(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	add(&ts->esp, 0xC);
	mov(mv, x86::mem(ts->ebx + (ts->esi*4), 4), ts->ecx);
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_579220;
    }
	mov(mv, x86::mem(ts->ebx + 0x3C, 4), 0x1);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_579248:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->edx + 0x3C, 4), 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_579260(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->edx, 0x39100);
	if (!ts->eflags.zero) {
        goto loc_57927C;
    }
	add(&ts->eax, 0x8);
	mov(mv, x86::mem(ts->ecx + 0x24, 4), ts->eax);
	mov(&ts->eax, 0x1);
	retn(mv, &ts->esp, 0x4);

loc_57927C:
	cmp(&ts->eflags, ts->edx, 0x39101);
	if (!ts->eflags.zero) {
        goto loc_5792A6;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x30, 4));
	add(&ts->eax, 0x8);
	add(&ts->ecx, 0x2C);
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x3C, 4), 0x1);
	mov(&ts->eax, 0x1);
	retn(mv, &ts->esp, 0x4);

loc_5792A6:
	cmp(&ts->eflags, ts->edx, 0x39102);
	if (!ts->eflags.zero) {
        goto loc_5792BC;
    }
	add(&ts->eax, 0x8);
	mov(mv, x86::mem(ts->ecx + 0x28, 4), ts->eax);
	mov(&ts->eax, 0x1);
	retn(mv, &ts->esp, 0x4);

loc_5792BC:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp, 0x4);
}

void sub_5792D0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx, 4));
	cmp(&ts->eflags, ts->eax, 0x39100);
	if (!ts->eflags.zero) {
        goto loc_5792EC;
    }
	mov(mv, x86::mem(ts->ecx + 0x24, 4), 0x0);
	mov(&ts->eax, 0x1);
	retn(mv, &ts->esp, 0x4);

loc_5792EC:
	cmp(&ts->eflags, ts->eax, 0x39101);
	if (!ts->eflags.zero) {
        goto loc_579317;
    }
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->esi, x86::mem(ts->edx + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	add(&ts->ecx, 0x2C);
	game::sub_43BE80(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57930E;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->esi, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->esi);

loc_57930E:
	mov(&ts->eax, 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_579317:
	cmp(&ts->eflags, ts->eax, 0x39102);
	if (!ts->eflags.zero) {
        goto loc_57932D;
    }
	mov(mv, x86::mem(ts->ecx + 0x28, 4), 0x0);
	mov(&ts->eax, 0x1);
	retn(mv, &ts->esp, 0x4);

loc_57932D:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp, 0x4);
}

void sub_579340(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x865564);
	game::sub_579260(ts, mv);
	retn(mv, &ts->esp);
}

void sub_579350(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x865564);
	game::sub_5792D0(ts, mv);
	retn(mv, &ts->esp);
}

void sub_579360(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	mov(&ts->eax, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ecx);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->ecx);
	retn(mv, &ts->esp, 0xC);
}

void sub_579390(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0xC, 4));
	mov(&ts->ebx, ts->ebp);
	shr(&ts->ebx, 0x10);
	mov(&ts->ecx, ts->ebx);
	imul(&ts->ecx, ts->ecx, 0x1C8);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	add(&ts->ecx, 0x8655A0);
	mov(mv, &ts->esi, x86::mem(ts->ecx, 4));
	mov(&ts->edi, ts->ebp);
	and_(&ts->edi, 0xFF);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_579400;
    }
	mov(&ts->edi, ts->edi);

loc_5793C0:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x8, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_5793D0;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_5793C0;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_5793D0:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx, 4));
	cmp(&ts->eflags, ts->ecx, 0x100);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_579400;
    }
	lea(mv, &ts->eax, x86::mem(ts->ecx + (ts->ecx*2), 4));
	lea(mv, &ts->eax, x86::mem(ts->edx + (ts->eax*4) + 0x4, 4));
	inc(&ts->ecx);
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 2), ts->bp);
	mov(mv, x86::mem(ts->eax + 0x2, 1), ts->bl);
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x8, 1));
	mov(mv, x86::mem(ts->eax + 0x3, 1), ts->cl);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x10, 4));
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x14, 4));
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ecx);

loc_579400:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_579410(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xC, 4));
	imul(&ts->esi, ts->esi, 0x1C8);
	add(&ts->esi, 0x8655A0);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	cmp(&ts->eflags, ts->edi, ts->eax);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x14, 4));
	if (ts->eflags.zero) {
        goto loc_57943F;
    }

loc_579434:
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0x8, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_57943F;
    }
	mov(mv, &ts->edi, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_579434;
    }

loc_57943F:
	mov(mv, &ts->eax, x86::mem(0x8650BC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_440E50(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_579467;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->eax);
	game::sub_579360(ts, mv);
	mov(&ts->edi, ts->eax);
	goto loc_579469;

loc_579467:
	xor_(&ts->edi, ts->edi);

loc_579469:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->edi);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x8, 4));
	mov(mv, x86::mem(ts->edi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->edi, 4), ts->esi);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1B8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_572120(ts, mv);
	add(&ts->esp, 0xC);
	mov(mv, x86::mem(ts->edi + 0xC, 4), ts->eax);
	mov(mv, x86::mem(ts->edi + 0x1C, 4), 0x1);
	mov(mv, x86::mem(ts->edi + 0x18, 4), 0x0);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_5794B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x1C, 4));
	xor_(&ts->esi, ts->esi);

loc_5794C2:
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	game::sub_579410(ts, mv);
	add(&ts->esp, 0x10);
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, 0x2);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5794C2;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_5794E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	imul(&ts->ecx, ts->ecx, 0x1C8);
	add(&ts->ecx, 0x8655A0);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx, 4));
	game::Iostream_init__Iostream_init_void_(ts, mv);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57950B;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));

loc_579500:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x8, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_57950F;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_579500;
    }

loc_57950B:
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_57950F:
	mov(&ts->eax, 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_579520(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	xor_(&ts->esi, ts->esi);

loc_579523:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x571A50);
	push(mv, &ts->esp, 0x2);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x8647A0, 1), 0xFF);
	game::sub_579410(ts, mv);
	add(&ts->esp, 0x10);
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, 0x2);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_579523;
    }
	mov(mv, x86::mem(0x8650C0, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_579550(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7A0858);
	push(mv, &ts->esp, 0xA0);
	push(mv, &ts->esp, 0x24);
	mov(mv, x86::mem(0x865754, 4), 0x0);
	mov(mv, x86::mem(0x86591C, 4), 0x1);
	game::sub_440DF0(ts, mv);
	add(&ts->esp, 0x10);
	mov(mv, x86::mem(0x8650BC, 4), ts->eax);
	game::sub_5D0380(ts, mv);
	xor_(&ts->esi, ts->esi);

loc_579587:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x571A20);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x864788, 1), 0xFF);
	game::sub_579410(ts, mv);
	add(&ts->esp, 0x10);
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, 0x2);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_579587;
    }
	push(mv, &ts->esp, 0x80000000);
	game::sub_43C1C0(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(0x7FB2A0, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_5795C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x18, 4));
	movzx(mv, &ts->eax, x86::mem(ts->esi + 0x15, 1));
	imul(&ts->eax, ts->eax, 0x2C);
	add(&ts->eax, ts->ecx);
	movzx(mv, &ts->ecx, x86::mem(ts->esi + 0x12, 1));
	movzx(mv, &ts->ebp, x86::mem(ts->eax + 0x30, 1));
	mov(&ts->edx, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));
	shr(&ts->edx, 0x5);
	mov(mv, &ts->edx, x86::mem(ts->edi + (ts->edx*4), 4));
	and_(&ts->ecx, 0x1F);
	shr(&ts->edx, ts->cl);
	xor_(mv, &ts->dl, x86::mem(ts->esi + 0x10, 1));
	movzx(&ts->ecx, ts->dl);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ecx);
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x28, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_576790(ts, mv);
	game::__ftol2(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x14, 1));
	cmp(&ts->eflags, ts->cl, 0x1);
	movzx(&ts->eax, ts->al);
	if (!ts->eflags.zero) {
        goto loc_57962F;
    }
	cmp(&ts->eflags, ts->eax, 0x7F);
	if (!ts->eflags.carry) {
        goto loc_579628;
    }
	mov(&ts->ecx, 0x7F);
	sub(&ts->ecx, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->ecx + (ts->ecx), 4));
	goto loc_579646;

loc_579628:
	xor_(&ts->ecx, ts->ecx);
	lea(mv, &ts->eax, x86::mem(ts->ecx + (ts->ecx), 4));
	goto loc_579646;

loc_57962F:
	cmp(&ts->eflags, ts->cl, 0x2);
	if (!ts->eflags.zero) {
        goto loc_579652;
    }
	cmp(&ts->eflags, ts->eax, 0x80);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_579642;
    }
	sub(&ts->eax, 0x80);
	goto loc_579644;

loc_579642:
	xor_(&ts->eax, ts->eax);

loc_579644:
	add(&ts->eax, ts->eax);

loc_579646:
	cmp(&ts->eflags, ts->eax, 0xFE);
	if (!ts->eflags.zero) {
        goto loc_579652;
    }
	mov(&ts->eax, 0xFF);

loc_579652:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x1C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_579673;
    }
	mov(mv, x86::mem(ts->edx + 0x1C, 4), 0x0);

loc_579664:
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x8, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->edx + 0x18, 4), ts->eax);
	shl(&ts->eax, 0x8);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->eax, ts->ecx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_579673:
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x13, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_57969C;
    }
	movzx(&ts->ecx, ts->cl);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, ts->ecx);
	shr(&ts->ebx, 0x5);
	mov(mv, &ts->edi, x86::mem(ts->edi + (ts->ebx*4), 4));
	and_(&ts->ecx, 0x1F);
	shr(&ts->edi, ts->cl);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x11, 1));
	pop(mv, &ts->esp, ts->ebx);
	xor_(&ts->edi, ts->ecx);
	and_(&ts->edi, 0x1);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_5796C0;
    }

loc_57969C:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5796AE;
    }
	cmp(&ts->eflags, ts->eax, 0x80);
	if (ts->eflags.zero) {
        goto loc_5796AE;
    }
	cmp(&ts->eflags, ts->eax, 0xFF);
	if (!ts->eflags.zero) {
        goto loc_5796B0;
    }

loc_5796AE:
	xor_(&ts->ebp, ts->ebp);

loc_5796B0:
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x18, 4));
	lea(mv, &ts->esi, x86::mem(ts->eax + (ts->ebp), 4));
	cmp(&ts->eflags, ts->esi, ts->ecx);
	if (ts->eflags.carry) {
        goto loc_579664;
    }
	add(&ts->ecx, ts->ebp);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_579664;
    }

loc_5796C0:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	xor_(&ts->ax, ts->ax);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_5796D0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, ts->ecx);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x79DC68, 4));
	mov(mv, x86::mem(ts->eax + 0x18, 4), 0x3F800000);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->ecx);
	retn(mv, &ts->esp);
}

void sub_579700(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0xC, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x10, 4));
	mov(&ts->eax, ts->esi);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_57973D;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ebx, x86::mem(ts->edx + 0x20, 4));

loc_579714:
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_57973C;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x8, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_579723;
    }
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_57973C;
    }

loc_579723:
	mov(&ts->edx, ts->eax);
	sub(&ts->edx, ts->esi);
	lea(mv, &ts->edx, x86::mem(ts->edx + (ts->ecx) + 0x128, 4));
	movzx(mv, &ts->edx, x86::mem(ts->edx, 1));
	shr(&ts->edx, 0x4);
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->edx) + 0x1, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_579714;
    }

loc_57973C:
	pop(mv, &ts->esp, ts->ebx);

loc_57973D:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_579740(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_579753;
    }
	push(mv, &ts->esp, ts->eax);
	game::_free(ts, mv);
	add(&ts->esp, 0x4);

loc_579753:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x2C, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_579763;
    }
	push(mv, &ts->esp, ts->esi);
	game::_free(ts, mv);
	add(&ts->esp, 0x4);

loc_579763:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_579770(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57979C;
    }
	push(mv, &ts->esp, ts->eax);
	game::_free(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x10, 4), 0x0);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);

loc_57979C:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_5797B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(0x865550, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x865550);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	cmp(&ts->eflags, ts->esi, ts->eax);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	if (ts->eflags.zero) {
        goto loc_5797DB;
    }
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_5797D0:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x6C, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_579800;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_5797D0;
    }

loc_5797DB:
	mov(mv, &ts->esi, x86::mem(0x865220, 4));
	mov(&ts->ecx, 0x865220);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5797FB;
    }
	nop();

loc_5797F0:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x6C, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_579800;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_5797F0;
    }

loc_5797FB:
	pop(mv, &ts->esp, ts->edi);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_579800:
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_579810(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_5797B0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_57982F;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->eax + 0x58, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x54, 4), ts->edx);

locret_57982F:
	retn(mv, &ts->esp);
}

void sub_579830(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(0x86521C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(0x86521C, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	xor_(&ts->edx, ts->edx);
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), 0x865218);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto locret_57986A;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x20, 4));
	push(mv, &ts->esp, ts->esi);

loc_579857:
	mov(mv, &ts->esi, x86::mem(ts->ecx - 0xC, 4));
	add(&ts->esi, ts->eax);
	mov(mv, x86::mem(ts->ecx, 4), ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->eax + 0xC, 4));
	inc(&ts->edx);
	add(&ts->ecx, 0x14);
	cmp(&ts->eflags, ts->edx, ts->esi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_579857;
    }
	pop(mv, &ts->esp, ts->esi);

locret_57986A:
	retn(mv, &ts->esp);
}

void sub_579870(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_575330(ts, mv);
	mov(mv, &ts->esi, x86::mem(0x865218, 4));
	add(&ts->esp, 0x4);
	mov(&ts->ecx, 0x865218);
	mov(&ts->edi, ts->eax);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	mov(&ts->ebx, ts->eax);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5798B6;
    }

loc_579898:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xC, 4));
	xor_(&ts->ecx, ts->ecx);
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_5798B0;
    }
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));

loc_5798A4:
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_5798B8;
    }
	inc(&ts->ecx);
	add(&ts->eax, 0x14);
	cmp(&ts->eflags, ts->ecx, ts->edx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5798A4;
    }

loc_5798B0:
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_579898;
    }

loc_5798B6:
	xor_(&ts->eax, ts->eax);

loc_5798B8:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_5798C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x865108, 4));
	dec(&ts->eax);
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(0x865108, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xC, 4));
	push(mv, &ts->esp, 0x64);
	push(mv, &ts->esp, ts->eax);
	game::sub_6F7790(ts, mv);
	push(mv, &ts->esp, 0x5755D0);
	push(mv, &ts->esp, ts->eax);
	game::sub_6F76F2(ts, mv);
	add(&ts->esp, 0x14);
	retn(mv, &ts->esp);
}

void sub_5798F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(0x866584, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x866584);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	mov(&ts->edi, ts->eax);
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_579927;
    }
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x10, 4));
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_579910:
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57992D;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_579910;
    }

loc_579927:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_57992D:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(0x866588, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	mov(mv, x86::mem(0x866588, 4), ts->esi);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi, 4), 0x866584);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_579960(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_579980(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_579978;
    }
	push(mv, &ts->esp, ts->esi);
	game::_free(ts, mv);
	add(&ts->esp, 0x4);

loc_579978:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_579980(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x7A0358);
	retn(mv, &ts->esp);
}

void sub_579990(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7787CB);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, 0x6);
	push(mv, &ts->esp, 0x7A0460);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebx, ts->ecx);
	game::sub_43DC60(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_5799C5;
    }
	add(&ts->edi, 0x6);

loc_5799C5:
	mov(mv, &ts->al, x86::mem(ts->edi, 1));
	cmp(&ts->eflags, ts->al, 0x5C);
	if (ts->eflags.zero) {
        goto loc_5799CF;
    }
	cmp(&ts->eflags, ts->al, 0x2F);
	if (!ts->eflags.zero) {
        goto loc_5799D2;
    }

loc_5799CF:
	inc(&ts->edi);
	goto loc_5799C5;

loc_5799D2:
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->ebx);
	game::sub_5754F0(ts, mv);
	mov(&ts->esi, ts->eax);
	or_(&ts->eax, 0xFFFFFFFF);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_579A2B;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ebx + (ts->ecx*4) + 0x41C, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_579A2B;
    }
	mov(mv, &ts->edx, x86::mem(0x865104, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_440E50(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_579A19;
    }
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->eax);
	game::sub_5753C0(ts, mv);
	goto loc_579A1B;

loc_579A19:
	xor_(&ts->eax, ts->eax);

loc_579A1B:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebx + (ts->ecx*4) + 0x41C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->edx);

loc_579A2B:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp, 0xC);

loc_7787C0:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_5753A0(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

SEH_579990:
	mov(&ts->eax, 0x7E3E14);
	goto ___CxxFrameHandler;
}

void sub_579A40(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x64);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->edi, ts->ecx);
	game::sub_6F87EA(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_579B10;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x64);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->esi);
	game::sub_6F8710(ts, mv);
	push(mv, &ts->esp, 0x64);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->eax);
	game::sub_6F87C5(ts, mv);
	mov(&ts->ebx, ts->eax);
	mov(&ts->eax, 0xAAAAAAAB);
	mul(&ts->eax, ts->ebx);
	mov(&ts->esi, ts->edx);
	shr(&ts->esi, 0x4);
	lea(mv, &ts->eax, x86::mem(ts->esi + (ts->esi*2), 4));
	shl(&ts->eax, 0x3);
	push(mv, &ts->esp, ts->eax);
	game::_malloc(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, 0x64);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	game::sub_6F8738(ts, mv);
	mov(mv, x86::mem(ts->edi + 0x18, 4), ts->esi);
	mov(mv, x86::mem(ts->edi + 0x14, 4), ts->ebp);
	add(&ts->esp, 0x2C);
	lea(mv, &ts->ebp, x86::mem(ts->edi + 0x41C, 4));
	lea(mv, &ts->esi, x86::mem(ts->edi + 0x1C, 4));
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x18, 4));
	xor_(&ts->ebx, ts->ebx);

loc_579AB7:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x7A0874);
	push(mv, &ts->esp, ts->esi);
	game::sub_4400D0(ts, mv);
	push(mv, &ts->esp, 0x64);
	push(mv, &ts->esp, ts->esi);
	game::sub_6F87EA(ts, mv);
	add(&ts->esp, 0x18);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_579AE5;
    }
	push(mv, &ts->esp, 0x64);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->esi);
	game::sub_6F8710(ts, mv);
	add(&ts->esp, 0xC);
	mov(mv, x86::mem(ts->ebp, 4), ts->eax);
	goto loc_579AEC;

loc_579AE5:
	mov(mv, x86::mem(ts->ebp, 4), 0xFFFFFFFF);

loc_579AEC:
	inc(&ts->ebx);
	add(&ts->ebp, 0x4);
	add(&ts->esi, 0x40);
	cmp(&ts->eflags, ts->ebx, 0x10);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_579AB7;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, 0x64);
	push(mv, &ts->esp, ts->edx);
	game::sub_6F879A(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);

loc_579B10:
	pop(mv, &ts->esp, ts->edi);
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_579B20(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	game::sub_43BDF0(ts, mv);
	mov(&ts->ecx, 0x864EFC);
	game::sub_6F55DD(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6F76E9(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(0x865194, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	mov(mv, x86::mem(0x865194, 4), ts->esi);
	add(&ts->esp, 0x4);
	mov(&ts->ecx, 0x864EFC);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi, 4), 0x865190);
	game::sub_6F55E8(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x24, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_579B8A;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x64);
	push(mv, &ts->esp, ts->esi);
	game::sub_6F7790(ts, mv);
	push(mv, &ts->esp, 0x5755D0);
	push(mv, &ts->esp, ts->eax);
	game::sub_6F76F2(ts, mv);
	add(&ts->esp, 0x14);

loc_579B8A:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_579B90(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_579BCC;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_579BA6;
    }
	dec(mv, x86::mem(ts->eax + 0x8, 4));
	goto loc_579BC5;

loc_579BA6:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_579BC5;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x64);
	push(mv, &ts->esp, ts->eax);
	game::sub_6F7790(ts, mv);
	push(mv, &ts->esp, 0x5755D0);
	push(mv, &ts->esp, ts->eax);
	game::sub_6F76F2(ts, mv);
	add(&ts->esp, 0x14);

loc_579BC5:
	mov(mv, x86::mem(ts->esi + 0x4, 4), 0xFFFFFFFF);

loc_579BCC:
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_579BE2;
    }
	mov(mv, &ts->eax, x86::mem(0x865104, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	game::sub_43F920(ts, mv);
	add(&ts->esp, 0x8);

loc_579BE2:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_579BF0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto locret_579C0E;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x18, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_579C07;
    }
	mov(mv, x86::mem(ts->ecx + 0x14, 4), 0x1);
	retn(mv, &ts->esp);

loc_579C07:
	push(mv, &ts->esp, 0x1);
	game::sub_579B90(ts, mv);

locret_579C0E:
	retn(mv, &ts->esp);
}

void sub_579C10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x2000);
	game::_malloc(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	mov(&ts->edi, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	game::sub_43FBC0(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, 0x64);
	mov(&ts->ebx, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_6F876C(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	add(&ts->edx, ts->ebx);
	mov(&ts->eax, ts->edx);
	add(&ts->esp, 0x24);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->edx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_579C5D;
    }
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);

loc_579C5D:
	push(mv, &ts->esp, ts->edi);
	game::_free(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->eax, ts->ebx);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_579C70(x86::thread_state* ts, x86::memory_view* mv) {
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x4, 1), 0x1);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esi, 4), 0x7A0604);
	if (ts->eflags.zero) {
        goto loc_579C89;
    }
	push(mv, &ts->esp, ts->esi);
	game::_free(ts, mv);
	add(&ts->esp, 0x4);

loc_579C89:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_579C90(x86::thread_state* ts, x86::memory_view* mv) {
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 1), 0x1);
	mov(mv, x86::mem(ts->ecx + 0x5, 1), ts->al);
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x34, 4), ts->eax);
	retn(mv, &ts->esp);
}

void sub_579CA0(x86::thread_state* ts, x86::memory_view* mv) {
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 1), ts->al);
	mov(mv, x86::mem(ts->ecx + 0x5, 1), ts->al);
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x34, 4), ts->eax);
	retn(mv, &ts->esp);
}

void sub_579CB0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	imul(&ts->edi, ts->edi, 0x34);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + (ts->edi) + 0x32, 1));
	add(&ts->eax, ts->edi);
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_579D21;
    }
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x30, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_579CDE;
    }
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0x783FE5);
	game::sub_51DE60(ts, mv);
	add(&ts->esp, 0x8);

loc_579CDE:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + (ts->edi) + 0x28, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_576050(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	mov(mv, x86::mem(ts->eax + (ts->edi) + 0x30, 1), 0x1);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	lea(mv, &ts->eax, x86::mem(ts->ecx + (ts->edi), 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x20, 4), 0x5);
	if (!ts->eflags.zero) {
        goto loc_579D0C;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x24, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_5760A0(ts, mv);

loc_579D0C:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	mov(mv, x86::mem(ts->esi + 0x5, 1), 0x1);
	mov(mv, &ts->ecx, x86::mem(ts->eax + (ts->edi) + 0x2C, 4));
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x34, 4), 0x0);

loc_579D21:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_579D30(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0x3);
	push(mv, &ts->esp, 0x5);
	game::sub_576000(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_579D50;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0x1B);
	if (ts->eflags.zero) {
        goto loc_579D4B;
    }
	cmp(&ts->eflags, ts->eax, 0x15);
	if (!ts->eflags.zero) {
        goto loc_579D50;
    }

loc_579D4B:
	mov(&ts->al, 0x1);
	retn(mv, &ts->esp, 0x4);

loc_579D50:
	xor_(&ts->al, ts->al);
	retn(mv, &ts->esp, 0x4);
}

void sub_579D60(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0x3);
	push(mv, &ts->esp, 0x5);
	game::sub_576000(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	setnz(ts->eflags, &ts->al);
	retn(mv, &ts->esp);
}

void sub_579D70(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x6);
	game::sub_576000(ts, mv);
	retn(mv, &ts->esp, 0x4);
}

void sub_579D80(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1);
	game::sub_576000(ts, mv);
	retn(mv, &ts->esp, 0x4);
}

void sub_579D90(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x2);
	game::sub_576000(ts, mv);
	retn(mv, &ts->esp, 0x4);
}

void sub_579DA0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7);
	game::sub_576000(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	setnz(ts->eflags, &ts->al);
	retn(mv, &ts->esp, 0x4);
}

void sub_579DC0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_579DDA;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x4, 4), 0x0);

loc_579DDA:
	mov(mv, x86::mem(0x865134, 4), 0x0);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_579DF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x40, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	if (ts->eflags.zero) {
        goto loc_579E27;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1DC, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x1E4, 4));
	lea(mv, &ts->edx, x86::mem(ts->ecx + 0x1, 4));
	cmp(&ts->eflags, ts->edx, ts->ebx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_579E1F;
    }
	mov(mv, &ts->al, x86::mem(ts->eax, 1));
	mov(mv, x86::mem(ts->ecx + (ts->esi) + 0x1E8, 1), ts->al);

loc_579E1F:
	mov(mv, x86::mem(ts->esi + 0x1DC, 4), ts->edx);
	goto loc_579E35;

loc_579E27:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_571640(ts, mv);

loc_579E35:
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x40, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x5, 4));
	if (ts->eflags.zero) {
        goto loc_579E63;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1DC, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x1E4, 4));
	lea(mv, &ts->edx, x86::mem(ts->ecx + 0x1, 4));
	cmp(&ts->eflags, ts->edx, ts->ebx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_579E5B;
    }
	mov(mv, &ts->al, x86::mem(ts->eax, 1));
	mov(mv, x86::mem(ts->ecx + (ts->esi) + 0x1E8, 1), ts->al);

loc_579E5B:
	mov(mv, x86::mem(ts->esi + 0x1DC, 4), ts->edx);
	goto loc_579E71;

loc_579E63:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_571640(ts, mv);

loc_579E71:
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x40, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x6, 4));
	if (ts->eflags.zero) {
        goto loc_579E9F;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1DC, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x1E4, 4));
	lea(mv, &ts->edx, x86::mem(ts->ecx + 0x1, 4));
	cmp(&ts->eflags, ts->edx, ts->ebx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_579E97;
    }
	mov(mv, &ts->al, x86::mem(ts->eax, 1));
	mov(mv, x86::mem(ts->ecx + (ts->esi) + 0x1E8, 1), ts->al);

loc_579E97:
	mov(mv, x86::mem(ts->esi + 0x1DC, 4), ts->edx);
	goto loc_579EAD;

loc_579E9F:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_571640(ts, mv);

loc_579EAD:
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x40, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x7, 4));
	if (ts->eflags.zero) {
        goto loc_579EDF;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1DC, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x1E4, 4));
	lea(mv, &ts->edx, x86::mem(ts->ecx + 0x1, 4));
	cmp(&ts->eflags, ts->edx, ts->edi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_579ED3;
    }
	mov(mv, &ts->al, x86::mem(ts->eax, 1));
	mov(mv, x86::mem(ts->ecx + (ts->esi) + 0x1E8, 1), ts->al);

loc_579ED3:
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x1DC, 4), ts->edx);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

loc_579EDF:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_571640(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_579F00(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_5768E0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_579F18;
    }
	push(mv, &ts->esp, ts->esi);
	game::_free(ts, mv);
	add(&ts->esp, 0x4);

loc_579F18:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_579F20(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x8, 4));
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->ebx, 0x5);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x6, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0x7, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x4, 1), 0x4);
	mov(mv, x86::mem(ts->esi, 4), 0x7A0608);
	mov(mv, x86::mem(ts->esi + 0x5, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_579F62;
    }
	lea(mv, &ts->ecx, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->ecx);
	game::_malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->eax);

loc_579F62:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x10, 4));
	mov(&ts->ecx, ts->ebx);
	xor_(&ts->eax, ts->eax);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_579F80(x86::thread_state* ts, x86::memory_view* mv) {
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	game::__ftol2(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_579F20(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->eax);
	movzx(mv, &ts->eax, x86::mem(ts->esi + 0x5, 1));
	shl(&ts->eax, 0x2);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi, 4), 0x7A0610);
	mov(mv, x86::mem(ts->esi + 0x2C, 4), 0x0);
	game::_malloc(ts, mv);
	movzx(mv, &ts->ecx, x86::mem(ts->esi + 0x5, 1));
	shl(&ts->ecx, 0x2);
	mov(&ts->edx, ts->ecx);
	mov(&ts->edi, ts->eax);
	shr(&ts->ecx, 0x2);
	mov(mv, x86::mem(ts->esi + 0x30, 4), ts->edi);
	xor_(&ts->eax, ts->eax);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(&ts->ecx, ts->edx);
	add(&ts->esp, 0x4);
	and_(&ts->ecx, 0x3);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_579FF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_576A60(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_57A008;
    }
	push(mv, &ts->esp, ts->esi);
	game::_free(ts, mv);
	add(&ts->esp, 0x4);

loc_57A008:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_57A010(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	mov(&ts->edi, ts->eax);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x28, 4));
	mov(mv, x86::mem(ts->esi + 0x7C, 4), 0x0);
	mov(mv, x86::mem(ts->esi + 0x80, 4), ts->eax);
	game::sub_5769D0(ts, mv);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x80, 4), ts->ecx);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	mov(mv, x86::mem(ts->esi + 0x7C, 4), 0x0);
	game::sub_5769D0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_57A050(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865198, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865144, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787590, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	game::__ftol2(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7875BC, 4));
	fsubr(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865144, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	if (!ts->eflags.zero) {
        goto loc_57A08B;
    }
	mov(&ts->eax, 0x1);

loc_57A08B:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865198, 4));
	mov(mv, &ts->ecx, x86::mem(0x7FB708, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784264, 4));
	add(&ts->ecx, ts->eax);
	mov(mv, x86::mem(0x7FB708, 4), ts->ecx);
	mov(mv, x86::mem(0x7FB70C, 4), ts->eax);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	mov(mv, x86::mem(0x7FB704, 4), ts->ecx);
	game::__ftol2(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8651AC, 4));
	add(&ts->ecx, ts->eax);
	mov(mv, &ts->eax, x86::mem(0x86514C, 4));
	inc(&ts->eax);
	mov(mv, x86::mem(0x8651AC, 4), ts->ecx);
	mov(mv, x86::mem(0x86514C, 4), ts->eax);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_57A0E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865154, 4));
	mov(mv, x86::mem(0x7FB728, 4), 0x1);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_57A198;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865158, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865154, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787590, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	game::__ftol2(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x7FB720, 4));
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	add(&ts->ecx, ts->eax);
	mov(mv, x86::mem(0x7FB720, 4), ts->ecx);
	mov(mv, x86::mem(0x865150, 4), ts->eax);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7875BC, 4));
	mov(mv, x86::mem(0x7FB71C, 4), ts->ecx);
	fsubr(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865158, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865154, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784264, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	game::__ftol2(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x86518C, 4));
	add(&ts->ecx, ts->eax);
	mov(mv, &ts->eax, x86::mem(0x7FB724, 4));
	mov(mv, x86::mem(0x86518C, 4), ts->ecx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x86518C, 4));
	inc(&ts->eax);
	mov(mv, x86::mem(0x865154, 4), 0x0);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	mov(mv, x86::mem(0x7FB724, 4), ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7FB718, 4));

loc_57A198:
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_57A1A0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	mov(mv, &ts->eax, x86::mem(0x865138, 4));
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x7FB700, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_57A1BD;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7851C0, 4));
	goto loc_57A1C3;

loc_57A1BD:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7875BC, 4));

loc_57A1C3:
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(0x86513C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	if (ts->eflags.zero) {
        goto loc_57A239;
    }
	game::sub_43BDF0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x86513C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_43BE20(ts, mv);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78435C, 4));
	mov(mv, &ts->eax, x86::mem(0x7FB700, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	if (!ts->eflags.zero) {
        goto loc_57A208;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7851C0, 4));
	goto loc_57A20E;

loc_57A208:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7875BC, 4));

loc_57A20E:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_57A22B;
    }
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);

loc_57A22B:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);

loc_57A239:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_57A300(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x10, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x1C, 2), ts->ax);
	movzx(&ts->eax, ts->ax);
	add(&ts->eax, 0x3);
	push(mv, &ts->esp, ts->edi);
	shl(&ts->eax, 0x4);
	xor_(&ts->edi, ts->edi);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x19, 1), 0x1);
	game::_malloc(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x8, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x20, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->edi);
	if (!ts->eflags.zero) {
        goto loc_57A345;
    }
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0x865230);

loc_57A345:
	add(&ts->eax, 0x10);
	cmp(&ts->eflags, ts->edx, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x1A, 1), 0x2);
	if (!ts->eflags.zero) {
        goto loc_57A357;
    }
	mov(mv, x86::mem(ts->esi + 0x1A, 1), 0x3);

loc_57A357:
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x18, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x1E, 2), ts->di);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->edi);
	game::sub_56FFA0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0xC);
}

void sub_57A380(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebp, ts->ecx);
	push(mv, &ts->esp, 0x7A0880);
	xor_(&ts->ebx, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebp);
	game::sub_578CE0(ts, mv);
	lea(mv, &ts->edi, x86::mem(ts->ebp + 0x1E, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_571710(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x41, 1));
	or_(mv, &ts->al, x86::mem(ts->esi + 0x40, 1));
	if (ts->eflags.zero) {
        goto loc_57A3BC;
    }
	movzx(mv, &ts->ecx, x86::mem(ts->edi, 2));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebp);
	game::sub_5701D0(ts, mv);

loc_57A3BC:
	cmp(mv, &ts->eflags, x86::mem(ts->edi, 2), ts->bx);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebx);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_57A460;
    }
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x1C, 4));
	shl(&ts->edi, 0x2);

loc_57A3D0:
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x24, 4));
	mov(mv, &ts->al, x86::mem(ts->esi + 0x40, 1));
	add(&ts->edx, ts->ebx);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_57A3EA;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_571550(ts, mv);
	goto loc_57A448;

loc_57A3EA:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x41, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_57A3FF;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_5715B0(ts, mv);
	goto loc_57A448;

loc_57A3FF:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x42, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_57A448;
    }
	xor_(&ts->ecx, ts->ecx);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(&ts->eax, 0xFFFFFFFF);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_57A423;
    }

loc_57A411:
	movzx(mv, &ts->ebp, x86::mem(ts->ecx + (ts->edx), 1));
	imul(&ts->eax, ts->eax, 0x21);
	add(&ts->eax, ts->ebp);
	inc(&ts->ecx);
	cmp(&ts->eflags, ts->ecx, ts->edi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_57A411;
    }
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x10, 4));

loc_57A423:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1DC, 4));
	lea(mv, &ts->edx, x86::mem(ts->ecx + 0x2, 4));
	cmp(mv, &ts->eflags, ts->edx, x86::mem(ts->esi + 0x1E4, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_57A442;
    }
	mov(mv, x86::mem(ts->ecx + (ts->esi) + 0x1E8, 1), ts->al);
	mov(mv, x86::mem(ts->ecx + (ts->esi) + 0x1E9, 1), ts->ah);

loc_57A442:
	mov(mv, x86::mem(ts->esi + 0x1DC, 4), ts->edx);

loc_57A448:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	movzx(mv, &ts->edx, x86::mem(ts->ebp + 0x1E, 2));
	inc(&ts->eax);
	add(&ts->ebx, 0x10);
	cmp(&ts->eflags, ts->eax, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_57A3D0;
    }

loc_57A460:
	mov(&ts->ecx, ts->esi);
	game::sub_578D90(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x8);
}

void sub_57A470(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x8, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ebx, 4), 0x8003B000);
	if (!ts->eflags.zero) {
        goto loc_57A4F8;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->ebx + 0x8, 4));
	lea(mv, &ts->ecx, x86::mem(ts->ebx + (ts->eax) + 0x8, 4));
	cmp(&ts->eflags, ts->edi, ts->ecx);
	if (!ts->eflags.carry) {
        goto loc_57A4EF;
    }
	push(mv, &ts->esp, ts->esi);
	nop();

loc_57A490:
	mov(mv, &ts->edx, x86::mem(ts->edi + 0xC, 4));
	lea(mv, &ts->eax, x86::mem(ts->edx + (ts->edi) + 0x10, 4));
	add(&ts->eax, 0x17);
	and_(&ts->eax, 0xFFFFFFF0);
	lea(mv, &ts->esi, x86::mem(ts->edi + 0x1F, 4));
	and_(&ts->esi, 0xFFFFFFF0);
	mov(mv, x86::mem(ts->esi + 0x20, 4), ts->eax);
	add(&ts->eax, 0x10);
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x18, 1), 0x0);
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0x0);
	if (!ts->eflags.zero) {
        goto loc_57A4C5;
    }
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0x865230);

loc_57A4C5:
	game::sub_56FFA0(ts, mv);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x865210);
	game::sub_479130(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_570800(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x4, 4));
	lea(mv, &ts->edi, x86::mem(ts->edi + (ts->eax) + 0x8, 4));
	lea(mv, &ts->edx, x86::mem(ts->ebx + (ts->ecx) + 0x8, 4));
	cmp(&ts->eflags, ts->edi, ts->edx);
	if (ts->eflags.carry) {
        goto loc_57A490;
    }
	pop(mv, &ts->esp, ts->esi);

loc_57A4EF:
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, 0x1);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_57A4F8:
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_57A500(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_579830(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_57A510(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x1C);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->esi, ts->esi);
	goto loc_57A520;

loc_57A520:
	mov(mv, &ts->eax, x86::mem(0x864F80, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57A570;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x864DE8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (ts->eflags.parity) {
        goto loc_57A546;
    }
	game::sub_57A1A0(ts, mv);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));

loc_57A546:
	cmp(&ts->eflags, ts->esi, 0x3);
	if (!ts->eflags.zero) {
        goto loc_57A570;
    }
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x6);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x8, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	mov(mv, &ts->eax, x86::mem(0x7FA734, 4));
	push(mv, &ts->esp, 0x1A);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DC00(ts, mv);
	add(&ts->esp, 0xC);

loc_57A570:
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, 0x4);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_57A520;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x1C);
	retn(mv, &ts->esp);
}

void sub_57A580(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x40);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_57A5A1;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_57A5A1:
	mov(mv, x86::mem(ts->esi + 0x4, 4), 0x0);
	mov(mv, &ts->eax, x86::mem(0x883DAC, 4));
	add(&ts->eax, 0x40);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, 0x7A0894);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4400D0(ts, mv);
	add(&ts->esp, 0xC);
	game::nullsub_1(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, 0x88F768);
	game::sub_5D8350(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x88EB00);
	game::sub_5DA970(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x89E7C0, 4));
	xor_(&ts->esi, ts->esi);
	cmp(&ts->eflags, ts->eax, 0x2);
	if (!ts->eflags.zero) {
        goto loc_57A5F6;
    }
	mov(&ts->esi, 0x1);
	goto loc_57A615;

loc_57A5F6:
	mov(mv, &ts->eax, x86::mem(0x883DAC, 4));
	add(&ts->eax, 0x40);
	push(mv, &ts->esp, 0x7A088C);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_57A615;
    }
	mov(&ts->esi, 0x2);

loc_57A615:
	mov(mv, &ts->ecx, x86::mem(0x7FA9D4, 4));
	mov(mv, &ts->edi, x86::mem(0x79DC54, 4));
	shl(&ts->ecx, 0xA);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x8A3288);
	game::sub_610750(ts, mv);
	shl(&ts->edi, 0xA);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x88EB00);
	game::sub_5E4E70(ts, mv);
	game::sub_5DB2D0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x40);
	goto loc_581580;

loc_581580:
	mov(mv, &ts->eax, x86::mem(0x89E7A0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x8654A4, 4), 0x5);
	mov(mv, x86::mem(0x8654A8, 4), 0x0);
	game::sub_5D3E40(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(0x883DAC, 4), ts->eax);
	mov(&ts->ecx, 0x8654A8);
	goto sub_57F2D0;
}

void sub_57A650(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4887C0(ts, mv);
	game::nullsub_1(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x89E7C0, 4));
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->ecx, 0x2);
	setz(ts->eflags, &ts->al);
	mov(&ts->ecx, 0x8A3288);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x2);
	game::sub_610700(ts, mv);
	game::sub_592B00(ts, mv);
	game::sub_5A0200(ts, mv);
	game::sub_593DB0(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_578060(ts, mv);
	game::sub_5DFD00(ts, mv);
	game::nullsub_1(ts, mv);
	game::sub_598F10(ts, mv);
	game::sub_490330(ts, mv);
	game::nullsub_1(ts, mv);
	game::sub_60FD40(ts, mv);
	game::nullsub_1(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x89E7B0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(&ts->esi, 0x1);
	if (!ts->eflags.zero) {
        goto loc_57A6CB;
    }
	mov(&ts->ecx, 0x88F298);
	game::sub_5D9A60(ts, mv);
	goto loc_57A6E7;

loc_57A6CB:
	mov(mv, &ts->eax, x86::mem(0x89E7A4, 4));
	mov(mv, &ts->edx, x86::mem(0x89E7A0, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	setz(ts->eflags, &ts->cl);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x88F298);
	game::sub_5E6A40(ts, mv);

loc_57A6E7:
	mov(mv, &ts->eax, x86::mem(0x864FAC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57A70C;
    }
	mov(mv, &ts->dl, x86::mem(0x88F2BC, 1));
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->dl, ts->dl);
	setz(ts->eflags, &ts->al);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(0x89E7B4, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_57A70C;
    }
	mov(mv, x86::mem(0x89E7BC, 4), ts->esi);

loc_57A70C:
	game::sub_611040(ts, mv);
	mov(mv, x86::mem(0x828650, 4), 0x0);
	game::sub_4035D0(ts, mv);
	game::sub_56C500(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x89E7A0, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_5E9E80(ts, mv);
	mov(mv, &ts->al, x86::mem(0x89E7AC, 1));
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	pop(mv, &ts->esp, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_57A74B;
    }
	mov(mv, &ts->al, x86::mem(0x89E7AD, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_57A74B;
    }
	game::nullsub_1(ts, mv);

loc_57A74B:
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F00F0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_57A763;
    }
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F9460(ts, mv);

loc_57A763:
	game::sub_43A880(ts, mv);
	mov(mv, x86::mem(0x82B8DC, 4), 0x0);
	retn(mv, &ts->esp);
}

void sub_57A780(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x7A08A8);
	mov(&ts->edi, ts->ecx);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_578CE0(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esp + 0x18, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_57A7FD;
    }
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_571770(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_571770(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x18, 4));
	xor_(&ts->ebp, ts->ebp);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_57A84F;
    }
	lea(mv, &ts->ebx, x86::mem(ts->edi + 0x40, 4));

loc_57A7C6:
	lea(mv, &ts->edx, x86::mem(ts->ebx - 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_571770(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	game::sub_571770(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_571770(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x18, 4));
	inc(&ts->ebp);
	add(&ts->ebx, 0x24);
	cmp(&ts->eflags, ts->ebp, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_57A7C6;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_578D90(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x8);

loc_57A7FD:
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->edi + 0x28, 4), 0x0);
	game::sub_571770(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->edi + 0x24, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_571770(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x18, 4));
	xor_(&ts->ebp, ts->ebp);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_57A84F;
    }
	lea(mv, &ts->ebx, x86::mem(ts->edi + 0x4C, 4));

loc_57A826:
	lea(mv, &ts->eax, x86::mem(ts->ebx - 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_571770(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	game::sub_571770(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_571770(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x18, 4));
	inc(&ts->ebp);
	add(&ts->ebx, 0x24);
	cmp(&ts->eflags, ts->ebp, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_57A826;
    }

loc_57A84F:
	mov(&ts->ecx, ts->esi);
	game::sub_578D90(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x8);
}

void sub_57A860(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7787FC);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	xor_(&ts->edx, ts->edx);
	mov(mv, x86::mem(ts->esi + 0x84, 4), ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x90, 4));
	mov(mv, x86::mem(ts->esi + 0x88, 4), ts->edx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	mov(mv, x86::mem(ts->eax, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->eax);
	lea(mv, &ts->ebp, x86::mem(ts->esi + 0x98, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->edx);
	mov(mv, x86::mem(ts->ebp, 4), ts->ebp);
	mov(mv, x86::mem(ts->ebp + 0x4, 4), ts->ebp);
	or_(&ts->eax, 0xFFFFFFFF);
	mov(mv, x86::mem(ts->esi + 0x78, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x7C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xD0, 4), ts->eax);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x80, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x84, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x88, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x74, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0xD4, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0xD8, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0xDC, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0xC4, 4), 0x41700000);
	mov(mv, x86::mem(ts->esi + 0xA0, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x30, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x2C, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x20, 4), 0x7FFFFFFF);
	mov(mv, x86::mem(ts->esi + 0x8C, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0xA4, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0xA8, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0xB0, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0xB4, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0xB8, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0xBC, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0xC0, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0xC8, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0xCC, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x40E4, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x40E8, 4), ts->edx);
	mov(&ts->ecx, 0x400);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x40EC, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	cmp(mv, &ts->eflags, x86::mem(0x865564, 1), ts->dl);
	mov(mv, x86::mem(ts->esp + 0x18, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_57A999;
    }
	mov(mv, &ts->eax, x86::mem(0x86558C, 4));
	mov(mv, x86::mem(ts->esi + 0x8C, 4), ts->eax);
	push(mv, &ts->esp, 0x865590);
	mov(&ts->ecx, ts->ebp);
	mov(mv, x86::mem(0x86558C, 4), ts->edx);
	game::sub_43BEB0(ts, mv);

loc_57A999:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x50EC, 1), 0x1);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_57A250:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero) {
        goto loc_57A279;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_57A260:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	game::_free(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_57A260;
    }

loc_57A279:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_7787E0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x90);
	goto loc_57A250;

loc_7787EE:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x98);
	goto loc_57A250;

SEH_57A9C0:
	mov(&ts->eax, 0x7E3E40);
	goto ___CxxFrameHandler;
}

void sub_57A9C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7787FC);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ebx, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ebx);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x98, 4));
	lea(mv, &ts->edi, x86::mem(ts->ebx + 0x98, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_57AA3D;
    }

loc_57A9F7:
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x3C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_57AA30;
    }
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x86519C);
	game::sub_43BEB0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x8C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57AA39;
    }
	mov(mv, x86::mem(0x86558C, 4), ts->eax);
	mov(mv, x86::mem(ts->ebx + 0x8C, 4), 0x0);
	goto loc_57AA39;

loc_57AA30:
	push(mv, &ts->esp, ts->eax);
	game::_free(ts, mv);
	add(&ts->esp, 0x4);

loc_57AA39:
	cmp(mv, &ts->eflags, x86::mem(ts->edi, 4), ts->edi);
	if (!ts->eflags.zero) {
        goto loc_57A9F7;
    }

loc_57AA3D:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x90, 4));
	lea(mv, &ts->esi, x86::mem(ts->ebx + 0x90, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero) {
        goto loc_57AA6B;
    }
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_57AA50:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	game::_free(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_57AA50;
    }

loc_57AA6B:
	mov(mv, &ts->ebx, x86::mem(ts->ebx + 0x8C, 4));
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_57AA7E;
    }
	push(mv, &ts->esp, ts->ebx);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_57AA7E:
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_57AA9D;
    }

loc_57AA84:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	game::_free(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_57AA84;
    }

loc_57AA9D:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero) {
        goto loc_57AABC;
    }

loc_57AAA3:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	game::_free(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_57AAA3;
    }

loc_57AABC:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_7787E0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x90);
	goto loc_57A250;

loc_7787EE:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x98);
	goto loc_57A250;

SEH_57A9C0:
	mov(&ts->eax, 0x7E3E40);
	goto ___CxxFrameHandler;

loc_57A250:
}

void sub_57AAD0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0x78, 4), 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_57AC33;
    }
	mov(mv, &ts->eax, x86::mem(0x89E7B0, 4));
	push(mv, &ts->esp, ts->ebx);
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_57AC31;
    }
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F00F0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_57AC31;
    }
	mov(mv, &ts->ecx, x86::mem(0x89E7C0, 4));
	mov(&ts->eax, 0x2);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57AC31;
    }
	cmp(mv, &ts->eflags, x86::mem(0x89E7B0, 4), 0x7);
	if (ts->eflags.zero) {
        goto loc_57AC31;
    }
	mov(mv, &ts->ecx, x86::mem(0x7FB724, 4));
	mov(mv, x86::mem(ts->edi + 0x78, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(0x7FB724, 4));
	mov(mv, x86::mem(ts->edi + 0x7C, 4), ts->edx);
	mov(mv, &ts->ecx, x86::mem(0x86518C, 4));
	mov(mv, x86::mem(ts->edi + 0x84, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(0x86518C, 4));
	mov(mv, x86::mem(ts->edi + 0x88, 4), ts->edx);
	mov(&ts->ebp, 0x8);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->edi + 0xA8, 4), ts->eax);
	mov(mv, x86::mem(ts->edi + 0xAC, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0xB0, 4), 0x5);
	mov(mv, x86::mem(ts->edi + 0xB4, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0xA4, 4), ts->ebp);
	game::sub_43E910(ts, mv);
	sub(&ts->eax, 0x400);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0xF8F40);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_57AC13;
    }
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x40000);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->esi, ts->eax);
	push(mv, &ts->esp, 0x5);
	push(mv, &ts->esp, 0x40000);
	mov(&ts->ecx, ts->esi);
	game::sub_575020(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x30, 4), ts->ebp);
	mov(mv, x86::mem(ts->esi + 0x34, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x54, 4), 0x4);
	mov(mv, x86::mem(ts->esi + 0x58, 4), 0x1);
	mov(mv, x86::mem(ts->esi + 0x78, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x7C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x9C, 4), ts->ebp);
	mov(mv, x86::mem(ts->esi + 0xA0, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xC0, 4), ts->ebp);
	mov(mv, x86::mem(ts->esi + 0xC4, 4), ts->ebx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0xA4, 4));
	mov(mv, x86::mem(ts->edi + 0x8C, 4), ts->esi);
	xor_(&ts->esi, ts->esi);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x80, 4), ts->ebx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_57AC07;
    }

loc_57ABF4:
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->edi);
	game::sub_579080(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0xA4, 4));
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_57ABF4;
    }

loc_57AC07:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x20, 4), 0x7FFFFFFF);
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp);

loc_57AC13:
	mov(mv, x86::mem(ts->edi + 0xA8, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0xAC, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0xB0, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0xB4, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0xA4, 4), ts->ebx);

loc_57AC31:
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);

loc_57AC33:
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp);
}

void sub_57AC40(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x778818);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x24, 4), 0x0);
	lea(mv, &ts->ebx, x86::mem(ts->ecx + 0x98, 4));
	nop();

loc_57AC80:
	mov(mv, &ts->esi, x86::mem(ts->ebx, 4));
	xor_(&ts->edi, ts->edi);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_57ACA7;
    }

loc_57AC88:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_57ACA1;
    }
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_57AD05;
    }
	dec(&ts->edi);

loc_57ACA1:
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_57AC88;
    }

loc_57ACA7:
	push(mv, &ts->esp, 0x571950);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	game::sub_43E650(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	game::sub_43BEB0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_57ACF1;
    }
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_57ACD0:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(&ts->edx, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	game::_free(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_57ACD0;
    }

loc_57ACF1:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_57AD05:
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_57ACA7;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->esi);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi, 4), ts->edx);
	goto loc_57AC80;

loc_57A250:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero) {
        goto loc_57A279;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_57A260:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	game::_free(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_57A260;
    }

loc_57A279:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_778810:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x18, 4));
	goto loc_57A250;

SEH_57AC40:
	mov(&ts->eax, 0x7E3E64);
	goto ___CxxFrameHandler;
}

void sub_57AD30(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->esi, ts->ecx);
	game::sub_578FD0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57AD6C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x94, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x90, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(&ts->eax, 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_57AD6C:
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_57AD80(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebp, ts->ecx);
	push(mv, &ts->esp, 0x7A08B0);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebp);
	game::sub_578CE0(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->ebp + 0x78, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_571770(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->ebp + 0x7C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_571770(ts, mv);
	lea(mv, &ts->ebx, x86::mem(ts->ebp + 0xD4, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	game::sub_571770(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebx, 4));
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_57ADE6;
    }
	add(&ts->ebp, 0xE0);
	nop();

loc_57ADD0:
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->esi);
	game::sub_571770(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebx, 4));
	inc(&ts->edi);
	add(&ts->ebp, 0x4);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_57ADD0;
    }
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x10, 4));

loc_57ADE6:
	lea(mv, &ts->ebx, x86::mem(ts->ebp + 0x40E4, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	game::sub_571770(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(ts->ebx, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x0);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_57AF2E;
    }
	add(&ts->ebp, 0x40EC);
	goto loc_57AE10;

loc_57AE10:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x40, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_57AE4D;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1DC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1E4, 4));
	lea(mv, &ts->eax, x86::mem(ts->ecx + 0x10, 4));
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_57AE46;
    }
	xor_(&ts->eax, ts->eax);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_57AE30:
	mov(mv, &ts->dl, x86::mem(ts->eax + (ts->ebp), 1));
	mov(mv, x86::mem(ts->esi + (ts->ecx) + 0x1E8, 1), ts->dl);
	inc(&ts->ecx);
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0x10);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_57AE30;
    }
	goto loc_57AF0E;

loc_57AE46:
	mov(&ts->ecx, ts->eax);
	goto loc_57AF0E;

loc_57AE4D:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x41, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_57AE86;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1DC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1E0, 4));
	lea(mv, &ts->eax, x86::mem(ts->ecx + 0x10, 4));
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_57AF0E;
    }
	xor_(&ts->eax, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_57AE70:
	mov(mv, &ts->dl, x86::mem(ts->esi + (ts->ecx) + 0x1E8, 1));
	inc(&ts->ecx);
	mov(mv, x86::mem(ts->eax + (ts->ebp), 1), ts->dl);
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0x10);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_57AE70;
    }
	goto loc_57AF0E;

loc_57AE86:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x42, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_57AF14;
    }
	or_(&ts->edx, 0xFFFFFFFF);
	lea(mv, &ts->eax, x86::mem(ts->ebp + 0x1, 4));
	mov(&ts->edi, 0x2);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_57AEA0:
	movzx(mv, &ts->ecx, x86::mem(ts->eax - 0x1, 1));
	imul(&ts->edx, ts->edx, 0x21);
	add(&ts->ecx, ts->edx);
	movzx(mv, &ts->edx, x86::mem(ts->eax, 1));
	imul(&ts->ecx, ts->ecx, 0x21);
	add(&ts->ecx, ts->edx);
	movzx(mv, &ts->edx, x86::mem(ts->eax + 0x1, 1));
	imul(&ts->ecx, ts->ecx, 0x21);
	add(&ts->edx, ts->ecx);
	movzx(mv, &ts->ecx, x86::mem(ts->eax + 0x2, 1));
	imul(&ts->edx, ts->edx, 0x21);
	add(&ts->ecx, ts->edx);
	movzx(mv, &ts->edx, x86::mem(ts->eax + 0x3, 1));
	imul(&ts->ecx, ts->ecx, 0x21);
	add(&ts->edx, ts->ecx);
	movzx(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 1));
	imul(&ts->edx, ts->edx, 0x21);
	add(&ts->ecx, ts->edx);
	movzx(mv, &ts->edx, x86::mem(ts->eax + 0x5, 1));
	imul(&ts->ecx, ts->ecx, 0x21);
	add(&ts->edx, ts->ecx);
	movzx(mv, &ts->ecx, x86::mem(ts->eax + 0x6, 1));
	imul(&ts->edx, ts->edx, 0x21);
	add(&ts->edx, ts->ecx);
	add(&ts->eax, 0x8);
	dec(&ts->edi);
	if (!ts->eflags.zero) {
        goto loc_57AEA0;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1DC, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x1E4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x2, 4));
	cmp(&ts->eflags, ts->ecx, ts->edi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_57AF0E;
    }
	mov(mv, x86::mem(ts->eax + (ts->esi) + 0x1E8, 1), ts->dl);
	mov(mv, x86::mem(ts->eax + (ts->esi) + 0x1E9, 1), ts->dh);

loc_57AF0E:
	mov(mv, x86::mem(ts->esi + 0x1DC, 4), ts->ecx);

loc_57AF14:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebx, 4));
	inc(&ts->eax);
	add(&ts->ebp, 0x10);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_57AE10;
    }
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x10, 4));

loc_57AF2E:
	mov(mv, &ts->eax, x86::mem(0x8650D4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57AF41;
    }
	mov(mv, &ts->edx, x86::mem(0x8650DC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx, 4));
	goto loc_57AF43;

loc_57AF41:
	xor_(&ts->ecx, ts->ecx);

loc_57AF43:
	lea(mv, &ts->eax, x86::mem(ts->ebp + 0x40E0, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_571770(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_578D90(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);
}

void sub_57AFA0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x2C, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->eax, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0x1, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0x2, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x8, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0x9, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x18, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->ecx);
	retn(mv, &ts->esp);
}

void sub_57AFE0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ecx);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_57AFF0:
	mov(mv, &ts->ecx, x86::mem(0x8650B8, 4));
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x98, 4));
	lea(mv, &ts->edi, x86::mem(ts->ecx + 0x98, 4));
	xor_(&ts->ebp, ts->ebp);
	cmp(&ts->eflags, ts->esi, ts->edi);
	mov(&ts->ebx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_57B036;
    }
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_57B010:
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, 0x7A0844);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_57B02A;
    }
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_57B07E;
    }
	dec(&ts->ebp);

loc_57B02A:
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_57B010;
    }

loc_57B030:
	mov(mv, &ts->ecx, x86::mem(0x8650B8, 4));

loc_57B036:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7A08C0);
	mov(&ts->esi, ts->ecx);
	game::sub_578FD0(ts, mv);
	xor_(&ts->edi, ts->edi);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_57B06A;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x94, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x90, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);

loc_57B06A:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(ts->eax + 0x8, 1), 0x0);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_57B07E:
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_57B030;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x94, 4));
	lea(mv, &ts->eax, x86::mem(ts->ebx + 0x90, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi, 4), ts->eax);
	goto loc_57AFF0;
}

void sub_57B0B0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x1B8, 4));
	xor_(&ts->esi, ts->esi);
	cmp(&ts->eflags, ts->ebx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_57B171;
    }
	cmp(mv, &ts->eflags, ts->ebx, x86::mem(ts->edi + 0x1BC, 4));
	if (ts->eflags.zero) {
        goto loc_57B0F1;
    }
	mov(mv, x86::mem(ts->edi + 0x1C0, 4), ts->esi);
	mov(mv, x86::mem(ts->edi + 0x1BC, 4), ts->ebx);

loc_57B0E5:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x10);

loc_57B0F1:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x1C0, 4));
	inc(&ts->ecx);
	mov(&ts->eax, ts->ecx);
	cmp(&ts->eflags, ts->eax, 0x20);
	mov(mv, x86::mem(ts->edi + 0x1C0, 4), ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_57B0E5;
    }
	mov(mv, x86::mem(ts->edi + 0x1B8, 4), ts->ebx);
	lea(mv, &ts->ebp, x86::mem(ts->edi + 0x8, 4));
	mov(&ts->edi, ts->edi);

loc_57B110:
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	game::sub_572210(ts, mv);
	add(&ts->esp, 0xC);
	inc(&ts->esi);
	add(&ts->ebp, 0x2C);
	cmp(&ts->eflags, ts->esi, 0x4);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_57B110;
    }
	mov(mv, &ts->esi, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	mov(&ts->ebx, ts->eax);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_57B171;
    }
	goto loc_57B140;

loc_57B140:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x1C4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x1B8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_572120(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), 0x1);
	mov(mv, x86::mem(ts->esi + 0x18, 4), 0x0);
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_57B140;
    }

loc_57B171:
	mov(mv, &ts->eax, x86::mem(0x8650B8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57B191;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_57B191;
    }
	mov(mv, &ts->eax, x86::mem(0x8900D8, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), 0x7);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_57B199;
    }

loc_57B191:
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x0);

loc_57B199:
	mov(mv, &ts->esi, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	mov(&ts->ebx, ts->eax);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_57B22F;
    }
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x28, 4));

loc_57B1B4:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57B229;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_57B229;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_57B1D1;
    }
	mov(mv, &ts->dl, x86::mem(ts->eax + 0x16, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.zero) {
        goto loc_57B229;
    }

loc_57B1D1:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	call(ts, mv, ts->ecx);
	add(&ts->esp, 0x14);
	test(&ts->eflags, ts->ax, ts->ax);
	if (ts->eflags.zero) {
        goto loc_57B229;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebp, 4));
	cmp(&ts->eflags, ts->edx, 0x100);
	mov(mv, &ts->ebx, x86::mem(ts->edi + 0x1B4, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_57B21C;
    }
	lea(mv, &ts->ecx, x86::mem(ts->edx + (ts->edx*2), 4));
	lea(mv, &ts->ecx, x86::mem(ts->ebp + (ts->ecx*4) + 0x4, 4));
	inc(&ts->edx);
	mov(mv, x86::mem(ts->ebp, 4), ts->edx);
	mov(mv, x86::mem(ts->ecx, 2), ts->ax);
	mov(mv, x86::mem(ts->ecx + 0x2, 1), ts->bl);
	mov(mv, &ts->dl, x86::mem(ts->esi + 0x8, 1));
	mov(mv, x86::mem(ts->ecx + 0x3, 1), ts->dl);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x14, 4));
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->edx);

loc_57B21C:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x14, 4));
	inc(&ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);

loc_57B229:
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_57B1B4;
    }

loc_57B22F:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x10);
}

void sub_57B240(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x7A08D8);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_578CE0(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x40, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_57B292;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1DC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1E4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x2, 4));
	cmp(&ts->eflags, ts->ecx, ts->edx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_57B28A;
    }
	mov(mv, &ts->dl, x86::mem(0x864788, 1));
	mov(mv, x86::mem(ts->eax + (ts->esi) + 0x1E8, 1), ts->dl);
	mov(mv, &ts->dl, x86::mem(0x864789, 1));
	mov(mv, x86::mem(ts->eax + (ts->esi) + 0x1E9, 1), ts->dl);

loc_57B28A:
	mov(mv, x86::mem(ts->esi + 0x1DC, 4), ts->ecx);
	goto loc_57B2DF;

loc_57B292:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x41, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_57B2AD;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x2);
	push(mv, &ts->esp, 0x2);
	push(mv, &ts->esp, 0x864788);
	mov(&ts->ecx, ts->esi);
	game::sub_5715B0(ts, mv);
	goto loc_57B2DF;

loc_57B2AD:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x42, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_57B2DF;
    }
	mov(mv, &ts->cx, x86::mem(0x864788, 2));
	movzx(&ts->eax, ts->cl);
	sub(&ts->eax, 0x21);
	imul(&ts->eax, ts->eax, 0x21);
	push(mv, &ts->esp, 0x0);
	movzx(&ts->ecx, ts->ch);
	push(mv, &ts->esp, 0x2);
	add(&ts->eax, ts->ecx);
	push(mv, &ts->esp, 0x2);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->eax);
	game::sub_571550(ts, mv);

loc_57B2DF:
	mov(&ts->ebp, 0x8655A0);
	goto loc_57B2F0;

loc_57B2F0:
	mov(&ts->edi, 0x7FAB48);
	goto loc_57B300;

loc_57B300:
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->ebp) + 0xB8, 4));
	mov(mv, &ts->al, x86::mem(ts->esi + 0x40, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_57B334;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1DC, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x1E4, 4));
	lea(mv, &ts->eax, x86::mem(ts->edx + 0x1, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_57B32C;
    }
	mov(mv, &ts->cl, x86::mem(ts->ecx, 1));
	mov(mv, x86::mem(ts->edx + (ts->esi) + 0x1E8, 1), ts->cl);

loc_57B32C:
	mov(mv, x86::mem(ts->esi + 0x1DC, 4), ts->eax);
	goto loc_57B395;

loc_57B334:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x41, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_57B361;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1DC, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x1E0, 4));
	lea(mv, &ts->edx, x86::mem(ts->eax + 0x1, 4));
	cmp(&ts->eflags, ts->edx, ts->ebx);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_57B359;
    }
	mov(mv, &ts->bl, x86::mem(ts->eax + (ts->esi) + 0x1E8, 1));
	mov(&ts->eax, ts->edx);
	mov(mv, x86::mem(ts->ecx, 1), ts->bl);

loc_57B359:
	mov(mv, x86::mem(ts->esi + 0x1DC, 4), ts->eax);
	goto loc_57B395;

loc_57B361:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x42, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_57B395;
    }
	movzx(mv, &ts->eax, x86::mem(ts->ecx, 1));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1DC, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x1E4, 4));
	lea(mv, &ts->edx, x86::mem(ts->ecx + 0x2, 4));
	sub(&ts->eax, 0x21);
	cmp(&ts->eflags, ts->edx, ts->ebx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_57B38F;
    }
	mov(mv, x86::mem(ts->ecx + (ts->esi) + 0x1E8, 1), ts->al);
	mov(mv, x86::mem(ts->ecx + (ts->esi) + 0x1E9, 1), ts->ah);

loc_57B38F:
	mov(mv, x86::mem(ts->esi + 0x1DC, 4), ts->edx);

loc_57B395:
	add(&ts->edi, 0x4);
	cmp(&ts->eflags, ts->edi, 0x7FABA8);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_57B300;
    }
	add(&ts->ebp, 0x1C8);
	cmp(&ts->eflags, ts->ebp, 0x865930);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_57B2F0;
    }
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	goto sub_578D90;
}

void sub_57B3D0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x5C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_57B401;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x68, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_57B3F3;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x64, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x60, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ecx);
	call(ts, mv, ts->eax);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp, 0x4);

loc_57B3F3:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x60, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ecx);
	call(ts, mv, ts->eax);
	add(&ts->esp, 0x8);

locret_57B401:
	retn(mv, &ts->esp, 0x4);
}

void sub_57B410(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esi + 0x48, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	xor_(&ts->edi, ts->edi);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x50, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x54, 4), 0x100000);
	mov(mv, x86::mem(ts->esi + 0x58, 4), 0x5);
	game::sub_43DBD0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x24, 4));
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x5C, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x64, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x68, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x70, 4), ts->edi);
	mov(mv, &ts->ecx, x86::mem(0x7FB538, 4));
	mov(mv, x86::mem(ts->esi + 0x6C, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x74, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x78, 4), ts->edi);
	mov(mv, &ts->eax, x86::mem(0x7FB538, 4));
	add(&ts->esp, 0x8);
	inc(&ts->eax);
	mov(mv, x86::mem(0x7FB538, 4), ts->eax);
	cmp(&ts->eflags, ts->eax, 0x186A0);
	mov(&ts->eax, ts->esi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_57B491;
    }
	mov(mv, x86::mem(0x7FB538, 4), 0x1);

loc_57B491:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x18);
}

void sub_57B4A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77883B);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(0x8650F0, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_440E50(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_57B4FB;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->eax);
	game::sub_57B410(ts, mv);
	goto loc_57B4FD;

loc_57B4FB:
	xor_(&ts->eax, ts->eax);

loc_57B4FD:
	mov(mv, &ts->ecx, x86::mem(0x865224, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(0x865224, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(ts->eax, 4), 0x865220);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x6C, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

unknown_libname_69:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_5735A0(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

SEH_57B530:
	mov(&ts->eax, 0x7E3E88);
	goto ___CxxFrameHandler;
}

void sub_57B530(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77883B);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(0x8650F0, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_440E50(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_57B58B;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->eax);
	game::sub_57B410(ts, mv);
	goto loc_57B58D;

loc_57B58B:
	xor_(&ts->eax, ts->eax);

loc_57B58D:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x2C, 4));
	mov(mv, x86::mem(ts->eax + 0x64, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x68, 4), 0x1);
	mov(mv, &ts->ecx, x86::mem(0x865224, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(0x865224, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(ts->eax, 4), 0x865220);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x6C, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

unknown_libname_69:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_5735A0(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

SEH_57B530:
	mov(&ts->eax, 0x7E3E88);
	goto ___CxxFrameHandler;
}

void sub_57B5D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x866584);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	mov(&ts->edi, ts->eax);
	mov(&ts->edi, ts->edi);

loc_57B5E0:
	mov(mv, &ts->esi, x86::mem(0x866584, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_57B5FD;
    }
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_57B5F0:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57B600;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_57B5F0;
    }

loc_57B5FD:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_57B600:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_5798C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x865104, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	game::sub_43F920(ts, mv);
	add(&ts->esp, 0x8);
	goto loc_57B5E0;
}

void sub_57B630(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0x0);
	game::sub_57B5D0(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_57B640(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77885B);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(0x86510C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_57B6EB;
    }
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x464);
	game::_malloc(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_57B699;
    }
	push(mv, &ts->esp, 0x7A0460);
	mov(&ts->ecx, ts->esi);
	game::sub_6F6C23(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x7A0428);
	mov(&ts->ecx, ts->esi);
	goto loc_57B69B;

loc_57B699:
	xor_(&ts->ecx, ts->ecx);

loc_57B69B:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(0x86510C, 4), ts->ecx);
	game::sub_579A40(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	pop(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero) {
        goto loc_57B6D1;
    }
	mov(mv, &ts->eax, x86::mem(0x86510C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_57B6D1:
	mov(mv, &ts->ecx, x86::mem(0x86510C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_57B6E1;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax, 4));

loc_57B6E1:
	mov(mv, x86::mem(0x86510C, 4), 0x0);

loc_57B6EB:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

unknown_libname_70:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::j__free(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

SEH_57B640:
	mov(&ts->eax, 0x7E3EAC);
	goto ___CxxFrameHandler;
}

void sub_57B700(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x98, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x90, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x9C, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x94, 4));
	sub(&ts->ebx, ts->edx);
	sbb(&ts->edi, ts->eax);
	xor_(&ts->ebp, ts->ebp);
	cmp(&ts->eflags, ts->ebp, ts->edi);
	if (ts->eflags.carry) {
        goto loc_57B746;
    }
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_57B734;
    }
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x1C, 4));
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_57B74A;
    }

loc_57B734:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x90, 4));
	sub(mv, &ts->edi, x86::mem(ts->esi + 0x98, 4));
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->edi);
	goto loc_57B74A;

loc_57B746:
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x1C, 4));

loc_57B74A:
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x8C, 4));
	xor_(&ts->ebp, ts->ebp);
	add(&ts->edi, ts->edx);
	adc(&ts->ebp, ts->eax);
	shrd(&ts->edi, ts->ebp, 0xB);
	shrd(&ts->edx, ts->eax, 0xB);
	shr(&ts->eax, 0xB);
	shr(&ts->ebp, 0xB);
	mov(&ts->ebp, ts->eax);
	mov(mv, &ts->ebp, x86::mem(ts->ecx + 0x45C, 4));
	mov(&ts->eax, ts->edx);
	sub(&ts->eax, ts->ebp);
	add(&ts->edi, ts->ebx);
	add(&ts->eax, ts->ebx);
	if (!ts->eflags.sign) {
        goto loc_57B778;
    }
	neg(&ts->eax);

loc_57B778:
	add(mv, x86::mem(ts->ecx + 0x460, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x45C, 4), ts->edi);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x88, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x98, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x9C, 4));
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->ebp, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, 0x0);
	shl(&ts->eax, 0xB);
	cdq(&ts->eax, ts->edx);
	push(mv, &ts->esp, 0x0);
	add(&ts->eax, ts->ecx);
	push(mv, &ts->esp, 0x0);
	adc(&ts->edx, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->ebp + 0x1C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x14, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x98, 4));
	mov(&ts->ecx, ts->eax);
	cdq(&ts->eax, ts->edx);
	add(&ts->edi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x9C, 4));
	mov(mv, x86::mem(ts->esi + 0x98, 4), ts->edi);
	adc(&ts->eax, ts->edx);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x9C, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	mov(&ts->eax, ts->ecx);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x14);
}

void sub_57B800(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	game::sub_43BDF0(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6F76E9(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x64);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_6F77BC(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, x86::mem(ts->esi + 0x20, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0xC, 4));
	add(&ts->esp, 0x1C);
	test(&ts->eflags, ts->edx, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_57B84F;
    }
	push(mv, &ts->esp, 0x579B20);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->edi);
	game::sub_6F76F2(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_57B84F:
	push(mv, &ts->esp, 0x579B20);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->edi);
	game::sub_6F76F2(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_57B870(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0xC);
	game::_malloc(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_57B8A3;
    }
	push(mv, &ts->esp, 0x400);
	mov(mv, x86::mem(ts->esi, 1), 0x1);
	game::_malloc(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x8, 4), 0x0);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(0x865128, 4), ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_57B8A3:
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x865128, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_57B8B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->ebx + 0x4, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_57B96D;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x34, 4));
	mov(mv, &ts->cl, x86::mem(ts->esp + 0xC, 1));
	and_(&ts->eax, 0x1F);
	mov(mv, x86::mem(ts->eax + (ts->ebx) + 0x14, 1), ts->cl);
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x34, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x10, 4));
	xor_(&ts->eax, ts->eax);
	inc(&ts->edx);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->ebx + 0x34, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_57B96D;
    }
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_57B8F0:
	mov(mv, &ts->esi, x86::mem(ts->ebx + 0xC, 4));
	add(mv, &ts->esi, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->esi);
	game::sub_43DBB0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x34, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.carry) {
        goto loc_57B94F;
    }
	sub(&ts->ecx, ts->eax);
	xor_(&ts->ebp, ts->ebp);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_57B943;
    }
	mov(&ts->edi, ts->ecx);
	sub(&ts->esi, ts->ecx);

loc_57B913:
	mov(mv, &ts->dl, x86::mem(ts->esi + (ts->edi), 1));
	cmp(&ts->eflags, ts->dl, 0x61);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_57B923;
    }
	cmp(&ts->eflags, ts->dl, 0x7A);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_57B923;
    }
	and_(&ts->dl, 0x5F);

loc_57B923:
	mov(&ts->ecx, ts->edi);
	and_(&ts->ecx, 0x1F);
	mov(mv, &ts->cl, x86::mem(ts->ecx + (ts->ebx) + 0x14, 1));
	cmp(&ts->eflags, ts->cl, 0x61);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_57B939;
    }
	cmp(&ts->eflags, ts->cl, 0x7A);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_57B939;
    }
	and_(&ts->cl, 0x5F);

loc_57B939:
	cmp(&ts->eflags, ts->dl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_57B94F;
    }
	inc(&ts->ebp);
	inc(&ts->edi);
	cmp(&ts->eflags, ts->ebp, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_57B913;
    }

loc_57B943:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->ebx);
	game::sub_579CB0(ts, mv);

loc_57B94F:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x10, 4));
	inc(&ts->eax);
	add(&ts->edx, 0x34);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edx);
	if (ts->eflags.carry) {
        goto loc_57B8F0;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);

loc_57B96D:
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);
}

void sub_57B980(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x7A08E4);
	mov(&ts->edi, ts->ecx);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_578CE0(ts, mv);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	game::sub_579DF0(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->edi + 0x4, 1));
	cmp(&ts->eflags, ts->al, 0x4);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, 0x0);
	if (!ts->eflags.zero) {
        goto loc_57B9BA;
    }
	movzx(mv, &ts->eax, x86::mem(ts->edi + 0x5, 1));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_578A00(ts, mv);
	goto loc_57B9CF;

loc_57B9BA:
	movzx(mv, &ts->edx, x86::mem(ts->edi + 0x5, 1));
	movzx(&ts->eax, ts->al);
	imul(&ts->edx, ts->eax);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_571640(ts, mv);

loc_57B9CF:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x41, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_57B9DD;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x40, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_57B9E4;
    }

loc_57B9DD:
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));

loc_57B9E4:
	mov(&ts->ecx, ts->esi);
	game::sub_578D90(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_57B9F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x7A08F0);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->ebx);
	game::sub_578CE0(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	game::sub_579DF0(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x5, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_57BA38;
    }
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_57BA37;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_57BA20:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->edi*4), 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebx);
	game::sub_571770(ts, mv);
	movzx(mv, &ts->edx, x86::mem(ts->esi + 0x5, 1));
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, ts->edx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_57BA20;
    }

loc_57BA37:
	pop(mv, &ts->esp, ts->edi);

loc_57BA38:
	mov(mv, &ts->al, x86::mem(ts->ebx + 0x41, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_57BA46;
    }
	mov(mv, &ts->al, x86::mem(ts->ebx + 0x40, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_57BA4D;
    }

loc_57BA46:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));

loc_57BA4D:
	mov(&ts->ecx, ts->ebx);
	game::sub_578D90(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_57BA60(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, 0x7845D8);
	mov(&ts->ebp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_578CE0(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x40, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	lea(mv, &ts->eax, x86::mem(ts->ebp + 0x2C, 4));
	if (ts->eflags.zero) {
        goto loc_57BAC4;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1DC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1E4, 4));
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->ecx + 0x4, 4));
	cmp(&ts->eflags, ts->edi, ts->edx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_57BABB;
    }
	mov(mv, &ts->dl, x86::mem(ts->eax, 1));
	mov(mv, x86::mem(ts->ecx + (ts->esi) + 0x1E8, 1), ts->dl);
	mov(mv, &ts->dl, x86::mem(ts->eax + 0x1, 1));
	mov(mv, x86::mem(ts->ecx + (ts->esi) + 0x1E9, 1), ts->dl);
	mov(mv, &ts->dl, x86::mem(ts->eax + 0x2, 1));
	mov(mv, x86::mem(ts->ecx + (ts->esi) + 0x1EA, 1), ts->dl);
	mov(mv, &ts->al, x86::mem(ts->eax + 0x3, 1));
	mov(mv, x86::mem(ts->ecx + (ts->esi) + 0x1EB, 1), ts->al);

loc_57BABB:
	mov(mv, x86::mem(ts->esi + 0x1DC, 4), ts->edi);
	pop(mv, &ts->esp, ts->edi);
	goto loc_57BB19;

loc_57BAC4:
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x41, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_57BADB;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_5715B0(ts, mv);
	goto loc_57BB19;

loc_57BADB:
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x42, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_57BB19;
    }
	movzx(mv, &ts->ecx, x86::mem(ts->eax, 1));
	movzx(mv, &ts->edx, x86::mem(ts->eax + 0x1, 1));
	sub(&ts->ecx, 0x21);
	imul(&ts->ecx, ts->ecx, 0x21);
	add(&ts->edx, ts->ecx);
	movzx(mv, &ts->ecx, x86::mem(ts->eax + 0x2, 1));
	imul(&ts->edx, ts->edx, 0x21);
	movzx(mv, &ts->eax, x86::mem(ts->eax + 0x3, 1));
	add(&ts->ecx, ts->edx);
	imul(&ts->ecx, ts->ecx, 0x21);
	push(mv, &ts->esp, 0x0);
	add(&ts->eax, ts->ecx);
	push(mv, &ts->esp, 0x2);
	push(mv, &ts->esp, 0x2);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	game::sub_571550(ts, mv);

loc_57BB19:
	movzx(mv, &ts->eax, x86::mem(ts->ebp + 0x5, 1));
	mov(mv, &ts->dl, x86::mem(ts->esi + 0x40, 1));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x30, 4));
	shl(&ts->eax, 0x2);
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.zero) {
        goto loc_57BB31;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	goto loc_57BB78;

loc_57BB31:
	mov(mv, &ts->dl, x86::mem(ts->esi + 0x41, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.zero) {
        goto loc_57BB58;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_5715B0(ts, mv);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->ebp);
	game::sub_57B9F0(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_578D90(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_57BB58:
	mov(mv, &ts->dl, x86::mem(ts->esi + 0x42, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.zero) {
        goto loc_57BB7F;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_571520(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x2);
	push(mv, &ts->esp, 0x2);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	push(mv, &ts->esp, ts->edx);

loc_57BB78:
	mov(&ts->ecx, ts->esi);
	game::sub_571550(ts, mv);

loc_57BB7F:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->ebp);
	game::sub_57B9F0(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_578D90(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_57BBA0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, 0x7A0904);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_578CE0(ts, mv);
	push(mv, &ts->esp, 0x86518C);
	mov(&ts->ecx, ts->esi);
	game::sub_571770(ts, mv);
	push(mv, &ts->esp, 0x7FB718);
	mov(&ts->ecx, ts->esi);
	game::sub_571770(ts, mv);
	push(mv, &ts->esp, 0x7FB724);
	mov(&ts->ecx, ts->esi);
	game::sub_571770(ts, mv);
	push(mv, &ts->esp, 0x7FB720);
	mov(&ts->ecx, ts->esi);
	game::sub_571770(ts, mv);
	push(mv, &ts->esp, 0x865150);
	mov(&ts->ecx, ts->esi);
	game::sub_571770(ts, mv);
	push(mv, &ts->esp, 0x7FB71C);
	mov(&ts->ecx, ts->esi);
	game::sub_571770(ts, mv);
	push(mv, &ts->esp, 0x865158);
	mov(&ts->ecx, ts->esi);
	game::sub_571770(ts, mv);
	mov(&ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	goto sub_578D90;
}

void sub_57BC10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero) {
        goto loc_57BC3F;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_57BC20:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(0x8650BC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43F920(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_57BC20;
    }

loc_57BC3F:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_57BCD0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->eax);
	retn(mv, &ts->esp);
}

void sub_57BCE0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x8, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ebx, 4), 0x8003B000);
	if (!ts->eflags.zero) {
        goto loc_57BD5E;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->esi, x86::mem(ts->ebx + 0x8, 4));
	lea(mv, &ts->ecx, x86::mem(ts->ebx + (ts->eax) + 0x8, 4));
	cmp(&ts->eflags, ts->esi, ts->ecx);
	if (!ts->eflags.carry) {
        goto loc_57BD56;
    }
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x865210);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	mov(&ts->edi, ts->eax);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_57BD10:
	mov(mv, &ts->eax, x86::mem(0x865210, 4));
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x1F, 4));
	and_(&ts->edx, 0xFFFFFFF0);
	cmp(&ts->eflags, ts->eax, ts->edi);
	mov(mv, &ts->ecx, x86::mem(ts->edx, 4));
	if (ts->eflags.zero) {
        goto loc_57BD43;
    }

loc_57BD21:
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x8, 4));
	cmp(mv, &ts->eflags, ts->ecx, x86::mem(ts->edx, 4));
	if (ts->eflags.zero) {
        goto loc_57BD30;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_57BD21;
    }
	goto loc_57BD43;

loc_57BD30:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	game::sub_440EF0(ts, mv);
	add(&ts->esp, 0x4);

loc_57BD43:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x4, 4));
	lea(mv, &ts->esi, x86::mem(ts->esi + (ts->eax) + 0x8, 4));
	lea(mv, &ts->edx, x86::mem(ts->ebx + (ts->ecx) + 0x8, 4));
	cmp(&ts->eflags, ts->esi, ts->edx);
	if (ts->eflags.carry) {
        goto loc_57BD10;
    }
	pop(mv, &ts->esp, ts->edi);

loc_57BD56:
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->eax, 0x1);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_57BD5E:
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_57BD70(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->esi + 0xD0, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xD4, 4), ts->ecx);
	inc(mv, x86::mem(0x864F54, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xD8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_57BDD2;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	mov(&ts->eax, ts->ecx);
	shr(&ts->eax, 0x3);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xDC, 4));
	and_(&ts->al, 0x1);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_57BDD1;
    }
	test(&ts->eflags, ts->cl, 0x2);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xC4, 4));
	if (ts->eflags.zero) {
        goto loc_57BDBA;
    }
	or_(&ts->edx, 0x8);

loc_57BDBA:
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_57BDC1;
    }
	or_(&ts->edx, 0x8);

loc_57BDC1:
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->esi + 0xD8, 4), ts->eax);

loc_57BDD1:
	pop(mv, &ts->esp, ts->edi);

loc_57BDD2:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xDC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57BE1F;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x14, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x571050);
	push(mv, &ts->esp, ts->eax);
	inc(&ts->ecx);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	mov(mv, x86::mem(ts->esi + 0xC8, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xD8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_57B4A0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_5797B0(ts, mv);
	add(&ts->esp, 0x1C);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57BE1F;
    }
	mov(mv, x86::mem(ts->eax + 0x58, 4), 0x5);
	mov(mv, x86::mem(ts->eax + 0x54, 4), 0x2000000);

loc_57BE1F:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_57BE30(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x24, 4));
	mov(mv, &ts->ecx, x86::mem(0x7FB724, 4));
	xor_(&ts->ebp, ts->ebp);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_57BEC6;
    }
	cmp(mv, &ts->eflags, x86::mem(0x8650D0, 4), ts->ebp);
	if (ts->eflags.zero) {
        goto loc_57BEC6;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x20, 4));
	dec(&ts->edx);
	cmp(&ts->eflags, ts->ecx, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_57BEC6;
    }
	mov(mv, x86::mem(ts->edi + 0x24, 4), 0x1);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x34, 2), 0x1BD);
	mov(mv, x86::mem(ts->edi + 0x36, 2), ts->bp);
	mov(&ts->ebx, 0x2);
	game::sub_4A7C40(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_57BEB1;
    }
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->esi, x86::mem(ts->edi + 0x38, 4));
	goto loc_57BE80;

loc_57BE80:
	mov(mv, x86::mem(ts->esi, 2), 0x12D);
	add(&ts->esi, 0x2);
	mov(mv, x86::mem(ts->esi, 2), 0x2D);
	add(&ts->esi, 0x2);
	inc(&ts->ebx);
	mov(mv, x86::mem(ts->esi, 2), 0x0);
	inc(&ts->ebx);
	add(&ts->esi, 0x2);
	inc(&ts->ebx);
	mov(mv, x86::mem(ts->esi, 2), 0x0);
	inc(&ts->ebx);
	add(&ts->esi, 0x2);
	inc(&ts->ebp);
	game::sub_4A7C40(ts, mv);
	cmp(&ts->eflags, ts->ebp, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_57BE80;
    }
	xor_(&ts->ebp, ts->ebp);
	pop(mv, &ts->esp, ts->esi);

loc_57BEB1:
	mov(mv, x86::mem(ts->edi + (ts->ebx*2) + 0x34, 2), 0x125);
	inc(&ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x30, 4), ts->ebx);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x2C, 4), ts->ebp);
	mov(mv, x86::mem(ts->edi + 0x28, 4), ts->ebp);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_57BEC6:
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_57BED7;
    }
	mov(mv, x86::mem(0x8650D0, 4), ts->ebp);
	inc(mv, x86::mem(ts->edi + 0x24, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_57BED7:
	cmp(&ts->eflags, ts->eax, 0x2);
	if (!ts->eflags.zero) {
        goto loc_57BEEF;
    }
	cmp(mv, &ts->eflags, ts->ecx, x86::mem(ts->edi + 0x7C, 4));
	if (ts->eflags.zero) {
        goto loc_57BFD8;
    }
	mov(mv, x86::mem(ts->edi + 0x24, 4), 0x3);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_57BEEF:
	cmp(&ts->eflags, ts->eax, 0x3);
	if (!ts->eflags.zero) {
        goto loc_57BFB3;
    }
	cmp(mv, &ts->eflags, ts->ecx, x86::mem(ts->edi + 0x7C, 4));
	if (!ts->eflags.zero) {
        goto loc_57BFD8;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x20, 4));
	add(&ts->eax, 0x64);
	push(mv, &ts->esp, 0x7A0934);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->edi + 0x20, 4), ts->eax);
	game::sub_57AD30(ts, mv);
	push(mv, &ts->esp, 0x7A0928);
	mov(&ts->ecx, ts->edi);
	game::sub_57AD30(ts, mv);
	push(mv, &ts->esp, 0x7A091C);
	mov(&ts->ecx, ts->edi);
	game::sub_57AD30(ts, mv);
	push(mv, &ts->esp, 0x7A0910);
	mov(&ts->ecx, ts->edi);
	game::sub_57AD30(ts, mv);
	mov(mv, x86::mem(ts->edi + 0x34, 2), ts->bp);
	mov(mv, x86::mem(ts->edi + 0x36, 2), 0x11E);
	mov(mv, x86::mem(ts->edi + 0x38, 2), 0x1E);
	mov(mv, x86::mem(ts->edi + 0x3A, 2), ts->bp);
	mov(mv, x86::mem(ts->edi + 0x3C, 2), ts->bp);
	mov(mv, x86::mem(ts->edi + 0x3E, 2), ts->bp);
	mov(mv, x86::mem(ts->edi + 0x40, 2), ts->bp);
	mov(mv, x86::mem(ts->edi + 0x42, 2), ts->bp);
	mov(mv, x86::mem(ts->edi + 0x44, 2), ts->bp);
	mov(mv, x86::mem(ts->edi + 0x46, 2), ts->bp);
	mov(mv, x86::mem(ts->edi + 0x48, 2), ts->bp);
	mov(mv, x86::mem(ts->edi + 0x4A, 2), ts->bp);
	mov(mv, x86::mem(ts->edi + 0x4C, 2), ts->bp);
	mov(mv, x86::mem(ts->edi + 0x4E, 2), ts->bp);
	mov(mv, x86::mem(ts->edi + 0x50, 2), ts->bp);
	mov(mv, x86::mem(ts->edi + 0x52, 2), ts->bp);
	mov(mv, x86::mem(ts->edi + 0x54, 2), ts->bp);
	mov(mv, x86::mem(ts->edi + 0x56, 2), ts->bp);
	mov(mv, x86::mem(ts->edi + 0x58, 2), ts->bp);
	mov(mv, x86::mem(ts->edi + 0x5A, 2), ts->bp);
	mov(mv, x86::mem(ts->edi + 0x5C, 2), ts->bp);
	mov(mv, x86::mem(ts->edi + 0x5E, 2), ts->bp);
	mov(mv, x86::mem(ts->edi + 0x60, 2), 0x125);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x24, 4));
	inc(&ts->eax);
	mov(mv, x86::mem(ts->edi + 0x2C, 4), ts->ebp);
	mov(mv, x86::mem(ts->edi + 0x28, 4), ts->ebp);
	mov(mv, x86::mem(ts->edi + 0x30, 4), 0x17);
	mov(mv, x86::mem(ts->edi + 0x24, 4), ts->eax);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_57BFB3:
	cmp(&ts->eflags, ts->eax, 0x4);
	if (!ts->eflags.zero) {
        goto loc_57BFD8;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x28, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->edi + 0x30, 4));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_57BFD8;
    }
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx, 4), 0x4);
	if (!ts->eflags.zero) {
        goto loc_57BFD8;
    }
	mov(mv, x86::mem(0x8650D0, 4), 0x1);
	mov(mv, x86::mem(ts->edi + 0x24, 4), ts->ebp);

loc_57BFD8:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_57BFE0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	mov(&ts->edi, ts->ecx);
	push(mv, &ts->esp, 0x7A08C0);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->edi + 0xA0, 4), ts->esi);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_57C01A;
    }
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	game::sub_57AD80(ts, mv);
	mov(mv, x86::mem(ts->edi + 0xA0, 4), 0x0);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_57C01A:
	game::sub_43BDF0(ts, mv);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x89E7A0);
	game::sub_5ED6B0(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x40, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_57C038;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x42, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_57C047;
    }

loc_57C038:
	mov(mv, &ts->ecx, x86::mem(0x7FB724, 4));
	cmp(mv, &ts->eflags, ts->ecx, x86::mem(ts->edi + 0x7C, 4));
	if (!ts->eflags.zero) {
        goto loc_57C047;
    }
	push(mv, &ts->esp, 0x1);
	goto loc_57C049;

loc_57C047:
	push(mv, &ts->esp, 0x0);

loc_57C049:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x8C, 4));
	push(mv, &ts->esp, ts->esi);
	game::sub_57A780(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	push(mv, &ts->esp, ts->esi);
	game::sub_60A610(ts, mv);
	push(mv, &ts->esp, ts->esi);
	game::sub_57B240(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->edi + 0xA0, 4), 0x0);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_57C080(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x78, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_57C090;
    }
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp, 0x4);

loc_57C090:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	game::sub_43BDF0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x90, 4));
	lea(mv, &ts->ebp, x86::mem(ts->edi + 0x90, 4));
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_57C0B0;
    }
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->edi);
	game::sub_579080(ts, mv);

loc_57C0B0:
	mov(mv, &ts->esi, x86::mem(ts->ebp, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x9C, 4));
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x98, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_5714A0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x7FB724, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->edi + 0x7C, 4));
	if (!ts->eflags.zero) {
        goto loc_57C109;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0xD4, 4));
	cmp(&ts->eflags, ts->ecx, 0x1000);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_57C109;
    }
	mov(mv, x86::mem(ts->edi + (ts->ecx*4) + 0xE0, 4), ts->eax);
	inc(mv, x86::mem(ts->edi + 0xD4, 4));
	mov(mv, &ts->eax, x86::mem(0x7FB724, 4));

loc_57C109:
	mov(mv, x86::mem(ts->edi + 0xD0, 4), ts->eax);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x1DC, 4), 0x0);
	mov(mv, x86::mem(ts->esi + 0x40, 1), 0x1);
	game::sub_57BFE0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1DC, 4));
	mov(mv, x86::mem(ts->esi + 0x1E0, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x40, 1), 0x0);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0xDC, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_57C141;
    }
	mov(&ts->eax, ts->ecx);

loc_57C141:
	mov(mv, x86::mem(ts->edi + 0xDC, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1DC, 4));
	cmp(mv, &ts->eflags, ts->ecx, x86::mem(ts->esi + 0x1E4, 4));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_57C174;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	mov(mv, x86::mem(ts->ebp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi, 4), ts->ebp);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp, 0x4);

loc_57C174:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp, 0x4);
}

void sub_57C180(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x9E8);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	game::sub_577480(ts, mv);
	push(mv, &ts->esp, 0x7A03E4);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	game::sub_5714A0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x7FB724, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0xD0, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x1E4, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x48, 1), 0x1);
	game::sub_57BFE0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x9E8);
	retn(mv, &ts->esp);
}

void sub_57C1D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	xor_(&ts->ebx, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->edi + 0x1DC, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x41, 1), 0x1);
	game::sub_57BFE0(ts, mv);
	mov(mv, x86::mem(ts->edi + 0x41, 1), ts->bl);
	mov(mv, &ts->eax, x86::mem(0x7FB724, 4));
	mov(mv, x86::mem(ts->esi + 0xD0, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->ebx);
	mov(mv, &ts->eax, x86::mem(0x8900BC, 4));
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(0x828774, 4), ts->ecx);
	mov(mv, x86::mem(0x828778, 4), ts->ecx);
	xor_(&ts->esi, ts->esi);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(0x828770, 4), ts->ebx);
	mov(mv, x86::mem(0x82877C, 4), ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_57C237;
    }

loc_57C221:
	mov(mv, &ts->ecx, x86::mem(0x8900B4, 4));
	game::sub_5FAF80(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8900BC, 4));
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_57C221;
    }

loc_57C237:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_57C240(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x778878);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ebp);
	mov(mv, x86::mem(ts->ebp, 4), ts->ebp);
	mov(mv, x86::mem(ts->ebp + 0x4, 4), ts->ebp);
	lea(mv, &ts->edi, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0x0);
	lea(mv, &ts->esi, x86::mem(ts->edi + 0xC, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x4);
	mov(&ts->ebx, 0x43000000);

loc_57C283:
	push(mv, &ts->esp, 0x502FD0);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->edi);
	game::sub_401650(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x18, 4), 0x4);
	mov(mv, x86::mem(ts->edi, 4), 0x0);
	mov(mv, x86::mem(ts->esi - 0x8, 4), 0x0);
	mov(mv, x86::mem(ts->esi - 0x4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->ebx);
	mov(&ts->eax, 0x437F0000);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esi + 0x1C, 1), 0x0);
	add(&ts->edi, 0x2C);
	add(&ts->esi, 0x2C);
	dec(&ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_57C283;
    }
	or_(&ts->eax, 0xFFFFFFFF);
	mov(mv, x86::mem(ts->ebp + 0x1B8, 4), ts->eax);
	mov(mv, x86::mem(ts->ebp + 0x1BC, 4), ts->eax);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ebp + 0x1C0, 4), ts->eax);
	mov(mv, x86::mem(ts->ebp + 0x1C4, 4), ts->eax);
	lea(mv, &ts->edi, x86::mem(ts->ebp + 0xB8, 4));
	mov(&ts->ecx, 0x3E);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->eax, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x14);
	retn(mv, &ts->esp);

loc_778870:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_57BC10;

SEH_57C240:
	mov(&ts->eax, 0x7E3ED0);
	goto ___CxxFrameHandler;
}

void sub_57C320(x86::thread_state* ts, x86::memory_view* mv) {
	goto sub_57BC10;
}

void sub_57C330(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->eax);
	imul(&ts->edi, ts->edi, 0x1C8);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x865980);
	add(&ts->edi, 0x8655A0);
	game::sub_5719C0(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57C38A;
    }

loc_57C362:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x8, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_57C371;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_57C362;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_57C371:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(0x8650BC, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	game::sub_43F920(ts, mv);
	add(&ts->esp, 0x8);

loc_57C38A:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_57C390(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	xor_(&ts->esi, ts->esi);

loc_57C393:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->esi);
	game::sub_57C330(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x571A20);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->esi);
	game::sub_579410(ts, mv);
	add(&ts->esp, 0x18);
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, 0x2);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_57C393;
    }
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_57C3C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	xor_(&ts->esi, ts->esi);

loc_57C3C3:
	push(mv, &ts->esp, 0x2);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x8647A0, 1), 0xFF);
	game::sub_57C330(ts, mv);
	add(&ts->esp, 0x8);
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, 0x2);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_57C3C3;
    }
	mov(mv, x86::mem(0x8650C0, 1), 0x0);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_57C3F0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x10, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8, 4), 0x0);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_57C494;
    }
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->eax, x86::mem(ts->ebp + 0x14, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	push(mv, &ts->esp, ts->edi);

loc_57C413:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ebx, x86::mem(ts->ecx, 4));
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x4, 4));
	mov(mv, &ts->esi, x86::mem(ts->ebx + 0x48, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x4C, 4));
	sub(&ts->esi, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ebx + 0x8, 4));
	add(&ts->esi, ts->edx);
	mov(&ts->edx, ts->ecx);
	shr(&ts->ecx, 0x2);
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->edx);
	and_(&ts->ecx, 0x3);
	movs(mv, x86::mem(ts->edi, 1), x86::mem(ts->esi, 1));
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x5C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57C466;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x68, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	if (ts->eflags.zero) {
        goto loc_57C45C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x64, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x60, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ecx);
	call(ts, mv, ts->eax);
	add(&ts->esp, 0xC);
	goto loc_57C466;

loc_57C45C:
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x60, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ecx);
	call(ts, mv, ts->eax);
	add(&ts->esp, 0x8);

loc_57C466:
	mov(mv, &ts->edx, x86::mem(0x8650F0, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edx);
	game::sub_43F920(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x10, 4));
	add(&ts->esp, 0x8);
	inc(&ts->eax);
	add(&ts->edx, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_57C413;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);

loc_57C494:
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x4);
}

void sub_57C4A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77889B);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);

loc_57C4B7:
	cmp(mv, &ts->eflags, x86::mem(0x865108, 4), 0x4);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_57C4E1;
    }
	mov(mv, &ts->esi, x86::mem(0x866584, 4));
	mov(&ts->ecx, 0x866584);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57C4E1;
    }

loc_57C4D4:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_57C539;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_57C4D4;
    }

loc_57C4E1:
	mov(mv, &ts->edx, x86::mem(0x865104, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_440E50(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_57C57D;
    }
	mov(mv, &ts->ecx, x86::mem(0x865108, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	inc(&ts->ecx);
	mov(mv, x86::mem(0x865108, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->eax);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x8, 4), 0x0);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ecx);
	game::sub_43DBD0(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->eax, ts->esi);
	goto loc_57C57F;

loc_57C539:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x865108, 4));
	dec(&ts->ecx);
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(0x865108, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, 0x64);
	push(mv, &ts->esp, ts->eax);
	game::sub_6F7790(ts, mv);
	push(mv, &ts->esp, 0x5755D0);
	push(mv, &ts->esp, ts->eax);
	game::sub_6F76F2(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x865104, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ecx);
	game::sub_43F920(ts, mv);
	add(&ts->esp, 0x1C);
	goto loc_57C4B7;

loc_57C57D:
	xor_(&ts->eax, ts->eax);

loc_57C57F:
	mov(mv, &ts->ecx, x86::mem(0x866588, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(0x866588, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->eax, 4), 0x866584);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

unknown_libname_71:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_5753A0(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

SEH_57CA10:
	mov(&ts->eax, 0x7E3EF4);
	goto ___CxxFrameHandler;
}

void sub_57C5B0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0xD8);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0xE4, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x1C, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	game::sub_43DBD0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xF8, 4));
	xor_(&ts->ebx, ts->ebx);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, 0x6);
	mov(mv, x86::mem(ts->esi, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_57C602;
    }
	push(mv, &ts->esp, ts->ebx);
	game::sub_57B5D0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xF4, 4));
	add(&ts->esp, 0x4);

loc_57C602:
	cmp(&ts->eflags, ts->eax, 0x2);
	if (!ts->eflags.zero) {
        goto loc_57C62A;
    }
	push(mv, &ts->esp, 0x64);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ebp);
	game::sub_6F8710(ts, mv);
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_57C62A;
    }
	push(mv, &ts->esp, 0x64);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xF8, 4), ts->ebx);
	game::sub_6F879A(ts, mv);
	add(&ts->esp, 0x8);

loc_57C62A:
	push(mv, &ts->esp, ts->ebp);
	game::sub_5798F0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0xF0, 4));
	if (ts->eflags.zero) {
        goto loc_57C657;
    }
	cmp(&ts->eflags, ts->ebx, 0x1);
	if (!ts->eflags.zero) {
        goto loc_57C657;
    }
	inc(mv, x86::mem(ts->eax + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x10, 4));
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->edx);
	goto loc_57C771;

loc_57C657:
	push(mv, &ts->esp, ts->edi);
	game::sub_579870(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57C678;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_579870(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xC, 4));
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	goto loc_57C774;

loc_57C678:
	cmp(&ts->eflags, ts->ebx, 0x1);
	if (!ts->eflags.zero) {
        goto loc_57C6F4;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	game::sub_6F7C54(ts, mv);
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_57C69C;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);

loc_57C69C:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_57C71F;
    }
	mov(mv, &ts->al, x86::mem(0x80057F, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_57C71F;
    }
	push(mv, &ts->esp, ts->ebp);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x2C, 1), ts->al);
	mov(mv, x86::mem(ts->esp + 0x2D, 1), 0x3A);
	mov(mv, x86::mem(ts->esp + 0x2E, 1), 0x5C);
	mov(mv, x86::mem(ts->esp + 0x2F, 1), 0x0);
	game::sub_43DDA0(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x64);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x34, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	game::sub_6F7C1B(ts, mv);
	mov(&ts->edi, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_6F75DD(ts, mv);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebx, ts->eax);
	game::sub_6F76E9(ts, mv);
	add(&ts->esp, 0x24);
	goto loc_57C717;

loc_57C6F4:
	game::sub_43BDF0(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x64);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	game::sub_6F7C1B(ts, mv);
	mov(&ts->edi, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_6F75DD(ts, mv);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebx, ts->eax);
	game::sub_6F76E9(ts, mv);
	add(&ts->esp, 0x18);

loc_57C717:
	cmp(&ts->eflags, ts->ebx, 0x1);
	if (!ts->eflags.zero) {
        goto loc_57C71F;
    }
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->eax);

loc_57C71F:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57C774;
    }
	game::sub_43BDF0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x64);
	push(mv, &ts->esp, ts->ecx);
	game::sub_6F7861(ts, mv);
	mov(&ts->edi, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_6F75DD(ts, mv);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebx, ts->eax);
	game::sub_6F76E9(ts, mv);
	add(&ts->esp, 0x14);
	cmp(&ts->eflags, ts->ebx, 0x1);
	if (!ts->eflags.zero) {
        goto loc_57C774;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0xF0, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_57C774;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ebp);
	game::sub_57C4A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	add(&ts->esp, 0xC);
	inc(&ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ecx);

loc_57C771:
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->eax);

loc_57C774:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_57C788;
    }
	test(mv, &ts->eflags, x86::mem(ts->esp + 0xF0, 1), 0x5);
	if (!ts->eflags.zero) {
        goto loc_57C788;
    }
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->eax);

loc_57C788:
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0xD8);
	retn(mv, &ts->esp, 0x8);
}

void sub_57C7A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebx, ts->ecx);
	game::sub_43BDF0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x8, 4));
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x4, 4));
	lea(mv, &ts->edx, x86::mem(ts->ecx + (ts->ebp), 4));
	cmp(&ts->eflags, ts->edx, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_57C7C0;
    }
	sub(&ts->eax, ts->ecx);
	mov(&ts->ebp, ts->eax);

loc_57C7C0:
	lea(mv, &ts->eax, x86::mem(ts->ebx + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_579870(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57C812;
    }
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x10, 4));
	mov(mv, &ts->edi, x86::mem(ts->ebx + 0x8, 4));
	mov(&ts->ecx, ts->ebp);
	mov(&ts->eax, ts->ecx);
	add(&ts->esi, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));
	shr(&ts->ecx, 0x2);
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	and_(&ts->ecx, 0x3);
	movs(mv, x86::mem(ts->edi, 1), x86::mem(ts->esi, 1));
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x8, 4));
	add(&ts->edx, ts->ebp);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ebx + 0x8, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_57C911;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	call(ts, mv, ts->eax);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_57C812:
	mov(&ts->ecx, 0x864EFC);
	game::sub_6F55DD(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x865104, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_440E50(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	xor_(&ts->edi, ts->edi);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_57C85C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x8, 4));
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ebp);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->edi);
	mov(&ts->esi, ts->eax);
	goto loc_57C85E;

loc_57C85C:
	xor_(&ts->esi, ts->esi);

loc_57C85E:
	mov(mv, &ts->eax, x86::mem(0x8652F4, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	mov(mv, x86::mem(0x8652F4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi, 4), 0x8652F0);
	inc(mv, x86::mem(0x865110, 4));
	inc(mv, x86::mem(ts->ebx + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0xC, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x64);
	if (!ts->eflags.zero) {
        goto loc_57C898;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebx, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->ebx + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6F7C1B(ts, mv);
	add(&ts->esp, 0x10);
	goto loc_57C8A7;

loc_57C898:
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x8, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_6F77BC(ts, mv);
	add(&ts->esp, 0x18);

loc_57C8A7:
	mov(&ts->edi, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x20, 4), ts->edi);
	add(mv, x86::mem(ts->ebx + 0x8, 4), ts->ebp);
	mov(&ts->ecx, 0x864EFC);
	game::sub_6F55E8(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_57C903;
    }
	push(mv, &ts->esp, 0x57B800);
	push(mv, &ts->esp, ts->edi);
	game::sub_6F76F2(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0xC, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57C911;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x10, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_57C911;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ebx, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_57C911;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->ebx + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_57C4A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	inc(&ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ecx);
	pop(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(ts->ebx + 0x10, 4), ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_57C903:
	push(mv, &ts->esp, 0x579B20);
	push(mv, &ts->esp, ts->edi);
	game::sub_6F76F2(ts, mv);
	add(&ts->esp, 0x8);

loc_57C911:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);
}

void sub_57C920(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->ecx, 0x864EFC);
	game::sub_6F55DD(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x865190, 4));
	cmp(&ts->eflags, ts->eax, 0x865190);
	if (ts->eflags.zero) {
        goto loc_57CA00;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_57C940:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x8, 4));
	dec(mv, x86::mem(ts->esi + 0x18, 4));
	dec(mv, x86::mem(0x865110, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	xor_(&ts->bl, ts->bl);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57C96A;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_57C96A;
    }
	mov(&ts->bl, 0x1);

loc_57C96A:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x18, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57C990;
    }
	mov(&ts->ecx, 0x864EFC);
	game::sub_6F55E8(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	call(ts, mv, x86::mem(ts->edi + 0x18, 4));
	add(&ts->esp, 0x8);
	mov(&ts->ecx, 0x864EFC);
	game::sub_6F55DD(ts, mv);

loc_57C990:
	mov(mv, &ts->ecx, x86::mem(0x865104, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ecx);
	game::sub_43F920(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->bl, ts->bl);
	if (ts->eflags.zero) {
        goto loc_57C9ED;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_57C9DD;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57C9B7;
    }
	dec(mv, x86::mem(ts->eax + 0x8, 4));
	goto loc_57C9D6;

loc_57C9B7:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57C9D6;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x64);
	push(mv, &ts->esp, ts->eax);
	game::sub_6F7790(ts, mv);
	push(mv, &ts->esp, 0x5755D0);
	push(mv, &ts->esp, ts->eax);
	game::sub_6F76F2(ts, mv);
	add(&ts->esp, 0x14);

loc_57C9D6:
	mov(mv, x86::mem(ts->esi + 0x4, 4), 0xFFFFFFFF);

loc_57C9DD:
	mov(mv, &ts->edx, x86::mem(0x865104, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edx);
	game::sub_43F920(ts, mv);
	add(&ts->esp, 0x8);

loc_57C9ED:
	mov(mv, &ts->eax, x86::mem(0x865190, 4));
	cmp(&ts->eflags, ts->eax, 0x865190);
	if (!ts->eflags.zero) {
        goto loc_57C940;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);

loc_57CA00:
	mov(&ts->ecx, 0x864EFC);
	goto sub_6F55E8;
}

void sub_57CA10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77889B);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->esi);
	game::sub_43DBB0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0xC8);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_57CAAB;
    }
	mov(mv, &ts->eax, x86::mem(0x865104, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_57CA69;
    }
	mov(&ts->ecx, 0x864EFC);
	game::sub_6F55C7(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7A0468);
	push(mv, &ts->esp, 0x40);
	push(mv, &ts->esp, 0xF0);
	game::sub_440DF0(ts, mv);
	add(&ts->esp, 0x10);
	mov(mv, x86::mem(0x865104, 4), ts->eax);

loc_57CA69:
	push(mv, &ts->esp, ts->eax);
	game::sub_440E50(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_57CA91;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->eax);
	game::sub_57C5B0(ts, mv);
	goto loc_57CA93;

loc_57CA91:
	xor_(&ts->eax, ts->eax);

loc_57CA93:
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_57CAAD;
    }
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->eax);
	game::sub_579B90(ts, mv);

loc_57CAAB:
	xor_(&ts->eax, ts->eax);

loc_57CAAD:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

unknown_libname_71:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_5753A0(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

SEH_57CA10:
	mov(&ts->eax, 0x7E3EF4);
	goto ___CxxFrameHandler;
}

void sub_57CAC0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	game::sub_57CA10(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57CAFA;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x4, 4));
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_57CAEC;
    }
	mov(mv, x86::mem(ts->eax + 0x14, 4), 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x1, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_57CAEC:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->eax);
	game::sub_579B90(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x1, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_57CAFA:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);
}

void sub_57CB00(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x6);
	push(mv, &ts->esp, ts->eax);
	game::sub_57CA10(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_57CB63;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, 0x64);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_6F876C(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	add(&ts->edx, ts->edi);
	add(&ts->esp, 0x14);
	mov(&ts->eax, ts->edx);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->edx);
	pop(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_57CB4A;
    }
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);

loc_57CB4A:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_57CB5A;
    }
	mov(mv, x86::mem(ts->esi + 0x14, 4), 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_57CB5A:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_579B90(ts, mv);

loc_57CB63:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_57CB70(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x2);
	push(mv, &ts->esp, ts->eax);
	game::sub_57CA10(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_57CBD3;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, 0x64);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_6F876C(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	add(&ts->edx, ts->edi);
	add(&ts->esp, 0x14);
	mov(&ts->eax, ts->edx);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->edx);
	pop(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_57CBBA;
    }
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);

loc_57CBBA:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_57CBCA;
    }
	mov(mv, x86::mem(ts->esi + 0x14, 4), 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_57CBCA:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_579B90(ts, mv);

loc_57CBD3:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_57CBE0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, 0x7845D8);
	mov(&ts->ebp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_578CE0(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x40, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	lea(mv, &ts->eax, x86::mem(ts->ebp + 0x2C, 4));
	if (ts->eflags.zero) {
        goto loc_57CC44;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1DC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1E4, 4));
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->ecx + 0x4, 4));
	cmp(&ts->eflags, ts->edi, ts->edx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_57CC3B;
    }
	mov(mv, &ts->dl, x86::mem(ts->eax, 1));
	mov(mv, x86::mem(ts->ecx + (ts->esi) + 0x1E8, 1), ts->dl);
	mov(mv, &ts->dl, x86::mem(ts->eax + 0x1, 1));
	mov(mv, x86::mem(ts->ecx + (ts->esi) + 0x1E9, 1), ts->dl);
	mov(mv, &ts->dl, x86::mem(ts->eax + 0x2, 1));
	mov(mv, x86::mem(ts->ecx + (ts->esi) + 0x1EA, 1), ts->dl);
	mov(mv, &ts->al, x86::mem(ts->eax + 0x3, 1));
	mov(mv, x86::mem(ts->ecx + (ts->esi) + 0x1EB, 1), ts->al);

loc_57CC3B:
	mov(mv, x86::mem(ts->esi + 0x1DC, 4), ts->edi);
	pop(mv, &ts->esp, ts->edi);
	goto loc_57CC99;

loc_57CC44:
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x41, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_57CC5B;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_5715B0(ts, mv);
	goto loc_57CC99;

loc_57CC5B:
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x42, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_57CC99;
    }
	movzx(mv, &ts->ecx, x86::mem(ts->eax, 1));
	movzx(mv, &ts->edx, x86::mem(ts->eax + 0x1, 1));
	sub(&ts->ecx, 0x21);
	imul(&ts->ecx, ts->ecx, 0x21);
	add(&ts->edx, ts->ecx);
	movzx(mv, &ts->ecx, x86::mem(ts->eax + 0x2, 1));
	imul(&ts->edx, ts->edx, 0x21);
	movzx(mv, &ts->eax, x86::mem(ts->eax + 0x3, 1));
	add(&ts->ecx, ts->edx);
	imul(&ts->ecx, ts->ecx, 0x21);
	push(mv, &ts->esp, 0x0);
	add(&ts->eax, ts->ecx);
	push(mv, &ts->esp, 0x2);
	push(mv, &ts->esp, 0x2);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	game::sub_571550(ts, mv);

loc_57CC99:
	movzx(mv, &ts->eax, x86::mem(ts->ebp + 0x5, 1));
	mov(mv, &ts->dl, x86::mem(ts->esi + 0x40, 1));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x30, 4));
	shl(&ts->eax, 0x2);
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.zero) {
        goto loc_57CCB1;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	goto loc_57CCE6;

loc_57CCB1:
	mov(mv, &ts->dl, x86::mem(ts->esi + 0x41, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.zero) {
        goto loc_57CCC6;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_5715B0(ts, mv);
	goto loc_57CCED;

loc_57CCC6:
	mov(mv, &ts->dl, x86::mem(ts->esi + 0x42, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.zero) {
        goto loc_57CCED;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_571520(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x2);
	push(mv, &ts->esp, 0x2);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	push(mv, &ts->esp, ts->edx);

loc_57CCE6:
	mov(&ts->ecx, ts->esi);
	game::sub_571550(ts, mv);

loc_57CCED:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->ebp);
	game::sub_57B980(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_578D90(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_57CD10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x7A0940);
	mov(&ts->edi, ts->ecx);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_578CE0(ts, mv);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	game::sub_57B9F0(ts, mv);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x28, 4));
	game::sub_57B9F0(ts, mv);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x50, 4));
	game::sub_57B9F0(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x78, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_571770(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x7C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_571770(ts, mv);
	add(&ts->edi, 0x80);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_571770(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_578D90(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_57CD70(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x7A0968);
	game::sub_57CA10(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_57CDD5;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x4, 4));
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_57CD99;
    }
	mov(mv, x86::mem(ts->eax + 0x14, 4), 0x1);
	goto loc_57CDA2;

loc_57CD99:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->eax);
	game::sub_579B90(ts, mv);

loc_57CDA2:
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x1, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero) {
        goto locret_57CDD5;
    }
	push(mv, &ts->esp, 0x7A0958);
	push(mv, &ts->esp, 0x7A0968);
	game::sub_57B640(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_57CDD5;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_6F7266(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x7A0460);
	game::sub_6F6E7A(ts, mv);
	add(&ts->esp, 0xC);

locret_57CDD5:
	retn(mv, &ts->esp);
}

void sub_57CDE0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ebp, x86::mem(ts->esi + 0x1C, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(ts->esi + 0x8, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->eax);
	game::sub_43DBD0(ts, mv);
	xor_(&ts->ebx, ts->ebx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x94, 4));
	xor_(&ts->eax, ts->eax);
	mov(&ts->edi, ts->edx);
	mov(mv, x86::mem(ts->esi + 0x58, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0xC8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xCC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xE8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xE0, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xE4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xEC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xD0, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xD4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xC4, 4), 0x2000);
	mov(&ts->ecx, 0xC);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, 0x2F);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_43DC00(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(ts->esi + 0x58, 1), ts->bl);
	game::sub_57CA10(ts, mv);
	add(&ts->esp, 0x20);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_57CEAF;
    }
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x4, 4));
	xor_(&ts->ecx, ts->ecx);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	setl(ts->eflags, &ts->cl);
	dec(&ts->ecx);
	and_(&ts->edi, ts->ecx);
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x18, 4), ts->ebx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_57CEA2;
    }
	mov(mv, x86::mem(ts->eax + 0x14, 4), 0x1);
	mov(&ts->eax, ts->edi);
	goto loc_57CEB2;

loc_57CEA2:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->eax);
	game::sub_579B90(ts, mv);
	mov(&ts->eax, ts->edi);
	goto loc_57CEB2;

loc_57CEAF:
	or_(&ts->eax, 0xFFFFFFFF);

loc_57CEB2:
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xDC, 4), ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_57CEC2;
    }
	mov(mv, x86::mem(ts->esi + 0xDC, 4), ts->ebx);

loc_57CEC2:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xDC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xD8, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_57CEDD;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_57CEDD;
    }
	mov(mv, x86::mem(ts->esi + 0xDC, 4), ts->eax);

loc_57CEDD:
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x14);
}

void sub_57CEF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7788BB);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(0x864F78, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_440E50(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_57CF46;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_57CDE0(ts, mv);
	goto loc_57CF48;

loc_57CF46:
	xor_(&ts->eax, ts->eax);

loc_57CF48:
	mov(mv, &ts->ecx, x86::mem(0x8651A8, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(0x8651A8, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(ts->eax, 4), 0x8651A4);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

unknown_libname_72:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_570AC0(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

SEH_57CEF0:
	mov(&ts->eax, 0x7E3F18);
	goto ___CxxFrameHandler;
}

void sub_57CF70(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_57CEF0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x2C, 4));
	add(&ts->esp, 0x14);
	mov(&ts->esi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_57BD70(ts, mv);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_57CFB0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_57CFBF;
    }
	mov(&ts->eax, 0x1);

loc_57CFBF:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_57CFCA;
    }
	or_(&ts->eax, 0x6);

loc_57CFCA:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_57CEF0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x30, 4));
	add(&ts->esp, 0x14);
	mov(&ts->esi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_57BD70(ts, mv);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_57D000(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->esi);
	xor_(&ts->esi, ts->esi);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57D02C;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x1C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_57D02C;
    }
	mov(mv, &ts->eax, x86::mem(0x7FB724, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->ecx + 0xD0, 4));
	if (ts->eflags.zero) {
        goto loc_57D02C;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_571850(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_57D02C;
    }
	mov(&ts->esi, 0x1);

loc_57D02C:
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_57D038;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_57D04B;
    }

loc_57D038:
	mov(mv, &ts->eax, x86::mem(0x7FB724, 4));
	push(mv, &ts->esp, ts->edi);
	cdq(&ts->eax, ts->edx);
	mov(&ts->edi, 0x64);
	idiv(&ts->eax, ts->edi);
	pop(mv, &ts->esp, ts->edi);
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_57D04F;
    }

loc_57D04B:
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_57D055;
    }

loc_57D04F:
	pop(mv, &ts->esp, ts->esi);
	goto sub_57C180;

loc_57D055:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_57D060(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	mov(mv, &ts->eax, x86::mem(0x86518C, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x84, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xBC, 4));
	sub(&ts->eax, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->ecx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC4, 4));
	fcompp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.parity) {
        goto loc_57D187;
    }
	push(mv, &ts->esp, ts->edi);
	goto loc_57D0B0;

loc_57D0B0:
	cmp(mv, &ts->eflags, ts->ecx, x86::mem(ts->esi + 0xB0, 4));
	mov(&ts->ecx, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_57D172;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC4, 4));
	xor_(&ts->edi, ts->edi);
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x79544C);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC4, 4));
	game::sub_578FD0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57D129;
    }
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_57D0E0:
	inc(&ts->edi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x79544C);
	mov(&ts->ecx, ts->esi);
	game::sub_578FD0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57D118;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x94, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x90, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	dec(mv, x86::mem(ts->esi + 0xBC, 4));

loc_57D118:
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x79544C);
	mov(&ts->ecx, ts->esi);
	game::sub_578FD0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_57D0E0;
    }

loc_57D129:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xBC, 4));
	cmp(mv, &ts->eflags, ts->ecx, x86::mem(ts->esi + 0xB0, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_57D186;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x84, 4));
	mov(mv, &ts->edx, x86::mem(0x86518C, 4));
	sub(&ts->edx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xBC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC4, 4));
	fcompp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.parity) {
        goto loc_57D0B0;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);

loc_57D172:
	push(mv, &ts->esp, 0x79544C);
	game::sub_57C080(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57D186;
    }
	inc(mv, x86::mem(ts->esi + 0xBC, 4));

loc_57D186:
	pop(mv, &ts->esp, ts->edi);

loc_57D187:
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_57D190(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, 0x86519C);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x98, 4));
	game::sub_43BEB0(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7A08C0);
	mov(&ts->ecx, ts->esi);
	game::sub_578FD0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57D1BD;
    }
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_57C1D0(ts, mv);

loc_57D1BD:
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x78, 4), 0xFFFFFFFF);
	game::sub_57AAD0(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7A082C);
	mov(&ts->ecx, ts->esi);
	game::sub_578FD0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57D1E5;
    }
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_57C1D0(ts, mv);

loc_57D1E5:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_57D1F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	sub(&ts->esp, 0x48);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(&ts->ecx, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_57D202;
    }
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_57D204;
    }

loc_57D202:
	xor_(&ts->ecx, ts->ecx);

loc_57D204:
	mov(mv, &ts->ecx, x86::mem(0x7FAB40, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_57D237;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_57D219;
    }
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_57D21B;
    }

loc_57D219:
	xor_(&ts->eax, ts->eax);

loc_57D21B:
	mov(mv, &ts->edx, x86::mem(0x7FAB40, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, 0x7A03F4);
	push(mv, &ts->esp, ts->eax);
	game::sub_4400D0(ts, mv);
	add(&ts->esp, 0xC);
	goto loc_57D23C;

loc_57D237:
	mov(mv, x86::mem(ts->esp + 0x8, 1), 0x0);

loc_57D23C:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x50, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8650B8, 4));
	game::sub_578FD0(ts, mv);
	mov(&ts->ebx, ts->eax);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(&ts->ebp, 0x1);
	if (ts->eflags.zero) {
        goto loc_57D3E0;
    }
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);

loc_57D261:
	mov(mv, &ts->esi, x86::mem(ts->ebx + 0x1E0, 4));
	sub(mv, &ts->esi, x86::mem(ts->ebx + 0x1E4, 4));
	add(&ts->esi, 0x9EB);
	push(mv, &ts->esp, 0x1);
	shr(&ts->esi, 0x2);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, 0x2);
	shl(&ts->esi, 0x2);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x39101);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->esi);
	game::sub_57CA10(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_57D326;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi + 0xC, 4));
	push(mv, &ts->esp, 0x64);
	push(mv, &ts->esp, 0x8);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_6F876C(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	add(&ts->edx, 0x8);
	mov(&ts->eax, ts->edx);
	add(&ts->esp, 0x14);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->edi + 0x8, 4), ts->edx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_57D2CE;
    }
	mov(mv, x86::mem(ts->edi + 0x4, 4), ts->eax);

loc_57D2CE:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x18, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_57D2DE;
    }
	mov(mv, x86::mem(ts->edi + 0x14, 4), 0x1);
	goto loc_57D326;

loc_57D2DE:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_57D317;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x10, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57D2F1;
    }
	dec(mv, x86::mem(ts->eax + 0x8, 4));
	goto loc_57D310;

loc_57D2F1:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57D310;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x64);
	push(mv, &ts->esp, ts->eax);
	game::sub_6F7790(ts, mv);
	push(mv, &ts->esp, 0x5755D0);
	push(mv, &ts->esp, ts->eax);
	game::sub_6F76F2(ts, mv);
	add(&ts->esp, 0x14);

loc_57D310:
	mov(mv, x86::mem(ts->edi + 0x4, 4), 0xFFFFFFFF);

loc_57D317:
	mov(mv, &ts->eax, x86::mem(0x865104, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_43F920(ts, mv);
	add(&ts->esp, 0x8);

loc_57D326:
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, 0x2);
	push(mv, &ts->esp, ts->ecx);
	game::sub_57CA10(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_57D3C2;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0xC, 4));
	push(mv, &ts->esp, 0x64);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_6F876C(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	add(&ts->edx, ts->esi);
	mov(&ts->eax, ts->edx);
	add(&ts->esp, 0x14);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->edi + 0x8, 4), ts->edx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_57D369;
    }
	mov(mv, x86::mem(ts->edi + 0x4, 4), ts->eax);

loc_57D369:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x18, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_57D379;
    }
	mov(mv, x86::mem(ts->edi + 0x14, 4), 0x1);
	goto loc_57D3C2;

loc_57D379:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_57D3B2;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x10, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57D38C;
    }
	dec(mv, x86::mem(ts->eax + 0x8, 4));
	goto loc_57D3AB;

loc_57D38C:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57D3AB;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x64);
	push(mv, &ts->esp, ts->eax);
	game::sub_6F7790(ts, mv);
	push(mv, &ts->esp, 0x5755D0);
	push(mv, &ts->esp, ts->eax);
	game::sub_6F76F2(ts, mv);
	add(&ts->esp, 0x14);

loc_57D3AB:
	mov(mv, x86::mem(ts->edi + 0x4, 4), 0xFFFFFFFF);

loc_57D3B2:
	mov(mv, &ts->ecx, x86::mem(0x865104, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ecx);
	game::sub_43F920(ts, mv);
	add(&ts->esp, 0x8);

loc_57D3C2:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x60, 4));
	mov(mv, &ts->ecx, x86::mem(0x8650B8, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edx);
	game::sub_578FD0(ts, mv);
	mov(&ts->ebx, ts->eax);
	inc(&ts->ebp);
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_57D261;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);

loc_57D3E0:
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x48);
	retn(mv, &ts->esp, 0x8);
}

void sub_57D3F0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0xA8);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->ebp, ts->ebp);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8650B8, 4));
	push(mv, &ts->esp, 0x7A0844);
	game::sub_578FD0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8650B8, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x7A08C0);
	mov(&ts->edi, ts->eax);
	game::sub_578FD0(ts, mv);
	cmp(&ts->eflags, ts->edi, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_57D57A;
    }
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_57D57A;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x18, 4), ts->ebp);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_57D439;
    }
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->ebp);

loc_57D439:
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x18, 4));
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_571970(ts, mv);
	push(mv, &ts->esp, 0x8);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->ebp);
	game::sub_57CB00(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x14);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x74, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x89E7A0, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x84, 4));
	push(mv, &ts->esp, 0x3F);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x7C, 4), 0x8);
	mov(mv, x86::mem(ts->esp + 0x80, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x84, 4), 0x1);
	mov(mv, x86::mem(ts->esp + 0x88, 4), ts->ebp);
	game::sub_43F990(ts, mv);
	push(mv, &ts->esp, 0x8);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x38, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x44, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x40, 4), 0x39100);
	mov(mv, x86::mem(ts->esp + 0x44, 4), 0x50);
	game::sub_57CB70(ts, mv);
	push(mv, &ts->esp, 0x50);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x50, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_57CB70(ts, mv);
	add(&ts->esp, 0x2C);
	push(mv, &ts->esp, 0x7A0844);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	game::sub_57D1F0(ts, mv);
	push(mv, &ts->esp, 0x7A08C0);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	game::sub_57D1F0(ts, mv);
	push(mv, &ts->esp, 0x7A0934);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	game::sub_57D1F0(ts, mv);
	push(mv, &ts->esp, 0x7A0928);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	game::sub_57D1F0(ts, mv);
	push(mv, &ts->esp, 0x7A091C);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	game::sub_57D1F0(ts, mv);
	push(mv, &ts->esp, 0x7A0910);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	game::sub_57D1F0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8650B8, 4));
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x8C, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x8, 4));
	cdq(&ts->eax, ts->edx);
	and_(&ts->edx, 0x7);
	add(&ts->eax, ts->edx);
	mov(&ts->esi, ts->eax);
	sar(&ts->esi, 0x3);
	add(&ts->esi, 0x4);
	shr(&ts->esi, 0x2);
	shl(&ts->esi, 0x2);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x39102);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->esi);
	push(mv, &ts->esp, 0x8);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_57CB70(ts, mv);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x38, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_57CB70(ts, mv);
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->ebx);

loc_57D57A:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0xA8);
	retn(mv, &ts->esp);
}

void sub_57D590(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	xor_(&ts->esi, ts->esi);

loc_57D598:
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->esi);
	game::sub_57C330(ts, mv);
	add(&ts->esp, 0x8);
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, 0x2);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_57D598;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_57D5B0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0xC);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->esi);
	add(&ts->eax, 0x7);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x24, 4));
	sar(&ts->eax, 0x3);
	mov(&ts->esi, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->edi + (ts->edi*2), 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	movsx(mv, &ts->eax, x86::mem(0x7FB440, 1));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_57D5FE;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x20, 4));
	inc(&ts->edx);
	mov(&ts->ecx, ts->edx);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x20, 4), ts->edx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_57D605;
    }
	push(mv, &ts->esp, 0x1);
	game::sub_6F5889(ts, mv);
	add(&ts->esp, 0x4);
	goto loc_57D605;

loc_57D5FE:
	mov(mv, x86::mem(ts->esi + 0x20, 4), 0x0);

loc_57D605:
	cmp(mv, &ts->eflags, ts->ebx, x86::mem(ts->esi + 0x1C, 4));
	if (!ts->eflags.zero) {
        goto loc_57D60F;
    }
	cmp(mv, &ts->eflags, ts->edi, x86::mem(ts->esi + 0x14, 4));
	if (ts->eflags.zero) {
        goto loc_57D615;
    }

loc_57D60F:
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->edi);

loc_57D615:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_573020(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	mov(&ts->edx, ts->eax);
	sub(&ts->edx, ts->ecx);
	sub(&ts->ecx, ts->eax);
	add(&ts->ecx, 0x4000);
	cmp(&ts->eflags, ts->ecx, 0x100);
	mov(mv, x86::mem(ts->esi, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_57D667;
    }
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_57D667;
    }
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x128, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x24, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_57CB70(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	add(&ts->esp, 0xC);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), 0x0);

loc_57D667:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp, 0xC);
}

void sub_57D670(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x8650D4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_57D693;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8650DC, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_57D5B0(ts, mv);

locret_57D693:
	retn(mv, &ts->esp);
}

void sub_57D6A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	xor_(&ts->esi, ts->esi);
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_57D6D9;
    }
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x1C, 4));

loc_57D6B6:
	mov(mv, &ts->eax, x86::mem(0x8650D4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57D6D2;
    }
	movsx(mv, &ts->eax, x86::mem(ts->esi + (ts->ebx), 1));
	mov(mv, &ts->ecx, x86::mem(0x8650DC, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_57D5B0(ts, mv);

loc_57D6D2:
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, ts->ebp);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_57D6B6;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);

loc_57D6D9:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_57D6E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7788FE);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(0x8650C8, 4));
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x108);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57D805;
    }
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, 0x7A09D0);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DBD0(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esp + 0xC, 1));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_57D7A8;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_57CAC0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57D7A8;
    }
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edx);
	game::sub_57CA10(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_57D900(ts, mv);
	push(mv, &ts->esp, 0x4128);
	mov(&ts->esi, ts->eax);
	game::_malloc(ts, mv);
	add(&ts->esp, 0x14);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x114, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_57D781;
    }
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_572FD0(ts, mv);
	goto loc_57D783;

loc_57D781:
	xor_(&ts->eax, ts->eax);

loc_57D783:
	mov(mv, x86::mem(0x8650D8, 4), ts->eax);
	mov(mv, x86::mem(0x8650D0, 4), 0x1);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x108, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x114);
	retn(mv, &ts->esp);

loc_57D7A8:
	push(mv, &ts->esp, 0x4128);
	game::_malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x110, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_57D7D8;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7A09BC);
	mov(&ts->ecx, ts->eax);
	game::sub_572FD0(ts, mv);
	goto loc_57D7DA;

loc_57D7D8:
	xor_(&ts->eax, ts->eax);

loc_57D7DA:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7A09BC);
	mov(mv, x86::mem(ts->esp + 0x11C, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(0x8650DC, 4), ts->eax);
	game::sub_57CB00(ts, mv);
	add(&ts->esp, 0xC);
	mov(mv, x86::mem(0x8650D4, 4), 0x1);

loc_57D805:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x108, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x114);
	retn(mv, &ts->esp);

loc_7788D0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7A09A0);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7788E7:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7A0990);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_57D6E0:
	mov(&ts->eax, 0x7E3F44);
	goto ___CxxFrameHandler;
}

void sub_57D820(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	game::sub_43DBB0(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x86663C, 4));
	add(&ts->edx, ts->eax);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x40000);
	mov(mv, x86::mem(0x86663C, 4), ts->edx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_57D850;
    }
	push(mv, &ts->esp, 0xD);
	inc(&ts->eax);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_57D6A0(ts, mv);
	add(&ts->esp, 0xC);

loc_57D850:
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_57D860(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x8650CC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_57D8B4;
    }
	mov(mv, &ts->eax, x86::mem(0x8650DC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57D8A5;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->eax + 0xC, 4));
	sub(&ts->ecx, ts->edx);
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(&ts->esi, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_57D8A3;
    }
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x128, 4));
	push(mv, &ts->esp, ts->ecx);
	add(&ts->eax, 0x24);
	push(mv, &ts->esp, ts->eax);
	game::sub_57CB70(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	add(&ts->esp, 0xC);
	mov(mv, x86::mem(ts->edi, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x4, 4), 0x0);

loc_57D8A3:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);

loc_57D8A5:
	mov(mv, x86::mem(0x8650CC, 4), 0x0);
	goto nullsub_1;

locret_57D8B4:
	retn(mv, &ts->esp);
}

void sub_57D8C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_57C3F0(ts, mv);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_57D8F4;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57D8E4;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_57D8E4:
	mov(mv, &ts->ecx, x86::mem(0x8650F0, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ecx);
	game::sub_43F920(ts, mv);
	add(&ts->esp, 0x8);

loc_57D8F4:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_57D900(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	game::sub_57CA10(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57D944;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	xor_(&ts->edx, ts->edx);
	test(&ts->eflags, ts->ecx, ts->ecx);
	setl(ts->eflags, &ts->dl);
	push(mv, &ts->esp, ts->esi);
	dec(&ts->edx);
	and_(&ts->edx, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(&ts->esi, ts->edx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_57D937;
    }
	mov(mv, x86::mem(ts->eax + 0x14, 4), 0x1);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_57D937:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->eax);
	game::sub_579B90(ts, mv);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_57D944:
	or_(&ts->eax, 0xFFFFFFFF);
	retn(mv, &ts->esp);
}

void sub_57D9B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_57D9D5;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_57D9D5;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_57C7A0(ts, mv);

loc_57D9D5:
	mov(mv, &ts->ecx, x86::mem(0x865110, 4));
	goto loc_57D9E0;

loc_57D9E0:
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_57D9F4;
    }
	game::sub_6F56BD(ts, mv);
	game::sub_57C920(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x865110, 4));

loc_57D9F4:
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_57DA01;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x18, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	goto loc_57DA03;

loc_57DA01:
	test(&ts->eflags, ts->ecx, ts->ecx);

loc_57DA03:
	setz(ts->eflags, &ts->al);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57D9E0;
    }
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_57DA10(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	game::sub_57CA10(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_57DA2A;
    }
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_57DA2A:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_57DA41;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	xor_(&ts->edx, ts->edx);
	test(&ts->eflags, ts->eax, ts->eax);
	setl(ts->eflags, &ts->dl);
	dec(&ts->edx);
	and_(&ts->eax, ts->edx);
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);

loc_57DA41:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	or_(&ts->ecx, 0x2000);
	xor_(&ts->edx, ts->edx);
	test(&ts->eflags, ts->eax, ts->eax);
	setl(ts->eflags, &ts->dl);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ecx);
	dec(&ts->edx);
	and_(&ts->eax, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_440820(ts, mv);
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	xor_(&ts->ecx, ts->ecx);
	test(&ts->eflags, ts->eax, ts->eax);
	setl(ts->eflags, &ts->cl);
	dec(&ts->ecx);
	and_(&ts->eax, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->esi);
	game::sub_57D9B0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	add(&ts->esp, 0x14);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_57DA8D;
    }
	mov(&ts->eax, ts->edi);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x14, 4), 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_57DA8D:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_579B90(ts, mv);
	mov(&ts->eax, ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_57DAA0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x20);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_57DABE;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x4, 4), 0x0);

loc_57DABE:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x2C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57DBBF;
    }
	mov(mv, &ts->ecx, x86::mem(0x7A0A00, 4));
	mov(mv, &ts->edx, x86::mem(0x7A0A04, 4));
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->ecx);
	mov(mv, &ts->cx, x86::mem(0x7A0A08, 2));
	mov(mv, x86::mem(ts->esp + 0x10, 2), ts->cx);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x13, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x17, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edx);
	mov(mv, &ts->dl, x86::mem(0x7A0A0A, 1));
	mov(mv, x86::mem(ts->esp + 0x1B, 4), ts->ecx);
	push(mv, &ts->esp, 0x783FE5);
	mov(mv, x86::mem(ts->esp + 0x16, 1), ts->dl);
	mov(mv, x86::mem(ts->esp + 0x23, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esp + 0x2B, 4), ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x33, 1), ts->cl);
	game::sub_43DBB0(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->esp + (ts->eax) + 0x14, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DDA0(ts, mv);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	game::sub_57DA10(ts, mv);
	add(&ts->esp, 0x18);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_57DBA6;
    }
	mov(mv, x86::mem(ts->esi, 4), 0x0);
	mov(mv, x86::mem(ts->esi + 0xC, 4), 0x0);
	mov(mv, x86::mem(ts->esi + 0x10, 4), 0x0);
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 2), 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_57DB6A;
    }
	mov(&ts->edi, ts->edi);

loc_57DB60:
	add(&ts->eax, 0x8);
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 2), 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_57DB60;
    }

loc_57DB6A:
	push(mv, &ts->esp, 0x7A09F0);
	game::sub_505450(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x34, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_57DBBF;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FFD0);
	push(mv, &ts->esp, 0x7A09E4);
	push(mv, &ts->esp, ts->edi);
	game::sub_5426C0(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp, 0x8);

loc_57DBA6:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FC44);
	push(mv, &ts->esp, 0x7A09E4);
	push(mv, &ts->esp, ts->edx);
	game::sub_5426C0(ts, mv);
	add(&ts->esp, 0x10);

loc_57DBBF:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp, 0x8);
}

void sub_57DBD0(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(0x864F24, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_57DC0B;
    }
	mov(mv, &ts->eax, x86::mem(0x866638, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_57DBFB;
    }
	push(mv, &ts->esp, 0x7A094C);
	game::sub_57CAC0(ts, mv);
	add(&ts->esp, 0x4);
	neg(&ts->eax);
	sbb(&ts->eax, ts->eax);
	add(&ts->eax, 0x2);
	mov(mv, x86::mem(0x866638, 4), ts->eax);

loc_57DBFB:
	cmp(&ts->eflags, ts->eax, 0x1);
	setz(ts->eflags, &ts->al);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_57DC0B;
    }
	mov(&ts->eax, 0x7A0A0C);
	retn(mv, &ts->esp);

loc_57DC0B:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*4), 4));
	mov(mv, &ts->eax, x86::mem(0x7FA750, 4));
	retn(mv, &ts->esp);
}

void sub_57DC20(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57D900(ts, mv);
	mov(&ts->edi, ts->eax);
	push(mv, &ts->esp, 0x1008);
	push(mv, &ts->esp, ts->edi);
	game::sub_440820(ts, mv);
	mov(&ts->esi, ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x57A500);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	game::sub_57B4A0(ts, mv);
	add(&ts->esp, 0x24);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_57DC60(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	inc(mv, x86::mem(ts->esi, 4));
	mov(mv, &ts->al, x86::mem(0x865498, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_57DC79;
    }
	mov(mv, x86::mem(0x865498, 1), 0x0);

loc_57DC79:
	mov(mv, &ts->ecx, x86::mem(0x865484, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	if (ts->eflags.zero) {
        goto loc_57DC8F;
    }
	mov(mv, x86::mem(0x865484, 4), 0x0);

loc_57DC8F:
	mov(mv, x86::mem(0x865498, 1), 0x1);
	mov(mv, x86::mem(0x86549C, 4), 0x7A0A8C);
	mov(mv, x86::mem(0x8654A0, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_57DD41;
    }
	mov(mv, &ts->eax, x86::mem(0x864FAC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_57DCBE;
    }
	game::sub_4C57C0(ts, mv);

loc_57DCBE:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x7A0A70);
	game::sub_57D900(ts, mv);
	mov(&ts->ebp, ts->eax);
	push(mv, &ts->esp, 0x1008);
	push(mv, &ts->esp, ts->ebp);
	game::sub_440820(ts, mv);
	mov(&ts->edi, ts->eax);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x57A500);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7A0A70);
	push(mv, &ts->esp, ts->edi);
	game::sub_57B4A0(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->edi);
	game::sub_4FF780(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x9);
	push(mv, &ts->esp, 0x3);
	push(mv, &ts->esp, 0x7A0A58);
	game::sub_57CEF0(ts, mv);
	add(&ts->esp, 0x48);
	mov(&ts->edi, ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x571140);
	mov(&ts->ecx, ts->edi);
	game::sub_57BD70(ts, mv);
	push(mv, &ts->esp, 0x3B);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->edi);
	push(mv, &ts->esp, 0x7A0A40);
	add(&ts->edi, 0x1C);
	push(mv, &ts->esp, ts->edi);
	game::sub_43DC00(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x10);
	goto nullsub_1;

loc_57DD41:
	cmp(&ts->eflags, ts->eax, 0x2);
	if (!ts->eflags.zero) {
        goto loc_57DD8B;
    }
	mov(mv, &ts->eax, x86::mem(0x883DAC, 4));
	add(&ts->eax, 0x40);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, 0x7A0A30);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4400D0(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, ts->edx);
	game::sub_57CEF0(ts, mv);
	add(&ts->esp, 0x20);
	mov(&ts->edi, ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x571140);
	mov(&ts->ecx, ts->edi);
	game::sub_57BD70(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_57DD8B:
	cmp(&ts->eflags, ts->eax, 0x3);
	if (!ts->eflags.zero) {
        goto loc_57DDA4;
    }
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x571140);
	game::sub_486EA0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_57DDA4:
	cmp(&ts->eflags, ts->eax, 0x4);
	if (!ts->eflags.zero) {
        goto loc_57DDD7;
    }
	mov(mv, &ts->eax, x86::mem(0x883DAC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x68, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, 0x7A0A18);
	push(mv, &ts->esp, ts->edi);
	game::sub_4400D0(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x571140);
	push(mv, &ts->esp, ts->edi);
	game::sub_4944D0(ts, mv);
	add(&ts->esp, 0x1C);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_57DDD7:
	cmp(&ts->eflags, ts->eax, 0x5);
	if (!ts->eflags.zero) {
        goto loc_57DDEA;
    }
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(0x865498, 1), 0x0);
	game::sub_57A580(ts, mv);

loc_57DDEA:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_57E100(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(ts->esp + 0x4, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_57E1B4;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x8, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_57E150;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_57E150;
    }
	mov(mv, &ts->ecx, x86::mem(0x8650B8, 4));
	push(mv, &ts->esp, 0x7A08C0);
	game::sub_57AD30(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8650B8, 4));
	push(mv, &ts->esp, 0x7A08C0);
	game::sub_57C080(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8650B8, 4));
	push(mv, &ts->esp, 0x7A0844);
	game::sub_57C080(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->eax);

loc_57E150:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x9, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_57E1B4;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57E1B4;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x28, 4));
	mov(mv, &ts->edx, x86::mem(0x86518C, 4));
	add(&ts->ecx, 0x2EE0);
	cmp(&ts->eflags, ts->edx, ts->ecx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_57E1B4;
    }
	mov(mv, &ts->ecx, x86::mem(0x8650B8, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->eax + 0x34, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_579050(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8650B8, 4));
	push(mv, &ts->esp, 0x7A0844);
	game::sub_57C080(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_57E1A2;
    }
	mov(mv, x86::mem(ts->eax + 0x2C, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x34, 4), ts->ebp);

loc_57E1A2:
	mov(mv, &ts->ecx, x86::mem(0x8650B8, 4));
	push(mv, &ts->esp, 0x7A0844);
	game::sub_57AC40(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);

loc_57E1B4:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57E1CD;
    }
	mov(mv, &ts->edx, x86::mem(0x86518C, 4));
	mov(mv, &ts->ecx, x86::mem(0x7FB724, 4));
	mov(mv, x86::mem(ts->eax + 0x2C, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0x34, 4), ts->ecx);

loc_57E1CD:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57E1E7;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_57D3F0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), 0x0);
	game::nullsub_1(ts, mv);

loc_57E1E7:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57E201;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_57AFE0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x20, 4), 0x0);
	game::nullsub_1(ts, mv);

loc_57E201:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_57E210(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x10, 4));
	sub(&ts->ebx, ts->eax);
	cmp(&ts->eflags, ts->ebx, 0x4000);
	mov(mv, x86::mem(ts->esi, 4), ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_57E22E;
    }
	mov(&ts->ebx, 0x4000);
	goto loc_57E232;

loc_57E22E:
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_57E295;
    }

loc_57E232:
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	game::sub_57CA10(ts, mv);
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_57E24E;
    }
	mov(mv, x86::mem(ts->edi + 0x8, 4), ts->eax);

loc_57E24E:
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x128, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	game::sub_57D9B0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_57E28A;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x18, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_57E281;
    }
	mov(mv, x86::mem(ts->edi + 0x14, 4), 0x1);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->eax);
	add(&ts->eax, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

loc_57E281:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->edi);
	game::sub_579B90(ts, mv);

loc_57E28A:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->eax);
	add(&ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->eax);
	pop(mv, &ts->esp, ts->edi);

loc_57E295:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_57E2A0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_57E2B0:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	mov(&ts->edx, ts->eax);
	sub(&ts->edx, ts->ecx);
	cmp(&ts->eflags, ts->edx, 0x100);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_57E2CE;
    }
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esi + 0x10, 4));
	if (ts->eflags.zero) {
        goto loc_57E2CE;
    }
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_57E210(ts, mv);

loc_57E2CE:
	mov(mv, &ts->edi, x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	mov(&ts->eax, ts->edi);
	sub(&ts->eax, ts->ecx);
	movzx(mv, &ts->ecx, x86::mem(ts->eax + (ts->esi) + 0x128, 1));
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->esi) + 0x128, 4));
	mov(&ts->eax, ts->ecx);
	and_(&ts->ecx, 0xF);
	shr(&ts->eax, 0x4);
	mov(&ts->ebx, ts->ecx);
	inc(&ts->edx);
	xor_(&ts->ebp, ts->ebp);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_57E311;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->edx) - 0x1, 4));
	mov(&ts->edx, ts->eax);

loc_57E301:
	movzx(mv, &ts->ebx, x86::mem(ts->ecx, 1));
	shl(&ts->ebp, 0x8);
	or_(&ts->ebp, ts->ebx);
	dec(&ts->ecx);
	dec(&ts->edx);
	if (!ts->eflags.zero) {
        goto loc_57E301;
    }
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x10, 4));

loc_57E311:
	lea(mv, &ts->edi, x86::mem(ts->eax + (ts->edi) + 0x1, 4));
	lea(mv, &ts->ecx, x86::mem(ts->ebx + (ts->ebx*2), 4));
	mov(mv, x86::mem(ts->esi, 4), ts->edi);
	mov(mv, &ts->al, x86::mem(0x7FB441, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_57E2B0;
    }
	cmp(mv, &ts->eflags, ts->edi, x86::mem(ts->esi + 0x10, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_57E384;
    }
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_57E330:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	mov(&ts->edx, ts->eax);
	sub(&ts->edx, ts->ecx);
	cmp(&ts->eflags, ts->edx, 0x100);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_57E34E;
    }
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esi + 0x10, 4));
	if (ts->eflags.zero) {
        goto loc_57E34E;
    }
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_57E210(ts, mv);

loc_57E34E:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	mov(&ts->eax, ts->edi);
	sub(&ts->eax, ts->ecx);
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->esi) + 0x128, 4));
	movzx(mv, &ts->eax, x86::mem(ts->eax, 1));
	mov(&ts->ecx, ts->eax);
	shr(&ts->ecx, 0x4);
	and_(&ts->eax, 0xF);
	lea(mv, &ts->edi, x86::mem(ts->edi + (ts->ecx) + 0x1, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->al, x86::mem(0x7FB441, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_57E384;
    }
	mov(mv, x86::mem(ts->esi, 4), ts->edi);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	mov(&ts->edx, ts->edi);
	cmp(&ts->eflags, ts->edx, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_57E330;
    }

loc_57E384:
	cmp(mv, &ts->eflags, ts->ebx, x86::mem(ts->esp + 0x24, 4));
	if (ts->eflags.zero) {
        goto loc_57E396;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_579700(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	mov(mv, x86::mem(ts->esi, 4), ts->eax);

loc_57E396:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->eax, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp, 0x8);
}

void sub_57E3B0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x8650D0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_57E3BC;
    }
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_57E3BC:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8650D8, 4));
	game::sub_57E2A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8650D8, 4));
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	cmp(&ts->eflags, ts->edx, ts->edi);
	pop(mv, &ts->esp, ts->edi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto locret_57E400;
    }
	mov(mv, &ts->ecx, x86::mem(0x8650D0, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto locret_57E400;
    }
	mov(mv, x86::mem(0x8650D8, 4), 0x0);
	mov(mv, x86::mem(0x8650D0, 4), 0x0);

locret_57E400:
	retn(mv, &ts->esp);
}

void sub_57E410(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	xor_(&ts->esi, ts->esi);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_57E470;
    }
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x14, 4));

loc_57E426:
	mov(mv, &ts->eax, x86::mem(0x8650D0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_57E433;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_57E466;

loc_57E433:
	mov(mv, &ts->ecx, x86::mem(0x8650D8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x8);
	game::sub_57E2A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8650D8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	cmp(mv, &ts->eflags, ts->edx, x86::mem(ts->ecx + 0x10, 4));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_57E466;
    }
	mov(mv, &ts->edx, x86::mem(0x8650D0, 4));
	xor_(&ts->ecx, ts->ecx);
	cmp(&ts->eflags, ts->edx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_57E466;
    }
	mov(mv, x86::mem(0x8650D8, 4), ts->ecx);
	mov(mv, x86::mem(0x8650D0, 4), ts->ecx);

loc_57E466:
	mov(mv, x86::mem(ts->esi + (ts->ebp), 1), ts->al);
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_57E426;
    }
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);

loc_57E470:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_57E480(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x8650D0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x18, 4));
	if (ts->eflags.zero) {
        goto loc_57E4A2;
    }
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57E3B0(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->esi, ts->eax);
	goto loc_57E4A6;

loc_57E4A2:
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x10, 4));

loc_57E4A6:
	mov(mv, &ts->eax, x86::mem(0x8650D4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57E4BD;
    }
	mov(mv, &ts->ecx, x86::mem(0x8650DC, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	game::sub_57D5B0(ts, mv);

loc_57E4BD:
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_57E4D0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x8650D0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_57E54C;
    }
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x10);
	game::sub_57E3B0(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x8);
	xor_(&ts->esi, ts->esi);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_57E548;
    }
	goto loc_57E500;

loc_57E500:
	mov(mv, &ts->eax, x86::mem(0x8650D0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_57E50D;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_57E540;

loc_57E50D:
	mov(mv, &ts->ecx, x86::mem(0x8650D8, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x8);
	game::sub_57E2A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8650D8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	cmp(mv, &ts->eflags, ts->edx, x86::mem(ts->ecx + 0x10, 4));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_57E540;
    }
	mov(mv, &ts->edx, x86::mem(0x8650D0, 4));
	xor_(&ts->ecx, ts->ecx);
	cmp(&ts->eflags, ts->edx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_57E540;
    }
	mov(mv, x86::mem(0x8650D8, 4), ts->ecx);
	mov(mv, x86::mem(0x8650D0, 4), ts->ecx);

loc_57E540:
	mov(mv, x86::mem(ts->esi + (ts->ebx), 1), ts->al);
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_57E500;
    }

loc_57E548:
	mov(mv, x86::mem(ts->esi + (ts->ebx), 1), 0x0);

loc_57E54C:
	mov(mv, &ts->eax, x86::mem(0x8650D4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57E5A1;
    }
	push(mv, &ts->esp, ts->ebx);
	game::sub_43DBB0(ts, mv);
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->eax, x86::mem(0x8650D4, 4));
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57E578;
    }
	mov(mv, &ts->ecx, x86::mem(0x8650DC, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x10);
	push(mv, &ts->esp, ts->edi);
	game::sub_57D5B0(ts, mv);

loc_57E578:
	xor_(&ts->esi, ts->esi);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_57E5A1;
    }
	mov(&ts->edi, ts->edi);

loc_57E580:
	mov(mv, &ts->eax, x86::mem(0x8650D4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57E59C;
    }
	movsx(mv, &ts->eax, x86::mem(ts->esi + (ts->ebx), 1));
	mov(mv, &ts->ecx, x86::mem(0x8650DC, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_57D5B0(ts, mv);

loc_57E59C:
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_57E580;
    }

loc_57E5A1:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_57E5B0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x8650D0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_57E631;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x10);
	game::sub_57E3B0(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x8);
	xor_(&ts->esi, ts->esi);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_57E62A;
    }
	goto loc_57E5E0;

loc_57E5E0:
	mov(mv, &ts->eax, x86::mem(0x8650D0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_57E5ED;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_57E620;

loc_57E5ED:
	mov(mv, &ts->ecx, x86::mem(0x8650D8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x10);
	game::sub_57E2A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8650D8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	cmp(mv, &ts->eflags, ts->edx, x86::mem(ts->ecx + 0x10, 4));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_57E620;
    }
	mov(mv, &ts->edx, x86::mem(0x8650D0, 4));
	xor_(&ts->ecx, ts->ecx);
	cmp(&ts->eflags, ts->edx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_57E620;
    }
	mov(mv, x86::mem(0x8650D8, 4), ts->ecx);
	mov(mv, x86::mem(0x8650D0, 4), ts->ecx);

loc_57E620:
	mov(mv, x86::mem(ts->ebp + (ts->esi*2), 2), ts->ax);
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_57E5E0;
    }

loc_57E62A:
	mov(mv, x86::mem(ts->ebp + (ts->esi*2), 2), 0x0);

loc_57E631:
	mov(mv, &ts->eax, x86::mem(0x8650D4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57E685;
    }
	push(mv, &ts->esp, ts->ebp);
	game::sub_43DFE0(ts, mv);
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->eax, x86::mem(0x8650D4, 4));
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57E65D;
    }
	mov(mv, &ts->ecx, x86::mem(0x8650DC, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x10);
	push(mv, &ts->esp, ts->edi);
	game::sub_57D5B0(ts, mv);

loc_57E65D:
	xor_(&ts->esi, ts->esi);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_57E685;
    }

loc_57E663:
	mov(mv, &ts->eax, x86::mem(0x8650D4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57E680;
    }
	movzx(mv, &ts->eax, x86::mem(ts->ebp + (ts->esi*2), 2));
	mov(mv, &ts->ecx, x86::mem(0x8650DC, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x10);
	push(mv, &ts->esp, ts->eax);
	game::sub_57D5B0(ts, mv);

loc_57E680:
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_57E663;
    }

loc_57E685:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_57E690(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x8650D8, 4));
	sub(&ts->esp, 0x200);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x8);
	add(&ts->eax, 0x24);
	push(mv, &ts->esp, 0x8650E0);
	push(mv, &ts->esp, ts->eax);
	game::sub_57DA10(ts, mv);
	push(mv, &ts->esp, 0xD);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	mov(&ts->edi, ts->eax);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(0x8650E8, 4), ts->edi);
	xor_(&ts->ebx, ts->ebx);
	xor_(&ts->esi, ts->esi);
	game::sub_573090(ts, mv);
	add(&ts->esp, 0x18);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57E704;
    }
	nop();

loc_57E6D0:
	cmp(&ts->eflags, ts->esi, 0x1FE);
	if (!ts->eflags.zero) {
        goto loc_57E6E4;
    }
	mov(&ts->esi, 0x1FF);
	mov(mv, x86::mem(ts->esp + 0x20B, 1), ts->bl);

loc_57E6E4:
	cmp(mv, &ts->eflags, x86::mem(ts->esp + (ts->esi) + 0xC, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_57E6ED;
    }
	inc(&ts->esi);
	goto loc_57E6EF;

loc_57E6ED:
	xor_(&ts->esi, ts->esi);

loc_57E6EF:
	push(mv, &ts->esp, 0xD);
	lea(mv, &ts->edx, x86::mem(ts->esp + (ts->esi) + 0x10, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edx);
	game::sub_573090(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_57E6D0;
    }

loc_57E704:
	push(mv, &ts->esp, ts->edi);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x8650E8, 4), ts->ebx);
	mov(mv, x86::mem(0x8650E0, 4), ts->ebx);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x200);
	retn(mv, &ts->esp);
}

void sub_57E730(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_57A1A0(ts, mv);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8650EC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x78, 4));
	if (!ts->eflags.zero) {
        goto loc_57E751;
    }
	mov(mv, x86::mem(ts->esi + 0x70, 4), 0x2);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_57E751:
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	game::sub_57CA10(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->edi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_57E772;
    }
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x70, 4), 0x3);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_57E772:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x50, 4));
	sub(&ts->ebx, ts->ebp);
	cmp(&ts->eflags, ts->ebx, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_57E785;
    }
	mov(&ts->ebx, ts->eax);

loc_57E785:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x48, 4));
	xor_(&ts->ecx, ts->ecx);
	test(&ts->eflags, ts->eax, ts->eax);
	setl(ts->eflags, &ts->cl);
	dec(&ts->ecx);
	and_(&ts->ecx, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->edx + (ts->ebp), 4));
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->ebx), 4));
	cmp(&ts->eflags, ts->edx, ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_57E7A8;
    }
	mov(mv, x86::mem(ts->esi + 0x70, 4), 0x3);
	goto loc_57E7D3;

loc_57E7A8:
	mov(mv, x86::mem(ts->esi + 0x70, 4), 0x1);
	mov(mv, x86::mem(ts->edi + 0x8, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_57E7D0;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x50, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x5735E0);
	push(mv, &ts->esp, ts->ebx);
	add(&ts->eax, ts->edx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_57C7A0(ts, mv);

loc_57E7D0:
	add(mv, x86::mem(ts->esi + 0x50, 4), ts->ebx);

loc_57E7D3:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x18, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_57E7E6;
    }
	mov(mv, x86::mem(ts->edi + 0x14, 4), 0x1);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_57E7E6:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->edi);
	game::sub_579B90(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_57E800(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x865110, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_57E819;
    }
	game::sub_6F56BD(ts, mv);
	game::sub_57C920(ts, mv);

loc_57E819:
	cmp(mv, &ts->eflags, x86::mem(0x8650F4, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_57E911;
    }
	cmp(mv, &ts->eflags, x86::mem(0x7FB534, 1), ts->bl);
	mov(mv, &ts->esi, x86::mem(0x865550, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x70, 4));
	mov(&ts->ebp, 0x1);
	if (ts->eflags.zero) {
        goto loc_57E891;
    }
	cmp(mv, &ts->eflags, x86::mem(0x8650D0, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_57E879;
    }
	push(mv, &ts->esp, 0x6);
	push(mv, &ts->esp, 0x4);
	game::sub_57E3B0(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->edi, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_57E891;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x70, 4), ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_57E891;
    }
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_57E860:
	cmp(mv, &ts->eflags, x86::mem(0x865110, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_57E872;
    }
	game::sub_6F56BD(ts, mv);
	game::sub_57C920(ts, mv);

loc_57E872:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x70, 4), ts->ebp);
	if (ts->eflags.zero) {
        goto loc_57E860;
    }
	goto loc_57E891;

loc_57E879:
	cmp(mv, &ts->eflags, x86::mem(0x8650D4, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_57E891;
    }
	mov(mv, &ts->ecx, x86::mem(0x8650DC, 4));
	push(mv, &ts->esp, 0x6);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, ts->edi);
	game::sub_57D5B0(ts, mv);

loc_57E891:
	cmp(&ts->eflags, ts->edi, 0x2);
	if (!ts->eflags.zero) {
        goto loc_57E8E0;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	dec(mv, x86::mem(0x8650F4, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x74, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_57E902;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	cmp(mv, &ts->eflags, ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	if (!ts->eflags.zero) {
        goto loc_57E8C5;
    }
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	game::sub_57B3D0(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x8650F0, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edx);
	goto loc_57E909;

loc_57E8C5:
	mov(mv, x86::mem(ts->esi + 0x70, 4), ts->ebx);
	mov(mv, &ts->eax, x86::mem(0x865224, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	mov(mv, x86::mem(0x865224, 4), ts->esi);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi, 4), 0x865220);
	goto loc_57E911;

loc_57E8E0:
	cmp(&ts->eflags, ts->edi, 0x3);
	if (!ts->eflags.zero) {
        goto loc_57E911;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(0x8650F4, 4));
	dec(&ts->eax);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(0x8650F4, 4), ts->eax);
	game::sub_57B3D0(ts, mv);

loc_57E902:
	mov(mv, &ts->eax, x86::mem(0x8650F0, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);

loc_57E909:
	game::sub_43F920(ts, mv);
	add(&ts->esp, 0x8);

loc_57E911:
	cmp(mv, &ts->eflags, x86::mem(0x8650F4, 4), 0x3);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_57EABC;
    }
	mov(&ts->edi, ts->edi);

loc_57E920:
	cmp(mv, &ts->eflags, x86::mem(0x865220, 4), 0x865220);
	if (ts->eflags.zero) {
        goto loc_57EABC;
    }
	push(mv, &ts->esp, 0x5735C0);
	mov(&ts->ecx, 0x865220);
	game::sub_43E650(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(0x8650F4, 4), ts->ebx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_57E966;
    }
	mov(mv, &ts->ecx, x86::mem(0x865220, 4));
	add(&ts->ecx, 0xC);
	push(mv, &ts->esp, 0x864DF8);
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_57EABC;
    }

loc_57E966:
	cmp(mv, &ts->eflags, x86::mem(0x7FB53C, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_57EA68;
    }
	mov(mv, &ts->edx, x86::mem(0x8650F0, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_440E50(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_57E997;
    }
	mov(mv, x86::mem(ts->eax, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ebx);
	mov(&ts->esi, ts->eax);
	goto loc_57E999;

loc_57E997:
	xor_(&ts->esi, ts->esi);

loc_57E999:
	mov(mv, &ts->edi, x86::mem(0x865220, 4));
	mov(&ts->ecx, 0x865220);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	mov(&ts->ebp, ts->eax);
	cmp(&ts->eflags, ts->edi, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_57E9C2;
    }
	nop();

loc_57E9B0:
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_5735F0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_57E9C2;
    }
	mov(mv, &ts->edi, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->edi, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_57E9B0;
    }

loc_57E9C2:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x10, 4), 0x2);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_57E9EB;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_57E9D7;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_57E9D7:
	mov(mv, &ts->eax, x86::mem(0x8650F0, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	game::sub_43F920(ts, mv);
	add(&ts->esp, 0x8);
	goto loc_57EA68;

loc_57E9EB:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x8, 4));
	sub(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1008);
	push(mv, &ts->esp, ts->edi);
	game::sub_440820(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x14, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x57D8C0);
	lea(mv, &ts->ebp, x86::mem(ts->esi + 0x14, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ecx);
	add(&ts->edx, 0xC);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi, 4), ts->eax);
	game::sub_57B4A0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_5797B0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	mov(mv, &ts->ecx, x86::mem(0x865220, 4));
	mov(mv, x86::mem(0x865220, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), 0x865220);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	add(&ts->esp, 0x24);
	xor_(&ts->edx, ts->edx);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_57EA68;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_57EA50:
	mov(mv, &ts->eax, x86::mem(ts->ebp, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	inc(&ts->edx);
	add(&ts->ebp, 0x4);
	cmp(&ts->eflags, ts->edx, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_57EA50;
    }

loc_57EA68:
	mov(mv, &ts->esi, x86::mem(0x865220, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x864DF8);
	game::sub_43DBD0(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->ecx, ts->esi);
	game::sub_57E730(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x865554, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	mov(mv, x86::mem(0x865554, 4), ts->esi);
	mov(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, x86::mem(ts->esi, 4), 0x865550);
	mov(mv, &ts->eax, x86::mem(0x8650F4, 4));
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0x3);
	mov(mv, x86::mem(0x8650F4, 4), ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_57E920;
    }

loc_57EABC:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_57EAD0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x86514C, 4));
	mov(mv, &ts->ecx, x86::mem(0x8650D0, 4));
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->eax);
	and_(&ts->edi, 0xF);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_57EB09;
    }
	push(mv, &ts->esp, 0x3);
	push(mv, &ts->esp, 0x8);
	game::sub_57E3B0(ts, mv);
	mov(&ts->esi, ts->eax);
	push(mv, &ts->esp, 0x5);
	push(mv, &ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->esi);
	game::sub_57E3B0(ts, mv);
	add(&ts->esp, 0x10);
	goto loc_57EC88;

loc_57EB09:
	cdq(&ts->eax, ts->edx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865558, 4));
	mov(&ts->ecx, 0x64);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	idiv(&ts->eax, ts->ecx);
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	mov(&ts->esi, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	shl(&ts->esi, 0x4);
	add(&ts->esi, 0x8647A8);
	test(&ts->eflags, ts->ah, 0x41);
	mov(mv, x86::mem(ts->esi, 4), ts->edx);
	if (!ts->eflags.zero) {
        goto loc_57EB8B;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865558, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_57EB8B;
    }
	push(mv, &ts->esp, ts->ebx);
	game::sub_43BDF0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784550, 4));
	mov(&ts->ebx, ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));

loc_57EB64:
	game::sub_43BDF0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_43BE20(ts, mv);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	add(&ts->esp, 0x8);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_57EB64;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	pop(mv, &ts->esp, ts->ebx);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));

loc_57EB8B:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865148, 4));
	mov(mv, &ts->ecx, x86::mem(0x7FB70C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(0x865198, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7FB714, 4));
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x7FB700, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->edx);
	if (!ts->eflags.zero) {
        goto loc_57EBDE;
    }
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7851C0, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7851C0, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.zero) {
        goto loc_57EBFD;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7851C0, 4));
	goto loc_57EBFD;

loc_57EBDE:
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7875BC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865558, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.zero) {
        goto loc_57EBFD;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865558, 4));

loc_57EBFD:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_57EC10;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));

loc_57EC10:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7A061C, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	game::__ftol2(ts, mv);
	mov(&ts->esi, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7A0AA8, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(0x8650D4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fsubr(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865148, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	if (ts->eflags.zero) {
        goto loc_57EC88;
    }
	mov(mv, &ts->ecx, x86::mem(0x8650DC, 4));
	push(mv, &ts->esp, 0x3);
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->esi);
	game::sub_57D5B0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8650D4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57EC88;
    }
	mov(mv, &ts->ecx, x86::mem(0x8650DC, 4));
	push(mv, &ts->esp, 0x5);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, ts->edi);
	game::sub_57D5B0(ts, mv);

loc_57EC88:
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(0x865140, 4), ts->esi);
	pop(mv, &ts->esp, ts->esi);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7A0618, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865198, 4));
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_57ECB0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x8650D0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero) {
        goto loc_57ECD8;
    }
	push(mv, &ts->esp, 0xA);
	push(mv, &ts->esp, 0x20);
	game::sub_57E3B0(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->esi, ts->eax);
	push(mv, &ts->esp, 0x7EA624);
	push(mv, &ts->esp, ts->esi);
	game::sub_43E6B0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_57ECD8:
	game::sub_43BDF0(ts, mv);
	mov(&ts->esi, ts->eax);
	mov(mv, &ts->eax, x86::mem(0x8650D4, 4));
	add(&ts->esi, 0x12345678);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57ECFE;
    }
	mov(mv, &ts->ecx, x86::mem(0x8650DC, 4));
	push(mv, &ts->esp, 0xA);
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->esi);
	game::sub_57D5B0(ts, mv);

loc_57ECFE:
	push(mv, &ts->esp, 0x7EA624);
	push(mv, &ts->esp, ts->esi);
	game::sub_43E6B0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_57ED10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	game::sub_5B7690(ts, mv);
	add(&ts->esp, 0x8);
	game::sub_57CD70(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x8709F8);
	game::sub_5B7EA0(ts, mv);
	push(mv, &ts->esp, 0x1400);
	game::sub_440E60(ts, mv);
	add(&ts->esp, 0x4);
	game::nullsub_1(ts, mv);
	game::sub_580D90(ts, mv);
	game::sub_57ECB0(ts, mv);
	game::sub_5736D0(ts, mv);
	game::sub_5D7AF0(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x89CF48);
	game::sub_5EFE30(ts, mv);
	game::sub_5BA7F0(ts, mv);
	game::sub_48CD60(ts, mv);
	game::nullsub_1(ts, mv);
	game::sub_4886E0(ts, mv);
	game::sub_570F80(ts, mv);
	game::sub_579550(ts, mv);
	game::sub_4859B0(ts, mv);
	game::sub_537830(ts, mv);
	game::sub_57FB00(ts, mv);
	game::sub_4FF680(ts, mv);
	game::sub_57FB40(ts, mv);
	game::sub_486910(ts, mv);
	game::nullsub_1(ts, mv);
	game::sub_60C680(ts, mv);
	game::sub_60C820(ts, mv);
	game::unknown_libname_6(ts, mv);
	game::sub_61C700(ts, mv);
	game::sub_57B870(ts, mv);
	game::sub_60BC70(ts, mv);
	game::sub_4313B0(ts, mv);
	game::sub_431380(ts, mv);
	game::sub_431580(ts, mv);
	game::sub_4314E0(ts, mv);
	game::unknown_libname_2(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(0x86534C, 1), 0x1);
	mov(mv, x86::mem(0x865354, 4), 0x0);
	pop(mv, &ts->esp, ts->esi);
	goto loc_57FD50;

loc_57FD50:
	mov(mv, &ts->eax, x86::mem(0x8650F4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_57FD65;
    }
	cmp(mv, &ts->eflags, x86::mem(0x865220, 4), 0x865220);
	if (ts->eflags.zero) {
        goto loc_57FD6C;
    }

loc_57FD65:
	game::sub_57E800(ts, mv);
	goto loc_57FD50;

loc_57FD6C:
	mov(mv, &ts->eax, x86::mem(0x864F98, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(&ts->edx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57FD8A;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_57FD8A:
	mov(mv, x86::mem(0x864F98, 4), 0x0);
	retn(mv, &ts->esp);
}

void sub_57EE00(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(0x890080, 4));
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	xor_(&ts->ebx, ts->ebx);
	test(&ts->eflags, ts->ecx, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_57EE1A;
    }
	game::sub_5F0F70(ts, mv);
	mov(&ts->ebx, ts->eax);

loc_57EE1A:
	game::unknown_libname_4(ts, mv);
	mov(mv, &ts->esi, x86::mem(0x86514C, 4));
	mov(mv, &ts->ebp, x86::mem(0x7EA624, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->esi);
	add(&ts->esi, ts->ebp);
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->eax, x86::mem(0x8650D0, 4));
	add(&ts->esi, ts->edi);
	add(&ts->esi, ts->ebx);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_57EE63;
    }
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, 0x10);
	game::sub_57E3B0(ts, mv);
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->ax, ts->si);
	if (ts->eflags.zero) {
        goto loc_57EE83;
    }
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x1);
	goto loc_57EE83;

loc_57EE63:
	mov(mv, &ts->eax, x86::mem(0x8650D4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57EF4B;
    }
	mov(mv, &ts->ecx, x86::mem(0x8650DC, 4));
	push(mv, &ts->esp, 0x4);
	movzx(&ts->eax, ts->si);
	push(mv, &ts->esp, 0x10);
	push(mv, &ts->esp, ts->eax);
	game::sub_57D5B0(ts, mv);

loc_57EE83:
	mov(mv, &ts->eax, x86::mem(0x8650D0, 4));
	xor_(&ts->esi, ts->esi);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero) {
        goto loc_57EEB7;
    }
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, 0x10);
	game::sub_57E3B0(ts, mv);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, 0x10);
	game::sub_57E3B0(ts, mv);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, 0x10);
	game::sub_57E3B0(ts, mv);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, 0x10);
	game::sub_57E3B0(ts, mv);
	add(&ts->esp, 0x20);
	goto loc_57EF25;

loc_57EEB7:
	cmp(mv, &ts->eflags, x86::mem(0x8650D4, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_57EF25;
    }
	push(mv, &ts->esp, 0x4);
	movzx(&ts->ecx, ts->bx);
	push(mv, &ts->esp, 0x10);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8650DC, 4));
	game::sub_57D5B0(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(0x8650D4, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_57EF25;
    }
	mov(mv, &ts->ecx, x86::mem(0x8650DC, 4));
	push(mv, &ts->esp, 0x4);
	movzx(&ts->edx, ts->di);
	push(mv, &ts->esp, 0x10);
	push(mv, &ts->esp, ts->edx);
	game::sub_57D5B0(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(0x8650D4, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_57EF25;
    }
	mov(mv, &ts->ecx, x86::mem(0x8650DC, 4));
	push(mv, &ts->esp, 0x4);
	movzx(&ts->eax, ts->bp);
	push(mv, &ts->esp, 0x10);
	push(mv, &ts->esp, ts->eax);
	game::sub_57D5B0(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(0x8650D4, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_57EF25;
    }
	movzx(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 2));
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, 0x10);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8650DC, 4));
	game::sub_57D5B0(ts, mv);

loc_57EF25:
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x10, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_57EF4B;
    }
	cmp(mv, &ts->eflags, x86::mem(0x8650D0, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_57EF3F;
    }
	mov(mv, x86::mem(0x8650D8, 4), ts->esi);
	mov(mv, x86::mem(0x8650D0, 4), ts->esi);

loc_57EF3F:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	goto sub_43BD50;

loc_57EF4B:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_57EF60(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x864F58, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57EF89;
    }
	mov(mv, &ts->ecx, x86::mem(0x864F5C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(0x864F58, 4), 0x0);
	mov(mv, x86::mem(0x864F5C, 4), 0x0);
	call(ts, mv, ts->eax);
	add(&ts->esp, 0x4);

loc_57EF89:
	push(mv, &ts->esp, ts->esi);
	game::sub_57E800(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x864F54, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57EFC0;
    }
	mov(mv, &ts->esi, x86::mem(0x8651A4, 4));
	mov(&ts->ecx, 0x8651A4);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57EFC0;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_57EFB0:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xCC, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_57EFC4;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_57EFB0;
    }

loc_57EFC0:
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_57EFC4:
	mov(&ts->ecx, ts->esi);
	game::sub_577DE0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xCC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57EFF1;
    }
	dec(mv, x86::mem(0x864F54, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xD0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57EFF1;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xD4, 4));
	push(mv, &ts->esp, ts->ecx);
	call(ts, mv, ts->eax);
	add(&ts->esp, 0x4);

loc_57EFF1:
	mov(mv, &ts->eax, x86::mem(0x864F54, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_57F000(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_57F02C;
    }
	goto loc_57F010;

loc_57F010:
	mov(mv, &ts->eax, x86::mem(0x8650F4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_57F025;
    }
	cmp(mv, &ts->eflags, x86::mem(0x865220, 4), 0x865220);
	if (ts->eflags.zero) {
        goto locret_57F02C;
    }

loc_57F025:
	game::sub_57E800(ts, mv);
	goto loc_57F010;

locret_57F02C:
	retn(mv, &ts->esp);
}

void sub_57F030(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x200);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x208, 4));
	test(&ts->eflags, ts->ebx, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_57F083;
    }
	push(mv, &ts->esp, 0x7A0AC8);
	game::sub_57D900(ts, mv);
	mov(&ts->edi, ts->eax);
	push(mv, &ts->esp, 0x1008);
	push(mv, &ts->esp, ts->edi);
	game::sub_440820(ts, mv);
	mov(&ts->esi, ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x57A500);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x7A0AC8);
	push(mv, &ts->esp, ts->esi);
	game::sub_57B4A0(ts, mv);
	add(&ts->esp, 0x24);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(0x864F90, 4), ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x200);
	retn(mv, &ts->esp);

loc_57F083:
	cmp(&ts->eflags, ts->ebx, 0x1);
	if (!ts->eflags.zero) {
        goto loc_57F0AC;
    }
	mov(mv, &ts->eax, x86::mem(0x864F90, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_57F0A3;
    }
	push(mv, &ts->esp, 0x7A0AC8);
	game::sub_57DC20(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(0x864F90, 4), ts->eax);

loc_57F0A3:
	push(mv, &ts->esp, ts->eax);
	game::sub_57F000(ts, mv);
	add(&ts->esp, 0x4);

loc_57F0AC:
	mov(&ts->esi, 0x86658C);

loc_57F0B1:
	cmp(&ts->eflags, ts->ebx, 0x1);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	if (!ts->eflags.zero) {
        goto loc_57F0C9;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_4941C0(ts, mv);
	add(&ts->esp, 0x10);
	goto loc_57F0F8;

loc_57F0C9:
	cmp(&ts->eflags, ts->ebx, 0x2);
	if (!ts->eflags.zero) {
        goto loc_57F0DD;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_4941F0(ts, mv);
	add(&ts->esp, 0xC);
	goto loc_57F0F8;

loc_57F0DD:
	cmp(&ts->eflags, ts->ebx, 0x3);
	if (!ts->eflags.zero) {
        goto loc_57F0EA;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_48DAE0(ts, mv);
	goto loc_57F0F5;

loc_57F0EA:
	cmp(&ts->eflags, ts->ebx, 0x4);
	if (!ts->eflags.zero) {
        goto loc_57F0F8;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_48DC60(ts, mv);

loc_57F0F5:
	add(&ts->esp, 0x4);

loc_57F0F8:
	add(&ts->esi, 0x4);
	cmp(&ts->eflags, ts->esi, 0x8665B8);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_57F0B1;
    }
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x43);
	push(mv, &ts->esp, 0xA6E1B733);
	mov(&ts->ecx, 0x8A2B68);
	game::sub_61B670(ts, mv);
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_57F1C5;
    }

loc_57F124:
	mov(&ts->ecx, ts->esi);
	game::sub_610000(ts, mv);
	mov(&ts->edi, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_43DBB0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x1E3);
	if (!ts->eflags.carry) {
        goto loc_57F1A5;
    }
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, 0x7A0AAC);
	push(mv, &ts->esp, ts->eax);
	game::sub_4400D0(ts, mv);
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->ebx, 0x1);
	if (!ts->eflags.zero) {
        goto loc_57F16A;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4941C0(ts, mv);
	add(&ts->esp, 0x10);
	goto loc_57F1A5;

loc_57F16A:
	cmp(&ts->eflags, ts->ebx, 0x2);
	if (!ts->eflags.zero) {
        goto loc_57F182;
    }
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	game::sub_4941F0(ts, mv);
	add(&ts->esp, 0xC);
	goto loc_57F1A5;

loc_57F182:
	cmp(&ts->eflags, ts->ebx, 0x3);
	if (!ts->eflags.zero) {
        goto loc_57F193;
    }
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_48DAE0(ts, mv);
	goto loc_57F1A2;

loc_57F193:
	cmp(&ts->eflags, ts->ebx, 0x4);
	if (!ts->eflags.zero) {
        goto loc_57F1A5;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_48DC60(ts, mv);

loc_57F1A2:
	add(&ts->esp, 0x4);

loc_57F1A5:
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x43);
	push(mv, &ts->esp, 0xA6E1B733);
	mov(&ts->ecx, 0x8A2B68);
	game::sub_61B670(ts, mv);
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_57F124;
    }

loc_57F1C5:
	cmp(&ts->eflags, ts->ebx, 0x1);
	if (!ts->eflags.zero) {
        goto loc_57F1FC;
    }
	push(mv, &ts->esp, 0x0);
	game::sub_48D9D0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x864F90, 4));
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(&ts->edx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57F1F2;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_57F1F2:
	mov(mv, x86::mem(0x864F90, 4), 0x0);

loc_57F1FC:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x200);
	retn(mv, &ts->esp);
}

void sub_57F2D0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x248);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->ebx, 4));
	inc(&ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->ebx, 4), ts->ecx);
	mov(mv, &ts->al, x86::mem(0x865498, 1));
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_57F2F2;
    }
	mov(mv, x86::mem(0x865498, 1), 0x0);

loc_57F2F2:
	cmp(mv, &ts->eflags, x86::mem(0x865484, 4), ts->edi);
	mov(mv, &ts->eax, x86::mem(ts->ebx, 4));
	if (ts->eflags.zero) {
        goto loc_57F302;
    }
	mov(mv, x86::mem(0x865484, 4), ts->edi);

loc_57F302:
	mov(mv, x86::mem(0x865498, 1), 0x1);
	mov(mv, x86::mem(0x86549C, 4), 0x7A0CD8);
	mov(mv, x86::mem(0x8654A0, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebx, 4));
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_57F3CB;
    }
	game::sub_4C57C0(ts, mv);
	mov(mv, x86::mem(ts->ebx + 0x8, 4), ts->edi);
	mov(mv, &ts->al, x86::mem(0x89E7E6, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_57F354;
    }
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x3);
	push(mv, &ts->esp, 0x7A0CB4);
	game::sub_57CEF0(ts, mv);
	add(&ts->esp, 0x14);
	mov(&ts->esi, ts->eax);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_57BD70(ts, mv);
	mov(mv, x86::mem(ts->ebx + 0x8, 4), ts->esi);

loc_57F354:
	mov(mv, &ts->cl, x86::mem(0x89E7D8, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	mov(&ts->eax, 0x7A0C9C);
	if (!ts->eflags.zero) {
        goto loc_57F36B;
    }
	cmp(mv, &ts->eflags, x86::mem(0x890108, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_57F372;
    }

loc_57F36B:
	mov(&ts->eax, 0x7A0C84);
	goto loc_57F3A1;

loc_57F372:
	mov(mv, &ts->cl, x86::mem(0x89E7D9, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_57F384;
    }
	cmp(mv, &ts->eflags, x86::mem(0x890104, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_57F38B;
    }

loc_57F384:
	mov(&ts->eax, 0x7A0C6C);
	goto loc_57F3A1;

loc_57F38B:
	cmp(mv, &ts->eflags, x86::mem(0x89E7B0, 4), ts->edi);
	if (!ts->eflags.zero) {
        goto loc_57F3A1;
    }
	cmp(mv, &ts->eflags, x86::mem(0x89E7C0, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_57F3A1;
    }
	mov(&ts->eax, 0x7A0C50);

loc_57F3A1:
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x3);
	push(mv, &ts->esp, ts->eax);
	game::sub_57CEF0(ts, mv);
	add(&ts->esp, 0x14);
	mov(&ts->esi, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x571150);
	mov(&ts->ecx, ts->esi);
	game::sub_57BD70(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->ebx + 0x4, 4), ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x248);
	retn(mv, &ts->esp);

loc_57F3CB:
	cmp(&ts->eflags, ts->eax, 0x2);
	if (!ts->eflags.zero) {
        goto loc_57F3E7;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x571150);
	mov(&ts->ecx, ts->ebx);
	game::sub_577F60(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x248);
	retn(mv, &ts->esp);

loc_57F3E7:
	cmp(&ts->eflags, ts->eax, 0x3);
	if (!ts->eflags.zero) {
        goto loc_57F5B2;
    }
	mov(mv, &ts->eax, x86::mem(0x89E7A0, 4));
	mov(&ts->edi, ts->eax);
	cdq(&ts->eax, ts->edx);
	mov(&ts->ecx, 0x3E8);
	idiv(&ts->eax, ts->ecx);
	test(&ts->eflags, ts->edx, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_57F419;
    }
	mov(mv, &ts->edx, x86::mem(0x883DAC, 4));
	add(&ts->edx, 0x40);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x7A0C24);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	goto loc_57F42D;

loc_57F419:
	mov(mv, &ts->ecx, x86::mem(0x883DAC, 4));
	add(&ts->ecx, 0x40);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x7A0BFC);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->edx);

loc_57F42D:
	game::sub_4400D0(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_57CEF0(ts, mv);
	add(&ts->esp, 0x14);
	mov(&ts->esi, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_57BD70(ts, mv);
	mov(mv, x86::mem(ts->ebx + 0x14, 4), ts->esi);
	mov(mv, &ts->ecx, x86::mem(0x883DAC, 4));
	push(mv, &ts->esp, ts->edi);
	add(&ts->ecx, 0x40);
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, 0x7A0BE0);
	push(mv, &ts->esp, ts->edx);
	game::sub_4400D0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x89E7B0, 4));
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57F4B0;
    }
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_57CAC0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57F4B0;
    }
	mov(mv, &ts->ecx, x86::mem(0x883DAC, 4));
	push(mv, &ts->esp, ts->edi);
	add(&ts->ecx, 0x40);
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, 0x7A0BE0);
	push(mv, &ts->esp, ts->edx);
	game::sub_4400D0(ts, mv);
	add(&ts->esp, 0x10);
	goto loc_57F4CB;

loc_57F4B0:
	mov(mv, &ts->eax, x86::mem(0x883DAC, 4));
	add(&ts->eax, 0x40);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, 0x7A0BBC);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4400D0(ts, mv);
	add(&ts->esp, 0xC);

loc_57F4CB:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, ts->edx);
	game::sub_57CEF0(ts, mv);
	add(&ts->esp, 0x14);
	mov(&ts->esi, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_57BD70(ts, mv);
	mov(mv, x86::mem(ts->ebx + 0x10, 4), ts->esi);
	mov(mv, &ts->eax, x86::mem(0x88A330, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_57F5A1;
    }
	mov(mv, &ts->eax, x86::mem(0x89E7B0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57F55E;
    }
	mov(&ts->ecx, 0x83A9D0);
	game::sub_457BA0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_57F55E;
    }
	mov(&ts->ecx, 0x83A9D0);
	game::sub_4AE8D0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_57F55E;
    }
	mov(mv, &ts->eax, x86::mem(0x89E7A4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(&ts->eax, 0x7A0BB8);
	if (ts->eflags.zero) {
        goto loc_57F535;
    }
	mov(&ts->eax, 0x7A0BB4);

loc_57F535:
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(0x883DAC, 4));
	push(mv, &ts->esp, ts->edi);
	add(&ts->eax, 0x40);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, 0x7A0B94);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4400D0(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_57CAC0(ts, mv);
	add(&ts->esp, 0x18);
	goto loc_57F579;

loc_57F55E:
	mov(mv, &ts->eax, x86::mem(0x883DAC, 4));
	add(&ts->eax, 0x40);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, 0x7A0B70);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4400D0(ts, mv);
	add(&ts->esp, 0xC);

loc_57F579:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x571150);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, ts->edx);
	game::sub_57CF70(ts, mv);
	add(&ts->esp, 0x1C);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->ebx + 0xC, 4), ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x248);
	retn(mv, &ts->esp);

loc_57F5A1:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->ebx + 0xC, 4), 0x0);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x248);
	retn(mv, &ts->esp);

loc_57F5B2:
	cmp(&ts->eflags, ts->eax, 0x4);
	if (!ts->eflags.zero) {
        goto loc_57F71D;
    }
	mov(mv, &ts->ecx, x86::mem(0x89E7C0, 4));
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->ecx, 0x2);
	setz(ts->eflags, &ts->al);
	mov(&ts->ecx, 0x8A3288);
	mov(mv, x86::mem(0x8654A4, 4), 0x5);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1);
	game::sub_610700(ts, mv);
	push(mv, &ts->esp, 0x1);
	game::sub_57F030(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->esi, 0x86658C);
	nop();

loc_57F5F0:
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_48DC60(ts, mv);
	add(&ts->esi, 0x4);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->esi, 0x8665B8);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_57F5F0;
    }
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x43);
	push(mv, &ts->esp, 0xA6E1B733);
	mov(&ts->ecx, 0x8A2B68);
	game::sub_61B670(ts, mv);
	mov(&ts->esi, ts->eax);
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_57F673;
    }

loc_57F621:
	mov(&ts->ecx, ts->esi);
	game::sub_610000(ts, mv);
	mov(&ts->edi, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_43DBB0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x1E3);
	if (!ts->eflags.carry) {
        goto loc_57F657;
    }
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x58, 4));
	push(mv, &ts->esp, 0x7A0AAC);
	push(mv, &ts->esp, ts->edx);
	game::sub_4400D0(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x60, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_48DC60(ts, mv);
	add(&ts->esp, 0x10);

loc_57F657:
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x43);
	push(mv, &ts->esp, 0xA6E1B733);
	mov(&ts->ecx, 0x8A2B68);
	game::sub_61B670(ts, mv);
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_57F621;
    }

loc_57F673:
	mov(mv, &ts->eax, x86::mem(0x89E814, 4));
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_57F6F2;
    }
	mov(&ts->edi, ts->edi);

loc_57F680:
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x89E7A0);
	game::sub_5ED900(ts, mv);
	mov(&ts->esi, ts->eax);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x16, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_57F6E8;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(0x8A1CCC, 4));
	imul(&ts->ecx, ts->ecx, 0x890);
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + (ts->eax) + 0x844, 4), 0x2);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10, 4));
	if (ts->eflags.zero) {
        goto loc_57F6E8;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	xor_(&ts->ecx, ts->ecx);
	cmp(&ts->eflags, ts->eax, 0x1);
	setz(ts->eflags, &ts->cl);
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_57F6CF;
    }
	mov(mv, &ts->eax, x86::mem(0x89E7B0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_57F6CF;
    }
	mov(&ts->eax, 0x1);
	goto loc_57F6D1;

loc_57F6CF:
	xor_(&ts->eax, ts->eax);

loc_57F6D1:
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x8A3288);
	game::sub_63BC70(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x8F8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x14, 1), 0x0);

loc_57F6E8:
	mov(mv, &ts->eax, x86::mem(0x89E814, 4));
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_57F680;
    }

loc_57F6F2:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1F4000);
	mov(&ts->ecx, 0x88EB00);
	game::sub_5E8560(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x571150);
	mov(&ts->ecx, 0x8A3288);
	game::sub_63BCD0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x248);
	retn(mv, &ts->esp);

loc_57F71D:
	cmp(&ts->eflags, ts->eax, 0x5);
	if (!ts->eflags.zero) {
        goto loc_57F93C;
    }
	mov(&ts->esi, 0x86658C);
	goto loc_57F730;

loc_57F730:
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_48DAE0(ts, mv);
	add(&ts->esi, 0x4);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->esi, 0x8665B8);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_57F730;
    }
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x43);
	push(mv, &ts->esp, 0xA6E1B733);
	mov(&ts->ecx, 0x8A2B68);
	game::sub_61B670(ts, mv);
	mov(&ts->esi, ts->eax);
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_57F7B3;
    }

loc_57F761:
	mov(&ts->ecx, ts->esi);
	game::sub_610000(ts, mv);
	mov(&ts->edi, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_43DBB0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x1E3);
	if (!ts->eflags.carry) {
        goto loc_57F797;
    }
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x58, 4));
	push(mv, &ts->esp, 0x7A0AAC);
	push(mv, &ts->esp, ts->edx);
	game::sub_4400D0(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x60, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_48DAE0(ts, mv);
	add(&ts->esp, 0x10);

loc_57F797:
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x43);
	push(mv, &ts->esp, 0xA6E1B733);
	mov(&ts->ecx, 0x8A2B68);
	game::sub_61B670(ts, mv);
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_57F761;
    }

loc_57F7B3:
	mov(&ts->esi, 0x86658C);

loc_57F7B8:
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4941F0(ts, mv);
	add(&ts->esi, 0x4);
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->esi, 0x8665B8);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_57F7B8;
    }
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x43);
	push(mv, &ts->esp, 0xA6E1B733);
	mov(&ts->ecx, 0x8A2B68);
	game::sub_61B670(ts, mv);
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_57F846;
    }
	nop();

loc_57F7F0:
	mov(&ts->ecx, ts->esi);
	game::sub_610000(ts, mv);
	mov(&ts->edi, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_43DBB0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x1E3);
	if (!ts->eflags.carry) {
        goto loc_57F82A;
    }
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x58, 4));
	push(mv, &ts->esp, 0x7A0AAC);
	push(mv, &ts->esp, ts->edx);
	game::sub_4400D0(ts, mv);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x64, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_4941F0(ts, mv);
	add(&ts->esp, 0x18);

loc_57F82A:
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x43);
	push(mv, &ts->esp, 0xA6E1B733);
	mov(&ts->ecx, 0x8A2B68);
	game::sub_61B670(ts, mv);
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_57F7F0;
    }

loc_57F846:
	mov(mv, &ts->esi, x86::mem(0x89E7A0, 4));
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, 0x791864);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4400D0(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x34, 4));
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, ts->edx);
	game::sub_57CF70(ts, mv);
	add(&ts->esp, 0x28);
	cmp(&ts->eflags, ts->esi, 0x3E9);
	mov(mv, x86::mem(ts->ebx + 0x30, 4), ts->eax);
	mov(mv, x86::mem(ts->ebx + 0x34, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_57F89F;
    }
	cmp(&ts->eflags, ts->esi, 0x3EA);
	if (ts->eflags.zero) {
        goto loc_57F89F;
    }
	cmp(&ts->eflags, ts->esi, 0x3EB);
	if (ts->eflags.zero) {
        goto loc_57F89F;
    }
	cmp(&ts->eflags, ts->esi, 0x44E);
	if (!ts->eflags.zero) {
        goto loc_57F91A;
    }

loc_57F89F:
	push(mv, &ts->esp, 0x7A0B60);
	game::sub_43DB50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x34, 4));
	mov(mv, x86::mem(ts->ebx + (ts->ecx*4) + 0x38, 4), ts->eax);
	mov(mv, &ts->esi, x86::mem(ts->ebx + 0x34, 4));
	inc(&ts->esi);
	push(mv, &ts->esp, 0x7A0B4C);
	mov(mv, x86::mem(ts->ebx + 0x34, 4), ts->esi);
	game::sub_43DB50(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x34, 4));
	mov(mv, x86::mem(ts->ebx + (ts->edx*4) + 0x38, 4), ts->eax);
	mov(mv, &ts->edi, x86::mem(ts->ebx + 0x34, 4));
	inc(&ts->edi);
	push(mv, &ts->esp, 0x7A0B34);
	mov(mv, x86::mem(ts->ebx + 0x34, 4), ts->edi);
	game::sub_43DB50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x34, 4));
	mov(mv, x86::mem(ts->ebx + (ts->ecx*4) + 0x38, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x34, 4));
	inc(&ts->ecx);
	push(mv, &ts->esp, 0x7A0B18);
	mov(mv, x86::mem(ts->ebx + 0x34, 4), ts->ecx);
	game::sub_43DB50(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x34, 4));
	mov(mv, x86::mem(ts->ebx + (ts->edx*4) + 0x38, 4), ts->eax);
	mov(mv, &ts->esi, x86::mem(ts->ebx + 0x34, 4));
	inc(&ts->esi);
	push(mv, &ts->esp, 0x7A0B0C);
	mov(mv, x86::mem(ts->ebx + 0x34, 4), ts->esi);
	game::sub_43DB50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x34, 4));
	mov(mv, x86::mem(ts->ebx + (ts->ecx*4) + 0x38, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x34, 4));
	add(&ts->esp, 0x14);
	inc(&ts->eax);
	mov(mv, x86::mem(ts->ebx + 0x34, 4), ts->eax);

loc_57F91A:
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x34, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x571150);
	push(mv, &ts->esp, ts->edx);
	add(&ts->ebx, 0x38);
	push(mv, &ts->esp, ts->ebx);
	game::sub_494D60(ts, mv);
	add(&ts->esp, 0x14);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x248);
	retn(mv, &ts->esp);

loc_57F93C:
	cmp(&ts->eflags, ts->eax, 0x6);
	if (!ts->eflags.zero) {
        goto loc_57FA07;
    }
	mov(&ts->ecx, ts->ebx);
	game::sub_57A650(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	game::sub_60A680(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	push(mv, &ts->esp, 0x1);
	game::sub_5F43B0(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x827E88);
	game::sub_430240(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x10);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x88F298);
	game::sub_5D9BF0(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_57F98E;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x3C, 4));
	goto loc_57F990;

loc_57F98E:
	xor_(&ts->eax, ts->eax);

loc_57F990:
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x81E810);
	game::sub_412BE0(ts, mv);
	mov(&ts->ecx, 0x81E810);
	game::sub_412DB0(ts, mv);
	mov(&ts->ecx, 0x88EB00);
	game::sub_5D6080(ts, mv);
	mov(&ts->ecx, 0x827E88);
	game::sub_4305E0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	mov(&ts->ecx, 0x827E88);
	if (ts->eflags.zero) {
        goto loc_57F9C9;
    }

loc_57F9C2:
	game::sub_437270(ts, mv);
	goto loc_57F9DC;

loc_57F9C9:
	game::sub_4305B0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	mov(&ts->ecx, 0x827E88);
	if (!ts->eflags.zero) {
        goto loc_57F9C2;
    }
	game::sub_430360(ts, mv);

loc_57F9DC:
	mov(&ts->ecx, 0x88EB00);
	game::sub_5E8730(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x88F1B8, 4), ts->ebx);
	mov(mv, x86::mem(0x88EC6E, 1), 0x1);
	mov(mv, x86::mem(0x88F1B4, 4), 0x571150);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x248);
	retn(mv, &ts->esp);

loc_57FA07:
	cmp(&ts->eflags, ts->eax, 0x7);
	if (!ts->eflags.zero) {
        goto loc_57FA32;
    }
	mov(&ts->ecx, 0x81E810);
	game::sub_420030(ts, mv);
	mov(mv, &ts->al, x86::mem(0x865498, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_57FAB6;
    }
	push(mv, &ts->esp, 0x7A0704);
	push(mv, &ts->esp, 0x577F00);
	goto loc_57FAE3;

loc_57FA32:
	cmp(&ts->eflags, ts->eax, 0x8);
	if (!ts->eflags.zero) {
        goto loc_57FAD4;
    }
	mov(&ts->ecx, 0x827E88);
	game::sub_4305E0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	mov(&ts->ecx, 0x827E88);
	if (ts->eflags.zero) {
        goto loc_57FA5F;
    }
	game::sub_437370(ts, mv);
	mov(&ts->ecx, 0x827E88);
	game::sub_4305F0(ts, mv);
	goto loc_57FAA6;

loc_57FA5F:
	game::sub_4305B0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_57FA7E;
    }
	mov(&ts->ecx, 0x827E88);
	game::sub_437370(ts, mv);
	mov(&ts->ecx, 0x827E88);
	game::sub_4305C0(ts, mv);
	goto loc_57FAA6;

loc_57FA7E:
	cmp(mv, &ts->eflags, x86::mem(0x89E7B0, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_57FAA6;
    }
	mov(&ts->ecx, 0x89E7A0);
	game::sub_5ED990(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_57FAA6;
    }
	cmp(mv, &ts->eflags, x86::mem(0x864FAC, 4), ts->edi);
	if (!ts->eflags.zero) {
        goto loc_57FAA6;
    }
	mov(&ts->ecx, 0x827E88);
	game::sub_437160(ts, mv);

loc_57FAA6:
	mov(mv, &ts->al, x86::mem(0x865498, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_57FAB6;
    }
	mov(mv, x86::mem(0x865498, 1), 0x0);

loc_57FAB6:
	push(mv, &ts->esp, 0x7A0704);
	push(mv, &ts->esp, 0x577F00);
	mov(&ts->ecx, 0x865480);
	game::sub_577A80(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x248);
	retn(mv, &ts->esp);

loc_57FAD4:
	cmp(&ts->eflags, ts->eax, 0x9);
	if (!ts->eflags.zero) {
        goto loc_57FAF4;
    }
	push(mv, &ts->esp, 0x7A0AF8);
	push(mv, &ts->esp, 0x5782F0);

loc_57FAE3:
	mov(&ts->ecx, 0x865480);
	mov(mv, x86::mem(0x865498, 1), 0x0);
	game::sub_577A80(ts, mv);

loc_57FAF4:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x248);
	retn(mv, &ts->esp);
}

void sub_57FB00(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x7A0CF4);
	game::sub_57CEF0(ts, mv);
	add(&ts->esp, 0x14);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->eax);
	game::sub_57BD70(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x864F54, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_57FB3E;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_57FB30:
	game::sub_57EF60(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x864F54, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_57FB30;
    }

locret_57FB3E:
	retn(mv, &ts->esp);
}

void sub_57FB40(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x9);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x7A0D38);
	game::sub_57CEF0(ts, mv);
	add(&ts->esp, 0x14);
	mov(&ts->esi, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_57BD70(ts, mv);
	push(mv, &ts->esp, 0x3B);
	push(mv, &ts->esp, 0x7A0D24);
	add(&ts->esi, 0x1C);
	push(mv, &ts->esp, ts->esi);
	game::sub_43DC00(ts, mv);
	push(mv, &ts->esp, 0x7A0D08);
	game::sub_57D900(ts, mv);
	mov(&ts->edi, ts->eax);
	push(mv, &ts->esp, 0x1008);
	push(mv, &ts->esp, ts->edi);
	game::sub_440820(ts, mv);
	mov(&ts->esi, ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x57A500);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7A0D08);
	push(mv, &ts->esp, ts->esi);
	game::sub_57B4A0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x864F54, 4));
	add(&ts->esp, 0x30);
	test(&ts->eflags, ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(0x864F98, 4), ts->esi);
	pop(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero) {
        goto loc_57FBC3;
    }

loc_57FBB5:
	game::sub_57EF60(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x864F54, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_57FBB5;
    }

loc_57FBC3:
	mov(mv, &ts->eax, x86::mem(0x864F98, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_57F000(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x7FA9B8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4944D0(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x7FA9B8, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_490170(ts, mv);
	game::sub_512520(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xAB0E817D);
	game::sub_4901D0(ts, mv);
	add(&ts->esp, 0x24);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_57FC16;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xAB0E817D);
	game::sub_494D30(ts, mv);
	add(&ts->esp, 0x10);

loc_57FC16:
	mov(mv, &ts->eax, x86::mem(0x864F54, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57FC2E;
    }
	nop();

loc_57FC20:
	game::sub_57EF60(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x864F54, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_57FC20;
    }

loc_57FC2E:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x790734);
	game::sub_51CD10(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x790734);
	game::sub_51CD40(ts, mv);
	add(&ts->esp, 0x10);
	game::sub_5D2850(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x864F24, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	if (ts->eflags.zero) {
        goto loc_57FC67;
    }
	mov(mv, &ts->eax, x86::mem(0x7FA9C0, 4));
	push(mv, &ts->esp, ts->eax);
	goto loc_57FC6E;

loc_57FC67:
	mov(mv, &ts->ecx, x86::mem(0x7FA9BC, 4));
	push(mv, &ts->esp, ts->ecx);

loc_57FC6E:
	game::sub_57CEF0(ts, mv);
	add(&ts->esp, 0x14);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->eax);
	push(mv, &ts->esp, 0x0);
	game::sub_57BD70(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x7FA9A4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x6);
	push(mv, &ts->esp, ts->edx);
	game::sub_57CEF0(ts, mv);
	add(&ts->esp, 0x14);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->eax);
	game::sub_57BD70(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x7FA9A8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x6);
	push(mv, &ts->esp, ts->eax);
	game::sub_57CEF0(ts, mv);
	add(&ts->esp, 0x14);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->eax);
	game::sub_57BD70(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x7FA9AC, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x6);
	push(mv, &ts->esp, ts->ecx);
	game::sub_57CEF0(ts, mv);
	add(&ts->esp, 0x14);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->eax);
	game::sub_57BD70(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x7FA9B0, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	game::sub_4944D0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x7FA9B4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_4944D0(ts, mv);
	push(mv, &ts->esp, 0x0);
	game::sub_490170(ts, mv);
	push(mv, &ts->esp, 0x0);
	game::sub_48D9D0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x864F54, 4));
	add(&ts->esp, 0x28);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57FD31;
    }

loc_57FD23:
	game::sub_57EF60(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x864F54, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_57FD23;
    }

loc_57FD31:
	mov(mv, &ts->ecx, x86::mem(0x7FA9D8, 4));
	shl(&ts->ecx, 0xA);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x8A3288);
	game::sub_610720(ts, mv);
	retn(mv, &ts->esp);
}

void sub_57FDA0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x865484, 4));
	sub(&ts->esp, 0x228);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57FDB9;
    }
	mov(mv, x86::mem(0x865484, 4), 0x0);

loc_57FDB9:
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x1);
	mov(mv, x86::mem(0x865498, 1), 0x1);
	mov(mv, x86::mem(0x86549C, 4), 0x7A07FC);
	mov(mv, x86::mem(0x8654A0, 4), 0x0);
	game::sub_57F030(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->esi, 0x86658C);

loc_57FDE4:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_48DC60(ts, mv);
	add(&ts->esi, 0x4);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->esi, 0x8665B8);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_57FDE4;
    }
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x43);
	push(mv, &ts->esp, 0xA6E1B733);
	mov(&ts->ecx, 0x8A2B68);
	game::sub_61B670(ts, mv);
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_57FE6B;
    }
	push(mv, &ts->esp, ts->edi);

loc_57FE18:
	mov(&ts->ecx, ts->esi);
	game::sub_610000(ts, mv);
	mov(&ts->edi, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_43DBB0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x1E3);
	if (!ts->eflags.carry) {
        goto loc_57FE4E;
    }
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x34, 4));
	push(mv, &ts->esp, 0x7A0AAC);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4400D0(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x3C, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_48DC60(ts, mv);
	add(&ts->esp, 0x10);

loc_57FE4E:
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x43);
	push(mv, &ts->esp, 0xA6E1B733);
	mov(&ts->ecx, 0x8A2B68);
	game::sub_61B670(ts, mv);
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_57FE18;
    }
	pop(mv, &ts->esp, ts->edi);

loc_57FE6B:
	mov(mv, &ts->eax, x86::mem(0x8384C8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero) {
        goto loc_57FEE2;
    }
	push(mv, &ts->esp, 0x78F530);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DCC0(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57FEE2;
    }
	mov(mv, &ts->eax, x86::mem(0x863444, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57FEC3;
    }
	mov(mv, &ts->eax, x86::mem(0x86344C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_57FEC3;
    }
	add(&ts->eax, 0x40);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, 0x7A0D6C);
	push(mv, &ts->esp, ts->eax);
	game::sub_4400D0(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, 0x2);
	push(mv, &ts->esp, ts->ecx);
	game::sub_57CEF0(ts, mv);
	add(&ts->esp, 0x20);
	goto loc_57FEF7;

loc_57FEC3:
	mov(mv, &ts->al, x86::mem(0x8635B9, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x2);
	if (ts->eflags.zero) {
        goto loc_57FEEA;
    }
	mov(mv, x86::mem(0x8635B9, 1), 0x0);
	push(mv, &ts->esp, 0x790E08);
	goto loc_57FEEF;

loc_57FEE2:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x2);

loc_57FEEA:
	push(mv, &ts->esp, 0x7A0D4C);

loc_57FEEF:
	game::sub_57CEF0(ts, mv);
	add(&ts->esp, 0x14);

loc_57FEF7:
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->eax);
	push(mv, &ts->esp, 0x5783D0);
	game::sub_57BD70(ts, mv);
	add(&ts->esp, 0x228);
	retn(mv, &ts->esp);
}

void sub_57FF10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0x799FC0);
	game::sub_5379A0(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(0x8654A4, 4), 0x1);
	mov(mv, x86::mem(0x864F8C, 4), 0x7A0DEC);
	game::sub_57A1A0(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x864720, 4));
	mov(&ts->ecx, 0x89E7A0);
	mov(mv, x86::mem(0x864DF4, 4), 0x0);
	game::sub_5ED5F0(ts, mv);
	push(mv, &ts->esp, 0x0);
	game::sub_43E8E0(ts, mv);
	mov(mv, x86::mem(0x864700, 4), ts->eax);
	game::sub_43CB10(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(0x864708, 4), ts->eax);
	game::sub_43E910(ts, mv);
	mov(mv, x86::mem(0x864704, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x8384B0, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	mov(mv, x86::mem(0x864710, 4), ts->ecx);
	game::sub_488730(ts, mv);
	push(mv, &ts->esp, 0x790734);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_57FFA5;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x790734);
	game::sub_555E80(ts, mv);
	add(&ts->esp, 0x8);

loc_57FFA5:
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x7A0DCC);
	game::sub_57D900(ts, mv);
	mov(&ts->edi, ts->eax);
	push(mv, &ts->esp, 0x1008);
	push(mv, &ts->esp, ts->edi);
	game::sub_440820(ts, mv);
	mov(&ts->esi, ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x57A500);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7A0DCC);
	push(mv, &ts->esp, ts->esi);
	game::sub_57B4A0(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(0x864F9C, 4), ts->esi);
	game::sub_57F030(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1);
	game::sub_4FF780(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x865484, 4));
	add(&ts->esp, 0x38);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_580004;
    }
	mov(mv, x86::mem(0x865484, 4), 0x0);

loc_580004:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x9);
	push(mv, &ts->esp, 0x2);
	push(mv, &ts->esp, 0x7A0DB8);
	mov(mv, x86::mem(0x865498, 1), 0x1);
	mov(mv, x86::mem(0x86549C, 4), 0x7A0D98);
	mov(mv, x86::mem(0x8654A0, 4), 0x0);
	game::sub_57CEF0(ts, mv);
	add(&ts->esp, 0x14);
	mov(&ts->esi, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x57FDA0);
	mov(&ts->ecx, ts->esi);
	game::sub_57BD70(ts, mv);
	push(mv, &ts->esp, 0x3B);
	push(mv, &ts->esp, 0x7A0D84);
	add(&ts->esi, 0x1C);
	push(mv, &ts->esp, ts->esi);
	game::sub_43DC00(ts, mv);
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->al, ts->al);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	if (!ts->eflags.zero) {
        goto unknown_libname_7;
    }
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_555F10(ts, mv);
	add(&ts->esp, 0x10);

unknown_libname_7:
	mov(&ts->ecx, 0x81E810);
	goto sub_41AAF0;
}

void sub_580090(x86::thread_state* ts, x86::memory_view* mv) {
	game::sub_4887C0(ts, mv);
	game::sub_5B9910(ts, mv);
	mov(mv, x86::mem(0x864F8C, 4), 0x0);
	game::sub_60C6A0(ts, mv);
	game::sub_4A9310(ts, mv);
	game::sub_558E80(ts, mv);
	mov(mv, &ts->al, x86::mem(0x865480, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, x86::mem(0x8654A4, 4), 0x3);
	if (ts->eflags.zero) {
        goto loc_5800D3;
    }
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	game::sub_480C30(ts, mv);

loc_5800D3:
	game::sub_5B7B10(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5800E6;
    }
	push(mv, &ts->esp, 0x1);
	game::sub_5BE1E0(ts, mv);
	add(&ts->esp, 0x4);

loc_5800E6:
	mov(mv, &ts->eax, x86::mem(0x8650F4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_5800FB;
    }
	cmp(mv, &ts->eflags, x86::mem(0x865220, 4), 0x865220);
	if (ts->eflags.zero) {
        goto loc_580102;
    }

loc_5800FB:
	game::sub_57E800(ts, mv);
	goto loc_5800E6;

loc_580102:
	mov(mv, &ts->eax, x86::mem(0x864F9C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(&ts->edx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_580120;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);

loc_580120:
	mov(mv, x86::mem(0x864F9C, 4), 0x0);
	retn(mv, &ts->esp);
}

void sub_580130(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x8650D0, 4));
	mov(mv, &ts->ecx, x86::mem(0x8650D8, 4));
	push(mv, &ts->esp, ts->esi);
	xor_(&ts->esi, ts->esi);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_580146;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_580172;

loc_580146:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x20);
	game::sub_57E2A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8650D8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	cmp(mv, &ts->eflags, ts->edx, x86::mem(ts->ecx + 0x10, 4));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_580172;
    }
	cmp(mv, &ts->eflags, x86::mem(0x8650D0, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_580172;
    }
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(0x8650D8, 4), ts->ecx);
	mov(mv, x86::mem(0x8650D0, 4), ts->esi);

loc_580172:
	mov(mv, x86::mem(0x864FAC, 4), ts->eax);
	cmp(mv, &ts->eflags, x86::mem(0x8650D0, 4), ts->esi);
	if (!ts->eflags.zero) {
        goto loc_580183;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_5801AF;

loc_580183:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x20);
	game::sub_57E2A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8650D8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	cmp(mv, &ts->eflags, ts->edx, x86::mem(ts->ecx + 0x10, 4));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5801AF;
    }
	cmp(mv, &ts->eflags, x86::mem(0x8650D0, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_5801AF;
    }
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(0x8650D8, 4), ts->ecx);
	mov(mv, x86::mem(0x8650D0, 4), ts->esi);

loc_5801AF:
	mov(mv, x86::mem(0x7FAA18, 4), ts->eax);
	cmp(mv, &ts->eflags, x86::mem(0x8650D0, 4), ts->esi);
	if (!ts->eflags.zero) {
        goto loc_5801C0;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_5801EC;

loc_5801C0:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x20);
	game::sub_57E2A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8650D8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	cmp(mv, &ts->eflags, ts->edx, x86::mem(ts->ecx + 0x10, 4));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5801EC;
    }
	cmp(mv, &ts->eflags, x86::mem(0x8650D0, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_5801EC;
    }
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(0x8650D8, 4), ts->ecx);
	mov(mv, x86::mem(0x8650D0, 4), ts->esi);

loc_5801EC:
	mov(mv, x86::mem(0x7FAA1C, 4), ts->eax);
	cmp(mv, &ts->eflags, x86::mem(0x8650D0, 4), ts->esi);
	if (!ts->eflags.zero) {
        goto loc_5801FD;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_580229;

loc_5801FD:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x20);
	game::sub_57E2A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8650D8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	cmp(mv, &ts->eflags, ts->edx, x86::mem(ts->ecx + 0x10, 4));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_580229;
    }
	cmp(mv, &ts->eflags, x86::mem(0x8650D0, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_580229;
    }
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(0x8650D8, 4), ts->ecx);
	mov(mv, x86::mem(0x8650D0, 4), ts->esi);

loc_580229:
	mov(mv, x86::mem(0x864FB0, 4), ts->eax);
	cmp(mv, &ts->eflags, x86::mem(0x8650D0, 4), ts->esi);
	if (!ts->eflags.zero) {
        goto loc_58023A;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_580266;

loc_58023A:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x20);
	game::sub_57E2A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8650D8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	cmp(mv, &ts->eflags, ts->edx, x86::mem(ts->ecx + 0x10, 4));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_580266;
    }
	cmp(mv, &ts->eflags, x86::mem(0x8650D0, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_580266;
    }
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(0x8650D8, 4), ts->ecx);
	mov(mv, x86::mem(0x8650D0, 4), ts->esi);

loc_580266:
	mov(mv, x86::mem(0x7FAA20, 4), ts->eax);
	cmp(mv, &ts->eflags, x86::mem(0x8650D0, 4), ts->esi);
	if (!ts->eflags.zero) {
        goto loc_580277;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_5802A3;

loc_580277:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x20);
	game::sub_57E2A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8650D8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	cmp(mv, &ts->eflags, ts->edx, x86::mem(ts->ecx + 0x10, 4));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5802A3;
    }
	cmp(mv, &ts->eflags, x86::mem(0x8650D0, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_5802A3;
    }
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(0x8650D8, 4), ts->ecx);
	mov(mv, x86::mem(0x8650D0, 4), ts->esi);

loc_5802A3:
	mov(mv, x86::mem(0x864FB4, 4), ts->eax);
	cmp(mv, &ts->eflags, x86::mem(0x8650D0, 4), ts->esi);
	if (!ts->eflags.zero) {
        goto loc_5802B4;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_5802E0;

loc_5802B4:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x20);
	game::sub_57E2A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8650D8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	cmp(mv, &ts->eflags, ts->edx, x86::mem(ts->ecx + 0x10, 4));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5802E0;
    }
	cmp(mv, &ts->eflags, x86::mem(0x8650D0, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_5802E0;
    }
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(0x8650D8, 4), ts->ecx);
	mov(mv, x86::mem(0x8650D0, 4), ts->esi);

loc_5802E0:
	mov(mv, x86::mem(0x7FAA28, 4), ts->eax);
	cmp(mv, &ts->eflags, x86::mem(0x8650D0, 4), ts->esi);
	if (!ts->eflags.zero) {
        goto loc_5802F1;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_58031D;

loc_5802F1:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x20);
	game::sub_57E2A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8650D8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	cmp(mv, &ts->eflags, ts->edx, x86::mem(ts->ecx + 0x10, 4));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_58031D;
    }
	cmp(mv, &ts->eflags, x86::mem(0x8650D0, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_58031D;
    }
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(0x8650D8, 4), ts->ecx);
	mov(mv, x86::mem(0x8650D0, 4), ts->esi);

loc_58031D:
	mov(mv, x86::mem(0x864FBC, 4), ts->eax);
	cmp(mv, &ts->eflags, x86::mem(0x8650D0, 4), ts->esi);
	if (!ts->eflags.zero) {
        goto loc_58032E;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_58035A;

loc_58032E:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x20);
	game::sub_57E2A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8650D8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	cmp(mv, &ts->eflags, ts->edx, x86::mem(ts->ecx + 0x10, 4));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_58035A;
    }
	cmp(mv, &ts->eflags, x86::mem(0x8650D0, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_58035A;
    }
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(0x8650D8, 4), ts->ecx);
	mov(mv, x86::mem(0x8650D0, 4), ts->esi);

loc_58035A:
	mov(mv, x86::mem(0x7FAA30, 4), ts->eax);
	cmp(mv, &ts->eflags, x86::mem(0x8650D0, 4), ts->esi);
	if (!ts->eflags.zero) {
        goto loc_58036B;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_580397;

loc_58036B:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x20);
	game::sub_57E2A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8650D8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	cmp(mv, &ts->eflags, ts->edx, x86::mem(ts->ecx + 0x10, 4));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_580397;
    }
	cmp(mv, &ts->eflags, x86::mem(0x8650D0, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_580397;
    }
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(0x8650D8, 4), ts->ecx);
	mov(mv, x86::mem(0x8650D0, 4), ts->esi);

loc_580397:
	mov(mv, x86::mem(0x7FAA34, 4), ts->eax);
	cmp(mv, &ts->eflags, x86::mem(0x8650D0, 4), ts->esi);
	if (!ts->eflags.zero) {
        goto loc_5803A8;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_5803D4;

loc_5803A8:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x20);
	game::sub_57E2A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8650D8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	cmp(mv, &ts->eflags, ts->edx, x86::mem(ts->ecx + 0x10, 4));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5803D4;
    }
	cmp(mv, &ts->eflags, x86::mem(0x8650D0, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_5803D4;
    }
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(0x8650D8, 4), ts->ecx);
	mov(mv, x86::mem(0x8650D0, 4), ts->esi);

loc_5803D4:
	mov(mv, x86::mem(0x7FAA38, 4), ts->eax);
	cmp(mv, &ts->eflags, x86::mem(0x8650D0, 4), ts->esi);
	if (!ts->eflags.zero) {
        goto loc_5803E5;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_580411;

loc_5803E5:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x20);
	game::sub_57E2A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8650D8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	cmp(mv, &ts->eflags, ts->edx, x86::mem(ts->ecx + 0x10, 4));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_580411;
    }
	cmp(mv, &ts->eflags, x86::mem(0x8650D0, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_580411;
    }
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(0x8650D8, 4), ts->ecx);
	mov(mv, x86::mem(0x8650D0, 4), ts->esi);

loc_580411:
	mov(mv, x86::mem(0x7FAA48, 4), ts->eax);
	cmp(mv, &ts->eflags, x86::mem(0x8650D0, 4), ts->esi);
	if (!ts->eflags.zero) {
        goto loc_580422;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_58044E;

loc_580422:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x20);
	game::sub_57E2A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8650D8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	cmp(mv, &ts->eflags, ts->edx, x86::mem(ts->ecx + 0x10, 4));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_58044E;
    }
	cmp(mv, &ts->eflags, x86::mem(0x8650D0, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_58044E;
    }
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(0x8650D8, 4), ts->ecx);
	mov(mv, x86::mem(0x8650D0, 4), ts->esi);

loc_58044E:
	mov(mv, x86::mem(0x7FAA4C, 4), ts->eax);
	cmp(mv, &ts->eflags, x86::mem(0x8650D0, 4), ts->esi);
	if (!ts->eflags.zero) {
        goto loc_58045F;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_58048B;

loc_58045F:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x20);
	game::sub_57E2A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8650D8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	cmp(mv, &ts->eflags, ts->edx, x86::mem(ts->ecx + 0x10, 4));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_58048B;
    }
	cmp(mv, &ts->eflags, x86::mem(0x8650D0, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_58048B;
    }
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(0x8650D8, 4), ts->ecx);
	mov(mv, x86::mem(0x8650D0, 4), ts->esi);

loc_58048B:
	mov(mv, x86::mem(0x7FAA54, 4), ts->eax);
	cmp(mv, &ts->eflags, x86::mem(0x8650D0, 4), ts->esi);
	if (!ts->eflags.zero) {
        goto loc_58049C;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_5804C8;

loc_58049C:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x20);
	game::sub_57E2A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8650D8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	cmp(mv, &ts->eflags, ts->edx, x86::mem(ts->ecx + 0x10, 4));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5804C8;
    }
	cmp(mv, &ts->eflags, x86::mem(0x8650D0, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_5804C8;
    }
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(0x8650D8, 4), ts->ecx);
	mov(mv, x86::mem(0x8650D0, 4), ts->esi);

loc_5804C8:
	mov(mv, x86::mem(0x7FAA58, 4), ts->eax);
	cmp(mv, &ts->eflags, x86::mem(0x8650D0, 4), ts->esi);
	if (!ts->eflags.zero) {
        goto loc_5804D9;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_580505;

loc_5804D9:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x20);
	game::sub_57E2A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8650D8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	cmp(mv, &ts->eflags, ts->edx, x86::mem(ts->ecx + 0x10, 4));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_580505;
    }
	cmp(mv, &ts->eflags, x86::mem(0x8650D0, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_580505;
    }
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(0x8650D8, 4), ts->ecx);
	mov(mv, x86::mem(0x8650D0, 4), ts->esi);

loc_580505:
	mov(mv, x86::mem(0x864FF4, 4), ts->eax);
	cmp(mv, &ts->eflags, x86::mem(0x8650D0, 4), ts->esi);
	if (!ts->eflags.zero) {
        goto loc_580516;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_580542;

loc_580516:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x20);
	game::sub_57E2A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8650D8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	cmp(mv, &ts->eflags, ts->edx, x86::mem(ts->ecx + 0x10, 4));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_580542;
    }
	cmp(mv, &ts->eflags, x86::mem(0x8650D0, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_580542;
    }
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(0x8650D8, 4), ts->ecx);
	mov(mv, x86::mem(0x8650D0, 4), ts->esi);

loc_580542:
	mov(mv, x86::mem(0x7FAA5C, 4), ts->eax);
	cmp(mv, &ts->eflags, x86::mem(0x8650D0, 4), ts->esi);
	if (!ts->eflags.zero) {
        goto loc_580553;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_58057F;

loc_580553:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x20);
	game::sub_57E2A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8650D8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	cmp(mv, &ts->eflags, ts->edx, x86::mem(ts->ecx + 0x10, 4));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_58057F;
    }
	cmp(mv, &ts->eflags, x86::mem(0x8650D0, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_58057F;
    }
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(0x8650D8, 4), ts->ecx);
	mov(mv, x86::mem(0x8650D0, 4), ts->esi);

loc_58057F:
	mov(mv, x86::mem(0x865050, 4), ts->eax);
	cmp(mv, &ts->eflags, x86::mem(0x8650D0, 4), ts->esi);
	if (!ts->eflags.zero) {
        goto loc_580590;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_5805BC;

loc_580590:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x20);
	game::sub_57E2A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8650D8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	cmp(mv, &ts->eflags, ts->edx, x86::mem(ts->ecx + 0x10, 4));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5805BC;
    }
	cmp(mv, &ts->eflags, x86::mem(0x8650D0, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_5805BC;
    }
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(0x8650D8, 4), ts->ecx);
	mov(mv, x86::mem(0x8650D0, 4), ts->esi);

loc_5805BC:
	mov(mv, x86::mem(0x865098, 4), ts->eax);
	cmp(mv, &ts->eflags, x86::mem(0x8650D0, 4), ts->esi);
	if (!ts->eflags.zero) {
        goto loc_5805CD;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_5805F9;

loc_5805CD:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x20);
	game::sub_57E2A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8650D8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	cmp(mv, &ts->eflags, ts->edx, x86::mem(ts->ecx + 0x10, 4));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5805F9;
    }
	cmp(mv, &ts->eflags, x86::mem(0x8650D0, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_5805F9;
    }
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(0x8650D8, 4), ts->ecx);
	mov(mv, x86::mem(0x8650D0, 4), ts->esi);

loc_5805F9:
	mov(mv, x86::mem(0x7FAAA8, 4), ts->eax);
	cmp(mv, &ts->eflags, x86::mem(0x8650D0, 4), ts->esi);
	if (!ts->eflags.zero) {
        goto loc_58060A;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_580636;

loc_58060A:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x20);
	game::sub_57E2A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8650D8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	cmp(mv, &ts->eflags, ts->edx, x86::mem(ts->ecx + 0x10, 4));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_580636;
    }
	cmp(mv, &ts->eflags, x86::mem(0x8650D0, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_580636;
    }
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(0x8650D8, 4), ts->ecx);
	mov(mv, x86::mem(0x8650D0, 4), ts->esi);

loc_580636:
	mov(mv, x86::mem(0x7FAAB0, 4), ts->eax);
	cmp(mv, &ts->eflags, x86::mem(0x8650D0, 4), ts->esi);
	if (!ts->eflags.zero) {
        goto loc_580647;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_580673;

loc_580647:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x20);
	game::sub_57E2A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8650D8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	cmp(mv, &ts->eflags, ts->edx, x86::mem(ts->ecx + 0x10, 4));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_580673;
    }
	cmp(mv, &ts->eflags, x86::mem(0x8650D0, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_580673;
    }
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(0x8650D8, 4), ts->ecx);
	mov(mv, x86::mem(0x8650D0, 4), ts->esi);

loc_580673:
	mov(mv, x86::mem(0x8650A8, 4), ts->eax);
	cmp(mv, &ts->eflags, x86::mem(0x8650D0, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_5806A9;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x20);
	game::sub_57E2A0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8650D8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	cmp(mv, &ts->eflags, ts->ecx, x86::mem(ts->eax + 0x10, 4));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5806A9;
    }
	cmp(mv, &ts->eflags, x86::mem(0x8650D0, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_5806A9;
    }
	mov(mv, x86::mem(0x8650D8, 4), ts->esi);
	mov(mv, x86::mem(0x8650D0, 4), ts->esi);

loc_5806A9:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_5806B0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7FB720, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esi + 0x74, 4));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_580874;
    }
	add(&ts->eax, 0x12C);
	mov(mv, x86::mem(ts->esi + 0x74, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_580850;
    }
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esi + 0xA8, 4));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_580850;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79545C);
	mov(&ts->ecx, ts->esi);
	game::sub_578FD0(ts, mv);
	mov(&ts->ebp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB4, 4));
	xor_(&ts->edi, ts->edi);
	xor_(&ts->ebx, ts->ebx);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_580753;
    }

loc_580704:
	cmp(mv, &ts->eflags, ts->ebx, x86::mem(ts->esi + 0xC0, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_580742;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x7A097C);
	mov(&ts->ecx, ts->esi);
	game::sub_578FD0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x30, 4));
	mov(&ts->ecx, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x34, 4));
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_580751;
    }
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_58073E;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x1D8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x1D8, 4));
	fcompp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_580744;
    }

loc_58073E:
	mov(&ts->edi, ts->ecx);
	goto loc_580744;

loc_580742:
	xor_(&ts->edi, ts->edi);

loc_580744:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB4, 4));
	inc(&ts->ebx);
	cmp(&ts->eflags, ts->ebx, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_580704;
    }
	goto loc_580753;

loc_580751:
	mov(&ts->edi, ts->ecx);

loc_580753:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x1D8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_580815;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_580815;
    }
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_580793;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x1D8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x1D8, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_580815;
    }

loc_580793:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xC0, 4), ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_5807BD;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x94, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x90, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edi);
	mov(mv, x86::mem(ts->edi + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->edi, 4), ts->eax);
	goto loc_5807D1;

loc_5807BD:
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_5807D7;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x34, 4));
	cmp(mv, &ts->eflags, ts->ecx, x86::mem(ts->ebp + 0x30, 4));
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_5807D7;
    }
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_579050(ts, mv);

loc_5807D1:
	dec(mv, x86::mem(ts->esi + 0xC0, 4));

loc_5807D7:
	lea(mv, &ts->edx, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, 0x7A097C);
	push(mv, &ts->esp, ts->edx);
	game::sub_43DBD0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x86518C, 4));
	mov(mv, &ts->eax, x86::mem(0x7FB724, 4));
	mov(mv, x86::mem(ts->ebp + 0x2C, 4), ts->ecx);
	mov(mv, x86::mem(ts->ebp + 0x34, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC0, 4));
	add(&ts->esp, 0x8);
	dec(&ts->ecx);
	inc(&ts->eax);
	mov(mv, x86::mem(ts->esi + 0xB8, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0xC0, 4), ts->eax);
	goto loc_58084D;

loc_580815:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79545C);
	mov(&ts->ecx, ts->esi);
	game::sub_578FD0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_580847;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x94, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x90, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);

loc_580847:
	dec(mv, x86::mem(ts->esi + 0xB8, 4));

loc_58084D:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);

loc_580850:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xB8, 4));
	cmp(mv, &ts->eflags, ts->edx, x86::mem(ts->esi + 0xA8, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_580874;
    }
	push(mv, &ts->esp, 0x79545C);
	mov(&ts->ecx, ts->esi);
	game::sub_57C080(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_580874;
    }
	inc(mv, x86::mem(ts->esi + 0xB8, 4));

loc_580874:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_580880(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x8650D0, 4));
	sub(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->ebp);
	xor_(&ts->ebp, ts->ebp);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_580897;
    }
	cmp(mv, &ts->eflags, x86::mem(0x864FEC, 4), ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_58089E;
    }

loc_580897:
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_58089E:
	mov(mv, &ts->eax, x86::mem(0x8650D8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x8);
	add(&ts->eax, 0x24);
	push(mv, &ts->esp, 0x8650E0);
	push(mv, &ts->esp, ts->eax);
	xor_(&ts->esi, ts->esi);
	game::sub_57DA10(ts, mv);
	push(mv, &ts->esp, 0xB);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	mov(&ts->edi, ts->eax);
	push(mv, &ts->esp, 0xC);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(0x8650E8, 4), ts->edi);
	game::sub_573090(ts, mv);
	add(&ts->esp, 0x18);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5808EE;
    }

loc_5808D4:
	push(mv, &ts->esp, 0xB);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, 0xC);
	push(mv, &ts->esp, ts->edx);
	inc(&ts->esi);
	game::sub_573090(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_5808D4;
    }
	cmp(&ts->eflags, ts->esi, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_58090C;
    }

loc_5808EE:
	push(mv, &ts->esp, ts->edi);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x8650E8, 4), ts->ebp);
	mov(mv, x86::mem(0x8650E0, 4), ts->ebp);
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_58090C:
	cmp(&ts->eflags, ts->esi, ts->ebp);
	mov(mv, x86::mem(0x8650E4, 4), ts->ebp);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_58092A;
    }

loc_580916:
	push(mv, &ts->esp, 0xB);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, 0xC);
	push(mv, &ts->esp, ts->eax);
	game::sub_573090(ts, mv);
	add(&ts->esp, 0xC);
	dec(&ts->esi);
	if (!ts->eflags.zero) {
        goto loc_580916;
    }

loc_58092A:
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	game::sub_440820(ts, mv);
	mov(&ts->edi, ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	game::sub_579200(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	game::sub_440820(ts, mv);
	mov(&ts->esi, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	game::sub_579200(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, 0x7A082C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DBD0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8651A0, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	mov(mv, x86::mem(0x8651A0, 4), ts->esi);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi, 4), 0x86519C);
	mov(mv, &ts->eax, x86::mem(0x8651A0, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->edi);
	mov(mv, x86::mem(0x8651A0, 4), ts->edi);
	mov(mv, x86::mem(ts->edi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->edi, 4), 0x86519C);
	mov(mv, &ts->edx, x86::mem(0x8650E8, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_440540(ts, mv);
	add(&ts->esp, 0x2C);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x8650D0, 4), ts->ebp);
	mov(mv, x86::mem(0x8650E8, 4), ts->ebp);
	mov(mv, x86::mem(0x8650E0, 4), ts->ebp);
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);
}

void sub_5809C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x8650D0, 4));
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	xor_(&ts->ebp, ts->ebp);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(0x865980, 4), ts->ebp);
	if (ts->eflags.zero) {
        goto loc_580A5A;
    }
	push(mv, &ts->esp, 0x2);
	push(mv, &ts->esp, 0x8);
	game::sub_57E3B0(ts, mv);
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_580B3A;
    }
	mov(&ts->esi, ts->eax);

loc_5809F2:
	cmp(mv, &ts->eflags, x86::mem(0x8650D0, 4), ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_5809FE;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_580A2E;

loc_5809FE:
	mov(mv, &ts->ecx, x86::mem(0x8650D8, 4));
	push(mv, &ts->esp, 0x2);
	push(mv, &ts->esp, 0x13);
	game::sub_57E2A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8650D8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	cmp(mv, &ts->eflags, ts->edx, x86::mem(ts->ecx + 0x10, 4));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_580A2E;
    }
	cmp(mv, &ts->eflags, x86::mem(0x8650D0, 4), ts->ebp);
	if (ts->eflags.zero) {
        goto loc_580A2E;
    }
	mov(mv, x86::mem(0x8650D8, 4), ts->ebp);
	mov(mv, x86::mem(0x8650D0, 4), ts->ebp);

loc_580A2E:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x865980);
	push(mv, &ts->esp, ts->eax);
	game::sub_579390(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8651AC, 4));
	mov(mv, &ts->ecx, x86::mem(0x8709FC, 4));
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_580A52;
    }
	mov(mv, x86::mem(0x8709FC, 4), ts->eax);

loc_580A52:
	dec(&ts->esi);
	if (!ts->eflags.zero) {
        goto loc_5809F2;
    }
	goto loc_580B3A;

loc_580A5A:
	mov(mv, &ts->eax, x86::mem(0x8650B8, 4));
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_580A6C;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x24, 4), ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_580B3F;
    }

loc_580A6C:
	game::nullsub_1(ts, mv);
	game::sub_5B7FF0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_580AE8;
    }
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_580A80:
	xor_(&ts->edi, ts->edi);
	mov(&ts->esi, 0x8655A0);

loc_580A87:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebp);
	game::sub_5CFD60(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x865980);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_57B0B0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_580ACB;
    }
	mov(mv, &ts->eax, x86::mem(0x8651AC, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(0x8709FC, 4));
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_580ACB;
    }
	mov(mv, x86::mem(0x8709FC, 4), ts->eax);

loc_580ACB:
	add(&ts->esi, 0x1C8);
	inc(&ts->edi);
	cmp(&ts->eflags, ts->esi, 0x865930);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_580A87;
    }
	game::nullsub_1(ts, mv);
	game::sub_5B7FF0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_580A80;
    }

loc_580AE8:
	cmp(mv, &ts->eflags, x86::mem(0x8650D4, 4), ts->ebp);
	mov(mv, &ts->edi, x86::mem(0x865980, 4));
	if (ts->eflags.zero) {
        goto loc_580B06;
    }
	mov(mv, &ts->ecx, x86::mem(0x8650DC, 4));
	push(mv, &ts->esp, 0x2);
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->edi);
	game::sub_57D5B0(ts, mv);

loc_580B06:
	cmp(&ts->eflags, ts->edi, ts->ebp);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_580B3A;
    }
	mov(&ts->esi, 0x865984);
	nop();

loc_580B10:
	cmp(mv, &ts->eflags, x86::mem(0x8650D4, 4), ts->ebp);
	if (ts->eflags.zero) {
        goto loc_580B34;
    }
	movzx(mv, &ts->ecx, x86::mem(ts->esi + 0x2, 1));
	movzx(mv, &ts->edx, x86::mem(ts->esi, 2));
	push(mv, &ts->esp, 0x2);
	shl(&ts->ecx, 0x10);
	add(&ts->ecx, ts->edx);
	push(mv, &ts->esp, 0x13);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8650DC, 4));
	game::sub_57D5B0(ts, mv);

loc_580B34:
	add(&ts->esi, 0xC);
	dec(&ts->edi);
	if (!ts->eflags.zero) {
        goto loc_580B10;
    }

loc_580B3A:
	mov(mv, &ts->eax, x86::mem(0x8650B8, 4));

loc_580B3F:
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_580D20;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x28, 4));
	cmp(mv, &ts->eflags, ts->ecx, x86::mem(ts->eax + 0x30, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_580B9F;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x2C, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebp);
	lea(mv, &ts->esi, x86::mem(ts->eax + 0x2C, 4));
	if (ts->eflags.zero) {
        goto loc_580B62;
    }
	dec(&ts->ecx);
	xor_(&ts->dl, ts->dl);
	mov(mv, x86::mem(ts->esi, 4), ts->ecx);
	xor_(&ts->al, ts->al);
	goto loc_580B7B;

loc_580B62:
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x28, 4));
	mov(mv, &ts->dl, x86::mem(ts->eax + (ts->ecx*2) + 0x35, 1));
	mov(mv, &ts->bl, x86::mem(ts->eax + (ts->ecx*2) + 0x34, 1));
	inc(&ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi, 4), 0x2);
	mov(&ts->al, ts->bl);
	xor_(&ts->ebp, ts->ebp);

loc_580B7B:
	movzx(&ts->eax, ts->al);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_580B9A;
    }
	movzx(&ts->edx, ts->dl);
	push(mv, &ts->esp, 0x1);
	shl(&ts->edx, 0x8);
	add(&ts->edx, ts->eax);
	push(mv, &ts->esp, 0x865980);
	push(mv, &ts->esp, ts->edx);
	game::sub_579390(ts, mv);
	add(&ts->esp, 0xC);

loc_580B9A:
	mov(mv, &ts->eax, x86::mem(0x8650B8, 4));

loc_580B9F:
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), ts->ebp);
	if (ts->eflags.zero) {
        goto loc_580C4A;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x1C, 4), ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_580C4A;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), ts->ebp);
	if (ts->eflags.zero) {
        goto loc_580BE8;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebp);
	lea(mv, &ts->edi, x86::mem(ts->eax + 0x8, 4));
	if (!ts->eflags.zero) {
        goto loc_580BE8;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8C, 4));
	lea(mv, &ts->esi, x86::mem(ts->eax + 0x8C, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x8);
	game::sub_575270(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x28, 4), ts->ebp);
	if (ts->eflags.zero) {
        goto loc_580BDF;
    }
	mov(mv, x86::mem(ts->edi, 4), 0x1);

loc_580BDF:
	mov(&ts->ecx, ts->eax);
	mov(mv, &ts->eax, x86::mem(0x8650B8, 4));
	goto loc_580BEA;

loc_580BE8:
	xor_(&ts->ecx, ts->ecx);

loc_580BEA:
	cmp(&ts->eflags, ts->ecx, ts->ebp);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_580D20;
    }
	mov(&ts->ebx, ts->ecx);
	goto loc_580C00;

loc_580BF6:
	mov(mv, &ts->eax, x86::mem(0x8650B8, 4));
	goto loc_580C00;

loc_580C00:
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), ts->ebp);
	if (ts->eflags.zero) {
        goto loc_580C31;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebp);
	lea(mv, &ts->edi, x86::mem(ts->eax + 0x8, 4));
	if (!ts->eflags.zero) {
        goto loc_580C31;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8C, 4));
	lea(mv, &ts->esi, x86::mem(ts->eax + 0x8C, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x13);
	game::sub_575270(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->edx + 0x28, 4), ts->ebp);
	if (ts->eflags.zero) {
        goto loc_580C33;
    }
	mov(mv, x86::mem(ts->edi, 4), 0x1);
	goto loc_580C33;

loc_580C31:
	xor_(&ts->eax, ts->eax);

loc_580C33:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x865980);
	push(mv, &ts->esp, ts->eax);
	game::sub_579390(ts, mv);
	add(&ts->esp, 0xC);
	dec(&ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_580BF6;
    }
	goto loc_580D20;

loc_580C4A:
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, &ts->ebx, x86::mem(0x865980, 4));
	lea(mv, &ts->edi, x86::mem(ts->eax + 0x4, 4));
	mov(&ts->ebp, ts->eax);
	if (ts->eflags.zero) {
        goto loc_580CA2;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8C, 4));
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->esi, x86::mem(ts->eax + 0x8C, 4));
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->ebx);
	game::sub_575140(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	lea(mv, &ts->ecx, x86::mem(0xFFFFFFBC, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x8, 4), ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_580C9D;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x80, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->edi, 4), 0x0);
	if (!ts->eflags.zero) {
        goto loc_580C9D;
    }
	mov(mv, x86::mem(ts->ebp + 0x80, 4), 0x1);

loc_580C9D:
	mov(mv, &ts->eax, x86::mem(0x8650B8, 4));

loc_580CA2:
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_580D1E;
    }
	mov(&ts->edi, 0x865984);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	nop();

loc_580CB0:
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	lea(mv, &ts->ebx, x86::mem(ts->eax + 0x4, 4));
	mov(&ts->ebp, ts->eax);
	if (ts->eflags.zero) {
        goto loc_580D10;
    }
	movzx(mv, &ts->edx, x86::mem(ts->edi + 0x2, 1));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8C, 4));
	lea(mv, &ts->esi, x86::mem(ts->eax + 0x8C, 4));
	movzx(mv, &ts->eax, x86::mem(ts->edi, 2));
	push(mv, &ts->esp, 0x0);
	shl(&ts->edx, 0x10);
	push(mv, &ts->esp, 0x13);
	add(&ts->edx, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_575140(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	lea(mv, &ts->edx, x86::mem(0xFFFFFFBC, 4));
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_580D0B;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x80, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ebx, 4), 0x0);
	if (!ts->eflags.zero) {
        goto loc_580D0B;
    }
	mov(mv, x86::mem(ts->ebp + 0x80, 4), 0x1);

loc_580D0B:
	mov(mv, &ts->eax, x86::mem(0x8650B8, 4));

loc_580D10:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	add(&ts->edi, 0xC);
	dec(&ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_580CB0;
    }

loc_580D1E:
	xor_(&ts->ebp, ts->ebp);

loc_580D20:
	mov(mv, &ts->eax, x86::mem(0x865980, 4));
	xor_(&ts->edi, ts->edi);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_580D7B;
    }
	mov(&ts->esi, 0x865988);

loc_580D30:
	movzx(mv, &ts->edx, x86::mem(ts->esi - 0x2, 1));
	xor_(&ts->ecx, ts->ecx);
	mov(mv, &ts->cx, x86::mem(ts->esi - 0x4, 2));
	mov(&ts->eax, ts->ecx);
	and_(&ts->eax, 0xFF);
	if (ts->eflags.zero) {
        goto loc_580D6E;
    }
	mov(&ts->ebx, ts->edx);
	imul(&ts->ebx, ts->ebx, 0x1C8);
	mov(&ts->cl, ts->ch);
	mov(mv, x86::mem(ts->esp + 0x14, 1), ts->cl);
	mov(mv, x86::mem(ts->ebx + (ts->eax) + 0x865658, 1), ts->cl);
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_580D6E;
    }
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	call(ts, mv, ts->ecx);
	add(&ts->esp, 0x10);

loc_580D6E:
	mov(mv, &ts->eax, x86::mem(0x865980, 4));
	inc(&ts->edi);
	add(&ts->esi, 0xC);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_580D30;
    }

loc_580D7B:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_580D90(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x200);
	game::sub_57D6E0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8650D4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_580DB3;
    }
	push(mv, &ts->esp, 0x57D820);
	game::sub_43BD40(ts, mv);
	add(&ts->esp, 0x4);
	goto loc_580DC1;

loc_580DB3:
	mov(mv, &ts->eax, x86::mem(0x8650D0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_580DC1;
    }
	game::sub_57E690(ts, mv);

loc_580DC1:
	mov(mv, &ts->eax, x86::mem(0x7FA734, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DBD0(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edx);
	game::sub_57E4D0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8650D0, 4));
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_580DEE;
    }
	game::sub_580130(ts, mv);

loc_580DEE:
	add(&ts->esp, 0x200);
	goto loc_57DDF0;

loc_57DDF0:
	mov(mv, &ts->eax, x86::mem(0x8650D4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_57E0FB;
    }
	mov(mv, &ts->eax, x86::mem(0x864FAC, 4));
	mov(mv, &ts->ecx, x86::mem(0x8650DC, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->eax);
	game::sub_57D5B0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8650D4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_57E0FB;
    }
	mov(mv, &ts->ecx, x86::mem(0x7FAA18, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8650DC, 4));
	game::sub_57D5B0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8650D4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_57E0FB;
    }
	mov(mv, &ts->edx, x86::mem(0x7FAA1C, 4));
	mov(mv, &ts->ecx, x86::mem(0x8650DC, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->edx);
	game::sub_57D5B0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8650D4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_57E0FB;
    }
	mov(mv, &ts->eax, x86::mem(0x864FB0, 4));
	mov(mv, &ts->ecx, x86::mem(0x8650DC, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->eax);
	game::sub_57D5B0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8650D4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_57E0FB;
    }
	mov(mv, &ts->ecx, x86::mem(0x7FAA20, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8650DC, 4));
	game::sub_57D5B0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8650D4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_57E0FB;
    }
	mov(mv, &ts->edx, x86::mem(0x864FB4, 4));
	mov(mv, &ts->ecx, x86::mem(0x8650DC, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->edx);
	game::sub_57D5B0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8650D4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_57E0FB;
    }
	mov(mv, &ts->eax, x86::mem(0x7FAA28, 4));
	mov(mv, &ts->ecx, x86::mem(0x8650DC, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->eax);
	game::sub_57D5B0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8650D4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_57E0FB;
    }
	mov(mv, &ts->ecx, x86::mem(0x864FBC, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8650DC, 4));
	game::sub_57D5B0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8650D4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_57E0FB;
    }
	mov(mv, &ts->edx, x86::mem(0x7FAA30, 4));
	mov(mv, &ts->ecx, x86::mem(0x8650DC, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->edx);
	game::sub_57D5B0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8650D4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_57E0FB;
    }
	mov(mv, &ts->eax, x86::mem(0x7FAA34, 4));
	mov(mv, &ts->ecx, x86::mem(0x8650DC, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->eax);
	game::sub_57D5B0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8650D4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_57E0FB;
    }
	mov(mv, &ts->ecx, x86::mem(0x7FAA38, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8650DC, 4));
	game::sub_57D5B0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8650D4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_57E0FB;
    }
	mov(mv, &ts->edx, x86::mem(0x7FAA48, 4));
	mov(mv, &ts->ecx, x86::mem(0x8650DC, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->edx);
	game::sub_57D5B0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8650D4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_57E0FB;
    }
	mov(mv, &ts->eax, x86::mem(0x7FAA4C, 4));
	mov(mv, &ts->ecx, x86::mem(0x8650DC, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->eax);
	game::sub_57D5B0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8650D4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_57E0FB;
    }
	mov(mv, &ts->ecx, x86::mem(0x7FAA54, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8650DC, 4));
	game::sub_57D5B0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8650D4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_57E0FB;
    }
	mov(mv, &ts->edx, x86::mem(0x7FAA58, 4));
	mov(mv, &ts->ecx, x86::mem(0x8650DC, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->edx);
	game::sub_57D5B0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8650D4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_57E0FB;
    }
	mov(mv, &ts->eax, x86::mem(0x864FF4, 4));
	mov(mv, &ts->ecx, x86::mem(0x8650DC, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->eax);
	game::sub_57D5B0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8650D4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_57E0FB;
    }
	mov(mv, &ts->ecx, x86::mem(0x7FAA5C, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8650DC, 4));
	game::sub_57D5B0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8650D4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_57E0FB;
    }
	mov(mv, &ts->edx, x86::mem(0x865050, 4));
	mov(mv, &ts->ecx, x86::mem(0x8650DC, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->edx);
	game::sub_57D5B0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8650D4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_57E0FB;
    }
	mov(mv, &ts->eax, x86::mem(0x865098, 4));
	mov(mv, &ts->ecx, x86::mem(0x8650DC, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->eax);
	game::sub_57D5B0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8650D4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_57E0FB;
    }
	mov(mv, &ts->ecx, x86::mem(0x7FAAA8, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8650DC, 4));
	game::sub_57D5B0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8650D4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_57E0FB;
    }
	mov(mv, &ts->edx, x86::mem(0x7FAAB0, 4));
	mov(mv, &ts->ecx, x86::mem(0x8650DC, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->edx);
	game::sub_57D5B0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8650D4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_57E0FB;
    }
	mov(mv, &ts->eax, x86::mem(0x8650A8, 4));
	mov(mv, &ts->ecx, x86::mem(0x8650DC, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->eax);
	game::sub_57D5B0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8650D4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_57E0FB;
    }
	mov(mv, &ts->ecx, x86::mem(0x8650DC, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, 0x12341111);
	game::sub_57D5B0(ts, mv);

locret_57E0FB:
	retn(mv, &ts->esp);
}

void sub_580E00(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x7A0DF4);
	game::sub_5B7B20(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_580E1A;
    }
	push(mv, &ts->esp, 0x0);
	game::__exit(ts, mv);

loc_580E1A:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_57ED10(ts, mv);
	add(&ts->esp, 0x8);
	game::sub_580880(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_580E3C;
    }
	game::sub_4FEF60(ts, mv);
	goto loc_580E70;

loc_580E3C:
	mov(mv, &ts->eax, x86::mem(0x864FAC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_580E4C;
    }
	game::sub_53FEB0(ts, mv);
	goto loc_580E70;

loc_580E4C:
	mov(mv, &ts->al, x86::mem(0x865498, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_580E5C;
    }
	mov(mv, x86::mem(0x865498, 1), 0x0);

loc_580E5C:
	mov(mv, x86::mem(0x865484, 4), 0x57FF10);
	mov(mv, x86::mem(0x86548C, 4), 0x7A07A0);

loc_580E70:
	game::sub_5811C0(ts, mv);
	game::sub_5CF960(ts, mv);
	push(mv, &ts->esp, 0x0);
	game::__exit(ts, mv);
}

void sub_580E90(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_580ED2;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xCC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_580EB2;
    }

loc_580EA3:
	game::sub_57EF60(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xCC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_580EA3;
    }

loc_580EB2:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_577D80(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x864F78, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	game::sub_43F920(ts, mv);
	add(&ts->esp, 0x8);

loc_580ED2:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void unknown_libname_8(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->ecx, 0x86515C);
	goto loc_57F210;

loc_57F210:
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x778924);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(0x89E7A0, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(0x8654A4, 4), 0x4);
	game::sub_5D3E40(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(0x883DAC, 4), ts->eax);
	game::sub_43E8E0(ts, mv);
	mov(mv, x86::mem(0x86478C, 4), ts->eax);
	game::sub_43CB10(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(0x864794, 4), ts->eax);
	game::sub_43E910(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8384B0, 4));
	mov(mv, x86::mem(0x864790, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x18, 4));
	mov(mv, x86::mem(0x86479C, 4), ts->edx);
	game::sub_488730(ts, mv);
	push(mv, &ts->esp, 0x50);
	game::_malloc(ts, mv);
	add(&ts->esp, 0x10);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_57F29C;
    }
	mov(&ts->ecx, ts->eax);
	game::sub_601070(ts, mv);
	goto loc_57F29E;

loc_57F29C:
	xor_(&ts->eax, ts->eax);

loc_57F29E:
	mov(mv, x86::mem(0x8900D8, 4), ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->esi, 4), 0x0);
	game::sub_57DC60(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_778910:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7A0AE8);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_778924:
	mov(&ts->eax, 0x7E3F68);
	goto ___CxxFrameHandler;
}

void sub_580EF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(&ts->ecx, 0x88EB00);
	mov(mv, x86::mem(0x8654A4, 4), 0x8);
	game::sub_5DB080(ts, mv);
	mov(&ts->ecx, 0x88EB00);
	game::sub_5E6160(ts, mv);
	mov(&ts->ecx, 0x88F768);
	game::sub_5E1180(ts, mv);
	mov(&ts->ecx, 0x8A3288);
	game::sub_63A6F0(ts, mv);
	game::sub_4814A0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x7FA9B8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_4901A0(ts, mv);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	game::sub_494550(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_580E90(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_580E90(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	mov(mv, x86::mem(ts->esi + 0x8, 4), 0x0);
	mov(mv, x86::mem(ts->esi + 0xC, 4), 0x0);
	game::sub_4FF780(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	add(&ts->esp, 0x28);
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_580F8C;
    }
	game::sub_603660(ts, mv);
	push(mv, &ts->esp, ts->esi);
	game::_free(ts, mv);
	add(&ts->esp, 0x4);

loc_580F8C:
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(0x8900D8, 4), 0x0);
	game::sub_5D3E40(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->ecx, 0x828530);
	mov(mv, x86::mem(0x883DAC, 4), ts->eax);
	game::sub_440800(ts, mv);
	game::sub_488780(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	goto nullsub_1;
}

void sub_580FC0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x28);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x78, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_580FDE;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_580E90(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x78, 4), 0x0);

loc_580FDE:
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x80, 4));
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->edi);
	game::sub_490150(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x8);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x7C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, 0x7A0714);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4400D0(ts, mv);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	game::sub_494550(ts, mv);
	add(&ts->esp, 0x20);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x28);
	retn(mv, &ts->esp);
}

void sub_581020(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->edx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_58102C;
    }
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);

loc_58102C:
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x18, 1), ts->al);
	mov(mv, x86::mem(ts->ecx + 0xC, 4), 0x7A0E00);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), 0x580EE0);
	if (ts->eflags.zero) {
        goto locret_581042;
    }
	mov(mv, x86::mem(ts->ecx + 0x18, 1), ts->al);

locret_581042:
	retn(mv, &ts->esp);
}

void sub_581050(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5810A0;
    }
	mov(mv, &ts->al, x86::mem(0x865564, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_58109A;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x7C, 4));
	mov(mv, &ts->ecx, x86::mem(0x7FB724, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_581091;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x14, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_58109A;
    }
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_581091;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x80, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_581091;
    }
	mov(mv, x86::mem(ts->esi + 0x4, 4), 0x1);
	goto loc_5810A0;

loc_581091:
	cmp(mv, &ts->eflags, ts->ecx, x86::mem(ts->esi + 0x78, 4));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5810A0;
    }
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_5810A0;
    }

loc_58109A:
	mov(mv, x86::mem(ts->esi, 4), 0x1);

loc_5810A0:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5810BC;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_5806B0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5810BC;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_57D060(ts, mv);

loc_5810BC:
	cmp(mv, &ts->eflags, x86::mem(ts->esi, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_5810F9;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5810D1;
    }
	mov(mv, x86::mem(ts->esi + 0x1C, 4), 0x1);
	goto loc_5810F2;

loc_5810D1:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5810F2;
    }
	mov(mv, &ts->eax, x86::mem(0x86514C, 4));
	and_(&ts->eax, 0x80000003);
	if (!ts->eflags.sign) {
        goto loc_5810E9;
    }
	dec(&ts->eax);
	or_(&ts->eax, 0xFFFFFFFC);
	inc(&ts->eax);

loc_5810E9:
	neg(&ts->eax);
	sbb(&ts->eax, ts->eax);
	neg(&ts->eax);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->eax);

loc_5810F2:
	mov(&ts->ecx, ts->esi);
	game::sub_5718B0(ts, mv);

loc_5810F9:
	mov(&ts->ecx, ts->esi);
	game::sub_57D000(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xD0, 4));
	mov(mv, &ts->ecx, x86::mem(0x7FB724, 4));
	cmp(&ts->eflags, ts->ecx, ts->edx);
	setz(ts->eflags, &ts->dl);
	mov(&ts->ecx, 0x865564);
	push(mv, &ts->esp, ts->edx);
	game::sub_57E100(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x10, 4), 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_581130(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->ebp + 0x2, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_581173;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x8651A4);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	mov(&ts->edi, ts->eax);
	mov(&ts->ebx, 0x8);
	mov(&ts->edi, ts->edi);

loc_581150:
	mov(mv, &ts->esi, x86::mem(0x8651A8, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_58116C;
    }
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_581160:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xC, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_581175;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_581160;
    }

loc_58116C:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->ebp + 0x2, 1), 0x0);
	pop(mv, &ts->esp, ts->ebx);

loc_581173:
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_581175:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xCC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_58118F;
    }
	nop();

loc_581180:
	game::sub_57EF60(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xCC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_581180;
    }

loc_58118F:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_577D80(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x864F78, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	game::sub_43F920(ts, mv);
	add(&ts->esp, 0x8);
	goto loc_581150;
}

void sub_5811C0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x1);
	game::sub_43BDF0(ts, mv);
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->eax, x86::mem(0x864F4C, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_58156F;
    }
	push(mv, &ts->esp, ts->esi);

loc_5811E4:
	game::sub_43BDF0(ts, mv);
	mov(mv, x86::mem(0x864F44, 4), ts->eax);
	game::sub_5BCFA0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x865138, 4));
	mov(mv, x86::mem(0x866640, 4), ts->eax);
	game::sub_57D860(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x865484, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_58123C;
    }
	goto loc_581210;

loc_581210:
	mov(&ts->esi, ts->eax);
	mov(mv, &ts->eax, x86::mem(0x865488, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x865484, 4), ts->ebx);
	mov(mv, x86::mem(0x865488, 4), ts->ebx);
	mov(mv, x86::mem(0x86548C, 4), ts->ebx);
	call(ts, mv, ts->esi);
	mov(mv, &ts->eax, x86::mem(0x865484, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero) {
        goto loc_58123C;
    }
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_581210;
    }

loc_58123C:
	mov(mv, &ts->eax, x86::mem(0x865490, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_581247;
    }
	call(ts, mv, ts->eax);

loc_581247:
	game::_dynamic_atexit_destructor_for__std__tr1__shared_ptr___ExceptionPtr____ExceptionPtr__m_badAllocExceptionPtr___void_(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_581269;
    }
	game::sub_600FA0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x3);
	game::sub_601020(ts, mv);

loc_581269:
	mov(mv, &ts->eax, x86::mem(0x865484, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_58129E;
    }

loc_581272:
	mov(&ts->esi, ts->eax);
	mov(mv, &ts->eax, x86::mem(0x865488, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x865484, 4), ts->ebx);
	mov(mv, x86::mem(0x865488, 4), ts->ebx);
	mov(mv, x86::mem(0x86548C, 4), ts->ebx);
	call(ts, mv, ts->esi);
	mov(mv, &ts->eax, x86::mem(0x865484, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero) {
        goto loc_58129E;
    }
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_581272;
    }

loc_58129E:
	mov(mv, &ts->eax, x86::mem(0x865490, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5812A9;
    }
	call(ts, mv, ts->eax);

loc_5812A9:
	game::nullsub_1(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8654A4, 4));
	mov(&ts->esi, 0x6);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero) {
        goto loc_5812C1;
    }
	game::sub_57EE00(ts, mv);

loc_5812C1:
	game::sub_5EB390(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8650B8, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5812D5;
    }
	game::sub_57BE30(ts, mv);

loc_5812D5:
	game::sub_43BDF0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_43BE20(ts, mv);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78435C, 4));
	add(&ts->esp, 0x4);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_57EAD0(ts, mv);
	add(&ts->esp, 0x4);
	game::sub_43BDF0(ts, mv);
	mov(&ts->ecx, 0x828770);
	mov(&ts->edi, ts->eax);
	game::sub_456940(ts, mv);
	mov(&ts->ecx, 0x89CF48);
	mov(mv, x86::mem(ts->esp + 0xC, 1), 0x1);
	game::sub_5F00F0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_58132A;
    }
	mov(mv, &ts->eax, x86::mem(0x8900D8, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_58132A;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), ts->esi);
	if (!ts->eflags.zero) {
        goto loc_58132A;
    }
	mov(&ts->al, 0x1);
	goto loc_58132C;

loc_58132A:
	xor_(&ts->al, ts->al);

loc_58132C:
	movzx(&ts->eax, ts->al);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_581349;
    }
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, 0x89CF48);
	game::sub_601A60(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865154, 4));
	goto loc_581465;

loc_581349:
	cmp(mv, &ts->eflags, x86::mem(0x8654A4, 4), ts->esi);
	if (!ts->eflags.zero) {
        goto loc_581459;
    }
	mov(mv, &ts->ecx, x86::mem(0x890080, 4));
	game::sub_5EA2B0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x890080, 4));
	game::sub_5EA320(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_58141D;
    }
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_58141D;
    }
	mov(mv, &ts->ecx, x86::mem(0x8650B8, 4));
	game::sub_581050(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x8650B8, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->edx + 0x1C, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5813C4;
    }
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, 0x89CF48);
	game::sub_601A60(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865154, 4));
	mov(mv, x86::mem(0x7FB728, 4), ts->ebx);
	game::sub_5809C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8650B8, 4));
	game::sub_578E10(ts, mv);
	goto loc_581444;

loc_5813C4:
	mov(mv, &ts->ecx, x86::mem(0x890080, 4));
	game::sub_5EA360(ts, mv);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x89CF48);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_601A60(ts, mv);
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865154, 4));
	mov(mv, x86::mem(0x7FB728, 4), ts->ebx);
	game::sub_5809C0(ts, mv);
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F0130(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(0x890080, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_609CE0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8650B8, 4));
	mov(mv, x86::mem(ts->esp + 0xC, 1), ts->bl);
	game::sub_578E10(ts, mv);
	goto loc_581444;

loc_58141D:
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, 0x89CF48);
	game::sub_601A60(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865154, 4));
	mov(mv, x86::mem(0x7FB728, 4), ts->ebx);
	game::sub_5809C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x890080, 4));
	game::sub_5F1390(ts, mv);

loc_581444:
	cmp(mv, &ts->eflags, x86::mem(0x890088, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_581470;
    }
	mov(mv, x86::mem(0x890088, 4), ts->ebx);
	game::nullsub_1(ts, mv);
	goto loc_581470;

loc_581459:
	mov(mv, &ts->ecx, x86::mem(0x865198, 4));
	mov(mv, x86::mem(0x865154, 4), ts->ecx);

loc_581465:
	mov(mv, x86::mem(0x7FB728, 4), ts->ebx);
	game::sub_5809C0(ts, mv);

loc_581470:
	game::nullsub_1(ts, mv);
	game::nullsub_1(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x89CF48);
	game::sub_60AEE0(ts, mv);
	game::sub_5663B0(ts, mv);
	game::sub_600900(ts, mv);
	game::sub_44EFE0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5814AD;
    }
	mov(mv, &ts->eax, x86::mem(0x865198, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_483B40(ts, mv);

loc_5814AD:
	game::sub_572610(ts, mv);
	game::sub_5728C0(ts, mv);
	mov(&ts->ecx, 0x88EB00);
	game::sub_5E79A0(ts, mv);
	mov(mv, x86::mem(0x864F50, 4), ts->ebx);
	game::sub_57EF60(ts, mv);
	game::sub_5CE850(ts, mv);
	game::sub_5CE8A0(ts, mv);
	game::sub_5D2850(ts, mv);
	game::nullsub_1(ts, mv);
	game::nullsub_1(ts, mv);
	game::sub_57A050(ts, mv);
	game::sub_57A0E0(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0xC, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto loc_5814FF;
    }
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F0140(ts, mv);

loc_5814FF:
	game::nullsub_1(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(&ts->eax, 0x3);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_581515;
    }
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);

loc_581515:
	game::sub_43BDF0(ts, mv);
	mov(mv, x86::mem(0x864F48, 4), ts->eax);
	game::sub_570C00(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(0x86511C, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_581537;
    }
	mov(mv, x86::mem(0x86511C, 4), ts->ebx);
	game::nullsub_1(ts, mv);

loc_581537:
	cmp(mv, &ts->eflags, x86::mem(0x865120, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_58154A;
    }
	mov(mv, x86::mem(0x865120, 4), ts->ebx);
	game::nullsub_1(ts, mv);

loc_58154A:
	cmp(mv, &ts->eflags, x86::mem(0x865118, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_58155D;
    }
	mov(mv, x86::mem(0x865118, 4), ts->ebx);
	game::nullsub_1(ts, mv);

loc_58155D:
	game::unknown_libname_9(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(0x864F4C, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5811E4;
    }
	pop(mv, &ts->esp, ts->esi);

loc_58156F:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);
}

void sub_5815C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F00F0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_5815DE;
    }
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, 0x89CF48);
	game::sub_609360(ts, mv);

loc_5815DE:
	mov(mv, &ts->eax, x86::mem(0x8650F4, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(0x8654A4, 4), 0x7);
	if (!ts->eflags.zero) {
        goto loc_581614;
    }
	cmp(mv, &ts->eflags, x86::mem(0x865220, 4), 0x865220);
	if (ts->eflags.zero) {
        goto loc_58161B;
    }
	nop();

loc_581600:
	cmp(mv, &ts->eflags, x86::mem(0x8650F4, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_581614;
    }
	cmp(mv, &ts->eflags, x86::mem(0x865220, 4), 0x865220);
	if (ts->eflags.zero) {
        goto loc_58161B;
    }

loc_581614:
	game::sub_57E800(ts, mv);
	goto loc_581600;

loc_58161B:
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	game::sub_60A9A0(ts, mv);
	mov(&ts->ecx, 0x8A3288);
	game::sub_63B070(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x34, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x38, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_490150(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esi + 0x34, 4), ts->ebx);
	game::sub_580E90(ts, mv);
	add(&ts->esp, 0xC);
	mov(&ts->ecx, 0x88F298);
	game::sub_5D9A00(ts, mv);
	game::sub_558EE0(ts, mv);
	mov(mv, x86::mem(0x870748, 4), 0x1);
	game::sub_5663B0(ts, mv);
	game::sub_5D2850(ts, mv);
	game::nullsub_1(ts, mv);
	game::nullsub_1(ts, mv);
	game::sub_56C5F0(ts, mv);
	game::sub_414A40(ts, mv);
	game::sub_637E70(ts, mv);
	game::sub_5E04D0(ts, mv);
	game::sub_5E05C0(ts, mv);
	game::sub_48B760(ts, mv);
	game::sub_60F740(ts, mv);
	game::sub_599010(ts, mv);
	game::nullsub_1(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_5711D0(ts, mv);
	mov(&ts->ecx, 0x88F298);
	game::sub_5D9A00(ts, mv);
	game::sub_593DD0(ts, mv);
	game::sub_5A9A60(ts, mv);
	game::sub_592B20(ts, mv);
	game::sub_4814C0(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(0x7FB534, 1), 0x1);
	game::sub_580FC0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_580E90(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_580E90(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_580E90(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_580E90(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	add(&ts->esp, 0x10);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_58171F;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_580E90(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->ebx);

loc_58171F:
	mov(&ts->ecx, 0x865564);
	game::sub_581130(ts, mv);
	mov(&ts->ecx, 0x828530);
	game::sub_440800(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x865110, 4));
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_581740:
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_581754;
    }
	game::sub_6F56BD(ts, mv);
	game::sub_57C920(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x865110, 4));

loc_581754:
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	setz(ts->eflags, &ts->al);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_581740;
    }
	cmp(mv, &ts->eflags, x86::mem(0x8650D0, 4), ts->ebx);
	mov(mv, &ts->esi, x86::mem(0x7EA624, 4));
	mov(mv, x86::mem(0x864FAC, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_581781;
    }
	push(mv, &ts->esp, 0xA);
	push(mv, &ts->esp, 0x20);
	game::sub_57E3B0(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->esi, ts->eax);

loc_581781:
	cmp(mv, &ts->eflags, x86::mem(0x8650D4, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_581799;
    }
	mov(mv, &ts->ecx, x86::mem(0x8650DC, 4));
	push(mv, &ts->esp, 0xA);
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->esi);
	game::sub_57D5B0(ts, mv);

loc_581799:
	cmp(mv, &ts->eflags, x86::mem(0x89E7AC, 1), ts->bl);
	mov(mv, x86::mem(0x7EA624, 4), ts->esi);
	if (!ts->eflags.zero) {
        goto loc_5817BE;
    }
	cmp(mv, &ts->eflags, x86::mem(0x89E7AD, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto loc_5817BE;
    }
	game::sub_575730(ts, mv);
	mov(&ts->ecx, 0x865930);
	game::sub_575FD0(ts, mv);

loc_5817BE:
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x870748, 4), ts->ebx);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_5817D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, 0x827B88);
	game::sub_438EC0(ts, mv);
	mov(&ts->ecx, 0x8654A8);
	game::sub_5815C0(ts, mv);
	mov(&ts->ecx, 0x86515C);
	game::sub_580EF0(ts, mv);
	mov(mv, &ts->al, x86::mem(0x865498, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, x86::mem(0x86548C, 4), 0x7A07A0);
	mov(mv, x86::mem(0x865484, 4), 0x57FF10);
	if (ts->eflags.zero) {
        goto locret_581816;
    }
	mov(mv, x86::mem(0x865498, 1), 0x0);

locret_581816:
	retn(mv, &ts->esp);
}

void sub_581820(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->bl, x86::mem(0x89E7E6, 1));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(0x883DAC, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, 0xFA0);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(0x82B8DC, 4), 0x1);
	game::sub_5D3E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x850078, 4));
	mov(mv, &ts->dl, x86::mem(0x89E7E6, 1));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->ecx, 0x2);
	setz(mv, ts->eflags, x86::mem(ts->esp + 0xF, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	if (!ts->eflags.zero) {
        goto loc_581889;
    }
	cmp(&ts->eflags, ts->ecx, 0x1);
	if (!ts->eflags.zero) {
        goto loc_58187A;
    }
	mov(mv, &ts->ecx, x86::mem(0x863470, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_581889;
    }
	mov(mv, &ts->eax, x86::mem(0x85EF48, 4));
	mov(mv, &ts->edi, x86::mem(ts->eax, 4));
	goto loc_581880;

loc_58187A:
	mov(mv, &ts->edi, x86::mem(0x89E7A0, 4));

loc_581880:
	push(mv, &ts->esp, ts->edi);
	game::sub_5D3E40(ts, mv);
	add(&ts->esp, 0x4);

loc_581889:
	add(&ts->eax, 0x40);
	push(mv, &ts->esp, ts->eax);
	add(&ts->esi, 0x40);
	push(mv, &ts->esp, ts->esi);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	setnz(ts->eflags, &ts->al);
	test(&ts->eflags, ts->bl, ts->bl);
	if (!ts->eflags.zero) {
        goto loc_5818AA;
    }
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, x86::mem(ts->esp + 0x14, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_5818AF;
    }

loc_5818AA:
	mov(mv, x86::mem(ts->esp + 0x14, 1), 0x1);

loc_5818AF:
	mov(mv, &ts->cl, x86::mem(ts->esp + 0xF, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_5818D0;
    }
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_5818D0;
    }
	cmp(&ts->eflags, ts->edi, 0x1068);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5818D0;
    }
	cmp(&ts->eflags, ts->edi, 0x10CC);
	mov(mv, x86::mem(ts->esp + 0x10, 1), 0x1);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5818D5;
    }

loc_5818D0:
	mov(mv, x86::mem(ts->esp + 0x10, 1), 0x0);

loc_5818D5:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x827B88);
	game::sub_438EC0(ts, mv);
	mov(&ts->ecx, 0x8654A8);
	game::sub_5815C0(ts, mv);
	mov(mv, &ts->al, x86::mem(0x89E7E6, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_58190C;
    }
	game::sub_510050(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_526970(ts, mv);
	add(&ts->esp, 0x4);
	goto loc_581939;

loc_58190C:
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_581939;
    }
	mov(mv, &ts->eax, x86::mem(0x863470, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_581934;
    }
	cmp(mv, &ts->eflags, x86::mem(0x7FAA08, 4), 0x10);
	setz(ts->eflags, &ts->cl);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5322E0(ts, mv);
	add(&ts->esp, 0x8);
	goto loc_581939;

loc_581934:
	game::sub_540780(ts, mv);

loc_581939:
	mov(mv, &ts->edx, x86::mem(0x89E7A0, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_5D3E40(ts, mv);
	add(&ts->eax, 0x40);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_43DC30(ts, mv);
	mov(mv, &ts->cl, x86::mem(0x89E7E6, 1));
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->edi);
	setnz(ts->eflags, &ts->al);
	test(&ts->eflags, ts->cl, ts->cl);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_581968;
    }
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_581989;
    }

loc_581968:
	mov(&ts->ecx, 0x86515C);
	mov(mv, x86::mem(0x82B8DC, 4), 0x0);
	game::sub_580EF0(ts, mv);
	mov(&ts->ecx, 0x86515C);
	add(&ts->esp, 0xC);
	goto loc_57F210;

loc_581989:
	mov(mv, &ts->eax, x86::mem(0x89E7A0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x8654A4, 4), 0x5);
	mov(mv, x86::mem(0x8654A8, 4), 0x0);
	game::sub_5D3E40(ts, mv);
	mov(mv, x86::mem(0x883DAC, 4), ts->eax);
	mov(&ts->ecx, 0x8654A8);
	add(&ts->esp, 0x10);
	goto sub_57F2D0;

loc_57F210:
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x778924);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(0x89E7A0, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(0x8654A4, 4), 0x4);
	game::sub_5D3E40(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(0x883DAC, 4), ts->eax);
	game::sub_43E8E0(ts, mv);
	mov(mv, x86::mem(0x86478C, 4), ts->eax);
	game::sub_43CB10(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(0x864794, 4), ts->eax);
	game::sub_43E910(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8384B0, 4));
	mov(mv, x86::mem(0x864790, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x18, 4));
	mov(mv, x86::mem(0x86479C, 4), ts->edx);
	game::sub_488730(ts, mv);
	push(mv, &ts->esp, 0x50);
	game::_malloc(ts, mv);
	add(&ts->esp, 0x10);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_57F29C;
    }
	mov(&ts->ecx, ts->eax);
	game::sub_601070(ts, mv);
	goto loc_57F29E;

loc_57F29C:
	xor_(&ts->eax, ts->eax);

loc_57F29E:
	mov(mv, x86::mem(0x8900D8, 4), ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->esi, 4), 0x0);
	game::sub_57DC60(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_5819C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->edx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5819CC;
    }
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);

loc_5819CC:
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x18, 1), ts->al);
	mov(mv, x86::mem(ts->ecx + 0xC, 4), 0x7A0E10);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), 0x5817D0);
	if (ts->eflags.zero) {
        goto locret_5819E2;
    }
	mov(mv, x86::mem(ts->ecx + 0x18, 1), ts->al);

locret_5819E2:
	retn(mv, &ts->esp);
}

void sub_5819F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->edx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5819FC;
    }
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);

loc_5819FC:
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x18, 1), ts->al);
	mov(mv, x86::mem(ts->ecx + 0xC, 4), 0x7A0E2C);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), 0x581820);
	if (ts->eflags.zero) {
        goto locret_581A12;
    }
	mov(mv, x86::mem(ts->ecx + 0x18, 1), ts->al);

locret_581A12:
	retn(mv, &ts->esp);
}

void sub_581A20(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x200);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ebx, 0x2);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(0x8654A4, 4), ts->ebx);
	game::nullsub_1(ts, mv);
	game::sub_55B580(ts, mv);
	game::nullsub_1(ts, mv);
	mov(&ts->ecx, 0x8A3288);
	game::sub_63B070(ts, mv);
	mov(&ts->esi, 0x86658C);

loc_581A52:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_48DAE0(ts, mv);
	add(&ts->esi, 0x4);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->esi, 0x8665B8);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_581A52;
    }
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x43);
	push(mv, &ts->esp, 0xA6E1B733);
	mov(&ts->ecx, 0x8A2B68);
	game::sub_61B670(ts, mv);
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_581AD7;
    }

loc_581A85:
	mov(&ts->ecx, ts->esi);
	game::sub_610000(ts, mv);
	mov(&ts->edi, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_43DBB0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x1E3);
	if (!ts->eflags.carry) {
        goto loc_581ABB;
    }
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, 0x7A0AAC);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4400D0(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_48DAE0(ts, mv);
	add(&ts->esp, 0x10);

loc_581ABB:
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x43);
	push(mv, &ts->esp, 0xA6E1B733);
	mov(&ts->ecx, 0x8A2B68);
	game::sub_61B670(ts, mv);
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_581A85;
    }

loc_581AD7:
	mov(&ts->esi, 0x86658C);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_581AE0:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_4941F0(ts, mv);
	add(&ts->esi, 0x4);
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->esi, 0x8665B8);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_581AE0;
    }
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x43);
	push(mv, &ts->esp, 0xA6E1B733);
	mov(&ts->ecx, 0x8A2B68);
	game::sub_61B670(ts, mv);
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_581B6D;
    }

loc_581B17:
	mov(&ts->ecx, ts->esi);
	game::sub_610000(ts, mv);
	mov(&ts->edi, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_43DBB0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x1E3);
	if (!ts->eflags.carry) {
        goto loc_581B51;
    }
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, 0x7A0AAC);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4400D0(ts, mv);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	game::sub_4941F0(ts, mv);
	add(&ts->esp, 0x18);

loc_581B51:
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x43);
	push(mv, &ts->esp, 0xA6E1B733);
	mov(&ts->ecx, 0x8A2B68);
	game::sub_61B670(ts, mv);
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_581B17;
    }

loc_581B6D:
	mov(mv, &ts->eax, x86::mem(0x8650F4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(&ts->esi, 0x865220);
	if (!ts->eflags.zero) {
        goto loc_581B94;
    }
	cmp(mv, &ts->eflags, x86::mem(0x865220, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_581B9B;
    }

loc_581B83:
	mov(mv, &ts->eax, x86::mem(0x8650F4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_581B94;
    }
	cmp(mv, &ts->eflags, x86::mem(0x865220, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_581B9B;
    }

loc_581B94:
	game::sub_57E800(ts, mv);
	goto loc_581B83;

loc_581B9B:
	game::sub_60C810(ts, mv);
	game::sub_481480(ts, mv);
	mov(&ts->ecx, 0x8651A4);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	mov(&ts->edi, ts->eax);

loc_581BB1:
	mov(mv, &ts->esi, x86::mem(0x8651A8, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_581BD0;
    }
	goto loc_581BC0;

loc_581BC0:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xC, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_581C5F;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_581BC0;
    }

loc_581BD0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	game::sub_4FF780(ts, mv);
	add(&ts->esp, 0x10);
	mov(&ts->ecx, 0x865564);
	game::sub_581130(ts, mv);
	mov(&ts->ecx, 0x828530);
	game::sub_440800(ts, mv);
	game::sub_488780(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x865110, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);

loc_581C02:
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_581C16;
    }
	game::sub_6F56BD(ts, mv);
	game::sub_57C920(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x865110, 4));

loc_581C16:
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->ecx, ts->ecx);
	setz(ts->eflags, &ts->al);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_581C02;
    }
	mov(mv, &ts->al, x86::mem(0x865498, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_581C31;
    }
	mov(mv, x86::mem(0x865498, 1), 0x0);

loc_581C31:
	mov(mv, x86::mem(0x865484, 4), 0x580EE0);
	mov(mv, x86::mem(0x86548C, 4), 0x7A0E00);
	game::sub_5B7B10(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_581C58;
    }
	push(mv, &ts->esp, 0x0);
	game::sub_5BE1E0(ts, mv);
	add(&ts->esp, 0x4);

loc_581C58:
	add(&ts->esp, 0x200);
	retn(mv, &ts->esp);

loc_581C5F:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xCC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_581C7F;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_581C70:
	game::sub_57EF60(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xCC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_581C70;
    }

loc_581C7F:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_577D80(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x864F78, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	game::sub_43F920(ts, mv);
	add(&ts->esp, 0x8);
	goto loc_581BB1;
}

void sub_581CB0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x400, 4));
	sub(mv, &ts->eax, x86::mem(ts->ecx + 0x404, 4));
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788164, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_581CEF;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));

loc_581CEF:
	add(&ts->esp, 0x8);
	goto __ftol2;
}

void sub_581D00(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x400, 4));
	mov(&ts->eax, ts->ecx);
	mov(&ts->edx, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));
	add(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x400, 4), ts->ecx);
	mov(&ts->ecx, 0x20);
	sub(&ts->ecx, ts->edi);
	and_(&ts->edx, 0x7);
	sar(&ts->eax, 0x3);
	shl(&ts->ebp, ts->cl);
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_581D54;
    }
	mov(&ts->ecx, 0x8);
	sub(&ts->ecx, ts->edx);
	cmp(&ts->eflags, ts->ecx, ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_581D3F;
    }
	mov(&ts->ecx, ts->edi);

loc_581D3F:
	sub(&ts->edi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ebp);
	shl(&ts->ebp, ts->cl);
	lea(mv, &ts->ecx, x86::mem(ts->edx + 0x18, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	shr(&ts->edx, ts->cl);
	or_(mv, x86::mem(ts->eax + (ts->esi), 1), ts->dl);
	inc(&ts->eax);

loc_581D54:
	cmp(&ts->eflags, ts->edi, 0x8);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_581D7B;
    }
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_581D83;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->esi), 4));
	lea(mv, &ts->eax, x86::mem(ts->edi - 0x1, 4));
	shr(&ts->eax, 0x3);
	inc(&ts->eax);

loc_581D67:
	mov(&ts->edx, ts->ebp);
	shr(&ts->edx, 0x18);
	mov(mv, x86::mem(ts->ecx, 1), ts->dl);
	inc(&ts->ecx);
	shl(&ts->ebp, 0x8);
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto loc_581D67;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x8);

loc_581D7B:
	mov(&ts->ecx, ts->ebp);
	shr(&ts->ecx, 0x18);
	mov(mv, x86::mem(ts->eax + (ts->esi), 1), ts->cl);

loc_581D83:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x8);
}

void sub_581D90(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x404, 4));
	mov(&ts->eax, ts->edi);
	cdq(&ts->eax, ts->edx);
	and_(&ts->edx, 0x7);
	add(&ts->eax, ts->edx);
	mov(&ts->ecx, ts->edi);
	sar(&ts->eax, 0x3);
	and_(&ts->ecx, 0x80000007);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebx);
	if (!ts->eflags.sign) {
        goto loc_581DBE;
    }
	dec(&ts->ecx);
	or_(&ts->ecx, 0xFFFFFFF8);
	inc(&ts->ecx);

loc_581DBE:
	mov(&ts->edx, 0x8);
	add(&ts->edi, ts->ebx);
	sub(&ts->edx, ts->ecx);
	cmp(&ts->eflags, ts->edx, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x404, 4), ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_581DD3;
    }
	mov(&ts->edx, ts->ebx);

loc_581DD3:
	movzx(mv, &ts->ebp, x86::mem(ts->eax + (ts->esi), 1));
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));
	add(&ts->ecx, 0x18);
	shl(&ts->ebp, ts->cl);
	mov(&ts->ecx, 0x18);
	sub(&ts->ecx, ts->edx);
	inc(&ts->eax);
	sub(&ts->ebx, ts->edx);
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->edi, 4), ts->ebp);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_581E16;
    }
	lea(mv, &ts->edx, x86::mem(ts->ecx - 0x1, 4));
	shr(&ts->edx, 0x3);
	shl(&ts->edx, 0x3);
	mov(&ts->ebp, 0xFFFFFFF8);
	sub(&ts->ebp, ts->edx);
	add(&ts->ebx, ts->ebp);

loc_581E02:
	movzx(mv, &ts->edx, x86::mem(ts->eax + (ts->esi), 1));
	mov(mv, &ts->ebp, x86::mem(ts->edi, 4));
	shl(&ts->edx, ts->cl);
	sub(&ts->ecx, 0x8);
	or_(&ts->ebp, ts->edx);
	inc(&ts->eax);
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->edi, 4), ts->ebp);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_581E02;
    }

loc_581E16:
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_581E24;
    }
	movzx(mv, &ts->eax, x86::mem(ts->eax + (ts->esi), 1));
	neg(&ts->cl);
	shr(&ts->eax, ts->cl);
	or_(mv, x86::mem(ts->edi, 4), ts->eax);

loc_581E24:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(&ts->ecx, 0x20);
	sub(&ts->ecx, ts->edx);
	shr(&ts->eax, ts->cl);
	mov(mv, x86::mem(ts->edi, 4), ts->eax);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x8);
}

void sub_581E40(x86::thread_state* ts, x86::memory_view* mv) {
	xor_(&ts->eax, ts->eax);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x12C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x130, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x134, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x138, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x13C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x140, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x144, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x148, 1), ts->al);
	game::sub_43DBD0(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_581E90(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_43DBD0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x13C, 4));
	add(&ts->esp, 0x8);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esi + 0x130, 4), ts->ecx);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->esi + 0x134, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x138, 4), ts->eax);
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fdiv(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7864E0, 8));
	game::__ftol2(ts, mv);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	inc(&ts->eax);
	mov(&ts->ecx, 0x0);
	mov(mv, x86::mem(ts->esi + 0x12C, 4), ts->ecx);
	mov(&ts->edx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_581F08;
    }

loc_581EF6:
	inc(&ts->ecx);
	mov(&ts->edx, 0x1);
	shl(&ts->edx, ts->cl);
	cmp(&ts->eflags, ts->edx, ts->eax);
	if (ts->eflags.carry) {
        goto loc_581EF6;
    }
	mov(mv, x86::mem(ts->esi + 0x12C, 4), ts->ecx);

loc_581F08:
	dec(&ts->edx);
	test(&ts->eflags, ts->edx, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_581F1B;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78454C, 4));

loc_581F1B:
	fdivr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->esi + 0x140, 4), 0x7F7FFFFF);
	mov(mv, x86::mem(ts->esi + 0x144, 4), 0xFF7FFFFF);
	mov(mv, x86::mem(ts->esi + 0x148, 1), 0x1);
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x13C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x138, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);
}

void sub_581F50(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_43DBD0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, x86::mem(ts->esi + 0x130, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	mov(&ts->eax, 0x1);
	shl(&ts->eax, ts->cl);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->esi + 0x134, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x12C, 4), ts->ecx);
	dec(&ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_581FA1;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78454C, 4));

loc_581FA1:
	fdivp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	mov(mv, x86::mem(ts->esi + 0x140, 4), 0x7F7FFFFF);
	mov(mv, x86::mem(ts->esi + 0x144, 4), 0xFF7FFFFF);
	mov(mv, x86::mem(ts->esi + 0x148, 1), 0x1);
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x13C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x138, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);
}

void sub_581FE0(x86::thread_state* ts, x86::memory_view* mv) {
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x130, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_581FF9;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x130, 4));

loc_581FF9:
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x134, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_58200E;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x134, 4));

loc_58200E:
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x130, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x13C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	game::__ftol2(ts, mv);
	retn(mv, &ts->esp, 0x4);
}

void sub_582030(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_582042;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78454C, 4));

loc_582042:
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x13C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x130, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x130, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_582063;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x130, 4));

loc_582063:
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x134, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto locret_582078;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x134, 4));

locret_582078:
	retn(mv, &ts->esp, 0x4);
}

void sub_582080(x86::thread_state* ts, x86::memory_view* mv) {
	xor_(&ts->eax, ts->eax);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x12C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x130, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x134, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x138, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x13C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x140, 1), ts->al);
	game::sub_43DBD0(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_5820C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_43DBD0(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	mov(&ts->eax, ts->edi);
	sub(&ts->eax, ts->edx);
	add(&ts->esp, 0x8);
	inc(&ts->eax);
	mov(&ts->ecx, 0x0);
	mov(mv, x86::mem(ts->esi + 0x130, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x134, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x12C, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_582113;
    }
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_582100:
	inc(&ts->ecx);
	mov(&ts->ebx, 0x1);
	shl(&ts->ebx, ts->cl);
	cmp(&ts->eflags, ts->ebx, ts->eax);
	if (ts->eflags.carry) {
        goto loc_582100;
    }
	mov(mv, x86::mem(ts->esi + 0x12C, 4), ts->ecx);
	pop(mv, &ts->esp, ts->ebx);

loc_582113:
	inc(&ts->edi);
	mov(mv, x86::mem(ts->esi + 0x138, 4), ts->edi);
	dec(&ts->edx);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x13C, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x140, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);
}

void sub_582130(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x130, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_582140;
    }
	mov(&ts->eax, ts->edx);

loc_582140:
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x134, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_58214C;
    }
	mov(&ts->eax, ts->ecx);

loc_58214C:
	sub(&ts->eax, ts->edx);
	retn(mv, &ts->esp, 0x4);
}

void sub_582160(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x130, 4));
	add(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	retn(mv, &ts->esp, 0x4);
}

void sub_582170(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7A0FE0);
	retn(mv, &ts->esp);
}

void sub_582180(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7A0FEC);
	retn(mv, &ts->esp);
}

void sub_582190(x86::thread_state* ts, x86::memory_view* mv) {
	game::sub_570A30(ts, mv);
	cmp(&ts->eflags, ts->eax, 0xC);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_58219E;
    }
	jmp(x86::mem(0x58222C, 4));

loc_5821A5:
	mov(&ts->eax, 0x7A10C4);
	retn(mv, &ts->esp);

loc_5821AB:
	mov(&ts->eax, 0x7A10B8);
	retn(mv, &ts->esp);

loc_5821B1:
	mov(&ts->eax, 0x7A10AC);
	retn(mv, &ts->esp);

loc_5821B7:
	mov(&ts->eax, 0x7A10A0);
	retn(mv, &ts->esp);

loc_5821BD:
	mov(&ts->eax, 0x7A1098);
	retn(mv, &ts->esp);

loc_5821C3:
	mov(&ts->eax, 0x7A108C);
	retn(mv, &ts->esp);

loc_5821C9:
	mov(&ts->eax, 0x7A1080);
	retn(mv, &ts->esp);

loc_5821CF:
	mov(&ts->eax, 0x7A1074);
	retn(mv, &ts->esp);

loc_5821D5:
	mov(&ts->eax, 0x7A1068);
	retn(mv, &ts->esp);

loc_5821DB:
	mov(&ts->eax, 0x7A1060);
	retn(mv, &ts->esp);

loc_5821E1:
	mov(&ts->eax, 0x7A1054);
	retn(mv, &ts->esp);

loc_5821E7:
	mov(&ts->eax, 0x7A1044);
	retn(mv, &ts->esp);

loc_5821ED:
	game::sub_4FF970(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x7);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_58219E;
    }
	jmp(x86::mem(0x582260, 4));

loc_5821FE:
	mov(&ts->eax, 0x7A1038);
	retn(mv, &ts->esp);

loc_582204:
	mov(&ts->eax, 0x7A102C);
	retn(mv, &ts->esp);

loc_58220A:
	mov(&ts->eax, 0x7A1020);
	retn(mv, &ts->esp);

loc_582210:
	mov(&ts->eax, 0x7A1014);
	retn(mv, &ts->esp);

loc_582216:
	mov(&ts->eax, 0x7A1008);
	retn(mv, &ts->esp);

loc_58221C:
	mov(&ts->eax, 0x7A0FFC);
	retn(mv, &ts->esp);

loc_582222:
	mov(&ts->eax, 0x7A0FF0);
	retn(mv, &ts->esp);

def_58219E:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);
}

void sub_582280(x86::thread_state* ts, x86::memory_view* mv) {
	game::sub_570A30(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_57DBD0(ts, mv);
	add(&ts->esp, 0x4);
	retn(mv, &ts->esp);
}

void sub_582290(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_582299;
    }
	retn(mv, &ts->esp);

loc_582299:
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_58229F;
    }
	retn(mv, &ts->esp);

loc_58229F:
	cmp(&ts->eflags, ts->eax, 0x2);
	if (!ts->eflags.zero) {
        goto loc_5822A5;
    }
	retn(mv, &ts->esp);

loc_5822A5:
	cmp(&ts->eflags, ts->eax, 0x3);
	if (!ts->eflags.zero) {
        goto loc_5822AB;
    }
	retn(mv, &ts->esp);

loc_5822AB:
	cmp(&ts->eflags, ts->eax, 0x4);
	if (!ts->eflags.zero) {
        goto loc_5822B6;
    }
	mov(&ts->eax, 0xA);
	retn(mv, &ts->esp);

loc_5822B6:
	cmp(&ts->eflags, ts->eax, 0x5);
	if (!ts->eflags.zero) {
        goto loc_5822C1;
    }
	mov(&ts->eax, 0x4);
	retn(mv, &ts->esp);

loc_5822C1:
	xor_(&ts->ecx, ts->ecx);
	cmp(&ts->eflags, ts->eax, 0x6);
	setnz(ts->eflags, &ts->cl);
	dec(&ts->ecx);
	and_(&ts->ecx, 0xFFFFFFFB);
	add(&ts->ecx, 0xD);
	mov(&ts->eax, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_5822E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5822FF;
    }
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_5822FF;
    }
	mov(mv, &ts->dl, x86::mem(ts->ecx + 0x48, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.zero) {
        goto loc_5822FF;
    }
	add(&ts->eax, 0x5);
	shl(&ts->eax, 0x4);
	add(&ts->eax, ts->ecx);
	retn(mv, &ts->esp, 0x4);

loc_5822FF:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp, 0x4);
}

void sub_582310(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_582335;
    }
	mov(mv, &ts->cl, x86::mem(0x869888, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto locret_582335;
    }
	push(mv, &ts->esp, 0x3FF);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x86993C);
	game::sub_43DC00(ts, mv);
	add(&ts->esp, 0xC);

locret_582335:
	retn(mv, &ts->esp, 0x4);
}

void sub_582340(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x48, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_58234A;
    }
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_58234A:
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x44, 4));
	push(mv, &ts->esp, 0x73657276);
	push(mv, &ts->esp, ts->eax);
	game::sub_744620(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_582360(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->ecx + 0x90, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x94, 4), ts->edx);
	retn(mv, &ts->esp, 0x8);
}

void sub_582380(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x44, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_582388;
    }
	retn(mv, &ts->esp);

loc_582388:
	push(mv, &ts->esp, 0x636F6E66);
	push(mv, &ts->esp, ts->eax);
	game::sub_744620(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_5823A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_5823AF;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_43DBB0(ts, mv);
	pop(mv, &ts->esp, ts->ecx);

locret_5823AF:
	retn(mv, &ts->esp);
}

void sub_5823B0(x86::thread_state* ts, x86::memory_view* mv) {
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(0x869888, 1), ts->cl);
	mov(mv, x86::mem(0x8698C8, 4), ts->ecx);
	mov(mv, x86::mem(0x8698CC, 1), ts->cl);
	mov(&ts->eax, 0x8698DC);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_5823D0:
	mov(mv, x86::mem(ts->eax, 1), ts->cl);
	add(&ts->eax, 0x10);
	cmp(&ts->eflags, ts->eax, 0x86993C);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5823D0;
    }
	mov(mv, x86::mem(0x86993C, 1), ts->cl);
	retn(mv, &ts->esp);
}

void sub_5823F0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x14);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_747670(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x646F6E65);
	push(mv, &ts->esp, ts->ecx);
	game::sub_747D30(ts, mv);
	xor_(&ts->ebx, ts->ebx);
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_5824A2;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x626F6479);
	push(mv, &ts->esp, ts->edx);
	game::sub_747D30(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x6E657730);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_58248F;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_58245D;
    }
	push(mv, &ts->esp, ts->eax);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_58245D:
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x1, 4));
	push(mv, &ts->esp, 0x3);
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7110(ts, mv);
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_58248F;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_747E00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1C, 4));
	mov(mv, x86::mem(ts->edi + (ts->edx), 1), ts->bl);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	add(&ts->esp, 0x10);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);

loc_58248F:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_5824EA;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	goto loc_5824E5;

loc_5824A2:
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5824B7;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(0x8651AC, 4));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5824B7;
    }
	pop(mv, &ts->esp, ts->esi);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x14);
	retn(mv, &ts->esp);

loc_5824B7:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, &ts->ecx, x86::mem(0x7FBE0C, 4));
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x6E657730);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_5824EA;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x14, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);

loc_5824E5:
	call(ts, mv, ts->eax);
	add(&ts->esp, 0x8);

loc_5824EA:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_747630(ts, mv);
	add(&ts->esp, 0x4);
	or_(&ts->eax, 0xFFFFFFFF);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x14);
	retn(mv, &ts->esp);
}

void sub_582510(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->edx, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x6);
	xor_(&ts->eax, ts->eax);
	lea(mv, &ts->edi, x86::mem(ts->edx + 0x60, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp);
}

void sub_582530(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_582542;
    }
	cmp(&ts->eflags, ts->eax, 0xA);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_5825D2;
    }

loc_582542:
	cmp(&ts->eflags, ts->eax, 0xB);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_582552;
    }
	cmp(&ts->eflags, ts->eax, 0x14);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_582552;
    }

loc_58254C:
	mov(&ts->eax, 0x1);
	retn(mv, &ts->esp);

loc_582552:
	cmp(&ts->eflags, ts->eax, 0x15);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_582562;
    }
	cmp(&ts->eflags, ts->eax, 0x1E);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_582562;
    }

loc_58255C:
	mov(&ts->eax, 0x3);
	retn(mv, &ts->esp);

loc_582562:
	cmp(&ts->eflags, ts->eax, 0x1F);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_582572;
    }
	cmp(&ts->eflags, ts->eax, 0x28);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_582572;
    }

loc_58256C:
	mov(&ts->eax, 0x2);
	retn(mv, &ts->esp);

loc_582572:
	cmp(&ts->eflags, ts->eax, 0x29);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_582582;
    }
	cmp(&ts->eflags, ts->eax, 0x32);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_582582;
    }

loc_58257C:
	mov(&ts->eax, 0x4);
	retn(mv, &ts->esp);

loc_582582:
	cmp(&ts->eflags, ts->eax, 0x33);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_58258C;
    }
	cmp(&ts->eflags, ts->eax, 0x3C);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_58254C;
    }

loc_58258C:
	cmp(&ts->eflags, ts->eax, 0x3D);
	if (ts->eflags.zero) {
        goto loc_5825D2;
    }
	cmp(&ts->eflags, ts->eax, 0x43);
	if (ts->eflags.zero) {
        goto loc_5825D2;
    }
	cmp(&ts->eflags, ts->eax, 0x3E);
	if (ts->eflags.zero) {
        goto loc_58254C;
    }
	cmp(&ts->eflags, ts->eax, 0x44);
	if (ts->eflags.zero) {
        goto loc_58254C;
    }
	cmp(&ts->eflags, ts->eax, 0x3F);
	if (ts->eflags.zero) {
        goto loc_58255C;
    }
	cmp(&ts->eflags, ts->eax, 0x45);
	if (ts->eflags.zero) {
        goto loc_58255C;
    }
	cmp(&ts->eflags, ts->eax, 0x40);
	if (ts->eflags.zero) {
        goto loc_58256C;
    }
	cmp(&ts->eflags, ts->eax, 0x46);
	if (ts->eflags.zero) {
        goto loc_58256C;
    }
	cmp(&ts->eflags, ts->eax, 0x41);
	if (ts->eflags.zero) {
        goto loc_58257C;
    }
	cmp(&ts->eflags, ts->eax, 0x47);
	if (ts->eflags.zero) {
        goto loc_58257C;
    }
	cmp(&ts->eflags, ts->eax, 0x42);
	if (ts->eflags.zero) {
        goto loc_5825CC;
    }
	cmp(&ts->eflags, ts->eax, 0x48);
	if (ts->eflags.zero) {
        goto loc_5825CC;
    }
	or_(&ts->eax, 0xFFFFFFFF);
	retn(mv, &ts->esp);

loc_5825CC:
	mov(&ts->eax, 0x5);
	retn(mv, &ts->esp);

loc_5825D2:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);
}

void sub_5825E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5826AB;
    }
	dec(&ts->eax);
	cdq(&ts->eax, ts->edx);
	mov(&ts->ecx, 0xA);
	idiv(&ts->eax, ts->ecx);
	inc(&ts->edx);
	cmp(&ts->eflags, ts->edx, 0x1);
	if (!ts->eflags.zero) {
        goto loc_582609;
    }
	mov(mv, x86::mem(ts->esp + 0x4, 4), 0x2DC3A547);
	goto sub_4FFA80;

loc_582609:
	cmp(&ts->eflags, ts->edx, 0x2);
	if (!ts->eflags.zero) {
        goto loc_58261B;
    }
	mov(mv, x86::mem(ts->esp + 0x4, 4), 0x2DC3A548);
	goto sub_4FFA80;

loc_58261B:
	cmp(&ts->eflags, ts->edx, 0x3);
	if (!ts->eflags.zero) {
        goto loc_58262D;
    }
	mov(mv, x86::mem(ts->esp + 0x4, 4), 0x2DC3A549);
	goto sub_4FFA80;

loc_58262D:
	cmp(&ts->eflags, ts->edx, 0x4);
	if (!ts->eflags.zero) {
        goto loc_58263F;
    }
	mov(mv, x86::mem(ts->esp + 0x4, 4), 0x2DC3A54A);
	goto sub_4FFA80;

loc_58263F:
	cmp(&ts->eflags, ts->edx, 0x5);
	if (!ts->eflags.zero) {
        goto loc_582651;
    }
	mov(mv, x86::mem(ts->esp + 0x4, 4), 0x2DC3A54B);
	goto sub_4FFA80;

loc_582651:
	cmp(&ts->eflags, ts->edx, 0x6);
	if (!ts->eflags.zero) {
        goto loc_582663;
    }
	mov(mv, x86::mem(ts->esp + 0x4, 4), 0x2DC3A54C);
	goto sub_4FFA80;

loc_582663:
	cmp(&ts->eflags, ts->edx, 0x7);
	if (!ts->eflags.zero) {
        goto loc_582675;
    }
	mov(mv, x86::mem(ts->esp + 0x4, 4), 0x2DC3A54D);
	goto sub_4FFA80;

loc_582675:
	cmp(&ts->eflags, ts->edx, 0x8);
	if (!ts->eflags.zero) {
        goto loc_582687;
    }
	mov(mv, x86::mem(ts->esp + 0x4, 4), 0x2DC3A54E);
	goto sub_4FFA80;

loc_582687:
	cmp(&ts->eflags, ts->edx, 0x9);
	if (!ts->eflags.zero) {
        goto loc_582699;
    }
	mov(mv, x86::mem(ts->esp + 0x4, 4), 0x2DC3A54F);
	goto sub_4FFA80;

loc_582699:
	cmp(&ts->eflags, ts->edx, 0xA);
	if (!ts->eflags.zero) {
        goto loc_5826AB;
    }
	mov(mv, x86::mem(ts->esp + 0x4, 4), 0x2DC3A550);
	goto sub_4FFA80;

loc_5826AB:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);
}

void sub_5826B0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5826CA;
    }
	cmp(&ts->eflags, ts->eax, 0x3C);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_5826CA;
    }
	dec(&ts->eax);
	cdq(&ts->eax, ts->edx);
	mov(&ts->ecx, 0xA);
	idiv(&ts->eax, ts->ecx);
	mov(&ts->al, ts->dl);
	retn(mv, &ts->esp);

loc_5826CA:
	or_(&ts->al, 0xFF);
	retn(mv, &ts->esp);
}

void sub_5826D0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	sub(mv, &ts->eax, x86::mem(ts->ecx, 4));
	retn(mv, &ts->esp);
}

void sub_5826E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	or_(&ts->eax, 0xFFFFFFFF);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_582757;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->ecx, 0x1);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5826FF;
    }
	cmp(&ts->eflags, ts->ecx, 0xA);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_5826FF;
    }
	mov(&ts->eax, 0x6);
	retn(mv, &ts->esp);

loc_5826FF:
	cmp(&ts->eflags, ts->ecx, 0xB);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_58270F;
    }
	cmp(&ts->eflags, ts->ecx, 0x14);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_58270F;
    }
	mov(&ts->eax, 0x7);
	retn(mv, &ts->esp);

loc_58270F:
	cmp(&ts->eflags, ts->ecx, 0x15);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_58271F;
    }
	cmp(&ts->eflags, ts->ecx, 0x1E);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_58271F;
    }
	mov(&ts->eax, 0x8);
	retn(mv, &ts->esp);

loc_58271F:
	cmp(&ts->eflags, ts->ecx, 0x1F);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_58272F;
    }
	cmp(&ts->eflags, ts->ecx, 0x28);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_58272F;
    }
	mov(&ts->eax, 0x9);
	retn(mv, &ts->esp);

loc_58272F:
	cmp(&ts->eflags, ts->ecx, 0x29);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_58273F;
    }
	cmp(&ts->eflags, ts->ecx, 0x32);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_58273F;
    }
	mov(&ts->eax, 0xA);
	retn(mv, &ts->esp);

loc_58273F:
	cmp(&ts->eflags, ts->ecx, 0x33);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto locret_58285D;
    }
	cmp(&ts->eflags, ts->ecx, 0x3C);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto locret_58285D;
    }
	mov(&ts->eax, 0xB);
	retn(mv, &ts->esp);

loc_582757:
	cmp(&ts->eflags, ts->ecx, 0x1);
	if (!ts->eflags.zero) {
        goto loc_5827C8;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->ecx, 0x1);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_582770;
    }
	cmp(&ts->eflags, ts->ecx, 0xA);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_582770;
    }
	mov(&ts->eax, 0xC);
	retn(mv, &ts->esp);

loc_582770:
	cmp(&ts->eflags, ts->ecx, 0xB);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_582780;
    }
	cmp(&ts->eflags, ts->ecx, 0x14);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_582780;
    }
	mov(&ts->eax, 0xD);
	retn(mv, &ts->esp);

loc_582780:
	cmp(&ts->eflags, ts->ecx, 0x15);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_582790;
    }
	cmp(&ts->eflags, ts->ecx, 0x1E);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_582790;
    }
	mov(&ts->eax, 0xE);
	retn(mv, &ts->esp);

loc_582790:
	cmp(&ts->eflags, ts->ecx, 0x1F);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5827A0;
    }
	cmp(&ts->eflags, ts->ecx, 0x28);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_5827A0;
    }
	mov(&ts->eax, 0xF);
	retn(mv, &ts->esp);

loc_5827A0:
	cmp(&ts->eflags, ts->ecx, 0x29);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5827B0;
    }
	cmp(&ts->eflags, ts->ecx, 0x32);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_5827B0;
    }
	mov(&ts->eax, 0x10);
	retn(mv, &ts->esp);

loc_5827B0:
	cmp(&ts->eflags, ts->ecx, 0x33);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto locret_58285D;
    }
	cmp(&ts->eflags, ts->ecx, 0x3C);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto locret_58285D;
    }
	mov(&ts->eax, 0x11);
	retn(mv, &ts->esp);

loc_5827C8:
	cmp(&ts->eflags, ts->ecx, 0x2);
	if (!ts->eflags.zero) {
        goto loc_582813;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->ecx, 0x3D);
	if (!ts->eflags.zero) {
        goto loc_5827DC;
    }
	mov(&ts->eax, 0x12);
	retn(mv, &ts->esp);

loc_5827DC:
	cmp(&ts->eflags, ts->ecx, 0x3E);
	if (!ts->eflags.zero) {
        goto loc_5827E7;
    }
	mov(&ts->eax, 0x13);
	retn(mv, &ts->esp);

loc_5827E7:
	cmp(&ts->eflags, ts->ecx, 0x3F);
	if (!ts->eflags.zero) {
        goto loc_5827F2;
    }
	mov(&ts->eax, 0x14);
	retn(mv, &ts->esp);

loc_5827F2:
	cmp(&ts->eflags, ts->ecx, 0x40);
	if (!ts->eflags.zero) {
        goto loc_5827FD;
    }
	mov(&ts->eax, 0x15);
	retn(mv, &ts->esp);

loc_5827FD:
	cmp(&ts->eflags, ts->ecx, 0x41);
	if (!ts->eflags.zero) {
        goto loc_582808;
    }
	mov(&ts->eax, 0x16);
	retn(mv, &ts->esp);

loc_582808:
	cmp(&ts->eflags, ts->ecx, 0x42);
	if (!ts->eflags.zero) {
        goto locret_58285D;
    }
	mov(&ts->eax, 0x17);
	retn(mv, &ts->esp);

loc_582813:
	cmp(&ts->eflags, ts->ecx, 0x3);
	if (!ts->eflags.zero) {
        goto locret_58285D;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->ecx, 0x43);
	if (!ts->eflags.zero) {
        goto loc_582827;
    }
	mov(&ts->eax, 0x18);
	retn(mv, &ts->esp);

loc_582827:
	cmp(&ts->eflags, ts->ecx, 0x44);
	if (!ts->eflags.zero) {
        goto loc_582832;
    }
	mov(&ts->eax, 0x19);
	retn(mv, &ts->esp);

loc_582832:
	cmp(&ts->eflags, ts->ecx, 0x45);
	if (!ts->eflags.zero) {
        goto loc_58283D;
    }
	mov(&ts->eax, 0x1A);
	retn(mv, &ts->esp);

loc_58283D:
	cmp(&ts->eflags, ts->ecx, 0x46);
	if (!ts->eflags.zero) {
        goto loc_582848;
    }
	mov(&ts->eax, 0x1B);
	retn(mv, &ts->esp);

loc_582848:
	cmp(&ts->eflags, ts->ecx, 0x47);
	if (!ts->eflags.zero) {
        goto loc_582853;
    }
	mov(&ts->eax, 0x1C);
	retn(mv, &ts->esp);

loc_582853:
	cmp(&ts->eflags, ts->ecx, 0x48);
	if (!ts->eflags.zero) {
        goto locret_58285D;
    }
	mov(&ts->eax, 0x1D);

locret_58285D:
	retn(mv, &ts->esp);
}

void sub_582860(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx, 4), ts->edx);
	retn(mv, &ts->esp, 0x8);
}

void sub_582870(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, 0x7FBE10);
	goto loc_582880;

loc_582880:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	game::sub_43DCC0(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5828FA;
    }
	add(&ts->esi, 0x4);
	cmp(&ts->eflags, ts->esi, 0x7FBE30);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_582880;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebx, 0x7FBE30);

loc_5828A2:
	mov(mv, &ts->esi, x86::mem(ts->ebx, 4));
	push(mv, &ts->esp, ts->esi);
	game::sub_43DBB0(ts, mv);
	mov(&ts->edi, ts->eax);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebp);
	game::sub_43DD10(ts, mv);
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_5828CC;
    }
	push(mv, &ts->esp, 0x20);
	add(&ts->edi, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	game::sub_43DDF0(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_582901;
    }

loc_5828CC:
	add(&ts->ebx, 0x4);
	cmp(&ts->eflags, ts->ebx, 0x7FBE38);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5828A2;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5828F1;
    }
	push(mv, &ts->esp, 0x7A10CC);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_582901;
    }

loc_5828F1:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x8);

loc_5828FA:
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x8);

loc_582901:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x8);
}

void sub_582910(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->ecx + 0x14, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x18, 4), ts->edx);
	retn(mv, &ts->esp, 0x8);
}

void sub_582930(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x1C, 4));
	lea(mv, &ts->eax, x86::mem(ts->ecx + 0x1C, 4));
	xor_(&ts->ecx, ts->ecx);
	cmp(&ts->eflags, ts->edx, 0xFFFFFFFF);
	setz(ts->eflags, &ts->cl);
	dec(&ts->ecx);
	and_(&ts->eax, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_582950(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	add(&ts->eax, 0x4);
	push(mv, &ts->esp, 0x2E);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DDF0(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_582967;
    }
	retn(mv, &ts->esp);

loc_582967:
	push(mv, &ts->esp, 0x20);
	inc(&ts->eax);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x869D40);
	game::sub_43DC00(ts, mv);
	add(&ts->esp, 0xC);
	mov(&ts->eax, 0x869D40);
	retn(mv, &ts->esp);
}

void sub_582980(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x1C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_58298B;
    }
	or_(&ts->eax, 0xFFFFFFFF);
	retn(mv, &ts->esp);

loc_58298B:
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x1D8, 4));
	mov(&ts->eax, 0x1);
	cmp(&ts->eflags, ts->edx, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->bl, 0x1);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_5829BA;
    }
	add(&ts->ecx, 0x27C);

loc_5829A3:
	test(mv, &ts->eflags, x86::mem(ts->ecx, 4), 0x8000000);
	if (ts->eflags.zero) {
        goto loc_5829B8;
    }
	inc(&ts->eax);
	add(&ts->ecx, 0x64);
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5829A3;
    }
	movzx(&ts->eax, ts->bl);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_5829B8:
	xor_(&ts->bl, ts->bl);

loc_5829BA:
	movzx(&ts->eax, ts->bl);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_5829C0(x86::thread_state* ts, x86::memory_view* mv) {
	lea(mv, &ts->eax, x86::mem(ts->ecx + 0x1C, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), 0x0);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_5829D6;
    }
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_5829DA;
    }
	or_(&ts->eax, 0xFFFFFFFF);
	retn(mv, &ts->esp, 0x4);

loc_5829D6:
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_5829DC;
    }

loc_5829DA:
	mov(&ts->eax, ts->ecx);

loc_5829DC:
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x110, 4));
	test(&ts->eflags, ts->eax, 0x2000000);
	if (ts->eflags.zero) {
        goto loc_5829F1;
    }
	mov(&ts->eax, 0x6);
	retn(mv, &ts->esp, 0x4);

loc_5829F1:
	test(&ts->eflags, ts->eax, 0x4000000);
	if (ts->eflags.zero) {
        goto loc_5829FD;
    }
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp, 0x4);

loc_5829FD:
	test(&ts->eflags, ts->eax, 0x8000000);
	if (ts->eflags.zero) {
        goto loc_582A0C;
    }
	mov(&ts->eax, 0x1);
	retn(mv, &ts->esp, 0x4);

loc_582A0C:
	test(&ts->eflags, ts->eax, 0x10000000);
	if (ts->eflags.zero) {
        goto loc_582A1B;
    }
	mov(&ts->eax, 0x2);
	retn(mv, &ts->esp, 0x4);

loc_582A1B:
	test(&ts->eflags, ts->eax, 0x20000000);
	if (ts->eflags.zero) {
        goto loc_582A2A;
    }
	mov(&ts->eax, 0x3);
	retn(mv, &ts->esp, 0x4);

loc_582A2A:
	test(&ts->eflags, ts->eax, 0x40000000);
	if (ts->eflags.zero) {
        goto loc_582A39;
    }
	mov(&ts->eax, 0x4);
	retn(mv, &ts->esp, 0x4);

loc_582A39:
	and_(&ts->eax, 0x80000000);
	neg(&ts->eax);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0x6);
	dec(&ts->eax);
	retn(mv, &ts->esp, 0x4);
}

void sub_582A50(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->edx, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->edx);
	mov(&ts->esi, 0x5);
	xor_(&ts->ecx, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_582A60:
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	add(&ts->eax, 0x11);
	dec(&ts->esi);
	if (!ts->eflags.zero) {
        goto loc_582A60;
    }
	mov(mv, x86::mem(ts->edx + 0xF8, 4), ts->ecx);
	mov(mv, x86::mem(ts->edx + 0xFC, 4), ts->ecx);
	mov(mv, x86::mem(ts->edx + 0x100, 4), ts->ecx);
	mov(mv, x86::mem(ts->edx + 0x108, 4), ts->ecx);
	mov(mv, x86::mem(ts->edx + 0x10C, 4), 0xFFFFFFFF);
	lea(mv, &ts->eax, x86::mem(ts->edx + 0x110, 4));
	mov(&ts->esi, 0x6);

loc_582A95:
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	add(&ts->eax, 0xC1);
	dec(&ts->esi);
	if (!ts->eflags.zero) {
        goto loc_582A95;
    }
	mov(mv, x86::mem(ts->edx + 0x5A4, 1), ts->cl);
	mov(mv, x86::mem(ts->edx + 0x5A8, 4), ts->ecx);
	mov(mv, x86::mem(ts->edx + 0x5AC, 4), ts->ecx);
	mov(mv, x86::mem(ts->edx + 0x5B0, 1), ts->cl);
	mov(mv, x86::mem(ts->edx + 0x5B1, 1), ts->cl);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x28);
	lea(mv, &ts->edi, x86::mem(ts->edx + 0x55, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->edx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_582AD0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xF8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_582AEB;
    }
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0xFC, 4), 0x0);
	game::sub_73EA00(ts, mv);
	pop(mv, &ts->esp, ts->ecx);

locret_582AEB:
	retn(mv, &ts->esp);
}

void sub_582AF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x100, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));
	if (ts->eflags.zero) {
        goto loc_582B1F;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x104, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, ts->eax);
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->edi, 0x2);
	if (ts->eflags.zero) {
        goto loc_582B1F;
    }
	mov(mv, x86::mem(ts->esi + 0x100, 4), 0x0);

loc_582B1F:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(&ts->ebx, 0x1);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_582B49;
    }
	test(&ts->eflags, ts->edi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_582B49;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xF8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_582B49;
    }
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0xFC, 4), ts->edi);
	game::sub_73EA00(ts, mv);
	add(&ts->esp, 0x4);

loc_582B49:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x83637C, 4), ts->ebx);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x8);
}

void sub_582B60(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->cl, x86::mem(0x86A31C, 1));
	mov(&ts->eax, 0x1);
	test(&ts->eflags, ts->al, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_582B7F;
    }
	or_(mv, x86::mem(0x86A31C, 4), ts->eax);
	mov(&ts->ecx, 0x869D68);
	game::sub_582A50(ts, mv);

loc_582B7F:
	mov(&ts->eax, 0x869D68);
	retn(mv, &ts->esp);
}

void sub_582B90(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0xF8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_73EEE0(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x4);
}

void sub_582BB0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0xF8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_73EEA0(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x4);
}

void sub_582BD0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x24);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x8384E0);
	mov(&ts->ebp, ts->ecx);
	game::sub_51BD10(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x3C, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx, 4));
	xor_(&ts->bl, ts->bl);
	add(&ts->esp, 0x4);
	xor_(&ts->esi, ts->esi);
	cmp(&ts->eflags, ts->eax, 0x63686174);
	mov(mv, x86::mem(ts->esp + 0x10, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_582C09;
    }
	cmp(&ts->eflags, ts->eax, 0x696E7674);
	if (!ts->eflags.zero) {
        goto loc_582C11;
    }
	mov(&ts->esi, 0x3);
	goto loc_582C0B;

loc_582C09:
	xor_(&ts->esi, ts->esi);

loc_582C0B:
	mov(&ts->bl, 0x1);
	mov(mv, x86::mem(ts->esp + 0x10, 1), ts->bl);

loc_582C11:
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 1), 0x0);
	mov(&ts->ecx, 0x7);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x15, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x14, 4));
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	push(mv, &ts->esp, 0x7A10DC);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	push(mv, &ts->esp, 0x20);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7A10D4);
	push(mv, &ts->esp, ts->ecx);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_742360(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xF8, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_73EEA0(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x18);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_582C85;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_73EAE0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_582C85;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	game::sub_73EE20(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x24);
	retn(mv, &ts->esp, 0x4);

loc_582C85:
	test(&ts->eflags, ts->bl, ts->bl);
	if (ts->eflags.zero) {
        goto loc_582CA4;
    }
	push(mv, &ts->esp, 0x7902A0);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_582CA4;
    }
	push(mv, &ts->esp, 0x56);
	game::sub_50D180(ts, mv);
	add(&ts->esp, 0x4);

loc_582CA4:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	game::sub_50CEE0(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x9757A0C0);
	game::sub_55DDE0(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(0x83637C, 4), 0x1);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x24);
	retn(mv, &ts->esp, 0x4);
}

void sub_582CE0(x86::thread_state* ts, x86::memory_view* mv) {
	xor_(&ts->eax, ts->eax);
	add(&ts->ecx, 0x110);

loc_582CE8:
	cmp(mv, &ts->eflags, x86::mem(ts->ecx, 1), 0x0);
	if (ts->eflags.zero) {
        goto locret_582CFC;
    }
	inc(&ts->eax);
	add(&ts->ecx, 0xC1);
	cmp(&ts->eflags, ts->eax, 0x6);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_582CE8;
    }
	or_(&ts->eax, 0xFFFFFFFF);

locret_582CFC:
	retn(mv, &ts->esp);
}

void sub_582D00(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->bl, ts->bl);
	lea(mv, &ts->esi, x86::mem(ts->ecx + 0x131, 4));
	mov(&ts->edi, 0x6);

loc_582D15:
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebp);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_582D25;
    }
	mov(&ts->bl, 0x1);

loc_582D25:
	add(&ts->esi, 0xC1);
	dec(&ts->edi);
	if (!ts->eflags.zero) {
        goto loc_582D15;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	mov(&ts->al, ts->bl);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_582D40(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->esi, x86::mem(ts->ecx + 0x110, 4));
	mov(&ts->ebx, 0x6);

loc_582D53:
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x21, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_582D6E;
    }
	mov(&ts->ecx, 0x30);
	mov(&ts->edi, ts->esi);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 1), ts->al);

loc_582D6E:
	add(&ts->esi, 0xC1);
	dec(&ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_582D53;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_582D80(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xF8, 4));
	xor_(&ts->ebx, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x598, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x59C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x5A0, 4), ts->ebx);
	game::sub_73EF30(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_582E0D;
    }
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_582DB0:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xF8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ecx);
	game::sub_73EEE0(ts, mv);
	mov(&ts->edi, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_73EB70(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_582DD2;
    }
	inc(mv, x86::mem(ts->esi + 0x598, 4));

loc_582DD2:
	push(mv, &ts->esp, ts->edi);
	game::sub_73EAE0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_582DE5;
    }
	inc(mv, x86::mem(ts->esi + 0x5A0, 4));

loc_582DE5:
	push(mv, &ts->esp, ts->edi);
	game::sub_73F940(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_582DF8;
    }
	inc(mv, x86::mem(ts->esi + 0x59C, 4));

loc_582DF8:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xF8, 4));
	push(mv, &ts->esp, ts->edx);
	inc(&ts->ebx);
	game::sub_73EF30(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->ebx, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_582DB0;
    }
	pop(mv, &ts->esp, ts->edi);

loc_582E0D:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_582E10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_582D80(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x598, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_582E20(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	sub(&ts->esp, 0x80);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xF8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_582E9E;
    }
	push(mv, &ts->esp, 0x7A10FC);
	push(mv, &ts->esp, 0x7A10EC);
	push(mv, &ts->esp, ts->eax);
	game::sub_73F170(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x14, 1), 0x0);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x1F);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x15, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	add(&ts->esp, 0xC);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	push(mv, &ts->esp, 0x794D2C);
	push(mv, &ts->esp, 0x679FD4E9);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, 0x80);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xF8, 4));
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edx);
	game::sub_73F180(ts, mv);
	add(&ts->esp, 0x24);

loc_582E9E:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_582EB0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xF8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_73EEA0(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x1C, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_582EDF;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	game::sub_73EB50(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_582EFC;
    }

loc_582EDF:
	mov(&ts->ecx, ts->esi);
	game::sub_582D80(ts, mv);
	game::sub_582B60(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xF8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ecx);
	game::sub_740790(ts, mv);
	add(&ts->esp, 0xC);

loc_582EFC:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x8);
}

void sub_582F10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	sub(&ts->esp, 0x84);
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8, 1), 0x0);
	mov(&ts->ecx, 0x1F);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x9, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xADE22A0E);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, 0x80);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	add(&ts->esp, 0x10);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	game::sub_4A0000(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_558540(ts, mv);
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_582F80(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	sub(&ts->esp, 0x84);
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8, 1), 0x0);
	mov(&ts->ecx, 0x1F);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x9, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xD0BA5D76);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, 0x80);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	add(&ts->esp, 0x10);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	game::sub_4A0000(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_558540(ts, mv);
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_582FF0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	sub(&ts->esp, 0x80);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x4CD52237);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, 0x80);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	add(&ts->esp, 0x10);
	lea(mv, &ts->edx, x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	game::sub_4A0000(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_558540(ts, mv);
	add(&ts->esp, 0x98);
	retn(mv, &ts->esp, 0x4);
}

void sub_583050(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	sub(&ts->esp, 0x80);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x924CF95E);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, 0x80);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	add(&ts->esp, 0x10);
	lea(mv, &ts->edx, x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	game::sub_4A0000(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_558540(ts, mv);
	add(&ts->esp, 0x98);
	retn(mv, &ts->esp, 0x4);
}

void sub_5830B0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x80);
	push(mv, &ts->esp, 0x88A7CF05);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, 0x80);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C960(ts, mv);
	add(&ts->esp, 0x10);
	lea(mv, &ts->ecx, x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x1CAD26E2);
	push(mv, &ts->esp, 0x1CAD26E2);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	game::sub_4A0000(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_558540(ts, mv);
	add(&ts->esp, 0x98);
	retn(mv, &ts->esp, 0x4);
}

void sub_583100(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	game::sub_50CEE0(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	game::sub_50CEE0(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x2);
	game::sub_50CEE0(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x3);
	game::sub_50CEE0(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x9757A0C0);
	game::sub_55DDE0(ts, mv);
	add(&ts->esp, 0x28);
	retn(mv, &ts->esp);
}

void sub_583140(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xF8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_583154;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_73EF30(ts, mv);
	add(&ts->esp, 0x4);
	retn(mv, &ts->esp);

loc_583154:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);
}

void sub_583160(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x98, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xA0, 4));
	add(&ts->eax, ts->edx);
	add(mv, &ts->eax, x86::mem(ts->ecx + 0x8C, 4));
	add(mv, &ts->eax, x86::mem(ts->ecx + 0x84, 4));
	add(mv, &ts->eax, x86::mem(ts->ecx + 0x78, 4));
	add(mv, &ts->eax, x86::mem(ts->ecx + 0x70, 4));
	add(mv, &ts->eax, x86::mem(ts->ecx + 0x64, 4));
	add(mv, &ts->eax, x86::mem(ts->ecx + 0x5C, 4));
	add(mv, &ts->eax, x86::mem(ts->ecx + 0x50, 4));
	add(mv, &ts->eax, x86::mem(ts->ecx + 0x48, 4));
	add(mv, &ts->eax, x86::mem(ts->ecx + 0x3C, 4));
	add(mv, &ts->eax, x86::mem(ts->ecx + 0x34, 4));
	retn(mv, &ts->esp);
}

void sub_5831A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x9C, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xA4, 4));
	add(&ts->eax, ts->edx);
	add(mv, &ts->eax, x86::mem(ts->ecx + 0x90, 4));
	add(mv, &ts->eax, x86::mem(ts->ecx + 0x88, 4));
	add(mv, &ts->eax, x86::mem(ts->ecx + 0x7C, 4));
	add(mv, &ts->eax, x86::mem(ts->ecx + 0x74, 4));
	add(mv, &ts->eax, x86::mem(ts->ecx + 0x68, 4));
	add(mv, &ts->eax, x86::mem(ts->ecx + 0x60, 4));
	add(mv, &ts->eax, x86::mem(ts->ecx + 0x54, 4));
	add(mv, &ts->eax, x86::mem(ts->ecx + 0x4C, 4));
	add(mv, &ts->eax, x86::mem(ts->ecx + 0x40, 4));
	add(mv, &ts->eax, x86::mem(ts->ecx + 0x38, 4));
	retn(mv, &ts->esp);
}

void sub_5831E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x1C, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x1C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_5831F1;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78454C, 4));

loc_5831F1:
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78435C, 4));
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_583200(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x24, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x24, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_583211;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78454C, 4));

loc_583211:
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78435C, 4));
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_583220(x86::thread_state* ts, x86::memory_view* mv) {
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x1C, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x18, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x14, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x10, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x30, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x2C, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x28, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x24, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x20, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x44, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x40, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x3C, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x38, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x34, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x58, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x54, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x50, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4C, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x48, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x6C, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x68, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x64, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x60, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x5C, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x80, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x7C, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x78, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x74, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x70, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x94, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x90, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x8C, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x88, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x84, 4), ts->eax);
	retn(mv, &ts->esp);
}

void sub_5832B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x6F70656E);
	game::sub_742B60(ts, mv);
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto locret_5832CD;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_742C60(ts, mv);
	pop(mv, &ts->esp, ts->ecx);

locret_5832CD:
	retn(mv, &ts->esp);
}

void _iswspace(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_5832E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, 0xB);
	push(mv, &ts->esp, ts->eax);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void j__iswspace(x86::thread_state* ts, x86::memory_view* mv) {
	jmp(x86::mem(0x7FBE54, 4));
}

void sub_583300(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x4, 4));
	sub(&ts->eax, ts->edi);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_583354;
    }
	cdq(&ts->eax, ts->edx);
	idiv(&ts->eax, ts->esi);
	xor_(&ts->edx, ts->edx);
	imul(&ts->esi, ts->eax);
	add(&ts->esi, ts->edi);
	cmp(&ts->eflags, ts->eax, 0x1);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->esi);
	if (!ts->eflags.zero) {
        goto loc_58333D;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x8, 4));
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x8, 4));
	add(&ts->eax, ts->edx);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);

loc_58333D:
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x8, 4));
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	add(&ts->eax, ts->edx);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);

loc_583354:
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	add(&ts->edx, ts->eax);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->edx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_583370(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, 0x8691D8);
	xor_(&ts->edi, ts->edi);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_583380:
	cmp(mv, &ts->eflags, x86::mem(ts->esi - 0x8, 4), 0x2);
	if (!ts->eflags.zero) {
        goto loc_58339D;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	mov(mv, x86::mem(ts->esi - 0x8, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_583398;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_743B30(ts, mv);
	add(&ts->esp, 0x4);

loc_583398:
	mov(mv, x86::mem(ts->esi, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->edi);

loc_58339D:
	add(&ts->esi, 0x14);
	cmp(&ts->eflags, ts->esi, 0x86923C);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_583380;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_5833B0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x24);
	mov(mv, x86::mem(0x7FBE54, 4), 0x5832E0);
	game::sub_743AF0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(0x8667E4, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_5833DB;
    }
	xor_(&ts->al, ts->al);
	mov(mv, x86::mem(0x7FBE54, 4), 0x5832D0);
	add(&ts->esp, 0x24);
	retn(mv, &ts->esp);

loc_5833DB:
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x64);
	push(mv, &ts->esp, 0x6D776964);
	push(mv, &ts->esp, ts->eax);
	game::sub_743610(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8667E4, 4));
	push(mv, &ts->esp, 0x10);
	push(mv, &ts->esp, 0x6D6F7574);
	push(mv, &ts->esp, ts->eax);
	game::sub_743610(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x20, 1), 0x0);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x7);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x21, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x44, 4));
	push(mv, &ts->esp, ts->ecx);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, ts->edx);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0x0);
	game::sub_742E30(ts, mv);
	movzx(mv, &ts->eax, x86::mem(ts->esp + 0x54, 2));
	add(&ts->esp, 0x24);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_743140(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, 0x7A1108);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4400D0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8667E4, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x102);
	push(mv, &ts->esp, ts->eax);
	game::sub_743680(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8667E4, 4));
	add(&ts->esp, 0x20);
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->ecx, ts->ecx);
	setnz(ts->eflags, &ts->al);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(0x7FBE54, 4), 0x5832D0);
	add(&ts->esp, 0x24);
	retn(mv, &ts->esp);
}

void sub_583490(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	game::sub_43BDF0(ts, mv);
	mov(&ts->edi, ts->eax);
	xor_(&ts->esi, ts->esi);
	goto loc_5834A0;

loc_5834A0:
	game::unknown_libname_9(ts, mv);
	game::sub_43BDF0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_43BE20(ts, mv);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78435C, 4));
	add(&ts->esp, 0x8);
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, 0xF4240);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_5834D3;
    }
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_5834A0;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_5834D3:
	pop(mv, &ts->esp, ts->edi);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_5834E0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x24);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 1), 0x0);
	mov(&ts->ecx, 0x7);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0xD, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(0x7FBE54, 4), 0x5832E0);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x0);
	game::sub_742E30(ts, mv);
	movzx(mv, &ts->eax, x86::mem(ts->esp + 0x40, 2));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_743140(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, 0x7A1108);
	push(mv, &ts->esp, ts->eax);
	game::sub_4400D0(ts, mv);
	add(&ts->esp, 0x14);
	game::sub_743AF0(ts, mv);
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_583562;
    }
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(0x7FBE54, 4), 0x5832D0);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x24);
	retn(mv, &ts->esp);

loc_583562:
	push(mv, &ts->esp, 0x64);
	push(mv, &ts->esp, 0x6D776964);
	push(mv, &ts->esp, ts->esi);
	game::sub_743610(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esp + 0x44, 1));
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_583596;
    }
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, 0x6D6F7574);
	push(mv, &ts->esp, ts->esi);
	game::sub_743610(ts, mv);
	add(&ts->esp, 0xC);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x101);
	goto loc_5835B0;

loc_583596:
	push(mv, &ts->esp, 0x10);
	push(mv, &ts->esp, 0x6D6F7574);
	push(mv, &ts->esp, ts->esi);
	game::sub_743610(ts, mv);
	add(&ts->esp, 0xC);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x102);

loc_5835B0:
	push(mv, &ts->esp, ts->esi);
	game::sub_743680(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	mov(mv, x86::mem(0x7FBE54, 4), 0x5832D0);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x24);
	retn(mv, &ts->esp);
}

void sub_5835D0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x7FBE54, 4), 0x5832E0);
	xor_(&ts->esi, ts->esi);
	game::sub_743870(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_583609;
    }
	push(mv, &ts->esp, 0x800);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	game::sub_748580(ts, mv);
	add(&ts->esp, 0xC);
	mov(mv, x86::mem(0x7FBE54, 4), 0x5832D0);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_583609:
	mov(mv, &ts->eax, x86::mem(0x866774, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_583618;
    }
	inc(mv, x86::mem(0x86A320, 4));

loc_583618:
	mov(&ts->eax, ts->esi);
	mov(mv, x86::mem(0x7FBE54, 4), 0x5832D0);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_583630(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_58363B;
    }
	xor_(&ts->al, ts->al);
	retn(mv, &ts->esp);

loc_58363B:
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	game::sub_748790(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_583662;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x6, 1));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	cmp(&ts->eflags, ts->al, 0x5);
	setz(ts->eflags, &ts->al);
	mov(mv, x86::mem(ts->ecx, 1), ts->al);
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_583662:
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_583670(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	sub(&ts->esp, 0x218);
	mov(mv, &ts->dl, x86::mem(ts->ebp + 0x14, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	setz(ts->eflags, &ts->al);
	add(&ts->al, 0x5);
	mov(mv, x86::mem(ts->esp + 0x6, 1), ts->al);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x10, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0xC, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->eax);
	mov(&ts->edx, ts->ecx);
	shr(&ts->ecx, 0x2);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->edx);
	and_(&ts->ecx, 0x3);
	movs(mv, x86::mem(ts->edi, 1), x86::mem(ts->esi, 1));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, x86::mem(ts->esp + 0xC, 2), ts->ax);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_748700(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void __mkgmtime_0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_5836E0(x86::thread_state* ts, x86::memory_view* mv) {
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784264, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(0x869234, 4), ts->eax);
	mov(mv, x86::mem(0x866758, 1), 0x1);
	retn(mv, &ts->esp);
}

void sub_583710(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(0x8651AC, 4));
	xor_(&ts->esi, ts->esi);
	mov(&ts->ebx, 0x2);
	xor_(&ts->edx, ts->edx);
	goto loc_583730;

loc_583730:
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x7FBE68, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_583787;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x869074, 4));
	mov(&ts->eax, ts->edi);
	sub(&ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fdivr(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fcompp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.parity) {
        goto loc_583787;
    }
	lea(mv, &ts->ecx, x86::mem(ts->ebx - 0x2, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_583778;
    }
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_583895;
    }

loc_583778:
	mov(&ts->eax, 0x1);
	shl(&ts->eax, ts->cl);
	mov(mv, x86::mem(ts->edx + 0x869074, 4), ts->edi);
	or_(&ts->esi, ts->eax);

loc_583787:
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x7FBE6C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_5837DE;
    }
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x869078, 4));
	mov(&ts->ecx, ts->edi);
	sub(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fdivr(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fcompp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.parity) {
        goto loc_5837DE;
    }
	lea(mv, &ts->ecx, x86::mem(ts->ebx - 0x1, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_5837CF;
    }
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_583895;
    }

loc_5837CF:
	mov(&ts->eax, 0x1);
	shl(&ts->eax, ts->cl);
	mov(mv, x86::mem(ts->edx + 0x869078, 4), ts->edi);
	or_(&ts->esi, ts->eax);

loc_5837DE:
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x7FBE70, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_583830;
    }
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x86907C, 4));
	mov(&ts->ecx, ts->edi);
	sub(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fdivr(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fcompp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.parity) {
        goto loc_583830;
    }
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_58381F;
    }
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_583895;
    }

loc_58381F:
	mov(&ts->eax, 0x1);
	mov(&ts->ecx, ts->ebx);
	shl(&ts->eax, ts->cl);
	mov(mv, x86::mem(ts->edx + 0x86907C, 4), ts->edi);
	or_(&ts->esi, ts->eax);

loc_583830:
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x7FBE74, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_583883;
    }
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x869080, 4));
	mov(&ts->ecx, ts->edi);
	sub(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fdivr(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fcompp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.parity) {
        goto loc_583883;
    }
	lea(mv, &ts->ecx, x86::mem(ts->ebx + 0x1, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_583874;
    }
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_583895;
    }

loc_583874:
	mov(&ts->eax, 0x1);
	shl(&ts->eax, ts->cl);
	mov(mv, x86::mem(ts->edx + 0x869080, 4), ts->edi);
	or_(&ts->esi, ts->eax);

loc_583883:
	add(&ts->ebx, 0x4);
	lea(mv, &ts->ecx, x86::mem(ts->ebx - 0x2, 4));
	add(&ts->edx, 0x10);
	cmp(&ts->eflags, ts->ecx, 0x4);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_583730;
    }

loc_583895:
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_5838A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x8669F4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_5838B5;
    }
	mov(mv, &ts->eax, x86::mem(0x866A14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_5838B5;
    }
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_5838B5:
	mov(&ts->eax, 0x1);
	retn(mv, &ts->esp);
}

void sub_5838C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x869064, 4));
	mov(mv, &ts->ecx, x86::mem(0x869068, 4));
	inc(&ts->eax);
	mov(mv, x86::mem(0x869064, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	add(&ts->ecx, ts->eax);
	mov(mv, x86::mem(0x869068, 4), ts->ecx);
	mov(mv, &ts->cl, x86::mem(ts->esp + 0xC, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_5838F3;
    }
	inc(mv, x86::mem(0x869664, 4));
	add(mv, x86::mem(0x869668, 4), ts->eax);
	goto loc_5838FF;

loc_5838F3:
	inc(mv, x86::mem(0x869874, 4));
	add(mv, x86::mem(0x869878, 4), ts->eax);

loc_5838FF:
	movzx(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 1));
	imul(&ts->ecx, ts->ecx, 0x204);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x866C1C, 4));
	lea(mv, &ts->ecx, x86::mem(ts->ecx + 0x866A28, 4));
	inc(&ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x1F4, 4), ts->edx);
	add(mv, x86::mem(ts->ecx + 0x1F8, 4), ts->eax);
	retn(mv, &ts->esp);
}

void sub_583930(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x86906C, 4));
	mov(mv, &ts->ecx, x86::mem(0x869070, 4));
	inc(&ts->eax);
	mov(mv, x86::mem(0x86906C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	add(&ts->ecx, ts->eax);
	mov(mv, x86::mem(0x869070, 4), ts->ecx);
	mov(mv, &ts->cl, x86::mem(ts->esp + 0xC, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_583963;
    }
	inc(mv, x86::mem(0x86966C, 4));
	add(mv, x86::mem(0x869670, 4), ts->eax);
	goto loc_58396F;

loc_583963:
	inc(mv, x86::mem(0x86987C, 4));
	add(mv, x86::mem(0x869880, 4), ts->eax);

loc_58396F:
	movzx(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 1));
	imul(&ts->ecx, ts->ecx, 0x204);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x866C24, 4));
	lea(mv, &ts->ecx, x86::mem(ts->ecx + 0x866A28, 4));
	inc(&ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x1FC, 4), ts->edx);
	add(mv, x86::mem(ts->ecx + 0x200, 4), ts->eax);
	retn(mv, &ts->esp);
}

void sub_5839A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0x11);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_5839A9;
    }
	jmp(x86::mem(0x583A24, 4));

loc_5839B0:
	mov(&ts->eax, 0x7A1290);
	retn(mv, &ts->esp);

loc_5839B6:
	mov(&ts->eax, 0x7A1278);
	retn(mv, &ts->esp);

loc_5839BC:
	mov(&ts->eax, 0x7A1264);
	retn(mv, &ts->esp);

loc_5839C2:
	mov(&ts->eax, 0x7A1250);
	retn(mv, &ts->esp);

loc_5839C8:
	mov(&ts->eax, 0x7A1234);
	retn(mv, &ts->esp);

loc_5839CE:
	mov(&ts->eax, 0x7A1224);
	retn(mv, &ts->esp);

loc_5839D4:
	mov(&ts->eax, 0x7A120C);
	retn(mv, &ts->esp);

loc_5839DA:
	mov(&ts->eax, 0x7A11F4);
	retn(mv, &ts->esp);

loc_5839E0:
	mov(&ts->eax, 0x7A11E0);
	retn(mv, &ts->esp);

loc_5839E6:
	mov(&ts->eax, 0x7A11CC);
	retn(mv, &ts->esp);

loc_5839EC:
	mov(&ts->eax, 0x7A11B8);
	retn(mv, &ts->esp);

loc_5839F2:
	mov(&ts->eax, 0x7A11A4);
	retn(mv, &ts->esp);

loc_5839F8:
	mov(&ts->eax, 0x7A118C);
	retn(mv, &ts->esp);

loc_5839FE:
	mov(&ts->eax, 0x7A1174);
	retn(mv, &ts->esp);

loc_583A04:
	mov(&ts->eax, 0x7A1160);
	retn(mv, &ts->esp);

loc_583A0A:
	mov(&ts->eax, 0x7A1148);
	retn(mv, &ts->esp);

loc_583A10:
	mov(&ts->eax, 0x7A1130);
	retn(mv, &ts->esp);

loc_583A16:
	mov(&ts->eax, 0x7A1118);
	retn(mv, &ts->esp);

def_5839A9:
	mov(&ts->eax, 0x78FE78);
	retn(mv, &ts->esp);
}

void sub_583A70(x86::thread_state* ts, x86::memory_view* mv) {
	xor_(&ts->eax, ts->eax);
	xor_(&ts->edx, ts->edx);
	mov(&ts->ecx, 0x8693CC);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_583A80:
	cmp(mv, &ts->eflags, x86::mem(ts->ecx, 4), 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_583A92;
    }
	add(&ts->ecx, 0x20);
	inc(&ts->edx);
	cmp(&ts->eflags, ts->ecx, 0x86946C);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_583A80;
    }
	retn(mv, &ts->esp);

loc_583A92:
	mov(mv, &ts->ecx, x86::mem(0x866A24, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	shl(&ts->edx, 0x5);
	inc(&ts->ecx);
	mov(mv, x86::mem(ts->edx + 0x8693CC, 4), ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->edx + 0x8693C8, 4));
	mov(mv, x86::mem(0x866A24, 4), ts->ecx);
	retn(mv, &ts->esp);
}

void sub_583AC0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	xor_(&ts->esi, ts->esi);
	mov(&ts->eax, 0x8693C8);
	or_(&ts->edx, 0xFFFFFFFF);
	nop();

loc_583AD0:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x4, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_583AD9;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_583AE5;
    }

loc_583AD9:
	add(&ts->eax, 0x20);
	cmp(&ts->eflags, ts->eax, 0x869468);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_583AD0;
    }
	mov(&ts->eax, ts->esi);

loc_583AE5:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_583AF0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, ts->ecx);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), 0x7A12A0);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xD0, 1), ts->cl);
	retn(mv, &ts->esp);
}

void sub_583B10(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->esi, ts->ecx);
	game::sub_749EA0(ts, mv);
	add(&ts->esp, 0x4);
	xor_(&ts->ecx, ts->ecx);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	setnz(ts->eflags, &ts->cl);
	mov(&ts->al, ts->cl);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_583B30(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_583B4A;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_748B60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x4, 4), 0x0);

loc_583B4A:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_583B50(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	xor_(&ts->al, ts->al);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_583C06;
    }
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, 0x13);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ebp, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->ebp);
	game::sub_43DC00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x1F);
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x40, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_43DC00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x8, 4));
	push(mv, &ts->esp, 0x1F);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x60, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DC00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0xC, 4));
	push(mv, &ts->esp, 0x3);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x80, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43DC00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x10, 4));
	push(mv, &ts->esp, 0x3);
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x84, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_43DC00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x14, 4));
	push(mv, &ts->esp, 0x1F);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x88, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DC00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x18, 4));
	add(&ts->esp, 0x48);
	push(mv, &ts->esp, 0x27);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xA8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43DC00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x20, 1), 0x0);
	game::sub_748BA0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x1C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_748C60(ts, mv);
	add(&ts->esp, 0x1C);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0xD0, 1), 0x0);
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->ebp);

loc_583C06:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_583C10(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x2F8);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_749640(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x8);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	mov(mv, x86::mem(ts->esi + 0xD0, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x2F8);
	retn(mv, &ts->esp);
}

void sub_583C50(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x32C);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_749C50(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x8);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x8, 4));
	mov(mv, x86::mem(ts->esi + 0xD0, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x32C);
	retn(mv, &ts->esp);
}

void sub_583C90(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x520);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_7497A0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x8);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	mov(mv, x86::mem(ts->esi + 0xD0, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x520);
	retn(mv, &ts->esp);
}

void sub_583CD0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x274);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_749560(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x8);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_748F20(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0xD0, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x274);
	retn(mv, &ts->esp);
}

void sub_583D20(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0xF8);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_749DE0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x8);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x14, 4));
	mov(mv, x86::mem(ts->esi + 0xD0, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0xF8);
	retn(mv, &ts->esp);
}

void sub_583D90(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x32C);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x1C, 4));
	mov(&ts->edi, ts->eax);
	cmp(&ts->eflags, ts->edi, 0x6);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_583E36;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_749C50(ts, mv);
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->edi, 0x1);
	if (!ts->eflags.zero) {
        goto loc_583DC9;
    }
	mov(mv, &ts->al, x86::mem(ts->esp + 0x24C, 1));
	goto loc_583DF1;

loc_583DC9:
	cmp(&ts->eflags, ts->edi, 0x2);
	if (!ts->eflags.zero) {
        goto loc_583DD7;
    }
	mov(mv, &ts->al, x86::mem(ts->esp + 0x279, 1));
	goto loc_583DF1;

loc_583DD7:
	cmp(&ts->eflags, ts->edi, 0x3);
	if (!ts->eflags.zero) {
        goto loc_583DE5;
    }
	mov(mv, &ts->al, x86::mem(ts->esp + 0x2A6, 1));
	goto loc_583DF1;

loc_583DE5:
	cmp(&ts->eflags, ts->edi, 0x4);
	if (!ts->eflags.zero) {
        goto loc_583E1B;
    }
	mov(mv, &ts->al, x86::mem(ts->esp + 0x2D3, 1));

loc_583DF1:
	cmp(&ts->eflags, ts->al, 0x5E);
	if (!ts->eflags.zero) {
        goto loc_583E1B;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x33);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x304, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x40, 4));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_583E1B;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_749DB0(ts, mv);
	add(&ts->esp, 0x8);

loc_583E1B:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ecx);
	game::sub_748E10(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x8);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0xD0, 1), 0x0);
	call(ts, mv, x86::mem(ts->edx + 0x30, 4));

loc_583E36:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x32C);
	retn(mv, &ts->esp);
}

void sub_583E40(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x520);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x20, 4));
	mov(&ts->edi, ts->eax);
	cmp(&ts->eflags, ts->edi, 0x6);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_583EE1;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_7497A0(ts, mv);
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->edi, 0x1);
	if (!ts->eflags.zero) {
        goto loc_583E79;
    }
	mov(mv, &ts->al, x86::mem(ts->esp + 0x24C, 1));
	goto loc_583EA1;

loc_583E79:
	cmp(&ts->eflags, ts->edi, 0x2);
	if (!ts->eflags.zero) {
        goto loc_583E87;
    }
	mov(mv, &ts->al, x86::mem(ts->esp + 0x279, 1));
	goto loc_583EA1;

loc_583E87:
	cmp(&ts->eflags, ts->edi, 0x3);
	if (!ts->eflags.zero) {
        goto loc_583E95;
    }
	mov(mv, &ts->al, x86::mem(ts->esp + 0x2A6, 1));
	goto loc_583EA1;

loc_583E95:
	cmp(&ts->eflags, ts->edi, 0x4);
	if (!ts->eflags.zero) {
        goto loc_583EC6;
    }
	mov(mv, &ts->al, x86::mem(ts->esp + 0x2D3, 1));

loc_583EA1:
	cmp(&ts->eflags, ts->al, 0x5E);
	if (!ts->eflags.zero) {
        goto loc_583EC6;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x44, 4));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_583EC6;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_749AE0(ts, mv);
	add(&ts->esp, 0x8);

loc_583EC6:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ecx);
	game::sub_748E10(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x8);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0xD0, 1), 0x0);
	call(ts, mv, x86::mem(ts->edx + 0x34, 4));

loc_583EE1:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x520);
	retn(mv, &ts->esp);
}

void sub_583F50(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	game::sub_582AF0(ts, mv);
	retn(mv, &ts->esp);
}

void sub_583F70(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_582BD0(ts, mv);
	retn(mv, &ts->esp);
}

void sub_583F80(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x130, 4));
	cmp(&ts->eflags, ts->eax, ts->edx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x12C, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_583F9C;
    }
	mov(&ts->eax, ts->edx);

loc_583F9C:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x134, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_583FA8;
    }
	mov(&ts->eax, ts->esi);

loc_583FA8:
	push(mv, &ts->esp, ts->edi);
	sub(&ts->eax, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_581D00(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_583FC0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, ts->ecx);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->eax, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0x400, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x404, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x408, 1), 0x1);
	retn(mv, &ts->esp);
}

void sub_583FE0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	movsx(&ts->eax, ts->bx);
	push(mv, &ts->esp, 0x10);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->edi, ts->ecx);
	game::sub_581D00(ts, mv);
	xor_(&ts->esi, ts->esi);
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_584014;
    }
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x14, 4));
	nop();

loc_584000:
	movzx(mv, &ts->ecx, x86::mem(ts->esi + (ts->ebp), 1));
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_581D00(ts, mv);
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_584000;
    }
	pop(mv, &ts->esp, ts->ebp);

loc_584014:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x8);
}

void sub_584020(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x10);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	xor_(&ts->esi, ts->esi);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ebx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->esi);
	game::sub_581D90(ts, mv);
	movsx(mv, &ts->edi, x86::mem(ts->esp + 0xC, 2));
	cmp(&ts->eflags, ts->edi, ts->esi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_584069;
    }
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x18, 4));

loc_584046:
	push(mv, &ts->esp, 0x8);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0x0);
	game::sub_581D90(ts, mv);
	mov(mv, &ts->dl, x86::mem(ts->esp + 0x18, 1));
	mov(mv, x86::mem(ts->esi + (ts->ebp), 1), ts->dl);
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_584046;
    }
	pop(mv, &ts->esp, ts->ebp);

loc_584069:
	mov(&ts->eax, ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x8);
}

void sub_584080(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	game::sub_43DBB0(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_583FE0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_5840A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_584020(ts, mv);
	mov(mv, x86::mem(ts->eax + (ts->esi), 1), 0x0);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_5840C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	xor_(&ts->esi, ts->esi);
	test(&ts->eflags, ts->ebx, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_5840E8;
    }
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x14, 4));

loc_5840D4:
	movzx(mv, &ts->eax, x86::mem(ts->esi + (ts->ebp), 1));
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_581D00(ts, mv);
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5840D4;
    }
	pop(mv, &ts->esp, ts->ebp);

loc_5840E8:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x8);
}

void sub_5840F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));
	xor_(&ts->esi, ts->esi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(&ts->ebx, ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_584127;
    }
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x14, 4));

loc_584104:
	push(mv, &ts->esp, 0x8);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0x0);
	game::sub_581D90(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->esp + 0x18, 1));
	mov(mv, x86::mem(ts->esi + (ts->ebp), 1), ts->cl);
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_584104;
    }
	pop(mv, &ts->esp, ts->ebp);

loc_584127:
	mov(&ts->eax, ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x8);
}

void sub_584130(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->eax);
	game::sub_581D00(ts, mv);
	retn(mv, &ts->esp, 0x4);
}

void sub_584140(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_58414E;
    }
	push(mv, &ts->esp, ts->eax);
	game::j__free(ts, mv);

loc_58414D:
	pop(mv, &ts->esp, ts->ecx);

locret_58414E:
	retn(mv, &ts->esp);
}

void sub_584150(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_5841B2;
    }
	cmp(&ts->eflags, ts->eax, 0x6);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_5841B2;
    }
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x14, 4));
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5841B2;
    }
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x18, 4));
	lea(mv, &ts->esi, x86::mem(ts->ecx + (ts->eax*8) + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero) {
        goto loc_584187;
    }

loc_584177:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x8, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_584181;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0xC, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_5841AA;
    }

loc_584181:
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_584177;
    }

loc_584187:
	push(mv, &ts->esp, 0x3);
	push(mv, &ts->esp, 0x10);
	game::sub_6D7110(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5841B2;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->edi);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);

loc_5841AA:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0xC);

loc_5841B2:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	or_(&ts->eax, 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0xC);
}

void sub_5841C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x8, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_5841D0;
    }
	or_(&ts->eax, 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp, 0x8);

loc_5841D0:
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x34, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->esi, x86::mem(ts->ecx + 0x34, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero) {
        goto loc_5841F0;
    }

loc_5841E0:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x8, 4), ts->edi);
	if (!ts->eflags.zero) {
        goto loc_5841EA;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0xC, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_584213;
    }

loc_5841EA:
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_5841E0;
    }

loc_5841F0:
	push(mv, &ts->esp, 0x3);
	push(mv, &ts->esp, 0x10);
	game::sub_6D7110(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_58421B;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ebx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);

loc_584213:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp, 0x8);

loc_58421B:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	or_(&ts->eax, 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp, 0x8);
}

void sub_584230(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x34, 4));
	add(&ts->ecx, 0x34);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto locret_58426B;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));

loc_584243:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x8, 4), ts->esi);
	if (!ts->eflags.zero) {
        goto loc_58424D;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0xC, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_584257;
    }

loc_58424D:
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_584243;
    }
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);

loc_584257:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->esi);

locret_58426B:
	retn(mv, &ts->esp, 0x8);
}

void sub_584270(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_5842BF;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_584341;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x28, 4));
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_58429C;
    }
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_7451F0(ts, mv);
	add(&ts->esp, 0x8);

loc_58429C:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4C, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_5842B3;
    }
	mov(&ts->ecx, ts->edi);
	game::sub_584140(ts, mv);
	push(mv, &ts->esp, ts->edi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_5842B3:
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), 0x0);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);

loc_5842BF:
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->bl, x86::mem(ts->esp + 0x14, 1));
	push(mv, &ts->esp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_584305;
    }
	cmp(mv, &ts->eflags, ts->ecx, x86::mem(ts->eax + 0x18, 4));
	if (!ts->eflags.zero) {
        goto loc_584305;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x28, 4));
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_5842E3;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x44, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_7451F0(ts, mv);
	add(&ts->esp, 0x8);

loc_5842E3:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4C, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_5842FA;
    }
	mov(&ts->ecx, ts->edi);
	game::sub_584140(ts, mv);
	push(mv, &ts->esp, ts->edi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_5842FA:
	test(&ts->eflags, ts->bl, ts->bl);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_58433F;
    }

loc_584305:
	lea(mv, &ts->ebp, x86::mem(ts->esi + 0x3C, 4));
	mov(mv, &ts->esi, x86::mem(ts->ebp, 4));
	cmp(&ts->eflags, ts->esi, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_58433F;
    }
	nop();

loc_584310:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x18, 4), ts->edx);
	if (!ts->eflags.zero) {
        goto loc_584339;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edi);
	game::sub_584140(ts, mv);
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->bl, ts->bl);
	mov(&ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_58433F;
    }

loc_584339:
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_584310;
    }

loc_58433F:
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);

loc_584341:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_584350(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_58438F;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_58436F;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x1C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	call(ts, mv, ts->ecx);
	add(&ts->esp, 0x8);

loc_58436F:
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x4C, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_584387;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_584140(ts, mv);
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_584387:
	mov(mv, x86::mem(ts->edi + 0x4C, 4), 0x0);
	pop(mv, &ts->esp, ts->esi);

loc_58438F:
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp, 0x4);
}

void sub_5843A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x4, 4));
	add(&ts->edi, 0x4);
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_5843D2;
    }
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_5843C0:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	call(ts, mv, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_5843C0;
    }

loc_5843D2:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	game::nullsub_12(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_5843F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x24, 4));
	add(&ts->edi, 0x24);
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_584422;
    }
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_584410:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	call(ts, mv, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_584410;
    }

loc_584422:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	game::nullsub_12(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_584440(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x20);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x30, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_5844DF;
    }
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->esi, ts->esi);
	lea(mv, &ts->edi, x86::mem(ts->ebx + 0x50, 4));
	nop();

loc_584460:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x10, 4));
	push(mv, &ts->esp, 0x2C);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0x10);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x7A12F4);
	push(mv, &ts->esp, ts->eax);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_7421D0(ts, mv);
	add(&ts->esp, 0x18);
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_584493;
    }
	inc(&ts->esi);
	add(&ts->edi, 0x10);
	cmp(&ts->eflags, ts->esi, 0x4);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_584460;
    }

loc_584493:
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x10, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 1), 0x0);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x7);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x11, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0x20);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	push(mv, &ts->esp, 0x7A12EC);
	push(mv, &ts->esp, ts->edx);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_742360(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_743190(ts, mv);
	add(&ts->esp, 0x14);
	mov(mv, x86::mem(ts->ebx + 0x9C, 4), ts->eax);
	pop(mv, &ts->esp, ts->edi);

loc_5844DF:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x4C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_584515;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_5844F7;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x1C, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ebp);
	call(ts, mv, ts->ecx);
	add(&ts->esp, 0x8);

loc_5844F7:
	mov(mv, &ts->esi, x86::mem(ts->ebx + 0x4C, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_58450E;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_584140(ts, mv);
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_58450E:
	mov(mv, x86::mem(ts->ebx + 0x4C, 4), 0x0);

loc_584515:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp);
}

void sub_584520(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_584555;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, 0x86679C);
	push(mv, &ts->esp, 0x7A1300);
	push(mv, &ts->esp, ts->eax);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_742360(ts, mv);
	add(&ts->esp, 0x10);
	goto loc_58455C;

loc_584555:
	mov(mv, x86::mem(0x86679C, 1), 0x0);

loc_58455C:
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_584596;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_584578;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x1C, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->esi);
	call(ts, mv, ts->ecx);
	add(&ts->esp, 0x8);

loc_584578:
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x4C, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_58458F;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_584140(ts, mv);
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_58458F:
	mov(mv, x86::mem(ts->edi + 0x4C, 4), 0x0);

loc_584596:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_5845A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->edi + 0xA1, 1), 0x1);
	mov(mv, &ts->eax, x86::mem(ts->edx + 0xC, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_5845C0;
    }
	mov(mv, x86::mem(ts->edi + 0xA1, 1), ts->bl);

loc_5845C0:
	mov(mv, x86::mem(0x869888, 1), ts->bl);
	mov(mv, x86::mem(0x8698C8, 4), ts->ebx);
	mov(mv, x86::mem(0x8698CC, 1), ts->bl);
	mov(&ts->eax, 0x8698DC);
	goto loc_5845E0;

loc_5845E0:
	mov(mv, x86::mem(ts->eax, 1), ts->bl);
	add(&ts->eax, 0x10);
	cmp(&ts->eflags, ts->eax, 0x86993C);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5845E0;
    }
	mov(mv, x86::mem(0x86993C, 1), ts->bl);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4C, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_584626;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_58460A;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	call(ts, mv, ts->ecx);
	add(&ts->esp, 0x8);

loc_58460A:
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x4C, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_584622;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_584140(ts, mv);
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_584622:
	mov(mv, x86::mem(ts->edi + 0x4C, 4), ts->ebx);
	pop(mv, &ts->esp, ts->esi);

loc_584626:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_584630(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_584671;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_584651;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x1C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	call(ts, mv, ts->ecx);
	add(&ts->esp, 0x8);

loc_584651:
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x4C, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_584669;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_584140(ts, mv);
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_584669:
	mov(mv, x86::mem(ts->edi + 0x4C, 4), 0x0);
	pop(mv, &ts->esp, ts->esi);

loc_584671:
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp);
}

void sub_584680(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x86A328, 4));
	xor_(&ts->edx, ts->edx);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, ts->edx);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(0x86A328, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x20, 4), ts->eax);
	mov(&ts->ecx, 0x1);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_5846CD;
    }
	mov(mv, x86::mem(ts->esi + 0x20, 4), ts->ecx);

loc_5846CD:
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x14, 1), ts->cl);
	if (!ts->eflags.zero) {
        goto loc_5846E9;
    }
	mov(mv, &ts->eax, x86::mem(0x86A324, 4));
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_5846E4;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	mov(mv, x86::mem(0x86A324, 4), ts->eax);

loc_5846E4:
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->eax);
	goto loc_5846F7;

loc_5846E9:
	cmp(mv, &ts->eflags, x86::mem(0x86A324, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_5846F7;
    }
	mov(mv, x86::mem(0x86A324, 4), ts->edx);

loc_5846F7:
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	cmp(&ts->eflags, ts->edi, ts->edx);
	if (ts->eflags.zero) {
        goto loc_58471F;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->edi, 1), ts->dl);
	if (ts->eflags.zero) {
        goto loc_58471F;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_43DBB0(ts, mv);
	inc(&ts->eax);
	push(mv, &ts->esp, 0x3);
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7110(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->eax);
	game::sub_43DBD0(ts, mv);
	add(&ts->esp, 0x14);

loc_58471F:
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x1C);
}

void sub_584730(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->edi, ts->edi);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_58475D;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->ecx, ts->edi);
	if (ts->eflags.zero) {
        goto loc_58474E;
    }
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x5823F0);
	game::sub_584230(ts, mv);

loc_58474E:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_747630(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->edi);

loc_58475D:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0xC, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->edi);
	mov(mv, x86::mem(ts->esi, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_584782;
    }
	push(mv, &ts->esp, ts->eax);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->edi);

loc_584782:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_584795;
    }
	push(mv, &ts->esp, ts->eax);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->edi);

loc_584795:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_5847A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x10, 4));
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->ecx + 0x10, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_5847D4;
    }
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x14, 4));

loc_5847B6:
	cmp(mv, &ts->eflags, ts->ebx, x86::mem(ts->esi + 0x8, 4));
	if (!ts->eflags.zero) {
        goto loc_5847CC;
    }
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5847D2;
    }

loc_5847CC:
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_5847B6;
    }

loc_5847D2:
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);

loc_5847D4:
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->esi, ts->edi);
	setz(ts->eflags, &ts->al);
	pop(mv, &ts->esp, ts->edi);
	dec(&ts->eax);
	and_(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_5847F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x10, 4));
	add(&ts->ecx, 0x10);
	xor_(&ts->edx, ts->edx);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_58480D;
    }
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));

loc_584801:
	cmp(&ts->eflags, ts->edx, ts->esi);
	if (ts->eflags.zero) {
        goto loc_58480C;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	inc(&ts->edx);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_584801;
    }

loc_58480C:
	pop(mv, &ts->esp, ts->esi);

loc_58480D:
	xor_(&ts->edx, ts->edx);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	setz(ts->eflags, &ts->dl);
	dec(&ts->edx);
	and_(&ts->eax, ts->edx);
	retn(mv, &ts->esp, 0x4);
}

void sub_584820(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->ecx + 0x8, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_584849;
    }
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x10, 4));

loc_584831:
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_584848;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_584831;
    }

loc_584848:
	pop(mv, &ts->esp, ts->ebx);

loc_584849:
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->esi, ts->edi);
	setz(ts->eflags, &ts->al);
	pop(mv, &ts->esp, ts->edi);
	dec(&ts->eax);
	and_(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_584860(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	sub(&ts->esp, 0x404);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x20, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ebx, 4));
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_584899;
    }
	push(mv, &ts->esp, 0x10);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DC00(ts, mv);
	add(&ts->esp, 0xC);
	goto loc_58489D;

loc_584899:
	mov(mv, x86::mem(ts->esi + 0xC, 1), 0x0);

loc_58489D:
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8651AC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784264, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->ebx, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 1), 0x0);
	mov(&ts->ecx, 0xFF);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x11, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x7A1308);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, 0x400);
	push(mv, &ts->esp, ts->eax);
	game::sub_741690(ts, mv);
	add(&ts->ebx, 0x4);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x79D53C);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, 0x400);
	push(mv, &ts->esp, ts->ecx);
	game::sub_741A50(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x850088, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x7903D4);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x38, 4));
	push(mv, &ts->esp, 0x400);
	push(mv, &ts->esp, ts->eax);
	game::sub_741690(ts, mv);
	mov(mv, &ts->bl, x86::mem(0x850098, 1));
	xor_(&ts->ecx, ts->ecx);
	test(&ts->eflags, ts->bl, ts->bl);
	setnz(ts->eflags, &ts->cl);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x40, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x7903CC);
	push(mv, &ts->esp, 0x400);
	push(mv, &ts->esp, ts->edx);
	game::sub_741690(ts, mv);
	movzx(mv, &ts->eax, x86::mem(0x850080, 1));
	add(&ts->esp, 0x40);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7903C4);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, 0x400);
	push(mv, &ts->esp, ts->ecx);
	game::sub_741690(ts, mv);
	mov(mv, &ts->bl, x86::mem(0x85009A, 1));
	xor_(&ts->edx, ts->edx);
	test(&ts->eflags, ts->bl, ts->bl);
	setnz(ts->eflags, &ts->dl);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x7903BC);
	push(mv, &ts->esp, 0x400);
	push(mv, &ts->esp, ts->eax);
	game::sub_741690(ts, mv);
	movzx(mv, &ts->ecx, x86::mem(0x85008C, 1));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x7903B4);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x38, 4));
	push(mv, &ts->esp, 0x400);
	push(mv, &ts->esp, ts->edx);
	game::sub_741690(ts, mv);
	movzx(mv, &ts->eax, x86::mem(0x850099, 1));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7903AC);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x48, 4));
	push(mv, &ts->esp, 0x400);
	push(mv, &ts->esp, ts->ecx);
	game::sub_741690(ts, mv);
	movzx(mv, &ts->edx, x86::mem(0x8500BA, 2));
	add(&ts->esp, 0x40);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x790394);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, 0x400);
	push(mv, &ts->esp, ts->eax);
	game::sub_741690(ts, mv);
	push(mv, &ts->esp, 0x85009C);
	push(mv, &ts->esp, 0x790380);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, 0x400);
	push(mv, &ts->esp, ts->ecx);
	game::sub_741A50(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x850090, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x790378);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x38, 4));
	push(mv, &ts->esp, 0x400);
	push(mv, &ts->esp, ts->eax);
	game::sub_741690(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x850094, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x790370);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x48, 4));
	push(mv, &ts->esp, 0x400);
	push(mv, &ts->esp, ts->edx);
	game::sub_741690(ts, mv);
	movzx(mv, &ts->eax, x86::mem(0x8500B8, 2));
	add(&ts->esp, 0x40);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_516280(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7903A4);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, 0x400);
	push(mv, &ts->esp, ts->ecx);
	game::sub_741690(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x8500BC, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x79039C);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, 0x400);
	push(mv, &ts->esp, ts->eax);
	game::sub_741690(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x38, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DBB0(ts, mv);
	inc(&ts->eax);
	push(mv, &ts->esp, ts->eax);
	game::j__malloc(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x40, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x20, 4), ts->eax);
	game::sub_43DBD0(ts, mv);
	add(&ts->esp, 0x38);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0xC);
}

void sub_584AA0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, 0x0);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, 0x7A1308);
	mov(mv, x86::mem(ts->esi + 0x20, 4), 0x0);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x24, 4), 0x0);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_7420B0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_584AEB;
    }
	push(mv, &ts->esp, 0x10);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43DC00(ts, mv);
	add(&ts->esp, 0xC);
	goto loc_584AEF;

loc_584AEB:
	mov(mv, x86::mem(ts->esi + 0xC, 1), 0x0);

loc_584AEF:
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8651AC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784264, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	game::__ftol2(ts, mv);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->eax);
	game::sub_43DBB0(ts, mv);
	inc(&ts->eax);
	push(mv, &ts->esp, ts->eax);
	game::j__malloc(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x20, 4), ts->eax);
	game::sub_43DBD0(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);
}

void sub_584B40(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x20, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_584B4E;
    }
	push(mv, &ts->esp, ts->eax);
	game::j__free(ts, mv);
	pop(mv, &ts->esp, ts->ecx);

locret_584B4E:
	retn(mv, &ts->esp);
}

void sub_584B50(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx, 4));
	game::Iostream_init__Iostream_init_void_(ts, mv);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_584B6B;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));

loc_584B60:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x8, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_584B71;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_584B60;
    }

loc_584B6B:
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_584B71:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_584B80(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->edi);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	mov(&ts->edi, ts->eax);
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_584BAB;
    }
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x10, 4));

loc_584B94:
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xE, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_584BB3;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_584B94;
    }

loc_584BAB:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

loc_584BB3:
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_584BC0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_584B80(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_584C18;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_584C18;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	game::sub_73D970(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_73D9B0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_584C18;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x8, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x4, 4), 0x3);
	jmp(ts->eax);

loc_584C18:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_584C20(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x5B1, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_584D74;
    }
	push(mv, &ts->esp, ts->ebp);
	xor_(&ts->ebp, ts->ebp);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebp);
	game::sub_50CEE0(ts, mv);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x1);
	game::sub_50CEE0(ts, mv);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x2);
	game::sub_50CEE0(ts, mv);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x3);
	game::sub_50CEE0(ts, mv);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x9757A0C0);
	game::sub_55DDE0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xF8, 4));
	add(&ts->esp, 0x28);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_584C7D;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_73EF30(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	goto loc_584C81;

loc_584C7D:
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ebp);

loc_584C81:
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0xC, 4), ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->ebp);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_584CE3;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0x55, 4));

loc_584C90:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xF8, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->eax);
	game::sub_73EEE0(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_584CD6;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_73F940(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_584CD6;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x10, 4), 0xA);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_584CD6;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_73EAD0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_43DBD0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	add(&ts->esp, 0xC);
	inc(&ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	add(&ts->ebx, 0x10);

loc_584CD6:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	inc(&ts->ebp);
	cmp(&ts->eflags, ts->ebp, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_584C90;
    }
	pop(mv, &ts->esp, ts->edi);
	xor_(&ts->ebp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);

loc_584CE3:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xF8, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_73EA00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xF8, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edx);
	game::sub_73EA70(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xF8, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->eax);
	game::sub_73E9E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xF8, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ecx);
	game::sub_73EAA0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xF8, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edx);
	game::sub_73EA40(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x5A4, 1), 0x0);
	mov(mv, x86::mem(0x836378, 4), ts->ebp);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x108, 4));
	add(&ts->esp, 0x34);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_584D57;
    }
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->eax);
	game::sub_73E380(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x108, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_73E2C0(ts, mv);
	add(&ts->esp, 0xC);

loc_584D57:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xF8, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x108, 4), ts->ebp);
	game::sub_73F810(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x5B1, 1), 0x1);
	pop(mv, &ts->esp, ts->ebp);

loc_584D74:
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_584D80(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xF8, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x5B1, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_584F02;
    }
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x5A4, 1), ts->bl);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x836378, 4), ts->ebx);
	game::sub_50CEE0(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x1);
	game::sub_50CEE0(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x2);
	game::sub_50CEE0(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x3);
	game::sub_50CEE0(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x9757A0C0);
	game::sub_55DDE0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xF8, 4));
	add(&ts->esp, 0x28);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_584DED;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_73EF30(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	goto loc_584DF1;

loc_584DED:
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->ebx);

loc_584DF1:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->ebp);
	xor_(&ts->ebp, ts->ebp);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_584E4C;
    }
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_584E00:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xF8, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->eax);
	game::sub_73EEE0(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_584E43;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_73F1F0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, 0x400000);
	if (ts->eflags.zero) {
        goto loc_584E43;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	game::sub_73EAD0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xF8, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_73FB50(ts, mv);
	add(&ts->esp, 0x14);

loc_584E43:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	inc(&ts->ebp);
	cmp(&ts->eflags, ts->ebp, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_584E00;
    }

loc_584E4C:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xF8, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_584E65;
    }
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0xFC, 4), ts->ebx);
	game::sub_73EA00(ts, mv);
	add(&ts->esp, 0x4);

loc_584E65:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xF8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edx);
	game::sub_73EA70(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xF8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	game::sub_73E9E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xF8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ecx);
	game::sub_73EAA0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xF8, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_73F7A0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xF8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_73F7D0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xFC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x100, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x104, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xF8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x5A4, 1), ts->bl);
	mov(mv, x86::mem(0x836378, 4), ts->ebx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x108, 4));
	add(&ts->esp, 0x2C);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_584EEE;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	game::sub_73E380(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x108, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_73E2C0(ts, mv);
	add(&ts->esp, 0xC);

loc_584EEE:
	mov(&ts->ecx, 0x28);
	xor_(&ts->eax, ts->eax);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x55, 4));
	mov(mv, x86::mem(ts->esi + 0x108, 4), ts->ebx);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);

loc_584F02:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_584F10(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xF8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_584F3D;
    }
	mov(mv, x86::mem(0x7FBE54, 4), 0x5832E0);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xF8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_740600(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(0x7FBE54, 4), 0x5832D0);

locret_584F3D:
	retn(mv, &ts->esp);
}

void sub_584F40(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xF8, 4));
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->edi, ts->edi);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_584F63;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_73EF30(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	goto loc_584F67;

loc_584F63:
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);

loc_584F67:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	xor_(&ts->bl, ts->bl);
	cmp(&ts->eflags, ts->eax, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 1), ts->bl);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_585007;
    }
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_584F80:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xF8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_73EEE0(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_584FDA;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_73EB70(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_584FDA;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_73EB00(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_584FDA;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_73EAE0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_584FDA;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->bl, 0x1);
	game::sub_73EAD0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0xF8, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_740790(ts, mv);
	add(&ts->esp, 0xC);

loc_584FDA:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_584F80;
    }
	test(&ts->eflags, ts->bl, ts->bl);
	mov(mv, x86::mem(ts->esp + 0x14, 1), ts->bl);
	pop(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero) {
        goto loc_585007;
    }
	push(mv, &ts->esp, 0x7902A0);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_585007;
    }
	push(mv, &ts->esp, 0x56);
	game::sub_50D180(ts, mv);
	add(&ts->esp, 0x4);

loc_585007:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x3);
	game::sub_50CEE0(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x9757A0C0);
	game::sub_55DDE0(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(0x83637C, 4), 0x1);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x8);
}

void sub_585040(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_58507F;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	xor_(&ts->eax, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->edx + 0x50, 4));

loc_585058:
	cmp(mv, &ts->eflags, x86::mem(ts->ecx, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_585068;
    }
	inc(&ts->eax);
	add(&ts->ecx, 0x10);
	cmp(&ts->eflags, ts->eax, 0x4);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_585058;
    }
	goto loc_58507F;

loc_585068:
	add(&ts->eax, 0x5);
	push(mv, &ts->esp, 0xF);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	shl(&ts->eax, 0x4);
	push(mv, &ts->esp, ts->ecx);
	add(&ts->eax, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DC00(ts, mv);
	add(&ts->esp, 0xC);

loc_58507F:
	mov(mv, x86::mem(ts->esi + 0x4, 1), 0x0);
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5850BB;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_58509D;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x1C, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, ts->ecx);
	add(&ts->esp, 0x8);

loc_58509D:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4C, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_5850B4;
    }
	mov(&ts->ecx, ts->edi);
	game::sub_584140(ts, mv);
	push(mv, &ts->esp, ts->edi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_5850B4:
	mov(mv, x86::mem(ts->esi + 0x4C, 4), 0x0);

loc_5850BB:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_5850C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_58515E;
    }
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->ebp);
	xor_(&ts->edi, ts->edi);
	lea(mv, &ts->ebp, x86::mem(ts->ebx + 0x4, 4));
	mov(&ts->esi, 0x50);

loc_5850E2:
	mov(mv, &ts->ecx, x86::mem(ts->ebx, 4));
	add(&ts->ecx, ts->esi);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_585102;
    }
	add(&ts->esi, 0x10);
	inc(&ts->edi);
	cmp(&ts->eflags, ts->esi, 0x90);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5850E2;
    }
	goto loc_58510E;

loc_585102:
	mov(mv, &ts->edx, x86::mem(ts->ebx, 4));
	add(&ts->edi, 0x5);
	shl(&ts->edi, 0x4);
	mov(mv, x86::mem(ts->edi + (ts->edx), 1), 0x0);

loc_58510E:
	xor_(&ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x3);
	mov(&ts->ebp, 0x80);
	mov(&ts->edi, 0x50);

loc_585122:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	lea(mv, &ts->ecx, x86::mem(ts->edi + (ts->eax), 4));
	lea(mv, &ts->esi, x86::mem(ts->eax + (ts->ebp), 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_585139;
    }
	inc(&ts->ebx);
	add(&ts->edi, 0x10);
	goto loc_585156;

loc_585139:
	cmp(mv, &ts->eflags, x86::mem(ts->esi, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_58514F;
    }
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DBD0(ts, mv);
	add(&ts->esp, 0x8);
	inc(&ts->ebx);
	mov(mv, x86::mem(ts->esi, 1), 0x0);
	add(&ts->edi, 0x10);

loc_58514F:
	dec(mv, x86::mem(ts->esp + 0x10, 4));
	sub(&ts->ebp, 0x10);

loc_585156:
	cmp(mv, &ts->eflags, ts->ebx, x86::mem(ts->esp + 0x10, 4));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_585122;
    }
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);

loc_58515E:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->esi, x86::mem(ts->eax, 4));
	mov(mv, x86::mem(ts->eax + 0x4, 1), 0x0);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5851A2;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_585184;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x1C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	call(ts, mv, ts->ecx);
	add(&ts->esp, 0x8);

loc_585184:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4C, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_58519B;
    }
	mov(&ts->ecx, ts->edi);
	game::sub_584140(ts, mv);
	push(mv, &ts->esp, ts->edi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_58519B:
	mov(mv, x86::mem(ts->esi + 0x4C, 4), 0x0);

loc_5851A2:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_5851B0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x98, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xA0, 4));
	add(&ts->eax, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x84, 4));
	push(mv, &ts->esp, ts->esi);
	add(mv, &ts->eax, x86::mem(ts->ecx + 0x8C, 4));
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x78, 4));
	add(&ts->eax, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x70, 4));
	add(&ts->eax, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x64, 4));
	add(&ts->eax, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x5C, 4));
	add(&ts->eax, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x50, 4));
	add(&ts->eax, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x48, 4));
	add(&ts->eax, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x3C, 4));
	add(&ts->eax, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x34, 4));
	add(&ts->eax, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x9C, 4));
	add(&ts->eax, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0xA4, 4));
	add(&ts->edx, ts->esi);
	add(mv, &ts->edx, x86::mem(ts->ecx + 0x90, 4));
	add(mv, &ts->edx, x86::mem(ts->ecx + 0x88, 4));
	add(mv, &ts->edx, x86::mem(ts->ecx + 0x7C, 4));
	add(mv, &ts->edx, x86::mem(ts->ecx + 0x74, 4));
	add(mv, &ts->edx, x86::mem(ts->ecx + 0x68, 4));
	add(mv, &ts->edx, x86::mem(ts->ecx + 0x60, 4));
	add(mv, &ts->edx, x86::mem(ts->ecx + 0x54, 4));
	add(mv, &ts->edx, x86::mem(ts->ecx + 0x4C, 4));
	add(mv, &ts->edx, x86::mem(ts->ecx + 0x40, 4));
	add(mv, &ts->edx, x86::mem(ts->ecx + 0x38, 4));
	add(&ts->eax, ts->edx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_585230(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	game::sub_5851B0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_585242;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_585242:
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0xA0, 4));
	add(mv, &ts->edx, x86::mem(ts->ecx + 0x98, 4));
	add(mv, &ts->edx, x86::mem(ts->ecx + 0x8C, 4));
	add(mv, &ts->edx, x86::mem(ts->ecx + 0x84, 4));
	add(mv, &ts->edx, x86::mem(ts->ecx + 0x78, 4));
	add(mv, &ts->edx, x86::mem(ts->ecx + 0x70, 4));
	add(mv, &ts->edx, x86::mem(ts->ecx + 0x64, 4));
	add(mv, &ts->edx, x86::mem(ts->ecx + 0x5C, 4));
	add(mv, &ts->edx, x86::mem(ts->ecx + 0x50, 4));
	add(mv, &ts->edx, x86::mem(ts->ecx + 0x48, 4));
	add(mv, &ts->edx, x86::mem(ts->ecx + 0x3C, 4));
	add(mv, &ts->edx, x86::mem(ts->ecx + 0x34, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	mov(mv, x86::mem(ts->esp, 4), ts->edx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_585284;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78454C, 4));

loc_585284:
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_585296;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78454C, 4));

loc_585296:
	fdivp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784258, 4));
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_5852A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x84, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x98, 4));
	add(&ts->eax, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x5C, 4));
	push(mv, &ts->esp, ts->esi);
	add(mv, &ts->eax, x86::mem(ts->ecx + 0x70, 4));
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x48, 4));
	add(&ts->eax, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x34, 4));
	add(&ts->eax, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x88, 4));
	add(&ts->eax, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x9C, 4));
	add(&ts->edx, ts->esi);
	add(mv, &ts->edx, x86::mem(ts->ecx + 0x74, 4));
	add(mv, &ts->edx, x86::mem(ts->ecx + 0x60, 4));
	add(mv, &ts->edx, x86::mem(ts->ecx + 0x4C, 4));
	add(mv, &ts->edx, x86::mem(ts->ecx + 0x38, 4));
	add(&ts->eax, ts->edx);
	test(&ts->eflags, ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_5852EB;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_5852EB:
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x14, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esp, 4), ts->ecx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_585300;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78454C, 4));

loc_585300:
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_585312;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78454C, 4));

loc_585312:
	fdivp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784258, 4));
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_585320(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x8C, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xA0, 4));
	add(&ts->eax, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x64, 4));
	push(mv, &ts->esp, ts->esi);
	add(mv, &ts->eax, x86::mem(ts->ecx + 0x78, 4));
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x50, 4));
	add(&ts->eax, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x3C, 4));
	add(&ts->eax, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x90, 4));
	add(&ts->eax, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0xA4, 4));
	add(&ts->edx, ts->esi);
	add(mv, &ts->edx, x86::mem(ts->ecx + 0x7C, 4));

loc_585353:
	add(mv, &ts->edx, x86::mem(ts->ecx + 0x68, 4));
	add(mv, &ts->edx, x86::mem(ts->ecx + 0x54, 4));
	add(mv, &ts->edx, x86::mem(ts->ecx + 0x40, 4));
	add(&ts->eax, ts->edx);
	test(&ts->eflags, ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_58536B;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_58536B:
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x18, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esp, 4), ts->ecx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_585380;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78454C, 4));

loc_585380:
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_585392;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78454C, 4));

loc_585392:
	fdivp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784258, 4));
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_5853A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x2C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_5853B1;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78454C, 4));

loc_5853B1:
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78435C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784264, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	game::__ftol2(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x86A32C);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	game::sub_577240(ts, mv);
	mov(&ts->eax, 0x86A32C);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_5853F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x28, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x28, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_585401;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78454C, 4));

loc_585401:
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78435C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784264, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	game::__ftol2(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x86A34C);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	game::sub_577240(ts, mv);
	mov(&ts->eax, 0x86A34C);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_585440(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx, 4));
	game::Iostream_init__Iostream_init_void_(ts, mv);
	cmp(&ts->eflags, ts->esi, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_5854B1;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->edi);
	goto loc_585460;

loc_585460:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x1BC, 4));
	xor_(&ts->ebx, ts->ebx);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_585491;
    }
	lea(mv, &ts->edi, x86::mem(ts->ebp + 0x1C4, 4));

loc_585472:
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5854A6;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x1BC, 4));
	inc(&ts->ebx);
	add(&ts->edi, 0x64);
	cmp(&ts->eflags, ts->ebx, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_585472;
    }

loc_585491:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, x86::mem(ts->edi, 4), ts->eax);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->esi, ts->edi);

loc_5854A6:
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(mv, &ts->eflags, ts->esi, x86::mem(ts->esp + 0x10, 4));
	if (!ts->eflags.zero) {
        goto loc_585460;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);

loc_5854B1:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);
}

void sub_5854C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	sub(&ts->esp, 0x834);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->eax, ts->eax);
	xor_(&ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x20, 1), ts->bl);
	mov(&ts->ecx, 0x80);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x21, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0xC, 4));
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	push(mv, &ts->esp, 0x783FE5);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	push(mv, &ts->esp, 0x204);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->eax);
	add(&ts->ecx, 0x12C);
	push(mv, &ts->esp, 0x7A1314);
	push(mv, &ts->esp, ts->ecx);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_742360(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_43DBB0(ts, mv);
	add(&ts->esp, 0x14);
	cmp(&ts->eflags, ts->eax, 0x5);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5855B6;
    }
	mov(mv, &ts->cl, x86::mem(0x7A1312, 1));
	mov(mv, &ts->ax, x86::mem(0x7A1310, 2));
	mov(mv, x86::mem(ts->esp + 0x10, 2), ts->ax);
	mov(mv, x86::mem(ts->esp + 0x12, 1), ts->cl);
	mov(mv, x86::mem(ts->esp + 0x18, 2), ts->ax);
	mov(mv, x86::mem(ts->esp + 0x1A, 1), ts->cl);
	push(mv, &ts->esp, 0x2);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	xor_(&ts->eax, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x1A, 4));
	mov(mv, x86::mem(ts->esp + 0x23, 2), ts->ax);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x1F, 2), ts->bx);
	mov(mv, x86::mem(ts->esp + 0x29, 1), ts->al);
	game::sub_43DC00(ts, mv);
	push(mv, &ts->esp, 0x3);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x32, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x2E, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DC00(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_43DE50(ts, mv);
	mov(&ts->edi, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x34, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43DE50(ts, mv);
	add(&ts->esp, 0x20);
	cmp(&ts->eflags, ts->edi, 0x28);
	mov(&ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5855A2;
    }
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x8);

loc_5855A2:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DBB0(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x5, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->edx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5855C2;
    }

loc_5855B6:
	or_(&ts->eax, 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x8);

loc_5855C2:
	push(mv, &ts->esp, 0x204);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x63C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x2D, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ecx);
	game::sub_576260(ts, mv);
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x63C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x230, 4));
	mov(mv, x86::mem(ts->esp + 0x230, 1), ts->bl);
	mov(mv, x86::mem(ts->esp + 0x630, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x634, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x638, 1), 0x1);
	game::sub_5840C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, 0x2A);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x22C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F04D0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->eax, 0x1);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x8);
}

void sub_585640(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x20);
	push(mv, &ts->esp, ts->esi);
	xor_(&ts->esi, ts->esi);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x6F70656E);
	game::sub_742B60(ts, mv);
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.zero) {
        goto loc_585719;
    }
	push(mv, &ts->esp, 0x783FE5);
	mov(mv, x86::mem(0x7FBE54, 4), 0x5832E0);
	game::sub_742B20(ts, mv);
	push(mv, &ts->esp, 0x10);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, 0x10);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x18, 2), 0x2);
	mov(mv, x86::mem(ts->esp + 0x1A, 2), ts->si);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->esi);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1F, 1), 0x1);
	mov(mv, x86::mem(ts->esp + 0x1E, 1), 0x1);
	mov(mv, x86::mem(ts->esp + 0x1D, 1), 0x1);
	mov(mv, x86::mem(ts->esp + 0x1C, 1), 0x18);
	game::sub_74AB20(ts, mv);
	add(&ts->esp, 0x14);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_5856E6;
    }
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x6F70656E);
	game::sub_742B60(ts, mv);
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_5856D5;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_742C60(ts, mv);
	add(&ts->esp, 0x4);

loc_5856D5:
	mov(mv, x86::mem(0x7FBE54, 4), 0x5832D0);
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp);

loc_5856E6:
	movzx(mv, &ts->edx, x86::mem(ts->esp + 0x18, 1));
	movzx(mv, &ts->eax, x86::mem(ts->esp + 0x19, 1));
	movzx(mv, &ts->ecx, x86::mem(ts->esp + 0x1A, 1));
	shl(&ts->edx, 0x8);
	or_(&ts->edx, ts->eax);
	movzx(mv, &ts->eax, x86::mem(ts->esp + 0x1B, 1));
	shl(&ts->edx, 0x8);
	or_(&ts->edx, ts->ecx);
	shl(&ts->edx, 0x8);
	or_(&ts->edx, ts->eax);
	mov(mv, x86::mem(0x866770, 4), ts->edx);
	mov(mv, x86::mem(0x7FBE54, 4), 0x5832D0);

loc_585719:
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp);
}

void sub_585720(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	game::sub_583490(ts, mv);
	xor_(&ts->edi, ts->edi);
	mov(mv, x86::mem(0x866764, 4), ts->edi);
	mov(mv, x86::mem(0x866740, 4), ts->edi);
	mov(mv, x86::mem(0x866744, 4), ts->edi);
	mov(mv, x86::mem(0x866754, 4), ts->edi);
	mov(mv, x86::mem(0x866760, 4), ts->edi);
	mov(mv, x86::mem(0x86664C, 4), ts->edi);
	mov(mv, x86::mem(0x866748, 4), ts->edi);
	mov(&ts->esi, 0x8691D8);
	goto loc_585760;

loc_585760:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	mov(mv, x86::mem(ts->esi - 0x4, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->esi - 0x8, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_58577D;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_748650(ts, mv);
	add(&ts->esp, 0x4);

loc_58577D:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_58578C;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_743B30(ts, mv);
	add(&ts->esp, 0x4);

loc_58578C:
	mov(mv, x86::mem(ts->esi, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->edi);
	add(&ts->esi, 0x14);
	cmp(&ts->eflags, ts->esi, 0x86923C);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_585760;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_5857A0(x86::thread_state* ts, x86::memory_view* mv) {
	xor_(&ts->ecx, ts->ecx);
	mov(&ts->eax, 0x8691D0);

loc_5857A7:
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_5857B8;
    }
	add(&ts->eax, 0x14);
	inc(&ts->ecx);
	cmp(&ts->eflags, ts->eax, 0x869234);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5857A7;
    }
	retn(mv, &ts->esp);

loc_5857B8:
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->esi, x86::mem(ts->ecx + (ts->ecx*4), 4));
	lea(mv, &ts->esi, x86::mem(0x8691D0, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_58580A;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_5834E0(ts, mv);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8651AC, 4));
	add(&ts->esp, 0xC);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->eax);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	mov(mv, x86::mem(ts->esi, 4), 0x2);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784560, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784264, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->eax);

loc_58580A:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_585810(x86::thread_state* ts, x86::memory_view* mv) {
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8651AC, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784D28, 4));
	push(mv, &ts->esp, ts->esi);
	game::__ftol2(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x7FBE98);
	game::sub_583300(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	xor_(&ts->ecx, ts->ecx);
	mov(&ts->eax, 0x8691D4);
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_585840:
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_58586A;
    }
	add(&ts->eax, 0x14);
	inc(&ts->ecx);
	cmp(&ts->eflags, ts->eax, 0x869238);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_585840;
    }
	xor_(&ts->eax, ts->eax);

loc_585851:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_583670(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_58586A:
	lea(mv, &ts->eax, x86::mem(ts->ecx + (ts->ecx*4), 4));
	lea(mv, &ts->eax, x86::mem(0x8691D0, 4));
	goto loc_585851;
}

void sub_585880(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->ecx, ts->ecx);
	mov(&ts->eax, 0x8691D4);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_585890:
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_5858F0;
    }
	add(&ts->eax, 0x14);
	inc(&ts->ecx);
	cmp(&ts->eflags, ts->eax, 0x869238);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_585890;
    }
	xor_(&ts->esi, ts->esi);

loc_5858A1:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->esi, 4), 0x0);
	mov(mv, x86::mem(ts->esi + 0x10, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_5858C5;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_748650(ts, mv);
	add(&ts->esp, 0x4);

loc_5858C5:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5858D5;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_743B30(ts, mv);
	add(&ts->esp, 0x4);

loc_5858D5:
	mov(mv, &ts->eax, x86::mem(0x866760, 4));
	dec(&ts->eax);
	mov(mv, x86::mem(ts->esi + 0x8, 4), 0x0);
	mov(mv, x86::mem(ts->esi + 0xC, 4), 0x0);
	mov(mv, x86::mem(0x866760, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_5858F0:
	lea(mv, &ts->esi, x86::mem(ts->ecx + (ts->ecx*4), 4));
	lea(mv, &ts->esi, x86::mem(0x8691D0, 4));
	goto loc_5858A1;
}

void sub_585900(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x18);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	game::sub_742E60(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(mv, &ts->ax, x86::mem(0x866748, 2));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_5834E0(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x34, 4));
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(0x866774, 4));
	add(&ts->esp, 0x14);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_58595A;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_585986;
    }

loc_58595A:
	mov(mv, x86::mem(ts->esi, 4), 0x2);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8651AC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784560, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784264, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->eax);

loc_585986:
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x18);
	retn(mv, &ts->esp);
}

void sub_585990(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_5835D0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_5859E5;
    }
	mov(mv, &ts->ecx, x86::mem(0x86664C, 4));
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(0x86664C, 4));
	mov(mv, &ts->edx, x86::mem(0x866760, 4));
	inc(&ts->eax);
	inc(&ts->edx);
	mov(mv, x86::mem(0x86664C, 4), ts->eax);
	mov(mv, x86::mem(0x866760, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esi, 4), 0x3);
	call(ts, mv, x86::mem(0x866764, 4));
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x10, 4), 0x0);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_5859E5:
	mov(mv, &ts->eax, x86::mem(0x8651AC, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esi + 0x10, 4));
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_5859FC;
    }
	call(ts, mv, x86::mem(0x866744, 4));
	mov(mv, x86::mem(ts->esi + 0x10, 4), 0x0);

loc_5859FC:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_585A00(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x21C);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x224, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_7486A0(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x45, 1));
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_585B16;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi, 4), 0x3);
	mov(mv, x86::mem(ts->esp + 0x4, 1), 0x0);
	if (!ts->eflags.zero) {
        goto loc_585B16;
    }
	push(mv, &ts->esp, ts->edi);

loc_585A34:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_583630(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_585AE4;
    }
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8651AC, 4));
	movzx(mv, &ts->edi, x86::mem(ts->esp + 0x10, 2));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x785B6C, 4));
	game::__ftol2(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x7FBE8C, 4));
	mov(mv, &ts->ecx, x86::mem(0x7FBE88, 4));
	neg(&ts->edx);
	sub(&ts->edx, ts->eax);
	cmp(&ts->eflags, ts->edx, ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_585AB2;
    }
	mov(&ts->eax, ts->edx);
	cdq(&ts->eax, ts->edx);
	idiv(&ts->eax, ts->ecx);
	mov(mv, &ts->edx, x86::mem(0x7FBE8C, 4));
	imul(&ts->ecx, ts->eax);
	add(&ts->edx, ts->ecx);
	xor_(&ts->ecx, ts->ecx);
	cmp(&ts->eflags, ts->eax, 0x1);
	mov(mv, &ts->eax, x86::mem(0x7FBE90, 4));
	setnz(ts->eflags, &ts->cl);
	mov(mv, x86::mem(0x7FBE8C, 4), ts->edx);
	mov(mv, x86::mem(0x7FBE90, 4), 0x0);
	dec(&ts->ecx);
	and_(&ts->ecx, ts->eax);
	mov(mv, x86::mem(0x7FBE94, 4), ts->ecx);

loc_585AB2:
	add(mv, x86::mem(0x7FBE90, 4), ts->edi);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	call(ts, mv, x86::mem(0x866754, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x10);
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.zero) {
        goto loc_585A34;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x21C);
	retn(mv, &ts->esp);

loc_585AE4:
	cmp(mv, &ts->eflags, x86::mem(ts->esi, 4), 0x3);
	if (!ts->eflags.zero) {
        goto loc_585B15;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_7486A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	sub(mv, &ts->ecx, x86::mem(ts->eax + 0x20, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->ecx, 0x2710);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_585B15;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	game::sub_585880(ts, mv);
	push(mv, &ts->esp, ts->esi);
	call(ts, mv, x86::mem(0x866740, 4));
	add(&ts->esp, 0x8);

loc_585B15:
	pop(mv, &ts->esp, ts->edi);

loc_585B16:
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x21C);
	retn(mv, &ts->esp);
}

void sub_585B20(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x21C);
	push(mv, &ts->esp, ts->esi);
	game::sub_742DB0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8667EC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_585BF2;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_7486A0(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x45, 1));
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_585C6A;
    }
	mov(mv, &ts->eax, x86::mem(0x8667EC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x4, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_585C6A;
    }
	nop();

loc_585B60:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_583630(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_585BBE;
    }
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8651AC, 4));
	movzx(mv, &ts->esi, x86::mem(ts->esp + 0xC, 2));
	push(mv, &ts->esp, ts->esi);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784D28, 4));
	game::__ftol2(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x7FBEA8);
	game::sub_583300(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ecx);
	call(ts, mv, x86::mem(0x866750, 4));
	mov(mv, &ts->eax, x86::mem(0x8667EC, 4));
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_585B60;
    }
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x21C);
	retn(mv, &ts->esp);

loc_585BBE:
	mov(mv, &ts->eax, x86::mem(0x8667EC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_585C6A;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_7486A0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	sub(mv, &ts->edx, x86::mem(ts->eax + 0x20, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->edx, 0x2710);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_585C6A;
    }
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x21C);
	jmp(x86::mem(0x866768, 4));

loc_585BF2:
	mov(mv, &ts->esi, x86::mem(0x8667E4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_585C6A;
    }
	mov(mv, &ts->eax, x86::mem(0x869678, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_585C0C;
    }
	cmp(&ts->eflags, ts->eax, 0x7FFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_585C28;
    }

loc_585C0C:
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8651AC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7A1318, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(0x869678, 4), ts->eax);

loc_585C28:
	push(mv, &ts->esp, ts->esi);
	game::sub_5835D0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(0x8667EC, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_585C47;
    }
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x21C);
	jmp(x86::mem(0x86674C, 4));

loc_585C47:
	mov(mv, &ts->eax, x86::mem(0x869678, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_585C6A;
    }
	cmp(&ts->eflags, ts->eax, 0x7FFFFFFF);
	if (ts->eflags.zero) {
        goto loc_585C6A;
    }
	cmp(mv, &ts->eflags, x86::mem(0x8651AC, 4), ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_585C6A;
    }
	push(mv, &ts->esp, 0x0);
	call(ts, mv, x86::mem(0x866648, 4));
	add(&ts->esp, 0x4);

loc_585C6A:
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x21C);
	retn(mv, &ts->esp);
}

void sub_585C80(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, 0x20);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	game::sub_581D90(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(0x866A10, 4));
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_585CB8;
    }
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x89CF48);
	mov(mv, x86::mem(0x866A10, 4), ts->eax);
	game::nullsub_3(ts, mv);

loc_585CB8:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_585CC0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, 0x20);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	game::sub_581D90(ts, mv);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	game::sub_581D90(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x4, 4), 0x1);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	setz(ts->eflags, &ts->dl);
	mov(&ts->ecx, 0x89CF48);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_6099C0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_585D20(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, 0x20);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8, 4), 0x0);
	game::sub_581D90(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F07E0(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_585D50(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x18, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x400, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788164, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_585D86;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));

loc_585D86:
	game::__ftol2(ts, mv);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8651AC, 4));
	mov(&ts->esi, ts->eax);
	push(mv, &ts->esp, ts->esi);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784D28, 4));
	game::__ftol2(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x7FBEB8);
	game::sub_583300(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->eax, x86::mem(0x8667EC, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_583670(ts, mv);
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_585E05;
    }
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x400, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788164, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_585DF1;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));

loc_585DF1:
	push(mv, &ts->esp, ts->ebx);
	game::__ftol2(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_5838C0(ts, mv);
	add(&ts->esp, 0xC);

loc_585E05:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_585E10(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x40C);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x414, 4));
	cmp(&ts->eflags, ts->esi, 0x2);
	mov(mv, x86::mem(0x8669F4, 4), ts->esi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_585E6F;
    }
	xor_(&ts->eax, ts->eax);
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0xC);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->esp + 0xC, 1), ts->al);
	mov(mv, x86::mem(ts->esp + 0x40C, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x410, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x414, 1), 0x1);
	game::sub_581D00(ts, mv);
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	game::sub_581D00(ts, mv);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xC);
	game::sub_585D50(ts, mv);
	add(&ts->esp, 0xC);

loc_585E6F:
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x40C);
	retn(mv, &ts->esp);
}

void sub_585E80(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x68);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x418);
	game::j__malloc(ts, mv);
	xor_(&ts->ebx, ts->ebx);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_585EB4;
    }
	mov(mv, x86::mem(ts->eax + 0xC, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x40C, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x410, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x414, 1), 0x1);
	mov(&ts->esi, ts->eax);
	goto loc_585EB6;

loc_585EB4:
	xor_(&ts->esi, ts->esi);

loc_585EB6:
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x7C, 4));
	push(mv, &ts->esp, 0x8);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebx);
	game::sub_581D90(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->esp + 0x10, 1));
	push(mv, &ts->esp, 0x8);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x80, 4));
	mov(mv, x86::mem(ts->esi + 0x8, 1), ts->cl);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x84, 4), ts->ebx);
	game::sub_581D90(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esp + 0x7C, 1));
	push(mv, &ts->esp, 0x10);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x80, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebp);
	mov(mv, x86::mem(ts->esi + 0x9, 1), ts->al);
	mov(mv, x86::mem(ts->esp + 0x84, 4), ts->ebx);
	game::sub_581D90(ts, mv);
	mov(mv, &ts->dx, x86::mem(ts->esp + 0x7C, 2));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 1), ts->bl);
	mov(&ts->ecx, 0x18);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x15, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	mov(mv, x86::mem(ts->esi + 0xA, 2), ts->dx);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x404, 4));
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x400, 4));
	sub(&ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x7C, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x7C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788164, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x7C, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x7C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_585F65;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));

loc_585F65:
	game::__ftol2(ts, mv);
	mov(&ts->edi, ts->eax);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_585F8B;
    }
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebp);
	game::sub_5840F0(ts, mv);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	game::sub_5840C0(ts, mv);

loc_585F8B:
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x400, 4));
	sub(mv, &ts->edi, x86::mem(ts->ebp + 0x404, 4));
	cmp(&ts->eflags, ts->edi, 0x8);
	if (!ts->eflags.zero) {
        goto loc_585FBC;
    }
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x80, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x84, 4), ts->ebx);
	game::sub_581D90(ts, mv);
	movzx(mv, &ts->ecx, x86::mem(ts->esp + 0x7C, 1));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ecx);
	goto loc_585FDD;

loc_585FBC:
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_585FE5;
    }
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x80, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x84, 4), ts->ebx);
	game::sub_581D90(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x7C, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);

loc_585FDD:
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	game::sub_581D00(ts, mv);

loc_585FE5:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x80, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->esi);
	mov(mv, &ts->bl, x86::mem(ts->esi + 0x9, 1));
	mov(mv, x86::mem(ts->esi, 4), ts->eax);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x8, 1));
	sub(&ts->al, ts->bl);
	neg(&ts->al);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	sbb(&ts->eax, ts->eax);
	inc(&ts->eax);
	add(&ts->esp, 0x68);
	retn(mv, &ts->esp);
}

void sub_586010(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(0x850088, 4), 0x8);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, 0x6);
	if (!ts->eflags.zero) {
        goto loc_586025;
    }
	mov(&ts->edi, 0x4);

loc_586025:
	or_(&ts->esi, 0xFFFFFFFF);

loc_586028:
	push(mv, &ts->esp, ts->edi);
	game::sub_43C1C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x7FBE80, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_586028;
    }
	mov(&ts->ecx, 0x8693C8);

loc_586040:
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x4, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_586049;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_586028;
    }

loc_586049:
	add(&ts->ecx, 0x20);
	cmp(&ts->eflags, ts->ecx, 0x869468);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_586040;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_586060(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x20);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	game::sub_581D90(ts, mv);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8651AC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->ecx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784550, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	game::__ftol2(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(&ts->esi, ts->eax);
	xor_(&ts->ecx, ts->ecx);
	mov(&ts->eax, 0x8693C8);

loc_5860B6:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x4, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_5860C7;
    }
	add(&ts->eax, 0x20);
	cmp(&ts->eflags, ts->eax, 0x869468);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5860B6;
    }
	goto loc_5860C9;

loc_5860C7:
	mov(&ts->ecx, ts->eax);

loc_5860C9:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x18, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_5860E2;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(ts->ecx + 0x18, 4), ts->edx);
	mov(mv, x86::mem(ts->ecx + 0xE, 2), ts->si);

loc_5860E2:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_5860F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(&ts->eax, 0x8693C8);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_586100:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_586110;
    }
	add(&ts->eax, 0x20);
	cmp(&ts->eflags, ts->eax, 0x869468);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_586100;
    }
	retn(mv, &ts->esp);

loc_586110:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_58611D;
    }
	mov(mv, &ts->ecx, x86::mem(0x8651AC, 4));
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->ecx);

locret_58611D:
	retn(mv, &ts->esp);
}

void sub_586120(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x14, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x400, 4));
	push(mv, &ts->esp, ts->edi);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788164, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_586155;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));

loc_586155:
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->edi);
	game::__ftol2(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	game::sub_585810(ts, mv);
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5861B4;
    }
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x400, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788164, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_5861A0;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));

loc_5861A0:
	push(mv, &ts->esp, ts->edi);
	game::__ftol2(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_5838C0(ts, mv);
	add(&ts->esp, 0xC);

loc_5861B4:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_5861C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x7A1334);
	push(mv, &ts->esp, 0x869470);
	game::sub_43DBD0(ts, mv);
	push(mv, &ts->esp, 0x7A1328);
	push(mv, &ts->esp, 0x869680);
	game::sub_43DBD0(ts, mv);
	push(mv, &ts->esp, 0x7A131C);
	push(mv, &ts->esp, 0x868E70);
	game::sub_43DBD0(ts, mv);
	add(&ts->esp, 0x18);
	xor_(&ts->edi, ts->edi);
	mov(&ts->esi, 0x866A28);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_586200:
	push(mv, &ts->esp, ts->edi);
	game::sub_5839A0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_43DBD0(ts, mv);
	add(&ts->esp, 0xC);
	add(&ts->esi, 0x204);
	inc(&ts->edi);
	cmp(&ts->eflags, ts->esi, 0x868E70);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_586200;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_586230(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(0x8651AC, 4));
	xor_(&ts->eax, ts->eax);
	or_(&ts->edx, 0xFFFFFFFF);
	mov(mv, x86::mem(0x8693CC, 4), ts->edx);
	mov(mv, x86::mem(0x8693C8, 4), ts->edx);
	mov(mv, x86::mem(0x8693D0, 4), ts->eax);
	mov(mv, x86::mem(0x8693D4, 2), ts->ax);
	mov(mv, x86::mem(0x8693D6, 2), ts->ax);
	mov(mv, x86::mem(0x8693D8, 4), ts->eax);
	mov(mv, x86::mem(0x8693DC, 4), ts->eax);
	mov(mv, x86::mem(0x8693E0, 4), 0xBF800000);
	mov(mv, x86::mem(0x8693E4, 4), ts->ecx);
	mov(mv, x86::mem(0x8693EC, 4), ts->edx);
	mov(mv, x86::mem(0x8693E8, 4), ts->edx);
	mov(mv, x86::mem(0x8693F0, 4), ts->eax);
	mov(mv, x86::mem(0x8693F4, 2), ts->ax);
	mov(mv, x86::mem(0x8693F6, 2), ts->ax);
	mov(mv, x86::mem(0x8693F8, 4), ts->eax);
	mov(mv, x86::mem(0x8693FC, 4), ts->eax);
	mov(mv, x86::mem(0x869400, 4), 0xBF800000);
	mov(mv, x86::mem(0x869404, 4), ts->ecx);
	mov(mv, x86::mem(0x86940C, 4), ts->edx);
	mov(mv, x86::mem(0x869408, 4), ts->edx);
	mov(mv, x86::mem(0x869410, 4), ts->eax);
	mov(mv, x86::mem(0x869414, 2), ts->ax);
	mov(mv, x86::mem(0x869416, 2), ts->ax);
	mov(mv, x86::mem(0x869418, 4), ts->eax);
	mov(mv, x86::mem(0x86941C, 4), ts->eax);
	mov(mv, x86::mem(0x869420, 4), 0xBF800000);
	mov(mv, x86::mem(0x869424, 4), ts->ecx);
	mov(mv, x86::mem(0x86942C, 4), ts->edx);
	mov(mv, x86::mem(0x869428, 4), ts->edx);
	mov(mv, x86::mem(0x869430, 4), ts->eax);
	mov(mv, x86::mem(0x869434, 2), ts->ax);
	mov(mv, x86::mem(0x869436, 2), ts->ax);
	mov(mv, x86::mem(0x869438, 4), ts->eax);
	mov(mv, x86::mem(0x86943C, 4), ts->eax);
	mov(mv, x86::mem(0x869440, 4), 0xBF800000);
	mov(mv, x86::mem(0x869444, 4), ts->ecx);
	mov(mv, x86::mem(0x86944C, 4), ts->edx);
	mov(mv, x86::mem(0x869448, 4), ts->edx);
	mov(mv, x86::mem(0x869450, 4), ts->eax);
	mov(mv, x86::mem(0x869454, 2), ts->ax);
	mov(mv, x86::mem(0x869456, 2), ts->ax);
	mov(mv, x86::mem(0x869458, 4), ts->eax);
	mov(mv, x86::mem(0x86945C, 4), ts->eax);
	mov(mv, x86::mem(0x869460, 4), 0xBF800000);
	mov(mv, x86::mem(0x869464, 4), ts->ecx);
	retn(mv, &ts->esp);
}

void sub_586350(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(0x8651AC, 4));
	xor_(&ts->eax, ts->eax);
	or_(&ts->edx, 0xFFFFFFFF);
	mov(mv, x86::mem(0x8693CC, 4), ts->edx);
	mov(mv, x86::mem(0x8693C8, 4), ts->edx);
	mov(mv, x86::mem(0x8693D0, 4), ts->eax);
	mov(mv, x86::mem(0x8693D4, 2), ts->ax);
	mov(mv, x86::mem(0x8693D6, 2), ts->ax);
	mov(mv, x86::mem(0x8693D8, 4), ts->eax);
	mov(mv, x86::mem(0x8693DC, 4), ts->eax);
	mov(mv, x86::mem(0x8693E0, 4), 0xBF800000);
	mov(mv, x86::mem(0x8693E4, 4), ts->ecx);
	mov(mv, x86::mem(0x8693EC, 4), ts->edx);
	mov(mv, x86::mem(0x8693E8, 4), ts->edx);
	mov(mv, x86::mem(0x8693F0, 4), ts->eax);
	mov(mv, x86::mem(0x8693F4, 2), ts->ax);
	mov(mv, x86::mem(0x8693F6, 2), ts->ax);
	mov(mv, x86::mem(0x8693F8, 4), ts->eax);
	mov(mv, x86::mem(0x8693FC, 4), ts->eax);
	mov(mv, x86::mem(0x869400, 4), 0xBF800000);
	mov(mv, x86::mem(0x869404, 4), ts->ecx);
	mov(mv, x86::mem(0x86940C, 4), ts->edx);
	mov(mv, x86::mem(0x869408, 4), ts->edx);
	mov(mv, x86::mem(0x869410, 4), ts->eax);
	mov(mv, x86::mem(0x869414, 2), ts->ax);
	mov(mv, x86::mem(0x869416, 2), ts->ax);
	mov(mv, x86::mem(0x869418, 4), ts->eax);
	mov(mv, x86::mem(0x86941C, 4), ts->eax);
	mov(mv, x86::mem(0x869420, 4), 0xBF800000);
	mov(mv, x86::mem(0x869424, 4), ts->ecx);
	mov(mv, x86::mem(0x86942C, 4), ts->edx);
	mov(mv, x86::mem(0x869428, 4), ts->edx);
	mov(mv, x86::mem(0x869430, 4), ts->eax);
	mov(mv, x86::mem(0x869434, 2), ts->ax);
	mov(mv, x86::mem(0x869436, 2), ts->ax);
	mov(mv, x86::mem(0x869438, 4), ts->eax);
	mov(mv, x86::mem(0x86943C, 4), ts->eax);
	mov(mv, x86::mem(0x869440, 4), 0xBF800000);
	mov(mv, x86::mem(0x869444, 4), ts->ecx);
	mov(mv, x86::mem(0x86944C, 4), ts->edx);
	mov(mv, x86::mem(0x869448, 4), ts->edx);
	mov(mv, x86::mem(0x869450, 4), ts->eax);
	mov(mv, x86::mem(0x869454, 2), ts->ax);
	mov(mv, x86::mem(0x869456, 2), ts->ax);
	mov(mv, x86::mem(0x869458, 4), ts->eax);
	mov(mv, x86::mem(0x86945C, 4), ts->eax);
	mov(mv, x86::mem(0x869460, 4), 0xBF800000);
	mov(mv, x86::mem(0x869464, 4), ts->ecx);
	mov(mv, x86::mem(0x866A24, 4), ts->eax);
	retn(mv, &ts->esp);
}

void sub_586480(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	xor_(&ts->edx, ts->edx);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x8693CC);
	mov(&ts->edi, ts->edi);

loc_586490:
	cmp(mv, &ts->eflags, x86::mem(ts->ecx, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_5864A2;
    }
	add(&ts->ecx, 0x20);
	inc(&ts->eax);
	cmp(&ts->eflags, ts->ecx, 0x86946C);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_586490;
    }
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_5864A2:
	mov(mv, &ts->ecx, x86::mem(0x8651AC, 4));
	shl(&ts->eax, 0x5);
	add(&ts->eax, 0x8693C8);
	mov(mv, x86::mem(ts->eax + 0x4, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->eax, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0xC, 2), ts->dx);
	mov(mv, x86::mem(ts->eax + 0xE, 2), ts->dx);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0x18, 4), 0xBF800000);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(0x866A24, 4));
	dec(&ts->eax);
	mov(mv, x86::mem(0x866A24, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_5864F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi, 4), 0x7A12A0);
	if (ts->eflags.zero) {
        goto loc_586510;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_748B60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x4, 4), 0x0);

loc_586510:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_586620(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->esi, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_586650;
    }
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_586630:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_584140(ts, mv);
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->edi, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_586630;
    }

loc_586650:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_586660(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	game::sub_584F40(ts, mv);
	retn(mv, &ts->esp);
}

void sub_586680(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x4DEF30);
	push(mv, &ts->esp, 0x598750);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, 0x6);
	push(mv, &ts->esp, 0x8);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi, 4), 0x7A1340);
	game::sub_75C461(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x34, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x3C, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->eax);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x44, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x48, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x90, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x94, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x98, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x9C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xA0, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0xA1, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0xA2, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0xC4, 1), ts->al);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x50, 4));
	mov(&ts->ecx, 0x10);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_586700(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x778AF8);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), ts->esi);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	game::sub_4AE7F0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->esi + 0x14C, 1), 0x0);
	mov(mv, x86::mem(ts->esi + 0x150, 4), 0x0);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_778AF0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_4DEF30;

SEH_586700:
	mov(&ts->eax, 0x7E4164);
	goto ___CxxFrameHandler;
}

void sub_586760(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x44, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_586849;
    }
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	game::sub_742DB0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x44, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_745540(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x98, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_74AF10(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x34, 4));
	lea(mv, &ts->ebp, x86::mem(ts->edi + 0x34, 4));
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->esi, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_5867C2;
    }
	push(mv, &ts->esp, ts->ebx);

loc_586798:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	call(ts, mv, x86::mem(ts->esi + 0x8, 4));
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_5867BB;
    }
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, x86::mem(ts->ebx, 4), ts->eax);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ebx);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->esi, ts->ebx);

loc_5867BB:
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_586798;
    }
	pop(mv, &ts->esp, ts->ebx);

loc_5867C2:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_586817;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x3C, 4));
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x3C, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_586817;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	mov(mv, x86::mem(ts->edi + 0x4C, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x44, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_7446C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4C, 4));
	mov(mv, x86::mem(ts->ecx + 0x28, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x4C, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x10, 4));
	add(&ts->esp, 0x14);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_586817;
    }
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->edi);
	game::sub_584350(ts, mv);

loc_586817:
	game::sub_582B60(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xF8, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_586849;
    }
	mov(mv, x86::mem(0x7FBE54, 4), 0x5832E0);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xF8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_740600(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(0x7FBE54, 4), 0x5832D0);

loc_586849:
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp);
}

void sub_586850(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero) {
        goto loc_58686E;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x20, 4), ts->edx);
	if (!ts->eflags.zero) {
        goto loc_58686E;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	game::sub_584270(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_58686E:
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x3C, 4));
	lea(mv, &ts->eax, x86::mem(ts->ecx + 0x3C, 4));
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5868A1;
    }

loc_586878:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x20, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_586887;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_586878;
    }
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_586887:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_584140(ts, mv);
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_5868A1:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_5868B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	if (ts->eflags.zero) {
        goto loc_5868D5;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x20, 4), ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_5868D5;
    }
	mov(mv, &ts->ebp, x86::mem(ts->eax + 0x24, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->edi);
	game::sub_584270(ts, mv);
	goto loc_58690E;

loc_5868D5:
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x3C, 4));
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x3C, 4));
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_586948;
    }
	nop();

loc_5868E0:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x20, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_5868F1;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_5868E0;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_5868F1:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x24, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_584140(ts, mv);
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_58690E:
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_586948;
    }
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x3C, 4));
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ebx, x86::mem(ts->edi + 0x3C, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_586947;
    }
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_586920:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x24, 4), ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_586941;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edi);
	game::sub_584140(ts, mv);
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->esi, ts->edi);

loc_586941:
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_586920;
    }

loc_586947:
	pop(mv, &ts->esp, ts->ebx);

loc_586948:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_586950(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	mov(&ts->esi, ts->ecx);
	game::sub_584270(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x3C, 4));
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x3C, 4));
	mov(&ts->esi, ts->eax);
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_586996;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_586970:
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_58698E;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_584140(ts, mv);
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_58698E:
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(&ts->esi, ts->eax);
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_586970;
    }

loc_586996:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_5869A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x778949);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x48, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_5869D7;
    }
	mov(&ts->eax, 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x1C);

loc_5869D7:
	push(mv, &ts->esp, 0x3);
	push(mv, &ts->esp, 0x2C);
	game::sub_6D7110(ts, mv);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_586A25;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x2C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->ecx);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, &ts->cl, x86::mem(ts->esi + 0xA0, 1));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_584680(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_586A3C;
    }

loc_586A25:
	mov(&ts->eax, 0xFFFFFFFE);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x1C);

loc_586A3C:
	mov(mv, &ts->cl, x86::mem(ts->esp + 0x30, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x3C, 4));
	if (!ts->eflags.zero) {
        goto loc_586A56;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	goto loc_586A62;

loc_586A56:
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->edx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->edx);

loc_586A62:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x20, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x1C);

loc_778930:
	push(mv, &ts->esp, 0x3);
	push(mv, &ts->esp, 0x4B1);
	push(mv, &ts->esp, 0x7A1344);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

SEH_5869A0:
	mov(&ts->eax, 0x7E3F8C);
	goto ___CxxFrameHandler;
}

void sub_586A80(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x98, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_586AA1;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_74AED0(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->ebp + 0x98, 4), ts->ebx);

loc_586AA1:
	lea(mv, &ts->esi, x86::mem(ts->ebp + 0x4, 4));
	mov(&ts->edi, 0x6);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_586AB0:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->edx, ts->esi);
	if (ts->eflags.zero) {
        goto loc_586AD5;
    }

loc_586AB6:
	cmp(&ts->eflags, ts->edx, ts->ebx);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_586ACF;
    }
	push(mv, &ts->esp, ts->edx);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_586ACF:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->edx, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_586AB6;
    }

loc_586AD5:
	add(&ts->esi, 0x8);
	dec(&ts->edi);
	if (!ts->eflags.zero) {
        goto loc_586AB0;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x34, 4));
	lea(mv, &ts->esi, x86::mem(ts->ebp + 0x34, 4));
	mov(&ts->ecx, ts->eax);
	cmp(&ts->eflags, ts->ecx, ts->esi);
	if (ts->eflags.zero) {
        goto loc_586B06;
    }

loc_586AE7:
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->edx);
	mov(mv, x86::mem(ts->edx + 0x4, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_586AFE;
    }
	push(mv, &ts->esp, ts->ecx);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_586AFE:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->eax);
	cmp(&ts->eflags, ts->ecx, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_586AE7;
    }

loc_586B06:
	cmp(mv, &ts->eflags, x86::mem(ts->ebp + 0x44, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_586B40;
    }
	mov(&ts->ecx, ts->ebp);
	game::sub_586950(ts, mv);
	xor_(&ts->esi, ts->esi);

loc_586B14:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x44, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	game::sub_744470(ts, mv);
	add(&ts->esp, 0x8);
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, 0x6);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_586B14;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x44, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ecx);
	game::sub_744310(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x44, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_745100(ts, mv);
	add(&ts->esp, 0xC);
	mov(mv, x86::mem(ts->ebp + 0x44, 4), ts->ebx);

loc_586B40:
	mov(mv, x86::mem(ts->ebp + 0x48, 1), ts->bl);
	mov(mv, x86::mem(ts->ebp + 0x4C, 4), ts->ebx);
	lea(mv, &ts->edi, x86::mem(ts->ebp + 0x50, 4));
	mov(&ts->ecx, 0x10);
	xor_(&ts->eax, ts->eax);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->ebp + 0x90, 4), ts->ebx);
	mov(mv, x86::mem(ts->ebp + 0x94, 4), ts->ebx);
	mov(mv, x86::mem(ts->ebp + 0x9C, 4), ts->ebx);
	mov(mv, x86::mem(ts->ebp + 0xA0, 1), ts->bl);
	mov(mv, x86::mem(ts->ebp + 0xA1, 1), ts->bl);
	mov(mv, x86::mem(ts->ebp + 0xC4, 1), ts->bl);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_586B80(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x40);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x50, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_586BF7;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x8, 4), 0x636F6E6E);
	if (!ts->eflags.zero) {
        goto loc_586BF7;
    }
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x50, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_586BEE;
    }
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 1), 0x0);
	mov(&ts->ecx, 0xF);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0xD, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	push(mv, &ts->esp, 0x7A1368);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, 0x40);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x48, 1), 0x1);
	game::sub_741F20(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x73656C65);
	mov(&ts->ecx, ts->esi);
	game::sub_5869A0(ts, mv);
	pop(mv, &ts->esp, ts->edi);

loc_586BEE:
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	game::sub_584350(ts, mv);
	pop(mv, &ts->esp, ts->ebx);

loc_586BF7:
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x40);
	retn(mv, &ts->esp);
}

void sub_586C00(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0x8, 4), 0x64697363);
	if (!ts->eflags.zero) {
        goto loc_586C38;
    }
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x14, 4));
	mov(&ts->ecx, ts->esi);
	game::sub_586950(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x90, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x48, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_586C37;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x94, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x0);
	call(ts, mv, ts->eax);
	add(&ts->esp, 0xC);

loc_586C37:
	pop(mv, &ts->esp, ts->esi);

loc_586C38:
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp);
}

void sub_586C40(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->edx, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ecx);
	game::sub_5826E0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edx + (ts->eax*4) - 0x18, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->edx);
	game::sub_73D8E0(ts, mv);
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->edi, 0x1);
	mov(&ts->esi, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_586C95;
    }
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_586C8E;
    }
	mov(&ts->ecx, 0x850080);
	game::sub_5031F0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_586C95;
    }

loc_586C8E:
	pop(mv, &ts->esp, ts->edi);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_586C95:
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);
}

void sub_586CA0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(&ts->edx, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_5826E0(ts, mv);
	sub(&ts->eax, 0x6);
	mov(mv, &ts->eax, x86::mem(ts->edx + (ts->eax*4), 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_586CC1;
    }
	retn(mv, &ts->esp, 0x8);

loc_586CC1:
	push(mv, &ts->esp, ts->eax);
	game::sub_73D8C0(ts, mv);
	add(&ts->esp, 0x4);
	retn(mv, &ts->esp, 0x8);
}

void sub_586CD0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0xC, 4));
	test(&ts->eflags, ts->ebp, ts->ebp);
	mov(&ts->ebx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_586D4B;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ebp, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_586D4B;
    }
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ebx + 0x10, 4));
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->ebx + 0x10, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_586D49;
    }
	mov(&ts->edi, ts->edi);

loc_586CF0:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esi + 0x8, 4));
	if (!ts->eflags.zero) {
        goto loc_586D0A;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebp);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_586D17;
    }

loc_586D0A:
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_586CF0;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x8);

loc_586D17:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_584B40(ts, mv);
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x18, 4));
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_586D49;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x1C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebp);
	call(ts, mv, ts->eax);
	add(&ts->esp, 0x10);

loc_586D49:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);

loc_586D4B:
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x8);
}

void sub_586D50(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_586E36;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_586E36;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	test(&ts->eflags, ts->eax, 0x10000000);
	mov(mv, x86::mem(ts->esp + 0x4, 4), 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_586D86;
    }
	mov(mv, x86::mem(ts->esp + 0x4, 4), 0x2);
	goto loc_586DC5;

loc_586D86:
	test(&ts->eflags, ts->eax, 0x20000000);
	if (ts->eflags.zero) {
        goto loc_586D97;
    }
	mov(mv, x86::mem(ts->esp + 0x4, 4), 0x3);
	goto loc_586DC5;

loc_586D97:
	test(&ts->eflags, ts->eax, 0x40000000);
	if (ts->eflags.zero) {
        goto loc_586DA8;
    }
	mov(mv, x86::mem(ts->esp + 0x4, 4), 0x4);
	goto loc_586DC5;

loc_586DA8:
	test(&ts->eflags, ts->al, 0x40);
	if (ts->eflags.zero) {
        goto loc_586DB6;
    }
	mov(mv, x86::mem(ts->esp + 0x4, 4), 0x5);
	goto loc_586DC5;

loc_586DB6:
	test(&ts->eflags, ts->eax, 0x4000000);
	if (ts->eflags.zero) {
        goto loc_586DC5;
    }
	mov(mv, x86::mem(ts->esp + 0x4, 4), 0x6);

loc_586DC5:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ebx + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->ebx + 0x8, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_586E33;
    }
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x1C, 4));

loc_586DD6:
	cmp(mv, &ts->eflags, ts->ebp, x86::mem(ts->esi + 0x8, 4));
	if (!ts->eflags.zero) {
        goto loc_586DF0;
    }
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_586DFE;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));

loc_586DF0:
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_586DD6;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0xC);

loc_586DFE:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_584B40(ts, mv);
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x18, 4));
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_586E33;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x1C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ecx);
	call(ts, mv, ts->eax);
	add(&ts->esp, 0x10);

loc_586E33:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);

loc_586E36:
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0xC);
}

void sub_586E40(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	sub(&ts->esp, 0x32C);
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ecx);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x48, 1));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->cl, ts->bl);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_587139;
    }
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	game::sub_43DBB0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x4);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_587139;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_43DBB0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x10);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_587139;
    }
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x14, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->edi);
	game::sub_43DBB0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x4);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_587139;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_43DBB0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x10);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_587139;
    }
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x28, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->edi);
	game::sub_43DBB0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x7);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_587139;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_43DBB0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x32);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_587139;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x5C, 4));
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_587139;
    }
	cmp(&ts->eflags, ts->eax, 0x1F);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_587139;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x60, 4));
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_587139;
    }
	cmp(&ts->eflags, ts->eax, 0xC);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_587139;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x6B, 1));
	cmp(&ts->eflags, ts->al, ts->bl);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x6B, 4));
	mov(mv, x86::mem(ts->esp + 0x34, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_586F3B;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_43DBB0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x7);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_587139;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_43DBB0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x32);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_587139;
    }

loc_586F3B:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x5C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x60, 4));
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x25, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x29, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x2D, 4), ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x35, 2), ts->cx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x3B, 1), ts->cl);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x64, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, 0x7A13D8);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x38, 1), ts->bl);
	game::sub_4400D0(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x68, 1), 0x1);
	setnz(ts->eflags, &ts->al);
	dec(&ts->al);
	and_(&ts->al, 0x7);
	add(&ts->al, 0x46);
	movsx(&ts->ecx, ts->al);
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, 0x795ABC);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x30, 1), ts->bl);
	mov(mv, x86::mem(ts->esp + 0x31, 1), ts->bl);
	game::sub_4400D0(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x6A, 1));
	mov(mv, &ts->dl, x86::mem(ts->esi + 0x69, 1));
	cmp(&ts->eflags, ts->al, 0x1);
	setnz(ts->eflags, &ts->al);
	dec(&ts->al);
	and_(&ts->al, 0xB);
	add(&ts->al, 0x4E);
	cmp(&ts->eflags, ts->dl, 0x1);
	setnz(ts->eflags, &ts->dl);
	dec(&ts->dl);
	movsx(&ts->ecx, ts->al);
	and_(&ts->dl, 0xB);
	add(&ts->dl, 0x4E);
	push(mv, &ts->esp, ts->ecx);
	movsx(&ts->eax, ts->dl);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x3C, 4));
	push(mv, &ts->esp, 0x7A13D0);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x44, 1), ts->bl);
	mov(mv, x86::mem(ts->esp + 0x45, 2), ts->bx);
	game::sub_4400D0(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x68, 1), ts->bl);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0xBF);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x69, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x79AC28);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x70, 4));
	push(mv, &ts->esp, 0x300);
	push(mv, &ts->esp, ts->edx);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	game::sub_741A50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x60, 4));
	add(&ts->esp, 0x40);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7A13C8);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x40, 4));
	push(mv, &ts->esp, 0x300);
	push(mv, &ts->esp, ts->ecx);
	game::sub_741A50(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x7A13C0);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x50, 4));
	push(mv, &ts->esp, 0x300);
	push(mv, &ts->esp, ts->eax);
	game::sub_741A50(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x44, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x7A13B8);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x60, 4));
	push(mv, &ts->esp, 0x300);
	push(mv, &ts->esp, ts->edx);
	game::sub_741A50(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x40, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7A13B0);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x70, 4));
	push(mv, &ts->esp, 0x300);
	push(mv, &ts->esp, ts->ecx);
	game::sub_741A50(ts, mv);
	add(&ts->esp, 0x40);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x7A13A8);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x40, 4));
	push(mv, &ts->esp, 0x300);
	push(mv, &ts->esp, ts->eax);
	game::sub_741A50(ts, mv);
	add(&ts->esp, 0x10);
	game::sub_571380(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5870AD;
    }
	game::sub_571380(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7A13A0);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x40, 4));
	push(mv, &ts->esp, 0x300);
	push(mv, &ts->esp, ts->ecx);
	game::sub_741A50(ts, mv);
	add(&ts->esp, 0x10);

loc_5870AD:
	game::sub_5712A0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5870D3;
    }
	game::sub_5712A0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7A1398);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x40, 4));
	push(mv, &ts->esp, 0x300);
	push(mv, &ts->esp, ts->edx);
	game::sub_741A50(ts, mv);
	add(&ts->esp, 0x10);

loc_5870D3:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x34, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_5870F3;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7A1390);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x40, 4));
	push(mv, &ts->esp, 0x300);
	push(mv, &ts->esp, ts->eax);
	game::sub_741A50(ts, mv);
	add(&ts->esp, 0x10);

loc_5870F3:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x7A138C);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x40, 4));
	push(mv, &ts->esp, 0x300);
	push(mv, &ts->esp, ts->ecx);
	game::sub_741690(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x2C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0xC, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x584630);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x61636374);
	game::sub_5869A0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0xC);

loc_587139:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	or_(&ts->eax, 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0xC);
}

void sub_587150(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	sub(&ts->esp, 0x100);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x48, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_587223;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x8, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_587223;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->edx, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_587223;
    }
	mov(mv, x86::mem(ts->esp + 0x8, 1), 0x0);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x3F);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x9, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x7A13C0);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, 0x100);
	push(mv, &ts->esp, ts->ecx);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	game::sub_741A50(ts, mv);
	add(&ts->esp, 0x10);
	game::sub_571380(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5871D4;
    }
	game::sub_571380(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7A13A0);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, 0x100);
	push(mv, &ts->esp, ts->edx);
	game::sub_741A50(ts, mv);
	add(&ts->esp, 0x10);

loc_5871D4:
	game::sub_5712A0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5871FA;
    }
	game::sub_5712A0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7A1398);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, 0x100);
	push(mv, &ts->esp, ts->eax);
	game::sub_741A50(ts, mv);
	add(&ts->esp, 0x10);

loc_5871FA:
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x584630);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x6C6F7374);
	game::sub_5869A0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0xC);

loc_587223:
	pop(mv, &ts->esp, ts->edi);
	or_(&ts->eax, 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0xC);
}

void sub_587230(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	sub(&ts->esp, 0x100);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x48, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_587303;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x8, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_587303;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->edx, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_587303;
    }
	mov(mv, x86::mem(ts->esp + 0x8, 1), 0x0);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x3F);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x9, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x79AC28);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, 0x100);
	push(mv, &ts->esp, ts->ecx);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	game::sub_741A50(ts, mv);
	add(&ts->esp, 0x10);
	game::sub_571380(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5872B4;
    }
	game::sub_571380(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7A13A0);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, 0x100);
	push(mv, &ts->esp, ts->edx);
	game::sub_741A50(ts, mv);
	add(&ts->esp, 0x10);

loc_5872B4:
	game::sub_5712A0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5872DA;
    }
	game::sub_5712A0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7A1398);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, 0x100);
	push(mv, &ts->esp, ts->eax);
	game::sub_741A50(ts, mv);
	add(&ts->esp, 0x10);

loc_5872DA:
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x584630);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x6C6F7374);
	game::sub_5869A0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0xC);

loc_587303:
	pop(mv, &ts->esp, ts->edi);
	or_(&ts->eax, 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0xC);
}

void sub_587310(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x40);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x48, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_587329;
    }
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x4, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	if (ts->eflags.zero) {
        goto loc_587333;
    }

loc_587329:
	or_(&ts->eax, 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x40);
	retn(mv, &ts->esp, 0xC);

loc_587333:
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x4C, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0xF);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DC00(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x18, 1), 0x0);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0xF);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x19, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x7A13E8);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, 0x40);
	push(mv, &ts->esp, ts->ecx);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	game::sub_741A50(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x74, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x70, 4));
	add(&ts->esp, 0x1C);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x585040);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x63706572);
	game::sub_5869A0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x40);
	retn(mv, &ts->esp, 0xC);
}

void sub_5873A0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x40);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ebx, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x48, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_5873B9;
    }
	mov(mv, &ts->dl, x86::mem(ts->ebx + 0x4, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	lea(mv, &ts->ecx, x86::mem(ts->ebx + 0x4, 4));
	if (ts->eflags.zero) {
        goto loc_5873C3;
    }

loc_5873B9:
	or_(&ts->eax, 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x40);
	retn(mv, &ts->esp, 0xC);

loc_5873C3:
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x4C, 4));
	add(&ts->esi, 0x5);
	shl(&ts->esi, 0x4);
	mov(mv, &ts->dl, x86::mem(ts->eax + (ts->esi), 1));
	add(&ts->eax, ts->esi);
	test(&ts->eflags, ts->dl, ts->dl);
	if (!ts->eflags.zero) {
        goto loc_5873E2;
    }
	pop(mv, &ts->esp, ts->esi);
	or_(&ts->eax, 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x40);
	retn(mv, &ts->esp, 0xC);

loc_5873E2:
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DBD0(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 1), 0x0);
	mov(&ts->ecx, 0xF);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x15, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	mov(mv, &ts->eax, x86::mem(ts->ebx, 4));
	add(&ts->eax, ts->esi);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7A13E8);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, 0x40);
	push(mv, &ts->esp, ts->ecx);
	game::sub_741A50(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x70, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x6C, 4));
	add(&ts->esp, 0x18);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x5850C0);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->ebx, 4));
	push(mv, &ts->esp, 0x64706572);
	game::sub_5869A0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x40);
	retn(mv, &ts->esp, 0xC);
}

void sub_587450(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ebx, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x48, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_587467;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	or_(&ts->eax, 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0xC);

loc_587467:
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x14, 4));
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_5874AE;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ebp, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_5874AE;
    }
	mov(mv, &ts->al, x86::mem(ts->ebx + 0x4, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_587489;
    }
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->eax, 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0xC);

loc_587489:
	xor_(&ts->edi, ts->edi);
	mov(&ts->esi, 0x50);

loc_587490:
	mov(mv, &ts->ecx, x86::mem(ts->ebx, 4));
	add(&ts->ecx, ts->esi);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebp);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5874B8;
    }
	add(&ts->esi, 0x10);
	inc(&ts->edi);
	cmp(&ts->eflags, ts->esi, 0x90);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_587490;
    }

loc_5874AE:
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	or_(&ts->eax, 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0xC);

loc_5874B8:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->ebx);
	game::sub_5873A0(ts, mv);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0xC);
}

void sub_5874E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_5875AA;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->edi, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_5875AA;
    }
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->esi, 1), 0x0);
	mov(mv, x86::mem(ts->esi + 0x140, 4), 0x0);
	game::sub_583220(ts, mv);
	lea(mv, &ts->ebp, x86::mem(ts->esi + 0xA8, 4));
	mov(&ts->ecx, ts->ebp);
	game::sub_583220(ts, mv);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0x10);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x7A13E8);
	push(mv, &ts->esp, ts->edi);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_742360(ts, mv);
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x794E68);
	push(mv, &ts->esp, 0x98);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x7A1400);
	push(mv, &ts->esp, ts->edi);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_7425D0(ts, mv);
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x794E68);
	push(mv, &ts->esp, 0x98);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x7A13F8);
	push(mv, &ts->esp, ts->edi);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_7425D0(ts, mv);
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7A13F0);
	push(mv, &ts->esp, ts->edi);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_7420B0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x140, 4), ts->eax);
	pop(mv, &ts->esp, ts->edi);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_5875AA:
	pop(mv, &ts->esp, ts->edi);
	or_(&ts->eax, 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_5875C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->edx, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->esi, x86::mem(ts->edx + 0x10, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->edx, 1), 0x0);
	mov(mv, x86::mem(ts->edx + 0x140, 4), 0x0);
	game::sub_583220(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->edx + 0xA8, 4));
	game::sub_583220(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->cl, x86::mem(ts->edi + 0x8, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x8, 4));
	if (!ts->eflags.zero) {
        goto loc_5875FC;
    }
	pop(mv, &ts->esp, ts->edi);
	or_(&ts->eax, 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_5875FC:
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_43DBD0(ts, mv);
	push(mv, &ts->esp, 0x794E68);
	push(mv, &ts->esp, 0x98);
	push(mv, &ts->esp, ts->esi);
	add(&ts->edi, 0x28);
	push(mv, &ts->esp, ts->edi);
	game::sub_7425D0(ts, mv);
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->edi);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_587630(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	sub(&ts->esp, 0x624);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x150, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_587671;
    }
	push(mv, &ts->esp, 0x204);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x150, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_58766F;
    }
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_58766F:
	mov(mv, x86::mem(ts->eax, 1), ts->bl);

loc_587671:
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x224, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x89CF48);
	mov(mv, x86::mem(ts->esp + 0x22C, 1), ts->bl);
	mov(mv, x86::mem(ts->esp + 0x62C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x630, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x634, 1), 0x1);
	game::sub_5F0320(ts, mv);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x620, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 1), ts->bl);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788164, 4));
	mov(&ts->ecx, 0x80);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x19, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_5876E9;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));

loc_5876E9:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	game::__ftol2(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x230, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_576130(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x28);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x34, 4));
	push(mv, &ts->esp, 0x7A1408);
	push(mv, &ts->esp, ts->eax);
	game::sub_4400D0(ts, mv);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x644, 4));
	add(&ts->esp, 0x24);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788164, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_587743;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));

loc_587743:
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x21, 4));
	push(mv, &ts->esp, 0x1FF);
	push(mv, &ts->esp, ts->ecx);
	game::__ftol2(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x230, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_576130(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x150, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7A1314);
	push(mv, &ts->esp, 0x200);
	push(mv, &ts->esp, ts->ecx);
	game::sub_741A50(ts, mv);
	add(&ts->esp, 0x24);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_587790(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ebx, ts->ecx);
	mov(mv, &ts->esi, x86::mem(ts->ebx, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->esi);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	mov(&ts->ebp, ts->eax);
	cmp(&ts->eflags, ts->edi, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_5877C4;
    }

loc_5877A5:
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->esi, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_5877BC;
    }
	push(mv, &ts->esp, ts->edi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_5877BC:
	mov(mv, &ts->esi, x86::mem(ts->ebx, 4));
	mov(&ts->edi, ts->esi);
	cmp(&ts->eflags, ts->edi, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_5877A5;
    }

loc_5877C4:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_5877D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	game::sub_742DB0(ts, mv);
	mov(&ts->esi, 0x8691D0);
	goto loc_5877E0;

loc_5877E0:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	dec(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0x3);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_5877E8;
    }
	jmp(x86::mem(0x587820, 4));

loc_5877EF:
	push(mv, &ts->esp, ts->esi);
	game::sub_585900(ts, mv);
	goto loc_587810;

loc_5877F7:
	push(mv, &ts->esp, ts->esi);
	game::sub_585990(ts, mv);
	goto loc_587810;

loc_5877FF:
	push(mv, &ts->esp, ts->esi);
	game::sub_585A00(ts, mv);
	goto loc_587810;

loc_587807:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_585880(ts, mv);

loc_587810:
	add(&ts->esp, 0x4);

def_5877E8:
	add(&ts->esi, 0x14);
	cmp(&ts->eflags, ts->esi, 0x869234);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5877E0;
    }
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_587830(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x410);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	game::sub_583710(ts, mv);
	mov(mv, &ts->esi, x86::mem(0x7FBE5C, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	mov(&ts->ebx, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_58792E;
    }
	cmp(mv, &ts->eflags, x86::mem(0x8669F4, 4), 0x5);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_58792E;
    }
	cmp(mv, &ts->eflags, x86::mem(0x866A08, 4), 0x3);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_58792E;
    }
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_58792E;
    }
	mov(mv, &ts->eax, x86::mem(0x89CF50, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_58792E;
    }
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0x2);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 1), 0x0);
	mov(mv, x86::mem(ts->esp + 0x414, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x418, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x41C, 1), 0x1);
	game::sub_581D00(ts, mv);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x86518C, 4));
	push(mv, &ts->esp, 0x20);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_581D00(ts, mv);
	push(mv, &ts->esp, 0x869088);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	game::sub_583F80(ts, mv);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8651AC, 4));
	push(mv, &ts->esp, 0x20);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	game::sub_581D00(ts, mv);
	movzx(&ts->edx, ts->bl);
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	game::sub_581D00(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F9930(ts, mv);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x2);
	game::sub_585D50(ts, mv);
	add(&ts->esp, 0xC);

loc_58792E:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x410);
	retn(mv, &ts->esp);
}

void sub_587940(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x8651AC, 4));
	mov(mv, x86::mem(0x8669F8, 1), 0x1);
	mov(mv, x86::mem(0x869468, 4), ts->eax);
	mov(mv, x86::mem(0x8669F4, 4), 0x2);
	retn(mv, &ts->esp);
}

void sub_587960(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x410);
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0x3);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->esp + 0xC, 1), 0x0);
	mov(mv, x86::mem(ts->esp + 0x40C, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x410, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x414, 1), 0x1);
	game::sub_581D00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x414, 4));
	mov(&ts->ecx, ts->eax);
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	game::sub_581D00(ts, mv);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x3);
	game::sub_585D50(ts, mv);
	add(&ts->esp, 0x41C);
	retn(mv, &ts->esp);
}

void sub_5879D0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x40C);
	xor_(&ts->eax, ts->eax);
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0xC);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(0x8669F4, 4), 0x5);
	mov(mv, x86::mem(ts->esp + 0x8, 1), ts->al);
	mov(mv, x86::mem(ts->esp + 0x408, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x40C, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x410, 1), 0x1);
	game::sub_581D00(ts, mv);
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, 0x5);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	game::sub_581D00(ts, mv);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xC);
	game::sub_585D50(ts, mv);
	add(&ts->esp, 0x418);
	retn(mv, &ts->esp);
}

void sub_587A30(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x40C);
	xor_(&ts->eax, ts->eax);
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0xC);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(0x8669F4, 4), 0x6);
	mov(mv, x86::mem(ts->esp + 0x8, 1), ts->al);
	mov(mv, x86::mem(ts->esp + 0x408, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x40C, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x410, 1), 0x1);
	game::sub_581D00(ts, mv);
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, 0x6);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	game::sub_581D00(ts, mv);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xC);
	game::sub_585D50(ts, mv);
	add(&ts->esp, 0x418);
	retn(mv, &ts->esp);
}

void sub_587A90(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x40C);
	xor_(&ts->eax, ts->eax);
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0xC);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(0x8669F4, 4), 0x4);
	mov(mv, x86::mem(ts->esp + 0x8, 1), ts->al);
	mov(mv, x86::mem(ts->esp + 0x408, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x40C, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x410, 1), 0x1);
	game::sub_581D00(ts, mv);
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, 0x4);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	game::sub_581D00(ts, mv);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xC);
	game::sub_585D50(ts, mv);
	add(&ts->esp, 0x418);
	retn(mv, &ts->esp);
}

void sub_587AF0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x414);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0x5);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, x86::mem(ts->esp + 0x1C, 1), 0x0);
	mov(mv, x86::mem(ts->esp + 0x41C, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x420, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x424, 1), 0x1);
	game::sub_581D00(ts, mv);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x424, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x400, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788164, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_587B5E;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));

loc_587B5E:
	xor_(&ts->esi, ts->esi);
	game::__ftol2(ts, mv);
	mov(&ts->edi, ts->eax);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_587B85;
    }
	goto loc_587B70;

loc_587B70:
	movzx(mv, &ts->eax, x86::mem(ts->esi + (ts->ebp), 1));
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	game::sub_581D00(ts, mv);
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_587B70;
    }

loc_587B85:
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x5);
	game::sub_585D50(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0x414);
	retn(mv, &ts->esp);
}

void sub_587BA0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x414);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0xE);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, x86::mem(ts->esp + 0x1C, 1), 0x0);
	mov(mv, x86::mem(ts->esp + 0x41C, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x420, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x424, 1), 0x1);
	game::sub_581D00(ts, mv);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x424, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x400, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788164, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_587C0E;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));

loc_587C0E:
	xor_(&ts->esi, ts->esi);
	game::__ftol2(ts, mv);
	mov(&ts->edi, ts->eax);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_587C35;
    }
	goto loc_587C20;

loc_587C20:
	movzx(mv, &ts->eax, x86::mem(ts->esi + (ts->ebp), 1));
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	game::sub_581D00(ts, mv);
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_587C20;
    }

loc_587C35:
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xE);
	game::sub_585D50(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0x414);
	retn(mv, &ts->esp);
}

void sub_587C50(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x410);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x41C, 4));
	push(mv, &ts->esp, 0x20);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	xor_(&ts->ebx, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	game::sub_581D90(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(0x866A08, 4), ts->eax);
	sub(&ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_587D07;
    }
	sub(&ts->eax, 0x4);
	if (!ts->eflags.zero) {
        goto loc_587D45;
    }
	push(mv, &ts->esp, 0x20);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	game::sub_581D90(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F0160(ts, mv);
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0xC);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(0x8669F4, 4), 0x7);
	mov(mv, x86::mem(ts->esp + 0x14, 1), ts->bl);
	mov(mv, x86::mem(ts->esp + 0x414, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x418, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x41C, 1), 0x1);
	game::sub_581D00(ts, mv);
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, 0x7);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	game::sub_581D00(ts, mv);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0xC);
	game::sub_585D50(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x410);
	retn(mv, &ts->esp);

loc_587D07:
	mov(&ts->ecx, 0x89CF48);
	game::sub_5FE4C0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_587D3B;
    }
	cmp(mv, &ts->eflags, x86::mem(0x8669F4, 4), 0x4);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_587D3B;
    }
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F9250(ts, mv);
	push(mv, &ts->esp, 0x4);
	game::sub_585E10(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x410);
	retn(mv, &ts->esp);

loc_587D3B:
	mov(&ts->ecx, 0x89CF48);
	game::sub_5FE450(ts, mv);

loc_587D45:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x410);
	retn(mv, &ts->esp);
}

void sub_587D50(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x40C);
	xor_(&ts->eax, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x414, 4));
	mov(mv, x86::mem(ts->esp + 0x4, 1), ts->al);
	mov(mv, x86::mem(ts->esp + 0x404, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x408, 4), ts->eax);
	movzx(&ts->eax, ts->bl);
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->esp + 0x414, 1), 0x1);
	game::sub_581D00(ts, mv);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	game::sub_585D50(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x40C);
	retn(mv, &ts->esp);
}

void sub_587DB0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	sub(&ts->esp, 0x7C);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0xC, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x400, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788164, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_587DED;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));

loc_587DED:
	game::__ftol2(ts, mv);
	cdq(&ts->eax, ts->edx);
	mov(&ts->ecx, 0x64);
	idiv(&ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0xE, 1), 0x1);
	inc(&ts->al);
	mov(&ts->cl, ts->al);
	movzx(&ts->eax, ts->cl);
	lea(mv, &ts->edx, x86::mem(ts->edx + (ts->eax*4), 4));
	add(&ts->eax, ts->edx);
	cmp(&ts->eflags, ts->eax, 0x64);
	setnle(ts->eflags, &ts->al);
	add(&ts->cl, ts->al);
	cmp(&ts->eflags, ts->cl, 0x1);
	mov(mv, x86::mem(ts->esp + 0xF, 1), ts->cl);
	if (ts->eflags.carry) {
        goto loc_588007;
    }
	movzx(&ts->ecx, ts->cl);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x1);
	goto loc_587E34;

loc_587E31:
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0xC, 4));

loc_587E34:
	push(mv, &ts->esp, 0x418);
	game::j__malloc(ts, mv);
	xor_(&ts->esi, ts->esi);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero) {
        goto loc_587E60;
    }
	mov(mv, x86::mem(ts->eax + 0x40C, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x410, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0xC, 1), 0x0);
	mov(mv, x86::mem(ts->eax + 0x414, 1), 0x1);
	mov(&ts->esi, ts->eax);

loc_587E60:
	movzx(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 1));
	push(mv, &ts->esp, 0x8);
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	game::sub_581D00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->dl, x86::mem(ts->esp + 0xE, 1));
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x8, 1), ts->dl);
	game::sub_581D00(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->esp + 0xF, 1));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, 0x8);
	mov(mv, x86::mem(ts->esi + 0x9, 1), ts->cl);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->ebx);
	game::sub_581D00(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esp + 0xF, 1));
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0xE, 1), ts->al);
	if (!ts->eflags.carry) {
        goto loc_587EAC;
    }
	mov(&ts->eax, 0x2F8);
	goto loc_587EB8;

loc_587EAC:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x400, 4));
	sub(mv, &ts->eax, x86::mem(ts->edi + 0x404, 4));

loc_587EB8:
	movsx(&ts->ecx, ts->ax);
	push(mv, &ts->esp, 0x10);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xA, 2), ts->ax);
	game::sub_581D00(ts, mv);
	mov(mv, &ts->dl, x86::mem(ts->esp + 0xE, 1));
	cmp(mv, &ts->eflags, ts->dl, x86::mem(ts->esp + 0xF, 1));
	if (!ts->eflags.carry) {
        goto loc_587EDE;
    }
	mov(&ts->edx, 0x5F);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edx);
	goto loc_587F27;

loc_587EDE:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x404, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x400, 4));
	sub(&ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788164, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_587F1C;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));

loc_587F1C:
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	mov(&ts->edx, ts->eax);

loc_587F27:
	mov(mv, &ts->cl, x86::mem(ts->esp + 0xF, 1));
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0xE, 1), ts->cl);
	if (!ts->eflags.zero) {
        goto loc_587F3A;
    }
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_587F3A;
    }
	dec(&ts->edx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edx);

loc_587F3A:
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x20, 1), 0x0);
	mov(&ts->ecx, 0x18);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x21, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_587F7F;
    }

loc_587F55:
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0xC, 4));
	push(mv, &ts->esp, 0x8);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0x0);
	game::sub_581D90(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esp + 0x18, 1));
	mov(mv, x86::mem(ts->esp + (ts->edi) + 0x20, 1), ts->al);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_587F55;
    }
	mov(&ts->edx, ts->eax);

loc_587F7F:
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_587F9D;
    }

loc_587F85:
	movzx(mv, &ts->ecx, x86::mem(ts->esp + (ts->edi) + 0x20, 1));
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebx);
	game::sub_581D00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_587F85;
    }

loc_587F9D:
	mov(mv, &ts->dl, x86::mem(ts->esp + 0xE, 1));
	cmp(mv, &ts->eflags, ts->dl, x86::mem(ts->esp + 0xF, 1));
	if (!ts->eflags.zero) {
        goto loc_587FD8;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0xC, 4));
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x400, 4));
	sub(mv, &ts->edi, x86::mem(ts->ecx + 0x404, 4));
	if (ts->eflags.zero) {
        goto loc_587FD8;
    }
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0x0);
	game::sub_581D90(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebx);
	game::sub_581D00(ts, mv);

loc_587FD8:
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, &ts->al, x86::mem(ts->esp + 0xE, 1));
	inc(&ts->al);
	mov(mv, x86::mem(ts->esi, 4), ts->ecx);
	mov(mv, &ts->cl, x86::mem(ts->esp + 0xF, 1));
	inc(&ts->edx);
	cmp(&ts->eflags, ts->al, ts->cl);
	mov(mv, x86::mem(ts->esp + 0xE, 1), ts->al);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edx);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_587E31;
    }

loc_588007:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_588010(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	sub(&ts->esp, 0x74);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x400, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x404, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->eax, 1), 0x0);
	mov(mv, x86::mem(ts->eax + 0x408, 1), 0x1);
	mov(mv, &ts->ebx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->edi);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	cmp(&ts->eflags, ts->ebx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_588128;
    }
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_588050:
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 1), 0x0);
	mov(&ts->ecx, 0x18);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x19, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	xor_(&ts->edx, ts->edx);
	mov(mv, &ts->dx, x86::mem(ts->ebx + 0xA, 2));
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	shr(&ts->edx, 0x3);
	movzx(&ts->edi, ts->dl);
	xor_(&ts->esi, ts->esi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0xF, 1), ts->dl);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_5880A8;
    }
	goto loc_588080;

loc_588080:
	push(mv, &ts->esp, 0x8);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->ebx + 0xC, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x0);
	game::sub_581D90(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->esp + 0x10, 1));
	mov(mv, x86::mem(ts->esp + (ts->esi) + 0x18, 1), ts->cl);
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_588080;
    }
	mov(mv, &ts->dl, x86::mem(ts->esp + 0xF, 1));

loc_5880A8:
	xor_(&ts->esi, ts->esi);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_5880C9;
    }
	mov(&ts->edi, ts->edi);

loc_5880B0:
	movzx(mv, &ts->edx, x86::mem(ts->esp + (ts->esi) + 0x18, 1));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->edx);
	game::sub_581D00(ts, mv);
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5880B0;
    }
	mov(mv, &ts->dl, x86::mem(ts->esp + 0xF, 1));

loc_5880C9:
	mov(mv, &ts->al, x86::mem(ts->ebx + 0x8, 1));
	cmp(mv, &ts->eflags, ts->al, x86::mem(ts->ebx + 0x9, 1));
	if (!ts->eflags.zero) {
        goto loc_588102;
    }
	mov(mv, &ts->al, x86::mem(ts->ebx + 0xA, 1));
	shl(&ts->dl, 0x3);
	sub(&ts->al, ts->dl);
	if (ts->eflags.zero) {
        goto loc_588102;
    }
	movzx(&ts->esi, ts->al);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->ebx + 0xC, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x0);
	game::sub_581D90(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edx);
	game::sub_581D00(ts, mv);

loc_588102:
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	game::j__free(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esi, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->ebx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_588050;
    }

loc_588128:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_588130(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, ts->ecx);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->eax, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xC, 2), ts->cx);
	mov(mv, x86::mem(ts->eax + 0xE, 2), ts->cx);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x18, 4), 0xBF800000);
	mov(mv, &ts->ecx, x86::mem(0x8651AC, 4));
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->ecx);
	retn(mv, &ts->esp);
}

void sub_588170(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x40C);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x418, 4));
	xor_(&ts->esi, ts->esi);
	mov(&ts->eax, 0x8693C8);

loc_588186:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x4, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_588197;
    }
	add(&ts->eax, 0x20);
	cmp(&ts->eflags, ts->eax, 0x869468);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_588186;
    }
	goto loc_588199;

loc_588197:
	mov(&ts->esi, ts->eax);

loc_588199:
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 1), 0x0);
	mov(mv, x86::mem(ts->esp + 0x410, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x414, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x418, 1), 0x1);
	game::sub_581D00(ts, mv);
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	game::sub_581D00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	game::sub_581D00(ts, mv);
	mov(mv, &ts->esi, x86::mem(0x7FBE80, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	game::sub_581D00(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F95E0(ts, mv);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	game::sub_586120(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x40C);
	retn(mv, &ts->esp);
}

void sub_588220(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x890080, 4));
	sub(&ts->esp, 0x410);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_588342;
    }
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(0x7FBE80, 4));
	mov(mv, &ts->eax, x86::mem(0x89CF50, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_588341;
    }
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0x4);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 1), 0x0);
	mov(mv, x86::mem(ts->esp + 0x410, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x414, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x418, 1), 0x1);
	game::sub_581D00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x41C, 4));
	mov(&ts->ecx, ts->eax);
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	game::sub_581D00(ts, mv);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x86518C, 4));
	push(mv, &ts->esp, 0x20);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_581D00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8691B8, 4));
	cmp(&ts->eflags, ts->esi, ts->ecx);
	mov(&ts->eax, ts->esi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_5882C0;
    }
	mov(&ts->eax, ts->ecx);

loc_5882C0:
	mov(mv, &ts->edx, x86::mem(0x8691BC, 4));
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_5882CC;
    }
	mov(&ts->eax, ts->edx);

loc_5882CC:
	mov(mv, &ts->edx, x86::mem(0x8691B4, 4));
	push(mv, &ts->esp, ts->ebx);
	sub(&ts->eax, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	game::sub_581D00(ts, mv);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8651AC, 4));
	push(mv, &ts->esp, 0x20);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_581D00(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x424, 4));
	movzx(&ts->ecx, ts->bl);
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	game::sub_581D00(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F9930(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x41C, 4));
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, ts->ecx);
	game::sub_586120(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->ebx);

loc_588341:
	pop(mv, &ts->esp, ts->esi);

loc_588342:
	add(&ts->esp, 0x410);
	retn(mv, &ts->esp);
}

void sub_588350(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x1C, 4));
	mov(&ts->esi, 0x8693C8);

loc_588365:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_588383;
    }
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_588383;
    }
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esp + 0x14, 4));
	if (ts->eflags.zero) {
        goto loc_588383;
    }
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	game::sub_586120(ts, mv);
	add(&ts->esp, 0x10);

loc_588383:
	add(&ts->esi, 0x20);
	cmp(&ts->eflags, ts->esi, 0x869468);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_588365;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_5883A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x18, 4));
	mov(&ts->esi, 0x8693C8);

loc_5883B5:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_5883CD;
    }
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_5883CD;
    }
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	game::sub_586120(ts, mv);
	add(&ts->esp, 0x10);

loc_5883CD:
	add(&ts->esi, 0x20);
	cmp(&ts->eflags, ts->esi, 0x869468);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5883B5;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_5883E0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x40C);
	xor_(&ts->eax, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x414, 4));
	mov(mv, x86::mem(ts->esp + 0x4, 1), ts->al);
	mov(mv, x86::mem(ts->esp + 0x404, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x408, 4), ts->eax);
	movzx(&ts->eax, ts->bl);
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->esp + 0x414, 1), 0x1);
	game::sub_581D00(ts, mv);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	game::sub_5883A0(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x40C);
	retn(mv, &ts->esp);
}

void sub_588440(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi, 4), 0x7A12A0);
	if (ts->eflags.zero) {
        goto loc_588460;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_748B60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x4, 4), 0x0);

loc_588460:
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_588470;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_588470:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_588480(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_58849B;
    }
	mov(mv, &ts->al, x86::mem(ts->ecx + 0xD0, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_588496;
    }
	goto loc_5865A0;

loc_588496:
	goto loc_586520;

locret_58849B:
	retn(mv, &ts->esp);

loc_583D60:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));
	cmp(&ts->eflags, ts->eax, 0x6);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_583D89;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_748E10(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->esi + 0xD0, 1), 0x0);
	mov(&ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	jmp(x86::mem(ts->edx + 0x2C, 4));

loc_583D89:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_583EF0:
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x24, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->edi, ts->eax);
	game::sub_749F50(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	setnz(mv, ts->eflags, x86::mem(ts->esp + 0xF, 1));
	cmp(&ts->eflags, ts->edi, 0x6);
	setl(ts->eflags, &ts->bl);
	test(&ts->eflags, ts->bl, ts->bl);
	if (ts->eflags.zero) {
        goto loc_583F27;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edx);
	game::sub_748E10(ts, mv);
	add(&ts->esp, 0x8);

loc_583F27:
	mov(mv, &ts->al, x86::mem(ts->esp + 0xF, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_583F33;
    }
	test(&ts->eflags, ts->bl, ts->bl);
	if (ts->eflags.zero) {
        goto loc_583F47;
    }

loc_583F33:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0xD0, 1), 0x0);
	mov(&ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x4);
	jmp(x86::mem(ts->eax + 0x38, 4));

loc_583F47:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_586520:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_748D00(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_586585;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->eax, 0x68747470);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_586567;
    }
	if (ts->eflags.zero) {
        goto loc_58655F;
    }
	cmp(&ts->eflags, ts->eax, 0x616C7274);
	if (ts->eflags.zero) {
        goto loc_586557;
    }
	cmp(&ts->eflags, ts->eax, 0x63617264);
	if (!ts->eflags.zero) {
        goto loc_586599;
    }
	mov(&ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	goto sub_583C90;

loc_586557:
	mov(&ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	goto sub_583C10;

loc_58655F:
	mov(&ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	goto sub_583CD0;

loc_586567:
	cmp(&ts->eflags, ts->eax, 0x6E657773);
	if (ts->eflags.zero) {
        goto loc_58657D;
    }
	cmp(&ts->eflags, ts->eax, 0x70726F6D);
	if (!ts->eflags.zero) {
        goto loc_586599;
    }
	mov(&ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	goto sub_583C50;

loc_58657D:
	mov(&ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	goto sub_583D20;

loc_586585:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_748CF0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x48, 4));

loc_586599:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_5865A0:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->eax, 0x68747470);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_5865D5;
    }
	if (ts->eflags.zero) {
        goto loc_5865CD;
    }
	cmp(&ts->eflags, ts->eax, 0x616C7274);
	if (ts->eflags.zero) {
        goto loc_5865C5;
    }
	cmp(&ts->eflags, ts->eax, 0x63617264);
	if (!ts->eflags.zero) {
        goto loc_586613;
    }
	pop(mv, &ts->esp, ts->esi);
	goto sub_583E40;

loc_5865C5:
	mov(&ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	goto loc_583D60;

loc_5865CD:
	mov(&ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	goto loc_583EF0;

loc_5865D5:
	cmp(&ts->eflags, ts->eax, 0x6E657773);
	if (ts->eflags.zero) {
        goto loc_5865EB;
    }
	cmp(&ts->eflags, ts->eax, 0x70726F6D);
	if (!ts->eflags.zero) {
        goto loc_586613;
    }
	mov(&ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	goto sub_583D90;

loc_5865EB:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x28, 4));
	cmp(&ts->eflags, ts->eax, 0x6);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_586613;
    }
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_748E10(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->esi + 0xD0, 1), 0x0);
	mov(&ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	jmp(x86::mem(ts->edx + 0x3C, 4));

loc_586613:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_5884A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->esi, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_5884D0;
    }
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_5884B0:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_584B40(ts, mv);
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->edi, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_5884B0;
    }

loc_5884D0:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void std__locale___Locimp____Locimp_void_(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77898C);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edi);
	mov(mv, x86::mem(ts->edi, 4), 0x7A1340);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x2);
	game::sub_586A80(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x3C, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 1), 0x1);
	game::sub_586620(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x34, 4));
	lea(mv, &ts->esi, x86::mem(ts->edi + 0x34, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x14, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_588549;
    }
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_588530:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	game::j__free(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_588530;
    }

loc_588549:
	push(mv, &ts->esp, 0x4DEF30);
	push(mv, &ts->esp, 0x6);
	push(mv, &ts->esp, 0x8);
	add(&ts->edi, 0x4);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x24, 4), 0xFFFFFFFF);
	game::_eh_vector_destructor_iterator__void_P_uint_int_void__P__void_P__(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_778960:
	push(mv, &ts->esp, 0x4DEF30);
	push(mv, &ts->esp, 0x6);
	push(mv, &ts->esp, 0x8);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->eax, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::_eh_vector_destructor_iterator__void_P_uint_int_void__P__void_P__(ts, mv);
	retn(mv, &ts->esp);

loc_778976:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x34);
	goto sub_4DEF30;

loc_778981:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x3C);
	goto sub_586620;

SEH_5884E0:
	mov(&ts->eax, 0x7E3FC0);
	goto ___CxxFrameHandler;
}

void sub_588630(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7789D9);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x44, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_58875A;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_58875A;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x3C, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x3C, 4));
	cmp(&ts->eflags, ts->edx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_58875A;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	game::sub_744310(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esp + 0x20, 1));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, 0xEA60);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x86679C, 1), 0x0);
	push(mv, &ts->esp, 0x586B80);
	if (ts->eflags.zero) {
        goto loc_5886A5;
    }
	movzx(mv, &ts->eax, x86::mem(0x7FBE04, 2));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x44, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7FBDDC);
	push(mv, &ts->esp, ts->ecx);
	goto loc_5886B6;

loc_5886A5:
	movzx(mv, &ts->edx, x86::mem(0x7FBE00, 2));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x7FBDBC);
	push(mv, &ts->esp, ts->eax);

loc_5886B6:
	game::sub_745160(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x18);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_5886D7;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp, 0xC);

loc_5886D7:
	push(mv, &ts->esp, 0x3);
	push(mv, &ts->esp, 0x2C);
	game::sub_6D7110(ts, mv);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_588739;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, &ts->cl, x86::mem(ts->esi + 0xA0, 1));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x586B80);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x636F6E6E);
	mov(&ts->ecx, ts->eax);
	game::sub_584680(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->edi);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x20, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp, 0xC);

loc_588739:
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->edi);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x20, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp, 0xC);

loc_58875A:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->edi);
	or_(&ts->eax, 0xFFFFFFFF);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp, 0xC);

loc_7789C0:
	push(mv, &ts->esp, 0x3);
	push(mv, &ts->esp, 0x21F);
	push(mv, &ts->esp, 0x7A1344);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

SEH_588630:
	mov(&ts->eax, 0x7E4010);
	goto ___CxxFrameHandler;
}

void sub_588770(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x208);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->ebx + 0x48, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_588793;
    }
	mov(&ts->eax, 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x208);
	retn(mv, &ts->esp, 0x14);

loc_588793:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x210, 4));
	push(mv, &ts->esp, ts->ebp);
	xor_(&ts->ebp, ts->ebp);
	cmp(&ts->eflags, ts->edx, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero) {
        goto loc_588A24;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->edx, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_588A24;
    }
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x21C, 4));
	cmp(&ts->eflags, ts->esi, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_588A24;
    }
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 1), 0x0);
	mov(&ts->ecx, 0x7F);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x19, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x79AC28);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, 0x200);
	push(mv, &ts->esp, ts->eax);
	game::sub_741A50(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x7A13C8);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, 0x200);
	push(mv, &ts->esp, ts->ecx);
	game::sub_741A50(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esp + 0x24C, 1));
	add(&ts->esp, 0x20);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_588825;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x7A138C);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, 0x200);
	push(mv, &ts->esp, ts->edx);
	game::sub_741690(ts, mv);
	add(&ts->esp, 0x10);

loc_588825:
	game::sub_571380(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_58884B;
    }
	game::sub_571380(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7A13A0);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, 0x200);
	push(mv, &ts->esp, ts->eax);
	game::sub_741A50(ts, mv);
	add(&ts->esp, 0x10);

loc_58884B:
	game::sub_5712A0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_588871;
    }
	game::sub_5712A0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7A1398);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, 0x200);
	push(mv, &ts->esp, ts->ecx);
	game::sub_741A50(ts, mv);
	add(&ts->esp, 0x10);

loc_588871:
	cmp(mv, &ts->eflags, x86::mem(ts->ebx + 0xC4, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_588896;
    }
	push(mv, &ts->esp, 0x86FF8C);
	push(mv, &ts->esp, 0x7A143C);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, 0x200);
	push(mv, &ts->esp, ts->edx);
	game::sub_741A50(ts, mv);
	add(&ts->esp, 0x10);

loc_588896:
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x8);
	if (!ts->eflags.zero) {
        goto loc_5889EE;
    }
	push(mv, &ts->esp, 0x100000);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->esi, ts->eax);
	push(mv, &ts->esp, 0x100000);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(ts->esi, 1), 0x0);
	call(ts, mv, x86::mem(0x783138, 4));
	push(mv, &ts->esp, ts->eax);
	call(ts, mv, x86::mem(0x783134, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5889E5;
    }
	push(mv, &ts->esp, 0x8);
	game::j__malloc(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->ebx + 0x4, 4), ts->ebp);
	mov(mv, x86::mem(ts->ebx, 4), ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebp);

loc_5888E6:
	cmp(&ts->eflags, ts->ebp, 0x1);
	if (!ts->eflags.zero) {
        goto loc_588921;
    }
	push(mv, &ts->esp, 0x100000);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x0);
	call(ts, mv, x86::mem(0x783138, 4));
	push(mv, &ts->esp, ts->eax);
	call(ts, mv, x86::mem(0x783134, 4));
	add(&ts->eax, ts->esi);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero) {
        goto loc_588910;
    }

loc_588906:
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 1), 0x5C);
	if (ts->eflags.zero) {
        goto loc_588910;
    }
	dec(&ts->eax);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_588906;
    }

loc_588910:
	push(mv, &ts->esp, 0x7A1428);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->eax, 1), 0x0);
	game::sub_4400D0(ts, mv);
	add(&ts->esp, 0x8);

loc_588921:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->esi);
	game::sub_57CA10(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_5889A0;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_575600(ts, mv);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebp, ts->eax);
	game::sub_5755E0(ts, mv);
	sub(&ts->eax, ts->ebp);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_588993;
    }
	goto loc_588950;

loc_588950:
	cmp(&ts->eflags, ts->eax, 0x100000);
	mov(&ts->ebp, 0x100000);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_58895E;
    }
	mov(&ts->ebp, ts->eax);

loc_58895E:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	game::sub_57D9B0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebx + (ts->eax*4), 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	game::sub_43BCD0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->ebx + (ts->edx*4), 4), ts->eax);
	game::sub_575600(ts, mv);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebp, ts->eax);
	game::sub_5755E0(ts, mv);
	sub(&ts->eax, ts->ebp);
	add(&ts->esp, 0x20);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_588950;
    }

loc_588993:
	push(mv, &ts->esp, ts->edi);
	game::sub_579BF0(ts, mv);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x14, 4));
	add(&ts->esp, 0x4);

loc_5889A0:
	inc(&ts->ebp);
	cmp(&ts->eflags, ts->ebp, 0x2);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebp);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5888E6;
    }
	mov(mv, x86::mem(ts->esi, 1), 0x0);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebx, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x7A141C);
	push(mv, &ts->esp, ts->esi);
	game::sub_4400D0(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x7A1414);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, 0x200);
	push(mv, &ts->esp, ts->edx);
	game::sub_741A50(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	game::j__free(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x38, 4));
	add(&ts->esp, 0x24);

loc_5889E5:
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_5889EE:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x228, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x224, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x584440);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x61757468);
	mov(&ts->ecx, ts->ebx);
	game::sub_5869A0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x208);
	retn(mv, &ts->esp, 0x14);

loc_588A24:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	or_(&ts->eax, 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x208);
	retn(mv, &ts->esp, 0x14);
}

void sub_588A40(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	sub(&ts->esp, 0x104);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->ebx + 0x48, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_588A69;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	add(&ts->eax, 0x5);
	shl(&ts->eax, 0x4);
	lea(mv, &ts->esi, x86::mem(ts->eax + (ts->ebx), 4));
	cmp(mv, &ts->eflags, x86::mem(ts->esi, 1), 0x0);
	if (!ts->eflags.zero) {
        goto loc_588A77;
    }

loc_588A69:
	mov(&ts->eax, 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0xC);

loc_588A77:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x850080);
	game::sub_503260(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x10, 1), 0x0);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x3F);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x11, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x7A13E8);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, 0x100);
	push(mv, &ts->esp, ts->ecx);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	game::sub_741A50(ts, mv);
	game::sub_742C80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x790B60);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, 0x100);
	push(mv, &ts->esp, ts->edx);
	game::sub_741A50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0xC, 4));
	add(&ts->esp, 0x20);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x584520);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x70657273);
	mov(&ts->ecx, ts->ebx);
	game::sub_5869A0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0xC);
}

void sub_588B00(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->ebp + 0x48, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_588B17;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->eax, 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0xC);

loc_588B17:
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x14, 4));
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_588B47;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ebx, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_588B47;
    }
	xor_(&ts->esi, ts->esi);
	lea(mv, &ts->edi, x86::mem(ts->ebp + 0x50, 4));
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_588B30:
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_588B51;
    }
	inc(&ts->esi);
	add(&ts->edi, 0x10);
	cmp(&ts->eflags, ts->esi, 0x4);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_588B30;
    }

loc_588B47:
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	or_(&ts->eax, 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0xC);

loc_588B51:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->ebp);
	game::sub_588A40(ts, mv);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0xC);
}

void sub_588B70(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	sub(&ts->esp, 0x974);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->ebx + 0x48, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_588B96;
    }
	mov(&ts->eax, 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x8);

loc_588B96:
	push(mv, &ts->esp, 0x86993C);
	game::sub_43DBB0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_588D2E;
    }
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 1), 0x0);
	mov(&ts->ecx, 0x259);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x19, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	push(mv, &ts->esp, 0x869888);
	push(mv, &ts->esp, 0x7A1488);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, 0x968);
	push(mv, &ts->esp, ts->eax);
	game::sub_741A50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8698C8, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x7A1480);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, 0x968);
	push(mv, &ts->esp, ts->edx);
	game::sub_741DA0(ts, mv);
	push(mv, &ts->esp, 0x8698CC);
	push(mv, &ts->esp, 0x7A1478);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x40, 4));
	push(mv, &ts->esp, 0x968);
	push(mv, &ts->esp, ts->eax);
	game::sub_741A50(ts, mv);
	push(mv, &ts->esp, 0x86993C);
	push(mv, &ts->esp, 0x7A1470);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x50, 4));
	push(mv, &ts->esp, 0x968);
	push(mv, &ts->esp, ts->ecx);
	game::sub_741A50(ts, mv);
	add(&ts->esp, 0x40);
	push(mv, &ts->esp, 0x7A1468);
	push(mv, &ts->esp, 0x7A1460);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, 0x968);
	push(mv, &ts->esp, ts->edx);
	game::sub_741A50(ts, mv);
	game::sub_582190(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7A145C);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, 0x968);
	push(mv, &ts->esp, ts->eax);
	game::sub_741A50(ts, mv);
	add(&ts->esp, 0x20);
	xor_(&ts->esi, ts->esi);
	mov(&ts->edi, 0x8698DC);

loc_588C66:
	push(mv, &ts->esp, ts->edi);
	game::sub_43DBB0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_588D04;
    }
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, 0x7A1454);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4400D0(ts, mv);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, 0x968);
	push(mv, &ts->esp, ts->eax);
	game::sub_741A50(ts, mv);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, 0x7A144C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4400D0(ts, mv);
	push(mv, &ts->esp, 0x7A1468);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x3C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x48, 4));
	push(mv, &ts->esp, 0x968);
	push(mv, &ts->esp, ts->eax);
	game::sub_741A50(ts, mv);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x4C, 4));
	push(mv, &ts->esp, 0x7A1444);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4400D0(ts, mv);
	add(&ts->esp, 0x44);
	push(mv, &ts->esp, 0x783FE5);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, 0x968);
	push(mv, &ts->esp, ts->eax);
	game::sub_741A50(ts, mv);
	add(&ts->esp, 0x10);
	add(&ts->edi, 0x10);
	inc(&ts->esi);
	cmp(&ts->eflags, ts->edi, 0x86993C);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_588C66;
    }

loc_588D04:
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x5845A0);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x72616E6B);
	mov(&ts->ecx, ts->ebx);
	game::sub_5869A0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x8);

loc_588D2E:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x8);
}

void sub_588D40(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	sub(&ts->esp, 0x450);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_588FA8;
    }
	push(mv, &ts->esp, 0x1F4);
	game::sub_74AE50(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x98, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_588F5E;
    }
	mov(mv, x86::mem(ts->esp + 0x58, 1), 0x0);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0xFF);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x59, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	game::sub_570A30(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*4), 4));
	mov(mv, &ts->ecx, x86::mem(0x7FA744, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x7A14DC);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x60, 4));
	push(mv, &ts->esp, 0x400);
	push(mv, &ts->esp, ts->edx);
	game::sub_741A50(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x7FA738, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7A14D4);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x70, 4));
	push(mv, &ts->esp, 0x400);
	push(mv, &ts->esp, ts->ecx);
	game::sub_741690(ts, mv);
	push(mv, &ts->esp, 0x28);
	push(mv, &ts->esp, 0x7A14CC);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x80, 4));
	push(mv, &ts->esp, 0x400);
	push(mv, &ts->esp, ts->edx);
	game::sub_741690(ts, mv);
	add(&ts->esp, 0x30);
	game::sub_571380(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_588E0B;
    }
	game::sub_571380(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7A13A0);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x60, 4));
	push(mv, &ts->esp, 0x400);
	push(mv, &ts->esp, ts->eax);
	game::sub_741A50(ts, mv);
	add(&ts->esp, 0x10);

loc_588E0B:
	game::sub_5712A0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_588E31;
    }
	game::sub_5712A0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7A1398);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x60, 4));
	push(mv, &ts->esp, 0x400);
	push(mv, &ts->esp, ts->ecx);
	game::sub_741A50(ts, mv);
	add(&ts->esp, 0x10);

loc_588E31:
	game::sub_742C80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x790B60);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x60, 4));
	push(mv, &ts->esp, 0x400);
	push(mv, &ts->esp, ts->edx);
	game::sub_741A50(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x28, 1), 0x0);
	mov(&ts->ecx, 0xF);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x29, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	push(mv, &ts->esp, 0x7A0FE4);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	push(mv, &ts->esp, 0x7A0FEC);
	push(mv, &ts->esp, 0x7A0FE0);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x34, 4));
	push(mv, &ts->esp, 0x7A14C0);
	push(mv, &ts->esp, ts->eax);
	game::sub_4400D0(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x3C, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x7A14B8);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x84, 4));
	push(mv, &ts->esp, 0x400);
	push(mv, &ts->esp, ts->edx);
	game::sub_741A50(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x3D, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x41, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x45, 4), ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x3C, 4));
	mov(mv, x86::mem(ts->esp + 0x49, 2), ts->ax);
	push(mv, &ts->esp, 0x10);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x44, 1), 0x0);
	mov(mv, x86::mem(ts->esp + 0x53, 1), ts->al);
	game::sub_571450(ts, mv);
	push(mv, &ts->esp, 0x7A14AC);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x48, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x7A0FEC);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x60, 4));
	push(mv, &ts->esp, 0x7A14A0);
	push(mv, &ts->esp, ts->eax);
	game::sub_4400D0(ts, mv);
	add(&ts->esp, 0x50);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x7A1498);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x60, 4));
	push(mv, &ts->esp, 0x400);
	push(mv, &ts->esp, ts->edx);
	game::sub_741A50(ts, mv);
	game::sub_570A30(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_57DBD0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7A1490);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x74, 4));
	push(mv, &ts->esp, 0x400);
	push(mv, &ts->esp, ts->eax);
	game::sub_741A50(ts, mv);
	game::sub_582190(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7A145C);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x84, 4));
	push(mv, &ts->esp, 0x400);
	push(mv, &ts->esp, ts->ecx);
	game::sub_741A50(ts, mv);
	push(mv, &ts->esp, 0x5823A0);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x90, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	game::sub_744FF0(ts, mv);
	add(&ts->esp, 0x40);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x44, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_588F67;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_586A80(ts, mv);

loc_588F5E:
	or_(&ts->eax, 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_588F67:
	push(mv, &ts->esp, 0x9C40);
	push(mv, &ts->esp, ts->eax);
	game::sub_7444B0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x586C00);
	push(mv, &ts->esp, 0x3);
	push(mv, &ts->esp, ts->eax);
	game::sub_744410(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x44, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x5843A0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	game::sub_744410(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x44, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x5843F0);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, ts->edx);
	game::sub_744410(ts, mv);
	add(&ts->esp, 0x38);

loc_588FA8:
	pop(mv, &ts->esp, ts->edi);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_588FB0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x8669F4, 4));
	push(mv, &ts->esp, ts->ebx);
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_589067;
    }
	cmp(mv, &ts->eflags, x86::mem(0x8669F8, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_588FE0;
    }
	push(mv, &ts->esp, 0x9);
	game::sub_587D50(ts, mv);
	mov(mv, &ts->al, x86::mem(0x8669F8, 1));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->al, ts->bl);
	if (ts->eflags.zero) {
        goto loc_588FE0;
    }
	game::sub_583490(ts, mv);

loc_588FE0:
	mov(mv, &ts->eax, x86::mem(0x8667EC, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_588FF2;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_748650(ts, mv);
	add(&ts->esp, 0x4);

loc_588FF2:
	mov(mv, &ts->eax, x86::mem(0x8667E4, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_589004;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_743B30(ts, mv);
	add(&ts->esp, 0x4);

loc_589004:
	or_(&ts->eax, 0xFFFFFFFF);
	mov(mv, x86::mem(0x8667E4, 4), ts->ebx);
	mov(mv, x86::mem(0x8667EC, 4), ts->ebx);
	mov(mv, x86::mem(0x8669F8, 1), ts->bl);
	mov(mv, x86::mem(0x7FBE58, 4), ts->eax);
	mov(mv, x86::mem(0x7FBE5C, 4), ts->eax);
	mov(mv, x86::mem(0x7FBE64, 4), ts->eax);
	mov(mv, x86::mem(0x8669EC, 4), ts->ebx);
	mov(mv, x86::mem(0x8669F0, 2), ts->bx);
	mov(mv, x86::mem(0x7FBE60, 4), 0xBF800000);
	mov(mv, x86::mem(0x866A0C, 4), 0x0);
	mov(mv, x86::mem(0x8669FC, 4), ts->ebx);
	mov(mv, x86::mem(0x866A00, 4), ts->ebx);
	mov(mv, x86::mem(0x866A04, 4), ts->ebx);
	mov(mv, x86::mem(0x866A10, 4), ts->ebx);
	mov(mv, x86::mem(0x8669F4, 4), ts->ebx);

loc_589067:
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void unexpected_void_(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x86675C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_58907B;
    }
	call(ts, mv, ts->eax);

loc_58907B:
	goto sub_588FB0;
}

void sub_5890C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7FBE64, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x89CF48);
	game::sub_6099C0(ts, mv);
	goto sub_588FB0;
}

void sub_5890E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x890080, 4));
	sub(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5891A6;
    }
	mov(mv, &ts->eax, x86::mem(0x8691B4, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x0);
	game::sub_581D90(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(0x8691B8, 4));
	push(mv, &ts->esp, 0x20);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	lea(mv, &ts->edi, x86::mem(ts->eax + (ts->edx), 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x0);
	game::sub_581D90(ts, mv);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, 0x8);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x0);
	game::sub_581D90(ts, mv);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F0220(ts, mv);
	mov(&ts->ecx, ts->eax);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_5891A3;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x26C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_5891A3;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	mov(&ts->eax, ts->ebp);
	mov(mv, x86::mem(ts->ecx + 0x26C, 4), ts->eax);
	movzx(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 1));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F9840(ts, mv);
	cmp(mv, &ts->eflags, ts->edi, x86::mem(0x7FBE64, 4));
	if (!ts->eflags.zero) {
        goto loc_5891A3;
    }
	push(mv, &ts->esp, ts->ebp);
	game::sub_587960(ts, mv);
	add(&ts->esp, 0x4);

loc_5891A3:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);

loc_5891A6:
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_5891B0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x20);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	xor_(&ts->edi, ts->edi);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	game::sub_581D90(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, 0x20);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edi);
	game::sub_581D90(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7FBE60, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ecx);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.parity) {
        goto loc_589306;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(0x7FBE60, 4), ts->eax);
	game::sub_5890E0(ts, mv);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8651AC, 4));
	add(&ts->esp, 0x8);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784550, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	game::__ftol2(ts, mv);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(0x8669F0, 2), ts->ax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x86518C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fabs(&ts->fp, x86::fp_index(0));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784D28, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_5892A2;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784264, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(0x866A00, 4), ts->edi);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(0x869234, 4), ts->eax);
	mov(mv, x86::mem(0x866758, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);

loc_5892A2:
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_5892B6;
    }
	mov(&ts->esi, 0x1);
	goto loc_5892B9;

loc_5892B6:
	or_(&ts->esi, 0xFFFFFFFF);

loc_5892B9:
	cmp(mv, &ts->eflags, ts->esi, x86::mem(0x866A04, 4));
	if (!ts->eflags.zero) {
        goto loc_5892FA;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78435C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.parity) {
        goto loc_5892FA;
    }
	mov(mv, &ts->eax, x86::mem(0x866A00, 4));
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0x5);
	mov(mv, x86::mem(0x866A00, 4), ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_589300;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_5836E0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8669FC, 4));
	add(&ts->esp, 0x4);
	inc(&ts->eax);
	mov(mv, x86::mem(0x8669FC, 4), ts->eax);

loc_5892FA:
	mov(mv, x86::mem(0x866A00, 4), ts->edi);

loc_589300:
	mov(mv, x86::mem(0x866A04, 4), ts->esi);

loc_589306:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_589310(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7789FB);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x420);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(0x7FBE5C, 4));
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->ebx, ts->ebx);
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, x86::mem(ts->esp + 0x20, 1), ts->bl);
	mov(mv, x86::mem(ts->esp + 0x420, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x424, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x428, 1), 0x1);
	game::sub_581D00(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x89CF48);
	game::sub_5FE570(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x1);
	mov(mv, x86::mem(ts->esp + 0x440, 4), ts->ebx);
	game::sub_587DB0(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x1C, 4));
	add(&ts->esp, 0xC);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	game::Iostream_init__Iostream_init_void_(ts, mv);
	mov(&ts->edi, ts->eax);
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_5893E3;
    }

loc_5893B0:
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x1);
	game::sub_585D50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x4, 4));
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_5893DB;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_5893DB:
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x10, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_5893B0;
    }

loc_5893E3:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	cmp(&ts->eflags, ts->esi, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x434, 4), 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_589417;
    }

loc_5893F6:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->esi, 4), ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->esi);
	game::j__free(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x14, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->esi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_5893F6;
    }

loc_589417:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x42C, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_7789F0:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x428, 4));
	goto sub_4DEF30;

SEH_589FA0:
	mov(&ts->eax, 0x7E407C);
	goto ___CxxFrameHandler;
}

void sub_589430(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x778A18);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0x0);
	game::sub_587DB0(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x14, 4));
	add(&ts->esp, 0xC);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	game::Iostream_init__Iostream_init_void_(ts, mv);
	mov(&ts->edi, ts->eax);
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_5894C3;
    }
	mov(&ts->edi, ts->edi);

loc_589490:
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x7);
	game::sub_585D50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x4, 4));
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_5894BB;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_5894BB:
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_589490;
    }

loc_5894C3:
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	cmp(&ts->eflags, ts->esi, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_5894F4;
    }

loc_5894D3:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->esi, 4), ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->esi);
	game::j__free(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xC, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_5894D3;
    }

loc_5894F4:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_778A10:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x18, 4));
	goto sub_4DEF30;

SEH_589430:
	mov(&ts->eax, 0x7E4034);
	goto ___CxxFrameHandler;
}

void sub_589510(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8, 4), 0x0);
	game::sub_581D90(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x7FBE64, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x89CF48);
	mov(mv, x86::mem(0x8669F8, 1), 0x0);
	game::sub_6099C0(ts, mv);
	add(&ts->esp, 0x4);
	goto sub_588FB0;
}

void sub_5895C0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->ebp, ts->ebp);
	xor_(&ts->edi, ts->edi);
	mov(&ts->eax, 0x8693C8);
	mov(&ts->edi, ts->edi);

loc_5895D0:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_5895E5;
    }
	add(&ts->eax, 0x20);
	cmp(&ts->eflags, ts->eax, 0x869468);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5895D0;
    }
	goto loc_5895E7;

loc_5895E5:
	mov(&ts->edi, ts->eax);

loc_5895E7:
	cmp(mv, &ts->eflags, x86::mem(0x866A14, 4), 0x3);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5896EA;
    }
	cmp(&ts->eflags, ts->edi, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_5896EA;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, 0x20);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebp);
	game::sub_581D90(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8691B4, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebp);
	game::sub_581D90(ts, mv);
	push(mv, &ts->esp, 0x20);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebp);
	game::sub_581D90(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, 0x8);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebp);
	game::sub_581D90(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->edi, 4));
	movzx(mv, &ts->ebp, x86::mem(ts->esp + 0x14, 1));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F0220(ts, mv);
	mov(&ts->ecx, ts->eax);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_5896E8;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x26C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_5896E8;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->ecx + 0x26C, 4), ts->edx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F9840(ts, mv);
	mov(&ts->edi, 0x8693C8);
	mov(&ts->ebx, 0x5);

loc_5896A5:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_5896CA;
    }
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_5896CA;
    }
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esp + 0x20, 4));
	if (ts->eflags.zero) {
        goto loc_5896CA;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0x10, 4), ts->ebx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5896CA;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x2);
	push(mv, &ts->esp, ts->eax);
	game::sub_586120(ts, mv);
	add(&ts->esp, 0x10);

loc_5896CA:
	add(&ts->edi, 0x20);
	cmp(&ts->eflags, ts->edi, 0x869468);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_5896A5;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_588220(ts, mv);
	add(&ts->esp, 0xC);

loc_5896E8:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);

loc_5896EA:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_5896F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x89CF48);
	game::sub_5FF000(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x5);
	push(mv, &ts->esp, ts->eax);
	game::sub_588350(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_589720(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F9BD0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0xE);
	push(mv, &ts->esp, ts->eax);
	game::sub_588350(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_589750(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x40C);
	xor_(&ts->eax, ts->eax);
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0xF);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->esp + 0x8, 1), ts->al);
	mov(mv, x86::mem(ts->esp + 0x408, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x40C, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x410, 1), 0x1);
	game::sub_581D00(ts, mv);
	movzx(mv, &ts->eax, x86::mem(ts->esp + 0x410, 1));
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	game::sub_581D00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x414, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	game::sub_581D00(ts, mv);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0xF);
	game::sub_5883A0(ts, mv);
	add(&ts->esp, 0x418);
	retn(mv, &ts->esp);
}

void sub_5897C0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x40C);
	xor_(&ts->eax, ts->eax);
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0x10);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->esp + 0x8, 1), ts->al);
	mov(mv, x86::mem(ts->esp + 0x408, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x40C, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x410, 1), 0x1);
	game::sub_581D00(ts, mv);
	movzx(mv, &ts->eax, x86::mem(ts->esp + 0x410, 1));
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	game::sub_581D00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x414, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	game::sub_581D00(ts, mv);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x10);
	game::sub_5883A0(ts, mv);
	add(&ts->esp, 0x418);
	retn(mv, &ts->esp);
}

void sub_589830(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x40C);
	xor_(&ts->eax, ts->eax);
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0xA);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->esp + 0x8, 1), ts->al);
	mov(mv, x86::mem(ts->esp + 0x408, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x40C, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x410, 1), 0x1);
	game::sub_581D00(ts, mv);
	movzx(mv, &ts->eax, x86::mem(0x866A18, 1));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	game::sub_581D00(ts, mv);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xA);
	game::sub_5883A0(ts, mv);
	add(&ts->esp, 0x418);
	retn(mv, &ts->esp);
}

void sub_589890(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x40C);
	xor_(&ts->eax, ts->eax);
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0xB);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->esp + 0x8, 1), ts->al);
	mov(mv, x86::mem(ts->esp + 0x408, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x40C, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x410, 1), 0x1);
	game::sub_581D00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x414, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	game::sub_581D00(ts, mv);
	movzx(mv, &ts->ecx, x86::mem(ts->esp + 0x418, 1));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	game::sub_581D00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x410, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0xB);
	push(mv, &ts->esp, ts->eax);
	game::sub_588350(ts, mv);
	add(&ts->esp, 0x41C);
	retn(mv, &ts->esp);
}

void sub_589910(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x40C);
	xor_(&ts->eax, ts->eax);
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0xD);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(0x866A14, 4), 0x3);
	mov(mv, x86::mem(ts->esp + 0x8, 1), ts->al);
	mov(mv, x86::mem(ts->esp + 0x408, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x40C, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x410, 1), 0x1);
	game::sub_581D00(ts, mv);
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, 0x3);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	game::sub_581D00(ts, mv);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xD);
	game::sub_5883A0(ts, mv);
	add(&ts->esp, 0x418);
	retn(mv, &ts->esp);
}

void sub_589970(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x40C);
	xor_(&ts->eax, ts->eax);
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0xD);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(0x866A14, 4), 0x4);
	mov(mv, x86::mem(ts->esp + 0x8, 1), ts->al);
	mov(mv, x86::mem(ts->esp + 0x408, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x40C, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x410, 1), 0x1);
	game::sub_581D00(ts, mv);
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, 0x4);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	game::sub_581D00(ts, mv);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xD);
	game::sub_5883A0(ts, mv);
	add(&ts->esp, 0x418);
	retn(mv, &ts->esp);
}

void sub_5899D0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x40C);
	xor_(&ts->eax, ts->eax);
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0xD);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(0x866A14, 4), 0x2);
	mov(mv, x86::mem(ts->esp + 0x8, 1), ts->al);
	mov(mv, x86::mem(ts->esp + 0x408, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x40C, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x410, 1), 0x1);
	game::sub_581D00(ts, mv);
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, 0x2);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	game::sub_581D00(ts, mv);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xD);
	game::sub_5883A0(ts, mv);
	add(&ts->esp, 0x418);
	retn(mv, &ts->esp);
}

void sub_589B30(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x414);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0x5);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, x86::mem(ts->esp + 0x1C, 1), 0x0);
	mov(mv, x86::mem(ts->esp + 0x41C, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x420, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x424, 1), 0x1);
	game::sub_581D00(ts, mv);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x424, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x400, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788164, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_589B9E;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));

loc_589B9E:
	xor_(&ts->esi, ts->esi);
	game::__ftol2(ts, mv);
	mov(&ts->edi, ts->eax);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_589BC5;
    }
	goto loc_589BB0;

loc_589BB0:
	movzx(mv, &ts->eax, x86::mem(ts->esi + (ts->ebp), 1));
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	game::sub_581D00(ts, mv);
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_589BB0;
    }

loc_589BC5:
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x5);
	game::sub_5883A0(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0x414);
	retn(mv, &ts->esp);
}

void sub_589BE0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x414);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0xE);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, x86::mem(ts->esp + 0x1C, 1), 0x0);
	mov(mv, x86::mem(ts->esp + 0x41C, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x420, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x424, 1), 0x1);
	game::sub_581D00(ts, mv);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x424, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x400, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788164, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_589C4E;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));

loc_589C4E:
	xor_(&ts->esi, ts->esi);
	game::__ftol2(ts, mv);
	mov(&ts->edi, ts->eax);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_589C75;
    }
	goto loc_589C60;

loc_589C60:
	movzx(mv, &ts->eax, x86::mem(ts->esi + (ts->ebp), 1));
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	game::sub_581D00(ts, mv);
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_589C60;
    }

loc_589C75:
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xE);
	game::sub_5883A0(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0x414);
	retn(mv, &ts->esp);
}

void sub_589C90(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x414);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0x6);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, x86::mem(ts->esp + 0x1C, 1), 0x0);
	mov(mv, x86::mem(ts->esp + 0x41C, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x420, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x424, 1), 0x1);
	game::sub_581D00(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x866A1C, 4));
	inc(&ts->eax);
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, x86::mem(0x866A1C, 4), ts->eax);
	game::sub_581D00(ts, mv);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x424, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x400, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788164, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_589D15;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));

loc_589D15:
	xor_(&ts->esi, ts->esi);
	game::__ftol2(ts, mv);
	mov(&ts->edi, ts->eax);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_589D37;
    }

loc_589D22:
	movzx(mv, &ts->eax, x86::mem(ts->esi + (ts->ebp), 1));
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	game::sub_581D00(ts, mv);
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_589D22;
    }

loc_589D37:
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x6);
	game::sub_5883A0(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0x414);
	retn(mv, &ts->esp);
}

void sub_589D60(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7789FB);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x420);
	cmp(mv, &ts->eflags, x86::mem(0x7FBEC8, 1), 0x1);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_589DA2;
    }
	mov(&ts->ecx, 0x6);
	xor_(&ts->eax, ts->eax);
	mov(&ts->edi, 0x86A36C);
	mov(mv, x86::mem(0x7FBEC8, 1), 0x0);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);

loc_589DA2:
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(0x86A36C, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_589DD0;
    }
	push(mv, &ts->esp, 0x8);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_589DC7;
    }
	mov(mv, x86::mem(ts->eax, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->eax);
	goto loc_589DC9;

loc_589DC7:
	xor_(&ts->eax, ts->eax);

loc_589DC9:
	mov(mv, x86::mem(0x86A36C, 4), ts->eax);

loc_589DD0:
	mov(mv, &ts->eax, x86::mem(0x86A36C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_585E80(ts, mv);
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->al, 0x1);
	if (!ts->eflags.zero) {
        goto loc_589F18;
    }
	mov(mv, &ts->edx, x86::mem(0x86A36C, 4));
	mov(mv, x86::mem(ts->esp + 0x420, 1), ts->al);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x20, 1), 0x0);
	mov(mv, x86::mem(ts->esp + 0x420, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x424, 4), ts->ebx);
	game::sub_588010(ts, mv);
	add(&ts->esp, 0x8);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x89CF48);
	game::sub_609B80(ts, mv);
	mov(mv, &ts->esi, x86::mem(0x86A36C, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_589E62;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero) {
        goto loc_589E59;
    }
	goto loc_589E40;

loc_589E40:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	game::j__free(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_589E40;
    }

loc_589E59:
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_589E62:
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(0x86A36C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x7);
	mov(mv, x86::mem(ts->esp + 0x440, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x428, 4), ts->ebx);
	game::sub_587DB0(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x1C, 4));
	add(&ts->esp, 0xC);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	game::Iostream_init__Iostream_init_void_(ts, mv);
	mov(&ts->ebx, ts->eax);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_589EE4;
    }
	mov(&ts->edi, ts->edi);

loc_589EB0:
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7);
	push(mv, &ts->esp, ts->edi);
	game::sub_588350(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x4, 4));
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_589EDC;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_589EDC:
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x10, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_589EB0;
    }

loc_589EE4:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	cmp(&ts->eflags, ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x434, 4), 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_589F18;
    }

loc_589EF7:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->esi, 4), ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->esi);
	game::j__free(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x14, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->esi, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_589EF7;
    }

loc_589F18:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x42C, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_7789F0:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x428, 4));
	goto sub_4DEF30;

SEH_589FA0:
	mov(&ts->eax, 0x7E407C);
	goto ___CxxFrameHandler;
}

void sub_589F30(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x40C);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x418, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F07E0(ts, mv);
	xor_(&ts->eax, ts->eax);
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0x11);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->esp + 0xC, 1), ts->al);
	mov(mv, x86::mem(ts->esp + 0x40C, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x410, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x414, 1), 0x1);
	game::sub_581D00(ts, mv);
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	game::sub_581D00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x414, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x11);
	push(mv, &ts->esp, ts->ecx);
	game::sub_588350(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x40C);
	retn(mv, &ts->esp);
}

void sub_589FA0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7789FB);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x420);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0xC, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x20);
	xor_(&ts->edi, ts->edi);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, x86::mem(ts->esp + 0x20, 1), 0x0);
	mov(mv, x86::mem(ts->esp + 0x420, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x424, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x428, 1), 0x1);
	game::sub_581D00(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x89CF48);
	game::sub_5FE570(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x1);
	mov(mv, x86::mem(ts->esp + 0x440, 4), ts->edi);
	game::sub_587DB0(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x1C, 4));
	add(&ts->esp, 0xC);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	game::Iostream_init__Iostream_init_void_(ts, mv);
	mov(&ts->ebx, ts->eax);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_58A075;
    }
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x8, 4));

loc_58A041:
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	game::sub_586120(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x4, 4));
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_58A06D;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_58A06D:
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x10, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_58A041;
    }

loc_58A075:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	cmp(&ts->eflags, ts->esi, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x434, 4), 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_58A0A9;
    }

loc_58A088:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->esi, 4), ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->esi);
	game::j__free(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x14, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->esi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_58A088;
    }

loc_58A0A9:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x42C, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_7789F0:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x428, 4));
	goto sub_4DEF30;

SEH_589FA0:
	mov(&ts->eax, 0x7E407C);
	goto ___CxxFrameHandler;
}

void sub_58A0C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::std__locale___Locimp____Locimp_void_(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_58A0D8;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_58A0D8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_58A0E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	mov(mv, &ts->cl, x86::mem(0x86A450, 1));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x778A5E);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->eax, 0x1);
	test(&ts->eflags, ts->al, ts->cl);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	if (!ts->eflags.zero) {
        goto loc_58A129;
    }
	or_(mv, x86::mem(0x86A450, 4), ts->eax);
	mov(&ts->ecx, 0x86A388);
	mov(mv, x86::mem(ts->esp + 0x8, 4), 0x0);
	game::sub_586680(ts, mv);
	push(mv, &ts->esp, 0x782370);
	game::_atexit(ts, mv);
	add(&ts->esp, 0x4);

loc_58A129:
	mov(mv, &ts->ecx, x86::mem(ts->esp, 4));
	mov(&ts->eax, 0x86A388);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_778A50:
	mov(mv, &ts->eax, x86::mem(0x86A450, 4));
	and_(&ts->eax, 0xFFFFFFFE);
	mov(mv, x86::mem(0x86A450, 4), ts->eax);
	retn(mv, &ts->esp);

SEH_58A0E0:
	mov(&ts->eax, 0x7E40A0);
	goto ___CxxFrameHandler;
}

void sub_58A140(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->cl, x86::mem(0x86A474, 1));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->eax, 0x1);
	xor_(&ts->esi, ts->esi);
	test(&ts->eflags, ts->al, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_58A1A1;
    }
	mov(mv, &ts->edx, x86::mem(0x86A474, 4));
	or_(&ts->edx, ts->eax);
	push(mv, &ts->esp, 0x782360);
	mov(mv, x86::mem(0x86A474, 4), ts->edx);
	mov(mv, x86::mem(0x86A454, 4), ts->esi);
	mov(mv, x86::mem(0x86A458, 4), ts->esi);
	mov(mv, x86::mem(0x86A45C, 4), ts->esi);
	mov(mv, x86::mem(0x86A460, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(0x86A464, 4), ts->esi);
	mov(mv, x86::mem(0x86A468, 4), ts->esi);
	mov(mv, x86::mem(0x86A46C, 4), ts->esi);
	mov(mv, x86::mem(0x86A470, 4), ts->esi);
	game::_atexit(ts, mv);
	add(&ts->esp, 0x4);

loc_58A1A1:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_58A1B6;
    }
	game::sub_58A0E0(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_58A1B6;
    }
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_58A1B6:
	mov(mv, x86::mem(0x86A454, 4), ts->eax);
	mov(&ts->eax, 0x86A454);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_58A1D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebx, ts->ecx);
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x44, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_58A207;
    }
	push(mv, &ts->esp, ts->esi);
	xor_(&ts->esi, ts->esi);

loc_58A1E3:
	mov(mv, &ts->eax, x86::mem(ts->ebx + (ts->esi*4), 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_58A200;
    }
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x6, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x44, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_744530(ts, mv);
	add(&ts->esp, 0xC);

loc_58A200:
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, 0x18);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_58A1E3;
    }
	pop(mv, &ts->esp, ts->esi);

loc_58A207:
	xor_(&ts->eax, ts->eax);
	mov(&ts->edi, ts->ebx);
	mov(&ts->ecx, 0x18);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	lea(mv, &ts->edi, x86::mem(ts->ebx + 0x60, 4));
	mov(&ts->ecx, 0x6);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	lea(mv, &ts->edi, x86::mem(ts->ebx + 0x78, 4));
	mov(&ts->ecx, 0x18);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(&ts->ecx, 0x3C);
	mov(&ts->edi, 0x866650);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_58A240(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ebx + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + (ts->esi*4) - 0x18, 4));
	sub(&ts->esi, 0x6);
	push(mv, &ts->esp, ts->eax);
	game::sub_73D8C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + (ts->esi*4) + 0x78, 4));
	add(&ts->esp, 0x4);
	sub(&ts->ecx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_58A28D;
    }
	mov(mv, x86::mem(ts->esi + (ts->edi) + 0x60, 1), 0x1);
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_58A28D;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x8, 4), 0x736E6170);
	if (!ts->eflags.zero) {
        goto loc_58A28D;
    }
	push(mv, &ts->esp, ts->ebx);
	game::sub_58A0E0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_584350(ts, mv);

loc_58A28D:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_58A2A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_58A32A;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7A14F4);
	push(mv, &ts->esp, ts->eax);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_7420B0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7A14EC);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ebx, ts->eax);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_7420B0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x10, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7A14E4);
	push(mv, &ts->esp, ts->edx);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_7420B0(ts, mv);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x24, 4));
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->edi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_58A321;
    }
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->ebx + (ts->ebp) + 0x5A, 1), 0x1);
	game::sub_58A0E0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_584350(ts, mv);

loc_58A321:
	mov(mv, x86::mem(ts->ebp + (ts->ebx*4) + 0x60, 4), ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_58A32A:
	game::sub_58A0E0(ts, mv);
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_58A367;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_58A349;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	call(ts, mv, ts->ecx);
	add(&ts->esp, 0x8);

loc_58A349:
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x4C, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_58A360;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_584140(ts, mv);
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_58A360:
	mov(mv, x86::mem(ts->edi + 0x4C, 4), 0x0);

loc_58A367:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_58A370(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	sub(&ts->esp, 0x88);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x44, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_58A3A4;
    }
	push(mv, &ts->esp, 0x636F6E66);
	push(mv, &ts->esp, ts->eax);
	game::sub_744620(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->esi);
	if (!ts->eflags.zero) {
        goto loc_58A3AF;
    }

loc_58A3A4:
	or_(&ts->eax, 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_58A3AF:
	xor_(&ts->ebx, ts->ebx);

loc_58A3B1:
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x18, 1), 0x0);
	mov(&ts->ecx, 0x7);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x19, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	if (!ts->eflags.zero) {
        goto loc_58A3D6;
    }
	push(mv, &ts->esp, 0x7A1564);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	goto loc_58A424;

loc_58A3D6:
	cmp(&ts->eflags, ts->ebx, 0x1);
	if (!ts->eflags.zero) {
        goto loc_58A3E7;
    }
	push(mv, &ts->esp, 0x7A1550);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	goto loc_58A424;

loc_58A3E7:
	cmp(&ts->eflags, ts->ebx, 0x3);
	if (!ts->eflags.zero) {
        goto loc_58A3F3;
    }
	push(mv, &ts->esp, 0x7A153C);
	goto loc_58A41F;

loc_58A3F3:
	cmp(&ts->eflags, ts->ebx, 0x2);
	if (!ts->eflags.zero) {
        goto loc_58A404;
    }
	push(mv, &ts->esp, 0x7A1528);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	goto loc_58A424;

loc_58A404:
	cmp(&ts->eflags, ts->ebx, 0x4);
	if (!ts->eflags.zero) {
        goto loc_58A415;
    }
	push(mv, &ts->esp, 0x7A150C);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	goto loc_58A424;

loc_58A415:
	cmp(&ts->eflags, ts->ebx, 0x5);
	if (!ts->eflags.zero) {
        goto loc_58A42C;
    }
	push(mv, &ts->esp, 0x7A14FC);

loc_58A41F:
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->edx);

loc_58A424:
	game::sub_4400D0(ts, mv);
	add(&ts->esp, 0x8);

loc_58A42C:
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x17);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x39, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	push(mv, &ts->esp, 0x783FE5);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	push(mv, &ts->esp, 0x60);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x40, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x4C, 1), 0x0);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_742360(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x48, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_43DBB0(ts, mv);
	add(&ts->esp, 0x14);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_58A4C0;
    }
	lea(mv, &ts->edi, x86::mem(ts->ebx + (ts->ebx*4), 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x38, 4));
	lea(mv, &ts->esi, x86::mem(ts->esp + 0x38, 4));
	lea(mv, &ts->edi, x86::mem(0x866650, 4));
	mov(&ts->ebp, 0xA);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_58A490:
	cmp(mv, &ts->eflags, x86::mem(ts->esi, 1), 0x2C);
	if (ts->eflags.zero) {
        goto loc_58A4A3;
    }

loc_58A495:
	cmp(mv, &ts->eflags, x86::mem(ts->esi, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_58A4A3;
    }
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x1, 1));
	inc(&ts->esi);
	cmp(&ts->eflags, ts->cl, 0x2C);
	if (!ts->eflags.zero) {
        goto loc_58A495;
    }

loc_58A4A3:
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi, 1), 0x0);
	game::sub_43DE50(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), ts->eax);
	add(&ts->esp, 0x4);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x1, 4));
	add(&ts->edi, 0x4);
	dec(&ts->ebp);
	mov(&ts->esi, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_58A490;
    }
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x14, 4));

loc_58A4C0:
	inc(&ts->ebx);
	cmp(&ts->eflags, ts->ebx, 0x6);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_58A3B1;
    }
	pop(mv, &ts->esp, ts->edi);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_58A4E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	sub(&ts->esp, 0x200);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->esi);
	game::sub_43DBB0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_58A509;
    }
	or_(&ts->eax, 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_58A509:
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8, 1), 0x0);
	mov(&ts->ecx, 0x7F);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x9, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x7A1588);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, 0x200);
	push(mv, &ts->esp, ts->eax);
	game::sub_741A50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xC, 4));
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_58A554;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7A1580);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, 0x200);
	push(mv, &ts->esp, ts->ecx);
	game::sub_741A50(ts, mv);
	goto loc_58A56D;

loc_58A554:
	push(mv, &ts->esp, 0x80);
	push(mv, &ts->esp, 0x7A1578);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, 0x200);
	push(mv, &ts->esp, ts->edx);
	game::sub_741760(ts, mv);

loc_58A56D:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x10, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_58A0E0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x584630);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x6D657367);
	game::sub_58A0E0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_5869A0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);
}

void sub_58A5B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	sub(&ts->esp, 0x80);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8, 1), 0x0);
	mov(&ts->ecx, 0x1F);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x9, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7A1588);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, 0x80);
	push(mv, &ts->esp, ts->ecx);
	game::sub_741690(ts, mv);
	add(&ts->esi, 0xC);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x7A1580);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, 0x80);
	push(mv, &ts->esp, ts->edx);
	game::sub_741A50(ts, mv);
	push(mv, &ts->esp, 0x8010020);
	push(mv, &ts->esp, 0x7A1578);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, 0x80);
	push(mv, &ts->esp, ts->eax);
	game::sub_741760(ts, mv);
	add(&ts->esp, 0x30);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	game::sub_58A0E0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x584630);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x6D657367);
	game::sub_58A0E0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_5869A0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_58A660(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	sub(&ts->esp, 0x84);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x48, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_58A687;
    }
	or_(&ts->eax, 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0xC);

loc_58A687:
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x8, 4));
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_58A777;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ebx, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_58A777;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x10, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_58A777;
    }
	cmp(&ts->eflags, ts->eax, 0x5);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_58A777;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	mov(&ts->esi, 0x10020);
	if (!ts->eflags.zero) {
        goto loc_58A6BF;
    }
	mov(&ts->esi, 0x10010020);
	goto loc_58A6ED;

loc_58A6BF:
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_58A6CB;
    }
	mov(&ts->esi, 0x20010020);
	goto loc_58A6ED;

loc_58A6CB:
	cmp(&ts->eflags, ts->eax, 0x2);
	if (!ts->eflags.zero) {
        goto loc_58A6D7;
    }
	mov(&ts->esi, 0x40010020);
	goto loc_58A6ED;

loc_58A6D7:
	cmp(&ts->eflags, ts->eax, 0x3);
	if (!ts->eflags.zero) {
        goto loc_58A6E3;
    }
	mov(&ts->esi, 0x10060);
	goto loc_58A6ED;

loc_58A6E3:
	cmp(&ts->eflags, ts->eax, 0x4);
	if (!ts->eflags.zero) {
        goto loc_58A6ED;
    }
	mov(&ts->esi, 0x4010020);

loc_58A6ED:
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 1), 0x0);
	mov(&ts->ecx, 0x1F);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x11, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7A1588);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, 0x80);
	push(mv, &ts->esp, ts->ecx);
	game::sub_741690(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x7A1580);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, 0x80);
	push(mv, &ts->esp, ts->edx);
	game::sub_741A50(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x7A1578);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x38, 4));
	push(mv, &ts->esp, 0x80);
	push(mv, &ts->esp, ts->eax);
	game::sub_741760(ts, mv);
	add(&ts->esp, 0x30);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	game::sub_58A0E0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x584630);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x6D657367);
	game::sub_58A0E0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_5869A0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0xC);

loc_58A777:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->eax, 0xFFFFFFEC);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0xC);
}

void sub_58A790(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_58A7D9;
    }
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x48, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_58A7D9;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	cmp(&ts->eflags, ts->ecx, 0xFFFFFFFF);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	if (ts->eflags.zero) {
        goto loc_58A7C7;
    }
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x2);
	call(ts, mv, x86::mem(ts->esi + 0xC, 4));
	add(&ts->esp, 0xC);

loc_58A7C7:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_58A7D9;
    }
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x3);
	call(ts, mv, x86::mem(ts->esi + 0xC, 4));
	add(&ts->esp, 0xC);

loc_58A7D9:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_58A7E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	sub(&ts->esp, 0x304);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebx, ts->ecx);
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x48, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_58AA12;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ebx + 0x1C, 4), 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_58AA12;
    }
	mov(&ts->ecx, 0x850080);
	game::sub_5031F0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->ebx + 0x54, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_58AA12;
    }
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_58A844;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x8, 4), 0x67737461);
	if (!ts->eflags.zero) {
        goto loc_58A844;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x20, 4));
	goto loc_58A864;

loc_58A844:
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x3C, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_58A86D;
    }
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_58A850:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x8, 4), 0x67737461);
	if (ts->eflags.zero) {
        goto loc_58A861;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_58A850;
    }
	goto loc_58A86D;

loc_58A861:
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x20, 4));

loc_58A864:
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_58AA12;
    }

loc_58A86D:
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x1D8, 4));
	cmp(mv, &ts->eflags, ts->edx, x86::mem(ts->ebx + 0x134, 4));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_58AA12;
    }
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x110, 1), 0x0);
	mov(&ts->ecx, 0x7F);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x111, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	cmp(mv, &ts->eflags, x86::mem(ts->ebp + 0x10, 1), 0x1);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edx);
	if (!ts->eflags.zero) {
        goto loc_58A99B;
    }
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 1), 0x0);
	mov(&ts->ecx, 0x3F);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x11, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	mov(&ts->edi, 0x1);
	cmp(&ts->eflags, ts->edx, ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_58A92B;
    }
	lea(mv, &ts->esi, x86::mem(ts->ebx + 0x244, 4));
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_58A8D0:
	test(mv, &ts->eflags, x86::mem(ts->esi + 0x38, 4), 0x8000000);
	if (!ts->eflags.zero) {
        goto loc_58A91D;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DBB0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_58A901;
    }
	push(mv, &ts->esp, 0x7A1598);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43DDA0(ts, mv);
	add(&ts->esp, 0xC);

loc_58A901:
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_43DDA0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	add(&ts->esp, 0xC);
	dec(&ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);

loc_58A91D:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x1D8, 4));
	inc(&ts->edi);
	add(&ts->esi, 0x64);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_58A8D0;
    }

loc_58A92B:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43DBB0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_58A9A6;
    }
	lea(mv, &ts->ecx, x86::mem(ts->ebx + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x79AC28);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x118, 4));
	push(mv, &ts->esp, 0x200);
	push(mv, &ts->esp, ts->edx);
	game::sub_741A50(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7A1590);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x128, 4));
	push(mv, &ts->esp, 0x200);
	push(mv, &ts->esp, ts->ecx);
	game::sub_741A50(ts, mv);
	add(&ts->esp, 0x20);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x124, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x67736574);
	game::sub_58A0E0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_5869A0(ts, mv);
	goto loc_58A9A6;

loc_58A99B:
	mov(&ts->ecx, ts->ebx);
	game::sub_582980(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_58AA12;
    }

loc_58A9A6:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->ebx + 0x134, 4));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_58AA07;
    }
	add(&ts->ebx, 0x20);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x79AC28);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x118, 4));
	push(mv, &ts->esp, 0x200);
	push(mv, &ts->esp, ts->ecx);
	game::sub_741A50(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_58A0E0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x584630);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x124, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x67737461);
	game::sub_58A0E0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_5869A0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0xC);

loc_58AA07:
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0xC);

loc_58AA12:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	or_(&ts->eax, 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0xC);
}

void sub_58AA20(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	sub(&ts->esp, 0x80);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x48, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_58AA90;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x1C, 4), 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_58AA90;
    }
	mov(&ts->ecx, 0x850080);
	game::sub_5031F0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_58AA90;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x130, 4));
	test(&ts->eflags, ts->ah, 0x10);
	if (!ts->eflags.zero) {
        goto loc_58AA90;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1D8, 4));
	mov(&ts->eax, 0x1);
	cmp(&ts->eflags, ts->edx, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_58AA90;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x27C, 4));
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_58AA80:
	test(mv, &ts->eflags, x86::mem(ts->ecx, 4), 0x8000000);
	if (!ts->eflags.zero) {
        goto loc_58AA9B;
    }
	inc(&ts->eax);
	add(&ts->ecx, 0x64);
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_58AA80;
    }

loc_58AA90:
	or_(&ts->eax, 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x8);

loc_58AA9B:
	mov(mv, x86::mem(ts->esp + 0x8, 1), 0x0);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x1F);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x9, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x79AC28);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, 0x80);
	push(mv, &ts->esp, ts->edx);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	game::sub_741A50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x130, 4));
	or_(&ts->eax, 0x1000);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7A15A8);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, 0x80);
	push(mv, &ts->esp, ts->ecx);
	game::sub_741690(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x218, 4));
	or_(&ts->edx, 0x8000000);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x7A159C);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, 0x80);
	push(mv, &ts->esp, ts->eax);
	game::sub_741690(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x8, 4));
	add(&ts->esp, 0x30);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_58A0E0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x584630);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x67736574);
	game::sub_58A0E0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_5869A0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x8);
}

void sub_58AB40(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	sub(&ts->esp, 0x80);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x48, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_58AC3C;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x1C, 4), 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_58AC3C;
    }
	mov(&ts->ecx, 0x850080);
	game::sub_5031F0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_58AC3C;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x130, 4));
	test(&ts->eflags, ts->ah, 0x10);
	if (ts->eflags.zero) {
        goto loc_58AC3C;
    }
	mov(mv, x86::mem(ts->esp + 0x8, 1), 0x0);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x1F);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x9, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x79AC28);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, 0x80);
	push(mv, &ts->esp, ts->edx);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	game::sub_741A50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x130, 4));
	and_(&ts->eax, 0xFFFFEFFF);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7A15A8);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, 0x80);
	push(mv, &ts->esp, ts->ecx);
	game::sub_741690(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x218, 4));
	and_(&ts->edx, 0xF7FFFFFF);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x7A159C);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, 0x80);
	push(mv, &ts->esp, ts->eax);
	game::sub_741690(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x8, 4));
	add(&ts->esp, 0x30);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_58A0E0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x584630);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x67736574);
	game::sub_58A0E0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_5869A0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x8);

loc_58AC3C:
	pop(mv, &ts->esp, ts->edi);
	or_(&ts->eax, 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x8);
}

void sub_58AC50(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	sub(&ts->esp, 0x84);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebx, ts->ecx);
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x48, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_58AD05;
    }
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x8, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_58AD05;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_58AD05;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x1C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_58AD05;
    }
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 1), 0x0);
	mov(&ts->ecx, 0x1F);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x11, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	add(&ts->ebx, 0x20);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x79AC28);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, 0x80);
	push(mv, &ts->esp, ts->eax);
	game::sub_741A50(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x7A1590);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, 0x80);
	push(mv, &ts->esp, ts->ecx);
	game::sub_741A50(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xC, 4));
	add(&ts->esp, 0x20);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_58A0E0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x584630);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x67736574);
	game::sub_58A0E0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_5869A0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0xC);

loc_58AD05:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	or_(&ts->eax, 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0xC);
}

void sub_58AD20(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	sub(&ts->esp, 0x84);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebx, ts->ecx);
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x48, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_58AE22;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x1C, 4));
	xor_(&ts->esi, ts->esi);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_58AE22;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ebx + 0x1D8, 4), ts->esi);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_58AD96;
    }
	lea(mv, &ts->edi, x86::mem(ts->ebx + 0x1E0, 4));

loc_58AD60:
	mov(&ts->ecx, 0x850080);
	game::sub_5031F0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_58AD88;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x1D8, 4));
	inc(&ts->esi);
	add(&ts->edi, 0x64);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_58AD60;
    }
	goto loc_58AD96;

loc_58AD88:
	imul(&ts->esi, ts->esi, 0x64);
	mov(mv, &ts->eax, x86::mem(ts->esi + (ts->ebx) + 0x218, 4));
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);

loc_58AD96:
	cmp(mv, &ts->eflags, x86::mem(ts->ebp + 0x8, 1), 0x1);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	if (!ts->eflags.zero) {
        goto loc_58ADA7;
    }
	or_(&ts->eax, 0x8000000);
	goto loc_58ADAC;

loc_58ADA7:
	and_(&ts->eax, 0xF7FFFFFF);

loc_58ADAC:
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 1), 0x0);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x1F);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x11, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	add(&ts->ebx, 0x20);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x79AC28);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, 0x80);
	push(mv, &ts->esp, ts->ecx);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	game::sub_741A50(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x7A159C);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, 0x80);
	push(mv, &ts->esp, ts->eax);
	game::sub_741690(ts, mv);
	add(&ts->esp, 0x20);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x67736574);
	game::sub_58A0E0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_5869A0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_58AE22:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	or_(&ts->eax, 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_58AE30(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x48, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_58AE45;
    }
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_58AE45:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_58AE63;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1C, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	xor_(&ts->ecx, ts->ecx);
	cmp(&ts->eflags, ts->edx, 0xFFFFFFFF);
	setz(ts->eflags, &ts->cl);
	pop(mv, &ts->esp, ts->esi);
	dec(&ts->ecx);
	and_(&ts->eax, ts->ecx);
	retn(mv, &ts->esp, 0x4);

loc_58AE63:
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x4);
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x44, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_7445E0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_73D810(ts, mv);
	add(&ts->esp, 0x14);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_58AE90(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_58AE9C;
    }
	lea(mv, &ts->edi, x86::mem(ts->ecx + 0x1C, 4));

loc_58AE9C:
	cmp(mv, &ts->eflags, x86::mem(ts->edi, 4), 0x0);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_58AEA7;
    }
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp, 0x8);

loc_58AEA7:
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xC, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_58AF01;
    }
	cmp(mv, &ts->eflags, ts->esi, x86::mem(ts->edi + 0x1BC, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_58AF01;
    }
	push(mv, &ts->esp, 0x73656C66);
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x44, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_744620(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_58AF01;
    }
	add(&ts->eax, 0x398);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, ts->ecx);
	game::sub_742E30(ts, mv);
	imul(&ts->esi, ts->esi, 0x64);
	mov(mv, &ts->ecx, x86::mem(ts->esi + (ts->edi) + 0x1D4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	add(&ts->esp, 0xC);
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->edx, ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	setz(ts->eflags, &ts->al);
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp, 0x8);

loc_58AF01:
	pop(mv, &ts->esp, ts->esi);
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp, 0x8);
}

void sub_58AF10(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x14);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_58AFD7;
    }
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x24, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_58AFD7;
    }
	cmp(mv, &ts->eflags, ts->edi, x86::mem(ts->esi + 0x1D8, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_58AFD7;
    }
	mov(&ts->eax, ts->edi);
	imul(&ts->eax, ts->eax, 0x64);
	mov(&ts->ecx, 0x850080);
	lea(mv, &ts->ebx, x86::mem(ts->eax + (ts->esi), 4));
	game::sub_5031F0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->ebx + 0x1E0, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_58AF6A;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x14);
	retn(mv, &ts->esp, 0xC);

loc_58AF6A:
	xor_(&ts->edx, ts->edx);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->edx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->edx);
	game::sub_58AE90(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_58AF97;
    }
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x5, 4));
	imul(&ts->eax, ts->eax, 0x64);
	add(&ts->eax, ts->esi);
	goto loc_58AF9D;

loc_58AF97:
	lea(mv, &ts->eax, x86::mem(ts->ebx + 0x1F0, 4));

loc_58AF9D:
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_742E60(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x34, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x30, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x98, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_74B1F0(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x14);
	retn(mv, &ts->esp, 0xC);

loc_58AFD7:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	or_(&ts->eax, 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x14);
	retn(mv, &ts->esp, 0xC);
}

void sub_58AFF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_73D8D0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x500, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_58B06C;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	if (ts->eflags.zero) {
        goto loc_58B04E;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x1C, 4), 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_58B040;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x10, 4));
	push(mv, &ts->esp, 0xFFFFFFFE);
	push(mv, &ts->esp, 0x7A15B4);
	push(mv, &ts->esp, ts->ecx);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_7420B0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_58B06B;
    }

loc_58B040:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x3);
	call(ts, mv, x86::mem(ts->esi + 0xC, 4));
	add(&ts->esp, 0xC);

loc_58B04E:
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_58B06B;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x8, 4), 0x67736561);
	if (!ts->eflags.zero) {
        goto loc_58B06B;
    }
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->eax);
	game::sub_584350(ts, mv);

loc_58B06B:
	pop(mv, &ts->esp, ts->edi);

loc_58B06C:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_58B070(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_58B229;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x10, 4));
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	add(&ts->esi, 0x1C);
	push(mv, &ts->esp, ts->esi);
	game::sub_7449F0(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->ecx, 0x850080);
	game::sub_5031F0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x38, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_58B21F;
    }
	mov(mv, &ts->dl, x86::mem(ts->esi + 0x110, 1));
	and_(&ts->dl, 0x1);
	mov(mv, x86::mem(0x85009A, 1), ts->dl);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x110, 4));
	shr(&ts->eax, 0x1);
	and_(&ts->al, 0x1);
	mov(mv, x86::mem(0x850099, 1), ts->al);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	shr(&ts->ecx, 0x12);
	and_(&ts->cl, 0x1);
	mov(mv, x86::mem(0x850098, 1), ts->cl);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x110, 4));
	test(&ts->eflags, ts->eax, 0x4000000);
	mov(&ts->edi, 0x8);
	if (ts->eflags.zero) {
        goto loc_58B103;
    }
	mov(mv, x86::mem(0x850088, 4), 0x0);
	goto loc_58B16C;

loc_58B103:
	test(&ts->eflags, ts->eax, 0x8000000);
	if (ts->eflags.zero) {
        goto loc_58B116;
    }
	mov(mv, x86::mem(0x850088, 4), 0x1);
	goto loc_58B16C;

loc_58B116:
	test(&ts->eflags, ts->eax, 0x2000000);
	if (ts->eflags.zero) {
        goto loc_58B125;
    }
	mov(mv, x86::mem(0x850088, 4), ts->edi);
	goto loc_58B16C;

loc_58B125:
	test(&ts->eflags, ts->eax, 0x10000000);
	if (ts->eflags.zero) {
        goto loc_58B138;
    }
	mov(mv, x86::mem(0x850088, 4), 0x2);
	goto loc_58B16C;

loc_58B138:
	test(&ts->eflags, ts->eax, 0x20000000);
	if (ts->eflags.zero) {
        goto loc_58B14B;
    }
	mov(mv, x86::mem(0x850088, 4), 0x3);
	goto loc_58B16C;

loc_58B14B:
	test(&ts->eflags, ts->eax, 0x40000000);
	if (ts->eflags.zero) {
        goto loc_58B15E;
    }
	mov(mv, x86::mem(0x850088, 4), 0xA);
	goto loc_58B16C;

loc_58B15E:
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.sign) {
        goto loc_58B16C;
    }
	mov(mv, x86::mem(0x850088, 4), 0x4);

loc_58B16C:
	push(mv, &ts->esp, 0x0);
	add(&ts->esi, 0x8C);
	push(mv, &ts->esp, 0x795FE0);
	push(mv, &ts->esp, ts->esi);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_7420B0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7A15CC);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x8500B8, 2), ts->ax);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_7420B0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7A15C4);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x8500BC, 4), ts->eax);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_7420B0(ts, mv);
	mov(mv, x86::mem(0x8500BA, 2), ts->ax);
	mov(mv, &ts->eax, x86::mem(0x850088, 4));
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_58B213;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7A15C0);
	push(mv, &ts->esp, ts->esi);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_7420B0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7A15BC);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x850090, 4), ts->eax);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_7420B0(ts, mv);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(0x850094, 4), ts->eax);

loc_58B213:
	mov(mv, x86::mem(0x86676C, 4), 0x0);
	goto loc_58B229;

loc_58B21F:
	mov(mv, x86::mem(0x86676C, 4), 0x1);

loc_58B229:
	game::sub_58A0E0(ts, mv);
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_58B266;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_58B248;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x1C, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ebx);
	call(ts, mv, ts->ecx);
	add(&ts->esp, 0x8);

loc_58B248:
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x4C, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_58B25F;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_584140(ts, mv);
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_58B25F:
	mov(mv, x86::mem(ts->edi + 0x4C, 4), 0x0);

loc_58B266:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_58B270(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_58B284;
    }
	cmp(&ts->eflags, ts->eax, 0x7567616D);
	if (!ts->eflags.zero) {
        goto loc_58B29C;
    }

loc_58B284:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	add(&ts->edx, 0x1C);
	mov(&ts->ecx, 0x138);
	xor_(&ts->eax, ts->eax);
	mov(&ts->edi, ts->edx);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, x86::mem(ts->edx, 4), 0xFFFFFFFF);

loc_58B29C:
	game::sub_58A0E0(ts, mv);
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_58B2D9;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_58B2BB;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	call(ts, mv, ts->ecx);
	add(&ts->esp, 0x8);

loc_58B2BB:
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x4C, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_58B2D2;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_584140(ts, mv);
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_58B2D2:
	mov(mv, x86::mem(ts->edi + 0x4C, 4), 0x0);

loc_58B2D9:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_58B2E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_58B341;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x10, 4));
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7A15D0);
	push(mv, &ts->esp, ts->eax);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_7420B0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x500, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_58B327;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x3);
	call(ts, mv, ts->eax);
	add(&ts->esp, 0xC);

loc_58B327:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x500, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_58B380;
    }
	push(mv, &ts->esp, ts->ebx);
	game::sub_58A0E0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_584350(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_58B341:
	push(mv, &ts->esp, ts->edi);
	game::sub_58A0E0(ts, mv);
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_58B37F;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_58B361;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x1C, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ebx);
	call(ts, mv, ts->ecx);
	add(&ts->esp, 0x8);

loc_58B361:
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x4C, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_58B378;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_584140(ts, mv);
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_58B378:
	mov(mv, x86::mem(ts->edi + 0x4C, 4), 0x0);

loc_58B37F:
	pop(mv, &ts->esp, ts->edi);

loc_58B380:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_58B390(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	sub(&ts->esp, 0x2AC);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ebx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0xB8, 1), 0x0);
	mov(&ts->ecx, 0x7F);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0xB9, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0x636E636C);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_58B7EC;
    }
	if (ts->eflags.zero) {
        goto loc_58B762;
    }
	cmp(&ts->eflags, ts->eax, 0x62757379);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_58B4FB;
    }
	if (ts->eflags.zero) {
        goto loc_58B4A6;
    }
	cmp(&ts->eflags, ts->eax, 0x61637074);
	if (ts->eflags.zero) {
        goto loc_58B44B;
    }
	cmp(&ts->eflags, ts->eax, 0x626C636B);
	if (!ts->eflags.zero) {
        goto loc_58B936;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, 0x7A15E8);
	push(mv, &ts->esp, 0x200);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC0, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x79AC28);
	push(mv, &ts->esp, ts->ecx);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_742360(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xEDB87A03);
	game::sub_55DDE0(ts, mv);
	add(&ts->esp, 0x18);
	mov(mv, x86::mem(0x836378, 4), 0x0);
	mov(mv, x86::mem(0x83637C, 4), 0x1);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_58B44B:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, 0x7A15E8);
	push(mv, &ts->esp, 0x200);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xC0, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x79AC28);
	push(mv, &ts->esp, ts->eax);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_742360(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x836378, 4));
	mov(&ts->esi, 0x1);
	add(&ts->esp, 0x10);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_58B497;
    }
	push(mv, &ts->esp, 0x7979B0);
	push(mv, &ts->esp, 0x7C1BB77F);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);

loc_58B497:
	mov(mv, x86::mem(0x83637C, 4), ts->esi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_58B4A6:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, 0x7A15E8);
	push(mv, &ts->esp, 0x200);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC0, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x79AC28);
	push(mv, &ts->esp, ts->edx);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_742360(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xF5717B72);
	mov(mv, x86::mem(0x836378, 4), 0x0);
	mov(mv, x86::mem(0x83637C, 4), 0x1);
	game::sub_55DDE0(ts, mv);
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_58B4FB:
	cmp(&ts->eflags, ts->eax, 0x6368616C);
	if (!ts->eflags.zero) {
        goto loc_58B936;
    }
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x38, 1), 0x0);
	mov(&ts->ecx, 0x1F);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x39, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	push(mv, &ts->esp, 0x785078);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	push(mv, &ts->esp, 0x200);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC0, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7A15E0);
	push(mv, &ts->esp, ts->ecx);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_742360(ts, mv);
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x7A15D8);
	push(mv, &ts->esp, 0x80);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x40, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC4, 4));
	push(mv, &ts->esp, 0x79D53C);
	push(mv, &ts->esp, ts->eax);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_742360(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x48, 4));
	push(mv, &ts->esp, 0x7A15D8);
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x18);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_58B936;
    }
	mov(&ts->ecx, ts->ebx);
	game::sub_582CE0(ts, mv);
	push(mv, &ts->esp, 0x7A15E8);
	push(mv, &ts->esp, 0x80);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x40, 4));
	mov(&ts->esi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x79AC28);
	push(mv, &ts->esp, ts->ecx);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_742360(ts, mv);
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x2);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x3C, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->ebx);
	game::sub_582EB0(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x38, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	game::sub_582BB0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_73EAE0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_58B604;
    }
	game::sub_582B60(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x108, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_73E350(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_58B604:
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x8, 4));
	imul(&ts->esi, ts->esi, 0xC1);
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x10, 4));
	push(mv, &ts->esp, 0x7A15E8);
	add(&ts->esi, ts->ebx);
	push(mv, &ts->esp, 0x20);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x131, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x79AC28);
	push(mv, &ts->esp, ts->eax);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_742360(ts, mv);
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x79D548);
	push(mv, &ts->esp, 0x80);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x151, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xC4, 4));
	push(mv, &ts->esp, 0x79D53C);
	push(mv, &ts->esp, ts->edx);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_742360(ts, mv);
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0x14);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC4, 4));
	push(mv, &ts->esp, 0x7903E0);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x24, 1), 0x0);
	mov(mv, x86::mem(ts->esp + 0x38, 1), 0x0);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_742360(ts, mv);
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0x14);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC4, 4));
	push(mv, &ts->esp, 0x7903EC);
	push(mv, &ts->esp, ts->eax);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_742360(ts, mv);
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x73656C66);
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x44, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_744620(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->edx);
	add(&ts->eax, 0x398);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->eax, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	if (ts->eflags.zero) {
        goto loc_58B6F6;
    }
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));

loc_58B6F6:
	push(mv, &ts->esp, ts->eax);
	add(&ts->esi, 0x111);
	push(mv, &ts->esp, ts->esi);
	game::sub_43DBD0(ts, mv);
	push(mv, &ts->esp, 0x7902A0);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_58B71E;
    }
	push(mv, &ts->esp, 0x55);
	game::sub_50D180(ts, mv);
	add(&ts->esp, 0x4);

loc_58B71E:
	mov(&ts->esi, 0x1);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x2);
	game::sub_50CEE0(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x9757A0C0);
	game::sub_55DDE0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0xF8, 4));
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_740790(ts, mv);
	add(&ts->esp, 0x1C);
	mov(mv, x86::mem(0x83637C, 4), ts->esi);
	mov(mv, x86::mem(0x836378, 4), 0x2);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_58B762:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, 0x7A15E8);
	push(mv, &ts->esp, 0x200);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC0, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x79AC28);
	push(mv, &ts->esp, ts->edx);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_742360(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	game::sub_582D00(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_58B7C1;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebx);
	game::sub_582D40(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x519201F5);
	game::sub_55DDE0(ts, mv);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(0x836378, 4), 0x0);

loc_58B7C1:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x2);
	mov(mv, x86::mem(0x83637C, 4), 0x1);
	game::sub_50CEE0(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x9757A0C0);
	game::sub_55DDE0(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_58B7EC:
	cmp(&ts->eflags, ts->eax, 0x706C6179);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_58B8CD;
    }
	if (ts->eflags.zero) {
        goto loc_58B8AD;
    }
	cmp(&ts->eflags, ts->eax, 0x6465636C);
	if (ts->eflags.zero) {
        goto loc_58B84E;
    }
	cmp(&ts->eflags, ts->eax, 0x6D657367);
	if (!ts->eflags.zero) {
        goto loc_58B936;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, 0x7A15E8);
	push(mv, &ts->esp, 0x200);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xC0, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x79AC28);
	push(mv, &ts->esp, ts->eax);

loc_58B82A:
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_742360(ts, mv);
	add(&ts->esp, 0x10);
	mov(mv, x86::mem(0x83637C, 4), 0x1);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_58B84E:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, 0x7A15E8);
	push(mv, &ts->esp, 0x200);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC0, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x79AC28);
	push(mv, &ts->esp, ts->edx);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_742360(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x836378, 4));
	mov(&ts->esi, 0x1);
	add(&ts->esp, 0x10);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_58B497;
    }
	push(mv, &ts->esp, 0x7979B0);
	push(mv, &ts->esp, 0x39992A2C);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(0x83637C, 4), ts->esi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_58B8AD:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, 0x7A15E8);
	push(mv, &ts->esp, 0x200);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC0, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x79AC28);
	push(mv, &ts->esp, ts->ecx);
	goto loc_58B82A;

loc_58B8CD:
	cmp(&ts->eflags, ts->eax, 0x74696D65);
	if (!ts->eflags.zero) {
        goto loc_58B936;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, 0x7A15E8);
	push(mv, &ts->esp, 0x200);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xC0, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x79AC28);
	push(mv, &ts->esp, ts->eax);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_742360(ts, mv);
	xor_(&ts->esi, ts->esi);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x72170696);
	mov(mv, x86::mem(0x836378, 4), ts->esi);
	mov(mv, x86::mem(0x83637C, 4), 0x1);
	mov(mv, x86::mem(0x8667DC, 4), ts->esi);
	game::sub_55DDE0(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x2);
	game::sub_50CEE0(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x9757A0C0);
	game::sub_55DDE0(ts, mv);
	add(&ts->esp, 0x28);

loc_58B936:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_58B940(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->cl, x86::mem(0x86A48C, 1));
	mov(&ts->eax, 0x1);
	test(&ts->eflags, ts->al, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_58B97B;
    }
	mov(mv, &ts->edx, x86::mem(0x86A48C, 4));
	or_(&ts->edx, ts->eax);
	push(mv, &ts->esp, 0x7822D0);
	mov(mv, x86::mem(0x86A48C, 4), ts->edx);
	mov(mv, x86::mem(0x86A478, 4), 0x0);
	mov(mv, x86::mem(0x86A47C, 1), 0x0);
	game::_atexit(ts, mv);
	add(&ts->esp, 0x4);

loc_58B97B:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_58B98D;
    }
	game::sub_58A0E0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_58B98D;
    }
	retn(mv, &ts->esp);

loc_58B98D:
	mov(mv, x86::mem(0x86A478, 4), ts->eax);
	mov(&ts->eax, 0x86A478);
	retn(mv, &ts->esp);
}

void sub_58B9A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	mov(mv, &ts->cl, x86::mem(0x86A5E4, 1));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x778A7E);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->eax, 0x1);
	test(&ts->eflags, ts->al, ts->cl);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	if (!ts->eflags.zero) {
        goto loc_58B9E9;
    }
	or_(mv, x86::mem(0x86A5E4, 4), ts->eax);
	mov(&ts->ecx, 0x86A490);
	mov(mv, x86::mem(ts->esp + 0x8, 4), 0x0);
	game::sub_586700(ts, mv);
	push(mv, &ts->esp, 0x782380);
	game::_atexit(ts, mv);
	add(&ts->esp, 0x4);

loc_58B9E9:
	mov(mv, &ts->ecx, x86::mem(ts->esp, 4));
	mov(&ts->eax, 0x86A490);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_778A70:
	mov(mv, &ts->eax, x86::mem(0x86A5E4, 4));
	and_(&ts->eax, 0xFFFFFFFE);
	mov(mv, x86::mem(0x86A5E4, 4), ts->eax);
	retn(mv, &ts->esp);

SEH_58B9A0:
	mov(&ts->eax, 0x7E40C4);
	goto ___CxxFrameHandler;
}

void sub_58BA00(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	sub(&ts->esp, 0x450);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x48, 1));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->cl, ts->bl);
	if (!ts->eflags.zero) {
        goto loc_58BA25;
    }
	pop(mv, &ts->esp, ts->edi);
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0xC);

loc_58BA25:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x850080);
	game::sub_5031F0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_58BA8B;
    }
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0xC, 4));
	xor_(&ts->esi, ts->esi);

loc_58BA46:
	lea(mv, &ts->ecx, x86::mem(ts->ebp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x85AD40);
	mov(mv, x86::mem(ts->ebp + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->ebp + 0xC, 4), ts->ebx);
	game::sub_513160(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->ebp + 0xC, 4));
	setz(ts->eflags, &ts->cl);
	mov(mv, x86::mem(ts->esi + (ts->edi), 1), ts->cl);
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, 0x7);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_58BA46;
    }
	mov(&ts->ecx, 0x85AD40);
	game::sub_513880(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x10, 4));
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->edx, 1), ts->al);
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0xC);

loc_58BA8B:
	mov(mv, &ts->esi, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	mov(&ts->edi, ts->eax);
	cmp(&ts->eflags, ts->esi, ts->edi);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_58BB06;
    }
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_58BAA0:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_58BB00;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x3B8, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_58BB00;
    }
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x24, 1), ts->bl);
	mov(&ts->ecx, 0x7);
	lea(mv, &ts->edi, x86::mem(ts->ebp - 0x23, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	push(mv, &ts->esp, 0x783FE5);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	push(mv, &ts->esp, 0x20);
	lea(mv, &ts->edx, x86::mem(ts->ebp - 0x24, 4));
	push(mv, &ts->esp, ts->edx);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x134, 4));
	push(mv, &ts->esp, 0x7A1104);
	push(mv, &ts->esp, ts->eax);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_742360(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->ebp - 0x24, 1));
	add(&ts->esp, 0x10);
	cmp(&ts->eflags, ts->al, ts->bl);
	if (!ts->eflags.zero) {
        goto loc_58BB11;
    }
	mov(mv, &ts->edi, x86::mem(ts->ebp - 0x4, 4));

loc_58BB00:
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_58BAA0;
    }

loc_58BB06:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->edi);
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0xC);

loc_58BB11:
	push(mv, &ts->esp, 0x20);
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x44, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->ebp - 0x24, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_43DBB0(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->ebp - 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_576260(ts, mv);
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x44, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x450, 4));
	mov(mv, x86::mem(ts->ebp - 0x450, 1), ts->bl);
	mov(mv, x86::mem(ts->ebp - 0x50, 4), ts->ebx);
	mov(mv, x86::mem(ts->ebp - 0x4C, 4), ts->ebx);
	mov(mv, x86::mem(ts->ebp - 0x48, 1), 0x1);
	game::sub_5840C0(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0xC, 4));
	xor_(&ts->esi, ts->esi);

loc_58BB55:
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x450, 4));
	mov(mv, x86::mem(ts->ebp + 0x8, 4), ts->ebx);
	game::sub_581D90(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(ts->ebp + 0x8, 4), 0x1);
	setz(ts->eflags, &ts->al);
	mov(mv, x86::mem(ts->esi + (ts->edi), 1), ts->al);
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, 0x7);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_58BB55;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x450, 4));
	mov(mv, x86::mem(ts->ebp + 0x8, 4), ts->ebx);
	game::sub_581D90(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(ts->ebp + 0x8, 4), 0x1);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x10, 4));
	pop(mv, &ts->esp, ts->esi);
	setz(ts->eflags, &ts->dl);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->eax, 1), ts->dl);
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0xC);
}

void sub_58BBB0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	sub(&ts->esp, 0x84);
	push(mv, &ts->esp, ts->edi);
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x48, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_58BBD3;
    }
	or_(&ts->eax, 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_58BBD3:
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8, 1), 0x0);
	mov(&ts->ecx, 0x1F);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x9, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7A13E8);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, 0x80);
	push(mv, &ts->esp, ts->ecx);
	game::sub_741A50(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x10, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_58A0E0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x584630);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x75736572);
	game::sub_58A0E0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_5869A0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);
}

void sub_58BC40(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_58A0E0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_586850(ts, mv);
	retn(mv, &ts->esp, 0x4);
}

void sub_58BC60(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x40);
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x48, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_58BD2A;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x44, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_58BD2A;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->edx, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_58BD2A;
    }
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x4, 1), 0x0);
	mov(&ts->ecx, 0xF);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x5, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x7A13E8);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, 0x40);
	push(mv, &ts->esp, ts->eax);
	game::sub_741A50(ts, mv);
	game::sub_570A30(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->eax*4), 4));
	mov(mv, &ts->edx, x86::mem(0x7FA744, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x7A1398);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, 0x40);
	push(mv, &ts->esp, ts->eax);
	game::sub_741A50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x6C, 4));
	add(&ts->esp, 0x20);
	test(&ts->eflags, ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_58BCF7;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_58BCF7;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7A15F0);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, 0x40);
	push(mv, &ts->esp, ts->ecx);
	game::sub_741A50(ts, mv);
	add(&ts->esp, 0x10);

loc_58BCF7:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x50, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_58A0E0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x584630);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x72657074);
	game::sub_58A0E0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_5869A0(ts, mv);
	add(&ts->esp, 0x40);
	retn(mv, &ts->esp, 0x10);

loc_58BD2A:
	or_(&ts->eax, 0xFFFFFFFF);
	add(&ts->esp, 0x40);
	retn(mv, &ts->esp, 0x10);
}

void sub_58BD40(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->edi);
	game::sub_58A0E0(ts, mv);
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_58BD84;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_58BD64;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x1C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	call(ts, mv, ts->ecx);
	add(&ts->esp, 0x8);

loc_58BD64:
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x4C, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_58BD7C;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_584140(ts, mv);
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_58BD7C:
	mov(mv, x86::mem(ts->edi + 0x4C, 4), 0x0);
	pop(mv, &ts->esp, ts->esi);

loc_58BD84:
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp);
}

void sub_58BD90(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_58BE2F;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x10, 4));
	xor_(&ts->eax, ts->eax);
	push(mv, &ts->esp, 0x783FE5);
	mov(mv, x86::mem(ts->esp + 0x11, 4), ts->eax);
	push(mv, &ts->esp, 0x10);
	mov(mv, x86::mem(ts->esp + 0x19, 4), ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x21, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x25, 2), ts->ax);
	push(mv, &ts->esp, 0x7A15F8);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x20, 1), 0x0);
	mov(mv, x86::mem(ts->esp + 0x2F, 1), ts->al);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_742360(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x38, 4));
	mov(mv, &ts->esi, x86::mem(ts->ecx, 4));
	add(&ts->esp, 0x10);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	mov(&ts->edi, ts->eax);
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_58BE2F;
    }

loc_58BDF8:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_58BE15;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_58BDF8;
    }
	goto loc_58BE2F;

loc_58BE15:
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_745250(ts, mv);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->esi + 0x3B8, 4), 0x0);

loc_58BE2F:
	game::sub_58A0E0(ts, mv);
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_58BE6C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_58BE4E;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x1C, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ebp);
	call(ts, mv, ts->ecx);
	add(&ts->esp, 0x8);

loc_58BE4E:
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x4C, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_58BE65;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_584140(ts, mv);
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_58BE65:
	mov(mv, x86::mem(ts->edi + 0x4C, 4), 0x0);

loc_58BE6C:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_58BE80(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_58BEA5;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x10, 4));
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	game::sub_5874E0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x14C, 1), 0x1);

loc_58BEA5:
	game::sub_58A0E0(ts, mv);
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_58BEE2;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_58BEC4;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x1C, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ebx);
	call(ts, mv, ts->ecx);
	add(&ts->esp, 0x8);

loc_58BEC4:
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x4C, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_58BEDB;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_584140(ts, mv);
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_58BEDB:
	mov(mv, x86::mem(ts->edi + 0x4C, 4), 0x0);

loc_58BEE2:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_58BEF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->al, x86::mem(0x8669F8, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_58BFAC;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_587830(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7A0E48, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	mov(mv, &ts->esi, x86::mem(0x8651AC, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_58BF6D;
    }
	mov(mv, &ts->ecx, x86::mem(0x869238, 4));
	mov(&ts->eax, ts->esi);
	sub(&ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784D28, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784550, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7A0E48, 4));
	fcompp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.parity) {
        goto loc_58BF6D;
    }
	push(mv, &ts->esp, 0x8);
	game::sub_587D50(ts, mv);
	mov(mv, &ts->esi, x86::mem(0x8651AC, 4));
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(0x869238, 4), ts->esi);

loc_58BF6D:
	sub(mv, &ts->esi, x86::mem(0x869468, 4));
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784D28, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	pop(mv, &ts->esp, ts->esi);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7A0E4C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784550, 4));
	fcompp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.parity) {
        goto loc_58BFAC;
    }
	add(&ts->esp, 0x4);
	goto loc_589080;

loc_58BFAC:
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_589080:
	mov(mv, &ts->eax, x86::mem(0x7FBE64, 4));
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_5890A1;
    }
	mov(mv, &ts->eax, x86::mem(0x86675C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5890AE;
    }
	call(ts, mv, ts->eax);
	mov(mv, x86::mem(0x8669F8, 1), 0x0);
	goto sub_588FB0;

loc_5890A1:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x89CF48);
	game::sub_6099C0(ts, mv);

loc_5890AE:
	mov(mv, x86::mem(0x8669F8, 1), 0x0);
	goto sub_588FB0;
}

void sub_58BFB0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, 0x20);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	game::sub_581D90(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	game::sub_5890E0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_58BFE0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x410);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x41C, 4));
	push(mv, &ts->esp, 0x20);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	xor_(&ts->ebx, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	game::sub_581D90(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, 0x20);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(0x7FBE58, 4), ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	game::sub_581D90(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, 0x20);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(0x7FBE5C, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	game::sub_581D90(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(0x7FBE5C, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x89CF48);
	mov(mv, x86::mem(0x7FBE64, 4), ts->eax);
	game::sub_601D20(ts, mv);
	game::sub_589310(ts, mv);
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0xC);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(0x8669F4, 4), 0x3);
	mov(mv, x86::mem(ts->esp + 0x14, 1), ts->bl);
	mov(mv, x86::mem(ts->esp + 0x414, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x418, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x41C, 1), 0x1);
	game::sub_581D00(ts, mv);
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, 0x3);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	game::sub_581D00(ts, mv);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xC);
	game::sub_585D50(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x410);
	retn(mv, &ts->esp);
}

void sub_58C0C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(0x86A5F0, 1));
	sub(&ts->esp, 0x410);
	test(&ts->eflags, ts->al, 0x1);
	if (!ts->eflags.zero) {
        goto loc_58C0FA;
    }
	mov(mv, &ts->edx, x86::mem(0x86A5F0, 4));
	mov(&ts->eax, 0x86A5E8);
	or_(&ts->edx, 0x1);
	push(mv, &ts->esp, 0x782390);
	mov(mv, x86::mem(0x86A5F0, 4), ts->edx);
	mov(mv, x86::mem(0x86A5E8, 4), ts->eax);
	mov(mv, x86::mem(0x86A5EC, 4), ts->eax);
	game::_atexit(ts, mv);
	add(&ts->esp, 0x4);

loc_58C0FA:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x414, 4));
	push(mv, &ts->esp, 0x86A5E8);
	push(mv, &ts->esp, ts->eax);
	game::sub_585E80(ts, mv);
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->al, 0x1);
	if (!ts->eflags.zero) {
        goto loc_58C16A;
    }
	push(mv, &ts->esp, ts->ebx);
	xor_(&ts->ebx, ts->ebx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, 0x86A5E8);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x10, 1), ts->bl);
	mov(mv, x86::mem(ts->esp + 0x410, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x414, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x418, 1), ts->al);
	game::sub_588010(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x20);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ebx);
	game::sub_581D90(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x89CF48);
	game::sub_601EB0(ts, mv);
	pop(mv, &ts->esp, ts->ebx);

loc_58C16A:
	add(&ts->esp, 0x410);
	retn(mv, &ts->esp);
}

void sub_58C180(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(0x86A5FC, 1));
	sub(&ts->esp, 0x40C);
	test(&ts->eflags, ts->al, 0x1);
	if (!ts->eflags.zero) {
        goto loc_58C1BA;
    }
	mov(mv, &ts->edx, x86::mem(0x86A5FC, 4));
	mov(&ts->eax, 0x86A5F4);
	or_(&ts->edx, 0x1);
	push(mv, &ts->esp, 0x7823A0);
	mov(mv, x86::mem(0x86A5FC, 4), ts->edx);
	mov(mv, x86::mem(0x86A5F4, 4), ts->eax);
	mov(mv, x86::mem(0x86A5F8, 4), ts->eax);
	game::_atexit(ts, mv);
	add(&ts->esp, 0x4);

loc_58C1BA:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x410, 4));
	push(mv, &ts->esp, 0x86A5F4);
	push(mv, &ts->esp, ts->eax);
	game::sub_585E80(ts, mv);
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->al, 0x1);
	if (!ts->eflags.zero) {
        goto loc_58C210;
    }
	xor_(&ts->eax, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp, 4));
	push(mv, &ts->esp, 0x86A5F4);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x8, 1), ts->al);
	mov(mv, x86::mem(ts->esp + 0x408, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x40C, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x410, 1), 0x1);
	game::sub_588010(ts, mv);
	add(&ts->esp, 0x8);
	lea(mv, &ts->edx, x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x89CF48);
	game::sub_609B80(ts, mv);

loc_58C210:
	add(&ts->esp, 0x40C);
	retn(mv, &ts->esp);
}

void sub_58C220(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(0x7FBE78, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto locret_58C245;
    }
	mov(mv, &ts->eax, x86::mem(0x8669F4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_58C237;
    }
	game::sub_58BEF0(ts, mv);

loc_58C237:
	mov(mv, &ts->eax, x86::mem(0x866A14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto locret_58C245;
    }
	goto loc_589550;

locret_58C245:
	retn(mv, &ts->esp);

loc_589550:
	push(mv, &ts->esp, ts->ecx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7A0E48, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_5895B7;
    }
	mov(mv, &ts->ecx, x86::mem(0x8693C0, 4));
	mov(mv, &ts->eax, x86::mem(0x8651AC, 4));
	sub(&ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784D28, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784550, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7A0E48, 4));
	fcompp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.parity) {
        goto loc_5895B7;
    }
	push(mv, &ts->esp, 0x8);
	game::sub_5883E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8651AC, 4));
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(0x8693C0, 4), ts->ecx);

loc_5895B7:
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_58C250(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x866A14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_58C25E;
    }
	goto sub_589910;

loc_58C25E:
	goto sub_5879D0;
}

void sub_58C290(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x866A14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_58C29E;
    }
	goto sub_5899D0;

loc_58C29E:
	goto sub_587A90;
}

void sub_58C2B0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x866A14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_58C2BE;
    }
	goto loc_589A30;

loc_58C2BE:
	goto sub_589430;

loc_589A30:
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x778A38);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0x0);
	game::sub_587DB0(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x18, 4));
	add(&ts->esp, 0xC);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(&ts->ebx, ts->edi);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	mov(&ts->ebp, ts->eax);
	cmp(&ts->eflags, ts->edi, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_589AE3;
    }
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_589A90:
	mov(&ts->esi, 0x8693C8);

loc_589A95:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_589AB6;
    }
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_589AB6;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->ebx + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x7);
	push(mv, &ts->esp, ts->eax);
	game::sub_586120(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x20, 4));
	add(&ts->esp, 0x10);

loc_589AB6:
	add(&ts->esi, 0x20);
	cmp(&ts->eflags, ts->esi, 0x869468);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_589A95;
    }
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(mv, &ts->edi, x86::mem(ts->edi + 0x4, 4));
	mov(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_589AD8;
    }
	push(mv, &ts->esp, ts->ebx);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_589AD8:
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	cmp(&ts->eflags, ts->edi, ts->ebp);
	mov(&ts->ebx, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_589A90;
    }
	pop(mv, &ts->esp, ts->esi);

loc_589AE3:
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	cmp(&ts->eflags, ts->edi, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_589B14;
    }

loc_589AF3:
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->edi + 0x4, 4));
	mov(mv, x86::mem(ts->edi, 4), ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edi);
	game::j__free(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_589AF3;
    }

loc_589B14:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x14);
	retn(mv, &ts->esp);

loc_778A30:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x14, 4));
	goto sub_4DEF30;

loc_778A38:
	mov(&ts->eax, 0x7E4058);
	goto ___CxxFrameHandler;
}

void sub_58C2D0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x866A14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_58C2DE;
    }
	goto sub_589B30;

loc_58C2DE:
	goto sub_587AF0;
}

void sub_58C2F0(x86::thread_state* ts, x86::memory_view* mv) {
	goto sub_589C90;
}

void sub_58C300(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x866A14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_58C30E;
    }
	goto sub_589BE0;

loc_58C30E:
	goto sub_587BA0;
}

void sub_58C320(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x866A14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto locret_58C356;
    }
	game::sub_589830(ts, mv);
	game::sub_586350(ts, mv);
	mov(mv, x86::mem(0x7FBE80, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(0x866A1C, 4), 0x0);
	game::sub_585720(ts, mv);
	mov(mv, x86::mem(0x866A14, 4), 0x0);

locret_58C356:
	retn(mv, &ts->esp);
}

void sub_58C360(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edi);
	game::sub_583A70(ts, mv);
	mov(&ts->esi, ts->eax);
	game::sub_586010(ts, mv);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi, 4), ts->eax);
	game::sub_588170(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x7FBE80, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_589FA0(ts, mv);
	add(&ts->esp, 0x10);
	mov(&ts->esi, 0x8693C8);
	nop();

loc_58C390:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x4, 4), 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_58C3AC;
    }
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_58C3AC;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x10, 4), 0x3);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_58C3AC;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	game::sub_589FA0(ts, mv);
	add(&ts->esp, 0x8);

loc_58C3AC:
	add(&ts->esi, 0x20);
	cmp(&ts->eflags, ts->esi, 0x869468);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_58C390;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_58C3C0(x86::thread_state* ts, x86::memory_view* mv) {
	dec(mv, x86::mem(0x7FBDB8, 4));
	if (!ts->eflags.zero) {
        goto locret_58C412;
    }
	mov(mv, &ts->eax, x86::mem(0x86675C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_58C3DC;
    }
	call(ts, mv, ts->eax);
	mov(mv, &ts->eax, x86::mem(0x7FBDB8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto locret_58C412;
    }

loc_58C3DC:
	mov(mv, &ts->eax, x86::mem(0x866A14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto locret_58C412;
    }
	game::sub_589830(ts, mv);
	game::sub_586350(ts, mv);
	mov(mv, x86::mem(0x7FBE80, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(0x866A1C, 4), 0x0);
	game::sub_585720(ts, mv);
	mov(mv, x86::mem(0x866A14, 4), 0x0);

locret_58C412:
	retn(mv, &ts->esp);
}

void sub_58C420(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x778A9B);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->al, x86::mem(0x7FBEC9, 1));
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x418);
	push(mv, &ts->esp, ts->ebx);
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->al, 0x1);
	push(mv, &ts->esp, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_58C45C;
    }
	mov(&ts->ecx, 0x6);
	xor_(&ts->eax, ts->eax);
	mov(&ts->edi, 0x86A600);
	mov(mv, x86::mem(0x7FBEC9, 1), ts->bl);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);

loc_58C45C:
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x434, 4));
	cmp(mv, &ts->eflags, x86::mem(0x86A600, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_58C48A;
    }
	push(mv, &ts->esp, 0x8);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_58C481;
    }
	mov(mv, x86::mem(ts->eax, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->eax);
	goto loc_58C483;

loc_58C481:
	xor_(&ts->eax, ts->eax);

loc_58C483:
	mov(mv, x86::mem(0x86A600, 4), ts->eax);

loc_58C48A:
	mov(mv, &ts->eax, x86::mem(0x86A600, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x430, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_585E80(ts, mv);
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->al, 0x1);
	if (!ts->eflags.zero) {
        goto loc_58C602;
    }
	mov(mv, &ts->edx, x86::mem(0x86A600, 4));
	mov(mv, x86::mem(ts->esp + 0x41C, 1), ts->al);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x1C, 1), ts->bl);
	mov(mv, x86::mem(ts->esp + 0x41C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x420, 4), ts->ebx);
	game::sub_588010(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x20);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebx);
	game::sub_581D90(ts, mv);
	mov(&ts->eax, 0x8693CC);

loc_58C4F1:
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_58C4FF;
    }
	add(&ts->eax, 0x20);
	cmp(&ts->eflags, ts->eax, 0x86946C);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_58C4F1;
    }

loc_58C4FF:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x89CF48);
	game::sub_601EB0(ts, mv);
	mov(mv, &ts->esi, x86::mem(0x86A600, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_58C547;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero) {
        goto loc_58C53E;
    }

loc_58C525:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	game::j__free(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_58C525;
    }

loc_58C53E:
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_58C547:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(0x86A600, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x1);
	mov(mv, x86::mem(ts->esp + 0x43C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x42C, 4), ts->ebx);
	game::sub_587DB0(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x1C, 4));
	add(&ts->esp, 0xC);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	game::Iostream_init__Iostream_init_void_(ts, mv);
	mov(&ts->ebp, ts->eax);
	cmp(&ts->eflags, ts->esi, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_58C5C8;
    }

loc_58C594:
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	game::sub_588350(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x4, 4));
	add(&ts->esp, 0x10);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_58C5C0;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_58C5C0:
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x10, 4));
	cmp(&ts->eflags, ts->esi, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_58C594;
    }

loc_58C5C8:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	cmp(&ts->eflags, ts->esi, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x430, 4), 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_58C601;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_58C5E0:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->esi, 4), ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->esi);
	game::j__free(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x10, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->esi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_58C5E0;
    }

loc_58C601:
	pop(mv, &ts->esp, ts->esi);

loc_58C602:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x420, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x424);
	retn(mv, &ts->esp);

loc_778A90:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x424, 4));
	goto sub_4DEF30;

SEH_58C420:
	mov(&ts->eax, 0x7E40E8);
	goto ___CxxFrameHandler;
}

void sub_58C620(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7FBDB8, 4));
	push(mv, &ts->esp, ts->ebx);
	dec(&ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(0x7FBDB8, 4), ts->eax);
	xor_(&ts->ecx, ts->ecx);
	mov(&ts->eax, 0x8693C8);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_58C640:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x4, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_58C651;
    }
	add(&ts->eax, 0x20);
	cmp(&ts->eflags, ts->eax, 0x869468);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_58C640;
    }
	goto loc_58C653;

loc_58C651:
	mov(&ts->ecx, ts->eax);

loc_58C653:
	mov(mv, &ts->esi, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->edi);
	game::sub_586480(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x18, 4));
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->bl, ts->bl);
	if (ts->eflags.zero) {
        goto loc_58C66F;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_585880(ts, mv);
	add(&ts->esp, 0x4);

loc_58C66F:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x89CF48);
	game::sub_6099C0(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	game::sub_589890(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_58C690(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x20);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	game::sub_581D90(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x10, 4));
	xor_(&ts->ecx, ts->ecx);
	mov(&ts->eax, 0x8693C8);

loc_58C6B5:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x4, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_58C6C6;
    }
	add(&ts->eax, 0x20);
	cmp(&ts->eflags, ts->eax, 0x869468);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_58C6B5;
    }
	goto loc_58C6C8;

loc_58C6C6:
	mov(&ts->ecx, ts->eax);

loc_58C6C8:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0x4);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x10, 4));
	mov(mv, x86::mem(ts->ecx + 0x10, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_58C6E8;
    }
	cmp(&ts->eflags, ts->edx, 0x3);
	if (ts->eflags.zero) {
        goto loc_58C6E8;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	game::sub_589F30(ts, mv);
	add(&ts->esp, 0x8);

loc_58C6E8:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_58C6F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_58B390(ts, mv);
	retn(mv, &ts->esp);
}

void sub_58C700(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x40);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x48, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_58C720;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	or_(&ts->eax, 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x40);
	retn(mv, &ts->esp, 0xC);

loc_58C720:
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x54, 4));
	cmp(&ts->eflags, ts->ebp, 0x1);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_58C85B;
    }
	cmp(&ts->eflags, ts->ebp, 0x3C);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_58C85B;
    }
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(&ts->edx, 0x736E6170);
	if (ts->eflags.zero) {
        goto loc_58C752;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x8, 4), ts->edx);
	if (!ts->eflags.zero) {
        goto loc_58C752;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x20, 4));
	goto loc_58C770;

loc_58C752:
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x3C, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_58C779;
    }
	goto loc_58C760;

loc_58C760:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x8, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_58C76D;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_58C760;
    }
	goto loc_58C779;

loc_58C76D:
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x20, 4));

loc_58C770:
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_58C85B;
    }

loc_58C779:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ebp);
	game::sub_5826E0(ts, mv);
	mov(&ts->ebx, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + (ts->ebx*4) - 0x18, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_58C7C4;
    }
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x58A240);
	push(mv, &ts->esp, ts->ebx);
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x44, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_7444C0(ts, mv);
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + (ts->ebx*4) - 0x18, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_58C854;
    }
	push(mv, &ts->esp, 0x5826D0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_73D910(ts, mv);
	add(&ts->esp, 0x10);

loc_58C7C4:
	or_(&ts->edi, 0xFFFFFFFF);
	cmp(&ts->eflags, ts->ebp, 0xA);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_58C7D3;
    }
	mov(&ts->edi, 0xC);
	goto loc_58C821;

loc_58C7D3:
	cmp(&ts->eflags, ts->ebp, 0xB);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_58C7E4;
    }
	cmp(&ts->eflags, ts->ebp, 0x14);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_58C7E4;
    }
	mov(&ts->edi, 0xD);
	goto loc_58C821;

loc_58C7E4:
	cmp(&ts->eflags, ts->ebp, 0x15);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_58C7F5;
    }
	cmp(&ts->eflags, ts->ebp, 0x1E);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_58C7F5;
    }
	mov(&ts->edi, 0xE);
	goto loc_58C821;

loc_58C7F5:
	cmp(&ts->eflags, ts->ebp, 0x1F);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_58C806;
    }
	cmp(&ts->eflags, ts->ebp, 0x28);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_58C806;
    }
	mov(&ts->edi, 0xF);
	goto loc_58C821;

loc_58C806:
	cmp(&ts->eflags, ts->ebp, 0x29);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_58C817;
    }
	cmp(&ts->eflags, ts->ebp, 0x32);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_58C817;
    }
	mov(&ts->edi, 0x10);
	goto loc_58C821;

loc_58C817:
	cmp(&ts->eflags, ts->ebp, 0x33);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_58C821;
    }
	mov(&ts->edi, 0x11);

loc_58C821:
	mov(mv, &ts->eax, x86::mem(ts->esi + (ts->edi*4) - 0x18, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_58C87A;
    }
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x58A240);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ebp);
	game::sub_5826E0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x44, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_7444C0(ts, mv);
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + (ts->edi*4) - 0x18, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_58C868;
    }

loc_58C854:
	mov(&ts->ecx, ts->esi);
	game::sub_58A1D0(ts, mv);

loc_58C85B:
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	or_(&ts->eax, 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x40);
	retn(mv, &ts->esp, 0xC);

loc_58C868:
	push(mv, &ts->esp, 0x5826D0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_73D910(ts, mv);
	add(&ts->esp, 0x10);

loc_58C87A:
	cmp(mv, &ts->eflags, x86::mem(ts->ebx + (ts->esi) + 0x5A, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_58C894;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->edi + (ts->esi) + 0x5A, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_58C894;
    }
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x40);
	retn(mv, &ts->esp, 0xC);

loc_58C894:
	mov(mv, x86::mem(ts->esp + 0x10, 1), 0x0);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0xF);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x11, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	game::sub_58A0E0(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(ts->eax + 0xA0, 1), 0x1);
	game::sub_5826E0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x7A1620);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, 0x40);
	push(mv, &ts->esp, ts->edx);
	game::sub_741F20(ts, mv);
	add(&ts->esp, 0x1C);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x58A2A0);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x736E6170);
	game::sub_58A0E0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_5869A0(ts, mv);
	mov(&ts->edi, ts->eax);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_58C914;
    }
	game::sub_58A0E0(ts, mv);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->eax + 0xA0, 1), 0x0);
	or_(&ts->eax, 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x40);
	retn(mv, &ts->esp, 0xC);

loc_58C914:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x7A15FC);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, 0x40);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x24, 1), 0x0);
	game::sub_741F20(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x70, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x6C, 4));
	add(&ts->esp, 0x14);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x58A2A0);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x736E6170);
	game::sub_58A0E0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_5869A0(ts, mv);
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_58C96A;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_58A0E0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_5868B0(ts, mv);

loc_58C96A:
	game::sub_58A0E0(ts, mv);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->eax + 0xA0, 1), 0x0);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x40);
	retn(mv, &ts->esp, 0xC);
}

void sub_58C990(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x44);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->ebp);
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x48, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_58C9B0;
    }
	or_(&ts->eax, 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0x44);
	retn(mv, &ts->esp, 0x8);

loc_58C9B0:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(&ts->edx, 0x736E6170);
	if (ts->eflags.zero) {
        goto loc_58C9CE;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x8, 4), ts->edx);
	if (!ts->eflags.zero) {
        goto loc_58C9CE;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x20, 4));
	goto loc_58C9E7;

loc_58C9CE:
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x3C, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_58C9F0;
    }

loc_58C9D7:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x8, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_58C9E4;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_58C9D7;
    }
	goto loc_58C9F0;

loc_58C9E4:
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x20, 4));

loc_58C9E7:
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_58CAE6;
    }

loc_58C9F0:
	mov(&ts->esi, 0x3D);

loc_58C9F5:
	or_(&ts->edi, 0xFFFFFFFF);
	cmp(&ts->eflags, ts->esi, 0x3D);
	if (!ts->eflags.zero) {
        goto loc_58CA04;
    }
	mov(&ts->edi, 0x12);
	goto loc_58CA3E;

loc_58CA04:
	cmp(&ts->eflags, ts->esi, 0x3E);
	if (!ts->eflags.zero) {
        goto loc_58CA10;
    }
	mov(&ts->edi, 0x13);
	goto loc_58CA3E;

loc_58CA10:
	cmp(&ts->eflags, ts->esi, 0x3F);
	if (!ts->eflags.zero) {
        goto loc_58CA1C;
    }
	mov(&ts->edi, 0x14);
	goto loc_58CA3E;

loc_58CA1C:
	cmp(&ts->eflags, ts->esi, 0x40);
	if (!ts->eflags.zero) {
        goto loc_58CA28;
    }
	mov(&ts->edi, 0x15);
	goto loc_58CA3E;

loc_58CA28:
	cmp(&ts->eflags, ts->esi, 0x41);
	if (!ts->eflags.zero) {
        goto loc_58CA34;
    }
	mov(&ts->edi, 0x16);
	goto loc_58CA3E;

loc_58CA34:
	cmp(&ts->eflags, ts->esi, 0x42);
	if (!ts->eflags.zero) {
        goto loc_58CA3E;
    }
	mov(&ts->edi, 0x17);

loc_58CA3E:
	mov(mv, &ts->eax, x86::mem(ts->ebp + (ts->edi*4) - 0x18, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_58CAC1;
    }
	or_(&ts->eax, 0xFFFFFFFF);
	cmp(&ts->eflags, ts->esi, 0x3D);
	if (!ts->eflags.zero) {
        goto loc_58CA55;
    }
	mov(&ts->eax, 0x12);
	goto loc_58CA8F;

loc_58CA55:
	cmp(&ts->eflags, ts->esi, 0x3E);
	if (!ts->eflags.zero) {
        goto loc_58CA61;
    }
	mov(&ts->eax, 0x13);
	goto loc_58CA8F;

loc_58CA61:
	cmp(&ts->eflags, ts->esi, 0x3F);
	if (!ts->eflags.zero) {
        goto loc_58CA6D;
    }
	mov(&ts->eax, 0x14);
	goto loc_58CA8F;

loc_58CA6D:
	cmp(&ts->eflags, ts->esi, 0x40);
	if (!ts->eflags.zero) {
        goto loc_58CA79;
    }
	mov(&ts->eax, 0x15);
	goto loc_58CA8F;

loc_58CA79:
	cmp(&ts->eflags, ts->esi, 0x41);
	if (!ts->eflags.zero) {
        goto loc_58CA85;
    }
	mov(&ts->eax, 0x16);
	goto loc_58CA8F;

loc_58CA85:
	cmp(&ts->eflags, ts->esi, 0x42);
	if (!ts->eflags.zero) {
        goto loc_58CA8F;
    }
	mov(&ts->eax, 0x17);

loc_58CA8F:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x58A240);
	push(mv, &ts->esp, ts->eax);
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x44, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_7444C0(ts, mv);
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ebp + (ts->edi*4) - 0x18, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_58CADF;
    }
	push(mv, &ts->esp, 0x5826D0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_73D910(ts, mv);
	add(&ts->esp, 0x10);

loc_58CAC1:
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, 0x42);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_58C9F5;
    }
	mov(&ts->esi, 0x43);

loc_58CAD0:
	or_(&ts->edi, 0xFFFFFFFF);
	cmp(&ts->eflags, ts->esi, 0x43);
	if (!ts->eflags.zero) {
        goto loc_58CAF3;
    }
	mov(&ts->edi, 0x18);
	goto loc_58CB2D;

loc_58CADF:
	mov(&ts->ecx, ts->ebp);
	game::sub_58A1D0(ts, mv);

loc_58CAE6:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	or_(&ts->eax, 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0x44);
	retn(mv, &ts->esp, 0x8);

loc_58CAF3:
	cmp(&ts->eflags, ts->esi, 0x44);
	if (!ts->eflags.zero) {
        goto loc_58CAFF;
    }
	mov(&ts->edi, 0x19);
	goto loc_58CB2D;

loc_58CAFF:
	cmp(&ts->eflags, ts->esi, 0x45);
	if (!ts->eflags.zero) {
        goto loc_58CB0B;
    }
	mov(&ts->edi, 0x1A);
	goto loc_58CB2D;

loc_58CB0B:
	cmp(&ts->eflags, ts->esi, 0x46);
	if (!ts->eflags.zero) {
        goto loc_58CB17;
    }
	mov(&ts->edi, 0x1B);
	goto loc_58CB2D;

loc_58CB17:
	cmp(&ts->eflags, ts->esi, 0x47);
	if (!ts->eflags.zero) {
        goto loc_58CB23;
    }
	mov(&ts->edi, 0x1C);
	goto loc_58CB2D;

loc_58CB23:
	cmp(&ts->eflags, ts->esi, 0x48);
	if (!ts->eflags.zero) {
        goto loc_58CB2D;
    }
	mov(&ts->edi, 0x1D);

loc_58CB2D:
	mov(mv, &ts->eax, x86::mem(ts->ebp + (ts->edi*4) - 0x18, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_58CBB4;
    }
	or_(&ts->eax, 0xFFFFFFFF);
	cmp(&ts->eflags, ts->esi, 0x43);
	if (!ts->eflags.zero) {
        goto loc_58CB44;
    }
	mov(&ts->eax, 0x18);
	goto loc_58CB7E;

loc_58CB44:
	cmp(&ts->eflags, ts->esi, 0x44);
	if (!ts->eflags.zero) {
        goto loc_58CB50;
    }
	mov(&ts->eax, 0x19);
	goto loc_58CB7E;

loc_58CB50:
	cmp(&ts->eflags, ts->esi, 0x45);
	if (!ts->eflags.zero) {
        goto loc_58CB5C;
    }
	mov(&ts->eax, 0x1A);
	goto loc_58CB7E;

loc_58CB5C:
	cmp(&ts->eflags, ts->esi, 0x46);
	if (!ts->eflags.zero) {
        goto loc_58CB68;
    }
	mov(&ts->eax, 0x1B);
	goto loc_58CB7E;

loc_58CB68:
	cmp(&ts->eflags, ts->esi, 0x47);
	if (!ts->eflags.zero) {
        goto loc_58CB74;
    }
	mov(&ts->eax, 0x1C);
	goto loc_58CB7E;

loc_58CB74:
	cmp(&ts->eflags, ts->esi, 0x48);
	if (!ts->eflags.zero) {
        goto loc_58CB7E;
    }
	mov(&ts->eax, 0x1D);

loc_58CB7E:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x58A240);
	push(mv, &ts->esp, ts->eax);
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x44, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_7444C0(ts, mv);
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ebp + (ts->edi*4) - 0x18, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_58CADF;
    }
	push(mv, &ts->esp, 0x5826D0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_73D910(ts, mv);
	add(&ts->esp, 0x10);

loc_58CBB4:
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, 0x48);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_58CAD0;
    }
	game::sub_58A0E0(ts, mv);
	mov(mv, x86::mem(ts->eax + 0xA0, 1), 0x1);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 1), 0x0);
	mov(&ts->ecx, 0xF);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x15, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	xor_(&ts->ebx, ts->ebx);
	mov(&ts->esi, 0x3D);

loc_58CBE6:
	or_(&ts->eax, 0xFFFFFFFF);
	cmp(&ts->eflags, ts->esi, 0x3D);
	if (!ts->eflags.zero) {
        goto loc_58CBF5;
    }
	mov(&ts->eax, 0x12);
	goto loc_58CC2F;

loc_58CBF5:
	cmp(&ts->eflags, ts->esi, 0x3E);
	if (!ts->eflags.zero) {
        goto loc_58CC01;
    }
	mov(&ts->eax, 0x13);
	goto loc_58CC2F;

loc_58CC01:
	cmp(&ts->eflags, ts->esi, 0x3F);
	if (!ts->eflags.zero) {
        goto loc_58CC0D;
    }
	mov(&ts->eax, 0x14);
	goto loc_58CC2F;

loc_58CC0D:
	cmp(&ts->eflags, ts->esi, 0x40);
	if (!ts->eflags.zero) {
        goto loc_58CC19;
    }
	mov(&ts->eax, 0x15);
	goto loc_58CC2F;

loc_58CC19:
	cmp(&ts->eflags, ts->esi, 0x41);
	if (!ts->eflags.zero) {
        goto loc_58CC25;
    }
	mov(&ts->eax, 0x16);
	goto loc_58CC2F;

loc_58CC25:
	cmp(&ts->eflags, ts->esi, 0x42);
	if (!ts->eflags.zero) {
        goto loc_58CC2F;
    }
	mov(&ts->eax, 0x17);

loc_58CC2F:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + (ts->ebp) + 0x5A, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_58CCC6;
    }
	or_(&ts->eax, 0xFFFFFFFF);
	cmp(&ts->eflags, ts->esi, 0x3D);
	mov(mv, x86::mem(ts->esp + 0x14, 1), 0x0);
	if (!ts->eflags.zero) {
        goto loc_58CC4E;
    }
	mov(&ts->eax, 0x12);
	goto loc_58CC88;

loc_58CC4E:
	cmp(&ts->eflags, ts->esi, 0x3E);
	if (!ts->eflags.zero) {
        goto loc_58CC5A;
    }
	mov(&ts->eax, 0x13);
	goto loc_58CC88;

loc_58CC5A:
	cmp(&ts->eflags, ts->esi, 0x3F);
	if (!ts->eflags.zero) {
        goto loc_58CC66;
    }
	mov(&ts->eax, 0x14);
	goto loc_58CC88;

loc_58CC66:
	cmp(&ts->eflags, ts->esi, 0x40);
	if (!ts->eflags.zero) {
        goto loc_58CC72;
    }
	mov(&ts->eax, 0x15);
	goto loc_58CC88;

loc_58CC72:
	cmp(&ts->eflags, ts->esi, 0x41);
	if (!ts->eflags.zero) {
        goto loc_58CC7E;
    }
	mov(&ts->eax, 0x16);
	goto loc_58CC88;

loc_58CC7E:
	cmp(&ts->eflags, ts->esi, 0x42);
	if (!ts->eflags.zero) {
        goto loc_58CC88;
    }
	mov(&ts->eax, 0x17);

loc_58CC88:
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x7A1640);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, 0x40);
	push(mv, &ts->esp, ts->edx);
	game::sub_741F20(ts, mv);
	add(&ts->esp, 0x14);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x58A2A0);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x736E6170);
	game::sub_58A0E0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_5869A0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_58CCEF;
    }
	mov(&ts->ebx, ts->eax);

loc_58CCC6:
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, 0x42);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_58CBE6;
    }
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x5C, 4));
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x58, 4));
	mov(&ts->esi, 0x43);
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_58CCE0:
	or_(&ts->eax, 0xFFFFFFFF);
	cmp(&ts->eflags, ts->esi, 0x43);
	if (!ts->eflags.zero) {
        goto loc_58CD15;
    }
	mov(&ts->eax, 0x18);
	goto loc_58CD4F;

loc_58CCEF:
	game::sub_58A0E0(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->eax + 0xA0, 1), 0x0);
	game::sub_58A0E0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_5868B0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	or_(&ts->eax, 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0x44);
	retn(mv, &ts->esp, 0x8);

loc_58CD15:
	cmp(&ts->eflags, ts->esi, 0x44);
	if (!ts->eflags.zero) {
        goto loc_58CD21;
    }
	mov(&ts->eax, 0x19);
	goto loc_58CD4F;

loc_58CD21:
	cmp(&ts->eflags, ts->esi, 0x45);
	if (!ts->eflags.zero) {
        goto loc_58CD2D;
    }
	mov(&ts->eax, 0x1A);
	goto loc_58CD4F;

loc_58CD2D:
	cmp(&ts->eflags, ts->esi, 0x46);
	if (!ts->eflags.zero) {
        goto loc_58CD39;
    }
	mov(&ts->eax, 0x1B);
	goto loc_58CD4F;

loc_58CD39:
	cmp(&ts->eflags, ts->esi, 0x47);
	if (!ts->eflags.zero) {
        goto loc_58CD45;
    }
	mov(&ts->eax, 0x1C);
	goto loc_58CD4F;

loc_58CD45:
	cmp(&ts->eflags, ts->esi, 0x48);
	if (!ts->eflags.zero) {
        goto loc_58CD4F;
    }
	mov(&ts->eax, 0x1D);

loc_58CD4F:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + (ts->eax) + 0x5A, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_58CE0A;
    }
	or_(&ts->eax, 0xFFFFFFFF);
	cmp(&ts->eflags, ts->esi, 0x43);
	mov(mv, x86::mem(ts->esp + 0x14, 1), 0x0);
	if (!ts->eflags.zero) {
        goto loc_58CD72;
    }
	mov(&ts->eax, 0x18);
	goto loc_58CDAC;

loc_58CD72:
	cmp(&ts->eflags, ts->esi, 0x44);
	if (!ts->eflags.zero) {
        goto loc_58CD7E;
    }
	mov(&ts->eax, 0x19);
	goto loc_58CDAC;

loc_58CD7E:
	cmp(&ts->eflags, ts->esi, 0x45);
	if (!ts->eflags.zero) {
        goto loc_58CD8A;
    }
	mov(&ts->eax, 0x1A);
	goto loc_58CDAC;

loc_58CD8A:
	cmp(&ts->eflags, ts->esi, 0x46);
	if (!ts->eflags.zero) {
        goto loc_58CD96;
    }
	mov(&ts->eax, 0x1B);
	goto loc_58CDAC;

loc_58CD96:
	cmp(&ts->eflags, ts->esi, 0x47);
	if (!ts->eflags.zero) {
        goto loc_58CDA2;
    }
	mov(&ts->eax, 0x1C);
	goto loc_58CDAC;

loc_58CDA2:
	cmp(&ts->eflags, ts->esi, 0x48);
	if (!ts->eflags.zero) {
        goto loc_58CDAC;
    }
	mov(&ts->eax, 0x1D);

loc_58CDAC:
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x7A1640);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, 0x40);
	push(mv, &ts->esp, ts->edx);
	game::sub_741F20(ts, mv);
	add(&ts->esp, 0x14);
	cmp(&ts->eflags, ts->esi, 0x48);
	push(mv, &ts->esp, 0x0);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_58CDDE;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x58A2A0);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->ecx);
	goto loc_58CDEF;

loc_58CDDE:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x58A2A0);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->eax);

loc_58CDEF:
	push(mv, &ts->esp, 0x736E6170);
	game::sub_58A0E0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_5869A0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_58CCEF;
    }
	mov(&ts->ebx, ts->eax);

loc_58CE0A:
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, 0x48);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_58CCE0;
    }
	game::sub_58A0E0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->eax + 0xA0, 1), 0x0);
	mov(&ts->eax, ts->ebx);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0x44);
	retn(mv, &ts->esp, 0x8);
}

void sub_58CE30(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x866654, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_58CE46;
    }
	game::sub_58A370(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_58CE46;
    }
	or_(&ts->eax, 0xFFFFFFFF);
	retn(mv, &ts->esp);

loc_58CE46:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_58CE69;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(&ts->eax, 0x9);

loc_58CE57:
	cmp(mv, &ts->eflags, ts->ecx, x86::mem(0x866650, 4));
	if (!ts->eflags.carry) {
        goto loc_58CE67;
    }
	dec(&ts->eax);
	if (!ts->eflags.sign) {
        goto loc_58CE57;
    }

loc_58CE63:
	or_(&ts->eax, 0xFFFFFFFF);
	retn(mv, &ts->esp);

loc_58CE67:
	inc(&ts->eax);
	retn(mv, &ts->esp);

loc_58CE69:
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_58CE97;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	mov(&ts->ecx, 0x9);
	mov(&ts->eax, 0x86669C);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_58CE80:
	cmp(mv, &ts->eflags, ts->edx, x86::mem(ts->eax, 4));
	if (!ts->eflags.carry) {
        goto loc_58CE93;
    }
	sub(&ts->eax, 0x4);
	dec(&ts->ecx);
	cmp(&ts->eflags, ts->eax, 0x866678);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_58CE80;
    }
	or_(&ts->eax, 0xFFFFFFFF);
	retn(mv, &ts->esp);

loc_58CE93:
	lea(mv, &ts->eax, x86::mem(ts->ecx + 0xB, 4));
	retn(mv, &ts->esp);

loc_58CE97:
	cmp(&ts->eflags, ts->eax, 0x3);
	if (!ts->eflags.zero) {
        goto loc_58CEC7;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	mov(&ts->ecx, 0x9);
	mov(&ts->eax, 0x8666EC);
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_58CEB0:
	cmp(mv, &ts->eflags, ts->edx, x86::mem(ts->eax, 4));
	if (!ts->eflags.carry) {
        goto loc_58CEC3;
    }
	sub(&ts->eax, 0x4);
	dec(&ts->ecx);
	cmp(&ts->eflags, ts->eax, 0x8666C8);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_58CEB0;
    }
	or_(&ts->eax, 0xFFFFFFFF);
	retn(mv, &ts->esp);

loc_58CEC3:
	lea(mv, &ts->eax, x86::mem(ts->ecx + 0x15, 4));
	retn(mv, &ts->esp);

loc_58CEC7:
	cmp(&ts->eflags, ts->eax, 0x2);
	if (!ts->eflags.zero) {
        goto loc_58CEF7;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	mov(&ts->ecx, 0x9);
	mov(&ts->eax, 0x8666C4);
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_58CEE0:
	cmp(mv, &ts->eflags, ts->edx, x86::mem(ts->eax, 4));
	if (!ts->eflags.carry) {
        goto loc_58CEF3;
    }
	sub(&ts->eax, 0x4);
	dec(&ts->ecx);
	cmp(&ts->eflags, ts->eax, 0x8666A0);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_58CEE0;
    }
	or_(&ts->eax, 0xFFFFFFFF);
	retn(mv, &ts->esp);

loc_58CEF3:
	lea(mv, &ts->eax, x86::mem(ts->ecx + 0x1F, 4));
	retn(mv, &ts->esp);

loc_58CEF7:
	cmp(&ts->eflags, ts->eax, 0x4);
	if (!ts->eflags.zero) {
        goto loc_58CF27;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	mov(&ts->ecx, 0x9);
	mov(&ts->eax, 0x866714);
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_58CF10:
	cmp(mv, &ts->eflags, ts->edx, x86::mem(ts->eax, 4));
	if (!ts->eflags.carry) {
        goto loc_58CF23;
    }
	sub(&ts->eax, 0x4);
	dec(&ts->ecx);
	cmp(&ts->eflags, ts->eax, 0x8666F0);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_58CF10;
    }
	or_(&ts->eax, 0xFFFFFFFF);
	retn(mv, &ts->esp);

loc_58CF23:
	lea(mv, &ts->eax, x86::mem(ts->ecx + 0x29, 4));
	retn(mv, &ts->esp);

loc_58CF27:
	cmp(&ts->eflags, ts->eax, 0x5);
	if (!ts->eflags.zero) {
        goto loc_58CE63;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	mov(&ts->ecx, 0x9);
	mov(&ts->eax, 0x86673C);
	mov(&ts->edi, ts->edi);

loc_58CF40:
	cmp(mv, &ts->eflags, ts->edx, x86::mem(ts->eax, 4));
	if (!ts->eflags.carry) {
        goto loc_58CF53;
    }
	sub(&ts->eax, 0x4);
	dec(&ts->ecx);
	cmp(&ts->eflags, ts->eax, 0x866718);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_58CF40;
    }
	or_(&ts->eax, 0xFFFFFFFF);
	retn(mv, &ts->esp);

loc_58CF53:
	lea(mv, &ts->eax, x86::mem(ts->ecx + 0x33, 4));
	retn(mv, &ts->esp);
}

void sub_58CF60(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_58CE30(ts, mv);
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_58CF8D;
    }
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_58CF8D;
    }
	cmp(&ts->eflags, ts->eax, 0x3C);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_58CF8D;
    }
	dec(&ts->eax);
	cdq(&ts->eax, ts->edx);
	mov(&ts->ecx, 0xA);
	idiv(&ts->eax, ts->ecx);
	mov(&ts->al, ts->dl);
	retn(mv, &ts->esp);

loc_58CF8D:
	or_(&ts->al, 0xFF);
	retn(mv, &ts->esp);
}

void sub_58CF90(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	game::sub_58CE30(ts, mv);
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_58CFC1;
    }
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_58CFC1;
    }
	cmp(&ts->eflags, ts->eax, 0x3C);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_58CFC1;
    }
	dec(&ts->eax);
	cdq(&ts->eax, ts->edx);
	mov(&ts->ecx, 0xA);
	idiv(&ts->eax, ts->ecx);
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_58CFCB;
    }

loc_58CFC1:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7842A0, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_58CFCB:
	cmp(&ts->eflags, ts->dl, 0x9);
	if (!ts->eflags.zero) {
        goto loc_58CFDA;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7A1664, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_58CFDA:
	movsx(&ts->ecx, ts->dl);
	lea(mv, &ts->eax, x86::mem(ts->edi + (ts->edi*4), 4));
	lea(mv, &ts->eax, x86::mem(ts->ecx + (ts->eax*2), 4));
	shl(&ts->eax, 0x2);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x866650, 4));
	sub(&ts->esi, ts->ecx);
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_58D000;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78454C, 4));

loc_58D000:
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x866654, 4));
	sub(&ts->edx, ts->ecx);
	test(&ts->eflags, ts->edx, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_58D01A;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78454C, 4));

loc_58D01A:
	fdivp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784258, 4));
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_58D030(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebp, ts->ecx);
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x48, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_58D04A;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	or_(&ts->eax, 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_58D04A:
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x14, 4));
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_58D0B9;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ebx, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_58D0B9;
    }
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x8, 4));
	lea(mv, &ts->edi, x86::mem(ts->ebp + 0x8, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_58D089;
    }

loc_58D062:
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_43DCC0(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_58D07B;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_58D062;
    }
	goto loc_58D085;

loc_58D07B:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);

loc_58D085:
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_58D092;
    }

loc_58D089:
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_58D092:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->ebp);
	game::sub_58A5B0(ts, mv);
	test(&ts->eflags, ts->esi, ts->esi);
	mov(&ts->edi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_58D0B0;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_584B40(ts, mv);
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_58D0B0:
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->eax, ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_58D0B9:
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->eax, 0xFFFFFFEC);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_58D0D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, ts->ecx);
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x48, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_58D0E4;
    }
	or_(&ts->eax, 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_58D0E4:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	game::sub_58A0E0(ts, mv);
	lea(mv, &ts->edi, x86::mem(ts->ebx + 0x8, 4));
	mov(mv, x86::mem(ts->eax + 0xA0, 1), 0x1);
	mov(mv, &ts->esi, x86::mem(ts->edi, 4));
	or_(&ts->ebp, 0xFFFFFFFF);
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_58D134;
    }
	nop();

loc_58D100:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->ebx);
	game::sub_58A5B0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_58D10E;
    }
	mov(&ts->ebp, ts->eax);

loc_58D10E:
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_58D12E;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_584B40(ts, mv);
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_58D12E:
	mov(mv, &ts->esi, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_58D100;
    }

loc_58D134:
	game::sub_58A0E0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->eax + 0xA0, 1), 0x0);
	mov(&ts->eax, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_58D150(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x48, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_58D170;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	or_(&ts->eax, 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0xC);

loc_58D170:
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x18, 4));
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_58D20C;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ebx, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_58D20C;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_58D20C;
    }
	cmp(&ts->eflags, ts->eax, 0x5);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_58D20C;
    }
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x10, 4));
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x1C, 4));
	add(&ts->edi, 0x10);
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_58D1C5;
    }

loc_58D1A5:
	cmp(mv, &ts->eflags, ts->ebp, x86::mem(ts->esi + 0x8, 4));
	if (!ts->eflags.zero) {
        goto loc_58D1BB;
    }
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_58D1C1;
    }

loc_58D1BB:
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_58D1A5;
    }

loc_58D1C1:
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_58D1D2;
    }

loc_58D1C5:
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->eax, 0xFFFFFFF1);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0xC);

loc_58D1D2:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	game::sub_58A660(ts, mv);
	mov(&ts->edi, ts->eax);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_58D202;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_584B40(ts, mv);
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_58D202:
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->eax, ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0xC);

loc_58D20C:
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->eax, 0xFFFFFFEC);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0xC);
}

void sub_58D220(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x8, 4));
	lea(mv, &ts->ebp, x86::mem(ts->edi + 0x8, 4));
	cmp(&ts->eflags, ts->esi, ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ebp);
	if (ts->eflags.zero) {
        goto loc_58D29A;
    }
	goto loc_58D240;

loc_58D240:
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8651AC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fcompp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_58D294;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x18, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_58D278;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x1C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x7);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	call(ts, mv, ts->eax);
	add(&ts->esp, 0x10);

loc_58D278:
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, x86::mem(ts->ebx, 4), ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ebx);
	game::sub_584B40(ts, mv);
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->esi, ts->ebx);

loc_58D294:
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_58D240;
    }

loc_58D29A:
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x10, 4));
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x10, 4));
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_58D326;
    }
	goto loc_58D2B0;

loc_58D2B0:
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8651AC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fcompp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_58D31D;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->edi);
	game::sub_58D150(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_58D300;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_584B40(ts, mv);
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_58D300:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x18, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_58D317;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x1C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x7);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ebx);
	call(ts, mv, ts->eax);
	add(&ts->esp, 0x10);

loc_58D317:
	mov(&ts->esi, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x14, 4));

loc_58D31D:
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x10, 4));
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_58D2B0;
    }

loc_58D326:
	mov(mv, &ts->ecx, x86::mem(ts->ebp, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	cmp(&ts->eflags, ts->ecx, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_58D339;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_58D339;
    }
	or_(&ts->eax, 0xFFFFFFFF);
	retn(mv, &ts->esp);

loc_58D339:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);
}

void sub_58D340(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	sub(&ts->esp, 0x4B4);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->esi);
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x48, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_58D6A2;
    }
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x8, 4));
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_58D6A2;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ebx, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_58D6A2;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x1C, 4), 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_58D6A2;
    }
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(&ts->edx, 0x676A6F69);
	if (ts->eflags.zero) {
        goto loc_58D39E;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x8, 4), ts->edx);
	if (!ts->eflags.zero) {
        goto loc_58D39E;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x20, 4));
	goto loc_58D3B7;

loc_58D39E:
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x3C, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_58D3C0;
    }

loc_58D3A7:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x8, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_58D3B4;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_58D3A7;
    }
	goto loc_58D3C0;

loc_58D3B4:
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x20, 4));

loc_58D3B7:
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_58D6A2;
    }

loc_58D3C0:
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(&ts->edx, 0x67637265);
	if (ts->eflags.zero) {
        goto loc_58D3DB;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x8, 4), ts->edx);
	if (!ts->eflags.zero) {
        goto loc_58D3DB;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x20, 4));
	goto loc_58D3F4;

loc_58D3DB:
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x3C, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_58D3FD;
    }

loc_58D3E4:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x8, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_58D3F1;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_58D3E4;
    }
	goto loc_58D3FD;

loc_58D3F1:
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x20, 4));

loc_58D3F4:
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_58D6A2;
    }

loc_58D3FD:
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 1), 0x0);
	mov(&ts->ecx, 0x8);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x15, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	mov(mv, &ts->eax, x86::mem(0x86A618, 4));
	mov(&ts->esi, ts->eax);
	inc(&ts->eax);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x63);
	mov(mv, x86::mem(0x86A618, 4), ts->eax);
	game::sub_43C1C0(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, 0x7A16A4);
	push(mv, &ts->esp, ts->eax);
	game::sub_4400D0(ts, mv);
	mov(mv, x86::mem(ts->esp + 0xD4, 1), 0x0);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0xFF);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0xD5, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x79AC28);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xDC, 4));
	push(mv, &ts->esp, 0x400);
	push(mv, &ts->esp, ts->edx);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	game::sub_741A50(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0xC, 4));
	movzx(mv, &ts->eax, x86::mem(ts->esi, 1));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7A169C);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xEC, 4));
	push(mv, &ts->esp, 0x400);
	push(mv, &ts->esp, ts->ecx);
	game::sub_741690(ts, mv);
	movzx(mv, &ts->edx, x86::mem(ts->esi + 0x1, 1));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x7A1694);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xFC, 4));
	push(mv, &ts->esp, 0x400);
	push(mv, &ts->esp, ts->eax);
	game::sub_741690(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1A, 1));
	mov(&ts->ebx, 0x1);
	add(&ts->esp, 0x44);
	xor_(&ts->ecx, ts->ecx);
	cmp(&ts->eflags, ts->al, ts->bl);
	if (!ts->eflags.zero) {
        goto loc_58D4BF;
    }
	mov(&ts->ecx, ts->ebx);

loc_58D4BF:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x19, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto loc_58D4C7;
    }
	or_(&ts->ecx, 0x2);

loc_58D4C7:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_58D4D6;
    }
	or_(&ts->ecx, 0x4000000);
	goto loc_58D526;

loc_58D4D6:
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_58D4E2;
    }
	or_(&ts->ecx, 0x8000000);
	goto loc_58D526;

loc_58D4E2:
	cmp(&ts->eflags, ts->eax, 0x2);
	if (!ts->eflags.zero) {
        goto loc_58D4EF;
    }
	or_(&ts->ecx, 0x10000000);
	goto loc_58D526;

loc_58D4EF:
	cmp(&ts->eflags, ts->eax, 0x3);
	if (!ts->eflags.zero) {
        goto loc_58D4FC;
    }
	or_(&ts->ecx, 0x20000000);
	goto loc_58D526;

loc_58D4FC:
	cmp(&ts->eflags, ts->eax, 0x5);
	if (ts->eflags.zero) {
        goto loc_58D520;
    }
	cmp(&ts->eflags, ts->eax, 0xA);
	if (ts->eflags.zero) {
        goto loc_58D520;
    }
	cmp(&ts->eflags, ts->eax, 0x4);
	if (!ts->eflags.zero) {
        goto loc_58D513;
    }
	or_(&ts->ecx, 0x80000000);
	goto loc_58D526;

loc_58D513:
	cmp(&ts->eflags, ts->eax, 0x8);
	if (!ts->eflags.zero) {
        goto loc_58D526;
    }
	or_(&ts->ecx, 0x2000000);
	goto loc_58D526;

loc_58D520:
	or_(&ts->ecx, 0x40000000);

loc_58D526:
	mov(mv, &ts->al, x86::mem(ts->esi + 0xC, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_58D535;
    }
	or_(&ts->ecx, 0xF0);
	goto loc_58D55D;

loc_58D535:
	mov(mv, &ts->al, x86::mem(ts->ebp + 0x10, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_58D541;
    }
	or_(&ts->ecx, 0x10);
	goto loc_58D55D;

loc_58D541:
	cmp(&ts->eflags, ts->al, ts->bl);
	if (!ts->eflags.zero) {
        goto loc_58D54A;
    }
	or_(&ts->ecx, 0x20);
	goto loc_58D55D;

loc_58D54A:
	cmp(&ts->eflags, ts->al, 0x2);
	if (!ts->eflags.zero) {
        goto loc_58D553;
    }
	or_(&ts->ecx, 0x40);
	goto loc_58D55D;

loc_58D553:
	cmp(&ts->eflags, ts->al, 0x3);
	if (!ts->eflags.zero) {
        goto loc_58D55D;
    }
	or_(&ts->ecx, 0x80);

loc_58D55D:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x48, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto loc_58D568;
    }
	or_(&ts->ecx, 0x100);

loc_58D568:
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x7A1688);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC8, 4));
	push(mv, &ts->esp, 0x400);
	push(mv, &ts->esp, ts->ecx);
	game::sub_741690(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x18, 1));
	add(&ts->esp, 0x10);
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->cl, ts->bl);
	if (!ts->eflags.zero) {
        goto loc_58D591;
    }
	mov(&ts->eax, 0x40000);

loc_58D591:
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7A15A8);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xC8, 4));
	push(mv, &ts->esp, 0x400);
	push(mv, &ts->esp, ts->edx);
	game::sub_741690(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1B, 1));
	add(&ts->esp, 0x10);
	cmp(&ts->eflags, ts->al, ts->bl);
	if (!ts->eflags.zero) {
        goto loc_58D5D8;
    }
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x1C, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	if (ts->eflags.zero) {
        goto loc_58D5D8;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7A13C8);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC8, 4));
	push(mv, &ts->esp, 0x400);
	push(mv, &ts->esp, ts->eax);
	game::sub_741A50(ts, mv);
	add(&ts->esp, 0x10);

loc_58D5D8:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x3C, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x38, 1), 0x0);
	mov(&ts->ecx, 0x20);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x39, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	movzx(mv, &ts->ecx, x86::mem(ts->esi + 0x3A, 2));
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	push(mv, &ts->esp, ts->ecx);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	movzx(mv, &ts->eax, x86::mem(ts->esi + 0x38, 2));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7A1670);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x48, 4));
	push(mv, &ts->esp, 0x84);
	push(mv, &ts->esp, ts->ecx);
	game::sub_741F20(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	add(&ts->esp, 0x18);
	cmp(&ts->eflags, ts->eax, 0x8);
	if (!ts->eflags.zero) {
        goto loc_58D64D;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x7A15C0);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x40, 4));
	push(mv, &ts->esp, 0x84);
	push(mv, &ts->esp, ts->eax);
	game::sub_741690(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x7A15BC);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x50, 4));
	push(mv, &ts->esp, 0x84);
	push(mv, &ts->esp, ts->edx);
	game::sub_741690(ts, mv);
	add(&ts->esp, 0x20);

loc_58D64D:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x38, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7A1668);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC8, 4));
	push(mv, &ts->esp, 0x400);
	push(mv, &ts->esp, ts->ecx);
	game::sub_741A50(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x58B070);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xD4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x67637265);
	game::sub_58A0E0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_5869A0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x14);

loc_58D6A2:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	or_(&ts->eax, 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x14);
}

void sub_58D6B0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x60);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x48, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_58D6CC;
    }
	or_(&ts->eax, 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x60);
	retn(mv, &ts->esp, 0x10);

loc_58D6CC:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x1C, 4), 0xFFFFFFFF);
	push(mv, &ts->esp, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_58D7F3;
    }
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_58D6F1;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x8, 4), 0x676A6F69);
	if (!ts->eflags.zero) {
        goto loc_58D6F1;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x20, 4));
	goto loc_58D714;

loc_58D6F1:
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x3C, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_58D71D;
    }
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_58D700:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x8, 4), 0x676A6F69);
	if (ts->eflags.zero) {
        goto loc_58D711;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_58D700;
    }
	goto loc_58D71D;

loc_58D711:
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x20, 4));

loc_58D714:
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_58D7F3;
    }

loc_58D71D:
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(&ts->edx, 0x67637265);
	if (ts->eflags.zero) {
        goto loc_58D738;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x8, 4), ts->edx);
	if (!ts->eflags.zero) {
        goto loc_58D738;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x20, 4));
	goto loc_58D751;

loc_58D738:
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x3C, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_58D75A;
    }

loc_58D741:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x8, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_58D74E;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_58D741;
    }
	goto loc_58D75A;

loc_58D74E:
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x20, 4));

loc_58D751:
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_58D7F3;
    }

loc_58D75A:
	game::sub_58B9A0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_587790(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8, 1), 0x0);
	mov(&ts->ecx, 0x17);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x9, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x6C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x79AC28);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, 0x60);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(0x86676C, 4), 0x0);
	game::sub_741A50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x80, 4));
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_58D7C3;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_58D7C3;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7A13C8);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, 0x60);
	push(mv, &ts->esp, ts->edx);
	game::sub_741A50(ts, mv);
	add(&ts->esp, 0x10);

loc_58D7C3:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x78, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x74, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x58B070);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x676A6F69);
	game::sub_58A0E0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_5869A0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x60);
	retn(mv, &ts->esp, 0x10);

loc_58D7F3:
	pop(mv, &ts->esp, ts->edi);
	or_(&ts->eax, 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x60);
	retn(mv, &ts->esp, 0x10);
}

void sub_58D800(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x40);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, ts->ecx);
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x48, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_58D931;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ebx + 0x1C, 4), 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_58D931;
    }
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_58D83A;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x8, 4), 0x6764656C);
	if (!ts->eflags.zero) {
        goto loc_58D83A;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x20, 4));
	goto loc_58D857;

loc_58D83A:
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x3C, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_58D860;
    }

loc_58D843:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x8, 4), 0x6764656C);
	if (ts->eflags.zero) {
        goto loc_58D854;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_58D843;
    }
	goto loc_58D860;

loc_58D854:
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x20, 4));

loc_58D857:
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_58D931;
    }

loc_58D860:
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_58D87A;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x8, 4), 0x676C6561);
	if (!ts->eflags.zero) {
        goto loc_58D87A;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x20, 4));
	goto loc_58D897;

loc_58D87A:
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x3C, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_58D8A0;
    }

loc_58D883:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x8, 4), 0x676C6561);
	if (ts->eflags.zero) {
        goto loc_58D894;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_58D883;
    }
	goto loc_58D8A0;

loc_58D894:
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x20, 4));

loc_58D897:
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_58D931;
    }

loc_58D8A0:
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8, 1), 0x0);
	mov(&ts->ecx, 0xF);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x9, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	lea(mv, &ts->eax, x86::mem(ts->ebx + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x79AC28);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, 0x40);
	push(mv, &ts->esp, ts->ecx);
	game::sub_741A50(ts, mv);
	add(&ts->esp, 0x10);
	lea(mv, &ts->edx, x86::mem(ts->ebx + 0x54, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x850080);
	game::sub_5031F0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DC30(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x54, 4));
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x0);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x50, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, 0x58B270);
	push(mv, &ts->esp, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_58D919;
    }
	push(mv, &ts->esp, 0x6764656C);
	game::sub_58A0E0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_5869A0(ts, mv);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x40);
	retn(mv, &ts->esp, 0x8);

loc_58D919:
	push(mv, &ts->esp, 0x676C6561);
	game::sub_58A0E0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_5869A0(ts, mv);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x40);
	retn(mv, &ts->esp, 0x8);

loc_58D931:
	or_(&ts->eax, 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x40);
	retn(mv, &ts->esp, 0x8);
}

void sub_58D940(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_58AE30(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_58D961;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x114, 4));
	and_(&ts->eax, 0x1000);
	test(&ts->eflags, ts->eax, ts->eax);
	setnz(ts->eflags, &ts->al);
	retn(mv, &ts->esp, 0x4);

loc_58D961:
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	setnz(ts->eflags, &ts->al);
	retn(mv, &ts->esp, 0x4);
}

void sub_58D970(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x48, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_58D9D0;
    }
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x14, 4));
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_58D9D0;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ebp, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_58D9D0;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_58AE30(ts, mv);
	mov(&ts->edi, ts->eax);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_58D9D0;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x1BC, 4));
	xor_(&ts->esi, ts->esi);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_58D9D0;
    }
	lea(mv, &ts->ebx, x86::mem(ts->edi + 0x1C4, 4));

loc_58D9B4:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_58D9D9;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x1BC, 4));
	inc(&ts->esi);
	add(&ts->ebx, 0x64);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_58D9B4;
    }

loc_58D9D0:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x8);

loc_58D9D9:
	imul(&ts->esi, ts->esi, 0x64);
	mov(mv, &ts->eax, x86::mem(ts->esi + (ts->edi) + 0x1FC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	shr(&ts->eax, 0x1B);
	pop(mv, &ts->esp, ts->ebp);
	and_(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x8);
}

void sub_58D9F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, 0xFFFFFFFF);
	mov(&ts->ecx, 0x850080);
	game::sub_5031F0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_58D970(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_58DA10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0xC, 4));
	test(&ts->eflags, ts->ebp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_58DA7C;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ebp, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_58DA7C;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x1C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_58DA7C;
    }
	mov(&ts->ecx, 0x850080);
	game::sub_5031F0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_58DA4A;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0xC);

loc_58DA4A:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x1D8, 4));
	xor_(&ts->esi, ts->esi);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_58DA7C;
    }
	lea(mv, &ts->ebx, x86::mem(ts->edi + 0x1E0, 4));
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_58DA60:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_58DA88;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x1D8, 4));
	inc(&ts->esi);
	add(&ts->ebx, 0x64);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_58DA60;
    }

loc_58DA7C:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	mov(&ts->eax, 0xFFFFFFFE);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0xC);

loc_58DA88:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	game::sub_58AF10(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0xC);
}

void sub_58DAB0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x34);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x40, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0x67616D65);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x4C, 4));
	push(mv, &ts->esp, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_58DBAD;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	cmp(&ts->eflags, ts->ecx, 0xFFFFFFFF);
	lea(mv, &ts->ebp, x86::mem(ts->esi + 0x1C, 4));
	if (ts->eflags.zero) {
        goto loc_58DBAD;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x10, 4));
	push(mv, &ts->esp, 0x79AC28);
	push(mv, &ts->esp, ts->eax);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_58DB7F;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebp);
	game::sub_7449F0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->ebp);
	game::sub_58B9A0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_585440(ts, mv);
	push(mv, &ts->esp, 0x73656C66);
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x44, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_744620(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x330, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_58DB60;
    }
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x138);
	mov(&ts->edi, ts->ebp);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ebp, 4), 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_58E073;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x5);
	call(ts, mv, ts->eax);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x34);
	retn(mv, &ts->esp);

loc_58DB60:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_58E073;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x2);
	call(ts, mv, ts->eax);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x34);
	retn(mv, &ts->esp);

loc_58DB7F:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_58DB93;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	call(ts, mv, ts->eax);
	add(&ts->esp, 0xC);

loc_58DB93:
	mov(&ts->edi, ts->ebp);
	mov(&ts->ecx, 0x138);
	xor_(&ts->eax, ts->eax);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->ebp, 4), 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x34);
	retn(mv, &ts->esp);

loc_58DBAD:
	cmp(&ts->eflags, ts->eax, 0x706C6179);
	if (!ts->eflags.zero) {
        goto loc_58DE50;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	lea(mv, &ts->ebp, x86::mem(ts->esi + 0x1C, 4));
	if (ts->eflags.zero) {
        goto loc_58E073;
    }
	game::sub_58A0E0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_586950(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ebp);
	game::sub_7449F0(ts, mv);
	add(&ts->esp, 0x8);
	game::sub_58A0E0(ts, mv);
	mov(&ts->ecx, 0x869888);
	game::sub_5823B0(ts, mv);
	game::sub_58A0E0(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->ebp + 0x128, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x869888);
	game::sub_43DBD0(ts, mv);
	add(&ts->esp, 0x8);
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x124, 4));
	mov(mv, x86::mem(0x8698C8, 4), ts->ecx);
	game::sub_58A0E0(ts, mv);
	mov(&ts->ecx, 0x850080);
	game::sub_5031F0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x8698CC);
	game::sub_43DBD0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x1BC, 4));
	add(&ts->esp, 0x8);
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_58DC74;
    }
	mov(&ts->esi, 0x8698DC);
	lea(mv, &ts->ebx, x86::mem(ts->ebp + 0x1C4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_58DC50:
	game::sub_58A0E0(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	game::sub_43DBD0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x1BC, 4));
	add(&ts->esp, 0x8);
	inc(&ts->edi);
	add(&ts->ebx, 0x64);
	add(&ts->esi, 0x10);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_58DC50;
    }
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x50, 4));

loc_58DC74:
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x1BC, 4));
	dec(&ts->edx);
	mov(mv, x86::mem(0x7FBDB8, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x1BC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x4C, 4), 0x0);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_58DD8E;
    }
	mov(&ts->esi, 0xFFFFFE2C);
	mov(&ts->edi, 0x869318);
	sub(&ts->esi, ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	lea(mv, &ts->ebx, x86::mem(ts->ebp + 0x1D4, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->esi);
	goto loc_58DCC0;

loc_58DCB3:
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	goto loc_58DCC0;

loc_58DCC0:
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->eax);
	cmp(mv, &ts->eflags, x86::mem(ts->ebp, 4), 0x0);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_58DD38;
    }
	cmp(&ts->eflags, ts->edi, 0x869318);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_58DD38;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4C, 4));
	cmp(mv, &ts->eflags, ts->ecx, x86::mem(ts->ebp + 0x1BC, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_58DD38;
    }
	push(mv, &ts->esp, 0x73656C66);
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x44, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_744620(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_58DD38;
    }
	add(&ts->eax, 0x398);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_742E30(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	add(&ts->esi, ts->ebx);
	mov(mv, &ts->edx, x86::mem(ts->esi + (ts->ebp) + 0x1D4, 4));
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->ecx, ts->edx);
	setz(ts->eflags, &ts->al);
	test(&ts->eflags, ts->al, ts->al);
	lea(mv, &ts->eax, x86::mem(ts->ebx + 0x4, 4));
	if (!ts->eflags.zero) {
        goto loc_58DD3A;
    }

loc_58DD38:
	mov(&ts->eax, ts->ebx);

loc_58DD3A:
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_742E60(ts, mv);
	add(&ts->edi, 0xFFFFFF60);
	mov(&ts->ecx, 0x5);
	lea(mv, &ts->esi, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, 0x13);
	lea(mv, &ts->eax, x86::mem(ts->ebx - 0x10, 4));
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_43DC00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x60, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x1BC, 4));
	add(&ts->esp, 0x14);
	inc(&ts->eax);
	add(&ts->esi, 0x14);
	add(&ts->ebx, 0x64);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4C, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->esi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_58DCB3;
    }
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x50, 4));

loc_58DD8E:
	mov(&ts->ecx, 0x850080);
	game::sub_5031F0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->ebp + 0x38, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	neg(&ts->eax);
	sbb(&ts->al, ts->al);
	inc(&ts->al);
	mov(&ts->ecx, 0x8691D0);

loc_58DDB0:
	xor_(&ts->edx, ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->ecx, 4), ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->edx);
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x10, 4), ts->edx);
	add(&ts->ecx, 0x14);
	cmp(&ts->eflags, ts->ecx, 0x869234);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_58DDB0;
    }
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_58DE31;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x1BC, 4));
	xor_(&ts->bl, ts->bl);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_58DE31;
    }
	xor_(&ts->edi, ts->edi);

loc_58DDE1:
	mov(&ts->ecx, 0x850080);
	game::sub_5031F0(ts, mv);
	mov(&ts->edx, ts->edi);
	imul(&ts->edx, ts->edx, 0x64);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->edx + (ts->ebp) + 0x1C4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_58DE22;
    }
	xor_(&ts->ecx, ts->ecx);
	mov(mv, &ts->cx, x86::mem(0x7FBDFC, 2));
	lea(mv, &ts->edx, x86::mem(ts->edi + (ts->edi*4), 4));
	lea(mv, &ts->eax, x86::mem(0x869278, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5857A0(ts, mv);
	add(&ts->esp, 0x8);

loc_58DE22:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x1BC, 4));
	inc(&ts->bl);
	movzx(&ts->edi, ts->bl);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_58DDE1;
    }

loc_58DE31:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_58E073;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x1);
	call(ts, mv, ts->eax);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x34);
	retn(mv, &ts->esp);

loc_58DE50:
	cmp(&ts->eflags, ts->eax, 0x24727570);
	if (!ts->eflags.zero) {
        goto loc_58DF4F;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x14, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_58DF4F;
    }
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x4E);
	mov(&ts->edi, 0x86A620);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	xor_(&ts->edi, ts->edi);
	mov(&ts->ebp, 0x86A620);
	goto loc_58DE80;

loc_58DE80:
	xor_(&ts->edx, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x1D, 4), ts->edx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x25, 4), ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	mov(mv, x86::mem(ts->esp + 0x29, 2), ts->dx);
	push(mv, &ts->esp, 0x7A16C8);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x28, 1), 0x0);
	mov(mv, x86::mem(ts->esp + 0x33, 1), ts->dl);
	game::sub_4400D0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x10, 4));
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0x14);
	push(mv, &ts->esp, ts->ebp);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_742360(ts, mv);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, 0x7A16C0);
	push(mv, &ts->esp, ts->eax);
	game::sub_4400D0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x10, 4));
	add(&ts->esp, 0x1C);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_7420B0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(0x86A6C4, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x10, 4));
	push(mv, &ts->esp, 0x7A16B8);
	push(mv, &ts->esp, ts->eax);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_7420B0(ts, mv);
	add(&ts->esp, 0x8);
	add(&ts->ebp, 0x14);
	inc(&ts->edi);
	cmp(&ts->eflags, ts->ebp, 0x86A6C0);
	mov(mv, x86::mem(0x86A6E4, 4), ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_58DE80;
    }
	mov(mv, x86::mem(0x86A6C0, 1), 0x0);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x86A620);
	call(ts, mv, x86::mem(ts->esi + 0x14, 4));
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x34);
	retn(mv, &ts->esp);

loc_58DF4F:
	cmp(&ts->eflags, ts->eax, 0x2472666E);
	if (!ts->eflags.zero) {
        goto loc_58E073;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_58E073;
    }
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x4E);
	mov(&ts->edi, 0x86A620);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	xor_(&ts->esi, ts->esi);
	mov(&ts->edi, 0x86A620);
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_58DF80:
	xor_(&ts->edx, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x1D, 4), ts->edx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x25, 4), ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	mov(mv, x86::mem(ts->esp + 0x29, 2), ts->dx);
	push(mv, &ts->esp, 0x7A16C8);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x28, 1), 0x0);
	mov(mv, x86::mem(ts->esp + 0x33, 1), ts->dl);
	game::sub_4400D0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x10, 4));
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0x14);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_742360(ts, mv);
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_58E049;
    }
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, 0x7A16B0);
	push(mv, &ts->esp, ts->eax);
	game::sub_4400D0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x10, 4));
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x794E68);
	push(mv, &ts->esp, 0x14);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x38, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_7425D0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x40, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x44, 4));
	mov(mv, x86::mem(0x86A6E8, 4), ts->ecx);
	mov(mv, x86::mem(0x86A708, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x48, 4));
	add(&ts->esp, 0x10);
	cmp(&ts->eflags, ts->edx, 0x1);
	setz(ts->eflags, &ts->al);
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, x86::mem(ts->esi + 0x86A728, 1), ts->al);
	if (!ts->eflags.zero) {
        goto loc_58E03F;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x3C, 4));
	mov(mv, x86::mem(0x86A730, 4), ts->eax);

loc_58E03F:
	mov(mv, &ts->cl, x86::mem(ts->esp + 0x40, 1));
	mov(mv, x86::mem(ts->esi + 0x86A750, 1), ts->cl);

loc_58E049:
	add(&ts->edi, 0x14);
	inc(&ts->esi);
	cmp(&ts->eflags, ts->edi, 0x86A6C0);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_58DF80;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x50, 4));
	mov(mv, x86::mem(0x86A6C0, 1), 0x1);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x18, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x86A620);
	call(ts, mv, x86::mem(ts->eax + 0x14, 4));
	add(&ts->esp, 0x8);

loc_58E073:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x34);
	retn(mv, &ts->esp);
}

void sub_58E080(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	sub(&ts->esp, 0x65C);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x150, 4));
	push(mv, &ts->esp, ts->ebx);
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->ebp - 0xC, 4), ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_58E0A2;
    }
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x8);

loc_58E0A2:
	game::sub_58A0E0(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x48, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto loc_58E0B6;
    }
	or_(&ts->eax, 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x8);

loc_58E0B6:
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->ebp - 0x65C, 1), ts->bl);
	mov(mv, x86::mem(ts->ebp - 0x25C, 4), ts->ebx);
	mov(mv, x86::mem(ts->ebp - 0x258, 4), ts->ebx);
	mov(mv, x86::mem(ts->ebp - 0x254, 1), 0x1);
	xor_(&ts->esi, ts->esi);

loc_58E0D3:
	lea(mv, &ts->eax, x86::mem(ts->ebp - 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x85AD40);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), ts->ebx);
	mov(mv, x86::mem(ts->ebp - 0x8, 4), ts->ebx);
	game::sub_513160(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x8, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_58E0FC;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ebp - 0x4, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_58E0FC;
    }
	mov(&ts->al, 0x1);
	goto loc_58E0FE;

loc_58E0FC:
	xor_(&ts->al, ts->al);

loc_58E0FE:
	movzx(&ts->edx, ts->al);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x65C, 4));
	game::sub_581D00(ts, mv);
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, 0x7);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_58E0D3;
    }
	mov(&ts->ecx, 0x85AD40);
	game::sub_513880(ts, mv);
	movzx(&ts->eax, ts->al);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x65C, 4));
	game::sub_581D00(ts, mv);
	xor_(&ts->eax, ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x25C, 4));
	mov(mv, x86::mem(ts->ebp - 0x2C, 1), ts->bl);
	mov(&ts->ecx, 0x7);
	lea(mv, &ts->edi, x86::mem(ts->ebp - 0x2B, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788164, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x4, 4));
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->ebp - 0x8, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x8, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x4, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_58E16C;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));

loc_58E16C:
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x2C, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	game::__ftol2(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->ebp - 0x65C, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_576130(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->ebp - 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x150, 4));
	lea(mv, &ts->eax, x86::mem(ts->ebp - 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7A1104);
	push(mv, &ts->esp, 0x200);
	push(mv, &ts->esp, ts->ecx);
	game::sub_741A50(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x150, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x250, 1), ts->bl);
	mov(&ts->ecx, 0x88);
	lea(mv, &ts->edi, x86::mem(ts->ebp - 0x24F, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x7A1588);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	lea(mv, &ts->eax, x86::mem(ts->ebp - 0x250, 4));
	push(mv, &ts->esp, 0x224);
	push(mv, &ts->esp, ts->eax);
	game::sub_741A50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x8, 4));
	add(&ts->esp, 0x34);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x58BD40);
	lea(mv, &ts->eax, x86::mem(ts->ebp - 0x250, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x61757869);
	game::sub_58A0E0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_5869A0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x8);
}

void sub_58E210(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x40);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->ecx);
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x48, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_58E22C;
    }
	or_(&ts->eax, 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0x40);
	retn(mv, &ts->esp, 0xC);

loc_58E22C:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x850080);
	game::sub_5031F0(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x54, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_58E255;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0x40);
	retn(mv, &ts->esp, 0xC);

loc_58E255:
	mov(mv, &ts->esi, x86::mem(ts->ebp, 4));
	mov(&ts->ecx, ts->ebp);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	mov(&ts->edi, ts->eax);
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_58E27C;
    }

loc_58E265:
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_58E2C3;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_58E265;
    }

loc_58E27C:
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->ebp);
	game::sub_43BE80(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x20);
	if (!ts->eflags.zero) {
        goto loc_58E2D3;
    }
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ebp, 4));
	mov(mv, x86::mem(ts->ebp, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), ts->eax);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->ebp);
	mov(&ts->ecx, 0xEC);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x8, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x3B8, 4), ts->eax);
	game::sub_43DBD0(ts, mv);
	goto loc_58E322;

loc_58E2C3:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x3B8, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0x40);
	retn(mv, &ts->esp, 0xC);

loc_58E2D3:
	push(mv, &ts->esp, 0x3);
	push(mv, &ts->esp, 0x3BC);
	game::sub_6D7110(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_58E300;
    }
	mov(&ts->ecx, 0xEC);
	xor_(&ts->eax, ts->eax);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x8, 4));
	mov(mv, x86::mem(ts->esi + 0x3B8, 4), 0x0);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	goto loc_58E302;

loc_58E300:
	xor_(&ts->esi, ts->esi);

loc_58E302:
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_58E394;
    }
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edx);
	game::sub_43DBD0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp, 4));
	mov(mv, x86::mem(ts->ebp, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->ebp);
	mov(mv, x86::mem(ts->esi, 4), ts->eax);

loc_58E322:
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 1), 0x0);
	mov(&ts->ecx, 0xF);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x19, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	add(&ts->esp, 0x8);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x7A13E8);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, 0x40);
	push(mv, &ts->esp, ts->eax);
	game::sub_741A50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x6C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x68, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x58BD90);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x6F6E6C6E);
	game::sub_58A0E0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_5869A0(ts, mv);
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	mov(mv, x86::mem(ts->esi + 0x3B8, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_58E397;
    }
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0xEC);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x8, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x3B8, 4), ts->eax);

loc_58E394:
	or_(&ts->eax, 0xFFFFFFFF);

loc_58E397:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0x40);
	retn(mv, &ts->esp, 0xC);
}

void sub_58E3B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(&ts->ecx, 0x850080);
	game::sub_5031F0(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_58E3FE;
    }
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x44, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_58E3F7;
    }
	push(mv, &ts->esp, 0x73656C66);
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x44, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_744620(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

loc_58E3F7:
	pop(mv, &ts->esp, ts->edi);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

loc_58E3FE:
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	mov(&ts->edi, ts->eax);
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_58E431;
    }
	mov(&ts->edi, ts->edi);

loc_58E410:
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_58E42B;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x3B8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_58E439;
    }

loc_58E42B:
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_58E410;
    }

loc_58E431:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->edi);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

loc_58E439:
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_58E450(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, ts->ecx);
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x48, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_58E465;
    }
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x8);

loc_58E465:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x850080);
	game::sub_5031F0(ts, mv);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_58E4CA;
    }
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x44, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_58E50B;
    }
	push(mv, &ts->esp, 0x73656C66);
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x44, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_744620(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_58E50B;
    }
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x12C, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_58E50B;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebx);
	game::sub_5854C0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x8);

loc_58E4CA:
	mov(mv, &ts->esi, x86::mem(ts->ebx, 4));
	mov(&ts->ecx, ts->ebx);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	mov(&ts->edi, ts->eax);
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_58E50B;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_58E4E0:
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edx);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_58E505;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x3B8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_58E505;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x134, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_58E514;
    }

loc_58E505:
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_58E4E0;
    }

loc_58E50B:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x8);

loc_58E514:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	add(&ts->esi, 0x8);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	game::sub_5854C0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x8);
}

void sub_58E530(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x778AC6);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x288);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->eax + 0x48, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_58E657;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x850080);
	game::sub_5031F0(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x2A4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_58E623;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0x14C, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_58E5AA;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x2AC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x2A8, 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*4), 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + (ts->eax*4) + 0x38, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	mov(&ts->al, 0x1);
	goto loc_58E655;

loc_58E5AA:
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x44, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_58E653;
    }
	push(mv, &ts->esp, 0x73656C66);
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x44, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_744620(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_58E653;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	game::sub_4AE7F0(ts, mv);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esp + 0x2A0, 4), 0x0);
	game::sub_5875C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x2AC, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->eax*4), 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + (ts->ecx*4) + 0x3C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x2A8, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x29C, 4), 0xFFFFFFFF);
	game::sub_4CBAF0(ts, mv);
	mov(&ts->al, 0x1);
	goto loc_58E655;

loc_58E623:
	mov(mv, &ts->esi, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	mov(&ts->edi, ts->eax);
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_58E653;
    }

loc_58E632:
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_58E64D;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x3B8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_58E66F;
    }

loc_58E64D:
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_58E632;
    }

loc_58E653:
	xor_(&ts->al, ts->al);

loc_58E655:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);

loc_58E657:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x28C, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x294);
	retn(mv, &ts->esp, 0xC);

loc_58E66F:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x150, 4));
	game::sub_4AE7F0(ts, mv);
	add(&ts->esi, 0x8);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x154, 4));
	mov(mv, x86::mem(ts->esp + 0x2A0, 4), 0x1);
	game::sub_5875C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x2AC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x2A8, 4));
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*4), 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + (ts->edx*4) + 0x180, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x150, 4));
	mov(mv, x86::mem(ts->esp + 0x29C, 4), 0xFFFFFFFF);
	game::sub_4CBAF0(ts, mv);
	mov(&ts->al, 0x1);
	goto loc_58E655;

loc_778AB0:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x294, 4));
	goto sub_4CBAF0;

loc_778ABB:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x150, 4));
	goto sub_4CBAF0;

SEH_58E6D0:
	mov(&ts->eax, 0x7E4114);
	goto ___CxxFrameHandler;
}

void sub_58E6D0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x778AC6);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x288);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->eax + 0x48, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_58E7E5;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x850080);
	game::sub_5031F0(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x2A4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_58E7AE;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0x14C, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_58E73F;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x18, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x2A8, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(&ts->al, 0x1);
	goto loc_58E7E3;

loc_58E73F:
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x44, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_58E7E1;
    }
	push(mv, &ts->esp, 0x73656C66);
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x44, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_744620(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_58E7E1;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	game::sub_4AE7F0(ts, mv);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esp + 0x2A0, 4), 0x0);
	game::sub_5875C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x2A8, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->esp + 0x29C, 4), 0xFFFFFFFF);
	game::sub_4CBAF0(ts, mv);
	mov(&ts->al, 0x1);
	goto loc_58E7E3;

loc_58E7AE:
	mov(mv, &ts->esi, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	mov(&ts->edi, ts->eax);
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_58E7E1;
    }
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_58E7C0:
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edx);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_58E7DB;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x3B8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_58E7FD;
    }

loc_58E7DB:
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_58E7C0;
    }

loc_58E7E1:
	xor_(&ts->al, ts->al);

loc_58E7E3:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);

loc_58E7E5:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x28C, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x294);
	retn(mv, &ts->esp, 0x8);

loc_58E7FD:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x150, 4));
	game::sub_4AE7F0(ts, mv);
	add(&ts->esi, 0x8);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x154, 4));
	mov(mv, x86::mem(ts->esp + 0x2A0, 4), 0x1);
	game::sub_5875C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x160, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x2A8, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x150, 4));
	mov(mv, x86::mem(ts->esp + 0x29C, 4), 0xFFFFFFFF);
	game::sub_4CBAF0(ts, mv);
	mov(&ts->al, 0x1);
	goto loc_58E7E3;

loc_778AB0:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x294, 4));
	goto sub_4CBAF0;

loc_778ABB:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x150, 4));
	goto sub_4CBAF0;

SEH_58E6D0:
	mov(&ts->eax, 0x7E4114);
	goto ___CxxFrameHandler;
}

void sub_58E850(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	sub(&ts->esp, 0x80);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x48, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_58E877;
    }
	or_(&ts->eax, 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0xC);

loc_58E877:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x14C, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_58E897;
    }
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x8, 4));
	add(&ts->esi, 0x8);
	mov(&ts->ecx, 0x51);
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0xC);

loc_58E897:
	mov(mv, x86::mem(ts->esp + 0x8, 1), 0x0);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x1F);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x9, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	mov(&ts->ecx, 0x850080);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	game::sub_5031F0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7A13E8);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, 0x80);
	push(mv, &ts->esp, ts->eax);
	game::sub_741A50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0xC, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x58BE80);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x75736572);
	game::sub_58A0E0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_5869A0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0xC);
}

void sub_58E900(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x414);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x41C, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x420, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->eax);
	mov(&ts->ebx, ts->ecx);
	shr(&ts->ecx, 0x2);
	xor_(&ts->edx, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x14, 1), ts->dl);
	mov(mv, x86::mem(ts->esp + 0x418, 4), ts->edx);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->ebx);
	and_(&ts->ecx, 0x3);
	movs(mv, x86::mem(ts->edi, 1), x86::mem(ts->esi, 1));
	push(mv, &ts->esp, 0x8);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	shl(&ts->eax, 0x3);
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, x86::mem(ts->esp + 0x41C, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x424, 1), ts->dl);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edx);
	game::sub_581D90(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0xC, 4));
	cmp(&ts->eflags, ts->bl, 0x12);
	if (!ts->eflags.carry) {
        goto def_58E9BC;
    }
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x414, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788164, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_58E999;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));

loc_58E999:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x42C, 4));
	push(mv, &ts->esp, ts->edx);
	game::__ftol2(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_583930(ts, mv);
	movzx(&ts->eax, ts->bl);
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->eax, 0x11);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_58E9BC;
    }
	jmp(x86::mem(0x58EB24, 4));

loc_58E9C3:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_58BFB0(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x414);
	retn(mv, &ts->esp);

loc_58E9DA:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_5891B0(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x414);
	retn(mv, &ts->esp);

loc_58E9F1:
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x89CF48);
	game::sub_5FF000(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x414);
	retn(mv, &ts->esp);

loc_58EA0A:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_585C80(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x414);
	retn(mv, &ts->esp);

loc_58EA21:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_58BFE0(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x414);
	retn(mv, &ts->esp);

loc_58EA38:
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_58C0C0(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x414);
	retn(mv, &ts->esp);

loc_58EA4F:
	mov(mv, &ts->eax, x86::mem(0x8651AC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x869468, 4), ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x414);
	retn(mv, &ts->esp);

loc_58EA63:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_589510(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x414);
	retn(mv, &ts->esp);

loc_58EA7A:
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_585CC0(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x414);
	retn(mv, &ts->esp);

loc_58EA91:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_58C180(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x414);
	retn(mv, &ts->esp);

loc_58EAA8:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_587C50(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x414);
	retn(mv, &ts->esp);

loc_58EABF:
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F9BD0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x414);
	retn(mv, &ts->esp);

loc_58EAD8:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F0800(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x414);
	retn(mv, &ts->esp);

loc_58EAF1:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x89CF48);
	game::sub_5FF190(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x414);
	retn(mv, &ts->esp);

loc_58EB0A:
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_585D20(ts, mv);
	add(&ts->esp, 0x4);

def_58E9BC:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x414);
	retn(mv, &ts->esp);
}

void sub_58EB70(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x8669F4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_58EB7E;
    }
	game::sub_588FB0(ts, mv);

loc_58EB7E:
	mov(mv, &ts->eax, x86::mem(0x866A14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto locret_58EBB4;
    }
	game::sub_589830(ts, mv);
	game::sub_586350(ts, mv);
	mov(mv, x86::mem(0x7FBE80, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(0x866A1C, 4), 0x0);
	game::sub_585720(ts, mv);
	mov(mv, x86::mem(0x866A14, 4), 0x0);

locret_58EBB4:
	retn(mv, &ts->esp);
}

void sub_58EBC0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x866A14, 4));
	sub(&ts->esp, 0x410);
	dec(&ts->eax);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, 0xFFFFFFFF);
	mov(&ts->ebx, 0x0);
	if (ts->eflags.zero) {
        goto loc_58EE5F;
    }
	sub(&ts->eax, 0x3);
	if (ts->eflags.zero) {
        goto loc_58ED8B;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto loc_58EF2D;
    }
	mov(mv, &ts->eax, x86::mem(0x8651AC, 4));
	sub(mv, &ts->eax, x86::mem(0x869D3C, 4));
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7844C0, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (!ts->eflags.zero) {
        goto loc_58EF35;
    }
	mov(mv, &ts->eax, x86::mem(0x8693CC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_58EC4E;
    }
	movzx(mv, &ts->ecx, x86::mem(0x8693D6, 2));
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ecx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_58EC4E;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));

loc_58EC4E:
	cmp(mv, &ts->eflags, x86::mem(0x8693EC, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_58EC78;
    }
	movzx(mv, &ts->edx, x86::mem(0x8693F6, 2));
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_58EC78;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));

loc_58EC78:
	cmp(mv, &ts->eflags, x86::mem(0x86940C, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_58ECA2;
    }
	movzx(mv, &ts->eax, x86::mem(0x869416, 2));
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_58ECA2;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));

loc_58ECA2:
	cmp(mv, &ts->eflags, x86::mem(0x86942C, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_58ECCC;
    }
	movzx(mv, &ts->ecx, x86::mem(0x869436, 2));
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ecx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_58ECCC;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));

loc_58ECCC:
	cmp(mv, &ts->eflags, x86::mem(0x86944C, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_58ECF6;
    }
	movzx(mv, &ts->edx, x86::mem(0x869456, 2));
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_58ECF6;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));

loc_58ECF6:
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x86518C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x89CF48);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x79BFC0, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_5F0160(ts, mv);
	push(mv, &ts->esp, 0x8);
	mov(&ts->esi, 0x6);
	push(mv, &ts->esp, 0xD);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, x86::mem(0x866A14, 4), ts->esi);
	mov(mv, x86::mem(ts->esp + 0x18, 1), ts->bl);
	mov(mv, x86::mem(ts->esp + 0x418, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x41C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x420, 1), 0x1);
	game::sub_581D00(ts, mv);
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	game::sub_581D00(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x89CF6C, 4));
	mov(&ts->ecx, ts->eax);
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	game::sub_581D00(ts, mv);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0xD);
	game::sub_5883A0(ts, mv);
	add(&ts->esp, 0xC);
	goto loc_58EF2D;

loc_58ED8B:
	mov(mv, &ts->ecx, x86::mem(0x8693CC, 4));
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->ecx, ts->edi);
	mov(&ts->esi, 0x6);
	if (ts->eflags.zero) {
        goto loc_58EDA9;
    }
	cmp(mv, &ts->eflags, x86::mem(0x8693D8, 4), ts->esi);
	if (!ts->eflags.zero) {
        goto loc_58EDA9;
    }
	mov(&ts->eax, 0x1);

loc_58EDA9:
	cmp(mv, &ts->eflags, x86::mem(0x8693EC, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_58EDBA;
    }
	cmp(mv, &ts->eflags, x86::mem(0x8693F8, 4), ts->esi);
	if (!ts->eflags.zero) {
        goto loc_58EDBA;
    }
	inc(&ts->eax);

loc_58EDBA:
	cmp(mv, &ts->eflags, x86::mem(0x86940C, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_58EDCB;
    }
	cmp(mv, &ts->eflags, x86::mem(0x869418, 4), ts->esi);
	if (!ts->eflags.zero) {
        goto loc_58EDCB;
    }
	inc(&ts->eax);

loc_58EDCB:
	cmp(mv, &ts->eflags, x86::mem(0x86942C, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_58EDDC;
    }
	cmp(mv, &ts->eflags, x86::mem(0x869438, 4), ts->esi);
	if (!ts->eflags.zero) {
        goto loc_58EDDC;
    }
	inc(&ts->eax);

loc_58EDDC:
	cmp(mv, &ts->eflags, x86::mem(0x86944C, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_58EDED;
    }
	cmp(mv, &ts->eflags, x86::mem(0x869458, 4), ts->esi);
	if (!ts->eflags.zero) {
        goto loc_58EDED;
    }
	inc(&ts->eax);

loc_58EDED:
	cmp(mv, &ts->eflags, ts->eax, x86::mem(0x866A24, 4));
	if (!ts->eflags.zero) {
        goto loc_58EF35;
    }
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_58EF35;
    }
	mov(mv, &ts->eax, x86::mem(0x8651AC, 4));
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0xD);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, x86::mem(0x869D3C, 4), ts->eax);
	mov(mv, x86::mem(0x866A14, 4), 0x5);
	mov(mv, x86::mem(ts->esp + 0x18, 1), ts->bl);
	mov(mv, x86::mem(ts->esp + 0x418, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x41C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x420, 1), 0x1);
	game::sub_581D00(ts, mv);
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, 0x5);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	game::sub_581D00(ts, mv);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xD);
	game::sub_5883A0(ts, mv);
	add(&ts->esp, 0xC);
	goto loc_58EF2D;

loc_58EE5F:
	mov(mv, &ts->edx, x86::mem(0x8693CC, 4));
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->edx, ts->edi);
	mov(&ts->ecx, 0x3);
	if (ts->eflags.zero) {
        goto loc_58EE7D;
    }
	cmp(mv, &ts->eflags, x86::mem(0x8693D8, 4), ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_58EE7D;
    }
	mov(&ts->eax, 0x1);

loc_58EE7D:
	cmp(mv, &ts->eflags, x86::mem(0x8693EC, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_58EE8E;
    }
	cmp(mv, &ts->eflags, x86::mem(0x8693F8, 4), ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_58EE8E;
    }
	inc(&ts->eax);

loc_58EE8E:
	cmp(mv, &ts->eflags, x86::mem(0x86940C, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_58EE9F;
    }
	cmp(mv, &ts->eflags, x86::mem(0x869418, 4), ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_58EE9F;
    }
	inc(&ts->eax);

loc_58EE9F:
	cmp(mv, &ts->eflags, x86::mem(0x86942C, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_58EEB0;
    }
	cmp(mv, &ts->eflags, x86::mem(0x869438, 4), ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_58EEB0;
    }
	inc(&ts->eax);

loc_58EEB0:
	cmp(mv, &ts->eflags, x86::mem(0x86944C, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_58EEC1;
    }
	cmp(mv, &ts->eflags, x86::mem(0x869458, 4), ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_58EEC1;
    }
	inc(&ts->eax);

loc_58EEC1:
	mov(mv, &ts->ecx, x86::mem(0x7FBDB8, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_58EF35;
    }
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_58EF35;
    }
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F9250(ts, mv);
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0xD);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, x86::mem(0x866A14, 4), 0x2);
	mov(mv, x86::mem(ts->esp + 0x18, 1), ts->bl);
	mov(mv, x86::mem(ts->esp + 0x418, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x41C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x420, 1), 0x1);
	game::sub_581D00(ts, mv);
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, 0x2);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	game::sub_581D00(ts, mv);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0xD);
	game::sub_5883A0(ts, mv);
	add(&ts->esp, 0xC);
	game::sub_583370(ts, mv);

loc_58EF2D:
	cmp(mv, &ts->eflags, x86::mem(0x866A14, 4), ts->ebx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_58EF85;
    }

loc_58EF35:
	mov(&ts->esi, 0x8693C8);
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_58EF40:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x4, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_58EF7A;
    }
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_58EF7A;
    }
	mov(mv, &ts->eax, x86::mem(0x8651AC, 4));
	sub(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7A0E4C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (!ts->eflags.zero) {
        goto loc_58EF7A;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ecx);
	game::sub_58C620(ts, mv);
	add(&ts->esp, 0x8);

loc_58EF7A:
	add(&ts->esi, 0x20);
	cmp(&ts->eflags, ts->esi, 0x869468);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_58EF40;
    }

loc_58EF85:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x410);
	retn(mv, &ts->esp);
}

void sub_58EF90(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, 0x8693C8);

loc_58EF96:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x4, 4), 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_58EFB4;
    }
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_58EFB4;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x10, 4), 0x6);
	if (ts->eflags.zero) {
        goto loc_58EFB4;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	game::sub_58C620(ts, mv);
	add(&ts->esp, 0x8);

loc_58EFB4:
	add(&ts->esi, 0x20);
	cmp(&ts->eflags, ts->esi, 0x869468);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_58EF96;
    }
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_58EFD0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_58C620(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x7FBDB8, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto locret_58F01E;
    }
	mov(mv, &ts->eax, x86::mem(0x866A14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto locret_58F01E;
    }
	game::sub_589830(ts, mv);
	game::sub_586350(ts, mv);
	mov(mv, x86::mem(0x7FBE80, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(0x866A1C, 4), 0x0);
	game::sub_585720(ts, mv);
	mov(mv, x86::mem(0x866A14, 4), 0x0);

locret_58F01E:
	retn(mv, &ts->esp);
}

void sub_58F020(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x414);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x420, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x424, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->eax);
	mov(&ts->ebx, ts->ecx);
	shr(&ts->ecx, 0x2);
	xor_(&ts->edx, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x14, 1), ts->dl);
	mov(mv, x86::mem(ts->esp + 0x418, 4), ts->edx);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->ebx);
	and_(&ts->ecx, 0x3);
	movs(mv, x86::mem(ts->edi, 1), x86::mem(ts->esi, 1));
	push(mv, &ts->esp, 0x8);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	shl(&ts->eax, 0x3);
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, x86::mem(ts->esp + 0x41C, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x424, 1), ts->dl);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edx);
	game::sub_581D90(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0xC, 4));
	cmp(&ts->eflags, ts->bl, 0x12);
	if (!ts->eflags.carry) {
        goto def_58F0DD;
    }
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x414, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788164, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_58F0B9;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));

loc_58F0B9:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x430, 4));
	push(mv, &ts->esp, ts->edx);
	game::__ftol2(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_583930(ts, mv);
	movzx(&ts->eax, ts->bl);
	add(&ts->esp, 0xC);
	dec(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0xD);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_58F0DD;
    }
	jmp(x86::mem(0x58F1F4, 4));

loc_58F0E4:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x424, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_5895C0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x414);
	retn(mv, &ts->esp);

loc_58F103:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x424, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_586060(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x414);
	retn(mv, &ts->esp);

loc_58F122:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x424, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_5896F0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x414);
	retn(mv, &ts->esp);

loc_58F141:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x424, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_58C420(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x414);
	retn(mv, &ts->esp);

loc_58F160:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x424, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_5860F0(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x414);
	retn(mv, &ts->esp);

loc_58F17A:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x424, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	game::sub_58C620(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x414);
	retn(mv, &ts->esp);

loc_58F196:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x424, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_589D60(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x414);
	retn(mv, &ts->esp);

loc_58F1B5:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x424, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_58C690(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x414);
	retn(mv, &ts->esp);

loc_58F1D4:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x424, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_589720(ts, mv);
	add(&ts->esp, 0x8);

def_58F0DD:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x414);
	retn(mv, &ts->esp);
}

void sub_58F230(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->cl, x86::mem(0x86A830, 1));
	mov(&ts->eax, 0x1);
	test(&ts->eflags, ts->al, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_58F28E;
    }
	mov(mv, &ts->edx, x86::mem(0x86A830, 4));
	push(mv, &ts->esp, ts->edi);
	or_(&ts->edx, ts->eax);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x18);
	mov(&ts->edi, 0x86A758);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(&ts->ecx, 0x6);
	mov(&ts->edi, 0x86A7B8);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(&ts->ecx, 0x18);
	mov(&ts->edi, 0x86A7D0);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(&ts->ecx, 0x3C);
	mov(&ts->edi, 0x866650);
	push(mv, &ts->esp, 0x7823B0);
	mov(mv, x86::mem(0x86A830, 4), ts->edx);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	game::_atexit(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);

loc_58F28E:
	mov(&ts->eax, 0x86A758);
	retn(mv, &ts->esp);
}

void sub_58F2A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebx, ts->ecx);
	game::sub_58D0D0(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->ebx + 0x10, 4));
	lea(mv, &ts->edi, x86::mem(ts->ebx + 0x10, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_58F2EB;
    }

loc_58F2B4:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebx);
	game::sub_58D150(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_58F2E5;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_584B40(ts, mv);
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_58F2E5:
	mov(mv, &ts->esi, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_58F2B4;
    }

loc_58F2EB:
	game::sub_58A0E0(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x34, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_58F325;
    }
	mov(&ts->edx, 0x58D220);
	mov(&ts->edi, ts->edi);

loc_58F300:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x8, 4), ts->edx);
	if (!ts->eflags.zero) {
        goto loc_58F30A;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0xC, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_58F312;
    }

loc_58F30A:
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_58F300;
    }
	goto loc_58F325;

loc_58F312:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_58F325:
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x44, 4));
	xor_(&ts->esi, ts->esi);
	cmp(&ts->eflags, ts->ecx, ts->esi);
	if (ts->eflags.zero) {
        goto loc_58F348;
    }
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x1);
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x44, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_744410(ts, mv);
	add(&ts->esp, 0x10);

loc_58F348:
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->ebx + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->ebx, 4), ts->esi);
	mov(mv, x86::mem(ts->ebx + 0x18, 4), ts->esi);
	mov(mv, x86::mem(ts->ebx + 0x1C, 4), ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_58F360(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	game::sub_587790(ts, mv);
	game::sub_58A0E0(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x24, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_58F3A5;
    }
	mov(&ts->edx, 0x58DAB0);
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_58F380:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x8, 4), ts->edx);
	if (!ts->eflags.zero) {
        goto loc_58F38A;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0xC, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_58F392;
    }

loc_58F38A:
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_58F380;
    }
	goto loc_58F3A5;

loc_58F392:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_58F3A5:
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x44, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_58F3D1;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_58F3D1;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x4);
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x44, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_744530(ts, mv);
	add(&ts->esp, 0xC);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->ebx);

loc_58F3D1:
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x1C, 4));
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x4FC, 4), 0x80000000);
	mov(&ts->ecx, 0x138);
	xor_(&ts->eax, ts->eax);
	mov(&ts->edi, ts->edx);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x500, 4), ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->edx, 4), 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_58F410(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x8651AC, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x61646472);
	mov(mv, x86::mem(0x869238, 4), ts->eax);
	mov(mv, x86::mem(0x869074, 4), ts->eax);
	mov(mv, x86::mem(0x869078, 4), ts->eax);
	mov(mv, x86::mem(0x86907C, 4), ts->eax);
	mov(mv, x86::mem(0x869080, 4), ts->eax);
	mov(mv, x86::mem(0x869678, 4), 0x0);
	mov(mv, x86::mem(0x86674C, 4), 0x587940);
	mov(mv, x86::mem(0x866648, 4), 0x589070);
	mov(mv, x86::mem(0x866768, 4), 0x589080);
	mov(mv, x86::mem(0x866750, 4), 0x58E900);
	game::sub_742B60(ts, mv);
	add(&ts->esp, 0xC);
	mov(mv, x86::mem(0x8669EC, 4), ts->eax);
	mov(mv, x86::mem(0x8669F4, 4), 0x1);
	retn(mv, &ts->esp);
}

void sub_58F630(x86::thread_state* ts, x86::memory_view* mv) {
	game::sub_5861C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8651AC, 4));
	push(mv, &ts->esp, 0x5);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7A16D0);
	mov(&ts->ecx, 0x869088);
	mov(mv, x86::mem(0x869084, 4), ts->eax);
	mov(mv, x86::mem(0x7FBE78, 1), 0x1);
	game::sub_5820C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x86676C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_58F667;
    }
	goto loc_58F490;

loc_58F667:
	game::sub_58F410(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(mv, &ts->ax, x86::mem(0x7FBDFC, 2));
	mov(mv, x86::mem(0x869240, 2), ts->ax);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x869278);
	game::sub_5833B0(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);

loc_58F490:
	mov(mv, &ts->eax, x86::mem(0x8651AC, 4));
	sub(&ts->esp, 0x40C);
	mov(mv, x86::mem(0x8693C0, 4), ts->eax);
	game::sub_586230(ts, mv);
	mov(mv, &ts->cx, x86::mem(0x7FBDFC, 2));
	mov(mv, x86::mem(0x869240, 2), ts->cx);
	movzx(&ts->ecx, ts->cx);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x866748, 4), ts->ecx);
	cmp(mv, &ts->eflags, x86::mem(0x864FAC, 4), ts->eax);
	mov(mv, x86::mem(0x86664C, 4), ts->eax);
	mov(mv, x86::mem(0x866760, 4), ts->eax);
	mov(mv, x86::mem(0x866764, 4), 0x58C360);
	mov(mv, x86::mem(0x866740, 4), 0x58EFD0);
	mov(mv, x86::mem(0x866744, 4), 0x58C3C0);
	mov(mv, x86::mem(0x866754, 4), 0x58F020);
	if (ts->eflags.zero) {
        goto loc_58F502;
    }
	mov(mv, x86::mem(0x8691D0, 4), 0x1);

loc_58F502:
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0xD);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(0x866A14, 4), 0x1);
	mov(mv, x86::mem(ts->esp + 0x8, 1), ts->al);
	mov(mv, x86::mem(ts->esp + 0x408, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x40C, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x410, 1), 0x1);
	game::sub_581D00(ts, mv);
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	game::sub_581D00(ts, mv);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0xD);
	game::sub_5883A0(ts, mv);
	game::sub_586010(ts, mv);
	mov(mv, x86::mem(0x7FBE80, 4), ts->eax);
	add(&ts->esp, 0x418);
	retn(mv, &ts->esp);
}

void sub_58F690(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(0x7FBE78, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto locret_58F6CD;
    }
	mov(mv, &ts->eax, x86::mem(0x8669F4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_58F6A7;
    }
	game::sub_585B20(ts, mv);

loc_58F6A7:
	mov(mv, &ts->eax, x86::mem(0x866A14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_58F6C3;
    }
	game::sub_5877D0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x866A14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_58F6C3;
    }
	game::sub_58EBC0(ts, mv);

loc_58F6C3:
	mov(mv, &ts->eax, x86::mem(0x8651AC, 4));
	mov(mv, x86::mem(0x869084, 4), ts->eax);

locret_58F6CD:
	retn(mv, &ts->esp);
}

void sub_58F6D0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->cl, x86::mem(0x86A854, 1));
	mov(&ts->eax, 0x1);
	test(&ts->eflags, ts->al, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_58F732;
    }
	mov(mv, &ts->edx, x86::mem(0x86A854, 4));
	mov(&ts->ecx, 0x86A83C);
	or_(&ts->edx, ts->eax);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x86A83C, 4), ts->ecx);
	mov(mv, x86::mem(0x86A840, 4), ts->ecx);
	mov(&ts->ecx, 0x86A844);
	push(mv, &ts->esp, 0x7823C0);
	mov(mv, x86::mem(0x86A854, 4), ts->edx);
	mov(mv, x86::mem(0x86A834, 4), ts->eax);
	mov(mv, x86::mem(0x86A838, 4), ts->eax);
	mov(mv, x86::mem(0x86A844, 4), ts->ecx);
	mov(mv, x86::mem(0x86A848, 4), ts->ecx);
	mov(mv, x86::mem(0x86A84C, 4), ts->eax);
	mov(mv, x86::mem(0x86A850, 4), ts->eax);
	game::_atexit(ts, mv);
	add(&ts->esp, 0x4);

loc_58F732:
	mov(&ts->eax, 0x86A834);
	retn(mv, &ts->esp);
}

void sub_58F740(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->cl, x86::mem(0x86AD5C, 1));
	mov(&ts->eax, 0x1);
	test(&ts->eflags, ts->al, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_58F7BB;
    }
	mov(mv, &ts->edx, x86::mem(0x86AD5C, 4));
	or_(&ts->edx, ts->eax);
	mov(&ts->eax, 0x86A858);
	mov(mv, x86::mem(0x86A858, 4), ts->eax);
	mov(mv, x86::mem(0x86A85C, 4), ts->eax);
	xor_(&ts->eax, ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(0x86A860, 4), ts->eax);
	mov(mv, x86::mem(0x86A864, 4), ts->eax);
	mov(mv, x86::mem(0x86A868, 4), ts->eax);
	mov(mv, x86::mem(0x86A86C, 4), ts->eax);
	mov(mv, x86::mem(0x86A870, 4), ts->eax);
	mov(mv, x86::mem(0x86AD54, 4), 0x80000000);
	mov(mv, x86::mem(0x86AD58, 4), ts->eax);
	mov(&ts->ecx, 0x138);
	mov(&ts->edi, 0x86A874);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	push(mv, &ts->esp, 0x7823D0);
	mov(mv, x86::mem(0x86AD5C, 4), ts->edx);
	mov(mv, x86::mem(0x86A874, 4), 0xFFFFFFFF);
	game::_atexit(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);

loc_58F7BB:
	mov(&ts->eax, 0x86A858);
	retn(mv, &ts->esp);
}

void sub_58F7D0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, ts->eax);
	shr(&ts->ebx, 0x1F);
	and_(&ts->eax, 0xFFFFFFF);
	push(mv, &ts->esp, ts->esi);
	and_(&ts->bl, 0x1);
	cmp(&ts->eflags, ts->eax, 0x4);
	push(mv, &ts->esp, ts->edi);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_58F7ED;
    }
	jmp(x86::mem(0x58F95C, 4));

loc_58F7F4:
	push(mv, &ts->esp, 0x0);
	game::sub_58F740(ts, mv);
	mov(&ts->esi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_584B50(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edx, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_584B50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x24, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_58F837;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x24, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_58F833;
    }
	mov(&ts->ecx, 0x1);
	goto loc_58F846;

loc_58F833:
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_58F843;
    }

loc_58F837:
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x24, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_58F843;
    }
	or_(&ts->ecx, 0xFFFFFFFF);
	goto loc_58F846;

loc_58F843:
	sub(mv, &ts->ecx, x86::mem(ts->eax + 0x24, 4));

loc_58F846:
	test(&ts->eflags, ts->bl, ts->bl);
	if (!ts->eflags.zero) {
        goto loc_58F84C;
    }
	neg(&ts->ecx);

loc_58F84C:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->eax, ts->ecx);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_58F852:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	add(&ts->ecx, 0x4);
	push(mv, &ts->esp, 0x2E);
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DDF0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x24, 4));
	add(&ts->edx, 0x4);
	push(mv, &ts->esp, 0x2E);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->esi, ts->eax);
	game::sub_43DDF0(ts, mv);
	inc(&ts->eax);
	push(mv, &ts->esp, ts->eax);
	inc(&ts->esi);
	push(mv, &ts->esp, ts->esi);
	game::sub_43DCC0(ts, mv);
	add(&ts->esp, 0x18);
	goto loc_58F94C;

loc_58F883:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x1BC, 4));
	sub(mv, &ts->eax, x86::mem(ts->ecx + 0x1BC, 4));
	test(&ts->eflags, ts->bl, ts->bl);
	if (!ts->eflags.zero) {
        goto loc_58F958;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	neg(&ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_58F8A5:
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, 0x0);
	add(&ts->esi, 0x8C);
	push(mv, &ts->esp, 0x7A15CC);
	push(mv, &ts->esp, ts->esi);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_7420B0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x795FE0);
	push(mv, &ts->esp, ts->esi);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_7420B0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_516280(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x24, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x0);
	add(&ts->esi, 0x8C);
	push(mv, &ts->esp, 0x7A15CC);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->edi, ts->eax);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_7420B0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x795FE0);
	push(mv, &ts->esp, ts->esi);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_7420B0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_516280(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DCC0(ts, mv);
	add(&ts->esp, 0x8);

loc_58F94C:
	test(&ts->eflags, ts->bl, ts->bl);
	if (!ts->eflags.zero) {
        goto loc_58F958;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	neg(&ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

def_58F7ED:
	xor_(&ts->eax, ts->eax);

loc_58F958:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_58F970(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x14);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x0);
	game::sub_58F740(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_58F989;
    }
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x14);
	retn(mv, &ts->esp);

loc_58F989:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ebx, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->ebx);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	cmp(&ts->eflags, ts->esi, ts->eax);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x30, 4));
	if (ts->eflags.zero) {
        goto loc_58F9AB;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	nop();

loc_58F9A0:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x8, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_58F9E5;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_58F9A0;
    }

loc_58F9AB:
	push(mv, &ts->esp, 0x3);
	push(mv, &ts->esp, 0x28);
	game::sub_6D7110(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_58F9E9;
    }
	mov(mv, &ts->cl, x86::mem(ts->edi + 0x116, 1));
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	and_(&ts->cl, 0x1);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0xD, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0xC, 1), 0x1);
	xor_(&ts->ecx, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->eax + 0xE, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	mov(mv, x86::mem(ts->edx + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->edx + 0x8, 4), ts->ecx);
	mov(mv, x86::mem(ts->edx + 0xC, 4), ts->ecx);
	mov(mv, x86::mem(ts->edx + 0x10, 4), ts->ecx);
	goto loc_58F9EB;

loc_58F9E5:
	mov(&ts->ebp, ts->esi);
	goto loc_58FA06;

loc_58F9E9:
	xor_(&ts->eax, ts->eax);

loc_58F9EB:
	test(&ts->eflags, ts->eax, ts->eax);
	mov(&ts->ebp, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_58F9F9;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x14);
	retn(mv, &ts->esp);

loc_58F9F9:
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->ebx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->ebx);

loc_58FA06:
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->eax);
	game::sub_58AE90(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x1D8, 4));
	if (!ts->eflags.zero) {
        goto loc_58FA35;
    }
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x1D4, 4));

loc_58FA35:
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_742E60(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, 0x584BC0);
	lea(mv, &ts->edi, x86::mem(ts->ebp + 0xE, 4));
	mov(&ts->ecx, 0x5);
	lea(mv, &ts->esi, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->edx);
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x98, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_74B1F0(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->ebp + 0x24, 4), ts->eax);
	movzx(mv, &ts->eax, x86::mem(ts->ebp + 0xC, 1));
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x14);
	retn(mv, &ts->esp);
}

void sub_58FA80(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->esi);
	xor_(&ts->esi, ts->esi);
	cmp(&ts->eflags, ts->eax, 0x400000);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->esp + 0x8, 1), 0x0);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_58FAD5;
    }
	if (ts->eflags.zero) {
        goto loc_58FAC9;
    }
	cmp(&ts->eflags, ts->eax, 0x400);
	if (ts->eflags.zero) {
        goto loc_58FAAE;
    }
	cmp(&ts->eflags, ts->eax, 0x800);
	if (ts->eflags.zero) {
        goto loc_58FAEF;
    }
	goto loc_58FB47;

loc_58FAAE:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_73EAD0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_582F80(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_58FAC9:
	mov(&ts->esi, 0x1);
	mov(mv, x86::mem(ts->esp + 0x8, 1), 0x1);
	goto loc_58FB47;

loc_58FAD5:
	cmp(&ts->eflags, ts->eax, 0x4000000);
	if (!ts->eflags.zero) {
        goto loc_58FB47;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_73EAD0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_583050(ts, mv);

loc_58FAEF:
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, 0x1);
	mov(mv, x86::mem(ts->esp + 0xC, 1), 0x0);
	game::sub_73EAD0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x836014);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_58FB34;
    }
	push(mv, &ts->esp, 0x790210);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_58FB34;
    }
	push(mv, &ts->esp, 0x790210);
	push(mv, &ts->esp, 0x1CAD26E2);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);

loc_58FB34:
	game::sub_58F6D0(ts, mv);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	game::sub_43BE80(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_58FB61;
    }

loc_58FB47:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	game::sub_50CEE0(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x9757A0C0);
	game::sub_55DDE0(ts, mv);
	add(&ts->esp, 0x10);

loc_58FB61:
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(0x83637C, 4), 0x1);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_58FB70(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	cmp(&ts->eflags, ts->eax, 0x7);
	push(mv, &ts->esp, ts->esi);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_58FB7E;
    }
	jmp(x86::mem(0x58FD30, 4));

loc_58FB85:
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0xF8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	game::sub_73EEA0(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_58FBB4;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0xF8, 4));
	push(mv, &ts->esp, 0x40);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ecx);
	game::sub_740790(ts, mv);
	add(&ts->esp, 0xC);

loc_58FBB4:
	mov(mv, &ts->edx, x86::mem(ts->edi + 0xF8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edx);
	game::sub_73EEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_73EAE0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_58FBEF;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, 0x2);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_58F6D0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_58D150(ts, mv);
	mov(mv, x86::mem(0x83637C, 4), 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_58FBEF:
	push(mv, &ts->esp, 0x7902A0);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_58FC0A;
    }
	push(mv, &ts->esp, 0x57);
	game::sub_50D180(ts, mv);
	add(&ts->esp, 0x4);

loc_58FC0A:
	push(mv, &ts->esp, 0x1);

loc_58FC0C:
	push(mv, &ts->esp, 0x1);
	game::sub_50CEE0(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x9757A0C0);
	game::sub_55DDE0(ts, mv);
	add(&ts->esp, 0x10);
	mov(mv, x86::mem(0x83637C, 4), 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_58FC2E:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xF9E94D58);
	game::sub_55DDE0(ts, mv);
	add(&ts->esp, 0x8);
	goto loc_58FCE8;

loc_58FC42:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x98C1B72F);
	game::sub_55DDE0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x7F44FC, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto def_58FB7E;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_582F80(ts, mv);
	mov(mv, x86::mem(0x83637C, 4), 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_58FC7F:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x99C1B72F);
	game::sub_55DDE0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x7F44FC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto def_58FB7E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	game::sub_582FF0(ts, mv);
	mov(mv, x86::mem(0x83637C, 4), 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_58FCBB:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x67BFA959);
	game::sub_55DDE0(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x7F44FC, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_58FCE8;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_583050(ts, mv);

loc_58FCE8:
	push(mv, &ts->esp, 0x0);
	game::sub_58F6D0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_5847F0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto def_58FB7E;
    }
	push(mv, &ts->esp, ts->eax);
	goto loc_58FC0C;

loc_58FD00:
	mov(mv, &ts->ecx, x86::mem(0x7F44FC, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto def_58FB7E;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_582F10(ts, mv);

def_58FB7E:
	mov(mv, x86::mem(0x83637C, 4), 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_58FD50(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	sub(&ts->esp, 0x84);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->ebx, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	game::sub_58F740(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x1C, 4));
	add(&ts->eax, 0x1C);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->ecx, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_58FDAB;
    }
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_58FDAB;
    }
	push(mv, &ts->esp, ts->ebx);
	game::sub_58F740(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x1C, 4));
	add(&ts->eax, 0x1C);
	xor_(&ts->ecx, ts->ecx);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->edi, 0xFFFFFFFF);
	setz(ts->eflags, &ts->cl);
	dec(&ts->ecx);
	and_(&ts->eax, ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x114, 4));
	and_(&ts->edx, 0x80000);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_58FDAB;
    }
	mov(mv, x86::mem(ts->ebp + 0x8, 1), 0x1);
	goto loc_58FDB0;

loc_58FDAB:
	cmp(mv, &ts->eflags, x86::mem(ts->ebp + 0x8, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_58FE2F;
    }

loc_58FDB0:
	mov(mv, x86::mem(ts->esp + 0x10, 1), ts->bl);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x1F);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x11, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	push(mv, &ts->esp, 0x794D2C);
	push(mv, &ts->esp, 0x679FD4E9);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_4400D0(ts, mv);
	game::sub_582B60(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0xF8, 4));
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x5);
	push(mv, &ts->esp, ts->edx);
	game::sub_73F180(ts, mv);
	add(&ts->esp, 0x20);
	game::sub_582B60(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0xF8, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_58FE2F;
    }
	mov(mv, x86::mem(0x7FBE54, 4), 0x5832E0);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xF8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_740600(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(0x7FBE54, 4), 0x5832D0);

loc_58FE2F:
	push(mv, &ts->esp, ts->ebx);
	game::sub_58F740(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->ecx, ts->eax);
	game::sub_58F360(ts, mv);
	game::sub_58F6D0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_58F2A0(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	game::sub_58A140(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->ecx, ts->eax);
	game::sub_584730(ts, mv);
	game::sub_58F230(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_58A1D0(ts, mv);
	game::sub_58B9A0(ts, mv);
	mov(&ts->esi, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_587790(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x18, 4));
	mov(mv, x86::mem(ts->esi + 0x8, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x148, 4), ts->ebx);
	game::sub_583220(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xB0, 4));
	game::sub_583220(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x150, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x14C, 1), ts->bl);
	game::j__free(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x150, 4), ts->ebx);
	game::sub_58B940(ts, mv);
	mov(mv, x86::mem(ts->eax + 0x4, 1), ts->bl);
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, 0x200);
	if (ts->eflags.zero) {
        goto loc_58FEE0;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ebp + 0x8, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_58FED4;
    }
	game::sub_582B60(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_584C20(ts, mv);
	goto loc_58FEE0;

loc_58FED4:
	game::sub_582B60(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_584D80(ts, mv);

loc_58FEE0:
	game::sub_58A0E0(ts, mv);
	mov(mv, x86::mem(ts->eax + 0x90, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x94, 4), ts->ebx);
	game::sub_58A0E0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_586A80(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_58FF10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x778B27);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x210);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->eax + 0x48, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_58FF60;
    }
	mov(&ts->eax, 0xFFFFFFFF);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x21C, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_58FF60:
	push(mv, &ts->esp, 0x0);
	game::sub_58F740(ts, mv);
	lea(mv, &ts->ebx, x86::mem(ts->eax + 0x1C, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_58FF78;
    }
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_58FF94;
    }

loc_58FF78:
	mov(&ts->eax, 0xFFFFFFF5);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x21C, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_58FF94:
	mov(&ts->ecx, 0x850080);
	game::sub_5031F0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_5901F9;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_5901F9;
    }
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DCC0(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_58FFDC;
    }
	mov(&ts->eax, 0xFFFFFFF4);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x21C, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_58FFDC:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x1BC, 4));
	xor_(&ts->esi, ts->esi);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_59000F;
    }
	lea(mv, &ts->edi, x86::mem(ts->ebx + 0x1C4, 4));
	mov(&ts->edi, ts->edi);

loc_58FFF0:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DCC0(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_590065;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x1BC, 4));
	inc(&ts->esi);
	add(&ts->edi, 0x64);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_58FFF0;
    }

loc_59000F:
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x8, 4));
	add(&ts->edi, 0x8);
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_59003A;
    }
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_590020:
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_43DCC0(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_590081;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_590020;
    }

loc_59003A:
	xor_(&ts->esi, ts->esi);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	game::sub_43BE80(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x5);
	if (!ts->eflags.zero) {
        goto loc_59009D;
    }
	mov(&ts->eax, 0xFFFFFFF0);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x21C, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_590065:
	mov(&ts->eax, 0xFFFFFFF3);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x21C, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_590081:
	mov(&ts->eax, 0xFFFFFFF2);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x21C, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_59009D:
	cmp(mv, &ts->eflags, x86::mem(ts->edi, 4), ts->edi);
	push(mv, &ts->esp, 0x28);
	setz(mv, ts->eflags, x86::mem(ts->esp + 0x13, 1));
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	cmp(&ts->eflags, ts->eax, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x224, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_5900D0;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, 0x42F00000);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_584860(ts, mv);
	mov(&ts->esi, ts->eax);

loc_5900D0:
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x224, 4), 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_59013E;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	mov(mv, x86::mem(ts->edi + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0xF, 1), 0x1);
	mov(mv, x86::mem(ts->esi, 4), ts->edi);
	if (!ts->eflags.zero) {
        goto loc_59015A;
    }
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x10, 4));
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x10, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_59015A;
    }
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x58D220);
	game::sub_58A0E0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_5841C0(ts, mv);
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_59015A;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_590135;
    }
	push(mv, &ts->esp, ts->eax);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_590135:
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_59013E:
	mov(&ts->eax, 0xFFFFFFFE);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x21C, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_59015A:
	mov(mv, x86::mem(ts->esp + 0x18, 1), 0x0);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x7F);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x19, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x7A1588);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, 0x200);
	push(mv, &ts->esp, ts->eax);
	game::sub_741A50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x7A1580);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, 0x200);
	push(mv, &ts->esp, ts->edx);
	game::sub_741A50(ts, mv);
	push(mv, &ts->esp, 0x30020);
	push(mv, &ts->esp, 0x7A1578);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x40, 4));
	push(mv, &ts->esp, 0x200);
	push(mv, &ts->esp, ts->eax);
	game::sub_741760(ts, mv);
	add(&ts->esp, 0x30);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	game::sub_58A0E0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x584630);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x6D657367);
	game::sub_58A0E0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_5869A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x21C, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_5901F9:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x21C, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->eax, 0xFFFFFFEC);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_778B10:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7A16E8);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x214, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_58FF10:
	mov(&ts->eax, 0x7E4188);
	goto ___CxxFrameHandler;
}

void sub_590220(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x778B57);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x90);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_5904A3;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_5904A3;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5904A3;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_5904A3;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7A1308);
	push(mv, &ts->esp, ts->eax);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_7420B0(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->ebx + 0x10, 4));
	lea(mv, &ts->esi, x86::mem(ts->ebx + 0x10, 4));
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->edi, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_5902BC;
    }

loc_590295:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->edi + 0x8, 4));
	if (!ts->eflags.zero) {
        goto loc_5902B6;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x8, 4));
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5904A3;
    }

loc_5902B6:
	mov(mv, &ts->edi, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->edi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_590295;
    }

loc_5902BC:
	xor_(&ts->edi, ts->edi);
	push(mv, &ts->esp, ts->edi);
	game::sub_58F740(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x1C, 4));
	add(&ts->eax, 0x1C);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->ecx, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_590397;
    }
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_590397;
    }
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x48, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_5904A3;
    }
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x8, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->esi, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_5904A3;
    }
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 1), 0x0);
	mov(&ts->ecx, 0x1F);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x19, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7A1588);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, 0x80);
	push(mv, &ts->esp, ts->ecx);
	game::sub_741690(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x7A1580);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, 0x80);
	push(mv, &ts->esp, ts->edx);
	game::sub_741A50(ts, mv);
	push(mv, &ts->esp, 0x4010020);
	push(mv, &ts->esp, 0x7A1578);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x40, 4));
	push(mv, &ts->esp, 0x80);
	push(mv, &ts->esp, ts->eax);
	game::sub_741760(ts, mv);
	add(&ts->esp, 0x30);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	game::sub_58A0E0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x584630);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x6D657367);
	game::sub_58A0E0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_5869A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x9C, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x8);

loc_590397:
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_43BE80(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x5);
	if (!ts->eflags.zero) {
        goto loc_5903CD;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, 0x3);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	game::sub_58A660(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x9C, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x8);

loc_5903CD:
	cmp(mv, &ts->eflags, x86::mem(ts->esi, 4), ts->esi);
	push(mv, &ts->esp, 0x28);
	setz(mv, ts->eflags, x86::mem(ts->esp + 0x13, 1));
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	cmp(&ts->eflags, ts->eax, ts->edi);
	mov(mv, x86::mem(ts->esp + 0xA4, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_590403;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, 0x42F00000);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->eax);
	game::sub_584AA0(ts, mv);
	mov(&ts->edi, ts->eax);

loc_590403:
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0xA4, 4), 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_5904A3;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->edi);
	mov(mv, x86::mem(ts->edi + 0x4, 4), ts->eax);
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0xF, 1), 0x1);
	mov(mv, x86::mem(ts->edi, 4), ts->esi);
	if (!ts->eflags.zero) {
        goto loc_590488;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x8, 4));
	lea(mv, &ts->eax, x86::mem(ts->ebx + 0x8, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_590488;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x58D220);
	game::sub_58A0E0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_5841C0(ts, mv);
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_590488;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x20, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_590468;
    }
	push(mv, &ts->esp, ts->eax);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_590468:
	push(mv, &ts->esp, ts->edi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x9C, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x8);

loc_590488:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x18, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5904A3;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x1C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ecx);
	call(ts, mv, ts->eax);
	add(&ts->esp, 0x10);

loc_5904A3:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x9C, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x8);

loc_778B40:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7A1700);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x94, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_590220:
	mov(&ts->eax, 0x7E41AC);
	goto ___CxxFrameHandler;
}

void sub_5904C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	sub(&ts->esp, 0x204);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ecx);
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x48, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_59055B;
    }
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_5904F9;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x8, 4), 0x67736561);
	if (!ts->eflags.zero) {
        goto loc_5904F9;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x20, 4));
	goto loc_590556;

loc_5904F9:
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x3C, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_590512;
    }
	mov(&ts->edx, 0x67736561);

loc_590507:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x8, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_590553;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_590507;
    }

loc_590512:
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 1), 0x0);
	mov(&ts->ecx, 0x7F);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x11, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, &ts->al, x86::mem(ts->edi + 0x14, 1));
	mov(&ts->ebx, 0x1);
	cmp(&ts->eflags, ts->al, ts->bl);
	if (!ts->eflags.zero) {
        goto loc_590567;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x7A1730);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, 0x200);
	push(mv, &ts->esp, ts->eax);
	game::sub_741690(ts, mv);
	add(&ts->esp, 0x10);
	goto loc_590766;

loc_590553:
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x20, 4));

loc_590556:
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_590512;
    }

loc_59055B:
	or_(&ts->eax, 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_590567:
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x7A14EC);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, 0x200);
	push(mv, &ts->esp, ts->edx);
	game::sub_741690(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7A15D0);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, 0x200);
	push(mv, &ts->esp, ts->ecx);
	game::sub_741690(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->edi + 0x11, 1));
	add(&ts->esp, 0x20);
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->cl, ts->bl);
	if (!ts->eflags.zero) {
        goto loc_5905A4;
    }
	mov(&ts->eax, ts->ebx);

loc_5905A4:
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0x12, 1), ts->bl);
	mov(&ts->esi, 0x3);
	if (!ts->eflags.zero) {
        goto loc_5905B1;
    }
	or_(&ts->eax, 0x2);

loc_5905B1:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0xC, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_5905C4;
    }
	or_(&ts->eax, 0x4000000);
	mov(&ts->esi, 0x4000003);
	goto loc_59062C;

loc_5905C4:
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_5905D4;
    }
	or_(&ts->eax, 0x8000000);
	mov(&ts->esi, 0x8000003);
	goto loc_59062C;

loc_5905D4:
	cmp(&ts->eflags, ts->ecx, 0x8);
	if (!ts->eflags.zero) {
        goto loc_5905E5;
    }
	or_(&ts->eax, 0x2000000);
	mov(&ts->esi, 0x2000003);
	goto loc_59062C;

loc_5905E5:
	cmp(&ts->eflags, ts->ecx, 0x2);
	if (!ts->eflags.zero) {
        goto loc_5905F6;
    }
	or_(&ts->eax, 0x10000000);
	mov(&ts->esi, 0x10000003);
	goto loc_59062C;

loc_5905F6:
	cmp(&ts->eflags, ts->ecx, 0x3);
	if (!ts->eflags.zero) {
        goto loc_590607;
    }
	or_(&ts->eax, 0x20000000);
	mov(&ts->esi, 0x20000003);
	goto loc_59062C;

loc_590607:
	cmp(&ts->eflags, ts->ecx, 0x5);
	if (ts->eflags.zero) {
        goto loc_590622;
    }
	cmp(&ts->eflags, ts->ecx, 0xA);
	if (ts->eflags.zero) {
        goto loc_590622;
    }
	cmp(&ts->eflags, ts->ecx, 0x4);
	if (!ts->eflags.zero) {
        goto loc_59062C;
    }
	or_(&ts->eax, 0x80000000);
	mov(&ts->esi, 0x80000003);
	goto loc_59062C;

loc_590622:
	or_(&ts->eax, 0x40000000);
	mov(&ts->esi, 0x40000003);

loc_59062C:
	mov(mv, &ts->cl, x86::mem(ts->edi + 0x8, 1));
	or_(&ts->esi, 0xF0);
	cmp(&ts->eflags, ts->cl, ts->bl);
	if (!ts->eflags.zero) {
        goto loc_590640;
    }
	or_(&ts->eax, 0xF0);
	goto loc_590669;

loc_590640:
	mov(mv, &ts->cl, x86::mem(ts->ebp + 0xC, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_59064C;
    }
	or_(&ts->eax, 0x10);
	goto loc_590669;

loc_59064C:
	cmp(&ts->eflags, ts->cl, ts->bl);
	if (!ts->eflags.zero) {
        goto loc_590655;
    }
	or_(&ts->eax, 0x20);
	goto loc_590669;

loc_590655:
	cmp(&ts->eflags, ts->cl, 0x2);
	if (!ts->eflags.zero) {
        goto loc_59065F;
    }
	or_(&ts->eax, 0x40);
	goto loc_590669;

loc_59065F:
	cmp(&ts->eflags, ts->cl, 0x3);
	if (!ts->eflags.zero) {
        goto loc_590669;
    }
	or_(&ts->eax, 0x80);

loc_590669:
	and_(&ts->eax, 0xFFFFFEFF);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7A1688);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, 0x200);
	push(mv, &ts->esp, ts->edx);
	game::sub_741690(ts, mv);
	or_(&ts->esi, 0x100);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x7A1724);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, 0x200);
	push(mv, &ts->esp, ts->eax);
	game::sub_741690(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->edi + 0x10, 1));
	add(&ts->esp, 0x20);
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->cl, ts->bl);
	if (!ts->eflags.zero) {
        goto loc_5906AF;
    }
	mov(&ts->eax, 0x40000);

loc_5906AF:
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7A15A8);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, 0x200);
	push(mv, &ts->esp, ts->ecx);
	game::sub_741690(ts, mv);
	push(mv, &ts->esp, 0xC0000);
	push(mv, &ts->esp, 0x7A171C);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, 0x200);
	push(mv, &ts->esp, ts->edx);
	game::sub_741690(ts, mv);
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x98, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_74B300(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x30, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	add(&ts->esp, 0x24);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_590717;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x4);
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x44, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_744530(ts, mv);
	add(&ts->esp, 0xC);
	mov(mv, x86::mem(ts->esi + 0x8, 4), 0x0);

loc_590717:
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x58AFF0);
	push(mv, &ts->esp, 0x4);
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x44, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_7444C0(ts, mv);
	add(&ts->esp, 0x10);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->eax);
	game::sub_587790(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4FC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, 0x58F7D0);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	game::sub_73D910(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, 0x58F970);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	game::sub_73D940(ts, mv);
	add(&ts->esp, 0x20);

loc_590766:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x58B2E0);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x67736561);
	game::sub_58A0E0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_5869A0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);
}

void sub_5907A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x8, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto locret_5907DE;
    }
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.sign) {
        goto loc_5907DD;
    }
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->bl, x86::mem(ts->esp + 0x10, 1));
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->bl, 0x1);
	setnz(ts->eflags, &ts->al);
	push(mv, &ts->esp, 0x58F7D0);
	dec(&ts->eax);
	and_(&ts->eax, 0x80000000);
	or_(&ts->eax, ts->esi);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x4FC, 4), ts->eax);
	game::sub_73D910(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->ebx);

loc_5907DD:
	pop(mv, &ts->esp, ts->esi);

locret_5907DE:
	retn(mv, &ts->esp, 0x8);
}

void sub_5907F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_590890;
    }
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x44, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_590829;
    }
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x58DAB0);
	push(mv, &ts->esp, 0x4);
	game::sub_58A0E0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_584150(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_59082E;
    }
	mov(&ts->ecx, ts->esi);

loc_590824:
	game::sub_58F360(ts, mv);

loc_590829:
	or_(&ts->eax, 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_59082E:
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x58AFF0);
	push(mv, &ts->esp, 0x4);
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x44, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_7444C0(ts, mv);
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->eax);
	mov(&ts->ecx, ts->esi);
	if (ts->eflags.zero) {
        goto loc_590824;
    }
	game::sub_587790(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_59087B;
    }
	push(mv, &ts->esp, 0x58F7D0);
	push(mv, &ts->esp, 0x80000000);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4FC, 4), 0x80000000);
	game::sub_73D910(ts, mv);
	add(&ts->esp, 0x10);

loc_59087B:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, 0x58F970);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	game::sub_73D940(ts, mv);
	add(&ts->esp, 0x10);

loc_590890:
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_5908A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xF8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_73F860(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xF8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x586660);
	push(mv, &ts->esp, ts->ecx);
	game::sub_73EA70(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_59091C;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xF8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x583F50);
	push(mv, &ts->esp, ts->edx);
	game::sub_73E9E0(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_59091C;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xF8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x58FA80);
	push(mv, &ts->esp, ts->eax);
	game::sub_73EAA0(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_59091C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xF8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x583F70);
	push(mv, &ts->esp, ts->ecx);
	game::sub_73EA40(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_590928;
    }

loc_59091C:
	mov(&ts->ecx, ts->esi);
	game::sub_584D80(ts, mv);
	mov(&ts->eax, ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_590928:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x44, 4));
	push(mv, &ts->esp, 0x1D4C0);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x58C6F0);
	mov(&ts->ecx, 0x850080);
	game::sub_5031F0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_73E460(ts, mv);
	add(&ts->esp, 0x14);
	mov(mv, x86::mem(ts->esi + 0x108, 4), ts->eax);
	game::sub_582B60(ts, mv);
	mov(&ts->edi, ts->eax);
	game::sub_58F6D0(ts, mv);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x55, 4));
	mov(mv, x86::mem(ts->eax + 0x18, 4), 0x58FB70);
	mov(&ts->ebx, ts->edi);
	mov(&ts->ebp, 0xA);

loc_590977:
	push(mv, &ts->esp, ts->ebx);
	game::sub_43DBB0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_5909AE;
    }
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, 0x850080);
	game::sub_5031F0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_5909AE;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xF8, 4));
	push(mv, &ts->esp, 0x40);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edx);
	game::sub_740790(ts, mv);
	add(&ts->esp, 0xC);

loc_5909AE:
	add(&ts->ebx, 0x10);
	dec(&ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_590977;
    }
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x28);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_582E20(ts, mv);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x5B1, 1), 0x0);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_5909E0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x240);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x7A1760);
	push(mv, &ts->esp, 0x7FBE38);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, 0x598EC0);
	mov(mv, x86::mem(ts->esi + 0x5B1, 1), 0x0);
	push(mv, &ts->esp, 0x5832F0);
	mov(mv, x86::mem(0x7FBE54, 4), 0x5832E0);
	game::sub_740F40(ts, mv);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0xFFFFFFFF);
	mov(mv, x86::mem(ts->esi + 0xF8, 4), ts->eax);
	push(mv, &ts->esp, 0xFFFFFFFF);
	mov(mv, x86::mem(0x7FBE54, 4), 0x5832D0);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xF8, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, ts->eax);
	game::sub_73E920(ts, mv);
	movzx(mv, &ts->ecx, x86::mem(0x7FBE00, 2));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x7845D4);
	push(mv, &ts->esp, 0x8667BC);
	game::sub_4400D0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xF8, 4));
	add(&ts->esp, 0x44);
	push(mv, &ts->esp, 0x7A175C);
	push(mv, &ts->esp, 0x6E667335);
	push(mv, &ts->esp, 0x8667BC);
	push(mv, &ts->esp, ts->edx);
	game::sub_73E9B0(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_590C01;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xF8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x586660);
	push(mv, &ts->esp, ts->eax);
	game::sub_73EA70(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_590C01;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xF8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x583F50);
	push(mv, &ts->esp, ts->ecx);
	game::sub_73E9E0(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_590C01;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xF8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x58FA80);
	push(mv, &ts->esp, ts->edx);
	game::sub_73EAA0(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_590C01;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xF8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x583F70);
	push(mv, &ts->esp, ts->eax);
	game::sub_73EA40(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_590C01;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x254, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x258, 4));
	push(mv, &ts->esp, 0x86679C);
	mov(mv, x86::mem(ts->esi + 0x100, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x104, 4), ts->edx);
	game::sub_43DBB0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x48, 4));
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_590B3F;
    }
	push(mv, &ts->esp, 0x86679C);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DBD0(ts, mv);
	add(&ts->esp, 0x8);
	goto loc_590B5D;

loc_590B3F:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x250, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x24C, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x7A1754);
	push(mv, &ts->esp, ts->eax);
	game::sub_4400D0(ts, mv);
	add(&ts->esp, 0x10);

loc_590B5D:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x7FBE38);
	push(mv, &ts->esp, 0x7FBE4C);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x154, 4));
	push(mv, &ts->esp, 0x790F5C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4400D0(ts, mv);
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x636F6E66);
	mov(mv, x86::mem(ts->esp + 0x10, 1), 0x0);
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x44, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_744620(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x34C1);
	mov(&ts->edi, ts->eax);
	push(mv, &ts->esp, 0x7A1748);
	push(mv, &ts->esp, ts->edi);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_7420B0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x783FE5);
	mov(&ts->ebp, ts->eax);
	push(mv, &ts->esp, 0x40);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7A1738);
	push(mv, &ts->esp, ts->edi);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_742360(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x15C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xF8, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x60, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ebp);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_740F90(ts, mv);
	add(&ts->esp, 0x24);
	mov(&ts->edi, ts->eax);
	test(&ts->eflags, ts->edi, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_590C15;
    }

loc_590C01:
	mov(&ts->ecx, ts->esi);
	game::sub_584D80(ts, mv);
	mov(&ts->eax, ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x240);
	retn(mv, &ts->esp, 0x10);

loc_590C15:
	mov(mv, x86::mem(ts->esi + 0xFC, 4), 0x1);
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x44, 4));
	push(mv, &ts->esp, 0x1D4C0);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x58C6F0);
	mov(&ts->ecx, 0x850080);
	game::sub_5031F0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_73E460(ts, mv);
	add(&ts->esp, 0x14);
	mov(mv, x86::mem(ts->esi + 0x108, 4), ts->eax);
	game::sub_582B60(ts, mv);
	mov(&ts->edi, ts->eax);
	game::sub_58F6D0(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->eax + 0x18, 4), 0x58FB70);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->edi);
	game::sub_583100(ts, mv);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x55, 4));
	mov(&ts->ecx, 0x28);
	xor_(&ts->eax, ts->eax);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x240);
	retn(mv, &ts->esp, 0x10);
}

void sub_590C80(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	sub(&ts->esp, 0xB44);
	push(mv, &ts->esp, ts->ebx);
	xor_(&ts->eax, ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 1), 0x0);
	mov(&ts->ecx, 0xF);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x11, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x150, 1), 0x0);
	mov(&ts->ecx, 0x3F);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x151, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x50, 1), 0x0);
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0xC, 4));
	mov(&ts->ecx, 0x3F);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x51, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x250, 1), 0x0);
	mov(&ts->ecx, 0xFF);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x251, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x10, 4));
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	push(mv, &ts->esp, 0x783FE5);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	push(mv, &ts->esp, 0x40);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7A15F8);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x20, 1), 0x0);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_742360(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esp + 0x20, 1));
	add(&ts->esp, 0x10);
	cmp(&ts->eflags, ts->al, 0x54);
	if (!ts->eflags.zero) {
        goto loc_590D3D;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x11, 1), 0x6F);
	if (!ts->eflags.zero) {
        goto loc_590D3D;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x12, 1), 0x20);
	if (!ts->eflags.zero) {
        goto loc_590D3D;
    }
	mov(mv, x86::mem(ts->esp + 0x10, 1), 0x2D);
	mov(mv, x86::mem(ts->esp + 0x11, 1), 0x3E);

loc_590D3D:
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x10, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7A0BB8);
	push(mv, &ts->esp, ts->edx);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_742100(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->esi, 0x20000);
	if (ts->eflags.zero) {
        goto loc_590DAB;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x10, 4));
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0x400);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x258, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7A1784);
	push(mv, &ts->esp, ts->ecx);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_742360(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x10, 4));
	add(&ts->esp, 0x10);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x250, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_590220(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_590DAB:
	test(&ts->eflags, ts->esi, 0x8000000);
	if (ts->eflags.zero) {
        goto loc_590DE4;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x10, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7A1784);
	push(mv, &ts->esp, ts->ecx);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_7420B0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x10, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_586CD0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_590DE4:
	test(&ts->eflags, ts->esi, 0x74000040);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x10, 4));
	if (ts->eflags.zero) {
        goto loc_590E1E;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7A1784);
	push(mv, &ts->esp, ts->eax);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_7420B0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x10, 4));
	game::sub_586D50(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_590E1E:
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0x400);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x258, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x7A1784);
	push(mv, &ts->esp, ts->eax);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_742360(ts, mv);
	add(&ts->esp, 0x10);
	game::sub_582B60(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xF8, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_590E95;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x8D8, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_49EA30(ts, mv);
	mov(&ts->esi, ts->eax);
	mov(&ts->ecx, 0x9F);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x658, 4));
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x6B0, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_590E95;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x680, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_590FDF;
    }

loc_590E95:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0x63686174);
	if (ts->eflags.zero) {
        goto loc_590F31;
    }
	cmp(&ts->eflags, ts->eax, 0x70726976);
	if (!ts->eflags.zero) {
        goto loc_590F7A;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x10, 1), 0x2D);
	if (!ts->eflags.zero) {
        goto loc_590EF5;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x11, 1), 0x3E);
	if (!ts->eflags.zero) {
        goto loc_590EF5;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x12, 1), 0x20);
	if (!ts->eflags.zero) {
        goto loc_590EF5;
    }
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x250, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xDA2B33AF);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x58, 4));
	push(mv, &ts->esp, 0x7A177C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4400D0(ts, mv);
	add(&ts->esp, 0x10);
	mov(mv, x86::mem(ts->esp + 0xC, 1), 0x1);
	goto loc_590F7A;

loc_590EF5:
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x250, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0xDA2B33AF);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x158, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x60, 4));
	push(mv, &ts->esp, 0x7A1770);
	push(mv, &ts->esp, ts->edx);
	game::sub_4400D0(ts, mv);
	add(&ts->esp, 0x18);
	mov(mv, x86::mem(ts->esp + 0xC, 1), 0x1);
	goto loc_590F7A;

loc_590F31:
	test(mv, &ts->eflags, x86::mem(ts->ebx + 0xC, 4), 0x8000000);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x250, 4));
	push(mv, &ts->esp, ts->eax);
	if (ts->eflags.zero) {
        goto loc_590F5B;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x58, 4));
	push(mv, &ts->esp, 0x794FD8);
	push(mv, &ts->esp, ts->edx);
	game::sub_4400D0(ts, mv);
	add(&ts->esp, 0x10);
	goto loc_590F7A;

loc_590F5B:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x154, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x5C, 4));
	push(mv, &ts->esp, 0x7A1764);
	push(mv, &ts->esp, ts->eax);
	game::sub_4400D0(ts, mv);
	add(&ts->esp, 0x14);

loc_590F7A:
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x10, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x250, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_582870(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_590FD2;
    }
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x50, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43DBB0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_590FD2;
    }
	mov(mv, &ts->esi, x86::mem(ts->edi, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_590FD2;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_590FD2;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	shr(&ts->ecx, 0x15);
	and_(&ts->ecx, 0xFFFFFF01);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x5C, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	call(ts, mv, ts->esi);
	add(&ts->esp, 0x14);

loc_590FD2:
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edx);
	game::nullsub_12(ts, mv);
	add(&ts->esp, 0x8);

loc_590FDF:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_590FF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x44, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_591023;
    }
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x590C80);
	push(mv, &ts->esp, 0x1);
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x44, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_744410(ts, mv);
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_591028;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_58F2A0(ts, mv);

loc_591023:
	or_(&ts->eax, 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_591028:
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

} // namespace game 
