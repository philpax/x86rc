// clang-format off
// Disable unused labels warning
#pragma warning(disable: 4102)

#include "x86/insn.hpp"
#include "x86/thread_state.hpp"
#include "game/stubs.hpp"
#include "game/functions.hpp"

namespace game {

using namespace x86::insn;

void sub_4A0F90(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(ts->esp + 0x4, 1));
	sub(&ts->esp, 0x27C);
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4A0FFD;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x11C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A1097;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x88, 4));
	add(&ts->eax, 0x18);
	push(mv, &ts->esp, ts->eax);
	game::sub_582B60(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_582BB0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_49E870(ts, mv);
	mov(&ts->esi, ts->eax);
	mov(&ts->ecx, 0x9F);
	mov(&ts->edi, 0x835FB8);
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));
	game::sub_582B60(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xF8, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x836014);
	push(mv, &ts->esp, ts->ecx);
	game::sub_740790(ts, mv);
	add(&ts->esp, 0x14);
	goto loc_4A1066;

loc_4A0FFD:
	mov(mv, &ts->edx, x86::mem(0x7F44B4, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A1031;
    }
	game::sub_582B60(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x835BF8, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xF8, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_740790(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4A108A;
    }

loc_4A1031:
	mov(mv, &ts->edx, x86::mem(0x835BF8, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	game::sub_4A0F40(ts, mv);
	mov(&ts->esi, ts->eax);
	mov(&ts->ecx, 0x9F);
	mov(&ts->edi, 0x835FB8);
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(0x835BF8, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x836014);
	game::sub_43DBD0(ts, mv);
	add(&ts->esp, 0x8);

loc_4A1066:
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x790210);
	game::sub_555EB0(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x27C);
	retn(mv, &ts->esp, 0x4);

loc_4A108A:
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_49E810(ts, mv);
	add(&ts->esp, 0x8);

loc_4A1097:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x27C);
	retn(mv, &ts->esp, 0x4);
}

void sub_4A10B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	sub(&ts->esp, 0x77C);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x114, 4));
	cmp(&ts->eflags, ts->eax, 0x4);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4A10D0;
    }
	jmp(x86::mem(0x4A12E0, 4));

loc_4A10D7:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x118, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->ebx + 0x54, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto def_4A10D0;
    }
	goto loc_4A10F0;

loc_4A10F0:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x118, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_582B60(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_582B90(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x294, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_49E870(ts, mv);
	mov(&ts->esi, ts->eax);
	mov(&ts->ecx, 0x9F);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x18, 4));
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x118, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x30, 4));
	add(&ts->esp, 0x8);
	inc(&ts->ecx);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ebx + 0x118, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4A1142;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x40, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A12C7;
    }

loc_4A1142:
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x118, 4));
	cmp(mv, &ts->eflags, ts->edx, x86::mem(ts->ebx + 0x54, 4));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4A10F0;
    }
	goto def_4A10D0;

loc_4A1152:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x118, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->ebx + 0x54, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto def_4A10D0;
    }
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x510, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	game::sub_4A0EF0(ts, mv);
	mov(&ts->esi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x118, 4));
	mov(&ts->ecx, 0x9F);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	inc(&ts->eax);
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));
	mov(mv, x86::mem(ts->ebx + 0x118, 4), ts->eax);
	goto loc_4A12C7;

loc_4A1190:
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x118, 4));
	cmp(mv, &ts->eflags, ts->ecx, x86::mem(ts->ebx + 0x54, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto def_4A10D0;
    }
	nop();

loc_4A11A0:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x118, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_582B60(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_582B90(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x294, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_49E870(ts, mv);
	mov(&ts->esi, ts->eax);
	mov(&ts->ecx, 0x9F);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x18, 4));
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x118, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x48, 4));
	add(&ts->esp, 0x8);
	inc(&ts->ecx);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ebx + 0x118, 4), ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4A12C7;
    }
	mov(&ts->eax, ts->ecx);
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->ebx + 0x54, 4));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4A11A0;
    }
	goto def_4A10D0;

loc_4A11F6:
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x118, 4));
	cmp(mv, &ts->eflags, ts->ecx, x86::mem(ts->ebx + 0x54, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto def_4A10D0;
    }
	goto loc_4A1210;

loc_4A1210:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x118, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_582B60(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_582B90(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x294, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_49E870(ts, mv);
	mov(&ts->esi, ts->eax);
	mov(&ts->ecx, 0x9F);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x18, 4));
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x118, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x38, 4));
	add(&ts->esp, 0x8);
	inc(&ts->ecx);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ebx + 0x118, 4), ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4A12C7;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x2C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4A12C7;
    }
	mov(&ts->eax, ts->ecx);
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->ebx + 0x54, 4));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4A1210;
    }
	goto def_4A10D0;

loc_4A1267:
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x118, 4));
	cmp(mv, &ts->eflags, ts->ecx, x86::mem(ts->ebx + 0x54, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto def_4A10D0;
    }

loc_4A1272:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x118, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_582B60(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_582B90(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x294, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_49E870(ts, mv);
	mov(&ts->esi, ts->eax);
	mov(&ts->ecx, 0x9F);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x18, 4));
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x118, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x2C, 4));
	add(&ts->esp, 0x8);
	inc(&ts->ecx);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ebx + 0x118, 4), ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4A12C7;
    }
	mov(&ts->eax, ts->ecx);
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->ebx + 0x54, 4));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4A1272;
    }

def_4A10D0:
	mov(mv, x86::mem(ts->esp + 0x68, 4), 0x0);

loc_4A12C7:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	lea(mv, &ts->esi, x86::mem(ts->esp + 0x10, 4));
	mov(&ts->edi, ts->eax);
	mov(&ts->ecx, 0x9F);
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_4A1300(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x114, 4));
	cmp(&ts->eflags, ts->eax, 0x4);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4A130C;
    }
	push(mv, &ts->esp, ts->esi);
	jmp(x86::mem(0x4A1360, 4));

loc_4A1313:
	push(mv, &ts->esp, 0xB204477C);
	goto loc_4A1334;

loc_4A131A:
	push(mv, &ts->esp, 0x8CAC9D6A);
	goto loc_4A1334;

loc_4A1321:
	push(mv, &ts->esp, 0x7087CE45);
	goto loc_4A1334;

loc_4A1328:
	push(mv, &ts->esp, 0xB1B1FC4);
	goto loc_4A1334;

loc_4A132F:
	push(mv, &ts->esp, 0xF155AB34);

loc_4A1334:
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x4, 4));
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, 0x79022C);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);

def_4A130C:
	retn(mv, &ts->esp);
}

void sub_4A1380(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	inc(&ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x78FEBC);
	mov(&ts->esi, ts->ecx);
	game::sub_50B9C0(ts, mv);
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x78FEBC);
	mov(&ts->edi, ts->eax);
	game::sub_50B9C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	game::sub_537A60(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x6C, 4));
	add(&ts->esp, 0x24);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A13FC;
    }
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x79027C);
	game::sub_50B9C0(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebp);
	game::sub_537A60(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C990(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0x14);

loc_4A13FC:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x38, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A1438;
    }
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x790268);
	game::sub_50B9C0(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebp);
	game::sub_537A60(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C990(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0x14);

loc_4A1438:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x790258);
	game::sub_50B9C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x48, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(&ts->ebx, 0x1);
	push(mv, &ts->esp, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4A1460;
    }
	push(mv, &ts->esp, 0x78FFD0);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	goto loc_4A146A;

loc_4A1460:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x78FC44);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);

loc_4A146A:
	game::sub_537C00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x70, 4));
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A14B4;
    }
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x79024C);
	game::sub_50B9C0(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebp);
	game::sub_537A60(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C990(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0x14);
	mov(mv, x86::mem(ts->esi + 0x110, 1), ts->bl);

loc_4A14B4:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x34, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A14F0;
    }
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x79023C);
	game::sub_50B9C0(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebp);
	game::sub_537A60(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C990(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0x14);

loc_4A14F0:
	mov(mv, &ts->al, x86::mem(0x8500CB, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4A15C8;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A1536;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x41E866A2);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A60(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C990(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0x14);
	mov(mv, x86::mem(ts->esi + 0x125, 1), ts->bl);

loc_4A1536:
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x68, 4), 0x400000);
	if (ts->eflags.zero) {
        goto loc_4A1579;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x54, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4A1579;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x41E866A2);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A60(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C990(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0x14);
	mov(mv, x86::mem(ts->esi + 0x125, 1), ts->bl);

loc_4A1579:
	cmp(mv, &ts->eflags, x86::mem(0x836378, 4), 0x2);
	if (!ts->eflags.zero) {
        goto loc_4A15C8;
    }
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x74, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_582B60(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_582D00(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4A15C8;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xA77341D5);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A60(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C990(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0x14);
	mov(mv, x86::mem(ts->esi + 0x125, 1), ts->bl);

loc_4A15C8:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x280);
}

void sub_4A15D0(x86::thread_state* ts, x86::memory_view* mv) {
	game::sub_50CED0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DBB0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x1);
	setnl(ts->eflags, &ts->al);
	retn(mv, &ts->esp);
}

void sub_4A15F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x5C, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->esi, ts->ecx);
	game::sub_73EB40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x38, 4));
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4A160F;
    }
	push(mv, &ts->esp, 0x221E85B4);
	goto loc_4A1668;

loc_4A160F:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x3C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4A163B;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x679FD4E9);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x79028C);
	push(mv, &ts->esp, ts->esi);
	game::sub_542600(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x27C);

loc_4A163B:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A1663;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x8D3EE1AF);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x79028C);
	push(mv, &ts->esp, ts->esi);
	game::sub_542600(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x27C);

loc_4A1663:
	push(mv, &ts->esp, 0x2D32A79);

loc_4A1668:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x79028C);
	push(mv, &ts->esp, ts->esi);
	game::sub_542600(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x27C);
}

void sub_4A1690(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0x911AB364);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4A16DF;
    }
	cmp(&ts->eflags, ts->eax, 0xC9D30688);
	if (ts->eflags.zero) {
        goto loc_4A16DF;
    }
	cmp(&ts->eflags, ts->eax, 0xDA5B8712);
	if (!ts->eflags.zero) {
        goto loc_4A16FA;
    }
	game::sub_50CED0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x836390);
	game::sub_43DBD0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_5379A0(ts, mv);
	push(mv, &ts->esp, 0x7902A0);
	push(mv, &ts->esp, 0x1C6D9C35);
	mov(mv, x86::mem(ts->esi + 0x54, 1), 0x1);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x14);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4A16DF:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_5379A0(ts, mv);
	push(mv, &ts->esp, 0x7902A0);
	push(mv, &ts->esp, 0xC9D30688);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0xC);

loc_4A16FA:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);
}

void sub_4A1700(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	sub(&ts->esp, 0x100);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x108, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_4400D0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x7902C8);
	push(mv, &ts->esp, ts->eax);
	game::sub_558310(ts, mv);
	add(&ts->esp, 0x18);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x100);
	retn(mv, &ts->esp, 0x8);
}

void sub_4A1750(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A176A;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), 0x0);

loc_4A176A:
	mov(mv, &ts->al, x86::mem(ts->esp + 0x8, 1));
	test(&ts->eflags, ts->al, ts->al);
	pop(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero) {
        goto locret_4A17A2;
    }
	game::sub_582B60(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0xFC, 4), 0x1);
	if (!ts->eflags.zero) {
        goto locret_4A17A2;
    }
	game::sub_582B60(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xF8, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto locret_4A17A2;
    }
	game::sub_582B60(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xF8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_73EA00(ts, mv);
	pop(mv, &ts->esp, ts->ecx);

locret_4A17A2:
	retn(mv, &ts->esp, 0x4);
}

void sub_4A17B0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4A17C5;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	game::sub_54EB60(ts, mv);
	goto loc_4A17CF;

loc_4A17C5:
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4A17CF;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	game::sub_54EB40(ts, mv);

loc_4A17CF:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x80, 4));
	add(&ts->esi, 0x54);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4A17EA;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, ts->eax);
	game::sub_51EE80(ts, mv);

loc_4A17EA:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_538500(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4A1800(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	sub(&ts->esp, 0x104);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x4C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4A182C;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->ebx + 0x4C, 4), 0x0);

loc_4A182C:
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 1), 0x0);
	mov(&ts->ecx, 0x3F);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x11, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4A1998;
    }
	game::sub_58F6D0(ts, mv);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	game::sub_43BE80(ts, mv);
	mov(&ts->esi, ts->eax);
	dec(&ts->esi);
	if (ts->eflags.sign) {
        goto loc_4A189E;
    }

loc_4A1860:
	push(mv, &ts->esp, ts->esi);
	game::sub_58F6D0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_5847F0(ts, mv);
	mov(&ts->edi, ts->eax);
	lea(mv, &ts->ebx, x86::mem(ts->edi + 0xC, 4));
	push(mv, &ts->esp, 0x836014);
	push(mv, &ts->esp, ts->ebx);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4A1897;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x8, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_58F6D0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_58D150(ts, mv);

loc_4A1897:
	dec(&ts->esi);
	if (!ts->eflags.sign) {
        goto loc_4A1860;
    }
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0xC, 4));

loc_4A189E:
	game::sub_58F6D0(ts, mv);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	game::sub_43BE80(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4A18C8;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1);
	game::sub_50CEE0(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x9757A0C0);
	game::sub_55DDE0(ts, mv);
	add(&ts->esp, 0x10);

loc_4A18C8:
	push(mv, &ts->esp, 0x836014);
	game::sub_582B60(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_582D00(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4A1913;
    }
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(0x836378, 4), 0x0);
	game::sub_582B60(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_502770(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_73E380(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x2);
	game::sub_50CEE0(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x9757A0C0);
	game::sub_55DDE0(ts, mv);
	add(&ts->esp, 0x18);

loc_4A1913:
	mov(mv, &ts->ecx, x86::mem(0x836010, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	game::sub_73EE20(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x836014);
	push(mv, &ts->esp, 0x836014);
	push(mv, &ts->esp, 0x10600AA4);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, 0x100);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x4, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x34DC1BEC);
	push(mv, &ts->esp, 0x34DC1BEC);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->ecx);
	game::sub_558540(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	game::sub_50CEE0(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x9757A0C0);
	game::sub_55DDE0(ts, mv);
	add(&ts->esp, 0x3C);
	mov(mv, x86::mem(0x83637C, 4), 0x1);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x8);

loc_4A1998:
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFB);
	if (!ts->eflags.zero) {
        goto loc_4A19D1;
    }
	mov(mv, &ts->ebx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0xD7A26411);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x34DC1BEC);
	push(mv, &ts->esp, 0x34DC1BEC);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->ebx);
	game::sub_558540(ts, mv);
	add(&ts->esp, 0x1C);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x8);

loc_4A19D1:
	mov(mv, &ts->cl, x86::mem(ts->ebx + 0x10E, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_4A19E0;
    }
	cmp(&ts->eflags, ts->eax, 0xFFFFFF94);
	if (ts->eflags.zero) {
        goto loc_4A19ED;
    }

loc_4A19E0:
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_49E810(ts, mv);
	add(&ts->esp, 0x8);

loc_4A19ED:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x8);
}

void sub_4A1A00(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	sub(&ts->esp, 0x80);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4A1A27;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), 0x0);

loc_4A1A27:
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8, 1), 0x0);
	mov(&ts->ecx, 0x1F);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x9, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4A1A9C;
    }
	push(mv, &ts->esp, 0x836014);
	push(mv, &ts->esp, 0xA4B092EE);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, 0x80);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x34DC1BEC);
	push(mv, &ts->esp, 0x34DC1BEC);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->edx);
	game::sub_558540(ts, mv);
	add(&ts->esp, 0x28);
	mov(mv, x86::mem(0x83637C, 4), 0x1);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x8);

loc_4A1A9C:
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x10E, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_4A1AAB;
    }
	cmp(&ts->eflags, ts->eax, 0xFFFFFF94);
	if (ts->eflags.zero) {
        goto loc_4A1AB8;
    }

loc_4A1AAB:
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_49E810(ts, mv);
	add(&ts->esp, 0x8);

loc_4A1AB8:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x8);
}

void sub_4A1AC0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A1ADA;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), 0x0);

loc_4A1ADA:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4A1B06;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F5B8);
	mov(mv, x86::mem(0x83637C, 4), 0x1);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	goto loc_4A1B22;

loc_4A1B06:
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x10E, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_4A1B15;
    }
	cmp(&ts->eflags, ts->eax, 0xFFFFFF94);
	if (ts->eflags.zero) {
        goto loc_4A1B22;
    }

loc_4A1B15:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_49E810(ts, mv);
	add(&ts->esp, 0x8);

loc_4A1B22:
	game::sub_582B60(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0xF8, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x836014);
	push(mv, &ts->esp, ts->edx);
	game::sub_73EF70(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4A1B50(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	push(mv, &ts->esp, 0xF8BCEE28);
	push(mv, &ts->esp, 0x2);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x2);
	push(mv, &ts->esp, 0x3);
	push(mv, &ts->esp, 0xA);
	push(mv, &ts->esp, 0x4F876B6F);
	push(mv, &ts->esp, 0x2C119933);
	push(mv, &ts->esp, 0x308DB484);
	push(mv, &ts->esp, 0x7902D4);
	push(mv, &ts->esp, ts->eax);
	game::sub_558A20(ts, mv);
	add(&ts->esp, 0x2C);
	retn(mv, &ts->esp);
}

void sub_4A1B80(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A1B9A;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), 0x0);

loc_4A1B9A:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A1BC2;
    }
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x10E, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_4A1BB1;
    }
	cmp(&ts->eflags, ts->eax, 0xFFFFFF94);
	if (ts->eflags.zero) {
        goto loc_4A1BE4;
    }

loc_4A1BB1:
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_49E810(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);

loc_4A1BC2:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F5B8);
	mov(mv, x86::mem(0x83637C, 4), 0x1);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);

loc_4A1BE4:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4A1BF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A1C0A;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), 0x0);

loc_4A1C0A:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4A1C38;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F5B8);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	mov(mv, x86::mem(0x83637C, 4), 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);

loc_4A1C38:
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x10E, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_4A1C47;
    }
	cmp(&ts->eflags, ts->eax, 0xFFFFFF94);
	if (ts->eflags.zero) {
        goto loc_4A1C54;
    }

loc_4A1C47:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_49E810(ts, mv);
	add(&ts->esp, 0x8);

loc_4A1C54:
	mov(mv, x86::mem(0x83637C, 4), 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4A1C70(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	sub(&ts->esp, 0x504);
	mov(mv, &ts->eax, x86::mem(0x836010, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebx, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x298, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_49E870(ts, mv);
	mov(&ts->ecx, 0x9F);
	mov(&ts->esi, ts->eax);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x18, 4));
	add(&ts->esp, 0x8);
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));
	xor_(&ts->esi, ts->esi);

loc_4A1CA6:
	push(mv, &ts->esp, ts->esi);
	game::sub_58F6D0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_5847F0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A1CCE;
    }
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x6C, 4));
	push(mv, &ts->esp, ts->edx);
	add(&ts->eax, 0xC);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, 0x5);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4A1CA6;
    }

loc_4A1CCE:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7902DC);
	game::sub_555EB0(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x8667DC, 4), 0x0);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_4A1D00(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	cmp(mv, &ts->eflags, x86::mem(0x8500CB, 1), 0x1);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4A1D14;
    }

loc_4A1D0D:
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);

loc_4A1D14:
	mov(mv, &ts->eax, x86::mem(0x835FE8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4A1D0D;
    }
	mov(mv, &ts->eax, x86::mem(0x835FE0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x7, 1), 0x0);
	if (!ts->eflags.zero) {
        goto loc_4A1D0D;
    }
	mov(mv, &ts->eax, x86::mem(0x7F44FC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A1D42;
    }
	mov(mv, x86::mem(ts->esp + 0x7, 1), 0x1);

loc_4A1D42:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x0);
	mov(&ts->bl, 0x1);
	game::sub_58F740(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->ecx, ts->eax);
	game::sub_582930(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A1D7B;
    }
	push(mv, &ts->esp, 0x0);
	game::sub_58F740(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->ecx, ts->eax);
	game::sub_582930(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x1BC, 4));
	cmp(mv, &ts->eflags, ts->ecx, x86::mem(ts->eax + 0x11C, 4));
	if (!ts->eflags.zero) {
        goto loc_4A1D7B;
    }
	xor_(&ts->bl, ts->bl);

loc_4A1D7B:
	mov(mv, &ts->al, x86::mem(ts->esp + 0xB, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4A1E30;
    }
	test(mv, &ts->eflags, x86::mem(0x836008, 4), 0x20000);
	if (!ts->eflags.zero) {
        goto loc_4A1DF5;
    }
	mov(mv, &ts->eax, x86::mem(0x835FC0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4A1DF5;
    }
	mov(mv, &ts->eax, x86::mem(0x835FF4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A1DED;
    }
	mov(mv, &ts->eax, x86::mem(0x835FBC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4A1DED;
    }
	test(&ts->eflags, ts->bl, ts->bl);
	if (ts->eflags.zero) {
        goto loc_4A1DED;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x790300);
	game::sub_50B9C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x4B4E3889);
	push(mv, &ts->esp, ts->esi);
	game::sub_495460(ts, mv);
	push(mv, &ts->esp, 0x3438B351);
	game::sub_4FFA80(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C960(ts, mv);
	add(&ts->esp, 0x20);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);

loc_4A1DED:
	pop(mv, &ts->esp, ts->ebx);
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);

loc_4A1DF5:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x7902F0);
	game::sub_50B9C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x4B4E3889);
	push(mv, &ts->esp, ts->esi);
	game::sub_495460(ts, mv);
	push(mv, &ts->esp, 0x5632D96D);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C960(ts, mv);
	add(&ts->esp, 0x20);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);

loc_4A1E30:
	mov(mv, &ts->eax, x86::mem(0x836008, 4));
	and_(&ts->eax, 0x400000);
	if (!ts->eflags.zero) {
        goto loc_4A1E7B;
    }
	mov(mv, &ts->ecx, x86::mem(0x835FBC, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4A1E7B;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x6729A51E);
	push(mv, &ts->esp, 0x4B4E3889);
	push(mv, &ts->esp, ts->ecx);
	game::sub_495460(ts, mv);
	push(mv, &ts->esp, 0x6729A51E);
	game::sub_4FFA80(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C960(ts, mv);
	add(&ts->esp, 0x1C);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);

loc_4A1E7B:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A1E8C;
    }
	mov(mv, &ts->eax, x86::mem(0x835FF4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4A1DED;
    }

loc_4A1E8C:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xC48A4103);
	push(mv, &ts->esp, 0x4B4E3889);
	push(mv, &ts->esp, ts->eax);
	game::sub_495460(ts, mv);
	push(mv, &ts->esp, 0xC48A4103);
	game::sub_4FFA80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	add(&ts->esp, 0x1C);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);
}

void sub_4A1ED0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A1EEA;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), 0x0);

loc_4A1EEA:
	mov(mv, &ts->eax, x86::mem(0x7F44FC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xF9E94D58);
	game::sub_55DDA0(ts, mv);
	mov(&ts->eax, 0x1);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x104, 4), ts->eax);
	push(mv, &ts->esp, 0x78F5B8);
	mov(mv, x86::mem(0x83637C, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4A1F30(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0xFFFFFF94);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->ecx + 0x1380, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_4A1FCA;
    }
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFB);
	if (!ts->eflags.zero) {
        goto loc_4A1F64;
    }
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x4, 4));
	push(mv, &ts->esp, 0x205B2BF8);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x34DC1BEC);
	push(mv, &ts->esp, 0x34DC1BEC);
	goto loc_4A1F7D;

loc_4A1F64:
	cmp(&ts->eflags, ts->eax, 0x72617465);
	if (!ts->eflags.zero) {
        goto loc_4A1F94;
    }
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x4, 4));
	push(mv, &ts->esp, 0xDF834843);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0xFFFFFFFF);

loc_4A1F7D:
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->esi);
	game::sub_558540(ts, mv);
	add(&ts->esp, 0x1C);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);

loc_4A1F94:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A1FA9;
    }
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_49E810(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);

loc_4A1FA9:
	mov(mv, &ts->eax, x86::mem(0x835FE0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A1FCA;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F5B8);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);

loc_4A1FCA:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4A1FD0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x168, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x1, 4));
	nop();

loc_4A1FE0:
	mov(mv, &ts->al, x86::mem(ts->edi, 1));
	inc(&ts->edi);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4A1FE0;
    }
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x14, 4));
	sub(&ts->edi, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->edi + (ts->ebx) + 0x1, 4));
	cmp(&ts->eflags, ts->ecx, 0x1000);
	mov(&ts->eax, ts->edx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4A202A;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_4A2000:
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 1), 0xA);
	if (ts->eflags.zero) {
        goto loc_4A200F;
    }

loc_4A2005:
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x1, 1));
	inc(&ts->eax);
	dec(&ts->edi);
	cmp(&ts->eflags, ts->cl, 0xA);
	if (!ts->eflags.zero) {
        goto loc_4A2005;
    }

loc_4A200F:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x117C, 4));
	inc(&ts->eax);
	dec(&ts->edi);
	dec(&ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x117C, 4), ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->ebx + (ts->edi) + 0x1, 4));
	cmp(&ts->eflags, ts->ecx, 0x1000);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4A2000;
    }

loc_4A202A:
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_4A2038;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_43DBD0(ts, mv);
	add(&ts->esp, 0x8);

loc_4A2038:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->edi, x86::mem(ts->edi + (ts->esi) + 0x168, 4));
	push(mv, &ts->esp, ts->edi);
	game::sub_43DC00(ts, mv);
	add(&ts->edi, ts->ebx);
	mov(mv, x86::mem(ts->edi, 1), 0xA);
	mov(mv, x86::mem(ts->edi + 0x1, 1), 0x0);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x117C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1178, 4));
	add(&ts->esp, 0xC);
	inc(&ts->edi);
	cmp(&ts->eflags, ts->eax, 0xC);
	mov(mv, x86::mem(ts->esi + 0x117C, 4), ts->edi);
	mov(&ts->ecx, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4A2083;
    }
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x1178, 4), ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4A2083;
    }
	mov(mv, x86::mem(ts->esi + 0x1178, 4), ts->ecx);

loc_4A2083:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4A2090(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_543D40(ts, mv);
	cmp(&ts->eflags, ts->edi, 0x911AB364);
	if (!ts->eflags.zero) {
        goto loc_4A20CA;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78F240);
	push(mv, &ts->esp, ts->eax);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);

loc_4A20CA:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);
}

void sub_4A20D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x16C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A216B;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4A2103;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x64, 4));
	game::sub_54EB60(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F568);
	push(mv, &ts->esp, 0x444969FD);
	push(mv, &ts->esp, ts->eax);
	goto loc_4A211D;

loc_4A2103:
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4A2125;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x64, 4));
	game::sub_54EB40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F568);
	push(mv, &ts->esp, 0x444969FE);
	push(mv, &ts->esp, ts->ecx);

loc_4A211D:
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);

loc_4A2125:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x90, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x64, 4));
	if (ts->eflags.zero) {
        goto loc_4A2141;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, ts->edx);
	game::sub_51EE80(ts, mv);

loc_4A2141:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->edi);
	game::sub_538500(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51F440(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x16C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x110, 4));
	game::sub_538080(ts, mv);
	pop(mv, &ts->esp, ts->edi);

loc_4A216B:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void std__ios_base___ios_base_void_(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7766FF);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x79030C);
	mov(mv, &ts->eax, x86::mem(0x7F44FC, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x3);
	game::sub_51CE80(ts, mv);
	mov(&ts->eax, 0x78F544);
	add(&ts->esp, 0x8);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0xDC, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x98, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	game::sub_510D40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_7766D0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

loc_7766D8:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x54);
	goto sub_4957A0;

loc_7766E3:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x98);
	goto sub_4957A0;

loc_7766F1:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0xDC);
	goto sub_4957A0;

SEH_4F2600:
	mov(&ts->eax, 0x7DEFE4);
	goto ___CxxFrameHandler;
}

void sub_4A21E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0xC98356BA);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4A226B;
    }
	if (ts->eflags.zero) {
        goto loc_4A223D;
    }
	cmp(&ts->eflags, ts->eax, 0x35F8620B);
	if (ts->eflags.zero) {
        goto loc_4A221E;
    }
	cmp(&ts->eflags, ts->eax, 0x911AB364);
	if (!ts->eflags.zero) {
        goto loc_4A2294;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F5B8);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4A221E:
	mov(mv, &ts->ecx, x86::mem(0x7F44FC, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FEF4);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4A223D:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x128, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4A2294;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_5379A0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x128, 1), 0x0);
	mov(mv, &ts->eax, x86::mem(0x7F44FC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x9);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4A226B:
	cmp(&ts->eflags, ts->eax, 0xE1FDE1D1);
	if (!ts->eflags.zero) {
        goto loc_4A2294;
    }
	mov(mv, &ts->ecx, x86::mem(0x7F44FC, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79031C);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x128, 1), 0x1);
	add(&ts->esp, 0x10);

loc_4A2294:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);
}

void sub_4A22A0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x30);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x54, 4));
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0xC);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x8, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x78F6A4);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x78F694);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0x78F688);
	mov(mv, x86::mem(ts->esp + 0x38, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x30, 4), 0x3F800000);
	mov(mv, x86::mem(ts->esp + 0x34, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x3C, 4), 0x42380000);
	call(ts, mv, x86::mem(ts->edx + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x98, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x98, 4));
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x78F674);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x78F660);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0x78F650);
	call(ts, mv, x86::mem(ts->edx + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xDC, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xDC, 4));
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x78F63C);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x78F62C);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0x78F61C);
	call(ts, mv, x86::mem(ts->edx + 0x8, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x30);
	retn(mv, &ts->esp);
}

void sub_4A24C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4A24D8;
    }
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x54, 4));
	game::sub_54EB60(ts, mv);
	goto loc_4A24E2;

loc_4A24D8:
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4A24E2;
    }
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x54, 4));
	game::sub_54EB40(ts, mv);

loc_4A24E2:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x78, 4));
	lea(mv, &ts->esi, x86::mem(ts->edi + 0x54, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_51F440(ts, mv);
	mov(mv, &ts->ebp, x86::mem(ts->edi + 0x4, 4));
	mov(&ts->ebx, ts->eax);
	mov(mv, &ts->eax, x86::mem(0x7F4524, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x790348);
	game::sub_50B9C0(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x2C, 4));
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4A2532;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, ts->edx);
	game::sub_51EE80(ts, mv);

loc_4A2532:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_538500(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x7);
	push(mv, &ts->esp, 0x7);
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x88, 4));
	game::sub_538080(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_4A2560(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A257A;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), 0x0);

loc_4A257A:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	if (ts->eflags.zero) {
        goto loc_4A258F;
    }
	push(mv, &ts->esp, 0x4984589);
	goto loc_4A2594;

loc_4A258F:
	push(mv, &ts->esp, 0xA19617BD);

loc_4A2594:
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x34DC1BEC);
	push(mv, &ts->esp, 0x34DC1BEC);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->esi);
	game::sub_558540(ts, mv);
	add(&ts->esp, 0x1C);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4A25C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x78, 4));
	lea(mv, &ts->esi, x86::mem(ts->edi + 0x54, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_51F440(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(&ts->ebx, ts->eax);
	game::sub_54EB80(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_51F440(ts, mv);
	cmp(&ts->eflags, ts->ebx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A2653;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_51F440(ts, mv);
	mov(mv, &ts->ebp, x86::mem(ts->edi + 0x4, 4));
	mov(&ts->ebx, ts->eax);
	mov(mv, &ts->eax, x86::mem(0x7F4524, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x790348);
	game::sub_50B9C0(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x2C, 4));
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->ecx, ts->ecx);
	pop(mv, &ts->esp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_4A263A;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, ts->edx);
	game::sub_51EE80(ts, mv);

loc_4A263A:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_538500(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x7);
	push(mv, &ts->esp, 0x7);
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x88, 4));
	game::sub_538080(ts, mv);

loc_4A2653:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x104, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_52D100(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4A2677;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x911AB364);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);

loc_4A2677:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_4A2680(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x160, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x20, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7903D4);
	push(mv, &ts->esp, ts->ecx);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_7420B0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x160, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(ts->esi + 0x5C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x20, 4));
	push(mv, &ts->esp, 0x7903CC);
	push(mv, &ts->esp, ts->eax);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_7420B0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x160, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x20, 4));
	push(mv, &ts->esp, 0x7903C4);
	push(mv, &ts->esp, ts->edx);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_7420B0(ts, mv);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->esi + 0x64, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x160, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x20, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7903BC);
	push(mv, &ts->esp, ts->ecx);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_7420B0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x160, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x1);
	mov(mv, x86::mem(ts->esi + 0x68, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x20, 4));
	push(mv, &ts->esp, 0x7903B4);
	push(mv, &ts->esp, ts->eax);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_7420B0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x160, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(ts->esi + 0x6C, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x20, 4));
	push(mv, &ts->esp, 0x7903AC);
	push(mv, &ts->esp, ts->edx);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_7420B0(ts, mv);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->esi + 0x70, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x160, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x20, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7903A4);
	push(mv, &ts->esp, ts->ecx);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_7420B0(ts, mv);
	add(&ts->esp, 0x8);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x160, 4));
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(ts->esi + 0x78, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x20, 4));
	push(mv, &ts->esp, 0x79039C);
	push(mv, &ts->esp, ts->eax);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_7420B0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x160, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(ts->esi + 0x7C, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x20, 4));
	push(mv, &ts->esp, 0x790394);
	push(mv, &ts->esp, ts->edx);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_7420B0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x160, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x79038C);
	mov(mv, x86::mem(ts->esi + 0x74, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x20, 4));
	push(mv, &ts->esp, 0x20);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x140, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x790380);
	push(mv, &ts->esp, ts->edx);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_742360(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x160, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x20, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x6);
	push(mv, &ts->esp, 0x790378);
	push(mv, &ts->esp, ts->ecx);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_7420B0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x160, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ebp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x20, 4));
	push(mv, &ts->esp, 0x790370);
	push(mv, &ts->esp, ts->eax);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_7420B0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x160, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	add(&ts->ecx, 0xC);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x790360);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->eax);
	xor_(&ts->ebx, ts->ebx);
	game::sub_542600(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x5C, 4));
	add(&ts->esp, 0x14);
	cmp(&ts->eflags, ts->eax, 0xA);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4A286E;
    }
	jmp(x86::mem(0x4A2B38, 4));

loc_4A2875:
	mov(&ts->ebx, 0x93FDEE74);
	goto def_4A286E;

loc_4A287C:
	mov(&ts->ebx, 0xDCB9F861);
	goto def_4A286E;

loc_4A2883:
	mov(&ts->ebx, 0x35102EDF);
	goto def_4A286E;

loc_4A288A:
	mov(&ts->ebx, 0xD7162CFA);
	goto def_4A286E;

loc_4A2891:
	mov(&ts->ebx, 0x30DA61E1);
	goto def_4A286E;

loc_4A2898:
	mov(&ts->ebx, 0x75F903F4);
	goto def_4A286E;

loc_4A289F:
	mov(&ts->ebx, 0x613D3106);

def_4A286E:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xFD143578);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7248670A);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x145890EE);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7248670B);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xFF1C4CFE);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7248670C);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x932538C3);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7248670D);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x40);
	push(mv, &ts->esp, 0x480E0F39);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7248670E);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0xCA49D8B);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x60, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x8);
	neg(&ts->eax);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0x58B0443D);
	add(&ts->eax, 0xE1F1271);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xCA49D8C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x64, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7845D4);
	push(mv, &ts->esp, 0xCA49D8D);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x68, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x18);
	neg(&ts->eax);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0x35F8CCA2);
	add(&ts->eax, 0x88576CFF);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xCA49D8E);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	neg(&ts->eax);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0x4D2C2);
	add(&ts->eax, 0xFABFC6DC);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xCA49D8F);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x70, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x8);
	neg(&ts->eax);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0x35F8CCA2);
	add(&ts->eax, 0x88576CFF);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xCA49D90);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x5C, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, 0x8);
	if (!ts->eflags.zero) {
        goto loc_4A2AD1;
    }
	push(mv, &ts->esp, 0x81CAA8E6);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x72486710);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xFE407A18);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x72486711);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x20);
	cmp(&ts->eflags, ts->ebp, 0x6);
	if (!ts->eflags.zero) {
        goto loc_4A2A65;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x2F8344EA);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xCA49D91);
	push(mv, &ts->esp, ts->edi);
	goto loc_4A2A7B;

loc_4A2A65:
	movsx(mv, &ts->edx, x86::mem(ts->ebp + 0x78DA98, 1));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, 0xCA49D91);
	push(mv, &ts->esp, ts->eax);

loc_4A2A7B:
	game::sub_537B80(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4A2AA9;
    }
	push(mv, &ts->esp, 0x53B157FC);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xCA49D92);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x10);
	goto loc_4A2B05;

loc_4A2AA9:
	push(mv, &ts->esp, 0x542110C3);
	game::sub_4FFA80(ts, mv);
	movsx(mv, &ts->ecx, x86::mem(ts->ebx + 0x78DAA0, 1));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x790358);
	push(mv, &ts->esp, 0xCA49D92);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x18);
	goto loc_4A2B05;

loc_4A2AD1:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x78, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x787ACC);
	push(mv, &ts->esp, 0xCA49D91);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x74, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7845D4);
	push(mv, &ts->esp, 0xCA49D92);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x24);

loc_4A2B05:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x60, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	if (ts->eflags.zero) {
        goto loc_4A2B16;
    }
	push(mv, &ts->esp, 0xA53035DD);
	goto loc_4A2B1B;

loc_4A2B16:
	push(mv, &ts->esp, 0xD157C200);

loc_4A2B1B:
	push(mv, &ts->esp, 0x57AD6797);
	push(mv, &ts->esp, ts->esi);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_4A2B70(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1A8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x83AD90);
	game::sub_503510(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4A2B90;
    }
	mov(&ts->edi, 0x783FE5);
	goto loc_4A2BC2;

loc_4A2B90:
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	mov(&ts->ecx, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	imul(&ts->eax, ts->eax, 0x890);
	add(mv, &ts->eax, x86::mem(0x8A1CCC, 4));
	if (!ts->eflags.zero) {
        goto loc_4A2BAC;
    }
	mov(&ts->edi, 0x783FE5);
	goto loc_4A2BC2;

loc_4A2BAC:
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x790400);
	game::sub_50B990(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0xC);
	mov(&ts->edi, ts->eax);

loc_4A2BC2:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x920, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x83AD90);
	game::sub_503510(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A2BEF;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	mov(&ts->ecx, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	imul(&ts->eax, ts->eax, 0x890);
	add(mv, &ts->eax, x86::mem(0x8A1CCC, 4));
	if (!ts->eflags.zero) {
        goto loc_4A2BF6;
    }

loc_4A2BEF:
	mov(&ts->eax, 0x783FE5);
	goto loc_4A2C0A;

loc_4A2BF6:
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x790400);
	game::sub_50B990(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0xC);

loc_4A2C0A:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x85215BC6);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1190B316);
	push(mv, &ts->esp, 0x43A743AA);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->esi);
	game::sub_558750(ts, mv);
	add(&ts->esp, 0x2C);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4A2C50(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0x9803F6E2);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4A2D2E;
    }
	if (ts->eflags.zero) {
        goto loc_4A2D02;
    }
	cmp(&ts->eflags, ts->eax, 0x1FAB5998);
	if (ts->eflags.zero) {
        goto loc_4A2CE6;
    }
	cmp(&ts->eflags, ts->eax, 0x35F8620B);
	if (ts->eflags.zero) {
        goto loc_4A2C9D;
    }
	cmp(&ts->eflags, ts->eax, 0x911AB364);
	if (!ts->eflags.zero) {
        goto loc_4A2D9F;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F5B8);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4A2C9D:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FEF4);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, 0x79040C);
	game::sub_537C00(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FEF4);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, 0x7902A0);
	game::sub_537C00(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FEF4);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, 0x790210);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x30);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4A2CE6:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F5B8);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4A2D02:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1E4, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_52D100(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4A2D9F;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x911AB364);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4A2D2E:
	cmp(&ts->eflags, ts->eax, 0xC98356BA);
	if (ts->eflags.zero) {
        goto loc_4A2D76;
    }
	cmp(&ts->eflags, ts->eax, 0xE1FDE1D1);
	if (!ts->eflags.zero) {
        goto loc_4A2D9F;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79031C);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, 0x790210);
	game::sub_537C00(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79031C);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, 0x79040C);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x20);
	mov(mv, x86::mem(ts->esi + 0x94, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4A2D76:
	game::sub_582B60(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_584F10(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x94, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4A2D9F;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_5379A0(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x94, 1), 0x0);

loc_4A2D9F:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);
}

void sub_4A2DB0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x30);
	mov(&ts->edx, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0xC);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x4, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x4, 4));
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->edx + 0x50, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x7900A8);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x790098);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x790084);
	mov(mv, x86::mem(ts->esp + 0x34, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), 0x3F800000);
	mov(mv, x86::mem(ts->esp + 0x30, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x38, 4), 0x42380000);
	call(ts, mv, x86::mem(ts->edx + 0x8, 4));
	pop(mv, &ts->esp, ts->edi);
	add(&ts->esp, 0x30);
	retn(mv, &ts->esp);
}

void sub_4A2E20(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0xC9D30688);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4A2EF2;
    }
	if (ts->eflags.zero) {
        goto loc_4A2ED4;
    }
	cmp(&ts->eflags, ts->eax, 0x911AB364);
	if (ts->eflags.zero) {
        goto loc_4A2ED4;
    }
	cmp(&ts->eflags, ts->eax, 0xC98356BA);
	if (!ts->eflags.zero) {
        goto loc_4A2FDD;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A2FDD;
    }
	cmp(&ts->eflags, ts->eax, 0x7FFFFFFF);
	if (ts->eflags.zero) {
        goto loc_4A2FDD;
    }
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x54, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8651AC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fcompp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4A2FDD;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x50, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x50, 4), 0x0);
	mov(mv, &ts->ecx, x86::mem(0x866770, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_743140(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7FBDDC);
	game::sub_43DBD0(ts, mv);
	mov(mv, x86::mem(0x7FBE04, 2), 0x26AC);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78F240);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esi + 0x54, 4), 0x0);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0x1C);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4A2ED4:
	push(mv, &ts->esp, 0x5);
	game::sub_50D180(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x790428);
	push(mv, &ts->esp, ts->eax);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4A2EF2:
	cmp(&ts->eflags, ts->eax, 0xDA5B8712);
	if (!ts->eflags.zero) {
        goto loc_4A2FDD;
    }
	push(mv, &ts->esp, 0x4);
	game::sub_50D180(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->ecx, ts->esi);
	game::sub_50CED0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x850080);
	game::sub_503230(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_50CED0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x850080);
	game::sub_503260(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_50CED0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x850080);
	game::sub_503290(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(0x8500C7, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_4A2FCA;
    }
	mov(&ts->ecx, 0x850080);
	game::sub_5031D0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x89CF48);
	game::sub_5FA300(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4A2F87;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xA8CD6FD3);
	push(mv, &ts->esp, 0x911AB364);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->ecx);
	game::sub_558610(ts, mv);
	add(&ts->esp, 0x14);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4A2F87:
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8651AC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7843E8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784264, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	game::__ftol2(ts, mv);
	push(mv, &ts->esp, 0xB13D6A9B);
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->eax);
	game::sub_558330(ts, mv);
	add(&ts->esp, 0xC);
	mov(mv, x86::mem(ts->esi + 0x50, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4A2FCA:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78F240);
	push(mv, &ts->esp, ts->edx);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);

loc_4A2FDD:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);
}

void sub_4A2FF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x1);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x78FFD0);
	push(mv, &ts->esp, 0x7902B8);
	push(mv, &ts->esp, ts->eax);
	game::sub_5426C0(ts, mv);
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xC);
	push(mv, &ts->esp, 0x22729437);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x818F0385);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x6);
	push(mv, &ts->esp, 0x5B9D88B9);
	mov(&ts->ecx, ts->esi);
	game::sub_555F80(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x22729437);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78FC4C);
	push(mv, &ts->esp, ts->esi);
	game::sub_542600(ts, mv);
	push(mv, &ts->esp, 0xD9DC2F12);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x14);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x850080);
	game::sub_503230(ts, mv);
	push(mv, &ts->esp, 0xD9DC2F12);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x850080);
	game::sub_503260(ts, mv);
	push(mv, &ts->esp, 0xD9DC2F12);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x850080);
	game::sub_503290(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4A30A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->ah, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	if (ts->eflags.zero) {
        goto loc_4A30BC;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);

loc_4A30BC:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->ah, 0x4);
	if (ts->eflags.zero) {
        goto loc_4A30F0;
    }
	cmp(&ts->eflags, ts->edi, 0x461A18EE);
	if (!ts->eflags.zero) {
        goto loc_4A30E0;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4A30E0:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);

loc_4A30F0:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4A3100(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(0x83651C, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(0x836514, 4), ts->eax);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(0x836524, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, x86::mem(0x836528, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	and_(&ts->eax, 0xF);
	cmp(&ts->eflags, ts->eax, 0x1);
	mov(mv, x86::mem(0x836518, 4), ts->esi);
	mov(mv, x86::mem(0x836530, 4), ts->edx);
	mov(mv, x86::mem(0x836534, 4), ts->ecx);
	mov(mv, x86::mem(0x836520, 4), 0x78F184);
	if (ts->eflags.zero) {
        goto loc_4A3171;
    }
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_4A3193;
    }
	cmp(&ts->eflags, ts->eax, 0x3);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4A3193;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78F184);
	push(mv, &ts->esp, ts->esi);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);
	goto loc_4A3193;

loc_4A3171:
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x96DDA9E6);
	game::sub_55DDA0(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x836520, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edx);
	game::sub_555EB0(ts, mv);
	add(&ts->esp, 0x18);

loc_4A3193:
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(0x83653C, 1), 0x0);
	pop(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero) {
        goto locret_4A31C1;
    }
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x6C, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto locret_4A31C1;
    }
	mov(mv, &ts->al, x86::mem(0x8384DC, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto locret_4A31C1;
    }
	mov(mv, x86::mem(0x83653C, 1), 0x1);
	goto sub_54E6B0;

locret_4A31C1:
	retn(mv, &ts->esp);
}

void sub_4A31D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, ts->eax);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->ecx, ts->eax);
	game::sub_5047E0(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x836514);
	game::sub_4A30A0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x836514, 4));
	and_(&ts->eax, 0xF);
	dec(&ts->eax);
	mov(&ts->ebx, 0x0);
	if (ts->eflags.zero) {
        goto loc_4A3234;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A321E;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4A3253;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax, 4));
	goto loc_4A3253;

loc_4A321E:
	mov(mv, &ts->ecx, x86::mem(0x83651C, 4));
	mov(mv, &ts->edx, x86::mem(0x836520, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_537980(ts, mv);
	goto loc_4A3250;

loc_4A3234:
	mov(mv, &ts->eax, x86::mem(0x83651C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x251BF83E);
	game::sub_55DDA0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x836520, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_5379A0(ts, mv);

loc_4A3250:
	add(&ts->esp, 0xC);

loc_4A3253:
	mov(mv, &ts->eax, x86::mem(0x836514, 4));
	test(&ts->eflags, ts->ah, 0x20);
	if (!ts->eflags.zero) {
        goto loc_4A32A2;
    }
	mov(mv, &ts->eax, x86::mem(0x836524, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4A3272;
    }
	mov(mv, &ts->edx, x86::mem(0x836528, 4));
	push(mv, &ts->esp, ts->edx);
	call(ts, mv, ts->eax);
	add(&ts->esp, 0x4);

loc_4A3272:
	mov(mv, x86::mem(0x836514, 4), ts->ebx);
	mov(mv, x86::mem(0x836520, 4), ts->ebx);
	mov(mv, x86::mem(0x83651C, 4), ts->ebx);
	mov(mv, x86::mem(0x836518, 4), ts->ebx);
	mov(mv, x86::mem(0x836524, 4), ts->ebx);
	mov(mv, x86::mem(0x836528, 4), ts->ebx);
	mov(mv, x86::mem(0x836530, 4), ts->ebx);
	mov(mv, x86::mem(0x836534, 4), ts->ebx);

loc_4A32A2:
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	mov(mv, x86::mem(0x83652C, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_4A32C2;
    }
	cmp(mv, &ts->eflags, x86::mem(0x83653C, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_4A32C2;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	goto sub_54E6A0;

loc_4A32C2:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_4A32D0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x836538, 4));
	retn(mv, &ts->esp);
}

void sub_4A3330(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x98, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A3397;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_5379A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79031C);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x14);
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, ts->eax);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->ecx, ts->eax);
	game::sub_5047E0(ts, mv);
	push(mv, &ts->esp, 0x790458);
	push(mv, &ts->esp, 0x911AB364);
	game::sub_55DDA0(ts, mv);
	push(mv, &ts->esp, 0x790444);
	push(mv, &ts->esp, 0x911AB364);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x10);

loc_4A3397:
	mov(mv, x86::mem(ts->esi + 0x98, 4), 0x0);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4A33B0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x8867412D);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_4A33D0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x64, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto def_4A33F7;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->edx, 0xC407210);
	if (!ts->eflags.zero) {
        goto loc_4A33EB;
    }
	mov(&ts->eax, 0x8);
	retn(mv, &ts->esp, 0x14);

loc_4A33EB:
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x8C, 4));
	dec(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0x3);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4A33F7;
    }
	jmp(x86::mem(0x4A344C, 4));

loc_4A33FE:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_50D210(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x14);

loc_4A340F:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_50D1F0(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x14);

loc_4A3420:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_50D1A0(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp, 0x14);

loc_4A3433:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_50D1D0(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x14);

def_4A33F7:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp, 0x14);
}

void sub_4A3460(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(ts->esp + 0x8, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4A353A;
    }
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x18, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4A3498;
    }
	mov(mv, &ts->ecx, x86::mem(0x78DFBC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_537AB0(ts, mv);
	add(&ts->esp, 0x10);

loc_4A3498:
	mov(mv, &ts->edx, x86::mem(0x78DFBC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edi, x86::mem(0x78DFBC, 4));
	push(mv, &ts->esp, 0x78F21C);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x78DFD4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ebx, x86::mem(0x78DFD4, 4));
	push(mv, &ts->esp, 0x78F21C);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebx, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x1C, 4));
	add(&ts->eax, 0x1C);
	and_(&ts->ecx, 0xFBFFFFFF);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->ebx, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x40);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->esi);
	game::sub_5379C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x1C, 4));
	add(&ts->esp, 0x8);
	add(&ts->eax, 0x1C);
	pop(mv, &ts->esp, ts->edi);
	and_(&ts->ecx, 0xFBFFFFFF);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0xC);

loc_4A353A:
	mov(mv, &ts->ecx, x86::mem(0x78DFBC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->edi, x86::mem(0x78DFBC, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x78DFD4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->ebx, x86::mem(0x78DFD4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x1C, 4));
	add(&ts->eax, 0x1C);
	or_(&ts->ecx, 0x4000000);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->ebx, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->esi);
	game::sub_5379C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x1C, 4));
	add(&ts->esp, 0x28);
	add(&ts->eax, 0x1C);
	pop(mv, &ts->esp, ts->edi);
	or_(&ts->ecx, 0x4000000);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0xC);
}

void sub_4A35C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x10, 4));
	test(&ts->eflags, ts->ebp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	mov(&ts->edi, 0x2);
	if (ts->eflags.zero) {
        goto loc_4A364E;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	game::sub_4A3460(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_4A3460(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_4A3460(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x3);
	mov(&ts->ecx, ts->esi);
	game::sub_4A3460(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x4);
	mov(&ts->ecx, ts->esi);
	game::sub_4A3460(ts, mv);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x5);
	mov(&ts->ecx, ts->esi);
	game::sub_4A3460(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->edi, 0x3);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->ecx, ts->eax);
	game::sub_5047E0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x8C, 4), 0x2);
	goto loc_4A375F;

loc_4A364E:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A36CE;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_4A3460(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_4A3460(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x2);
	mov(&ts->ecx, ts->esi);
	game::sub_4A3460(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x3);
	mov(&ts->ecx, ts->esi);
	game::sub_4A3460(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x4);
	mov(&ts->ecx, ts->esi);
	game::sub_4A3460(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x5);
	mov(&ts->ecx, ts->esi);
	game::sub_4A3460(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->edi, 0x1);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->ecx, ts->eax);
	game::sub_5047E0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x8C, 4), ts->edi);
	goto loc_4A375F;

loc_4A36CE:
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x10, 4));
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_4A375F;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_4A3460(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_4A3460(ts, mv);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x2);
	mov(&ts->ecx, ts->esi);
	game::sub_4A3460(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x3);
	mov(&ts->ecx, ts->esi);
	game::sub_4A3460(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x4);
	mov(&ts->ecx, ts->esi);
	game::sub_4A3460(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x5);
	mov(&ts->ecx, ts->esi);
	game::sub_4A3460(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->edi, 0x2);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->ecx, ts->eax);
	game::sub_5047E0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xB8A7C6CE);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->esi + 0x8C, 4), 0x3);

loc_4A375F:
	mov(mv, &ts->ecx, x86::mem(0x78DFBC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_52CEA0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x78DFBC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x78DFD4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x28);
	mov(mv, x86::mem(ts->esi + 0x64, 1), 0x1);
	mov(mv, &ts->eax, x86::mem(0x836514, 4));
	pop(mv, &ts->esp, ts->edi);
	and_(&ts->eax, 0xF0FFFFFF);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x836514, 4), ts->eax);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0xC);
}

void sub_4A37C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4A385B;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x50, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->eax);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0x8);
	xor_(&ts->esi, ts->esi);

loc_4A37E3:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x78DFBC, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x78DFD4, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x78DFBC, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x1C, 4));
	add(&ts->eax, 0x1C);
	or_(&ts->edx, 0x4000000);
	mov(mv, x86::mem(ts->eax, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x78DFD4, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x1C, 4));
	add(&ts->eax, 0x1C);
	or_(&ts->edx, 0x4000000);
	add(&ts->esi, 0x4);
	add(&ts->esp, 0x28);
	cmp(&ts->eflags, ts->esi, 0x18);
	mov(mv, x86::mem(ts->eax, 4), ts->edx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4A37E3;
    }
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp, 0x4);

loc_4A385B:
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x50, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_537AB0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x50, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x1C, 4));
	push(mv, &ts->esp, 0x1);
	or_(&ts->edx, 0x2);
	push(mv, &ts->esp, 0x790470);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->edx);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4A3890(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(0x836514, 4));
	push(mv, &ts->esp, ts->edi);
	and_(&ts->eax, 0xF000000);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	or_(&ts->esi, ts->eax);
	mov(mv, x86::mem(0x836514, 4), ts->esi);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x50, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x54, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x24, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x58, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x18);
	xor_(&ts->esi, ts->esi);
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_4A38E0:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x78DFC4, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x78DFDC, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x78DFC4, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x1C, 4));
	add(&ts->eax, 0x1C);
	or_(&ts->edx, 0x4000000);
	mov(mv, x86::mem(ts->eax, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x78DFDC, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x1C, 4));
	add(&ts->eax, 0x1C);
	or_(&ts->edx, 0x4000000);
	add(&ts->esi, 0x4);
	add(&ts->esp, 0x28);
	cmp(&ts->eflags, ts->esi, 0x10);
	mov(mv, x86::mem(ts->eax, 4), ts->edx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4A38E0;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->edi);
	game::sub_4A3460(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->edi);
	game::sub_4A3460(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, 0xB8A7C6CD);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, 0xB1000CC7);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0xB8A7C6CD);
	push(mv, &ts->esp, ts->edx);
	game::sub_52CEA0(ts, mv);
	add(&ts->esp, 0x28);
	mov(mv, x86::mem(ts->edi + 0x64, 1), 0x1);
	mov(mv, x86::mem(ts->edi + 0x8C, 4), 0x1);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);
}

void sub_4A39C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(0x836514, 4));
	and_(&ts->eax, 0xF000000);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	or_(&ts->edi, ts->eax);
	mov(mv, x86::mem(0x836514, 4), ts->edi);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x50, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xB8A7C6CE);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	xor_(&ts->edi, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_4A3A10:
	cmp(&ts->eflags, ts->edi, 0x2);
	if (!ts->eflags.zero) {
        goto loc_4A3A23;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_4A3460(ts, mv);
	goto loc_4A3A92;

loc_4A3A23:
	mov(mv, &ts->ecx, x86::mem(0x78DFBC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x78DFD4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x78DFBC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x1C, 4));
	add(&ts->eax, 0x1C);
	or_(&ts->ecx, 0x4000000);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x78DFD4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x1C, 4));
	add(&ts->eax, 0x1C);
	add(&ts->esp, 0x28);
	or_(&ts->ecx, 0x4000000);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);

loc_4A3A92:
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, 0x6);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4A3A10;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, 0xB1000CC8);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, 0xB8A7C6CE);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xB8A7C6CE);
	push(mv, &ts->esp, ts->ecx);
	game::sub_52CEA0(ts, mv);
	add(&ts->esp, 0x28);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x64, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);
}

void sub_4A3AE0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->edi, ts->ecx);
	game::sub_50C9E0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4A3BE5;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	cmp(&ts->eflags, ts->eax, 0xB8A7C6D1);
	if (!ts->eflags.zero) {
        goto loc_4A3B18;
    }
	mov(mv, &ts->eax, x86::mem(0x836498, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x4, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_4A3B63;
    }
	mov(mv, x86::mem(ts->eax + 0x60, 4), 0x3);
	goto loc_4A3B63;

loc_4A3B18:
	cmp(&ts->eflags, ts->eax, 0xB8A7C6CC);
	if (ts->eflags.zero) {
        goto loc_4A3B50;
    }
	cmp(&ts->eflags, ts->eax, 0xB8A7C6D0);
	if (ts->eflags.zero) {
        goto loc_4A3B50;
    }
	cmp(&ts->eflags, ts->eax, 0xB8A7C6CD);
	if (ts->eflags.zero) {
        goto loc_4A3B3B;
    }
	cmp(&ts->eflags, ts->eax, 0xB8A7C6CE);
	if (ts->eflags.zero) {
        goto loc_4A3B3B;
    }
	cmp(&ts->eflags, ts->eax, 0xB8A7C6CF);
	if (!ts->eflags.zero) {
        goto loc_4A3B63;
    }

loc_4A3B3B:
	mov(mv, &ts->eax, x86::mem(0x836498, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x4, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_4A3B63;
    }
	mov(mv, x86::mem(ts->eax + 0x60, 4), 0x1);
	goto loc_4A3B63;

loc_4A3B50:
	mov(mv, &ts->eax, x86::mem(0x836498, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x4, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_4A3B63;
    }
	mov(mv, x86::mem(ts->eax + 0x60, 4), 0x2);

loc_4A3B63:
	xor_(&ts->esi, ts->esi);

loc_4A3B65:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x78DFBC, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x78DFD4, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x78DFBC, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x1C, 4));
	add(&ts->eax, 0x1C);
	or_(&ts->edx, 0x4000000);
	mov(mv, x86::mem(ts->eax, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x78DFD4, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x1C, 4));
	add(&ts->eax, 0x1C);
	or_(&ts->edx, 0x4000000);
	add(&ts->esi, 0x4);
	add(&ts->esp, 0x28);
	cmp(&ts->eflags, ts->esi, 0x18);
	mov(mv, x86::mem(ts->eax, 4), ts->edx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4A3B65;
    }
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->edi + 0x64, 1), 0x0);
	game::sub_4A37C0(ts, mv);

loc_4A3BE5:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4A3C10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x4000000);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x2A9BA6F9);
	mov(&ts->esi, ts->ecx);
	game::sub_4A3890(ts, mv);
	test(mv, &ts->eflags, x86::mem(0x836514, 4), 0x10000);
	if (ts->eflags.zero) {
        goto loc_4A3C58;
    }
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x6C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x69B6213D);
	game::sub_4FFA80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4A3C58:
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x6C, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x2A9BA6F9);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x50, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4A3C80(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x50, 4));
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->eax);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0x8);
	xor_(&ts->esi, ts->esi);
	goto loc_4A3CA0;

loc_4A3CA0:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x78DFBC, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x78DFD4, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x78DFBC, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x1C, 4));
	add(&ts->eax, 0x1C);
	or_(&ts->edx, 0x4000000);
	mov(mv, x86::mem(ts->eax, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x78DFD4, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x1C, 4));
	add(&ts->eax, 0x1C);
	or_(&ts->edx, 0x4000000);
	add(&ts->esi, 0x4);
	add(&ts->esp, 0x28);
	cmp(&ts->eflags, ts->esi, 0x18);
	mov(mv, x86::mem(ts->eax, 4), ts->edx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4A3CA0;
    }
	mov(mv, x86::mem(ts->edi + 0x64, 1), 0x0);
	mov(mv, x86::mem(ts->edi + 0x8C, 4), 0x0);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4A3D30(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0x78F170);
	push(mv, &ts->esp, 0xD8692111);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_4A3D50(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(0x850078, 4));
	push(mv, &ts->esp, ts->ebx);
	xor_(&ts->eax, ts->eax);
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->edx, 0x4);
	setz(ts->eflags, &ts->al);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->esi, ts->esi);
	inc(&ts->eax);
	mov(&ts->edi, ts->eax);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4A3D87;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_4A3D70:
	mov(mv, &ts->eax, x86::mem(0x83A9D8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50D2D0(ts, mv);
	add(&ts->esp, 0x4);
	or_(&ts->ebx, ts->eax);
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4A3D70;
    }

loc_4A3D87:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537950(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_4A3DA0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x1C, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FC44);
	mov(mv, x86::mem(ts->ecx + 0x20, 1), 0x1);
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_5426C0(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4A3DC0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->ecx, 0x85AD40);
	game::sub_54CA40(ts, mv);
	push(mv, &ts->esp, 0x78F5A4);
	game::sub_50C8D0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x15);
	game::sub_5F41E0(ts, mv);
	retn(mv, &ts->esp);
}

void sub_4A3DF0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->ecx, 0x85AD40);
	game::sub_513950(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xB);
	game::sub_5F41E0(ts, mv);
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto locret_4A3E27;
    }
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379A0(ts, mv);
	pop(mv, &ts->esp, ts->ecx);

locret_4A3E27:
	retn(mv, &ts->esp);
}

void sub_4A3E30(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x40);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x85AD40);
	game::sub_54C9D0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4A3E5F;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_53D7A0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x40);
	retn(mv, &ts->esp);

loc_4A3E5F:
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xB);
	game::sub_5F41E0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x40);
	retn(mv, &ts->esp);
}

void sub_4A3E80(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x1);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4A3EA0;
    }
	mov(&ts->ecx, 0x85AD40);
	game::sub_54CA40(ts, mv);
	mov(&ts->ecx, 0x85AD40);
	game::sub_5139C0(ts, mv);

loc_4A3EA0:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_50B8C0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, 0x83A9D0);
	game::sub_502FF0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C8D0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x15);
	game::sub_5F41E0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4A3EE0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A3EF3;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);

loc_4A3EF3:
	mov(mv, x86::mem(ts->esi + 0x58, 4), 0x0);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4A3F00(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0x911AB364);
	if (ts->eflags.zero) {
        goto loc_4A3F2B;
    }
	cmp(&ts->eflags, ts->eax, 0xC519BFC0);
	if (ts->eflags.zero) {
        goto loc_4A3F23;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_50D230(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x14);

loc_4A3F23:
	mov(&ts->eax, 0x8);
	retn(mv, &ts->esp, 0x14);

loc_4A3F2B:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp, 0x14);
}

void sub_4A3F30(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	cmp(&ts->eflags, ts->eax, 0x8);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4A3FDD;
    }
	cmp(&ts->eflags, ts->eax, 0x200);
	if (ts->eflags.zero) {
        goto loc_4A3FDD;
    }
	mov(mv, &ts->al, x86::mem(0x89E7D9, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4A3FEF;
    }
	mov(mv, &ts->eax, x86::mem(0x890104, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4A3FEF;
    }
	mov(mv, &ts->al, x86::mem(0x89E7E6, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4A4017;
    }
	mov(mv, &ts->al, x86::mem(0x89E7D8, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4A3F89;
    }
	mov(mv, &ts->eax, x86::mem(0x890108, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A4017;
    }

loc_4A3F89:
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xF77E6402);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7904DC);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x7904CC);
	game::sub_50B990(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_4954E0(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x7904BC);
	game::sub_50B990(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_4954E0(ts, mv);
	add(&ts->esp, 0x24);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4A3FDD:
	mov(mv, &ts->al, x86::mem(0x89E7D9, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4A3FEF;
    }
	mov(mv, &ts->eax, x86::mem(0x890104, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A4017;
    }

loc_4A3FEF:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xC03F9F19);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7904BC);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0xC);

loc_4A4017:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4A4020(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x20);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F00F0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x30, 4));
	if (ts->eflags.zero) {
        goto loc_4A40C5;
    }
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, &ts->eax, x86::mem(0x850088, 4));
	if (!ts->eflags.zero) {
        goto loc_4A4055;
    }
	cmp(&ts->eflags, ts->eax, 0x9);
	if (!ts->eflags.zero) {
        goto loc_4A4055;
    }
	mov(mv, x86::mem(ts->esp + 0x8, 1), 0x0);
	goto loc_4A40E0;

loc_4A4055:
	cmp(&ts->eflags, ts->eax, 0x2);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x2C, 4));
	if (!ts->eflags.zero) {
        goto loc_4A409B;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0x8);
	if (ts->eflags.zero) {
        goto loc_4A406B;
    }
	cmp(&ts->eflags, ts->eax, 0x9);
	if (!ts->eflags.zero) {
        goto loc_4A409B;
    }

loc_4A406B:
	xor_(&ts->ecx, ts->ecx);
	cmp(&ts->eflags, ts->eax, 0x8);
	setnz(ts->eflags, &ts->cl);
	push(mv, &ts->esp, 0x1F);
	dec(&ts->ecx);
	and_(&ts->ecx, 0x4A2F11DF);
	add(&ts->ecx, 0xB7B75185);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_43DC00(ts, mv);
	add(&ts->esp, 0xC);
	goto loc_4A40E0;

loc_4A409B:
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x8, 4), 0xC);
	if (!ts->eflags.zero) {
        goto loc_4A40C0;
    }
	push(mv, &ts->esp, 0x1F);
	push(mv, &ts->esp, 0xA7DB717F);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43DC00(ts, mv);
	add(&ts->esp, 0xC);
	goto loc_4A40E0;

loc_4A40C0:
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0xC, 4));
	goto loc_4A40CC;

loc_4A40C5:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x2C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));

loc_4A40CC:
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(ts->esp + 0x30, 4), ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_577240(ts, mv);

loc_4A40E0:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x7904EC);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp, 0x8);
}

void sub_4A4110(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x20);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x30, 4));
	cmp(&ts->eflags, ts->edi, 0x1);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4A4141;
    }
	push(mv, &ts->esp, 0x61C9B7A2);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C960(ts, mv);
	add(&ts->esp, 0x14);
	goto loc_4A4164;

loc_4A4141:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x2C, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0xC, 4));
	push(mv, &ts->esp, 0x2);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	sub(&ts->eax, ts->edx);
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x38, 4));
	mov(mv, x86::mem(ts->esp + 0x38, 4), ts->eax);
	game::sub_577240(ts, mv);

loc_4A4164:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x7904EC);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp, 0x8);
}

void sub_4A41A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_4A4238;
    }
	push(mv, &ts->esp, ts->ebx);
	sub(&ts->ebp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->esi, x86::mem(ts->eax + 0x1, 4));
	inc(&ts->ebp);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_4A41C0:
	mov(mv, &ts->ebx, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x79051C);
	game::sub_50B990(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x79050C);
	game::sub_50B990(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x790500);
	game::sub_50B990(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x7904EC);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x44);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0xC);
	inc(&ts->esi);
	dec(&ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_4A41C0;
    }
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);

loc_4A4238:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x8);
}

void sub_4A4240(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(0x8900AC, 4));
	mov(&ts->ecx, 0x85BA64);
	game::sub_5330D0(ts, mv);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	game::__ftol2(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x7845D4);
	push(mv, &ts->esp, 0x18D97A23);
	push(mv, &ts->esp, ts->eax);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x10);
	mov(&ts->ecx, 0x85AD40);
	game::sub_532E50(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7845D4);
	push(mv, &ts->esp, 0x18D97A24);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x10);
	mov(&ts->ecx, ts->edi);
	game::sub_5F41B0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, 0xEB406FEC);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537B80(ts, mv);
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x14);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4A42DE;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_555F10(ts, mv);
	add(&ts->esp, 0x10);

loc_4A42DE:
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	game::sub_54E6A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_54E6E0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_4A4300(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	game::sub_52D800(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x3C, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ecx);
	game::sub_51D170(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->edi);
	game::sub_51D2D0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x48, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x30, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->edx);
	game::sub_51D070(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x28, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_51D380(ts, mv);
	add(&ts->esp, 0x24);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4A4380(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x24);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x890080, 4));
	game::sub_5F0E30(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	xor_(&ts->edi, ts->edi);
	dec(&ts->ecx);
	cmp(&ts->eflags, ts->ecx, 0xB);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4A43A7;
    }
	jmp(x86::mem(0x4A444C, 4));

loc_4A43AE:
	mov(&ts->edi, 0x1E66364);
	goto loc_4A4405;

loc_4A43B5:
	mov(&ts->edi, 0xB7B75185);
	goto loc_4A4405;

loc_4A43BC:
	mov(&ts->edi, 0x1CE129E0);
	goto loc_4A4405;

loc_4A43C3:
	mov(&ts->edi, 0xA7DB717F);
	goto loc_4A4405;

loc_4A43CA:
	mov(&ts->edi, 0x5D82DBA2);
	goto loc_4A4405;

loc_4A43D1:
	cmp(&ts->eflags, ts->eax, 0x85036C);
	if (!ts->eflags.zero) {
        goto loc_4A43DF;
    }
	mov(&ts->edi, 0x61C9B7A2);
	goto loc_4A4405;

loc_4A43DF:
	mov(mv, &ts->edx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(0x850378, 4));
	sub(&ts->edx, ts->ecx);
	push(mv, &ts->esp, 0x2);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edx);
	game::sub_577240(ts, mv);
	goto loc_4A4405;

def_4A43A7:
	mov(&ts->edi, 0xD4293449);

loc_4A4405:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0xAB44ED8B);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->edi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_4A4436;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, ts->eax);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x24);
	retn(mv, &ts->esp);

loc_4A4436:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x24);
	retn(mv, &ts->esp);
}

void sub_4A4480(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x890118, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->eax + 0x24, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	dec(&ts->ebp);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, 0x444969FD);
	if (!ts->eflags.zero) {
        goto loc_4A44AB;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	goto loc_4A44DF;

loc_4A44AB:
	cmp(&ts->eflags, ts->eax, ts->ebp);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4A44D4;
    }
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x444969FE);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	goto loc_4A44F3;

loc_4A44D4:
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);

loc_4A44DF:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x444969FE);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);

loc_4A44F3:
	mov(mv, &ts->eax, x86::mem(0x89E7A0, 4));
	add(&ts->esp, 0x18);
	cmp(&ts->eflags, ts->eax, 0x104E);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4A4539;
    }
	cmp(&ts->eflags, ts->eax, 0x1053);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_4A4539;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x444969FD);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x444969FE);
	push(mv, &ts->esp, ts->esi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x8);

loc_4A4539:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->ebx, ts->ebx);
	xor_(&ts->edi, ts->edi);
	cmp(&ts->eflags, ts->eax, 0x9120409E);
	if (ts->eflags.zero) {
        goto loc_4A457D;
    }
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_4A45AC;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x184, 4), ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_4A4560;
    }
	push(mv, &ts->esp, 0x79053C);
	goto loc_4A4565;

loc_4A4560:
	push(mv, &ts->esp, 0x790534);

loc_4A4565:
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, 0x79052C);
	mov(&ts->edi, ts->eax);
	game::sub_43DB50(ts, mv);
	mov(&ts->ebx, ts->eax);
	goto loc_4A45A9;

loc_4A457D:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x184, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4A458E;
    }
	push(mv, &ts->esp, 0x79053C);
	goto loc_4A4593;

loc_4A458E:
	push(mv, &ts->esp, 0x790534);

loc_4A4593:
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, 0x79052C);
	mov(&ts->ebx, ts->eax);
	game::sub_43DB50(ts, mv);
	mov(&ts->edi, ts->eax);

loc_4A45A9:
	add(&ts->esp, 0x4);

loc_4A45AC:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x444969FD);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C60(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x444969FE);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C60(ts, mv);
	add(&ts->esp, 0x20);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x8);
}

void sub_4A45E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(0x850078, 4));
	mov(&ts->eax, 0x1);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4A4605;
    }
	mov(mv, &ts->ecx, x86::mem(0x862838, 4));
	imul(&ts->ecx, ts->ecx, 0x104);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x862100, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (!ts->eflags.zero) {
        goto locret_4A4607;
    }

loc_4A4605:
	xor_(&ts->al, ts->al);

locret_4A4607:
	retn(mv, &ts->esp);
}

void sub_4A4610(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_4A468B;
    }
	mov(mv, &ts->eax, x86::mem(0x863470, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A462C;
    }
	cmp(mv, &ts->eflags, x86::mem(0x85EF4C, 4), 0x1);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_4A468B;
    }

loc_4A462C:
	mov(mv, &ts->ecx, x86::mem(0x862838, 4));
	imul(&ts->ecx, ts->ecx, 0x104);
	add(&ts->ecx, 0x862018);
	game::sub_500610(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4A468B;
    }
	mov(mv, &ts->ecx, x86::mem(0x862838, 4));
	cmp(&ts->eflags, ts->ecx, 0x1);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4A468B;
    }
	imul(&ts->ecx, ts->ecx, 0x104);
	add(&ts->ecx, 0x861F14);
	game::sub_5005E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x862838, 4));
	imul(&ts->ecx, ts->ecx, 0x104);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->eax);
	add(&ts->ecx, 0x862018);
	game::sub_500670(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4A468B;
    }
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_4A468B:
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_4A4690(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(0x8363DC, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4A46A0;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax, 4));

loc_4A46A0:
	mov(mv, x86::mem(0x8363DC, 4), 0x0);
	retn(mv, &ts->esp);
}

void sub_4A46B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(0x8363DC, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4A46D5;
    }
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	game::sub_54E6B0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_558F00(ts, mv);
	add(&ts->esp, 0x4);

loc_4A46D5:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4A46E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x8363DC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_4A4705;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	game::sub_555E80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	add(&ts->esp, 0x8);
	goto sub_54E6A0;

locret_4A4705:
	retn(mv, &ts->esp);
}

void sub_4A4710(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx, 4));
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->edx, ts->esi);
	setnl(ts->eflags, &ts->al);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4A4730(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->edx + 0x14, 4));
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->ecx, ts->esi);
	setle(ts->eflags, &ts->al);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4A4750(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50D230(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x14);
}

void sub_4A4770(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x10, 4));
	test(&ts->eflags, ts->ebp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4A4820;
    }
	mov(&ts->edi, 0x1);

loc_4A4787:
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x79051C);
	game::sub_50B990(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x79050C);
	game::sub_50B990(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x790500);
	game::sub_50B990(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x7904EC);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x44);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x790544);
	game::sub_50B990(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0x20);
	inc(&ts->edi);
	dec(&ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_4A4787;
    }
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x18, 4));

loc_4A4820:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	cmp(&ts->eflags, ts->ebp, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_4A48C9;
    }
	sub(&ts->eax, ts->ebp);
	inc(&ts->eax);
	lea(mv, &ts->edi, x86::mem(ts->ebp + 0x1, 4));
	mov(&ts->ebp, ts->eax);

loc_4A4834:
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x79051C);
	game::sub_50B990(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x79050C);
	game::sub_50B990(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x790500);
	game::sub_50B990(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x7904EC);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x44);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x790544);
	game::sub_50B990(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x20);
	inc(&ts->edi);
	dec(&ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_4A4834;
    }

loc_4A48C9:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x8);
}

void sub_4A48D0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x20);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x14, 4));
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->esp + 0x30, 4), ts->ecx);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x34, 4));
	game::sub_577240(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	inc(&ts->ecx);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x7904EC);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp, 0x8);
}

void sub_4A4930(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*4), 4));
	lea(mv, &ts->edx, x86::mem(ts->ecx + (ts->eax*4), 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F0230(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4A4978;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x790500);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_4A4978:
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->eax);
	game::sub_5F8FE0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xC, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x790400);
	game::sub_50B990(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x790500);
	mov(&ts->edi, ts->eax);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);
}

void sub_4A49C0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x40);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8, 1), 0x0);
	mov(&ts->ecx, 0x7);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x9, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7904EC);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esp + 0x64, 1));
	add(&ts->esp, 0x10);
	cmp(&ts->eflags, ts->al, 0xFE);
	if (!ts->eflags.zero) {
        goto loc_4A4A21;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xA7DB717F);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->esi);
	game::sub_542600(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x40);
	retn(mv, &ts->esp, 0x10);

loc_4A4A21:
	cmp(&ts->eflags, ts->al, 0xFF);
	if (!ts->eflags.zero) {
        goto loc_4A4A49;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x490A722D);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_542600(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x40);
	retn(mv, &ts->esp, 0x10);

loc_4A4A49:
	mov(mv, &ts->al, x86::mem(0x89E7D9, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4A4A5B;
    }
	mov(mv, &ts->eax, x86::mem(0x890104, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A4A89;
    }

loc_4A4A5B:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x58, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x50, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + (ts->edx*4) + 0xC8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F744);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_542600(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x40);
	retn(mv, &ts->esp, 0x10);

loc_4A4A89:
	mov(mv, &ts->al, x86::mem(0x89E7D8, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x58, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x50, 4));
	if (!ts->eflags.zero) {
        goto loc_4A4AA3;
    }
	mov(mv, &ts->eax, x86::mem(0x890108, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A4AE3;
    }

loc_4A4AA3:
	mov(mv, &ts->eax, x86::mem(ts->ecx + (ts->edx*4) + 0xC8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4A4AE3;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	xor_(&ts->ecx, ts->ecx);
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	setnz(ts->eflags, &ts->cl);
	dec(&ts->ecx);
	and_(&ts->ecx, 0xB5D0EE21);
	add(&ts->ecx, 0x1E66364);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->esi);
	game::sub_542600(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x40);
	retn(mv, &ts->esp, 0x10);

loc_4A4AE3:
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + (ts->edx*4) + 0xC8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78435C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784264, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x54, 4), ts->eax);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x28, 1), 0x0);
	mov(&ts->ecx, 0x7);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x29, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x5C, 4));
	game::sub_577240(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_542600(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x40);
	retn(mv, &ts->esp, 0x10);
}

void sub_4A4B50(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x8363E4, 4), ts->eax);
	retn(mv, &ts->esp);
}

void sub_4A4B60(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x8363E8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	setnz(ts->eflags, &ts->al);
	retn(mv, &ts->esp);
}

void sub_4A4B70(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776418);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x79055C);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	game::sub_57C3C0(ts, mv);
	mov(mv, x86::mem(0x8363EC, 4), 0x0);
	mov(mv, x86::mem(0x8363E8, 4), 0x0);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x104, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4A4BC9;
    }
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	game::sub_54E6A0(ts, mv);

loc_4A4BC9:
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	game::sub_510D40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_776410:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

SEH_4E3300:
	mov(&ts->eax, 0x7DEE70);
	goto ___CxxFrameHandler;
}

void sub_4A4BF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79053C);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x790584);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537C60(ts, mv);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8651AC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xCC, 4));
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->eax, ts->eax);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xD4, 4));
	if (!ts->eflags.zero) {
        goto loc_4A4C74;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0xD3, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4A4C67;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0xD2, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4A4C67;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FFD0);
	push(mv, &ts->esp, 0xA9723345);
	push(mv, &ts->esp, 0x79056C);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);

loc_4A4C67:
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	push(mv, &ts->esp, 0x3);
	game::sub_5F43B0(ts, mv);

loc_4A4C74:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->esi + 0xCC, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xD1, 1), 0x0);
	mov(mv, &ts->ecx, x86::mem(0x8650B8, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->ecx + 0x14, 4), 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4A4CA0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x8650B8, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x18, 4), 0x0);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7905CC);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_55DDA0(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x74, 1));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, 0x1);
	if (ts->eflags.zero) {
        goto loc_4A4CEB;
    }
	push(mv, &ts->esp, 0x7905BC);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7905B0);
	goto loc_4A4D52;

loc_4A4CEB:
	push(mv, &ts->esp, 0x7905A0);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7905B0);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537C60(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79053C);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x790584);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537C60(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F614);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x790590);

loc_4A4D52:
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537C60(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x78, 4));
	add(&ts->esp, 0x10);
	dec(&ts->ecx);
	if (ts->eflags.sign) {
        goto loc_4A4DA6;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xCC, 4));
	lea(mv, &ts->edx, x86::mem(ts->esi + (ts->ecx*8) + 0x7C, 4));

loc_4A4D74:
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4A4D83;
    }
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x28, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	goto loc_4A4D89;

loc_4A4D83:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7FB718, 4));

loc_4A4D89:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fsubr(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx, 4));
	fcompp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_4A4DA9;
    }
	dec(&ts->ecx);
	sub(&ts->edx, 0x8);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4A4D74;
    }

loc_4A4DA6:
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x7C, 4));

loc_4A4DA9:
	mov(mv, &ts->al, x86::mem(ts->esi + 0xD2, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4A4DBE;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_4A4BF0(ts, mv);

loc_4A4DBE:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4A4DD0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x8650B8, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x18, 4), 0x0);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x74, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	if (ts->eflags.zero) {
        goto loc_4A4DF3;
    }
	push(mv, &ts->esp, 0x7905BC);
	goto loc_4A4DF8;

loc_4A4DF3:
	push(mv, &ts->esp, 0x7905A0);

loc_4A4DF8:
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7905DC);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537C60(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x78, 4));
	add(&ts->esp, 0x10);
	xor_(&ts->ecx, ts->ecx);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4A4E70;
    }
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0xCC, 4));
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x7C, 4));
	goto loc_4A4E30;

loc_4A4E30:
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4A4E3F;
    }
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + 0x28, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	goto loc_4A4E45;

loc_4A4E3F:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7FB718, 4));

loc_4A4E45:
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_4A4E5A;
    }
	inc(&ts->ecx);
	add(&ts->edx, 0x8);
	cmp(&ts->eflags, ts->ecx, ts->edi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4A4E30;
    }
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4A4E5A:
	mov(mv, &ts->al, x86::mem(ts->esi + 0xD2, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4A4E6F;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_4A4BF0(ts, mv);

loc_4A4E6F:
	pop(mv, &ts->esp, ts->ebx);

loc_4A4E70:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4A4E80(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x8650B8, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x7C, 4));
	push(mv, &ts->esp, ts->edi);
	sub(mv, &ts->ecx, x86::mem(0x7FB724, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4A4F9F;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x14, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	push(mv, &ts->esp, 0x1);
	if (ts->eflags.zero) {
        goto loc_4A4F0E;
    }
	mov(mv, x86::mem(ts->eax + 0x14, 4), 0x0);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x74, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4A4ECC;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x7905BC);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x790584);
	goto loc_4A4F8D;

loc_4A4ECC:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x7905F8);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x790590);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537C60(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79053C);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x790584);
	goto loc_4A4F8D;

loc_4A4F0E:
	mov(mv, x86::mem(ts->eax + 0x14, 4), 0x1);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x74, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4A4F23;
    }
	push(mv, &ts->esp, 0x7905BC);
	goto loc_4A4F7C;

loc_4A4F23:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x7905F8);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x790584);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537C60(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F614);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7905EC);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537C60(ts, mv);
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79053C);

loc_4A4F7C:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x790590);

loc_4A4F8D:
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_537C60(ts, mv);
	add(&ts->esp, 0x10);

loc_4A4F9F:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4A4FB0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x8650B8, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x14, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4A508B;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4A5030;
    }
	mov(mv, x86::mem(ts->eax + 0x18, 4), 0x1);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x74, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4A503E;
    }
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F614);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x790590);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537C60(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x7905F8);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7905EC);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_537C60(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4A5030:
	mov(mv, x86::mem(ts->eax + 0x18, 4), 0x0);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x74, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4A5047;
    }

loc_4A503E:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x7905BC);
	goto loc_4A5068;

loc_4A5047:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7905CC);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F614);

loc_4A5068:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7905EC);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_537C60(ts, mv);
	add(&ts->esp, 0x10);

loc_4A508B:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4A5090(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x74, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	if (ts->eflags.zero) {
        goto loc_4A50A4;
    }
	push(mv, &ts->esp, 0x7905BC);
	goto loc_4A50A9;

loc_4A50A4:
	push(mv, &ts->esp, 0x7905A0);

loc_4A50A9:
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x790604);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_537C60(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8900B4, 4));
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	goto loc_5FAFD0;

loc_5FAFD0:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x21C, 4));
	lea(mv, &ts->eax, x86::mem(ts->ecx + 0x1, 4));
	push(mv, &ts->esp, ts->edi);
	cdq(&ts->eax, ts->edx);
	mov(&ts->edi, 0x6);
	idiv(&ts->eax, ts->edi);
	test(&ts->eflags, ts->edx, ts->edx);
	mov(mv, x86::mem(ts->esi + 0x21C, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_5FB04A;
    }
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_5FB024;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x238, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_5FB024;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0xC, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_5FB024;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	mov(&ts->edi, ts->edx);
	call(ts, mv, x86::mem(ts->eax + 0x2C, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(0x802130, 4));
	if (!ts->eflags.zero) {
        goto loc_5FB024;
    }
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x1, 4));
	cdq(&ts->eax, ts->edx);
	mov(&ts->ecx, 0x6);
	idiv(&ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x21C, 4), ts->edx);

loc_5FB024:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_5FA820(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x238, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_5FB04A;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x21C, 4));
	mov(mv, &ts->eax, x86::mem(0x802130, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x20, 4));

loc_5FB04A:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4A50E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	game::sub_430560(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A5149;
    }
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_4A5132;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FC44);
	push(mv, &ts->esp, 0xA9723345);
	push(mv, &ts->esp, 0x79056C);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x7);
	game::sub_5F43D0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8650B8, 4));
	mov(mv, x86::mem(ts->eax + 0x14, 4), 0x1);
	goto loc_4A517C;

loc_4A5132:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xC);
	game::sub_5F41E0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8650B8, 4));
	mov(mv, x86::mem(ts->eax + 0x14, 4), 0x1);
	goto loc_4A517C;

loc_4A5149:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FC44);
	push(mv, &ts->esp, 0xA9723345);
	push(mv, &ts->esp, 0x79056C);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x6);
	game::sub_5F43D0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8650B8, 4));
	mov(mv, x86::mem(ts->ecx + 0x14, 4), 0x0);

loc_4A517C:
	mov(mv, &ts->edx, x86::mem(0x8650B8, 4));
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(ts->edx + 0x18, 4), 0x0);
	mov(mv, &ts->ecx, x86::mem(0x8650B8, 4));
	push(mv, &ts->esp, 0x790618);
	game::sub_578FD0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A51AB;
    }
	mov(mv, &ts->ecx, x86::mem(0x8650B8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_579050(ts, mv);

loc_4A51AB:
	mov(mv, &ts->eax, x86::mem(0x8900BC, 4));
	xor_(&ts->esi, ts->esi);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4A51D6;
    }
	goto loc_4A51C0;

loc_4A51C0:
	mov(mv, &ts->ecx, x86::mem(0x8900B4, 4));
	game::sub_5FFDD0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8900BC, 4));
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4A51C0;
    }

loc_4A51D6:
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFFFFFFFF);
	game::sub_4810F0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8363E4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4A5200(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x74, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4A5228;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x79053C);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	mov(mv, x86::mem(ts->esi + 0x74, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4A5228:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x78F614);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	mov(mv, x86::mem(ts->esi + 0x74, 1), 0x0);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4A5250(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776418);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x8, 4));
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->ebp - 0x10, 4), ts->esi);
	game::sub_551DE0(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->esi, 4), 0x790624);
	mov(mv, &ts->eax, x86::mem(0x83A9D8, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), 0x0);
	game::sub_50D2D0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537950(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x0);
	game::sub_504820(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xB26B6D43);
	push(mv, &ts->esp, ts->ecx);
	game::sub_52CEA0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_776410:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

SEH_4E3300:
	mov(&ts->eax, 0x7DEE70);
	goto ___CxxFrameHandler;
}

void sub_4A52D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4A52F0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4A52E8;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4A52E8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4A52F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x790624);
	goto sub_510D40;
}

void sub_4A5300(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0xC28);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	game::sub_50DA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x48, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F614);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xB04669E3);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537C60(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xB04669E3);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A60(ts, mv);
	add(&ts->esp, 0x18);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x210, 4), ts->eax);
	game::sub_500180(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F604);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ebx, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ebx);
	game::sub_4901D0(ts, mv);
	add(&ts->esp, 0x20);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A5391;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x210, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C990(ts, mv);
	add(&ts->esp, 0x8);

loc_4A5391:
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x118, 4), 0x42F00000);
	game::sub_5129F0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, 0xF13F76B4);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537B80(ts, mv);
	push(mv, &ts->esp, 0x604);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x18);
	mov(&ts->ecx, ts->edi);
	mov(&ts->ebx, ts->eax);
	game::sub_500180(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F5C0);
	game::sub_50B990(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x604);
	push(mv, &ts->esp, ts->ebx);
	game::sub_4FFA50(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x44, 4));
	push(mv, &ts->esp, 0x604);
	push(mv, &ts->esp, ts->ecx);
	game::sub_512530(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	game::j__free(ts, mv);
	add(&ts->esp, 0x24);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x160, 4));
	game::sub_5446F0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1A8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x194, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x190, 4));
	inc(&ts->eax);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x1B4, 4));
	game::sub_538080(ts, mv);
	movsx(mv, &ts->eax, x86::mem(ts->edi + 0xC, 2));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7845D4);
	push(mv, &ts->esp, 0xF25B6BBA);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x862838, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x85AD40);
	game::sub_500A40(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7845D4);
	push(mv, &ts->esp, 0x7D8E1791);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537B80(ts, mv);
	movzx(mv, &ts->eax, x86::mem(ts->edi + 0x2, 2));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7845D4);
	push(mv, &ts->esp, 0x195D8D22);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x20);
	mov(&ts->ecx, ts->edi);
	game::sub_500180(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F5F4);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xF13CEF3F);
	push(mv, &ts->esp, ts->esi);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0xC28);
	retn(mv, &ts->esp);
}

void sub_4A54D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(&ts->esi, 0x7F45D8);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_4A54E0:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFE);
	if (!ts->eflags.zero) {
        goto loc_4A54F5;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_57D590(ts, mv);
	add(&ts->esp, 0x4);
	goto loc_4A5501;

loc_4A54F5:
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_57C330(ts, mv);
	add(&ts->esp, 0x8);

loc_4A5501:
	add(&ts->esi, 0x4);
	cmp(&ts->eflags, ts->esi, 0x7F4604);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4A54E0;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4A5510(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4A5540;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_4A5540;
    }
	cmp(&ts->eflags, ts->ecx, 0xD);
	if (ts->eflags.zero) {
        goto loc_4A5539;
    }
	cmp(&ts->eflags, ts->ecx, 0x9B);
	if (ts->eflags.zero) {
        goto loc_4A5539;
    }
	cmp(&ts->eflags, ts->ecx, 0x44);
	if (!ts->eflags.zero) {
        goto loc_4A5540;
    }

loc_4A5539:
	mov(&ts->eax, 0x7F5D00);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4A5540:
	cmp(&ts->eflags, ts->ecx, 0x22);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4A5551;
    }
	cmp(&ts->eflags, ts->ecx, 0x2E);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_4A5551;
    }
	mov(&ts->esi, 0x22);
	goto loc_4A55A1;

loc_4A5551:
	cmp(&ts->eflags, ts->ecx, 0x40);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4A55A1;
    }
	cmp(&ts->eflags, ts->ecx, 0x43);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_4A55A1;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->cl, x86::mem(ts->ecx + 0x5, 1));
	mov(&ts->dl, ts->cl);
	and_(&ts->dl, 0x1F);
	cmp(&ts->eflags, ts->dl, 0x14);
	if (!ts->eflags.zero) {
        goto loc_4A557D;
    }
	imul(&ts->eax, ts->eax, 0x7);
	xor_(&ts->ecx, ts->ecx);
	add(&ts->eax, ts->ecx);
	imul(&ts->eax, ts->eax, 0x3C);
	add(&ts->eax, 0x7F5D40);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4A557D:
	cmp(&ts->eflags, ts->dl, 0x16);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4A559C;
    }
	cmp(&ts->eflags, ts->dl, 0x1B);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_4A559C;
    }
	imul(&ts->eax, ts->eax, 0x7);
	and_(&ts->ecx, 0x1F);
	sub(&ts->ecx, 0x15);
	add(&ts->eax, ts->ecx);
	imul(&ts->eax, ts->eax, 0x3C);
	add(&ts->eax, 0x7F5D40);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4A559C:
	mov(&ts->esi, 0x40);

loc_4A55A1:
	mov(&ts->ecx, ts->eax);
	imul(&ts->ecx, ts->ecx, 0xB7C);
	xor_(&ts->edx, ts->edx);
	add(&ts->ecx, 0x7F4610);

loc_4A55B1:
	cmp(mv, &ts->eflags, x86::mem(ts->ecx, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_4A55C2;
    }
	inc(&ts->edx);
	add(&ts->ecx, 0x3C);
	cmp(&ts->eflags, ts->edx, 0x31);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4A55B1;
    }
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4A55C2:
	imul(&ts->eax, ts->eax, 0x31);
	add(&ts->eax, ts->edx);
	imul(&ts->eax, ts->eax, 0x3C);
	add(&ts->eax, 0x7F4608);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4A55E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_4A5510(ts, mv);
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A5652;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x10, 4));
	mov(mv, x86::mem(ts->esi + 0x20, 4), ts->edx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x38, 4));
	mov(mv, x86::mem(ts->esi + 0x30, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x18, 4));
	xor_(&ts->edx, ts->edx);
	mov(mv, &ts->dl, x86::mem(0x8363FC, 1));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x34, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x30, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x2C, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x28, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x24, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x1C, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_4532B0(ts, mv);

loc_4A5652:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x14);
}

void sub_4A5660(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC, 4));
	xor_(&ts->bl, ts->bl);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (ts->eflags.parity) {
        goto loc_4A5696;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x10, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (ts->eflags.parity) {
        goto loc_4A5696;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x14, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_4A5698;
    }

loc_4A5696:
	mov(&ts->bl, 0x1);

loc_4A5698:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x24, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_4A56B5;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	mov(&ts->ecx, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->eax);
	game::sub_4454A0(ts, mv);

loc_4A56B5:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x28, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x10, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_4A56D2;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	mov(&ts->eax, ts->edx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->edx);
	game::sub_4454E0(ts, mv);

loc_4A56D2:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x2C, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x14, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_4A56EF;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x14, 4));
	mov(&ts->edx, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x2C, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_4454C0(ts, mv);

loc_4A56EF:
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x30, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A5703;
    }
	test(&ts->eflags, ts->bl, ts->bl);
	if (ts->eflags.zero) {
        goto loc_4A5703;
    }
	push(mv, &ts->esp, 0x1);
	game::sub_453320(ts, mv);

loc_4A5703:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x34, 4));
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_4A5739;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_571A60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(&ts->al, ts->bl);
	if (!ts->eflags.zero) {
        goto loc_4A573B;
    }
	mov(mv, x86::mem(ts->esi + 0x14, 4), 0x0);
	mov(mv, x86::mem(ts->esi + 0x10, 4), 0x0);
	mov(mv, x86::mem(ts->esi + 0xC, 4), 0x0);
	mov(mv, x86::mem(ts->esi + 0x34, 4), 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_4A5739:
	mov(&ts->al, ts->bl);

loc_4A573B:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_4A5740(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto def_4A5772;
    }
	game::sub_510C30(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto def_4A5772;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->esi + 0x34, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	add(&ts->eax, 0xFFFFFFBE);
	cmp(&ts->eflags, ts->eax, 0x8);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4A5772;
    }
	jmp(x86::mem(0x4A589C, 4));

loc_4A5779:
	movzx(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 1));
	neg(&ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784548, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_4A5795:
	movzx(mv, &ts->edx, x86::mem(ts->esp + 0x10, 1));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784548, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_4A57AF:
	movzx(mv, &ts->eax, x86::mem(ts->esp + 0x10, 1));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784540, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787AF0, 4));
	fchs(&ts->fp, x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_4A57D1:
	movzx(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 1));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784548, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x10, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_4A57EB:
	movzx(mv, &ts->edx, x86::mem(ts->esp + 0x10, 1));
	neg(&ts->edx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784548, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x10, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_4A5807:
	movzx(mv, &ts->eax, x86::mem(ts->esp + 0x10, 1));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784540, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787AF0, 4));
	fchs(&ts->fp, x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x10, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_4A5829:
	mov(mv, &ts->al, x86::mem(0x8363F4, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto def_4A5772;
    }
	movzx(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 1));
	neg(&ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784548, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x14, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_4A584E:
	mov(mv, &ts->al, x86::mem(0x8363F4, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto def_4A5772;
    }
	movzx(mv, &ts->edx, x86::mem(ts->esp + 0x10, 1));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784548, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x14, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_4A5871:
	mov(mv, &ts->al, x86::mem(0x8363F4, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto def_4A5772;
    }
	movzx(mv, &ts->eax, x86::mem(ts->esp + 0x10, 1));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784540, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787AF0, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x14, 4));

def_4A5772:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);
}

void sub_4A58C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->ecx);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi, 1), 0x0);
	game::sub_51D730(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_51D070(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	add(&ts->esp, 0x18);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x14, 4), 0x0);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4A5920(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x10, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x8, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	game::sub_51D730(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_50CB00(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->ecx);
	game::sub_51D070(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x38, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	game::sub_51D380(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x3C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x48, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_51D730(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x50, 4));
	add(&ts->esp, 0x3C);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x4);
}

void sub_4A59B0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xC, 4));
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4A59FB;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	game::sub_51D620(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	game::sub_51D4D0(ts, mv);
	add(&ts->esp, 0x18);

loc_4A59FB:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x4);
}

void sub_4A5A10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772A43);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2CD0, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x4);
	if (ts->eflags.zero) {
        goto loc_4A5A53;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2CC4, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x8A3288);
	game::sub_63AE00(ts, mv);

loc_4A5A53:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x2CD4, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4A5A6C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x2CC8, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x8A3288);
	game::sub_63AE00(ts, mv);

loc_4A5A6C:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x2CCC, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4A5A85;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x2CC0, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x8A3288);
	game::sub_63AE00(ts, mv);

loc_4A5A85:
	mov(mv, x86::mem(ts->esi + 0x2CD0, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x2CD4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x2CCC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x2CE0, 4), 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x2754, 4));
	mov(mv, x86::mem(0x836408, 4), ts->ebx);
	mov(mv, x86::mem(0x83640C, 1), ts->bl);
	mov(mv, x86::mem(ts->esp + 0x14, 1), 0x3);
	game::nullsub_1(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x1E64, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 1), 0x2);
	game::nullsub_1(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x1574, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 1), 0x1);
	game::nullsub_1(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xC84, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 1), ts->bl);
	game::nullsub_1(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x394, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0xFFFFFFFF);
	game::nullsub_1(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_772A00:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x10);
	goto sub_401800;

loc_772A0B:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x900);
	goto sub_401800;

loc_772A19:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x11F0);
	goto sub_401800;

loc_772A27:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x1AE0);
	goto sub_401800;

loc_772A35:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x23D0);
	goto sub_401800;

SEH_4A5A10:
	mov(&ts->eax, 0x7DF028);
	goto ___CxxFrameHandler;
}

void sub_4A5B10(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x8A3288);
	game::sub_6106D0(ts, mv);
	retn(mv, &ts->esp);
}

void sub_4A5B20(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x54, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + (ts->eax*4) + 0x4C, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(0x8A1CCC, 4));
	imul(&ts->eax, ts->eax, 0x890);
	add(&ts->eax, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xD0, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_433CD0(ts, mv);
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_4A5B5E;
    }
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.zero) {
        goto loc_4A5B5E;
    }
	mov(&ts->eax, 0x1);
	retn(mv, &ts->esp, 0x4);

loc_4A5B5E:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp, 0x4);
}

void sub_4A5B70(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x118, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_4533B0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x2C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x118, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_4455A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x118, 4));
	game::sub_4455C0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x28);
}

void sub_4A5BD0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x8651AC, 4));
	sub(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(0x837AA0, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x158, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x154, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	xor_(&ts->ebx, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_4A5510(ts, mv);
	add(&ts->esp, 0x10);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4A5D83;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x274, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x30, 4));
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x34, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x2C, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x28, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x24, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x1C, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x118, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_451200(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x118, 4));
	mov(mv, x86::mem(ts->esi + 0x24C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x248, 4), ts->ebx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x14C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x124, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x274, 4));
	mov(mv, x86::mem(ts->esi + 0x128, 4), ts->ebx);
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78450C, 4));
	mov(mv, x86::mem(ts->esi + 0x120, 4), ts->ebx);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4A5CA3;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_4A5C90:
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78450C, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78450C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (ts->eflags.zero) {
        goto loc_4A5C90;
    }

loc_4A5CA3:
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4A5CC3;
    }

loc_4A5CB0:
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78450C, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_4A5CB0;
    }

loc_4A5CC3:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x274, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(mv, x86::mem(ts->esi + 0x11C, 4), ts->edx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4A5CF6;
    }
	fsub(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78450C, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	goto loc_4A5D0E;

loc_4A5CF6:
	fsubr(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78450C, 4));
	fsub(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));

loc_4A5D0E:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4A5D2F;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->esi + 0x138, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x120, 4), ts->eax);
	goto loc_4A5D40;

loc_4A5D2F:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->esi + 0x138, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x120, 4), ts->ecx);

loc_4A5D40:
	mov(mv, x86::mem(ts->esi + 0x130, 4), ts->ebx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7F45A4, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x12C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4A5D75;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fsub(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x130, 4));
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp, 0x4);

loc_4A5D75:
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fabs(&ts->fp, x86::fp_index(0));
	fchs(&ts->fp, x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x130, 4));

loc_4A5D83:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp, 0x4);
}

void sub_4A5D90(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_510C30(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4A5ED1;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x78FD7C);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	xor_(&ts->ebx, ts->ebx);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4A5E0E;
    }
	push(mv, &ts->esp, 0x790634);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4A5E0E;
    }
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8763EC, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (ts->eflags.parity) {
        goto loc_4A5DE0;
    }
	cmp(mv, &ts->eflags, x86::mem(0x83640D, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_4A5E0C;
    }

loc_4A5DE0:
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	mov(mv, x86::mem(0x83640D, 1), ts->bl);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_4A5DFA;
    }
	mov(mv, x86::mem(0x83640D, 1), 0x1);

loc_4A5DFA:
	mov(mv, &ts->eax, x86::mem(0x8651AC, 4));
	mov(mv, x86::mem(0x8363FC, 1), ts->bl);
	mov(mv, x86::mem(0x837AA0, 4), ts->eax);
	goto loc_4A5E0E;

loc_4A5E0C:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));

loc_4A5E0E:
	cmp(mv, &ts->eflags, x86::mem(0x8763F7, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_4A5E4C;
    }
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8763E4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x248, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8763E8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x24C, 4));
	mov(mv, &ts->ecx, x86::mem(0x8651AC, 4));
	mov(mv, x86::mem(0x8363FC, 1), ts->bl);
	mov(mv, x86::mem(0x837AA0, 4), ts->ecx);

loc_4A5E4C:
	cmp(mv, &ts->eflags, x86::mem(0x8763F9, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto loc_4A5E65;
    }
	push(mv, &ts->esp, 0x78FD7C);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4A5ED0;
    }

loc_4A5E65:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x240, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4A5ED0;
    }
	game::sub_510C30(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4A5E86;
    }
	mov(mv, x86::mem(ts->esi + 0x270, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->esi + 0x248, 4), ts->ebx);

loc_4A5E86:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x240, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4A5ED0;
    }
	game::sub_510C30(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4A5EA7;
    }
	mov(mv, x86::mem(ts->esi + 0x270, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->esi + 0x24C, 4), ts->ebx);

loc_4A5EA7:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x240, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4A5ED0;
    }
	game::sub_510C30(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4A5ED0;
    }
	mov(mv, x86::mem(ts->esi + 0x270, 4), 0xFFFFFFFF);
	cmp(mv, &ts->eflags, x86::mem(0x8363F4, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_4A5ED0;
    }
	mov(mv, x86::mem(ts->esi + 0x250, 4), ts->ebx);

loc_4A5ED0:
	pop(mv, &ts->esp, ts->ebx);

loc_4A5ED1:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4A5EE0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x8A1CCC, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	imul(&ts->esi, ts->esi, 0x890);
	add(&ts->esi, ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4A5F26;
    }
	push(mv, &ts->esp, 0x790650);
	game::sub_43DB50(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_43DB80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xF80DBCAE);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537A60(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C990(ts, mv);
	add(&ts->esp, 0x8);

loc_4A5F26:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4A5F30(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	sub(&ts->esp, 0x20);
	cmp(&ts->eflags, ts->eax, 0x1);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4A5FD4;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->eax, x86::mem(0x8A1CCC, 4));
	imul(&ts->ecx, ts->ecx, 0x890);
	add(&ts->ecx, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x79066C);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C960(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_505450(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x14);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x8C016D69);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537A60(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C990(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F9D4);
	push(mv, &ts->esp, 0x5D75C3B4);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x5D75C3B4);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xD719922F);
	push(mv, &ts->esp, ts->esi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x30);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp, 0x8);

loc_4A5FD4:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A5FDD;
    }
	cmp(&ts->eflags, ts->eax, 0x2);
	if (!ts->eflags.zero) {
        goto loc_4A601B;
    }

loc_4A5FDD:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xD719922F);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x5D75C3B4);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x790660);
	push(mv, &ts->esp, 0xD719922F);
	push(mv, &ts->esp, ts->edx);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x24);

loc_4A601B:
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp, 0x8);
}

void sub_4A6030(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x50);
	mov(mv, &ts->eax, x86::mem(0x78E014, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	xor_(&ts->ecx, ts->ecx);
	xor_(&ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x4C, 4), ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x178, 4), 0x41200000);
	mov(mv, &ts->eax, x86::mem(0x8363F8, 4));
	mov(mv, x86::mem(ts->esp + 0x54, 4), ts->ecx);
	xor_(&ts->edi, ts->edi);
	xor_(&ts->ebp, ts->ebp);
	cmp(&ts->eflags, ts->eax, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x58, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->esi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x3DCCCCCD);
	mov(mv, x86::mem(ts->esp + 0x40, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x44, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x48, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x4C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x5C, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4A60C1;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x234, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x2CCC, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_4A60C1;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	cmp(&ts->eflags, ts->ecx, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4A60C1;
    }
	push(mv, &ts->esp, 0xA1);
	game::sub_6102F0(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4A60C1;
    }
	mov(mv, &ts->dl, x86::mem(ts->eax + 0x5, 1));
	shr(&ts->dl, 0x5);
	movsx(&ts->ebp, ts->dl);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebp);

loc_4A60C1:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x174, 4));
	cmp(&ts->eflags, ts->eax, ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_4A60EE;
    }
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.zero) {
        goto loc_4A60D9;
    }
	cmp(&ts->eflags, ts->ebp, 0x3);
	if (!ts->eflags.zero) {
        goto loc_4A60E6;
    }

loc_4A60D9:
	mov(&ts->ebx, 0x3);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0x1);

loc_4A60E6:
	mov(mv, x86::mem(ts->esi + 0x180, 4), ts->edi);
	goto loc_4A60F0;

loc_4A60EE:
	mov(&ts->ebx, ts->ebp);

loc_4A60F0:
	cmp(&ts->eflags, ts->ebx, ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4A61AF;
    }
	cmp(&ts->eflags, ts->ebx, 0x3);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_4A61AF;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x234, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x2CCC, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4A61AF;
    }
	add(&ts->eax, 0x10);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A61AF;
    }
	mov(mv, &ts->edi, x86::mem(ts->eax, 4));
	mov(mv, &ts->ecx, x86::mem(0x8A1CCC, 4));
	imul(&ts->edi, ts->edi, 0x890);
	add(&ts->edi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4A61AF;
    }
	imul(&ts->ebx, ts->ebx, 0x114);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + 0x7F6874, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	lea(mv, &ts->ecx, x86::mem(ts->ebx + 0x7F6864, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x3);
	push(mv, &ts->esp, 0x5);
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x2F0, 4));
	game::sub_5A6580(ts, mv);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_4A61AF;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x714, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x718, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));

loc_4A61AF:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A61DA;
    }
	xor_(&ts->ecx, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x184, 4));
	nop();

loc_4A61C0:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + (ts->ecx*4) + 0x40, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (ts->eflags.parity) {
        goto loc_4A6276;
    }
	inc(&ts->ecx);
	add(&ts->edx, 0x4);
	cmp(&ts->eflags, ts->ecx, 0x4);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4A61C0;
    }

loc_4A61DA:
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4A6346;
    }
	cmp(&ts->eflags, ts->ebp, 0x3);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_4A6346;
    }
	imul(&ts->ebp, ts->ebp, 0x114);
	lea(mv, &ts->eax, x86::mem(ts->ebp + 0x7F6864, 4));
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->eax);
	xor_(&ts->ebp, ts->ebp);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x50, 4));
	lea(mv, &ts->esi, x86::mem(ts->eax + 0x2C, 4));
	mov(&ts->ecx, ts->eax);
	goto loc_4A6210;

loc_4A6210:
	mov(mv, x86::mem(ts->edi, 4), 0x0);
	xor_(&ts->ebx, ts->ebx);

loc_4A6218:
	mov(mv, &ts->eax, x86::mem(ts->esi - 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A624F;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x180, 4));
	push(mv, &ts->esp, ts->ecx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_43C350(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	lea(mv, &ts->eax, x86::mem(ts->ebx + (ts->ebp) + 0x2, 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*4), 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + (ts->eax*4), 4));
	add(&ts->esp, 0x4);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x8, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi, 4));

loc_4A624F:
	inc(&ts->ebx);
	add(&ts->esi, 0x14);
	cmp(&ts->eflags, ts->ebx, 0x3);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4A6218;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x20, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4A62AA;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4A62A4;
    }
	mov(mv, x86::mem(ts->edi, 4), 0x3F800000);
	goto loc_4A62AA;

loc_4A6276:
	cmp(&ts->eflags, ts->ebp, 0x3);
	if (!ts->eflags.zero) {
        goto loc_4A628A;
    }
	mov(mv, &ts->edx, x86::mem(0x78E018, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edx);
	goto loc_4A6350;

loc_4A628A:
	mov(mv, &ts->eax, x86::mem(0x78E024, 4));
	mov(mv, &ts->ecx, x86::mem(0x78E01C, 4));
	mov(mv, x86::mem(ts->esi + 0x178, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ecx);
	goto loc_4A6350;

loc_4A62A4:
	mov(mv, x86::mem(ts->edi, 4), 0x0);

loc_4A62AA:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x18, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x1C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi, 4));
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->edx);
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4A62C9;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));

loc_4A62C9:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4A62DC;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));

loc_4A62DC:
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi, 4));
	add(&ts->ebp, 0x3);
	add(&ts->edi, 0x4);
	cmp(&ts->eflags, ts->ebp, 0xC);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4A6210;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x8, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xC, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, x86::mem(ts->edx + 0x178, 4), ts->eax);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865198, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x14, 4));
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->eax);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x180, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x180, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78E020, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4A633A;
    }
	mov(mv, x86::mem(ts->edx + 0x180, 4), 0x0);

loc_4A633A:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, x86::mem(ts->edx + 0x174, 4), ts->ecx);
	goto loc_4A6350;

loc_4A6346:
	mov(mv, x86::mem(ts->esi + 0x174, 4), 0x0);

loc_4A6350:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x50, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x5C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x54, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78E010, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fsubr(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_4A637F;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));

loc_4A637F:
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x5C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x50, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x54, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78E010, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fsubr(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_4A63BA;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));

loc_4A63BA:
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78E010, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_4A63E5;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));

loc_4A63E5:
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78E010, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_4A6410;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));

loc_4A6410:
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4A6435;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4C, 4));
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->edx);
	goto loc_4A643D;

loc_4A6435:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x48, 4));
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->eax);

loc_4A643D:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4A6452;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	goto loc_4A6456;

loc_4A6452:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));

loc_4A6456:
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.zero) {
        goto loc_4A6467;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));

loc_4A6467:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x178, 4));
	lea(mv, &ts->esi, x86::mem(ts->edx + 0x184, 4));
	xor_(&ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->esi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x178, 4));
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865198, 4));
	mov(&ts->ebp, 0x2);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));

loc_4A64A0:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + (ts->ebx*4) + 0x30, 4));
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->eax);
	fabs(&ts->fp, x86::fp_index(0));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4A64C1;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + (ts->ebx*4) + 0x30, 4));
	mov(mv, x86::mem(ts->esi, 4), ts->ecx);
	goto loc_4A64E9;

loc_4A64C1:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + (ts->ebx*4) + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4A64D6;
    }
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	goto loc_4A64E7;

loc_4A64D6:
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + (ts->ebx*4) + 0x30, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4A64EF;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi, 4));

loc_4A64E7:
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi, 4));

loc_4A64E9:
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));

loc_4A64EF:
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x74, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A6626;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + (ts->ebx*4) + 0x40, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.parity) {
        goto loc_4A6552;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A6546;
    }
	mov(&ts->edx, ts->ebx);
	and_(&ts->edx, 0x80000001);
	if (!ts->eflags.sign) {
        goto loc_4A651F;
    }
	dec(&ts->edx);
	or_(&ts->edx, 0xFFFFFFFE);
	inc(&ts->edx);

loc_4A651F:
	if (!ts->eflags.zero) {
        goto loc_4A6546;
    }
	mov(&ts->eax, ts->ebx);
	cdq(&ts->eax, ts->edx);
	sub(&ts->eax, ts->edx);
	sar(&ts->eax, 0x1);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A653F;
    }
	push(mv, &ts->esp, 0x58);
	game::sub_458520(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x10, 4), 0x0);
	goto loc_4A6619;

loc_4A653F:
	push(mv, &ts->esp, 0x5C);
	game::sub_458520(ts, mv);

loc_4A6546:
	mov(mv, x86::mem(ts->esi + 0x10, 4), 0x0);
	goto loc_4A6619;

loc_4A6552:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x178, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4A656F;
    }
	xor_(&ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x10, 4), 0x1);
	goto loc_4A6619;

loc_4A656F:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + (ts->ebx*4) + 0x40, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.parity) {
        goto loc_4A658A;
    }
	mov(&ts->edi, 0x1);
	goto loc_4A6619;

loc_4A658A:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4A65BB;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x20, 4), ts->ebp);
	mov(&ts->edi, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_4A6619;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4A65E4;
    }
	mov(&ts->eax, ts->ebx);
	and_(&ts->eax, 0x80000001);
	if (!ts->eflags.sign) {
        goto loc_4A65B5;
    }
	dec(&ts->eax);
	or_(&ts->eax, 0xFFFFFFFE);
	inc(&ts->eax);

loc_4A65B5:
	if (!ts->eflags.zero) {
        goto loc_4A6619;
    }
	push(mv, &ts->esp, 0x59);
	goto loc_4A6614;

loc_4A65BB:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	mov(&ts->edi, 0x3);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4A6619;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4A65FD;
    }
	mov(&ts->eax, ts->ebx);
	and_(&ts->eax, 0x80000001);
	if (!ts->eflags.sign) {
        goto loc_4A65DE;
    }
	dec(&ts->eax);
	or_(&ts->eax, 0xFFFFFFFE);
	inc(&ts->eax);

loc_4A65DE:
	if (!ts->eflags.zero) {
        goto loc_4A6619;
    }
	push(mv, &ts->esp, 0x5A);
	goto loc_4A6614;

loc_4A65E4:
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_4A6619;
    }
	mov(&ts->edx, ts->ebx);
	and_(&ts->edx, 0x80000001);
	if (!ts->eflags.sign) {
        goto loc_4A65F7;
    }
	dec(&ts->edx);
	or_(&ts->edx, 0xFFFFFFFE);
	inc(&ts->edx);

loc_4A65F7:
	if (ts->eflags.zero) {
        goto loc_4A6619;
    }
	push(mv, &ts->esp, 0x5B);
	goto loc_4A6614;

loc_4A65FD:
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_4A6619;
    }
	mov(&ts->edx, ts->ebx);
	and_(&ts->edx, 0x80000001);
	if (!ts->eflags.sign) {
        goto loc_4A6610;
    }
	dec(&ts->edx);
	or_(&ts->edx, 0xFFFFFFFE);
	inc(&ts->edx);

loc_4A6610:
	if (ts->eflags.zero) {
        goto loc_4A6619;
    }
	push(mv, &ts->esp, 0x5D);

loc_4A6614:
	game::sub_458520(ts, mv);

loc_4A6619:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, x86::mem(ts->esi + 0x20, 4), ts->edi);
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));

loc_4A6626:
	inc(&ts->ebx);
	add(&ts->esi, 0x4);
	cmp(&ts->eflags, ts->ebx, 0x4);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4A64A0;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x188, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x190, 4));
	pop(mv, &ts->esp, ts->ebx);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x18C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x17C, 4));
	add(&ts->esp, 0x50);
	retn(mv, &ts->esp);
}

void sub_4A6670(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	sub(&ts->esp, 0x3B4);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x8, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ebx + 0x10, 4), 0xFFFFFFFF);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x38, 4), ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4A669F;
    }
	mov(mv, x86::mem(ts->ebx + 0xB64, 4), 0x0);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x8);

loc_4A669F:
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->ebx + 0x20, 4));
	game::sub_5B5350(ts, mv);
	xor_(&ts->edi, ts->edi);
	mov(&ts->esi, ts->eax);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x20, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	mov(mv, x86::mem(ts->esp + 0x8C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xC, 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*2), 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7F45A8, 4));
	shl(&ts->eax, 0x2);
	mov(mv, x86::mem(ts->ebx + 0xB70, 4), ts->edi);
	mov(mv, x86::mem(ts->ebx + 0xB74, 4), ts->edi);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x7F45B0, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x7F45AC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	mov(mv, x86::mem(ts->esp + 0x140, 4), 0x3F800000);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	mov(mv, x86::mem(ts->esp + 0x144, 4), ts->edi);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8363F0, 4));
	mov(mv, x86::mem(ts->esp + 0x148, 4), ts->edi);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784238, 4));
	mov(mv, x86::mem(ts->esp + 0x14C, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x150, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x154, 4), 0x3F800000);
	mov(mv, x86::mem(ts->esp + 0x158, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x15C, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x160, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x164, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x168, 4), 0x3F800000);
	mov(mv, x86::mem(ts->esp + 0x16C, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x170, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x174, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x178, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x17C, 4), 0x3F800000);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x100, 4), 0x3F800000);
	mov(mv, x86::mem(ts->esp + 0x104, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x108, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10C, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x110, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x114, 4), 0x3F800000);
	mov(mv, x86::mem(ts->esp + 0x118, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x11C, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x120, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x124, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x128, 4), 0x3F800000);
	mov(mv, x86::mem(ts->esp + 0x12C, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x130, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x134, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x138, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x13C, 4), 0x3F800000);
	game::__ftol2(ts, mv);
	mov(&ts->ecx, ts->eax);
	mov(&ts->eax, 0xB60B60B7);
	imul(&ts->eax, ts->ecx);
	add(&ts->edx, ts->ecx);
	sar(&ts->edx, 0x8);
	mov(&ts->eax, ts->edx);
	shr(&ts->eax, 0x1F);
	add(&ts->edx, ts->eax);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x104, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x108, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_5BAE60(ts, mv);
	add(&ts->esp, 0xC);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x120, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x100, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x110, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x130, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x104, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x38, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x124, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x114, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x134, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x108, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x128, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x118, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x138, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x98, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x98, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x274, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78450C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4A6903;
    }
	goto loc_4A68F0;

loc_4A68F0:
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78450C, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78450C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (ts->eflags.zero) {
        goto loc_4A68F0;
    }

loc_4A6903:
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4A6923;
    }

loc_4A6910:
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78450C, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_4A6910;
    }

loc_4A6923:
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784238, 4));
	mov(mv, x86::mem(ts->esp + 0x40, 4), 0x3F800000);
	mov(mv, x86::mem(ts->esp + 0x44, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x48, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x4C, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x50, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x54, 4), 0x3F800000);
	mov(mv, x86::mem(ts->esp + 0x58, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x5C, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x60, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x64, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x68, 4), 0x3F800000);
	mov(mv, x86::mem(ts->esp + 0x6C, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x70, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x74, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x78, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x7C, 4), 0x3F800000);
	game::__ftol2(ts, mv);
	mov(&ts->ecx, ts->eax);
	mov(&ts->eax, 0xB60B60B7);
	imul(&ts->eax, ts->ecx);
	add(&ts->edx, ts->ecx);
	sar(&ts->edx, 0x8);
	mov(&ts->eax, ts->edx);
	shr(&ts->eax, 0x1F);
	add(&ts->edx, ts->eax);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x44, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x48, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_5BAE60(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x2C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x30, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x34, 4));
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x502FD0);
	push(mv, &ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x78, 4), ts->eax);
	push(mv, &ts->esp, 0x10);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xAC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x84, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x88, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x8C, 4), 0x3F800000);
	game::sub_401650(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x60, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x38, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x50, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x14, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x10, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x70, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x64, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x18, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x54, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x14, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x10, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x74, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xA0, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xA4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x20, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7F45A8, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x184, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	mov(mv, x86::mem(ts->esp + 0x3C, 4), ts->ecx);
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xA8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x60, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x48, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x50, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x44, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x40, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x70, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x64, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x48, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x54, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x44, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x40, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x74, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xB0, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xB4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x50, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x48, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7F45A8, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x188, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xB8, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x60, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x78, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x50, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x74, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x70, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x70, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x64, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x78, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x54, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x74, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x70, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x74, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC0, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x80, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x78, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7F45A8, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x18C, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC8, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x60, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xA8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x50, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xA4, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xA0, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x70, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x64, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xA8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x54, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xA4, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xA0, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x74, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xD0, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xD4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xB0, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xA8, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xE0, 4));
	push(mv, &ts->esp, ts->edx);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7F45A8, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x190, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xDC, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xA4, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xD4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xA8, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xD8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xAC, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xDC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1BC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xB4, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xB8, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x98, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xBC, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xCC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x9C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xA4, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xB4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x184, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xA8, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xB8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x188, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xAC, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xBC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xD4, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x194, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xD8, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x198, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xDC, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xCC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x19C, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xE4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x98, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xE8, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x9C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1BC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xEC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x194, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x184, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xF4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x198, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x188, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xF8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x19C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xFC, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xE4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43CF10(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xF8, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_43CF10(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x100, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xF4, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x1B8, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_43D1E0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784D28, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xFC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x100, 4));
	fabs(&ts->fp, x86::fp_index(0));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x104, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(mv, x86::mem(ts->esp + 0x15C, 4), ts->eax);
	fdivp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10C, 4));
	mov(mv, x86::mem(ts->esp + 0x160, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x110, 4));
	mov(mv, x86::mem(ts->esp + 0x16C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1BC, 4));
	mov(mv, x86::mem(ts->esp + 0x170, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C0, 4));
	mov(mv, x86::mem(ts->esp + 0x164, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x114, 4));
	mov(mv, x86::mem(ts->esp + 0x17C, 4), ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x15C, 4));
	mov(mv, x86::mem(ts->esp + 0x180, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x174, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C4, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->ebx + 0x920, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x170, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x180, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x18C, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x190, 4), 0x0);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784D28, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	game::sub_4012B0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x44, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x48, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4C, 4));
	mov(mv, x86::mem(ts->ebx + 0x910, 4), ts->edx);
	mov(mv, x86::mem(ts->ebx + 0x914, 4), ts->eax);
	mov(mv, x86::mem(ts->ebx + 0x918, 4), ts->ecx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7F45A4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784238, 4));
	add(&ts->esp, 0x24);
	game::__ftol2(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x8C, 4));
	mov(&ts->ecx, ts->eax);
	mov(&ts->eax, 0xB60B60B7);
	imul(&ts->eax, ts->ecx);
	add(&ts->edx, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x3C, 4));
	sar(&ts->edx, 0x8);
	mov(&ts->eax, ts->edx);
	shr(&ts->eax, 0x1F);
	add(&ts->edx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ecx);
	xor_(&ts->esi, ts->esi);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_4A6ED0:
	cmp(&ts->eflags, ts->esi, 0x40);
	mov(&ts->ecx, 0x3F800000);
	lea(mv, &ts->eax, x86::mem(ts->esp + (ts->esi) + 0x2C0, 4));
	mov(mv, x86::mem(ts->esp + (ts->esi) + 0x1C0, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + (ts->esi) + 0x1C4, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + (ts->esi) + 0x1C8, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + (ts->esi) + 0x1CC, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + (ts->esi) + 0x1D0, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + (ts->esi) + 0x1D4, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + (ts->esi) + 0x1D8, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + (ts->esi) + 0x1DC, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + (ts->esi) + 0x1E0, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + (ts->esi) + 0x1E4, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + (ts->esi) + 0x1E8, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + (ts->esi) + 0x1EC, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + (ts->esi) + 0x1F0, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + (ts->esi) + 0x1F4, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + (ts->esi) + 0x1F8, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + (ts->esi) + 0x1FC, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + (ts->esi) + 0x2C4, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + (ts->esi) + 0x2C8, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + (ts->esi) + 0x2CC, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + (ts->esi) + 0x2D0, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + (ts->esi) + 0x2D4, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + (ts->esi) + 0x2D8, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + (ts->esi) + 0x2DC, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + (ts->esi) + 0x2E0, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + (ts->esi) + 0x2E4, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + (ts->esi) + 0x2E8, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + (ts->esi) + 0x2EC, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + (ts->esi) + 0x2F0, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + (ts->esi) + 0x2F4, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + (ts->esi) + 0x2F8, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + (ts->esi) + 0x2FC, 4), ts->ecx);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_4A6FE3;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->eax);
	game::sub_5BAE60(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + (ts->esi) + 0x1D0, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->eax);
	game::sub_5BAE60(ts, mv);
	add(&ts->esp, 0x18);
	mov(&ts->ecx, 0x3F800000);

loc_4A6FE3:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx - 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebx - 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx, 4));
	mov(mv, x86::mem(ts->esp + (ts->esi) + 0x1F0, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x38, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + (ts->esi) + 0x1F4, 4));
	mov(mv, x86::mem(ts->esp + (ts->esi) + 0x1FC, 4), ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + (ts->esi) + 0x1F8, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx - 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx - 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx, 4));
	mov(mv, x86::mem(ts->esp + (ts->esi) + 0x2FC, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + (ts->esi) + 0x2F4, 4));
	mov(mv, x86::mem(ts->esp + (ts->esi) + 0x2F0, 4), ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + (ts->esi) + 0x2F8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x178, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4A7052;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));

loc_4A7052:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + (ts->esi) + 0x1F8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	fsub(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	add(&ts->eax, 0x4);
	add(&ts->esi, 0x40);
	add(&ts->ebx, 0x30);
	cmp(&ts->eflags, ts->esi, 0x100);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + (ts->esi) + 0x1B8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + (ts->esi) + 0x2B8, 4));
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	fsub(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + (ts->esi) + 0x2B8, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4A6ED0;
    }
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x8, 4));
	lea(mv, &ts->esi, x86::mem(ts->esp + 0x1C0, 4));
	add(&ts->ebx, 0x960);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x4);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_4A70B0:
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebx);
	game::sub_4012B0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	add(&ts->esp, 0x8);
	add(&ts->esi, 0x40);
	add(&ts->ebx, 0x40);
	dec(&ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4A70B0;
    }
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x8, 4));
	lea(mv, &ts->esi, x86::mem(ts->esp + 0x2C0, 4));
	add(&ts->ebx, 0xA60);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x4);

loc_4A70E3:
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebx);
	game::sub_4012B0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	add(&ts->esp, 0x8);
	add(&ts->esi, 0x40);
	add(&ts->ebx, 0x40);
	dec(&ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4A70E3;
    }
	mov(mv, &ts->eax, x86::mem(0x82B884, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x74, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_4A7172;
    }
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x38, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x234, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x2CCC, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_4A7172;
    }
	add(&ts->eax, 0x10);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4A7172;
    }
	push(mv, &ts->esp, 0x1);
	mov(mv, x86::mem(ts->esp + 0x94, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x98, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x9C, 4), 0x0);
	game::sub_48B1E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x220, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x40, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(0x82B884, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x98, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x74, 4));
	game::nullsub_4(ts, mv);

loc_4A7172:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x8);
}

void sub_4A7180(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	sub(&ts->esp, 0x38);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	game::nullsub_1(ts, mv);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x70, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_4903B0(ts, mv);
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0x88, 4));
	mov(&ts->ecx, ts->ebx);
	game::sub_4903B0(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xA0, 4));
	mov(mv, x86::mem(ts->ebp - 0x4, 4), ts->ecx);
	game::sub_4903B0(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xB8, 4));
	mov(mv, x86::mem(ts->ebp - 0x8, 4), ts->ecx);
	game::sub_4903B0(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xD0, 4));
	mov(mv, x86::mem(ts->ebp - 0xC, 4), ts->ecx);
	game::sub_4903B0(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x100, 4));
	mov(mv, x86::mem(ts->ebp - 0x10, 4), ts->ecx);
	game::sub_4903B0(ts, mv);
	mov(&ts->ecx, 0x8357E0);
	game::sub_491E10(ts, mv);
	game::nullsub_1(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(0x7F60E8, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->ebp - 0x38, 4));
	push(mv, &ts->esp, 0x7906C0);
	push(mv, &ts->esp, ts->edx);
	game::sub_4400D0(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->ebp - 0x38, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_577EB0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_580E90(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(0x7F60E8, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->ebp - 0x38, 4));
	push(mv, &ts->esp, 0x7906C0);
	push(mv, &ts->esp, ts->eax);
	game::sub_4400D0(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x38, 4));
	push(mv, &ts->esp, 0x2);
	push(mv, &ts->esp, ts->ecx);
	game::sub_57CF70(ts, mv);
	add(&ts->esp, 0x3C);
	game::sub_571060(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4A725E;
    }

loc_4A7250:
	game::sub_57EF60(ts, mv);
	game::sub_571060(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A7250;
    }

loc_4A725E:
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(0x7F60E8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43DB50(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_48A2D0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4A7284;
    }
	mov(mv, x86::mem(ts->ecx + 0x904, 4), ts->eax);

loc_4A7284:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4A7291;
    }
	mov(mv, x86::mem(ts->ecx + 0x904, 4), ts->eax);

loc_4A7291:
	push(mv, &ts->esp, 0x7906B0);
	mov(mv, x86::mem(ts->esi + 0x6C, 4), ts->eax);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_493600(ts, mv);
	push(mv, &ts->esp, 0x7906A4);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	game::sub_493600(ts, mv);
	push(mv, &ts->esp, 0x79069C);
	game::sub_43DB50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x4, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_493600(ts, mv);
	push(mv, &ts->esp, 0x790694);
	game::sub_43DB50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x8, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_493600(ts, mv);
	push(mv, &ts->esp, 0x79068C);
	game::sub_43DB50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_493600(ts, mv);
	push(mv, &ts->esp, 0x79067C);
	game::sub_43DB50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_493600(ts, mv);
	game::sub_5B9910(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x8);
}

void sub_4A7330(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	sub(&ts->esp, 0x24);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ebx, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x1C8, 4));
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->edi, ts->edi);
	cmp(&ts->eflags, ts->eax, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4A7793;
    }
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0xC, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4A735D;
    }
	push(mv, &ts->esp, 0x4);
	goto loc_4A7364;

loc_4A735D:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x220, 4));
	push(mv, &ts->esp, ts->eax);

loc_4A7364:
	game::sub_48B1E0(ts, mv);
	mov(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x40, 4));
	add(&ts->eax, 0x40);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->esi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4A738F;
    }
	push(mv, &ts->esp, 0x7);
	game::sub_401E80(ts, mv);
	mov(&ts->esi, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->esi);
	goto loc_4A739C;

loc_4A738F:
	push(mv, &ts->esp, 0x2);
	game::sub_401E80(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->eax);
	mov(&ts->esi, ts->eax);

loc_4A739C:
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4A7793;
    }
	push(mv, &ts->esp, 0x1C0);
	game::sub_401E30(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x78E004, 4));
	mov(mv, &ts->ecx, x86::mem(0x78E00C, 4));
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->eax);
	mov(&ts->eax, 0x3F800000);
	mov(mv, x86::mem(ts->esi, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x3C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x78E008, 4));
	mov(mv, x86::mem(ts->esi + 0x34, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xC, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x20, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x2C, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x30, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x38, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4A740B;
    }
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0xBF800000);

loc_4A740B:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->edx, x86::mem(ts->ebx + 0x88, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_5C5930(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(ts->ebp + 0xC, 4), ts->edi);
	if (!ts->eflags.zero) {
        goto loc_4A770F;
    }
	mov(mv, &ts->edx, x86::mem(0x78E008, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x40, 4));
	mov(&ts->ecx, 0x3F800000);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x3C, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x78E004, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x30, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x34, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x38, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x70, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x78E00C, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x74, 4), ts->edx);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->ebx + 0x100, 4));
	mov(mv, x86::mem(ts->esi + 0x78, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_5C5930(ts, mv);
	add(&ts->ebx, 0xA0);
	mov(&ts->eax, 0x7F45B0);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->ebx);
	add(&ts->esi, 0x88);
	goto loc_4A74B1;

loc_4A74AD:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));

loc_4A74B1:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	mov(&ts->ecx, 0x3F800000);
	lea(mv, &ts->ebx, x86::mem(ts->esi - 0x8, 4));
	mov(mv, x86::mem(ts->ebx, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x20, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x34, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->esi - 0x4, 4), ts->edi);
	mov(mv, x86::mem(ts->esi, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x2C, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x30, 4), ts->edi);
	cmp(mv, &ts->eflags, ts->edx, x86::mem(ts->ecx + 0x144, 4));
	if (!ts->eflags.zero) {
        goto loc_4A754E;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x274, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784238, 4));
	game::__ftol2(ts, mv);
	mov(&ts->ecx, ts->eax);
	mov(&ts->eax, 0xB60B60B7);
	imul(&ts->eax, ts->ecx);
	add(&ts->edx, ts->ecx);
	sar(&ts->edx, 0x8);
	mov(&ts->eax, ts->edx);
	shr(&ts->eax, 0x1F);
	add(&ts->edx, ts->eax);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	game::sub_5BAE60(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x38, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x6C, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x38, 4));
	push(mv, &ts->esp, 0x871B50);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_48F600(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x3C, 4));
	add(&ts->esp, 0x24);

loc_4A754E:
	mov(mv, &ts->ecx, x86::mem(ts->eax - 0x4, 4));
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	mov(mv, x86::mem(ts->esi + 0x2C, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->esi + 0x30, 4), ts->eax);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8363F0, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784238, 4));
	game::__ftol2(ts, mv);
	mov(&ts->ecx, ts->eax);
	mov(&ts->eax, 0xB60B60B7);
	imul(&ts->eax, ts->ecx);
	add(&ts->edx, ts->ecx);
	sar(&ts->edx, 0x8);
	mov(&ts->ecx, ts->edx);
	shr(&ts->ecx, 0x1F);
	add(&ts->edx, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	game::sub_5BAE60(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x38, 4));
	push(mv, &ts->esp, ts->ebx);
	game::sub_5C5930(ts, mv);
	inc(mv, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	add(&ts->eax, 0xC);
	add(&ts->ebx, 0x18);
	add(&ts->esi, 0x40);
	cmp(&ts->eflags, ts->eax, 0x7F45D4);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->ebx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4A74AD;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x20, 4));
	add(&ts->eax, 0x58);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	add(&ts->esi, 0x148);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0x2);
	goto loc_4A75F0;

loc_4A75F0:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x4, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_4A76E9;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	mov(&ts->eax, 0x3F800000);
	lea(mv, &ts->ebx, x86::mem(ts->esi - 0x8, 4));
	mov(mv, x86::mem(ts->ebx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x20, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x34, 4), ts->eax);
	mov(mv, x86::mem(ts->esi - 0x4, 4), ts->edi);
	mov(mv, x86::mem(ts->esi, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x2C, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x30, 4), ts->edi);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x274, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784238, 4));
	game::__ftol2(ts, mv);
	mov(&ts->ecx, ts->eax);
	mov(&ts->eax, 0xB60B60B7);
	imul(&ts->eax, ts->ecx);
	add(&ts->edx, ts->ecx);
	sar(&ts->edx, 0x8);
	mov(&ts->eax, ts->edx);
	shr(&ts->eax, 0x1F);
	add(&ts->edx, ts->eax);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	game::sub_5BAE60(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->eax, x86::mem(0x7F45AC, 4));
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->eax, x86::mem(0x7F45B0, 4));
	mov(mv, x86::mem(ts->esi + 0x2C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7F45A8, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->eax*2), 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7F45B4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8363F0, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784238, 4));
	game::__ftol2(ts, mv);
	mov(&ts->ecx, ts->eax);
	mov(&ts->eax, 0xB60B60B7);
	imul(&ts->eax, ts->ecx);
	add(&ts->edx, ts->ecx);
	sar(&ts->edx, 0x8);
	mov(&ts->eax, ts->edx);
	shr(&ts->eax, 0x1F);
	add(&ts->edx, ts->eax);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	game::sub_5BAE60(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x3C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x2C, 4));
	add(&ts->esp, 0x18);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->ebx);
	add(&ts->edx, 0xE8);
	push(mv, &ts->esp, ts->edx);
	game::sub_5C5930(ts, mv);

loc_4A76E9:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	add(&ts->edx, 0x8);
	add(&ts->esi, 0x40);
	dec(&ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4A75F0;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x8);

loc_4A770F:
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0x40, 4));
	mov(&ts->eax, 0x3F800000);
	mov(mv, x86::mem(ts->ebx, 4), ts->eax);
	mov(mv, x86::mem(ts->ebx + 0x14, 4), ts->eax);
	mov(mv, x86::mem(ts->ebx + 0x28, 4), ts->eax);
	mov(mv, x86::mem(ts->ebx + 0x3C, 4), ts->eax);
	mov(mv, x86::mem(ts->ebx + 0x4, 4), ts->edi);
	mov(mv, x86::mem(ts->ebx + 0x8, 4), ts->edi);
	mov(mv, x86::mem(ts->ebx + 0xC, 4), ts->edi);
	mov(mv, x86::mem(ts->ebx + 0x10, 4), ts->edi);
	mov(mv, x86::mem(ts->ebx + 0x18, 4), ts->edi);
	mov(mv, x86::mem(ts->ebx + 0x1C, 4), ts->edi);
	mov(mv, x86::mem(ts->ebx + 0x20, 4), ts->edi);
	mov(mv, x86::mem(ts->ebx + 0x24, 4), ts->edi);
	mov(mv, x86::mem(ts->ebx + 0x2C, 4), ts->edi);
	mov(mv, x86::mem(ts->ebx + 0x30, 4), ts->edi);
	mov(mv, x86::mem(ts->ebx + 0x34, 4), ts->edi);
	mov(mv, x86::mem(ts->ebx + 0x38, 4), ts->edi);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x68, 4));
	fchs(&ts->fp, x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x68, 4));
	mov(mv, &ts->eax, x86::mem(0x8363F0, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_401020(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	game::sub_5BAE60(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x78E004, 4));
	mov(mv, &ts->edx, x86::mem(0x78E008, 4));
	mov(mv, &ts->eax, x86::mem(0x78E00C, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x70, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->edi);
	add(&ts->ecx, 0x70);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	mov(mv, x86::mem(ts->esi + 0x74, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x78, 4), ts->eax);
	game::sub_5C5930(ts, mv);

loc_4A7793:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x8);
}

void sub_4A77A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x4, 4));
	push(mv, &ts->esp, 0x3B7F8AE);
	push(mv, &ts->esp, ts->ecx);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp, 0x4);
}

void sub_4A77C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x1CC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto locret_4A77E1;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	push(mv, &ts->esp, 0x3B7F8AE);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0xC);

locret_4A77E1:
	retn(mv, &ts->esp, 0x4);
}

void sub_4A77F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x1D4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x4, 4));
	push(mv, &ts->esp, 0xF80DBCAE);
	push(mv, &ts->esp, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4A7812;
    }
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_4A7812:
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);
}

void sub_4A7830(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4A784E;
    }
	mov(mv, x86::mem(ts->esp + 0x4, 4), 0x78FCD8);
	goto sub_51BD10;

loc_4A784E:
	push(mv, &ts->esp, 0x7906DC);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4A7885;
    }
	push(mv, &ts->esp, 0x7906DC);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A7885;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4A787C;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4C, 4));
	retn(mv, &ts->esp);

loc_4A787C:
	cmp(&ts->eflags, ts->ecx, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4A7885;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x50, 4));
	retn(mv, &ts->esp);

loc_4A7885:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);
}

void sub_4A7890(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	cmp(mv, &ts->eflags, x86::mem(ts->ebp + 0x8, 4), 0x1);
	mov(&ts->eax, 0x836750);
	if (ts->eflags.zero) {
        goto loc_4A78A3;
    }
	mov(&ts->eax, 0x8371B0);

loc_4A78A3:
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_4A78B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto locret_4A78D6;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78FCD8);
	push(mv, &ts->esp, 0x0);
	game::sub_555F50(ts, mv);
	add(&ts->esp, 0x14);

locret_4A78D6:
	retn(mv, &ts->esp);
}

void sub_4A78E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto locret_4A78FC;
    }
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_5379A0(ts, mv);
	pop(mv, &ts->esp, ts->ecx);

locret_4A78FC:
	retn(mv, &ts->esp);
}

void sub_4A7900(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	setnz(ts->eflags, &ts->bl);
	game::sub_4A7830(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->eax + 0x148, 4), ts->ebx);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_4A7930(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0x0);
	game::sub_4A7830(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	xor_(&ts->ecx, ts->ecx);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->edx, 0xB5971BF1);
	setnz(ts->eflags, &ts->cl);
	mov(mv, x86::mem(ts->eax + 0x161, 1), 0x1);
	mov(mv, x86::mem(ts->eax + 0x148, 4), ts->ecx);
	retn(mv, &ts->esp);
}

void sub_4A7960(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x78FCD8);
	push(mv, &ts->esp, 0xE550F66);
	game::sub_55DDA0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	push(mv, &ts->esp, 0x0);
	setnz(ts->eflags, &ts->bl);
	game::sub_4A7830(ts, mv);
	add(&ts->esp, 0xC);
	mov(mv, x86::mem(ts->eax + 0x148, 4), ts->ebx);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_4A7990(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	game::sub_4A7830(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4A79CE;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_48A2D0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4A79BE;
    }
	mov(mv, x86::mem(ts->ecx + 0x904, 4), ts->eax);

loc_4A79BE:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4A79CB;
    }
	mov(mv, x86::mem(ts->ecx + 0x904, 4), ts->eax);

loc_4A79CB:
	mov(mv, x86::mem(ts->esi + 0x6C, 4), ts->eax);

loc_4A79CE:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4A79D0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(0x838470, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->esi, x86::mem(ts->ebp + 0x10, 4));
	if (ts->eflags.zero) {
        goto loc_4A79F5;
    }
	push(mv, &ts->esp, 0x15);
	mov(&ts->ecx, 0x83AD90);
	game::sub_52A8A0(ts, mv);
	mov(mv, x86::mem(0x838470, 1), 0x0);

loc_4A79F5:
	mov(mv, &ts->eax, x86::mem(0x836410, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A7A4A;
    }
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_6102F0(ts, mv);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	mov(&ts->edi, ts->eax);
	game::sub_60FEE0(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x8A2B68);
	game::sub_61BBF0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_631D20(ts, mv);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->ebp);
	game::sub_63A650(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x836410, 4), 0x0);
	pop(mv, &ts->esp, ts->ebp);
	goto nullsub_1;

loc_4A7A4A:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_4A7A50(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x918, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_512050(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xEE360ED5);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x918, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x840, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_5120F0(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xB05DD708);
	push(mv, &ts->esp, ts->esi);
	game::sub_537A60(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C990(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4A7AC0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(0x8900AC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A7AD3;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	retn(mv, &ts->esp);

loc_4A7AD3:
	or_(&ts->eax, 0xFFFFFFFF);
	retn(mv, &ts->esp);
}

void sub_4A7AE0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x8900D8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x20, 4));
	mov(mv, &ts->eax, x86::mem(0x8900AC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A7AF6;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	goto loc_4A7AF9;

loc_4A7AF6:
	or_(&ts->eax, 0xFFFFFFFF);

loc_4A7AF9:
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4A7B00;
    }
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);

loc_4A7B00:
	mov(mv, &ts->eax, x86::mem(0x8900B0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A7B16;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	xor_(&ts->edx, ts->edx);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	setz(ts->eflags, &ts->dl);
	mov(&ts->eax, ts->edx);
	retn(mv, &ts->esp);

loc_4A7B16:
	or_(&ts->eax, 0xFFFFFFFF);
	xor_(&ts->edx, ts->edx);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	setz(ts->eflags, &ts->dl);
	mov(&ts->eax, ts->edx);
	retn(mv, &ts->esp);
}

void sub_4A7B30(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(0x8900AC, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->eax, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_4A7B61;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(0x890118, 4));
	mov(mv, x86::mem(ts->ecx + 0xBEC, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0xBF0, 4), ts->edx);
	mov(&ts->eax, 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4A7B61:
	cmp(&ts->eflags, ts->esi, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4A7B7F;
    }
	mov(mv, &ts->dl, x86::mem(ts->eax + 0xC, 1));
	mov(mv, x86::mem(ts->ecx + 0x20, 1), ts->dl);
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x30, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x34, 4));
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4A7B7F:
	cmp(&ts->eflags, ts->esi, 0x2);
	if (!ts->eflags.zero) {
        goto loc_4A7B9D;
    }
	mov(mv, &ts->dl, x86::mem(ts->eax + 0xC, 1));
	mov(mv, x86::mem(ts->ecx + 0x21, 1), ts->dl);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x4, 4));
	mov(mv, x86::mem(ts->ecx + 0x464, 4), ts->edx);
	mov(&ts->eax, 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4A7B9D:
	cmp(&ts->eflags, ts->esi, 0x3);
	if (!ts->eflags.zero) {
        goto loc_4A7BAF;
    }
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xC, 4));
	mov(&ts->eax, 0x1);
	pop(mv, &ts->esp, ts->esi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x24, 4));
	retn(mv, &ts->esp);

loc_4A7BAF:
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4A7BC0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x150, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(0x8651AC, 4));
	if (ts->eflags.zero) {
        goto loc_4A7BEA;
    }
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_571A60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A7BEA;
    }
	mov(&ts->eax, 0x1);
	retn(mv, &ts->esp);

loc_4A7BEA:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);
}

void sub_4A7BF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(0x8900D8, 4));
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->al, ts->al);
	mov(&ts->edx, 0x8900AC);
	nop();

loc_4A7C00:
	mov(mv, &ts->ecx, x86::mem(ts->edx, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4A7C0E;
    }
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x8, 4));
	cmp(mv, &ts->eflags, ts->edi, x86::mem(ts->esi + 0x20, 4));
	if (ts->eflags.zero) {
        goto loc_4A7C1C;
    }

loc_4A7C0E:
	add(&ts->edx, 0x4);
	cmp(&ts->eflags, ts->edx, 0x8900B4);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4A7C00;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4A7C1C:
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x50, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_4A7C2D;
    }
	mov(mv, &ts->ecx, x86::mem(0x89E7B0, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4A7C2F;
    }

loc_4A7C2D:
	mov(&ts->al, 0x1);

loc_4A7C2F:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4A7C40(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(0x89E7B0, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4A7C50;
    }
	mov(&ts->eax, 0x3);
	retn(mv, &ts->esp);

loc_4A7C50:
	cmp(&ts->eflags, ts->ecx, 0x7);
	mov(&ts->eax, 0x1);
	if (ts->eflags.zero) {
        goto loc_4A7C5F;
    }
	mov(&ts->eax, 0x2);

loc_4A7C5F:
	mov(mv, &ts->ecx, x86::mem(0x850078, 4));
	inc(&ts->eax);
	retn(mv, &ts->esp);
}

void sub_4A7C70(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->ecx, 0x85AD40);
	game::sub_513B30(ts, mv);
	push(mv, &ts->esp, 0x78F5A4);
	game::sub_50C8D0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, 0x6);
	game::sub_5F4240(ts, mv);
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto locret_4A7CB2;
    }
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379A0(ts, mv);
	pop(mv, &ts->esp, ts->ecx);

locret_4A7CB2:
	retn(mv, &ts->esp);
}

void sub_4A7CC0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->ecx, 0x85AD40);
	game::sub_513B30(ts, mv);
	push(mv, &ts->esp, 0x78F5A4);
	game::sub_50C8D0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, 0x6);
	game::sub_5F4240(ts, mv);
	retn(mv, &ts->esp);
}

void sub_4A7CF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, 0x83A9D0);
	game::sub_502FF0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C8D0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_50B8C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x6);
	game::sub_5F4240(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x1);
	pop(mv, &ts->esp, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_4A7D34;
    }
	mov(&ts->ecx, 0x85AD40);
	game::sub_5139C0(ts, mv);

loc_4A7D34:
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto locret_4A7D52;
    }
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379A0(ts, mv);
	pop(mv, &ts->esp, ts->ecx);

locret_4A7D52:
	retn(mv, &ts->esp);
}

void sub_4A7D60(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	game::sub_543D40(ts, mv);
	cmp(&ts->eflags, ts->edi, 0xC98356BA);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4A7EF3;
    }
	if (ts->eflags.zero) {
        goto loc_4A7EBA;
    }
	cmp(&ts->eflags, ts->edi, 0x911AB364);
	if (ts->eflags.zero) {
        goto loc_4A7E51;
    }
	cmp(&ts->eflags, ts->edi, 0xB5AF2461);
	if (!ts->eflags.zero) {
        goto loc_4A7F60;
    }
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_571A60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A7F60;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x78F5B8);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537CC0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4A7F60;
    }
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4A7E01;
    }
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379A0(ts, mv);
	add(&ts->esp, 0x4);

loc_4A7E01:
	mov(&ts->ecx, ts->esi);
	game::sub_52FBF0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0xB5AF2461);
	mov(&ts->ecx, ts->esi);
	game::sub_50DA20(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F5B8);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50B8C0(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79070C);
	game::sub_50B8C0(ts, mv);
	add(&ts->esp, 0x20);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_4A7E51:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x78F5B8);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537CC0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4A7F60;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	game::sub_50B8C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F5B8);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x1C);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4A7F60;
    }
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379A0(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_4A7EBA:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x150, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4A7F60;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50B8C0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_5379A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x1);
	game::sub_5F4240(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_4A7EF3:
	cmp(&ts->eflags, ts->edi, 0xE1FDE1D1);
	if (!ts->eflags.zero) {
        goto loc_4A7F60;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x13C, 4));
	cmp(&ts->eflags, ts->eax, 0xC407210);
	if (ts->eflags.zero) {
        goto loc_4A7F4D;
    }
	cmp(&ts->eflags, ts->eax, 0x911AB364);
	if (ts->eflags.zero) {
        goto loc_4A7F24;
    }
	cmp(&ts->eflags, ts->eax, 0xB5AF2461);
	if (!ts->eflags.zero) {
        goto loc_4A7F60;
    }
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x150, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_4A7F24:
	mov(mv, &ts->al, x86::mem(0x89E7E6, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(&ts->eax, 0x7906F0);
	if (!ts->eflags.zero) {
        goto loc_4A7F37;
    }
	mov(&ts->eax, 0x79070C);

loc_4A7F37:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_4A7F4D:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78FA60);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);

loc_4A7F60:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);
}

void sub_4A7F70(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->dl, x86::mem(0x844AD8, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	mov(&ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4A7FC2;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x159, 1), ts->al);
	if (!ts->eflags.zero) {
        goto loc_4A7FC2;
    }
	push(mv, &ts->esp, 0x22BC94AF);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x22222222);
	push(mv, &ts->esp, 0x22222222);
	mov(mv, x86::mem(ts->ecx + 0x15B, 1), ts->al);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->ecx);
	game::sub_558790(ts, mv);
	add(&ts->esp, 0x24);
	xor_(&ts->al, ts->al);
	retn(mv, &ts->esp, 0x4);

loc_4A7FC2:
	cmp(mv, &ts->eflags, x86::mem(0x844AD9, 1), ts->al);
	if (!ts->eflags.zero) {
        goto locret_4A800C;
    }
	mov(mv, &ts->dl, x86::mem(ts->ecx + 0x15A, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	if (!ts->eflags.zero) {
        goto locret_4A800C;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, 0xF3568B86);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x22222222);
	push(mv, &ts->esp, 0x22222222);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	mov(mv, x86::mem(ts->ecx + 0x15B, 1), ts->al);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->eax);
	game::sub_558790(ts, mv);
	add(&ts->esp, 0x24);
	xor_(&ts->al, ts->al);

locret_4A800C:
	retn(mv, &ts->esp, 0x4);
}

void sub_4A8010(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x15B, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	if (ts->eflags.zero) {
        goto loc_4A803A;
    }
	cmp(&ts->eflags, ts->edi, 0x911AB364);
	if (ts->eflags.zero) {
        goto loc_4A83BC;
    }
	cmp(&ts->eflags, ts->edi, 0xC407210);
	if (ts->eflags.zero) {
        goto loc_4A83BC;
    }

loc_4A803A:
	cmp(&ts->eflags, ts->edi, 0xC98356BA);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x20, 4));
	if (!ts->eflags.zero) {
        goto loc_4A8096;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x158, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4A80A2;
    }
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4A8076;
    }
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379A0(ts, mv);
	add(&ts->esp, 0x4);

loc_4A8076:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_5379A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, 0x1);
	game::sub_5F4240(ts, mv);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4A8096:
	cmp(&ts->eflags, ts->edi, 0x911AB364);
	if (ts->eflags.zero) {
        goto loc_4A81E1;
    }

loc_4A80A2:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_556020(ts, mv);
	cmp(&ts->eflags, ts->edi, 0x911AB364);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4A824A;
    }
	if (ts->eflags.zero) {
        goto loc_4A81E1;
    }
	cmp(&ts->eflags, ts->edi, 0x33333333);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4A819F;
    }
	if (ts->eflags.zero) {
        goto loc_4A8164;
    }
	cmp(&ts->eflags, ts->edi, 0x11111111);
	if (ts->eflags.zero) {
        goto loc_4A8119;
    }
	cmp(&ts->eflags, ts->edi, 0x22222222);
	if (!ts->eflags.zero) {
        goto loc_4A83BA;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FAB8);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esi + 0x138, 4), 0x0);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x15B, 1), 0x0);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4A8119:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F5B8);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x15B, 1), 0x0);
	mov(mv, x86::mem(ts->esi + 0x138, 4), 0x911AB364);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50B8C0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79071C);
	push(mv, &ts->esp, ts->edx);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0x24);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4A8164:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x15B, 1), 0x0);
	mov(mv, x86::mem(ts->esi + 0x158, 1), 0x1);
	game::sub_50B8C0(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79071C);
	game::sub_50B8C0(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79070C);
	game::sub_50B8C0(ts, mv);
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4A819F:
	cmp(&ts->eflags, ts->edi, 0x35F8620B);
	if (!ts->eflags.zero) {
        goto loc_4A83BA;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x154, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_51FE70(ts, mv);
	mov(&ts->edi, ts->eax);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4A826E;
    }
	mov(mv, &ts->al, x86::mem(ts->edi + 0x28, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4A826E;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x20, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	goto loc_4A826E;

loc_4A81E1:
	cmp(mv, &ts->eflags, x86::mem(0x83AA04, 4), 0x2);
	if (!ts->eflags.zero) {
        goto loc_4A81FE;
    }
	push(mv, &ts->esp, 0x11111111);
	mov(&ts->ecx, ts->esi);
	game::sub_4A7F70(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4A83BA;
    }

loc_4A81FE:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537D40(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4A8230;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C60(ts, mv);
	add(&ts->esp, 0x10);

loc_4A8230:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x911AB364);
	mov(&ts->ecx, ts->esi);
	game::sub_556020(ts, mv);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4A824A:
	cmp(&ts->eflags, ts->edi, 0xB5AF2461);
	if (ts->eflags.zero) {
        goto loc_4A8344;
    }
	cmp(&ts->eflags, ts->edi, 0xD05FC3A3);
	if (ts->eflags.zero) {
        goto loc_4A830F;
    }
	cmp(&ts->eflags, ts->edi, 0xE1FDE1D1);
	if (!ts->eflags.zero) {
        goto loc_4A83BA;
    }

loc_4A826E:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x138, 4));
	cmp(&ts->eflags, ts->eax, 0xC407210);
	if (ts->eflags.zero) {
        goto loc_4A82EA;
    }
	cmp(&ts->eflags, ts->eax, 0x911AB364);
	if (ts->eflags.zero) {
        goto loc_4A82A9;
    }
	cmp(&ts->eflags, ts->eax, 0xB5AF2461);
	if (!ts->eflags.zero) {
        goto loc_4A83BA;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x15B, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4A83BA;
    }
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x158, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4A82A9:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x15B, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4A83BA;
    }
	cmp(mv, &ts->eflags, x86::mem(0x83AA04, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_4A82C5;
    }
	game::sub_5BEEA0(ts, mv);

loc_4A82C5:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_50B8C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79071C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0x14);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4A82EA:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	game::sub_50B8C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78FA8C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0x14);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4A830F:
	mov(mv, &ts->eax, x86::mem(0x83AA04, 4));
	mov(&ts->ebx, 0x1);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4A83BA;
    }
	game::sub_5CEC90(ts, mv);
	mov(mv, x86::mem(0x8709D1, 1), ts->bl);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xAF0BBD92);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4A8344:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0xB5AF2461);
	mov(&ts->ecx, ts->esi);
	game::sub_50DAE0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F5B8);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x83AA04, 4));
	add(&ts->esp, 0x10);
	cmp(&ts->eflags, ts->eax, 0x2);
	if (!ts->eflags.zero) {
        goto loc_4A8389;
    }
	push(mv, &ts->esp, 0x33333333);
	mov(&ts->ecx, ts->esi);
	game::sub_4A7F70(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4A83BA;
    }

loc_4A8389:
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4A83A9;
    }
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379A0(ts, mv);
	add(&ts->esp, 0x4);

loc_4A83A9:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x33333333);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);

loc_4A83BA:
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);

loc_4A83BC:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);
}

void sub_4A83D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x4C);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(0x83647C, 4), ts->eax);
	retn(mv, &ts->esp);
}

void sub_4A83F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x5C);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(0x836480, 4), ts->eax);
	retn(mv, &ts->esp);
}

void sub_4A8410(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776418);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x790758);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4A844B;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_490130(ts, mv);
	add(&ts->esp, 0x4);

loc_4A844B:
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(0x7F63E0, 1), 0x1);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	game::sub_510D40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_776410:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

SEH_4E3300:
	mov(&ts->eax, 0x7DEE70);
	goto ___CxxFrameHandler;
}

void sub_4A8480(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4A8549;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A84CC;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x3C44A2C);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x3C44A2C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);

loc_4A84CC:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A8508;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x3B35A98E);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x3B35A98E);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);

loc_4A8508:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A853B;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xB08E7468);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FFD0);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x1C);

loc_4A853B:
	mov(mv, &ts->ecx, x86::mem(0x8651AC, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4A8549:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x3C44A2C);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x3B35A98E);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xB08E7468);
	push(mv, &ts->esp, ts->esi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x24);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4A8590(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->ecx, ts->ecx);
	mov(&ts->eax, 0x7F63E8);
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_4A85A0:
	xor_(&ts->edx, ts->edx);
	mov(mv, &ts->dx, x86::mem(ts->eax, 2));
	and_(&ts->edx, ts->esi);
	test(&ts->eflags, ts->dx, ts->dx);
	if (ts->eflags.zero) {
        goto loc_4A85AD;
    }
	inc(&ts->ecx);

loc_4A85AD:
	add(&ts->eax, 0x10);
	cmp(&ts->eflags, ts->eax, 0x7F65E8);
	if (!ts->eflags.zero) {
        goto loc_4A85A0;
    }
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4A85ED;
    }
	push(mv, &ts->esp, ts->ecx);
	game::sub_43C1C0(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->edx, ts->eax);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x7F63E8);
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_4A85D0:
	xor_(&ts->edi, ts->edi);
	mov(mv, &ts->di, x86::mem(ts->ecx, 2));
	and_(&ts->edi, ts->esi);
	test(&ts->eflags, ts->di, ts->di);
	if (ts->eflags.zero) {
        goto loc_4A85E1;
    }
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_4A85F4;
    }
	dec(&ts->edx);

loc_4A85E1:
	add(&ts->ecx, 0x10);
	inc(&ts->eax);
	cmp(&ts->eflags, ts->ecx, 0x7F65E8);
	if (!ts->eflags.zero) {
        goto loc_4A85D0;
    }

loc_4A85ED:
	pop(mv, &ts->esp, ts->edi);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4A85F4:
	shl(&ts->eax, 0x4);
	pop(mv, &ts->esp, ts->edi);
	add(&ts->eax, 0x7F63E8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4A8610(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x54);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(0x836484, 4), ts->eax);
	retn(mv, &ts->esp);
}

void sub_4A8630(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(0x836488, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4A8640;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax, 4));

loc_4A8640:
	mov(mv, x86::mem(0x836488, 4), 0x0);
	retn(mv, &ts->esp);
}

void sub_4A8650(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776418);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	game::sub_551DE0(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi, 4), 0x790774);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(0x8651AC, 4));
	push(mv, &ts->esp, 0x1);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x790768);
	push(mv, &ts->esp, 0x4B98C4B9);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x50, 4), ts->eax);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FC44);
	push(mv, &ts->esp, 0x94DCE36A);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	add(&ts->esp, 0x20);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_776410:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

SEH_4E3300:
	mov(&ts->eax, 0x7DEE70);
	goto ___CxxFrameHandler;
}

void sub_4A86E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4A8700(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4A86F8;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4A86F8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4A8700(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x790774);
	goto sub_510D40;
}

void sub_4A8710(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4A8730(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4A8728;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4A8728:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4A8730(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x790784);
	goto sub_510D40;
}

void sub_4A8740(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772A64);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x50);
	game::j__malloc(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4A879B;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_551DE0(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x790784);
	mov(mv, x86::mem(ts->esi + 0x4C, 1), 0x0);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4A879B:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_772A50:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x790794);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4A8740:
	mov(&ts->eax, 0x7DF04C);
	goto ___CxxFrameHandler;
}

void sub_4A87B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4A87D0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4A87C8;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4A87C8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4A87D0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x7907AC);
	goto sub_510D40;
}

void sub_4A87E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772A84);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x50);
	game::j__malloc(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4A8847;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_551DE0(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x7907AC);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), 0x0);
	mov(mv, &ts->ecx, x86::mem(0x8651AC, 4));
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->ecx);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4A8847:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_772A70:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7907BC);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4A87E0:
	mov(&ts->eax, 0x7DF070);
	goto ___CxxFrameHandler;
}

void sub_4A8860(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776418);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	game::sub_551DE0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x7907E8);
	push(mv, &ts->esp, 0x72CF9F38);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x0);
	mov(mv, x86::mem(ts->esi, 4), 0x7907D8);
	game::sub_5379C0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C9B0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x7907E8);
	game::sub_480C50(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x836490, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A88EB;
    }
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4A88EB;
    }
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_5379A0(ts, mv);
	add(&ts->esp, 0x4);

loc_4A88EB:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_776410:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

SEH_4E3300:
	mov(&ts->eax, 0x7DEE70);
	goto ___CxxFrameHandler;
}

void sub_4A8900(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4A8920(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4A8918;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4A8918:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4A8920(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x7907D8);
	goto sub_510D40;
}

void sub_4A8930(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776418);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	game::sub_551DE0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x790804);
	push(mv, &ts->esp, 0x58BCF5B6);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x0);
	mov(mv, x86::mem(ts->esi, 4), 0x7907F4);
	game::sub_5379C0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C9B0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->esi + 0x4C, 1), 0x0);
	mov(mv, x86::mem(ts->esi + 0x4D, 1), 0x0);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_776410:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

SEH_4E3300:
	mov(&ts->eax, 0x7DEE70);
	goto ___CxxFrameHandler;
}

void sub_4A89A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4A89C0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4A89B8;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4A89B8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4A89C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x7907F4);
	goto sub_510D40;
}

void sub_4A89D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772AA4);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x50);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4A8A1B;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4A8930(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4A8A1B:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_772A90:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79080C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4A89D0:
	mov(&ts->eax, 0x7DF094);
	goto ___CxxFrameHandler;
}

void sub_4A8A30(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776418);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	game::sub_551DE0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x79082C);
	push(mv, &ts->esp, 0x58BCF5B6);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x0);
	mov(mv, x86::mem(ts->esi, 4), 0x79081C);
	game::sub_5379C0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C9B0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	add(&ts->esp, 0x8);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_776410:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

SEH_4E3300:
	mov(&ts->eax, 0x7DEE70);
	goto ___CxxFrameHandler;
}

void sub_4A8AA0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4A8AC0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4A8AB8;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4A8AB8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4A8AC0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x79081C);
	goto sub_510D40;
}

void sub_4A8AD0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772AC4);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x4C);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4A8B1B;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4A8A30(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4A8B1B:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_772AB0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x790834);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4A8AD0:
	mov(&ts->eax, 0x7DF0B8);
	goto ___CxxFrameHandler;
}

void sub_4A8B30(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772AE3);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	game::sub_551DE0(ts, mv);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4C, 4));
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x0);
	mov(mv, x86::mem(ts->esi, 4), 0x79084C);
	game::sub_5763E0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x790848);
	push(mv, &ts->esp, 0xF2754103);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x20, 1), 0x1);
	game::sub_5379C0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C9B0(ts, mv);
	push(mv, &ts->esp, 0x790848);
	game::sub_50D350(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4A8BB2;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x790848);
	mov(&ts->ecx, ts->edi);
	game::sub_57DAA0(ts, mv);

loc_4A8BB2:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

unknown_libname_55:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

loc_772AD8:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x4C);
	goto sub_579DC0;

SEH_4A8B30:
	mov(&ts->eax, 0x7DF0E4);
	goto ___CxxFrameHandler;
}

void sub_4A8BD0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4A8BF0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4A8BE8;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4A8BE8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4A8BF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776418);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x79084C);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	game::sub_579DC0(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	game::sub_510D40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_776410:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

SEH_4E3300:
	mov(&ts->eax, 0x7DEE70);
	goto ___CxxFrameHandler;
}

void sub_4A8C50(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(0x836494, 1));
	retn(mv, &ts->esp);
}

void sub_4A8C60(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772B04);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x60);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4A8CAB;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4A8B30(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4A8CAB:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_772AF0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79085C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4A8C60:
	mov(&ts->eax, 0x7DF108);
	goto ___CxxFrameHandler;
}

void sub_4A8CC0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772B18);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x44);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x54, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	game::sub_551DE0(ts, mv);
	push(mv, &ts->esp, 0x790878);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x10);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, 0x786E70);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, 0x40);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x64, 4), 0x0);
	mov(mv, x86::mem(ts->esi, 4), 0x790868);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x10);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x8BA694A3);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C9B0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x54, 4));
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x50);
	retn(mv, &ts->esp, 0x4);

loc_772B10:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x50, 4));
	goto sub_510D40;

SEH_4A8CC0:
	mov(&ts->eax, 0x7DF12C);
	goto ___CxxFrameHandler;
}

void sub_4A8D60(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4A8D80(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4A8D78;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4A8D78:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4A8D80(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x790868);
	goto sub_510D40;
}

void sub_4A8D90(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772B44);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x4C);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4A8DDB;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4A8CC0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4A8DDB:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_772B30:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x790884);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4A8D90:
	mov(&ts->eax, 0x7DF150);
	goto ___CxxFrameHandler;
}

void sub_4A8DF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776418);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	game::sub_551DE0(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi, 4), 0x790894);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(0x8651AC, 4));
	push(mv, &ts->esp, 0xA23978B);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x4B98C4B9);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x4E98A8A8);
	push(mv, &ts->esp, 0x3F8558B1);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	add(&ts->esp, 0x8);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_776410:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

SEH_4E3300:
	mov(&ts->eax, 0x7DEE70);
	goto ___CxxFrameHandler;
}

void sub_4A8E90(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4A8EB0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4A8EA8;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4A8EA8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4A8EB0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x790894);
	goto sub_510D40;
}

void sub_4A8EC0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772B64);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x50);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4A8F0B;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4A8DF0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4A8F0B:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_772B50:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7908A4);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4A8EC0:
	mov(&ts->eax, 0x7DF174);
	goto ___CxxFrameHandler;
}

void sub_4A8F20(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4A8F40(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4A8F38;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4A8F38:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4A8F40(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x7908B4);
	goto sub_510D40;
}

void sub_4A8F50(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772B84);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x50);
	game::j__malloc(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4A8FB7;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_551DE0(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x7908B4);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), 0x0);
	mov(mv, &ts->ecx, x86::mem(0x8651AC, 4));
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->ecx);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4A8FB7:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_772B70:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7908C4);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4A8F50:
	mov(&ts->eax, 0x7DF198);
	goto ___CxxFrameHandler;
}

void sub_4A8FD0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776418);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	game::sub_551DE0(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi, 4), 0x7908D4);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(0x8651AC, 4));
	push(mv, &ts->esp, 0x3FE6FAB9);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x4B98C4B9);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	add(&ts->esp, 0x8);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_776410:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

SEH_4E3300:
	mov(&ts->eax, 0x7DEE70);
	goto ___CxxFrameHandler;
}

void sub_4A9050(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4A9070(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4A9068;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4A9068:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4A9070(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x7908D4);
	goto sub_510D40;
}

void sub_4A9080(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772BA4);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x50);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4A90CB;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4A8FD0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4A90CB:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_772B90:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7908E4);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4A9080:
	mov(&ts->eax, 0x7DF1BC);
	goto ___CxxFrameHandler;
}

void sub_4A90E0(x86::thread_state* ts, x86::memory_view* mv) {
	goto sub_543D40;
}

void sub_4A90F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776418);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	game::sub_551DE0(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x790914);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	mov(mv, x86::mem(ts->esi + 0x50, 4), 0x0);
	game::sub_576CA0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4A9153;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x43D41F73);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0xC);

loc_4A9153:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0xC4DF3FF2);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x13CF446D);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x8C0BD743);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x8C0BD743);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x790904);
	mov(&ts->edi, ts->eax);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x3C);
	push(mv, &ts->esp, 0xEEEB248E);
	push(mv, &ts->esp, 0x7908F8);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x1F182080);
	push(mv, &ts->esp, 0x7908F8);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4A9225;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x1C, 4));
	test(&ts->eflags, ts->eax, 0x10000000);
	if (ts->eflags.zero) {
        goto loc_4A921E;
    }
	and_(&ts->eax, 0xEFFFFFFF);
	mov(mv, x86::mem(ts->edi + 0x1C, 4), ts->eax);

loc_4A921E:
	or_(mv, x86::mem(ts->edi + 0x1C, 4), 0x400000);

loc_4A9225:
	mov(mv, &ts->ecx, x86::mem(0x8651AC, 4));
	push(mv, &ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x50, 4), ts->ecx);
	game::sub_4AC940(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, 0xFFFFFFFE);
	game::sub_480C30(ts, mv);
	mov(&ts->ecx, 0x865930);
	mov(mv, x86::mem(0x865480, 1), 0x1);
	game::sub_579C90(ts, mv);
	mov(mv, &ts->al, x86::mem(0x836495, 1));
	test(&ts->eflags, ts->al, ts->al);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_4A928E;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F970);
	push(mv, &ts->esp, 0x2DDF58C);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F970);
	push(mv, &ts->esp, 0x4C46F86A);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x20);

loc_4A928E:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_776410:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

SEH_4E3300:
	mov(&ts->eax, 0x7DEE70);
	goto ___CxxFrameHandler;
}

void stdiobuf___stdiobuf_void_(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776418);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x790914);
	mov(&ts->ecx, 0x865930);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	game::sub_579CA0(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	game::sub_510D40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_776410:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

SEH_4E3300:
	mov(&ts->eax, 0x7DEE70);
	goto ___CxxFrameHandler;
}

void sub_4A9310(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0x790734);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto locret_4A932C;
    }
	push(mv, &ts->esp, 0x790734);
	game::sub_558F00(ts, mv);
	pop(mv, &ts->esp, ts->ecx);

locret_4A932C:
	retn(mv, &ts->esp);
}

void sub_4A9330(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0x790734);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	retn(mv, &ts->esp);
}

void sub_4A9340(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0x790734);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	neg(&ts->al);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0x790734);
	retn(mv, &ts->esp);
}

void sub_4A9360(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x83A9E0);
	game::sub_502FE0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4A937E;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x150, 4));
	mov(mv, x86::mem(ts->eax + 0x20, 1), 0x0);
	goto loc_4A9388;

loc_4A937E:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x150, 4));
	mov(mv, x86::mem(ts->ecx + 0x20, 1), 0x1);

loc_4A9388:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	mov(&ts->ecx, 0x83A9E0);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F844);
	push(mv, &ts->esp, ts->edi);
	game::sub_542600(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x150, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x1C, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_51D7F0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x14);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	game::sub_54E6A0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	game::sub_54E6E0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4A93E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_543D40(ts, mv);
	cmp(&ts->eflags, ts->edi, 0x251BF83E);
	if (ts->eflags.zero) {
        goto loc_4A9427;
    }
	cmp(&ts->eflags, ts->edi, 0x911AB364);
	if (!ts->eflags.zero) {
        goto loc_4A9443;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x790924);
	push(mv, &ts->esp, ts->eax);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4A9427:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	mov(&ts->ecx, 0x83A9E0);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F844);
	push(mv, &ts->esp, ts->esi);
	game::sub_542600(ts, mv);
	add(&ts->esp, 0xC);

loc_4A9443:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);
}

void sub_4A9450(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x8650D0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	if (ts->eflags.zero) {
        goto loc_4A946B;
    }
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0x10);
	push(mv, &ts->esp, ts->esi);
	game::sub_57E410(ts, mv);
	add(&ts->esp, 0xC);

loc_4A946B:
	mov(mv, &ts->eax, x86::mem(0x8650D4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A9481;
    }
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0x10);
	push(mv, &ts->esp, ts->esi);
	game::sub_57D6A0(ts, mv);
	add(&ts->esp, 0xC);

loc_4A9481:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0x10);
	push(mv, &ts->esp, ts->eax);
	game::sub_57E480(ts, mv);
	push(mv, &ts->esp, 0x8);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->eax);
	game::sub_57E480(ts, mv);
	push(mv, &ts->esp, 0x8);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	game::sub_57E480(ts, mv);
	push(mv, &ts->esp, 0x8);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->edx);
	game::sub_57E480(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->eax);
	movzx(mv, &ts->eax, x86::mem(ts->esi + 0x14, 1));
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	game::sub_57E480(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	setnz(ts->eflags, &ts->cl);
	mov(mv, x86::mem(ts->esi + 0x14, 1), ts->cl);
	movzx(mv, &ts->edx, x86::mem(ts->esi + 0x15, 1));
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edx);
	game::sub_57E480(ts, mv);
	add(&ts->esp, 0x48);
	test(&ts->eflags, ts->eax, ts->eax);
	setnz(ts->eflags, &ts->al);
	mov(mv, x86::mem(ts->esi + 0x15, 1), ts->al);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4A9500(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_57E4D0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0x10);
	push(mv, &ts->esp, ts->eax);
	game::sub_57E480(ts, mv);
	push(mv, &ts->esp, 0x8);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	game::sub_57E480(ts, mv);
	push(mv, &ts->esp, 0x8);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->edx);
	game::sub_57E480(ts, mv);
	push(mv, &ts->esp, 0x8);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->eax);
	game::sub_57E480(ts, mv);
	push(mv, &ts->esp, 0x8);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x18, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	game::sub_57E480(ts, mv);
	add(&ts->esp, 0x44);
	push(mv, &ts->esp, 0x8);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x14, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->edx);
	game::sub_57E480(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_57E4D0(ts, mv);
	push(mv, &ts->esp, 0x8);
	add(&ts->esi, 0x1E);
	push(mv, &ts->esp, ts->esi);
	game::sub_57E4D0(ts, mv);
	add(&ts->esp, 0x1C);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4A9590(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x836498, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A95AB;
    }
	mov(mv, &ts->ax, x86::mem(ts->eax + 0x20, 2));
	test(&ts->eflags, ts->ax, ts->ax);
	if (ts->eflags.zero) {
        goto loc_4A95A8;
    }
	cmp(&ts->eflags, ts->ax, 0xB);
	if (!ts->eflags.zero) {
        goto loc_4A95AB;
    }

loc_4A95A8:
	mov(&ts->al, 0x1);
	retn(mv, &ts->esp);

loc_4A95AB:
	xor_(&ts->al, ts->al);
	retn(mv, &ts->esp);
}

void sub_4A95B0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x836498, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_4A95E7;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(0x836498, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(ts->edx + 0x50, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(0x836498, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->ecx + 0x1C, 4), ts->edx);
	mov(mv, &ts->ecx, x86::mem(0x836498, 4));
	mov(mv, x86::mem(ts->ecx + 0x54, 4), ts->eax);

locret_4A95E7:
	retn(mv, &ts->esp);
}

void sub_4A96F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(0x836498, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_6FB09F(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_4A9710(x86::thread_state* ts, x86::memory_view* mv) {
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x10, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 1), ts->al);
	mov(mv, x86::mem(ts->ecx + 0x60, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x18, 4), 0x2);
	mov(mv, x86::mem(ts->ecx + 0x20, 2), ts->ax);
	mov(mv, x86::mem(ts->ecx + 0x7, 1), ts->al);
	cmp(mv, &ts->eflags, x86::mem(0x8650D0, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto locret_4A9741;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x5C, 4));
	mov(mv, x86::mem(ts->esp + 0x4, 4), 0x1);
	goto sub_6FBFAB;

locret_4A9741:
	retn(mv, &ts->esp, 0x4);
}

void sub_4A9750(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x83A9E0);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x30, 4));
	game::Iostream_init__Iostream_init_void_(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_43DBD0(ts, mv);
	push(mv, &ts->esp, ts->edi);
	game::sub_43DBB0(ts, mv);
	mov(mv, x86::mem(ts->eax + (ts->esi) + 0x30, 1), 0x20);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x14, 4));
	push(mv, &ts->esp, 0x10);
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->esi) + 0x31, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_523CB0(ts, mv);
	push(mv, &ts->esp, 0x10);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x835BB8);
	game::sub_43E030(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x18, 4), 0x6);
	mov(mv, x86::mem(ts->esi + 0x20, 2), ts->ax);
	mov(mv, x86::mem(ts->esi + 0x7, 1), ts->al);
	mov(mv, &ts->ecx, x86::mem(0x8650D0, 4));
	add(&ts->esp, 0x24);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4A97C8;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x5C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x835BB8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_6FBF1E(ts, mv);

loc_4A97C8:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4A97D0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x8650D4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A97E7;
    }
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, 0x2);
	game::sub_57D670(ts, mv);
	add(&ts->esp, 0xC);

loc_4A97E7:
	mov(mv, &ts->ecx, x86::mem(0x836498, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x18, 4));
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.zero) {
        goto locret_4A980D;
    }
	cmp(&ts->eflags, ts->eax, 0x8);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4A97FF;
    }
	cmp(&ts->eflags, ts->eax, 0xA);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto locret_4A980D;
    }

loc_4A97FF:
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x64, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto locret_4A980D;
    }
	push(mv, &ts->esp, 0x0);
	game::sub_4A37C0(ts, mv);

locret_4A980D:
	retn(mv, &ts->esp);
}

void sub_4A9810(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x8650D4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_4A9827;
    }
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, 0x4);
	game::sub_57D670(ts, mv);
	add(&ts->esp, 0xC);

locret_4A9827:
	retn(mv, &ts->esp, 0x8);
}

void sub_4A9830(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x8650D4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A9847;
    }
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, 0x6);
	game::sub_57D670(ts, mv);
	add(&ts->esp, 0xC);

loc_4A9847:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp, 0x4);
}

void sub_4A9850(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x8650D4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A9867;
    }
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, 0x7);
	game::sub_57D670(ts, mv);
	add(&ts->esp, 0xC);

loc_4A9867:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_57E4D0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8650D0, 4));
	mov(mv, &ts->eax, x86::mem(0x836498, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->ecx, ts->ecx);
	lea(mv, &ts->esi, x86::mem(ts->eax + 0x28, 4));
	if (ts->eflags.zero) {
        goto loc_4A989B;
    }
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->esi);
	game::sub_57E410(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x836498, 4));
	add(&ts->esp, 0xC);

loc_4A989B:
	mov(mv, &ts->ecx, x86::mem(0x8650D4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4A98B7;
    }
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->esi);
	game::sub_57D6A0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x836498, 4));
	add(&ts->esp, 0xC);

loc_4A98B7:
	mov(mv, &ts->ecx, x86::mem(0x8650D0, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x54, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x1C, 4));
	if (ts->eflags.zero) {
        goto loc_4A98D9;
    }
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	game::sub_57E410(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x836498, 4));
	add(&ts->esp, 0xC);

loc_4A98D9:
	mov(mv, &ts->ecx, x86::mem(0x8650D4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4A98F4;
    }
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	game::sub_57D6A0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x836498, 4));
	add(&ts->esp, 0xC);

loc_4A98F4:
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x28, 4));
	cmp(&ts->eflags, ts->ecx, 0x10D);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x2C, 4));
	mov(mv, x86::mem(ts->eax + 0x18, 4), 0x0);
	mov(mv, &ts->eax, x86::mem(0x836498, 4));
	mov(&ts->esi, 0xF35D144E);
	pop(mv, &ts->esp, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_4A993B;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x54, 4));
	cmp(&ts->eflags, ts->edx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4A993B;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x50, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	mov(&ts->esi, 0x461A18EE);
	if (!ts->eflags.zero) {
        goto loc_4A993B;
    }
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x83A9D0);
	game::sub_534770(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x836498, 4));

loc_4A993B:
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x50, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4A9953;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x1C, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_440540(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x836498, 4));
	add(&ts->esp, 0x4);

loc_4A9953:
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x64, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	game::sub_55DDA0(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x836498, 4));
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->edx + 0x1C, 4), 0x0);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4A9980(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x8650D4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_4A9997;
    }
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, 0x9);
	game::sub_57D670(ts, mv);
	add(&ts->esp, 0xC);

locret_4A9997:
	retn(mv, &ts->esp);
}

void sub_4A99A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x8650D4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A99B7;
    }
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, 0xB);
	game::sub_57D670(ts, mv);
	add(&ts->esp, 0xC);

loc_4A99B7:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0x10);
	push(mv, &ts->esp, ts->eax);
	game::sub_57E480(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x836498, 4));
	mov(mv, x86::mem(ts->ecx + 0x18, 4), 0x0);
	mov(mv, &ts->edx, x86::mem(0x836498, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x64, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x5A051729);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x14);
	retn(mv, &ts->esp, 0x4);
}

void sub_4A99F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x8650D4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A9A07;
    }
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, 0xC);
	game::sub_57D670(ts, mv);
	add(&ts->esp, 0xC);

loc_4A9A07:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0x10);
	push(mv, &ts->esp, ts->eax);
	game::sub_57E480(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp, 0x4);
}

void sub_4A9A20(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x8650D4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4A9A3A;
    }
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, 0xE);
	game::sub_57D670(ts, mv);
	add(&ts->esp, 0xC);

loc_4A9A3A:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	game::sub_4A9450(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x836498, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(&ts->esi, 0x8867412D);
	mov(&ts->ebx, 0x1);
	if (ts->eflags.zero) {
        goto loc_4A9A6C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x5C, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x0);
	game::sub_6FBFCC(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x836498, 4));

loc_4A9A6C:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4A9AC0;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	cmp(&ts->eflags, ts->ecx, 0x3);
	if (!ts->eflags.zero) {
        goto loc_4A9A8F;
    }
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x7, 1));
	xor_(&ts->esi, ts->esi);
	cmp(&ts->eflags, ts->cl, ts->bl);
	if (!ts->eflags.zero) {
        goto def_4A9AE0;
    }
	mov(&ts->esi, 0x3A2BE557);
	mov(mv, x86::mem(ts->eax + 0x7, 1), 0x0);
	goto loc_4A9AF6;

loc_4A9A8F:
	mov(mv, &ts->edx, x86::mem(0x836514, 4));
	and_(&ts->edx, 0xF0);
	cmp(&ts->eflags, ts->dl, 0xE0);
	if (!ts->eflags.zero) {
        goto loc_4A9AB9;
    }
	xor_(&ts->edx, ts->edx);
	cmp(&ts->eflags, ts->ecx, 0xA);
	setnz(ts->eflags, &ts->dl);
	dec(&ts->edx);
	and_(&ts->edx, 0x8F2252E7);
	add(&ts->edx, 0xA2000A44);
	mov(&ts->esi, ts->edx);
	goto def_4A9AE0;

loc_4A9AB9:
	mov(&ts->esi, 0x461A18EE);
	goto def_4A9AE0;

loc_4A9AC0:
	mov(mv, x86::mem(ts->eax + 0x7, 1), ts->bl);
	mov(mv, &ts->eax, x86::mem(0x836498, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x18, 4), 0x3);
	if (!ts->eflags.zero) {
        goto def_4A9AE0;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	xor_(&ts->esi, ts->esi);
	dec(&ts->ecx);
	cmp(&ts->eflags, ts->ecx, 0x6);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4A9AE0;
    }
	movzx(mv, &ts->ecx, x86::mem(ts->ecx + 0x4A9B40, 1));
	jmp(x86::mem(0x4A9B34, 4));

loc_4A9AE7:
	mov(&ts->esi, 0x8867412D);
	goto loc_4A9AF3;

loc_4A9AEE:
	mov(&ts->esi, 0x3AA9323A);

loc_4A9AF3:
	mov(mv, x86::mem(ts->eax + 0x7, 1), ts->bl);

loc_4A9AF6:
	mov(mv, &ts->eax, x86::mem(0x836498, 4));

def_4A9AE0:
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->eax + 0x18, 4), 0x0);
	mov(mv, &ts->dx, x86::mem(ts->edi + 0x4, 2));
	mov(mv, &ts->eax, x86::mem(0x836498, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->eax + 0x20, 2), ts->dx);
	pop(mv, &ts->esp, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4A9B2F;
    }
	mov(mv, &ts->ecx, x86::mem(0x836498, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x64, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A9B2F;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->esi);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);

loc_4A9B2F:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4A9B50(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x8650D4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A9B67;
    }
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, 0xF);
	game::sub_57D670(ts, mv);
	add(&ts->esp, 0xC);

loc_4A9B67:
	mov(mv, &ts->eax, x86::mem(0x836498, 4));
	mov(&ts->cl, 0x1);
	mov(mv, x86::mem(ts->eax + 0x8, 1), ts->cl);
	mov(mv, &ts->eax, x86::mem(0x836498, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x18, 4), 0x4);
	if (!ts->eflags.zero) {
        goto locret_4A9B7F;
    }
	mov(mv, x86::mem(ts->eax + 0xC, 1), ts->cl);

locret_4A9B7F:
	retn(mv, &ts->esp);
}

void sub_4A9B80(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x8650D4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A9B97;
    }
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, 0x11);
	game::sub_57D670(ts, mv);
	add(&ts->esp, 0xC);

loc_4A9B97:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->eax);
	game::sub_57E480(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->esi, ts->eax);
	game::sub_57E480(ts, mv);
	add(&ts->esp, 0x18);
	cmp(&ts->eflags, ts->esi, 0x8);
	mov(&ts->ecx, ts->eax);
	mov(&ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4A9BEA;
    }
	mov(mv, &ts->edx, x86::mem(0x836498, 4));
	cmp(mv, &ts->eflags, ts->ecx, x86::mem(ts->edx + 0x54, 4));
	if (!ts->eflags.zero) {
        goto loc_4A9BEA;
    }
	mov(mv, &ts->edx, x86::mem(ts->edx + 0x1C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->edx);
	mov(mv, &ts->ecx, x86::mem(0x836498, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	add(&ts->ecx, 0x28);
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	xor_(&ts->eax, ts->eax);

loc_4A9BEA:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);
}

void sub_4A9BF0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 2), 0x0);
	if (ts->eflags.zero) {
        goto loc_4A9C09;
    }
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_4A9C00:
	add(&ts->eax, 0x2);
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 2), 0x0);
	if (!ts->eflags.zero) {
        goto loc_4A9C00;
    }

loc_4A9C09:
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xC, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4A9C3E;
    }
	xor_(&ts->ecx, ts->ecx);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_4A9C3E;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_4A9C20:
	mov(mv, &ts->eax, x86::mem(ts->edx + (ts->ecx*4), 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 2), 0x0);
	if (ts->eflags.zero) {
        goto loc_4A9C39;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_4A9C30:
	add(&ts->eax, 0x2);
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 2), 0x0);
	if (!ts->eflags.zero) {
        goto loc_4A9C30;
    }

loc_4A9C39:
	inc(&ts->ecx);
	cmp(&ts->eflags, ts->ecx, ts->esi);
	if (ts->eflags.carry) {
        goto loc_4A9C20;
    }

loc_4A9C3E:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4A9C40(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x240);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x801C);
	push(mv, &ts->esp, 0x0);
	call(ts, mv, x86::mem(0x7832DC, 4));
	mov(mv, &ts->esi, x86::mem(0x78312C, 4));
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	call(ts, mv, ts->esi);
	push(mv, &ts->esp, 0x790964);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43DDA0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x7F66A0, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43DDA0(ts, mv);
	add(&ts->esp, 0x18);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	call(ts, mv, ts->esi);
	mov(mv, &ts->eax, x86::mem(0x836498, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x5C, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_6FC01E(ts, mv);
	push(mv, &ts->esp, 0x790960);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_43DDA0(ts, mv);
	add(&ts->esp, 0xC);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x104, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	call(ts, mv, x86::mem(0x783128, 4));
	mov(&ts->esi, ts->eax);
	cmp(&ts->eflags, ts->esi, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_4A9D34;
    }
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(0x783124, 4));
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->edi, 0x1);
	call(ts, mv, ts->ebx);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A9D21;
    }

loc_4A9D01:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	inc(&ts->edi);
	call(ts, mv, ts->ebx);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4A9D01;
    }
	cmp(&ts->eflags, ts->edi, 0x2);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_4A9D21;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x254, 4));
	mov(mv, x86::mem(ts->ecx + 0x4, 1), 0x1);

loc_4A9D21:
	push(mv, &ts->esp, ts->esi);
	call(ts, mv, x86::mem(0x783120, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x240);
	retn(mv, &ts->esp, 0x8);

loc_4A9D34:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x24C, 4));
	mov(mv, x86::mem(ts->edx + 0x4, 1), 0x0);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x240);
	retn(mv, &ts->esp, 0x8);
}

void sub_4A9D50(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	retn(mv, &ts->esp);
}

void sub_4A9D60(x86::thread_state* ts, x86::memory_view* mv) {
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4A9D9F;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4A9D9F;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fdivp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fmulp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	retn(mv, &ts->esp);

loc_4A9D9F:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.parity) {
        goto loc_4A9DC2;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4A9DC2;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	retn(mv, &ts->esp);

loc_4A9DC2:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	retn(mv, &ts->esp);
}

void sub_4A9DD0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	shl(&ts->eax, 0x8);
	or_(&ts->eax, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	shl(&ts->eax, 0x8);
	or_(&ts->eax, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	shl(&ts->eax, 0x8);
	or_(&ts->eax, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_4A9DF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->edi);
	game::__ftol2(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi, 4));
	mov(&ts->edi, ts->eax);
	shl(&ts->edi, 0x8);
	game::__ftol2(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x4, 4));
	or_(&ts->edi, ts->eax);
	shl(&ts->edi, 0x8);
	game::__ftol2(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x8, 4));
	or_(&ts->edi, ts->eax);
	shl(&ts->edi, 0x8);
	game::__ftol2(ts, mv);
	or_(&ts->eax, ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4A9E30(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	game::__ftol2(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x4, 4));
	mov(&ts->edi, ts->eax);
	shl(&ts->edi, 0x8);
	game::__ftol2(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x8, 4));
	or_(&ts->edi, ts->eax);
	shl(&ts->edi, 0x8);
	game::__ftol2(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC, 4));
	or_(&ts->edi, ts->eax);
	shl(&ts->edi, 0x8);
	game::__ftol2(ts, mv);
	or_(&ts->eax, ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4A9E70(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	and_(&ts->eax, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	push(mv, &ts->esp, ts->edi);
	and_(mv, &ts->ecx, x86::mem(ts->esi + 0x14, 4));
	or_(&ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4A9ED2;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x9B8, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4A9EDE;
    }
	cmp(mv, &ts->eflags, ts->edi, x86::mem(ts->esi + 0x24, 4));
	if (ts->eflags.zero) {
        goto loc_4A9EDE;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_4FFA80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537BE0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x790968);
	push(mv, &ts->esp, ts->eax);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0x20);
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4A9ED2:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);

loc_4A9EDE:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4A9EF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	and_(&ts->eax, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	push(mv, &ts->esp, ts->edi);
	and_(mv, &ts->ecx, x86::mem(ts->esi + 0x14, 4));
	or_(&ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4A9FB2;
    }
	mov(&ts->ecx, 0x85B940);
	game::sub_501680(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4A9FB2;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, 0x790988);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537A10(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x28, 4));
	add(&ts->esp, 0x18);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x2D, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_4A9F91;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x5D10F6AF);
	game::sub_4FFA80(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x20, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x790980);
	push(mv, &ts->esp, ts->edx);
	game::sub_537BE0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x790970);
	push(mv, &ts->esp, ts->eax);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0x1C);
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0x0);
	mov(mv, x86::mem(ts->esi + 0x2C, 1), 0x1);

loc_4A9F91:
	mov(&ts->ecx, 0x861E74);
	game::sub_500F90(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4A9FB2:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, 0x790988);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537A10(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x2D, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4A9FF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x14, 4));
	and_(&ts->eax, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	and_(&ts->ecx, ts->edx);
	or_(&ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4AA0CB;
    }
	mov(mv, &ts->eax, x86::mem(0x8364AC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4AA01A;
    }
	dec(&ts->eax);
	mov(mv, x86::mem(0x8364AC, 4), ts->eax);

loc_4AA01A:
	mov(mv, &ts->cl, x86::mem(0x83649C, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_4AA0D7;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4AA0D7;
    }
	game::sub_4FF970(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x1);
	mov(&ts->eax, 0x7909A0);
	if (ts->eflags.zero) {
        goto loc_4AA044;
    }
	mov(&ts->eax, 0x783FE5);

loc_4AA044:
	mov(mv, &ts->ecx, x86::mem(0x8364A8, 4));
	cmp(&ts->eflags, ts->ecx, 0x3);
	if (ts->eflags.zero) {
        goto loc_4AA075;
    }
	cmp(&ts->eflags, ts->ecx, 0x1);
	if (ts->eflags.zero) {
        goto loc_4AA075;
    }
	cmp(&ts->eflags, ts->ecx, 0x4);
	if (ts->eflags.zero) {
        goto loc_4AA05E;
    }
	cmp(&ts->eflags, ts->ecx, 0x2);
	if (!ts->eflags.zero) {
        goto loc_4AA0A4;
    }

loc_4AA05E:
	mov(mv, &ts->ecx, x86::mem(0x8364A0, 4));
	mov(mv, &ts->edx, x86::mem(0x8364A4, 4));
	add(&ts->edx, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x2AB10D61);
	goto loc_4AA08A;

loc_4AA075:
	mov(mv, &ts->ecx, x86::mem(0x8364A0, 4));
	mov(mv, &ts->edx, x86::mem(0x8364A4, 4));
	add(&ts->edx, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xABA1E56F);

loc_4AA08A:
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, 0x790994);
	push(mv, &ts->esp, ts->eax);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0x14);

loc_4AA0A4:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x790968);
	push(mv, &ts->esp, ts->edx);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0x10);
	mov(mv, x86::mem(0x83649C, 1), 0x0);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4AA0CB:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);

loc_4AA0D7:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4AA0E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4AA102;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	goto loc_4AA117;

loc_4AA102:
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4AA117;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));

loc_4AA117:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_4AA132;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78450C, 4));

loc_4AA132:
	fmulp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78450C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4AA148;
    }
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78450C, 4));
	retn(mv, &ts->esp);

loc_4AA148:
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto locret_4AA15B;
    }
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78450C, 4));

locret_4AA15B:
	retn(mv, &ts->esp);
}

void sub_4AA160(x86::thread_state* ts, x86::memory_view* mv) {
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fmulp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78450C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4AA191;
    }
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78450C, 4));

loc_4AA191:
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto locret_4AA1A4;
    }
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78450C, 4));

locret_4AA1A4:
	retn(mv, &ts->esp, 0xC);
}

void sub_4AA1B0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	sub(&ts->esp, 0x54);
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x890118, 4));
	push(mv, &ts->esp, ts->ebp);
	game::sub_5EEF60(ts, mv);
	mov(&ts->edi, ts->eax);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4AA732;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	and_(&ts->eax, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	push(mv, &ts->esp, ts->ebx);
	and_(mv, &ts->ecx, x86::mem(ts->esi + 0x14, 4));
	or_(&ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4AA731;
    }
	movsx(mv, &ts->ebx, x86::mem(ts->edi + 0x9, 1));
	mov(&ts->ecx, 0x89E7A0);
	game::sub_5ED990(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4AA352;
    }
	cmp(mv, &ts->eflags, x86::mem(0x89E7B0, 4), 0x7);
	if (ts->eflags.zero) {
        goto loc_4AA352;
    }
	mov(mv, &ts->eax, x86::mem(0x89E7A0, 4));
	cmp(&ts->eflags, ts->eax, 0x104E);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4AA27E;
    }
	cmp(&ts->eflags, ts->eax, 0x1053);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_4AA27E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x1C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, 0x0);
	game::sub_401050(ts, mv);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784258, 4));
	game::__ftol2(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x790A04);
	push(mv, &ts->esp, ts->edx);
	game::sub_537BE0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0xB1EE4CA9);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x28);
	goto loc_4AA39B;

loc_4AA27E:
	mov(mv, &ts->eax, x86::mem(0x89E7B4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4AA319;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x1C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, 0x0);
	game::sub_401050(ts, mv);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784258, 4));
	game::__ftol2(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ebp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0xB1EE4CA9);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x14);
	game::sub_570A30(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x2);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x790A04);
	if (!ts->eflags.zero) {
        goto loc_4AA2F6;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_537BE0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x14);
	goto loc_4AA39B;

loc_4AA2F6:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_537BE0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x24, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x14);
	goto loc_4AA39B;

loc_4AA319:
	mov(mv, &ts->ecx, x86::mem(0x890118, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0xBE8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x7909FC);
	push(mv, &ts->esp, ts->eax);
	game::sub_537BE0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x20, 4));
	inc(&ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x7909F8);
	push(mv, &ts->esp, ts->edx);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0x1C);
	goto loc_4AA39B;

loc_4AA352:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x40, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x34, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x38, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x20, 4));
	inc(&ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x7909F8);
	push(mv, &ts->esp, ts->edx);
	game::sub_537BE0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x24);

loc_4AA39B:
	cmp(mv, &ts->eflags, x86::mem(0x89E7B0, 4), 0x2);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	mov(&ts->ebx, 0x1);
	mov(&ts->ebp, 0x4);
	if (!ts->eflags.zero) {
        goto loc_4AA428;
    }
	mov(mv, &ts->eax, x86::mem(0x89E818, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4AA428;
    }
	cmp(&ts->eflags, ts->eax, 0x7FFFFFFF);
	if (ts->eflags.zero) {
        goto loc_4AA428;
    }
	mov(&ts->ecx, ts->edi);
	game::sub_5EE270(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4AA5D0;
    }
	cmp(&ts->eflags, ts->eax, 0x7FFFFFFF);
	if (ts->eflags.zero) {
        goto loc_4AA5D0;
    }
	mov(&ts->ecx, ts->edi);
	game::sub_5EE270(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	mov(mv, &ts->eax, x86::mem(0x86518C, 4));
	mov(mv, &ts->ecx, x86::mem(0x89E818, 4));
	sub(&ts->edx, ts->eax);
	add(&ts->edx, ts->ecx);
	push(mv, &ts->esp, ts->ebp);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->edx);
	game::sub_577240(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x2C, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, ts->edx);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0xC);
	goto loc_4AA5E1;

loc_4AA428:
	mov(&ts->ecx, ts->edi);
	game::sub_5EE270(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4AA5B4;
    }
	cmp(&ts->eflags, ts->eax, 0x7FFFFFFF);
	if (ts->eflags.zero) {
        goto loc_4AA5B4;
    }
	mov(mv, &ts->al, x86::mem(ts->edi + 0xD, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4AA4B8;
    }
	mov(mv, &ts->ecx, x86::mem(0x86518C, 4));
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_5EE290(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	mov(mv, x86::mem(ts->esi + 0x58, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(0x86518C, 4));
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x5C, 4), ts->eax);
	game::sub_5EE2B0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, ts->ebp);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x48, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ecx);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	game::sub_577240(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esp + 0x14, 4));
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_4AA4B1;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x65, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4AA4B1;
    }
	mov(mv, x86::mem(ts->esi + 0x64, 1), ts->bl);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x1D4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4AA4B5;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x3F800000);
	push(mv, &ts->esp, 0x17);
	game::sub_56ED10(ts, mv);
	goto loc_4AA4B5;

loc_4AA4B1:
	mov(mv, x86::mem(ts->esi + 0x64, 1), 0x0);

loc_4AA4B5:
	mov(mv, x86::mem(ts->esi + 0x65, 1), ts->bl);

loc_4AA4B8:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->ecx, x86::mem(0x86518C, 4));
	sub(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ecx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787ADC, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4AA4F0;
    }
	mov(&ts->ecx, ts->edi);
	game::sub_5EE270(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x86518C, 4));
	sub(mv, &ts->edx, x86::mem(ts->eax, 4));
	mov(mv, x86::mem(ts->esi + 0x58, 4), ts->edx);

loc_4AA4F0:
	push(mv, &ts->esp, ts->ebp);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	game::sub_577240(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x2C, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, ts->edx);
	game::sub_537BE0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x86518C, 4));
	sub(mv, &ts->eax, x86::mem(ts->esi + 0x5C, 4));
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	add(&ts->esp, 0xC);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7844C0, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4AA5A0;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x38, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, ts->edx);
	game::sub_537BE0(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x64, 1));
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4AA562;
    }
	push(mv, &ts->esp, 0xA8247197);
	push(mv, &ts->esp, 0x20);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	goto loc_4AA56E;

loc_4AA562:
	push(mv, &ts->esp, 0xFC1B498A);
	push(mv, &ts->esp, 0x20);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x4C, 4));
	push(mv, &ts->esp, ts->ecx);

loc_4AA56E:
	game::sub_4FFA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x34, 4));
	add(&ts->esp, 0xC);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x44, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, ts->eax);
	game::sub_537BE0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x34, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x38, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0x14);
	goto loc_4AA5E1;

loc_4AA5A0:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x34, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x38, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA00(ts, mv);
	goto loc_4AA5DE;

loc_4AA5B4:
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_4AA5D0;
    }
	cmp(mv, &ts->eflags, x86::mem(0x83AAB4, 4), 0x8);
	if (!ts->eflags.zero) {
        goto loc_4AA5D0;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0x9B07307F);
	push(mv, &ts->esp, ts->edx);
	goto loc_4AA5D9;

loc_4AA5D0:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0x61C9B7A2);
	push(mv, &ts->esp, ts->eax);

loc_4AA5D9:
	game::sub_50C900(ts, mv);

loc_4AA5DE:
	add(&ts->esp, 0x8);

loc_4AA5E1:
	mov(&ts->ecx, ts->edi);
	game::sub_5EE2B0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (ts->eflags.parity) {
        goto loc_4AA61B;
    }
	push(mv, &ts->esp, 0x7909EC);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C960(ts, mv);
	add(&ts->esp, 0xC);
	goto loc_4AA62A;

loc_4AA61B:
	push(mv, &ts->esp, ts->ebp);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	game::sub_577240(ts, mv);

loc_4AA62A:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x28, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, ts->edx);
	game::sub_537BE0(ts, mv);
	mov(mv, &ts->al, x86::mem(0x89E7D9, 1));
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4AA652;
    }
	mov(mv, &ts->eax, x86::mem(0x890104, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4AA6AC;
    }

loc_4AA652:
	cmp(mv, &ts->eflags, x86::mem(0x89E7C0, 4), 0x2);
	if (!ts->eflags.zero) {
        goto loc_4AA6AC;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, 0x7909D8);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, 0x7909C4);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, 0x7909B4);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x30);

loc_4AA6AC:
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_4AA6FA;
    }
	cmp(mv, &ts->eflags, x86::mem(0x83AAB4, 4), 0x8);
	if (!ts->eflags.zero) {
        goto loc_4AA6FA;
    }
	mov(&ts->ecx, 0x83AAB4);
	game::sub_502780(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4AA6FA;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x68, 4));
	push(mv, &ts->esp, ts->ebp);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_577240(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x3C, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, ts->edx);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0x54);
	retn(mv, &ts->esp, 0x4);

loc_4AA6FA:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x68, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x10, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4AA731;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x7909A4);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x24, 4), 0xC3230000);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0x436B0000);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), 0x42840000);
	game::sub_542630(ts, mv);
	add(&ts->esp, 0xC);

loc_4AA731:
	pop(mv, &ts->esp, ts->ebx);

loc_4AA732:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0x54);
	retn(mv, &ts->esp, 0x4);
}

void sub_4AA740(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x28, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4AA796;
    }
	mov(mv, &ts->eax, x86::mem(0x86518C, 4));
	mov(mv, x86::mem(ts->esi + 0x2C, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x34, 4));
	push(mv, &ts->esp, 0x1);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4AA775;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, 0x790A18);
	push(mv, &ts->esp, ts->ecx);
	goto loc_4AA77E;

loc_4AA775:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, 0x790A0C);
	push(mv, &ts->esp, ts->edx);

loc_4AA77E:
	game::sub_51CF70(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x28, 1), 0x1);

loc_4AA796:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4AA7A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	sub(&ts->esp, 0x1C);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F00F0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4AA87C;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(0x89CF50, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4AA87C;
    }
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F0220(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x7F68D0, 4));
	mov(mv, &ts->edx, x86::mem(0x7F68D4, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x7F68D8, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ecx);
	cmp(mv, &ts->eflags, ts->eax, x86::mem(0x89CF4C, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(0x7F68DC, 4));
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_4AA83A;
    }
	mov(&ts->ecx, ts->eax);
	game::sub_5FE290(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4AA83A;
    }
	mov(mv, &ts->eax, x86::mem(0x7F68E0, 4));
	mov(mv, &ts->ecx, x86::mem(0x7F68E4, 4));
	mov(mv, &ts->edx, x86::mem(0x7F68E8, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x7F68EC, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);

loc_4AA83A:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	game::__ftol2(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	mov(&ts->esi, ts->eax);
	shl(&ts->esi, 0x8);
	game::__ftol2(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	or_(&ts->esi, ts->eax);
	shl(&ts->esi, 0x8);
	game::__ftol2(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	or_(&ts->esi, ts->eax);
	shl(&ts->esi, 0x8);
	game::__ftol2(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	or_(&ts->esi, ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51D7F0(ts, mv);
	add(&ts->esp, 0x8);

loc_4AA87C:
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x8);
}

void sub_4AA890(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x1C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4AA9E2;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	movsx(mv, &ts->ebp, x86::mem(ts->eax + 0xA, 1));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x170, 4));
	xor_(&ts->ebx, ts->ebx);
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4AA9DF;
    }
	lea(mv, &ts->esi, x86::mem(ts->edi + 0x174, 4));
	goto loc_4AA8D0;
	goto loc_4AA8D0;

loc_4AA8D0:
	mov(mv, &ts->edx, x86::mem(0x890118, 4));
	cmp(mv, &ts->eflags, ts->ebx, x86::mem(ts->edx + 0x24, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4AA9DF;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi - 0x1C, 4));
	imul(&ts->eax, ts->eax, 0x34);
	cmp(mv, &ts->eflags, x86::mem(ts->eax + (ts->edi) + 0x20, 4), ts->ebp);
	push(mv, &ts->esp, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4AA943;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0x790A2C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51CF70(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x790A2C);
	push(mv, &ts->esp, ts->edx);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0x18);
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F00F0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->al, 0x1);
	mov(mv, &ts->eax, x86::mem(ts->esi - 0x1C, 4));
	if (!ts->eflags.zero) {
        goto loc_4AA933;
    }
	imul(&ts->eax, ts->eax, 0x34);
	mov(mv, &ts->ecx, x86::mem(ts->eax + (ts->edi) + 0x50, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	goto loc_4AA99C;

loc_4AA933:
	imul(&ts->eax, ts->eax, 0x34);
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->edi) + 0x2C, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, ts->edx);
	goto loc_4AA994;

loc_4AA943:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0x78F9D4);
	push(mv, &ts->esp, ts->eax);
	game::sub_51CF70(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F9D4);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0x18);
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F00F0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi - 0x1C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	imul(&ts->edx, ts->edx, 0x34);
	cmp(&ts->eflags, ts->al, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4AA989;
    }
	mov(mv, &ts->eax, x86::mem(ts->edx + (ts->edi) + 0x50, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	goto loc_4AA99C;

loc_4AA989:
	lea(mv, &ts->eax, x86::mem(ts->edx + (ts->edi) + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, ts->ecx);

loc_4AA994:
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0xC);

loc_4AA99C:
	mov(mv, &ts->edx, x86::mem(ts->esi - 0x1C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	imul(&ts->edx, ts->edx, 0x34);
	mov(mv, &ts->eax, x86::mem(ts->edx + (ts->edi) + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_4AA7A0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi - 0x1C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	imul(&ts->edx, ts->edx, 0x34);
	mov(mv, &ts->eax, x86::mem(ts->edx + (ts->edi) + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x790A24);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537BE0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x170, 4));
	add(&ts->esp, 0xC);
	inc(&ts->ebx);
	add(&ts->esi, 0x4);
	cmp(&ts->eflags, ts->ebx, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4AA8D0;
    }

loc_4AA9DF:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);

loc_4AA9E2:
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4AA9F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	sub(&ts->esp, 0x20);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x1C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4AAC1F;
    }
	movsx(mv, &ts->edx, x86::mem(ts->eax + 0xA, 1));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x170, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	xor_(&ts->ebp, ts->ebp);
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x34, 4), ts->edx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4AAC1C;
    }
	lea(mv, &ts->esi, x86::mem(ts->edi + 0x174, 4));
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_4AAA30:
	mov(mv, &ts->eax, x86::mem(0x890118, 4));
	cmp(mv, &ts->eflags, ts->ebp, x86::mem(ts->eax + 0x24, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4AAC1C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi - 0x1C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x34, 4));
	imul(&ts->ecx, ts->ecx, 0x34);
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + (ts->edi) + 0x20, 4), ts->edx);
	push(mv, &ts->esp, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4AAAA9;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0x790A2C);
	push(mv, &ts->esp, ts->eax);
	game::sub_51CF70(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x790A2C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0x18);
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F00F0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi - 0x1C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	imul(&ts->edx, ts->edx, 0x34);
	cmp(&ts->eflags, ts->al, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4AAA99;
    }
	mov(mv, &ts->eax, x86::mem(ts->edx + (ts->edi) + 0x50, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	goto loc_4AABD9;

loc_4AAA99:
	lea(mv, &ts->eax, x86::mem(ts->edx + (ts->edi) + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, ts->ecx);
	goto loc_4AABD1;

loc_4AAAA9:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0x78F9D4);
	push(mv, &ts->esp, ts->edx);
	game::sub_51CF70(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F9D4);
	push(mv, &ts->esp, ts->eax);
	game::sub_51CF70(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi - 0x1C, 4));
	imul(&ts->ecx, ts->ecx, 0x34);
	mov(mv, &ts->eax, x86::mem(ts->ecx + (ts->edi) + 0x20, 4));
	mov(mv, &ts->ecx, x86::mem(0x890118, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x24, 4));
	add(&ts->esp, 0x18);
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_4AAAE9;
    }
	mov(mv, &ts->ebx, x86::mem(ts->ecx + (ts->eax*4) + 0xBCC, 4));
	goto loc_4AAAEB;

loc_4AAAE9:
	xor_(&ts->ebx, ts->ebx);

loc_4AAAEB:
	mov(&ts->ecx, ts->ebx);
	game::sub_5EE250(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4AAB88;
    }
	movsx(mv, &ts->eax, x86::mem(ts->ebx + 0x10, 2));
	add(&ts->eax, 0xFFFFFFFD);
	cmp(&ts->eflags, ts->eax, 0x9);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4AAB06;
    }
	jmp(x86::mem(0x4AAC28, 4));

loc_4AAB0D:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->eax, 0x1E66364);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	goto loc_4AABD9;

loc_4AAB23:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->eax, 0xB7B75185);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	goto loc_4AABD9;

loc_4AAB39:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->eax, 0x1CE129E0);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	goto loc_4AABD9;

loc_4AAB4F:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->eax, 0xA7DB717F);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	goto loc_4AABD9;

loc_4AAB62:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->eax, 0x5D82DBA2);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	goto loc_4AABD9;

def_4AAB06:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->eax, 0xD4293449);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	goto loc_4AABD9;

loc_4AAB88:
	cmp(mv, &ts->eflags, x86::mem(0x89E7B0, 4), 0x7);
	mov(mv, &ts->eax, x86::mem(ts->esi - 0x1C, 4));
	if (!ts->eflags.zero) {
        goto loc_4AABB1;
    }
	imul(&ts->eax, ts->eax, 0x34);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + (ts->edi) + 0x28, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x790A3C, 4));
	game::__ftol2(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, ts->ecx);
	goto loc_4AABD1;

loc_4AABB1:
	imul(&ts->eax, ts->eax, 0x34);
	push(mv, &ts->esp, 0xA);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->edi) + 0x28, 4));
	game::sub_577240(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, ts->edx);

loc_4AABD1:
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0xC);

loc_4AABD9:
	mov(mv, &ts->eax, x86::mem(ts->esi - 0x1C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	imul(&ts->eax, ts->eax, 0x34);
	mov(mv, &ts->ecx, x86::mem(ts->eax + (ts->edi) + 0x4C, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_4AA7A0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi - 0x1C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x10, 4));
	imul(&ts->eax, ts->eax, 0x34);
	mov(mv, &ts->ecx, x86::mem(ts->eax + (ts->edi) + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x790A24);
	push(mv, &ts->esp, ts->edx);
	game::sub_537BE0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x170, 4));
	add(&ts->esp, 0xC);
	inc(&ts->ebp);
	add(&ts->esi, 0x4);
	cmp(&ts->eflags, ts->ebp, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4AAA30;
    }

loc_4AAC1C:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);

loc_4AAC1F:
	pop(mv, &ts->esp, ts->edi);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp, 0x4);
}

void sub_4AAC50(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebx, ts->ecx);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, 0x864630);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebx);
	game::sub_43BE80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x170, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4AAC7A;
    }
	mov(&ts->edi, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	goto loc_4AAC80;

loc_4AAC7A:
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ecx);
	mov(&ts->edi, ts->ecx);

loc_4AAC80:
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4AAD7F;
    }
	push(mv, &ts->esp, ts->ebp);
	lea(mv, &ts->esi, x86::mem(ts->ebx + 0x174, 4));
	lea(mv, &ts->ebp, x86::mem(ts->ebx + 0x1C4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_4AACA0:
	mov(mv, &ts->al, x86::mem(ts->ebp + 0x8, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, 0x1);
	if (ts->eflags.zero) {
        goto loc_4AACB4;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0x790A2C);
	push(mv, &ts->esp, ts->eax);
	goto loc_4AACBD;

loc_4AACB4:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0x78F9D4);
	push(mv, &ts->esp, ts->ecx);

loc_4AACBD:
	game::sub_51CF70(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebp, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	game::sub_4AA7A0(ts, mv);
	mov(&ts->ecx, 0x89CF48);
	xor_(&ts->edi, ts->edi);
	game::sub_5F00F0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4AAD20;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F0220(ts, mv);
	mov(&ts->ebx, ts->eax);
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4AAD20;
    }
	mov(&ts->ecx, ts->ebx);
	game::sub_5EFA00(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4AAD20;
    }
	mov(mv, &ts->ebx, x86::mem(ts->ebx + 0x2C, 4));
	sub(&ts->ebx, 0xB);
	if (ts->eflags.zero) {
        goto loc_4AAD1B;
    }
	dec(&ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4AAD14;
    }
	mov(&ts->edi, 0xD4293449);
	goto loc_4AAD20;

loc_4AAD14:
	mov(&ts->edi, 0xA7DB717F);
	goto loc_4AAD20;

loc_4AAD1B:
	mov(&ts->edi, 0x1CE129E0);

loc_4AAD20:
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x10, 4));
	inc(&ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x790A24);
	push(mv, &ts->esp, ts->edx);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4AAD49;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	goto loc_4AAD62;

loc_4AAD49:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x4, 4));
	game::__ftol2(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0xC);

loc_4AAD62:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	add(&ts->esi, 0x4);
	add(&ts->ebp, 0x30);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ebx);
	cmp(&ts->eflags, ts->ebx, ts->eax);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x18, 4));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4AACA0;
    }
	mov(&ts->edi, ts->eax);
	pop(mv, &ts->esp, ts->ebp);

loc_4AAD7F:
	cmp(mv, &ts->eflags, ts->edi, x86::mem(ts->ebx + 0x170, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4AADB2;
    }
	lea(mv, &ts->esi, x86::mem(ts->ebx + (ts->edi*4) + 0x184, 4));
	mov(&ts->edi, ts->edi);

loc_4AAD90:
	mov(mv, &ts->edx, x86::mem(ts->esi - 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x170, 4));
	add(&ts->esp, 0x8);
	inc(&ts->edi);
	add(&ts->esi, 0x4);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4AAD90;
    }

loc_4AADB2:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp, 0x4);
}

void sub_4AADC0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebx, ts->ecx);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, 0x864630);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ebx);
	game::sub_43BE80(ts, mv);
	mov(mv, &ts->ebp, x86::mem(ts->ebx + 0x170, 4));
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4AADE3;
    }
	mov(&ts->ebp, ts->eax);

loc_4AADE3:
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4AAE8C;
    }
	lea(mv, &ts->esi, x86::mem(ts->ebx + 0x174, 4));
	add(&ts->ebx, 0x1C4);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_4AAE00:
	mov(mv, &ts->al, x86::mem(ts->ebx + 0x8, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, 0x1);
	if (ts->eflags.zero) {
        goto loc_4AAE14;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0x790A2C);
	push(mv, &ts->esp, ts->eax);
	goto loc_4AAE1D;

loc_4AAE14:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0x78F9D4);
	push(mv, &ts->esp, ts->ecx);

loc_4AAE1D:
	game::sub_51CF70(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebx, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_4AA7A0(ts, mv);
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F00F0(ts, mv);
	cmp(&ts->eflags, ts->al, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4AAE53;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x2C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	goto loc_4AAE67;

loc_4AAE53:
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	lea(mv, &ts->eax, x86::mem(ts->ebx + 0x9, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0xC);

loc_4AAE67:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x10, 4));
	inc(&ts->edi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x790A24);
	push(mv, &ts->esp, ts->edx);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0xC);
	add(&ts->esi, 0x4);
	add(&ts->ebx, 0x30);
	cmp(&ts->eflags, ts->edi, ts->ebp);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4AAE00;
    }
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x10, 4));

loc_4AAE8C:
	cmp(mv, &ts->eflags, ts->ebp, x86::mem(ts->ebx + 0x170, 4));
	mov(&ts->edi, ts->ebp);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4AAEC2;
    }
	lea(mv, &ts->esi, x86::mem(ts->ebx + (ts->ebp*4) + 0x184, 4));
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_4AAEA0:
	mov(mv, &ts->eax, x86::mem(ts->esi - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x170, 4));
	add(&ts->esp, 0x8);
	inc(&ts->edi);
	add(&ts->esi, 0x4);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4AAEA0;
    }

loc_4AAEC2:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);
}

void sub_4AAED0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x40);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x44, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x890118, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ebp);
	game::sub_5EEF60(ts, mv);
	xor_(&ts->edx, ts->edx);
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (ts->eflags.zero) {
        goto loc_4AAFB3;
    }
	push(mv, &ts->esp, ts->ebx);
	movsx(mv, &ts->ebx, x86::mem(ts->eax + 0xA, 1));
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x170, 4));
	dec(&ts->ebx);
	dec(&ts->eax);
	cmp(&ts->eflags, ts->eax, ts->edx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edx);
	mov(mv, x86::mem(ts->ebp + 0x158, 4), ts->edx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4AAF6C;
    }
	mov(mv, &ts->ecx, x86::mem(0x890118, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x24, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	lea(mv, &ts->edi, x86::mem(ts->ebx - 0x1, 4));
	lea(mv, &ts->esi, x86::mem(ts->ebx + 0x1, 4));
	mov(mv, x86::mem(ts->esp + 0x54, 4), ts->edx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4AAF6C;
    }
	goto loc_4AAF30;

loc_4AAF30:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4AAF6C;
    }
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4AAF44;
    }
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4AAF44;
    }
	mov(mv, x86::mem(ts->esp + (ts->edx*4) + 0x18, 4), ts->edi);
	inc(&ts->edx);
	dec(&ts->eax);
	dec(&ts->edi);

loc_4AAF44:
	cmp(&ts->eflags, ts->esi, ts->ecx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4AAF5B;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4AAF5B;
    }
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esp + (ts->ebp*4) + 0x34, 4), ts->esi);
	inc(&ts->ebp);
	dec(&ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebp);
	inc(&ts->esi);

loc_4AAF5B:
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x54, 4));
	inc(&ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x54, 4), ts->ebp);
	cmp(&ts->eflags, ts->ebp, ts->ecx);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x14, 4));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4AAF30;
    }

loc_4AAF6C:
	test(&ts->eflags, ts->edx, ts->edx);
	mov(&ts->edi, 0x1);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4AAF8F;
    }
	lea(mv, &ts->esi, x86::mem(ts->ebp + 0x15C, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + (ts->edx*4) + 0x14, 4));
	lea(mv, &ts->edi, x86::mem(ts->edx + 0x1, 4));

loc_4AAF82:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, x86::mem(ts->esi, 4), ts->ecx);
	sub(&ts->eax, 0x4);
	add(&ts->esi, 0x4);
	dec(&ts->edx);
	if (!ts->eflags.zero) {
        goto loc_4AAF82;
    }

loc_4AAF8F:
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4AAF9B;
    }
	mov(mv, x86::mem(ts->ebp + (ts->edi*4) + 0x158, 4), ts->ebx);
	inc(&ts->edi);

loc_4AAF9B:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4AAFB0;
    }
	lea(mv, &ts->edi, x86::mem(ts->ebp + (ts->edi*4) + 0x158, 4));
	lea(mv, &ts->esi, x86::mem(ts->esp + 0x34, 4));
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));

loc_4AAFB0:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);

loc_4AAFB3:
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0x40);
	retn(mv, &ts->esp, 0x4);
}

void sub_4AAFC0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x14, 4));
	and_(&ts->eax, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	and_(&ts->ecx, ts->ebx);
	or_(&ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4AB0A8;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->bl, x86::mem(ts->eax + 0x248, 1));
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F00F0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4AB036;
    }
	mov(mv, &ts->ecx, x86::mem(0x89CF4C, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_5EFA90(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4AB02E;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	sub(&ts->esp, 0x8);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 8));
	push(mv, &ts->esp, 0x790A48);
	push(mv, &ts->esp, ts->eax);
	game::sub_537BE0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0x14);
	goto loc_4AB046;

loc_4AB02E:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x24, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	push(mv, &ts->esp, ts->edx);
	goto loc_4AB03A;

loc_4AB036:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	push(mv, &ts->esp, ts->eax);

loc_4AB03A:
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->bl, ts->bl);
	if (ts->eflags.zero) {
        goto loc_4AB069;
    }

loc_4AB046:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x28, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4AB0A8;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F970);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x28, 1), 0x1);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

loc_4AB069:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x24, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x28, 1));
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4AB0A8;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, 0x790A40);
	push(mv, &ts->esp, ts->eax);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4AB0A8;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x790A40);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51CF70(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x28, 1), 0x0);
	add(&ts->esp, 0xC);

loc_4AB0A8:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_4AB0B0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x4, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x8, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0xC, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4AB1DF;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784544, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4AB130;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784544, 4));

loc_4AB130:
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4AB1EA;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784544, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4AB16B;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784544, 4));

loc_4AB16B:
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4AB1F5;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784544, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4AB1A3;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784544, 4));

loc_4AB1A3:
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0xC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4AB1FD;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784544, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4AB203;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	mov(mv, x86::mem(ts->ecx + 0xC, 4), 0x437F0000);
	retn(mv, &ts->esp, 0x10);

loc_4AB1DF:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	goto loc_4AB130;

loc_4AB1EA:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	goto loc_4AB16B;

loc_4AB1F5:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	goto loc_4AB1A3;

loc_4AB1FD:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));

loc_4AB203:
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0xC, 4));
	retn(mv, &ts->esp, 0x10);
}

void sub_4AB210(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4AB232;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	goto loc_4AB247;

loc_4AB232:
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4AB247;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));

loc_4AB247:
	cmp(mv, &ts->eflags, x86::mem(0x89E7C0, 4), 0x1);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	if (!ts->eflags.zero) {
        goto loc_4AB25C;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x10, 4));
	goto loc_4AB262;

loc_4AB25C:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x8, 4));

loc_4AB262:
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4AB271;
    }
	fsub(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	goto loc_4AB27B;

loc_4AB271:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78450C, 4));
	fsub(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));

loc_4AB27B:
	fmulp(&ts->fp, x86::fp_index(2), x86::fp_index(0));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78450C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4AB292;
    }
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78450C, 4));

loc_4AB292:
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x790A50, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto locret_4AB2A5;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78450C, 4));

locret_4AB2A5:
	retn(mv, &ts->esp, 0xC);
}

void sub_4AB2B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8C, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4AB323;
    }
	mov(mv, &ts->eax, x86::mem(0x86518C, 4));
	sub(mv, &ts->eax, x86::mem(ts->ecx + 0x90, 4));
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8C, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4AB30A;
    }
	mov(mv, x86::mem(ts->ecx + 0x8C, 4), 0x0);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x70, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_4AB30A:
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x70, 4));
	sub(&ts->esp, 0x8);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 8));
	push(mv, &ts->esp, 0x790A48);
	push(mv, &ts->esp, ts->edx);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_4AB323:
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x70, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_4AB340(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x95, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4AB37F;
    }
	mov(mv, &ts->eax, x86::mem(0x86518C, 4));
	sub(mv, &ts->eax, x86::mem(ts->ecx + 0x98, 4));
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7844C0, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4AB38B;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x74, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_4AB37F:
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x74, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);

loc_4AB38B:
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_4AB390(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4AB3A3;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	goto loc_4AB3A7;

loc_4AB3A3:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));

loc_4AB3A7:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4AB3C0;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));

loc_4AB3C0:
	fabs(&ts->fp, x86::fp_index(0));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784E8C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4AB3DB;
    }
	mov(mv, x86::mem(ts->esp + 0x8, 4), 0x42B40000);

loc_4AB3DB:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	game::__ftol2(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x64, 4));
	push(mv, &ts->esp, 0x7845D4);
	push(mv, &ts->esp, ts->eax);
	game::sub_537BE0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784E8C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	add(&ts->esp, 0x8);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_51CED0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);
}

void sub_4AB420(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(ts->esp + 0x8, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4AB460;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x6C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x6C, 4));
	push(mv, &ts->esp, 0x790A64);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4AB4A5;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x6C, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x790A64);
	push(mv, &ts->esp, ts->edx);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);

loc_4AB460:
	mov(mv, &ts->al, x86::mem(ts->esp + 0x8, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x6C, 4));
	push(mv, &ts->esp, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4AB49D;
    }
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x6C, 4));
	push(mv, &ts->esp, 0x790A54);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4AB4A5;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x6C, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x790A54);
	push(mv, &ts->esp, ts->edx);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);

loc_4AB49D:
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);

loc_4AB4A5:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4AB4B0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x1C, 4));
	mov(mv, &ts->cl, x86::mem(0x89E7D9, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	push(mv, &ts->esp, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_4AB4EB;
    }
	mov(mv, &ts->ecx, x86::mem(0x890104, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4AB4EB;
    }
	mov(mv, &ts->ecx, x86::mem(0x89E7A0, 4));
	cmp(&ts->eflags, ts->ecx, 0x104E);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4AB4E5;
    }
	cmp(&ts->eflags, ts->ecx, 0x1053);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4AB4EB;
    }

loc_4AB4E5:
	movsx(mv, &ts->esi, x86::mem(ts->eax + 0xC, 1));
	goto loc_4AB502;

loc_4AB4EB:
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	movsx(mv, &ts->edx, x86::mem(ts->eax + 0xA, 2));
	push(mv, &ts->esp, ts->edx);
	game::sub_56DD90(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x89E7A0, 4));
	add(&ts->esp, 0x4);
	mov(&ts->esi, ts->eax);

loc_4AB502:
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x8);
	if (!ts->eflags.zero) {
        goto loc_4AB55C;
    }
	mov(mv, &ts->eax, x86::mem(0x89CF4C, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->eax, 0x4);
	if (ts->eflags.zero) {
        goto loc_4AB525;
    }
	cmp(&ts->eflags, ts->eax, 0x6);
	if (ts->eflags.zero) {
        goto loc_4AB525;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4AB525;
    }
	cmp(&ts->eflags, ts->eax, 0x5);
	if (!ts->eflags.zero) {
        goto loc_4AB52E;
    }

loc_4AB525:
	mov(&ts->eax, 0xA7DB717F);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4AB52E:
	mov(mv, &ts->ecx, x86::mem(0x89E7CC, 4));
	mov(mv, &ts->edx, x86::mem(0x89E7C8, 4));
	mov(mv, &ts->eax, x86::mem(0x89E7C0, 4));
	add(&ts->edx, ts->ecx);
	add(mv, &ts->edx, x86::mem(0x89E7C4, 4));
	add(&ts->edx, ts->eax);
	mov(mv, &ts->eax, x86::mem(0x890118, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x28, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_4AB59E;
    }
	mov(&ts->eax, 0xE863DD5C);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4AB55C:
	mov(mv, &ts->al, x86::mem(0x89E7D9, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4AB589;
    }
	mov(mv, &ts->eax, x86::mem(0x890104, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4AB589;
    }
	cmp(&ts->eflags, ts->ecx, 0x104E);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4AB57E;
    }
	cmp(&ts->eflags, ts->ecx, 0x1053);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4AB589;
    }

loc_4AB57E:
	mov(mv, &ts->ecx, x86::mem(0x890118, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x24, 4), ts->esi);
	goto loc_4AB597;

loc_4AB589:
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, 0x864630);
	game::sub_43BE80(ts, mv);
	cmp(&ts->eflags, ts->esi, ts->eax);

loc_4AB597:
	mov(&ts->eax, 0xEAC720D3);
	if (ts->eflags.zero) {
        goto loc_4AB5A5;
    }

loc_4AB59E:
	mov(mv, &ts->eax, x86::mem(0x7F66B4, 4));

loc_4AB5A5:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4AB5B0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x20);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	and_(&ts->eax, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	push(mv, &ts->esp, ts->edi);
	and_(mv, &ts->ecx, x86::mem(ts->esi + 0x14, 4));
	or_(&ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4AB6F4;
    }
	mov(mv, &ts->ecx, x86::mem(0x890118, 4));
	game::sub_5EEA40(ts, mv);
	mov(&ts->edi, ts->eax);
	test(&ts->eflags, ts->edi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_4AB5F2;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp, 0x4);

loc_4AB5F2:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->edi, 0x4);
	if (!ts->eflags.zero) {
        goto loc_4AB616;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, 0x535);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	goto loc_4AB628;

loc_4AB616:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x7845D4);
	push(mv, &ts->esp, ts->eax);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0xC);

loc_4AB628:
	mov(mv, &ts->ecx, x86::mem(0x890118, 4));
	game::sub_5EEB00(ts, mv);
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x790A70, 4));
	game::__ftol2(ts, mv);
	mov(&ts->ecx, ts->eax);
	mov(&ts->eax, 0xB60B60B7);
	imul(&ts->eax, ts->ecx);
	add(&ts->edx, ts->ecx);
	sar(&ts->edx, 0x8);
	mov(&ts->ecx, ts->edx);
	shr(&ts->ecx, 0x1F);
	add(&ts->edx, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_43C370(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CCC0(ts, mv);
	add(&ts->esp, 0xC);
	mov(&ts->ecx, ts->eax);
	game::sub_5054D0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784544, 4));
	mov(&ts->edi, ts->eax);
	and_(&ts->edi, 0xFFFFFF);
	game::__ftol2(ts, mv);
	shl(&ts->eax, 0x18);
	or_(&ts->edi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_51D7F0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_51D620(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78E070, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CC00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edx);
	game::sub_50CB40(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x34, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x38, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_51D4D0(ts, mv);
	add(&ts->esp, 0x30);

loc_4AB6F4:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp, 0x4);
}

void sub_4AB700(x86::thread_state* ts, x86::memory_view* mv) {
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x5C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_4AB74D;
    }
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x5C, 4));
	game::__ftol2(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, ts->eax);
	game::sub_537BE0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51CF70(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, ts->edx);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0x24);
	goto loc_4AB74F;

loc_4AB74D:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));

loc_4AB74F:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x79, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4AB774;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x28, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0xC);

loc_4AB774:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4AB780(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x1C, 4));
	cmp(&ts->eflags, ts->esi, 0xA46AAEA8);
	setnz(ts->eflags, &ts->al);
	test(&ts->eflags, ts->al, ts->al);
	mov(&ts->ebx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x18, 1), ts->al);
	if (ts->eflags.zero) {
        goto loc_4AB7AB;
    }
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x10, 4));
	fdivr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0xC, 4));
	goto loc_4AB7AE;

loc_4AB7AB:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0xC, 4));

loc_4AB7AE:
	game::__ftol2(ts, mv);
	mov(&ts->ebp, ts->eax);
	mov(mv, &ts->al, x86::mem(ts->edi + 0x28, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4AB87B;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0xC, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_4AB87B;
    }
	mov(mv, &ts->al, x86::mem(0x89E7D9, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4AB7E6;
    }
	mov(mv, &ts->eax, x86::mem(0x890104, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4AB83A;
    }

loc_4AB7E6:
	cmp(&ts->eflags, ts->esi, 0xA46AAEA8);
	if (!ts->eflags.zero) {
        goto loc_4AB83A;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x64, 4));
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_51D7F0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x64, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	game::sub_51D7F0(ts, mv);

loc_4AB80A:
	add(&ts->esp, 0x10);

loc_4AB80D:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x10, 4));
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4AB8D8;
    }
	mov(mv, &ts->cl, x86::mem(ts->esp + 0x18, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_4AB8D8;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x790AC0);
	push(mv, &ts->esp, ts->esi);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0x10);
	goto loc_4AB8E7;

loc_4AB83A:
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x60, 4));
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->esi);
	game::sub_51D7F0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x60, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_51D7F0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x10, 4));
	add(&ts->esp, 0x10);
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4AB8D0;
    }
	mov(mv, &ts->cl, x86::mem(ts->esp + 0x18, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_4AB8D0;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x790AB4);
	push(mv, &ts->esp, ts->esi);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0x10);
	goto loc_4AB8E7;

loc_4AB87B:
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x68, 4));
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	game::sub_51D7F0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x68, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ebx);
	game::sub_51D7F0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x10, 4));
	add(&ts->esp, 0x10);
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4AB8BC;
    }
	mov(mv, &ts->cl, x86::mem(ts->esp + 0x18, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_4AB8BC;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x790AC0);
	push(mv, &ts->esp, ts->esi);
	game::sub_537BE0(ts, mv);
	goto loc_4AB80A;

loc_4AB8BC:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, ts->esi);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0xC);
	goto loc_4AB80D;

loc_4AB8D0:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x790AAC);
	goto loc_4AB8DE;

loc_4AB8D8:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x78F744);

loc_4AB8DE:
	push(mv, &ts->esp, ts->esi);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0xC);

loc_4AB8E7:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4AB93B;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0x20, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4AB969;
    }
	push(mv, &ts->esp, 0x790AA4);
	push(mv, &ts->esp, ts->esi);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4AB93B;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x790A9C);
	push(mv, &ts->esp, ts->esi);
	game::sub_51CF70(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x79, 1));
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4AB933;
    }
	game::sub_50CA50(ts, mv);
	goto loc_4AB938;

loc_4AB933:
	game::sub_50CA00(ts, mv);

loc_4AB938:
	add(&ts->esp, 0x4);

loc_4AB93B:
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0x20, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4AB969;
    }
	push(mv, &ts->esp, 0x790AA4);
	push(mv, &ts->esp, ts->ebx);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4AB969;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x790A9C);
	push(mv, &ts->esp, ts->ebx);
	game::sub_51CF70(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0x10);

loc_4AB969:
	mov(mv, &ts->al, x86::mem(ts->edi + 0x20, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4AB9CD;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x24, 4));
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.zero) {
        goto loc_4AB984;
    }
	mov(mv, &ts->cl, x86::mem(ts->edi + 0x8, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_4AB9CD;
    }
	cmp(&ts->eflags, ts->eax, 0x5);
	if (ts->eflags.zero) {
        goto loc_4AB9CD;
    }

loc_4AB984:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x790AA4);
	push(mv, &ts->esp, ts->ebx);
	game::sub_51CF70(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->al, x86::mem(ts->edx + 0x79, 1));
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4AB9C6;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0xC, 4));
	push(mv, &ts->esp, 0x1);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4AB9B8;
    }
	push(mv, &ts->esp, 0x790A8C);
	goto loc_4AB9BD;

loc_4AB9B8:
	push(mv, &ts->esp, 0x790AA4);

loc_4AB9BD:
	push(mv, &ts->esp, ts->esi);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);

loc_4AB9C6:
	mov(mv, x86::mem(ts->edi + 0x24, 4), 0x5);

loc_4AB9CD:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x18, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4AB9DB;
    }
	cmp(&ts->eflags, ts->eax, 0x7FFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_4AB9E7;
    }

loc_4AB9DB:
	mov(mv, x86::mem(ts->edi + 0x20, 1), 0x1);
	mov(mv, &ts->eax, x86::mem(0x86518C, 4));
	mov(mv, x86::mem(ts->edi + 0x18, 4), ts->eax);

loc_4AB9E7:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0xC);
}

void sub_4AB9F0(x86::thread_state* ts, x86::memory_view* mv) {
	movsx(mv, &ts->eax, x86::mem(ts->esp + 0x4, 1));
	sub(&ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_4ABA0C;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto locret_4ABA2D;
    }
	push(mv, &ts->esp, 0xE);
	push(mv, &ts->esp, 0xB);
	game::sub_51DE30(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x4);

loc_4ABA0C:
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x1, 1), 0x13);
	if (!ts->eflags.zero) {
        goto loc_4ABA21;
    }
	push(mv, &ts->esp, 0xF);
	push(mv, &ts->esp, 0xB);
	game::sub_51DE30(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x4);

loc_4ABA21:
	push(mv, &ts->esp, 0xD);
	push(mv, &ts->esp, 0xB);
	game::sub_51DE30(ts, mv);
	add(&ts->esp, 0x8);

locret_4ABA2D:
	retn(mv, &ts->esp, 0x4);
}

void sub_4ABA30(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	movsx(mv, &ts->eax, x86::mem(ts->esi, 1));
	add(&ts->eax, 0xFFFFFFFE);
	cmp(&ts->eflags, ts->eax, 0x4);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4ABA42;
    }
	jmp(x86::mem(0x4ABAD4, 4));

loc_4ABA49:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, 0x6FFF0767);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C990(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->esi, x86::mem(ts->edx, 4));
	push(mv, &ts->esp, 0x78F6BC);
	push(mv, &ts->esp, ts->esi);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto def_4ABA42;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F6BC);
	push(mv, &ts->esp, ts->esi);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4ABA84:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, 0x6FFF0767);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C990(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->esi, x86::mem(ts->edx, 4));
	push(mv, &ts->esp, 0x78F9D4);
	push(mv, &ts->esp, ts->esi);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x10);
	goto loc_4ABABC;

loc_4ABAA9:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->esi, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, 0x78F9D4);
	push(mv, &ts->esp, ts->esi);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x8);

loc_4ABABC:
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto def_4ABA42;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F9D4);
	push(mv, &ts->esp, ts->esi);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);

def_4ABA42:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4ABAF0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	movsx(mv, &ts->eax, x86::mem(ts->esi, 1));
	add(&ts->eax, 0xFFFFFFFE);
	cmp(&ts->eflags, ts->eax, 0x4);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4ABB06;
    }
	push(mv, &ts->esp, ts->edi);
	jmp(x86::mem(0x4ABE34, 4));

loc_4ABB0D:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x6FFF0767);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C990(ts, mv);
	mov(mv, &ts->edi, x86::mem(0x861E60, 4));
	add(&ts->esp, 0x8);
	dec(&ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(&ts->ebx, 0x8);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4ABB55;
    }

loc_4ABB31:
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x860A60);
	game::sub_5014A0(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x4, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4ABB48;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x6, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_4ABB4F;
    }

loc_4ABB48:
	dec(&ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_4ABB31;
    }
	goto loc_4ABB55;

loc_4ABB4F:
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	movsx(mv, &ts->ebx, x86::mem(ts->edx + 0x5, 1));

loc_4ABB55:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_4974A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C990(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x14, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x18, 4));
	push(mv, &ts->esp, 0x790AD8);
	push(mv, &ts->esp, ts->eax);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x28);
	test(&ts->eflags, ts->al, ts->al);
	pop(mv, &ts->esp, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4ABC12;
    }
	push(mv, &ts->esp, 0x790AD8);
	game::sub_505450(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x18, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_5046B0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4ABBEA;
    }
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->eax);
	game::sub_504A00(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->eax);
	game::sub_535570(ts, mv);

loc_4ABBEA:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x18, 4));
	push(mv, &ts->esp, 0x790AD8);
	push(mv, &ts->esp, ts->edi);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4ABC12;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x790AD8);
	push(mv, &ts->esp, ts->edi);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);

loc_4ABC12:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x1C, 4));
	push(mv, &ts->esp, 0x78FC44);
	push(mv, &ts->esp, ts->edi);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4ABC3A;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FC44);
	push(mv, &ts->esp, ts->edi);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);

loc_4ABC3A:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->edi, x86::mem(ts->edx + 0x8, 4));
	push(mv, &ts->esp, 0x790AD0);
	push(mv, &ts->esp, ts->edi);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4ABC62;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x790AD0);
	push(mv, &ts->esp, ts->edi);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);

loc_4ABC62:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->esi, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, 0x78F6BC);
	push(mv, &ts->esp, ts->esi);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4ABE2C;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F6BC);
	push(mv, &ts->esp, ts->esi);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_4ABC95:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x18, 4));
	push(mv, &ts->esp, 0x4B9B8F5A);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C990(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, 0xEA570722);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C990(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x1C, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->edi, x86::mem(ts->edx + 0x18, 4));
	push(mv, &ts->esp, 0x790AC8);
	push(mv, &ts->esp, ts->edi);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x24);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4ABD02;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x790AC8);
	push(mv, &ts->esp, ts->edi);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);

loc_4ABD02:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, 0x790AC8);
	push(mv, &ts->esp, ts->edi);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4ABD2A;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x790AC8);
	push(mv, &ts->esp, ts->edi);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);

loc_4ABD2A:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x1C, 4));
	push(mv, &ts->esp, 0x790AC8);
	push(mv, &ts->esp, ts->edi);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4ABD52;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x790AC8);
	push(mv, &ts->esp, ts->edi);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);

loc_4ABD52:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->edi, x86::mem(ts->edx, 4));
	push(mv, &ts->esp, 0x78F9D4);
	push(mv, &ts->esp, ts->edi);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4ABD79;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F9D4);
	push(mv, &ts->esp, ts->edi);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);

loc_4ABD79:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->edx);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_4ABD99:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, 0xEA570722);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C990(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x18, 4));
	push(mv, &ts->esp, 0x78FC44);
	push(mv, &ts->esp, ts->edi);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x14);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4ABDDD;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FC44);
	push(mv, &ts->esp, ts->edi);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);

loc_4ABDDD:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->edi, x86::mem(ts->edx + 0x1C, 4));
	push(mv, &ts->esp, 0x78FC44);
	push(mv, &ts->esp, ts->edi);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4ABE05;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FC44);
	push(mv, &ts->esp, ts->edi);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);

loc_4ABE05:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->esi, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, 0x78F9D4);
	push(mv, &ts->esp, ts->esi);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4ABE2C;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F9D4);
	push(mv, &ts->esp, ts->esi);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);

loc_4ABE2C:
	pop(mv, &ts->esp, ts->edi);

def_4ABB06:
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);
}

void sub_4ABE50(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	dec(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0x12);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4ABE5A;
    }
	jmp(x86::mem(0x4ABECC, 4));

loc_4ABE61:
	mov(&ts->eax, 0xE9638D3E);
	retn(mv, &ts->esp);

loc_4ABE67:
	mov(&ts->eax, 0x2521E5EB);
	retn(mv, &ts->esp);

loc_4ABE6D:
	mov(&ts->eax, 0xAAAB31E9);
	retn(mv, &ts->esp);

loc_4ABE73:
	mov(&ts->eax, 0x119144);
	retn(mv, &ts->esp);

loc_4ABE79:
	mov(&ts->eax, 0x91703AEF);
	retn(mv, &ts->esp);

loc_4ABE7F:
	mov(&ts->eax, 0x33B5791A);
	retn(mv, &ts->esp);

loc_4ABE85:
	mov(&ts->eax, 0x3F6495C5);
	retn(mv, &ts->esp);

loc_4ABE8B:
	mov(&ts->eax, 0xBF5AC5A9);
	retn(mv, &ts->esp);

loc_4ABE91:
	mov(&ts->eax, 0xB0C0DCB5);
	retn(mv, &ts->esp);

loc_4ABE97:
	mov(&ts->eax, 0x8244F164);
	retn(mv, &ts->esp);

loc_4ABE9D:
	mov(&ts->eax, 0xB8038AC0);
	retn(mv, &ts->esp);

loc_4ABEA3:
	mov(&ts->eax, 0xB802F10E);
	retn(mv, &ts->esp);

loc_4ABEA9:
	mov(&ts->eax, 0xC56D3032);
	retn(mv, &ts->esp);

loc_4ABEAF:
	mov(&ts->eax, 0xDC99AAFE);
	retn(mv, &ts->esp);

loc_4ABEB5:
	mov(&ts->eax, 0x3F40E75F);
	retn(mv, &ts->esp);

loc_4ABEBB:
	mov(&ts->eax, 0xD1D9D8A4);
	retn(mv, &ts->esp);

loc_4ABEC1:
	mov(&ts->eax, 0xF95DD41E);
	retn(mv, &ts->esp);

def_4ABE5A:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);
}

void sub_4ABF20(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	dec(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0x13);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4ABF31;
    }
	movzx(mv, &ts->eax, x86::mem(ts->eax + 0x4ABF58, 1));
	jmp(x86::mem(0x4ABF48, 4));

loc_4ABF38:
	mov(&ts->al, 0x4);
	retn(mv, &ts->esp);

loc_4ABF3B:
	mov(&ts->al, 0x3);
	retn(mv, &ts->esp);

loc_4ABF3E:
	mov(&ts->al, 0x2);
	retn(mv, &ts->esp);

loc_4ABF41:
	mov(&ts->al, 0x1);
	retn(mv, &ts->esp);

def_4ABF31:
	xor_(&ts->al, ts->al);
	retn(mv, &ts->esp);
}

void sub_4ABF70(x86::thread_state* ts, x86::memory_view* mv) {
	movsx(mv, &ts->eax, x86::mem(ts->ecx + 0xF, 1));
	cmp(&ts->eflags, ts->eax, 0x5);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4ABF79;
    }
	jmp(x86::mem(0x4ABFBC, 4));

loc_4ABF80:
	mov(&ts->eax, 0x1);
	goto loc_4ABFA1;

loc_4ABF87:
	mov(&ts->eax, 0x3);
	goto loc_4ABFA1;

loc_4ABF8E:
	mov(&ts->eax, 0x2);
	goto loc_4ABFA1;

loc_4ABF95:
	mov(&ts->eax, 0x4);
	goto loc_4ABFA1;

def_4ABF79:
	mov(&ts->eax, 0x5);

loc_4ABFA1:
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x34, 1), 0x2);
	if (!ts->eflags.zero) {
        goto loc_4ABFAD;
    }
	mov(&ts->eax, 0x7);
	retn(mv, &ts->esp);

loc_4ABFAD:
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0xD, 1), 0x1);
	if (!ts->eflags.zero) {
        goto locret_4ABFB8;
    }
	mov(&ts->eax, 0x8);

locret_4ABFB8:
	retn(mv, &ts->esp);
}

void sub_4ABFE0(x86::thread_state* ts, x86::memory_view* mv) {
	movsx(mv, &ts->ecx, x86::mem(ts->ecx + 0x50, 1));
	cmp(&ts->eflags, ts->ecx, 0x5);
	mov(&ts->eax, 0x1);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4ABFEE;
    }
	jmp(x86::mem(0x4AC01C, 4));

loc_4ABFF5:
	mov(&ts->eax, 0xC);
	retn(mv, &ts->esp);

loc_4ABFFB:
	mov(&ts->eax, 0xF);
	retn(mv, &ts->esp);

loc_4AC001:
	mov(&ts->eax, 0xD);
	retn(mv, &ts->esp);

loc_4AC007:
	mov(&ts->eax, 0xE);
	retn(mv, &ts->esp);

loc_4AC00D:
	mov(&ts->eax, 0xB);
	retn(mv, &ts->esp);

loc_4AC013:
	mov(&ts->eax, 0x10);

def_4ABFEE:
	retn(mv, &ts->esp);
}

void sub_4AC120(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x2C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x14, 4));
	and_(&ts->eax, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	and_(&ts->ecx, ts->edx);
	or_(&ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4AC164;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->esi + 0x95, 1), 0x1);
	mov(mv, &ts->eax, x86::mem(0x86518C, 4));
	mov(mv, x86::mem(ts->esi + 0x98, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x74, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x74, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0xC);

loc_4AC164:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4AC170(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x78, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_4AC1A5;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(0x8364A8, 4), ts->eax);
	mov(mv, x86::mem(0x8364AC, 4), 0x4);
	mov(mv, x86::mem(0x8364A0, 4), ts->ecx);
	mov(mv, x86::mem(0x8364A4, 4), ts->edx);
	mov(mv, x86::mem(0x83649C, 1), 0x1);

locret_4AC1A5:
	retn(mv, &ts->esp, 0xC);
}

void sub_4AC1E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0x10);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4AC1E9;
    }
	jmp(x86::mem(0x4AC248, 4));

loc_4AC1F0:
	mov(&ts->eax, 0xC);
	retn(mv, &ts->esp);

loc_4AC1F6:
	mov(&ts->eax, 0xD);
	retn(mv, &ts->esp);

loc_4AC1FC:
	mov(&ts->eax, 0xE);
	retn(mv, &ts->esp);

loc_4AC202:
	mov(&ts->eax, 0xF);
	retn(mv, &ts->esp);

loc_4AC208:
	mov(&ts->eax, 0x10);
	retn(mv, &ts->esp);

loc_4AC20E:
	mov(&ts->eax, 0x11);
	retn(mv, &ts->esp);

loc_4AC214:
	mov(&ts->eax, 0x12);
	retn(mv, &ts->esp);

loc_4AC21A:
	mov(&ts->eax, 0x5);
	retn(mv, &ts->esp);

loc_4AC220:
	mov(&ts->eax, 0x7);
	retn(mv, &ts->esp);

loc_4AC226:
	mov(&ts->eax, 0x8);
	retn(mv, &ts->esp);

loc_4AC22C:
	mov(&ts->eax, 0x9);
	retn(mv, &ts->esp);

loc_4AC232:
	mov(&ts->eax, 0xA);
	retn(mv, &ts->esp);

loc_4AC238:
	mov(&ts->eax, 0xB);
	retn(mv, &ts->esp);

loc_4AC23E:
	mov(&ts->eax, 0x6);
	retn(mv, &ts->esp);

def_4AC1E9:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);
}

void sub_4AC290(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(0x8364B8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_43F920(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_4AC2B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4AC2BF;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	goto loc_4AC2C1;

loc_4AC2BF:
	xor_(&ts->eax, ts->eax);

loc_4AC2C1:
	dec(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0x11);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4AC2D3;
    }
	movzx(mv, &ts->eax, x86::mem(ts->eax + 0x4AC448, 1));
	push(mv, &ts->esp, ts->edi);
	jmp(x86::mem(0x4AC438, 4));

loc_4AC2DA:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x10, 4));
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784244, 4));
	push(mv, &ts->esp, ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_401100(ts, mv);
	goto loc_4AC413;

loc_4AC300:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(0x890080, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_5F0E30(ts, mv);
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4AC430;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x54, 4));
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	movzx(mv, &ts->eax, x86::mem(ts->esi + 0x40C, 2));
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	push(mv, &ts->esp, ts->ecx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784240, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_401100(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi, 4));
	movzx(mv, &ts->ecx, x86::mem(ts->esi + 0x40C, 2));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784240, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_43C350(ts, mv);
	add(&ts->esp, 0x4);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x4, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);

loc_4AC374:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(0x8900AC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4AC430;
    }
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4AC430;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x54, 4));
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	movzx(mv, &ts->eax, x86::mem(ts->esi + 0x40C, 2));
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	push(mv, &ts->esp, ts->ecx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784240, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_401100(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi, 4));
	movzx(mv, &ts->ecx, x86::mem(ts->esi + 0x40C, 2));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784240, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_43C350(ts, mv);
	add(&ts->esp, 0x4);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x4, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);

loc_4AC3EC:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->edx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784244, 4));
	push(mv, &ts->esp, ts->ecx);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784254, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_43C350(ts, mv);

loc_4AC413:
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784244, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_43C350(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x4, 4));
	add(&ts->esp, 0x4);

loc_4AC430:
	pop(mv, &ts->esp, ts->edi);

def_4AC2D3:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4AC460(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4AC619;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	cmp(&ts->eflags, ts->ecx, 0x3);
	if (ts->eflags.zero) {
        goto loc_4AC545;
    }
	cmp(&ts->eflags, ts->ecx, 0xB);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4AC619;
    }
	cmp(&ts->eflags, ts->ecx, 0x12);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_4AC619;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4AC4E6;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4AC4E6;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x34, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_4AC4E6;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_495570(ts, mv);
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4AC4BD;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	goto loc_4AC4BF;

loc_4AC4BD:
	xor_(&ts->eax, ts->eax);

loc_4AC4BF:
	push(mv, &ts->esp, 0xB90F50BB);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C990(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x1C, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4AC533;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->esi);
	game::sub_51D7F0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4AC4E6:
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CCC0(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->ecx, ts->eax);
	game::sub_5054D0(ts, mv);
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4AC50A;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	goto loc_4AC50C;

loc_4AC50A:
	xor_(&ts->eax, ts->eax);

loc_4AC50C:
	push(mv, &ts->esp, 0x25559384);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C990(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x1C, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4AC533;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->esi);
	game::sub_51D7F0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4AC533:
	xor_(&ts->esi, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->esi);
	game::sub_51D7F0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4AC545:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(0x890080, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_5F0E30(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4AC619;
    }
	mov(mv, &ts->ecx, x86::mem(0x890118, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_5EEF60(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4AC619;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0xA, 1), 0x1);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	if (!ts->eflags.zero) {
        goto loc_4AC5CC;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4AC581;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	goto loc_4AC583;

loc_4AC581:
	xor_(&ts->eax, ts->eax);

loc_4AC583:
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CCC0(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x1C, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0xFF);
	if (ts->eflags.zero) {
        goto loc_4AC5B6;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	game::sub_51D860(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4AC5B6:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	xor_(&ts->esi, ts->esi);
	push(mv, &ts->esp, ts->esi);
	game::sub_51D860(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4AC5CC:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4AC5D4;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	goto loc_4AC5D6;

loc_4AC5D4:
	xor_(&ts->eax, ts->eax);

loc_4AC5D6:
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CCC0(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x1C, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x80);
	if (ts->eflags.zero) {
        goto loc_4AC609;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_51D860(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4AC609:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	xor_(&ts->esi, ts->esi);
	push(mv, &ts->esp, ts->esi);
	game::sub_51D860(ts, mv);
	add(&ts->esp, 0x8);

loc_4AC619:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4AC620(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x14, 4));
	sub(&ts->eax, 0x0);
	if (ts->eflags.zero) {
        goto loc_4AC698;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_4AC667;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto locret_4AC6C6;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x1C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4AC652;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x790AFC);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp, 0x4);

loc_4AC652:
	push(mv, &ts->esp, 0x1);
	xor_(&ts->ecx, ts->ecx);
	push(mv, &ts->esp, 0x790AFC);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp, 0x4);

loc_4AC667:
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x1C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4AC683;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78415C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp, 0x4);

loc_4AC683:
	push(mv, &ts->esp, 0x1);
	xor_(&ts->ecx, ts->ecx);
	push(mv, &ts->esp, 0x78415C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp, 0x4);

loc_4AC698:
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x1C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4AC6B4;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F758);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp, 0x4);

loc_4AC6B4:
	push(mv, &ts->esp, 0x1);
	xor_(&ts->ecx, ts->ecx);
	push(mv, &ts->esp, 0x78F758);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);

locret_4AC6C6:
	retn(mv, &ts->esp, 0x4);
}

void sub_4AC6D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x790B18);
	push(mv, &ts->esp, 0x66);
	push(mv, &ts->esp, 0x8);
	game::sub_440DF0(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x790B08);
	push(mv, &ts->esp, 0x66);
	push(mv, &ts->esp, 0x20);
	mov(mv, x86::mem(0x8364B4, 4), ts->eax);
	game::sub_440DF0(ts, mv);
	add(&ts->esp, 0x20);
	mov(mv, x86::mem(0x8364B8, 4), ts->eax);
	retn(mv, &ts->esp);
}

void sub_4AC730(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776418);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	game::sub_551DE0(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi, 4), 0x790B38);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x50, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x54, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0x55, 1), ts->al);
	cmp(mv, &ts->eflags, x86::mem(0x83AA14, 1), ts->al);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_4AC78D;
    }
	cmp(mv, &ts->eflags, x86::mem(0x8654A4, 4), 0x3);
	if (ts->eflags.zero) {
        goto loc_4AC78D;
    }
	push(mv, &ts->esp, 0x790B28);
	game::nullsub_1(ts, mv);
	add(&ts->esp, 0x4);

loc_4AC78D:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_776410:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

SEH_4E3300:
	mov(&ts->eax, 0x7DEE70);
	goto ___CxxFrameHandler;
}

void sub_4AC7B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4AC7C0(ts, mv);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4AC7C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x790B38);
	goto sub_510D40;
}

void sub_4AC7D0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->edi, ts->ecx);
	game::sub_43DBB0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->esi, ts->eax);
	game::sub_43DBB0(ts, mv);
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4AC7F3;
    }
	mov(&ts->esi, ts->eax);

loc_4AC7F3:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_43DBB0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4AC806;
    }
	mov(&ts->esi, ts->eax);

loc_4AC806:
	cmp(&ts->eflags, ts->esi, 0x11);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_4AC81E;
    }
	mov(mv, x86::mem(ts->edi + 0x58, 4), 0x790B70);
	mov(mv, x86::mem(ts->edi + 0x5C, 4), 0x790B64);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_4AC81E:
	cmp(&ts->eflags, ts->esi, 0x23);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_4AC836;
    }
	mov(mv, x86::mem(ts->edi + 0x58, 4), 0x790B60);
	mov(mv, x86::mem(ts->edi + 0x5C, 4), 0x790B58);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_4AC836:
	mov(mv, x86::mem(ts->edi + 0x58, 4), 0x790B50);
	mov(mv, x86::mem(ts->edi + 0x5C, 4), 0x790B48);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);
}

void sub_4AC850(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x54, 1), 0x1);
	mov(mv, &ts->eax, x86::mem(0x8651AC, 4));
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	mov(mv, x86::mem(0x8364E0, 4), ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4AC880(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->esi, ts->ecx);
	game::sub_4AC7D0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0xF5387816);
	push(mv, &ts->esp, ts->eax);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x11DB9E17);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x48097852);
	push(mv, &ts->esp, ts->edx);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8364DC, 4));
	add(&ts->esp, 0x24);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4AC8E2;
    }
	mov(mv, &ts->eax, x86::mem(0x8651AC, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x50, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0xC);

loc_4AC8E2:
	mov(mv, x86::mem(ts->esi + 0x54, 1), 0x1);
	mov(mv, &ts->ecx, x86::mem(0x8651AC, 4));
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(0x8364E0, 4), ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0xC);
}

void sub_4AC920(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x60);
	game::sub_440820(ts, mv);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(0x8364D8, 4), ts->eax);
	retn(mv, &ts->esp);
}

void sub_4AC940(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x8364DC, 4), ts->eax);
	retn(mv, &ts->esp);
}

void sub_4AC950(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(0x8654A4, 4), 0x3);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, 0x790014);
	if (ts->eflags.zero) {
        goto loc_4AC964;
    }
	mov(&ts->esi, 0x790B28);

loc_4AC964:
	push(mv, &ts->esp, ts->esi);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4AC982;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0xE);
	game::sub_555F50(ts, mv);
	add(&ts->esp, 0x14);

loc_4AC982:
	push(mv, &ts->esp, ts->esi);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero) {
        goto locret_4AC9A6;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4AC880(ts, mv);

locret_4AC9A6:
	retn(mv, &ts->esp);
}

void sub_4AC9B0(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(0x8654A4, 4), 0x3);
	mov(&ts->eax, 0x790014);
	if (ts->eflags.zero) {
        goto loc_4AC9C3;
    }
	mov(&ts->eax, 0x790B28);

loc_4AC9C3:
	push(mv, &ts->esp, ts->eax);
	game::sub_51BD10(ts, mv);
	xor_(&ts->ecx, ts->ecx);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto locret_4AC9EA;
    }
	mov(mv, x86::mem(ts->eax + 0x54, 1), ts->cl);
	mov(mv, x86::mem(0x8364E0, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x55, 1), ts->cl);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	goto sub_5379A0;

locret_4AC9EA:
	retn(mv, &ts->esp);
}

void sub_4AC9F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7F68B4, 4));
	xor_(&ts->ecx, ts->ecx);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto locret_4ACA33;
    }
	mov(mv, &ts->eax, x86::mem(0x8364E0, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4ACA1C;
    }
	mov(mv, x86::mem(ts->eax + 0x54, 1), ts->cl);
	mov(mv, x86::mem(0x8364E0, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x55, 1), ts->cl);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_5379A0(ts, mv);
	add(&ts->esp, 0x4);

loc_4ACA1C:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_4AC950(ts, mv);
	add(&ts->esp, 0xC);

locret_4ACA33:
	retn(mv, &ts->esp);
}

void sub_4ACA40(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7F68B4, 4));
	xor_(&ts->ecx, ts->ecx);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto locret_4ACA83;
    }
	mov(mv, &ts->eax, x86::mem(0x8364E0, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4ACA6C;
    }
	mov(mv, x86::mem(ts->eax + 0x54, 1), ts->cl);
	mov(mv, x86::mem(0x8364E0, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x55, 1), ts->cl);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_5379A0(ts, mv);
	add(&ts->esp, 0x4);

loc_4ACA6C:
	push(mv, &ts->esp, 0x790B88);
	push(mv, &ts->esp, 0x790B80);
	push(mv, &ts->esp, 0x790B78);
	game::sub_4AC950(ts, mv);
	add(&ts->esp, 0xC);

locret_4ACA83:
	retn(mv, &ts->esp);
}

void sub_4ACA90(x86::thread_state* ts, x86::memory_view* mv) {
	game::sub_5B8720(ts, mv);
	dec(&ts->eax);
	neg(&ts->eax);
	sbb(&ts->eax, ts->eax);
	inc(&ts->eax);
	retn(mv, &ts->esp);
}

void sub_4ACAA0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x158, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4ACBEA;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	cmp(&ts->eflags, ts->edx, 0x9120409E);
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4ACB3C;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4ACACC;
    }
	mov(&ts->eax, ts->ecx);

loc_4ACACC:
	dec(&ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->edx, x86::mem(0x835938, 4));
	imul(&ts->edx, ts->edx, 0x370);
	mov(mv, &ts->ebx, x86::mem(ts->edx + 0x874E70, 4));
	or_(&ts->ecx, 0xFFFFFFFF);
	cmp(&ts->eflags, ts->ebx, ts->ecx);
	mov(mv, x86::mem(0x8364EC, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4ACB18;
    }
	nop();

loc_4ACAF0:
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4ACAFA;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x158, 4));

loc_4ACAFA:
	dec(&ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->edx, x86::mem(0x835938, 4));
	imul(&ts->edx, ts->edx, 0x370);
	cmp(mv, &ts->eflags, x86::mem(ts->edx + 0x874E70, 4), ts->ecx);
	mov(mv, x86::mem(0x8364EC, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_4ACAF0;
    }

loc_4ACB18:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x158, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4ACBD3;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xDC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xDC, 4));
	goto loc_4ACBBE;

loc_4ACB3C:
	cmp(&ts->eflags, ts->edx, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_4ACBD3;
    }
	inc(&ts->eax);
	mov(mv, x86::mem(0x8364EC, 4), ts->eax);
	cdq(&ts->eax, ts->edx);
	idiv(mv, &ts->eax, x86::mem(ts->esi + 0x158, 4));
	or_(&ts->ecx, 0xFFFFFFFF);
	mov(&ts->eax, ts->edx);
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->edx, x86::mem(0x835938, 4));
	imul(&ts->edx, ts->edx, 0x370);
	cmp(mv, &ts->eflags, x86::mem(ts->edx + 0x874E70, 4), ts->ecx);
	mov(mv, x86::mem(0x8364EC, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4ACBA3;
    }

loc_4ACB77:
	inc(&ts->eax);
	mov(mv, x86::mem(0x8364EC, 4), ts->eax);
	cdq(&ts->eax, ts->edx);
	idiv(mv, &ts->eax, x86::mem(ts->esi + 0x158, 4));
	mov(&ts->eax, ts->edx);
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->edx, x86::mem(0x835938, 4));
	imul(&ts->edx, ts->edx, 0x370);
	cmp(mv, &ts->eflags, x86::mem(ts->edx + 0x874E70, 4), ts->ecx);
	mov(mv, x86::mem(0x8364EC, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_4ACB77;
    }

loc_4ACBA3:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x158, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4ACBD3;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xE0, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xE0, 4));

loc_4ACBBE:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F568);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51CF70(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	add(&ts->esp, 0x10);

loc_4ACBD3:
	cmp(&ts->eflags, ts->edi, ts->eax);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4ACBEA;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0xAF0BBD92);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);

loc_4ACBEA:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4ACBF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x80, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_538130(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xBC, 4));
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_4ACC51;
    }
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4ACC8E;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x911C0A4B);
	game::sub_55DDA0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4C, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4ACC8E;
    }
	push(mv, &ts->esp, 0x78F568);
	push(mv, &ts->esp, ts->eax);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4ACC8E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4C, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F568);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4ACC51:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x72619778);
	game::sub_55DDA0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x48, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4ACC8E;
    }
	push(mv, &ts->esp, 0x78F568);
	push(mv, &ts->esp, ts->eax);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4ACC8E;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x48, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F568);
	push(mv, &ts->esp, ts->eax);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);

loc_4ACC8E:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4ACCA0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	sub(&ts->esp, 0x40);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x7845D4);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DDA0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x134, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x38, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x40, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x28);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x40);
	retn(mv, &ts->esp, 0x4);
}

void sub_4ACCF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x6C, 4));
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xF8, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0xF4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51D070(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x100, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x120, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	mov(mv, x86::mem(ts->esi + 0xFC, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x70, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_51D070(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x74, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x128, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x124, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_51D070(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x6C, 4));
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x110, 4));
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51D730(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x70, 4));
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x118, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	game::sub_51D730(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebx, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	add(&ts->esp, 0x3C);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x104, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x108, 4), ts->edx);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_4ACD90(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	game::sub_5B8760(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->esi, x86::mem(0x835938, 4));
	imul(&ts->esi, ts->esi, 0x370);
	add(&ts->esi, 0x874C40);
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x230, 4), 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_4ACDFA;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_5B8720(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x1);
	mov(&ts->ecx, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_4ACDE4;
    }
	game::sub_5CFFF0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x92B703B5);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4ACDE4:
	game::sub_5C11A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x92B703B5);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);

loc_4ACDFA:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4ACE00(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x150, 1));
	xor_(&ts->ebx, ts->ebx);
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x154, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x158, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4ACE69;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->ecx, x86::mem(0x835938, 4));
	imul(&ts->ecx, ts->ecx, 0x370);
	mov(mv, x86::mem(0x870768, 1), ts->bl);
	mov(mv, x86::mem(ts->ecx + 0x874F7C, 4), ts->ebx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, ts->edx);
	game::sub_537950(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0xFF);
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_537950(ts, mv);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->esi + 0x150, 1), ts->bl);

loc_4ACE69:
	mov(&ts->ebp, 0x835930);
	mov(&ts->edi, 0x874C40);

loc_4ACE73:
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0x230, 4), 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_4ACEBE;
    }
	mov(&ts->ecx, ts->edi);
	game::sub_5B8720(ts, mv);
	sub(&ts->eax, 0x2);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x158, 4));
	if (ts->eflags.zero) {
        goto loc_4ACEA9;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_4ACE95;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_4ACEAE;

loc_4ACE95:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x154, 4));
	inc(&ts->edx);
	mov(&ts->eax, 0x1);
	mov(mv, x86::mem(ts->esi + 0x154, 4), ts->edx);
	goto loc_4ACEAE;

loc_4ACEA9:
	mov(&ts->eax, 0x2);

loc_4ACEAE:
	inc(&ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x158, 4), ts->ecx);
	mov(mv, x86::mem(ts->ebp + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->ebp, 4), ts->eax);
	add(&ts->ebp, 0xC);

loc_4ACEBE:
	add(&ts->edi, 0x370);
	inc(&ts->ebx);
	cmp(&ts->eflags, ts->edi, 0x8760E0);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4ACE73;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x158, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_4ACEF6;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xDC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xE0, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_4ACEF6:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xDC, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xE0, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xDC, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F758);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51CF70(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xE0, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F758);
	push(mv, &ts->esp, ts->edx);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0x20);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_4ACF40(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x30);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x38, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4ACFBB;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x40, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x3C, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x50, 4));
	imul(&ts->ecx, ts->ecx, 0x370);
	add(&ts->ecx, 0x874C40);
	game::sub_5C20E0(ts, mv);
	mov(&ts->edx, ts->eax);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0xB);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x8, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	push(mv, &ts->esp, 0x17);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	call(ts, mv, x86::mem(0x783130, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 2), 0x0);
	pop(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4ACFAD;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	game::sub_537AB0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x30);
	retn(mv, &ts->esp);

loc_4ACFAD:
	push(mv, &ts->esp, 0x790B94);
	push(mv, &ts->esp, ts->esi);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0x8);

loc_4ACFBB:
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x30);
	retn(mv, &ts->esp);
}

void sub_4ACFC0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x153E7337);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_4ACFE0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x0);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, 0x3);
	mov(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4AD000(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x3);
	push(mv, &ts->esp, ts->eax);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4AD020(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x1);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, 0x3);
	mov(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4AD040(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x3);
	push(mv, &ts->esp, ts->eax);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4AD060(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0xBD7BA1AA);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_4AD080(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x0);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, 0x4);
	mov(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4AD0A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4AD0C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x1);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, 0x4);
	mov(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4AD0E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4AD100(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x409607E2);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_4AD120(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x0);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4AD140(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4AD160(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x1);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4AD180(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4AD1A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x82EBCC98);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_4AD1C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x0);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, 0x2);
	mov(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4AD1E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x2);
	push(mv, &ts->esp, ts->eax);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4AD200(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x1);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, 0x2);
	mov(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4AD220(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x2);
	push(mv, &ts->esp, ts->eax);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4AD240(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x3EB318CE);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_4AD260(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x0);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, 0x7);
	mov(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4AD280(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7);
	push(mv, &ts->esp, ts->eax);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4AD2A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x1);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, 0x7);
	mov(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4AD2C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x7);
	push(mv, &ts->esp, ts->eax);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4AD2E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0xB7D33921);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_4AD300(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x0);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, 0x8);
	mov(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4AD320(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4AD340(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x1);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, 0x8);
	mov(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4AD360(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4AD380(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0xB3D1EA35);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_4AD3A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x0);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, 0x5);
	mov(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4AD3C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x5);
	push(mv, &ts->esp, ts->eax);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4AD3E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x1);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, 0x5);
	mov(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4AD400(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x5);
	push(mv, &ts->esp, ts->eax);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4AD420(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0xDF5AEF26);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_4AD440(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x0);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, 0x6);
	mov(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4AD460(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x6);
	push(mv, &ts->esp, ts->eax);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4AD480(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x1);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, 0x6);
	mov(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4AD4A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x6);
	push(mv, &ts->esp, ts->eax);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4AD4C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x419CA63A);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_4AD4E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x0);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, 0xA);
	mov(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4AD500(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xA);
	push(mv, &ts->esp, ts->eax);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4AD520(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x1);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, 0xA);
	mov(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4AD540(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xA);
	push(mv, &ts->esp, ts->eax);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4AD560(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x35B9F571);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_4AD580(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x0);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, 0x9);
	mov(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4AD5A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x9);
	push(mv, &ts->esp, ts->eax);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4AD5C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x1);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, 0x9);
	mov(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4AD5E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x9);
	push(mv, &ts->esp, ts->eax);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4AD600(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x4A1341B3);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_4AD620(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x0);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, 0xF);
	mov(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4AD640(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xF);
	push(mv, &ts->esp, ts->eax);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4AD660(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x1);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, 0xF);
	mov(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4AD680(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xF);
	push(mv, &ts->esp, ts->eax);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4AD6A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x1E7E3391);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_4AD6C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x0);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, 0x10);
	mov(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4AD6E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x10);
	push(mv, &ts->esp, ts->eax);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4AD700(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x1);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, 0x10);
	mov(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4AD720(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x10);
	push(mv, &ts->esp, ts->eax);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4AD740(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x58BAEBBA);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_4AD760(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x0);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, 0x11);
	mov(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4AD780(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x11);
	push(mv, &ts->esp, ts->eax);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4AD7A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x1);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, 0x11);
	mov(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4AD7C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x11);
	push(mv, &ts->esp, ts->eax);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4AD7E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x735B2E6C);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_4AD800(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x0);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, 0x12);
	mov(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4AD820(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x12);
	push(mv, &ts->esp, ts->eax);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4AD840(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x1);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, 0x12);
	mov(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4AD860(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x12);
	push(mv, &ts->esp, ts->eax);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4AD880(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0xA081F0CC);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_4AD8A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x0);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, 0x16);
	mov(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4AD8C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x16);
	push(mv, &ts->esp, ts->eax);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4AD8E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x1);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, 0x16);
	mov(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4AD900(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x16);
	push(mv, &ts->esp, ts->eax);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4AD920(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x64730AAC);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_4AD940(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x0);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, 0x13);
	mov(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4AD960(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x13);
	push(mv, &ts->esp, ts->eax);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4AD980(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x1);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, 0x13);
	mov(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4AD9A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x13);
	push(mv, &ts->esp, ts->eax);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4AD9C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x6F99F62A);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_4AD9E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x0);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, 0xC);
	mov(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4ADA00(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xC);
	push(mv, &ts->esp, ts->eax);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4ADA20(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x1);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, 0xC);
	mov(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4ADA40(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xC);
	push(mv, &ts->esp, ts->eax);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4ADA60(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x6FC04E6F);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_4ADA80(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x0);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, 0xE);
	mov(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4ADAA0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xE);
	push(mv, &ts->esp, ts->eax);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4ADAC0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x1);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, 0xE);
	mov(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4ADAE0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xE);
	push(mv, &ts->esp, ts->eax);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4ADB00(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x38, 4));
	imul(&ts->ecx, ts->ecx, 0x370);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x3);
	add(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4ADB30(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x3);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4ADB50(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x38, 4));
	imul(&ts->ecx, ts->ecx, 0x370);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x3);
	add(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4ADB80(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x3);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4ADBA0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x38, 4));
	imul(&ts->ecx, ts->ecx, 0x370);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x4);
	add(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4ADBD0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4ADBF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x38, 4));
	imul(&ts->ecx, ts->ecx, 0x370);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x4);
	add(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4ADC20(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4ADC40(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4ADC60(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4ADC80(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x2);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4ADCA0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x2);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4ADCC0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4ADCE0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x7);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4ADD00(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4ADD20(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4ADD40(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x5);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4ADD60(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x5);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4ADD80(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x6);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4ADDA0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x6);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4ADDC0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xA);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4ADDE0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xA);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4ADE00(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x9);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4ADE20(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x9);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4ADE40(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xF);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4ADE60(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xF);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4ADE80(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x10);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4ADEA0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x10);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4ADEC0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x11);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4ADEE0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x11);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4ADF00(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x12);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4ADF20(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x12);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4ADF40(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x16);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4ADF60(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x16);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4ADF80(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x13);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4ADFA0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x13);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4ADFC0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x38, 4));
	imul(&ts->ecx, ts->ecx, 0x370);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xC);
	add(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4ADFF0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xC);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4AE010(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xC);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4AE030(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xE);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4AE050(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x38, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xE);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4ACF40(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4AE070(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x38, 4));
	imul(&ts->ecx, ts->ecx, 0x370);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	add(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4AE0A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x38, 4));
	imul(&ts->ecx, ts->ecx, 0x370);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1);
	add(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4AE0D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x38, 4));
	imul(&ts->ecx, ts->ecx, 0x370);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x2);
	add(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4AE100(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x38, 4));
	imul(&ts->ecx, ts->ecx, 0x370);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x2);
	add(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4AE130(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x38, 4));
	imul(&ts->ecx, ts->ecx, 0x370);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7);
	add(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4AE160(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x38, 4));
	imul(&ts->ecx, ts->ecx, 0x370);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x7);
	add(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4AE190(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x38, 4));
	imul(&ts->ecx, ts->ecx, 0x370);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x8);
	add(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4AE1C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x38, 4));
	imul(&ts->ecx, ts->ecx, 0x370);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x8);
	add(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4AE1F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x38, 4));
	imul(&ts->ecx, ts->ecx, 0x370);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x5);
	add(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4AE220(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x38, 4));
	imul(&ts->ecx, ts->ecx, 0x370);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x5);
	add(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4AE250(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x38, 4));
	imul(&ts->ecx, ts->ecx, 0x370);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x6);
	add(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4AE280(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x38, 4));
	imul(&ts->ecx, ts->ecx, 0x370);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x6);
	add(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4AE2B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x38, 4));
	imul(&ts->ecx, ts->ecx, 0x370);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xA);
	add(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4AE2E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x38, 4));
	imul(&ts->ecx, ts->ecx, 0x370);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xA);
	add(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4AE310(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x38, 4));
	imul(&ts->ecx, ts->ecx, 0x370);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x9);
	add(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4AE340(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x38, 4));
	imul(&ts->ecx, ts->ecx, 0x370);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x9);
	add(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4AE370(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x38, 4));
	imul(&ts->ecx, ts->ecx, 0x370);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xF);
	add(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4AE3A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x38, 4));
	imul(&ts->ecx, ts->ecx, 0x370);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xF);
	add(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4AE3D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x38, 4));
	imul(&ts->ecx, ts->ecx, 0x370);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x10);
	add(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4AE400(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x38, 4));
	imul(&ts->ecx, ts->ecx, 0x370);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x10);
	add(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4AE430(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x38, 4));
	imul(&ts->ecx, ts->ecx, 0x370);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x11);
	add(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4AE460(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x38, 4));
	imul(&ts->ecx, ts->ecx, 0x370);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x11);
	add(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4AE490(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x38, 4));
	imul(&ts->ecx, ts->ecx, 0x370);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x12);
	add(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4AE4C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x38, 4));
	imul(&ts->ecx, ts->ecx, 0x370);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x12);
	add(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4AE4F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x38, 4));
	imul(&ts->ecx, ts->ecx, 0x370);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x16);
	add(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4AE520(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x38, 4));
	imul(&ts->ecx, ts->ecx, 0x370);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x16);
	add(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4AE550(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x38, 4));
	imul(&ts->ecx, ts->ecx, 0x370);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x13);
	add(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4AE580(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x38, 4));
	imul(&ts->ecx, ts->ecx, 0x370);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x13);
	add(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4AE5B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x38, 4));
	imul(&ts->ecx, ts->ecx, 0x370);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xC);
	add(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4AE5E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x38, 4));
	imul(&ts->ecx, ts->ecx, 0x370);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xE);
	add(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4AE610(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x38, 4));
	imul(&ts->ecx, ts->ecx, 0x370);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xE);
	add(&ts->ecx, 0x874C40);
	game::sub_5C2100(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4AE640(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_49F8F0(ts, mv);
	retn(mv, &ts->esp);
}

void sub_4AE650(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	game::sub_4A0DF0(ts, mv);
	retn(mv, &ts->esp);
}

void sub_4AE670(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	game::sub_4A1BF0(ts, mv);
	retn(mv, &ts->esp);
}

void sub_4AE690(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	game::sub_4A1800(ts, mv);
	retn(mv, &ts->esp);
}

void sub_4AE6B0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	game::sub_4A1A00(ts, mv);
	retn(mv, &ts->esp);
}

void sub_4AE6D0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	game::sub_4A1AC0(ts, mv);
	retn(mv, &ts->esp);
}

void sub_4AE6F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	game::sub_4A1B80(ts, mv);
	retn(mv, &ts->esp);
}

void sub_4AE710(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	game::sub_4A1ED0(ts, mv);
	retn(mv, &ts->esp);
}

void sub_4AE730(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	game::sub_4A1F30(ts, mv);
	retn(mv, &ts->esp);
}

void sub_4AE750(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_4A2560(ts, mv);
	retn(mv, &ts->esp);
}

void sub_4AE760(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto locret_4AE7A1;
    }
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4AE7A0;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4AE79B;
    }
	mov(mv, &ts->al, x86::mem(ts->ecx, 1));
	push(mv, &ts->esp, ts->esi);
	xor_(&ts->esi, ts->esi);
	dec(&ts->edi);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4AE79A;
    }

loc_4AE783:
	cmp(&ts->eflags, ts->edi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4AE79A;
    }
	movsx(&ts->ax, ts->al);
	mov(mv, x86::mem(ts->edx, 2), ts->ax);
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x1, 1));
	add(&ts->edx, 0x2);
	inc(&ts->ecx);
	inc(&ts->esi);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4AE783;
    }

loc_4AE79A:
	pop(mv, &ts->esp, ts->esi);

loc_4AE79B:
	mov(mv, x86::mem(ts->edx, 2), 0x0);

loc_4AE7A0:
	pop(mv, &ts->esp, ts->edi);

locret_4AE7A1:
	retn(mv, &ts->esp);
}

void sub_4AE7B0(x86::thread_state* ts, x86::memory_view* mv) {
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784264, 4));
	mov(&ts->esi, ts->ecx);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), ts->eax);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4AE7F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772BBB);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, 0x4022C0);
	push(mv, &ts->esp, 0x4951D0);
	xor_(&ts->ebx, ts->ebx);
	push(mv, &ts->esp, 0x6);
	push(mv, &ts->esp, 0x14);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->esi);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x20, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x2C, 4), ts->ebx);
	game::sub_75C461(ts, mv);
	push(mv, &ts->esp, 0x4022C0);
	push(mv, &ts->esp, 0x4951D0);
	push(mv, &ts->esp, 0x6);
	push(mv, &ts->esp, 0x14);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xC8, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xA8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xAC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xB0, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xB4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xB8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xBC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xC0, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xC4, 4), ts->ebx);
	game::sub_75C461(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->esi + 0x140, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi, 1), ts->bl);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4AE7D0:
	push(mv, &ts->esp, 0x4022C0);
	push(mv, &ts->esp, 0x6);
	push(mv, &ts->esp, 0x14);
	add(&ts->ecx, 0x20);
	push(mv, &ts->esp, ts->ecx);
	game::_eh_vector_destructor_iterator__void_P_uint_int_void__P__void_P__(ts, mv);
	retn(mv, &ts->esp);

loc_772BB0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x10);
	goto loc_4AE7D0;

SEH_4CBAF0:
	mov(&ts->eax, 0x7DF1E0);
	goto ___CxxFrameHandler;
}

void sub_4AE8B0(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x34, 1), 0x3);
	if (!ts->eflags.zero) {
        goto loc_4AE8C2;
    }
	mov(mv, &ts->dl, x86::mem(ts->ecx + 0xD, 1));
	mov(&ts->eax, 0x1);
	cmp(&ts->eflags, ts->dl, ts->al);
	if (!ts->eflags.zero) {
        goto locret_4AE8C4;
    }

loc_4AE8C2:
	xor_(&ts->eax, ts->eax);

locret_4AE8C4:
	retn(mv, &ts->esp);
}

void sub_4AE8D0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x156A8, 4));
	cmp(&ts->eflags, ts->eax, 0x200);
	if (ts->eflags.zero) {
        goto loc_4AE8E2;
    }
	cmp(&ts->eflags, ts->eax, 0x8);
	if (!ts->eflags.zero) {
        goto loc_4AE8F1;
    }

loc_4AE8E2:
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x156B8, 4), 0x8);
	if (!ts->eflags.zero) {
        goto loc_4AE8F1;
    }
	mov(&ts->eax, 0x1);
	retn(mv, &ts->esp);

loc_4AE8F1:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);
}

void sub_4AE900(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_501100(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4AE928;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_501100(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.zero) {
        goto loc_4AE928;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_501100(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_4AE928;
    }
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4AE928:
	mov(&ts->eax, 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4AE930(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_501100(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4AE967;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_501100(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.zero) {
        goto loc_4AE967;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_501100(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_4AE967;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_501100(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.zero) {
        goto loc_4AE967;
    }
	mov(&ts->eax, 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4AE967:
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4AE970(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx + 0x29, 1), 0x0);
	retn(mv, &ts->esp);
}

void sub_4AE980(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx + 0x29, 1), 0x1);
	retn(mv, &ts->esp);
}

void sub_4AE990(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->ecx + 0x10, 4), ts->eax);
	retn(mv, &ts->esp, 0x4);
}

void sub_4AE9B0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(ts->ecx + 0x10, 4), ts->eax);
	retn(mv, &ts->esp, 0x4);
}

void sub_4AE9C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x30, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x34, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4AE9F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->eax);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_4AEA10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4CF650(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4AEA28;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4AEA28:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4AEA30(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x790F38);
	retn(mv, &ts->esp);
}

void sub_4AEA40(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4AEA30(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4AEA58;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4AEA58:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4AEA60(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772BE4);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x94);
	mov(&ts->edi, ts->ecx);
	game::j__malloc(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->esi, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_4AEACA;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, 0x80);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esi, 4), 0x790F38);
	mov(mv, x86::mem(ts->esi + 0x90, 4), ts->eax);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x2C, 4));
	mov(mv, x86::mem(ts->esi + 0x8C, 4), ts->eax);
	add(&ts->esp, 0xC);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));

loc_4AEACA:
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x10, 4));
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0xC, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0xC);

loc_772BD0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x790C18);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4AEA60:
	mov(&ts->eax, 0x7DF204);
	goto ___CxxFrameHandler;
}

void sub_4AEAF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4AEB10(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4AEB08;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4AEB08:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4AEB10(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x790C2C);
	retn(mv, &ts->esp);
}

void sub_4AEB20(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4AEB39;
    }
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x24, 4));
	add(&ts->eax, 0xFFFFFFFC);
	xor_(&ts->edx, ts->edx);
	cmp(&ts->eflags, ts->esi, ts->eax);
	setz(ts->eflags, &ts->dl);
	mov(&ts->al, ts->dl);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4AEB39:
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x24, 4));
	xor_(&ts->eax, ts->eax);
	xor_(&ts->edx, ts->edx);
	cmp(&ts->eflags, ts->esi, ts->eax);
	setz(ts->eflags, &ts->dl);
	mov(&ts->al, ts->dl);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4AEB50(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	add(&ts->ecx, 0x8);
	game::sub_43BE60(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4AEB67;
    }
	add(&ts->eax, 0xFFFFFFFC);
	retn(mv, &ts->esp, 0x4);

loc_4AEB67:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp, 0x4);
}

void sub_4AEB70(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_527770(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4AEB88;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4AEB88:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4AEB90(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4AEBA9;
    }
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0xC, 4));
	add(&ts->eax, 0xFFFFFFFC);
	xor_(&ts->edx, ts->edx);
	cmp(&ts->eflags, ts->eax, ts->esi);
	setz(ts->eflags, &ts->dl);
	mov(&ts->al, ts->dl);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4AEBA9:
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0xC, 4));
	xor_(&ts->eax, ts->eax);
	xor_(&ts->edx, ts->edx);
	cmp(&ts->eflags, ts->eax, ts->esi);
	setz(ts->eflags, &ts->dl);
	mov(&ts->al, ts->dl);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4AEBC0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4AEBD9;
    }
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0xC, 4));
	add(&ts->eax, 0xFFFFFFFC);
	xor_(&ts->edx, ts->edx);
	cmp(&ts->eflags, ts->eax, ts->esi);
	setz(ts->eflags, &ts->dl);
	mov(&ts->al, ts->dl);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4AEBD9:
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0xC, 4));
	xor_(&ts->eax, ts->eax);
	xor_(&ts->edx, ts->edx);
	cmp(&ts->eflags, ts->eax, ts->esi);
	setz(ts->eflags, &ts->dl);
	mov(&ts->al, ts->dl);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4AEBF0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(ts->eax + 0x18, 1), 0x1);
	retn(mv, &ts->esp);
}

void sub_4AEC00(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, ts->ecx);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), 0x8);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x1D, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0x1C, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0x21, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0x20, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0x1F, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0x1E, 1), ts->cl);
	retn(mv, &ts->esp);
}

void sub_4AEC40(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, ts->ecx);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x30, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x34, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x38, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x3C, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x40, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x44, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x48, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x30, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x34, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x38, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x3C, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x40, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x44, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x48, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x4C, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x50, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x54, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x58, 4), ts->ecx);
	retn(mv, &ts->esp);
}

void sub_4AECB0(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_4AECDB;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50D2A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xD05FC3A3);
	mov(mv, x86::mem(0x83A9D8, 4), ts->eax);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0xC);

locret_4AECDB:
	retn(mv, &ts->esp, 0x14);
}

void sub_4AECE0(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_4AED26;
    }
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, 0x83A9D0);
	mov(mv, x86::mem(0x850078, 4), 0x10);
	mov(mv, x86::mem(0x83635C, 4), ts->esi);
	game::sub_52A460(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78FA3C);
	push(mv, &ts->esp, ts->esi);
	game::sub_537980(ts, mv);
	mov(mv, &ts->al, x86::mem(0x844AD8, 1));
	add(&ts->esp, 0xC);
	mov(mv, x86::mem(0x836360, 1), ts->al);
	pop(mv, &ts->esp, ts->esi);

locret_4AED26:
	retn(mv, &ts->esp, 0x14);
}

void sub_4AED30(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_4AED76;
    }
	mov(mv, x86::mem(0x850078, 4), 0x20);
	game::sub_50E2D0(ts, mv);
	game::sub_404800(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4AED62;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::nullsub_1(ts, mv);
	add(&ts->esp, 0x4);
	retn(mv, &ts->esp, 0x14);

loc_4AED62:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78F354);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);

locret_4AED76:
	retn(mv, &ts->esp, 0x14);
}

void sub_4AED80(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_4AED9F;
    }
	mov(mv, &ts->eax, x86::mem(0x7F42C0, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78F590);
	push(mv, &ts->esp, ts->eax);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);

locret_4AED9F:
	retn(mv, &ts->esp, 0x14);
}

void sub_4AEDB0(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_4AEDCE;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x790924);
	push(mv, &ts->esp, ts->eax);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);

locret_4AEDCE:
	retn(mv, &ts->esp, 0x14);
}

void sub_4AEDE0(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_4AEE2C;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x3);
	game::sub_50CEE0(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	game::sub_50CEE0(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	game::sub_50CEE0(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x2);
	game::sub_50CEE0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x790428);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x850078, 4), 0x200);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0x2C);

locret_4AEE2C:
	retn(mv, &ts->esp, 0x14);
}

void sub_4AEE30(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772C7C);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x48);
	mov(&ts->esi, ts->ecx);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4AEE81;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x5E7E1192);
	push(mv, &ts->esp, 0x3704F3D);
	mov(&ts->ecx, ts->edi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x790C50);
	goto loc_4AEE83;

loc_4AEE81:
	xor_(&ts->edi, ts->edi);

loc_4AEE83:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->ebp);
	or_(&ts->ebp, 0xFFFFFFFF);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebp);
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));
	push(mv, &ts->esp, 0x48);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4AEECA;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x24909FD7);
	push(mv, &ts->esp, 0x4E6FBB02);
	mov(&ts->ecx, ts->edi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x790C30);
	goto loc_4AEECC;

loc_4AEECA:
	xor_(&ts->edi, ts->edi);

loc_4AEECC:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebp);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	game::std__codecvt_base__do_always_noconv_void_(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4AEF26;
    }
	push(mv, &ts->esp, 0x48);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x2);
	if (ts->eflags.zero) {
        goto loc_4AEF18;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7B63FF85);
	push(mv, &ts->esp, 0x771849A5);
	mov(&ts->ecx, ts->edi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x790C38);
	goto loc_4AEF1A;

loc_4AEF18:
	xor_(&ts->edi, ts->edi);

loc_4AEF1A:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebp);
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));

loc_4AEF26:
	push(mv, &ts->esp, 0x48);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x3);
	if (ts->eflags.zero) {
        goto loc_4AEF61;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7294434C);
	push(mv, &ts->esp, 0xD13A2E66);
	mov(&ts->ecx, ts->edi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x790C60);
	mov(mv, x86::mem(ts->edi + 0x45, 1), 0x1);
	goto loc_4AEF63;

loc_4AEF61:
	xor_(&ts->edi, ts->edi);

loc_4AEF63:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebp);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	push(mv, &ts->esp, 0x48);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x4);
	if (ts->eflags.zero) {
        goto loc_4AEFA6;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xA53039A3);
	push(mv, &ts->esp, 0xB0C46023);
	mov(&ts->ecx, ts->edi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x790C48);
	goto loc_4AEFA8;

loc_4AEFA6:
	xor_(&ts->edi, ts->edi);

loc_4AEFA8:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebp);
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));
	push(mv, &ts->esp, 0x48);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x5);
	if (ts->eflags.zero) {
        goto loc_4AEFEF;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xBCB18F38);
	push(mv, &ts->esp, 0x6B303856);
	mov(&ts->ecx, ts->edi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x790C58);
	mov(mv, x86::mem(ts->edi + 0x45, 1), 0x1);
	goto loc_4AEFF1;

loc_4AEFEF:
	xor_(&ts->edi, ts->edi);

loc_4AEFF1:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebp);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	push(mv, &ts->esp, 0x48);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x6);
	if (ts->eflags.zero) {
        goto loc_4AF034;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xED1F0B2C);
	push(mv, &ts->esp, 0x3058FE37);
	mov(&ts->ecx, ts->edi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x790C40);
	goto loc_4AF036;

loc_4AF034:
	xor_(&ts->edi, ts->edi);

loc_4AF036:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebp);
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50B8A0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_4AF061;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x2);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50B8C0(ts, mv);
	add(&ts->esp, 0x8);

loc_4AF061:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4C, 4));
	add(&ts->esi, 0x4C);
	push(mv, &ts->esp, ts->eax);
	game::sub_50B8A0(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edi + 0x20, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_772BF0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x790CAC);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_772C04:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x790CA0);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_772C18:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x790C94);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_772C2C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x790C8C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_772C40:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x790C80);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_772C54:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x790C74);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_772C68:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x790C68);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4AEE30:
	mov(&ts->eax, 0x7DF258);
	goto ___CxxFrameHandler;
}

void sub_4AF090(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_4AF0B5;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x21961);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->eax);
	game::sub_4A3100(ts, mv);
	add(&ts->esp, 0x1C);

locret_4AF0B5:
	retn(mv, &ts->esp, 0x14);
}

void sub_4AF0C0(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_4AF0D5;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_495A30(ts, mv);
	pop(mv, &ts->esp, ts->ecx);

locret_4AF0D5:
	retn(mv, &ts->esp, 0x14);
}

void sub_4AF0E0(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_4AF10B;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, 0xF35D144E);
	push(mv, &ts->esp, 0x461A18EE);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xC11);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->eax);
	game::sub_4A3100(ts, mv);
	add(&ts->esp, 0x1C);

locret_4AF10B:
	retn(mv, &ts->esp, 0x14);
}

void sub_4AF110(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772CE0);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x5E7E1192);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x42ADB44C);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x10);
	mov(&ts->ecx, 0x83A9E0);
	xor_(&ts->bl, ts->bl);
	mov(mv, x86::mem(ts->esi + 0x150, 4), 0x0);
	game::sub_502FE0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4AF1F9;
    }
	mov(mv, &ts->al, x86::mem(0x86347C, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, 0x48);
	if (ts->eflags.zero) {
        goto loc_4AF1A5;
    }
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4AF1DB;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xE072DB21);
	push(mv, &ts->esp, 0xA230CD88);
	mov(&ts->ecx, ts->edi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x790CC0);
	goto loc_4AF1DD;

loc_4AF1A5:
	mov(&ts->ebx, 0x1);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4AF1DB;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x97B1DCDA);
	push(mv, &ts->esp, 0x3CB92E26);
	mov(&ts->ecx, ts->edi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x790CC0);
	goto loc_4AF1DD;

loc_4AF1DB:
	xor_(&ts->edi, ts->edi);

loc_4AF1DD:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->edi);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->esi + 0x150, 4), ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));
	test(&ts->eflags, ts->bl, ts->bl);
	if (!ts->eflags.zero) {
        goto loc_4AF242;
    }

loc_4AF1F9:
	push(mv, &ts->esp, 0x48);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x2);
	if (ts->eflags.zero) {
        goto loc_4AF230;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x97B1DCDA);
	push(mv, &ts->esp, 0x3CB92E26);
	mov(&ts->ecx, ts->edi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x790CB8);
	goto loc_4AF232;

loc_4AF230:
	xor_(&ts->edi, ts->edi);

loc_4AF232:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xFFFFFFFF);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));

loc_4AF242:
	push(mv, &ts->esp, 0x48);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x3);
	if (ts->eflags.zero) {
        goto loc_4AF279;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xAA3F09D8);
	push(mv, &ts->esp, 0x72C87F3C);
	mov(&ts->ecx, ts->edi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x790CC8);
	goto loc_4AF27B;

loc_4AF279:
	xor_(&ts->edi, ts->edi);

loc_4AF27B:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xFFFFFFFF);
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4C, 4));
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50B8A0(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->ebx + 0x20, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_772C90:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x790CE0);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_772CA4:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x790CE0);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_772CB8:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x790CD8);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_772CCC:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x790CD0);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4AF110:
	mov(&ts->eax, 0x7DF294);
	goto ___CxxFrameHandler;
}

void sub_4AF2C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_543D40(ts, mv);
	cmp(&ts->eflags, ts->edi, 0x251BF83E);
	if (ts->eflags.zero) {
        goto loc_4AF332;
    }
	cmp(&ts->eflags, ts->edi, 0x461A18EE);
	if (ts->eflags.zero) {
        goto loc_4AF310;
    }
	cmp(&ts->eflags, ts->edi, 0x911AB364);
	if (!ts->eflags.zero) {
        goto loc_4AF34E;
    }
	mov(mv, &ts->eax, x86::mem(0x7F42C0, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4AF310:
	mov(&ts->ecx, 0x83A9E0);
	game::sub_502FE0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4AF34E;
    }
	mov(mv, &ts->edx, x86::mem(0x836538, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_495A30(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4AF332:
	mov(&ts->ecx, 0x83A9E0);
	game::sub_502FE0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4AF34E;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x150, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4AF34E;
    }
	mov(mv, x86::mem(ts->esi + 0x20, 1), 0x1);

loc_4AF34E:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);
}

void sub_4AF360(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(&ts->ecx, 0x83A9D0);
	game::sub_52A4C0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	if (ts->eflags.zero) {
        goto loc_4AF38D;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x151);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->eax);
	game::sub_4A3100(ts, mv);
	add(&ts->esp, 0x1C);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4AF38D:
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x9A3B571D);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4AF3A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x14, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x10, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0xC, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_543D40(ts, mv);
	cmp(&ts->eflags, ts->edi, 0x451E768E);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4AF55F;
    }
	if (ts->eflags.zero) {
        goto loc_4AF539;
    }
	cmp(&ts->eflags, ts->edi, 0x30ED2368);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4AF49F;
    }
	if (ts->eflags.zero) {
        goto loc_4AF451;
    }
	cmp(&ts->eflags, ts->edi, 0xC407210);
	if (ts->eflags.zero) {
        goto loc_4AF406;
    }
	cmp(&ts->eflags, ts->edi, 0x1FAB5998);
	if (ts->eflags.zero) {
        goto loc_4AF4BB;
    }
	cmp(&ts->eflags, ts->edi, 0x28C2C1B8);
	if (ts->eflags.zero) {
        goto loc_4AF50E;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4AF406:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->al, x86::mem(ts->edx + 0x22, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4AF622;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537D40(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4AF622;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C60(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4AF451:
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x4);
	mov(&ts->ecx, ts->eax);
	game::sub_4A7180(ts, mv);
	mov(&ts->ecx, 0x83A9D0);
	game::sub_5032C0(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(0x836324, 1), 0x0);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x78F530);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537980(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	game::sub_50B8C0(ts, mv);
	add(&ts->esp, 0x14);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4AF49F:
	cmp(&ts->eflags, ts->edi, 0x34DC1BEC);
	if (ts->eflags.zero) {
        goto loc_4AF521;
    }
	cmp(&ts->eflags, ts->edi, 0x35F8620B);
	if (ts->eflags.zero) {
        goto loc_4AF502;
    }
	cmp(&ts->eflags, ts->edi, 0x43DA9FD0);
	if (!ts->eflags.zero) {
        goto loc_4AF622;
    }

loc_4AF4BB:
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, 0x83A9D0);
	game::sub_52A460(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_538CA0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x790CEC);
	push(mv, &ts->esp, 0x444969FD);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x790CEC);
	push(mv, &ts->esp, 0x444969FE);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x20);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4AF502:
	push(mv, &ts->esp, 0x11);
	mov(&ts->ecx, 0x8635BC);
	game::sub_5243D0(ts, mv);

loc_4AF50E:
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, 0x83A9D0);
	game::sub_52A460(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4AF521:
	mov(&ts->ecx, 0x83A9D0);
	game::sub_5032C0(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_495AF0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4AF539:
	push(mv, &ts->esp, ts->ebx);
	game::sub_50D2A0(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(0x83A9D8, 4), ts->eax);
	game::sub_4AF360(ts, mv);
	mov(&ts->ecx, 0x83A9D0);
	game::sub_5032C0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4AF55F:
	cmp(&ts->eflags, ts->edi, 0x911AB364);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4AF607;
    }
	if (ts->eflags.zero) {
        goto loc_4AF59F;
    }
	cmp(&ts->eflags, ts->edi, 0x461A18EE);
	if (ts->eflags.zero) {
        goto loc_4AF589;
    }
	cmp(&ts->eflags, ts->edi, 0x7D1E4C8C);
	if (ts->eflags.zero) {
        goto loc_4AF50E;
    }
	cmp(&ts->eflags, ts->edi, 0x8867412D);
	if (!ts->eflags.zero) {
        goto loc_4AF622;
    }

loc_4AF589:
	mov(mv, &ts->edx, x86::mem(0x836538, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50D2A0(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(0x83A9D8, 4), ts->eax);
	goto loc_4AF60F;

loc_4AF59F:
	mov(mv, &ts->al, x86::mem(0x836324, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4AF5B4;
    }
	mov(&ts->eax, 0x30ED2368);
	mov(&ts->ecx, 0xCB5E3178);
	goto loc_4AF5BE;

loc_4AF5B4:
	mov(&ts->eax, 0x451E768E);
	mov(&ts->ecx, 0x60B42AFB);

loc_4AF5BE:
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x43DA9FD0);
	push(mv, &ts->esp, 0x43DA9FD0);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xBE503981);
	push(mv, &ts->esp, 0x88579775);
	push(mv, &ts->esp, 0x78FA24);
	push(mv, &ts->esp, ts->eax);
	game::sub_558790(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537950(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x96DDA9E6);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x34);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4AF607:
	cmp(&ts->eflags, ts->edi, 0x9A3B571D);
	if (!ts->eflags.zero) {
        goto loc_4AF622;
    }

loc_4AF60F:
	mov(mv, x86::mem(0x836324, 1), 0x0);
	mov(mv, x86::mem(0x863484, 1), 0x1);
	game::sub_5404A0(ts, mv);

loc_4AF622:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);
}

void sub_4AF630(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_4AF679;
    }
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, 0x60B42AFB);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x43DA9FD0);
	push(mv, &ts->esp, 0x43DA9FD0);
	push(mv, &ts->esp, 0x451E768E);
	push(mv, &ts->esp, 0xBE503981);
	push(mv, &ts->esp, 0x88579775);
	push(mv, &ts->esp, 0x78FA24);
	push(mv, &ts->esp, ts->esi);
	game::sub_558790(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x96DDA9E6);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x2C);
	pop(mv, &ts->esp, ts->esi);

locret_4AF679:
	retn(mv, &ts->esp, 0x14);
}

void sub_4AF680(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	cmp(mv, &ts->eflags, x86::mem(ts->ebp + 0xC, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto loc_4AF6A2;
    }
	mov(mv, &ts->eax, x86::mem(0x863480, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x1);
	game::sub_552CC0(ts, mv);
	add(&ts->esp, 0x10);

loc_4AF6A2:
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x14);
}

void sub_4AF6B0(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_4AF6CE;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x790D0C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);

locret_4AF6CE:
	retn(mv, &ts->esp, 0x14);
}

void sub_4AF6E0(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_4AF6FE;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78F5D4);
	push(mv, &ts->esp, ts->eax);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);

locret_4AF6FE:
	retn(mv, &ts->esp, 0x14);
}

void sub_4AF710(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_4AF72E;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x790D4C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);

locret_4AF72E:
	retn(mv, &ts->esp, 0x14);
}

void sub_4AF740(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_4AF775;
    }
	mov(&ts->ecx, 0x83A9D0);
	game::sub_5032C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, 0x7D1E4C8C);
	push(mv, &ts->esp, 0x28C2C1B8);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xC41);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->eax);
	game::sub_4A3100(ts, mv);
	add(&ts->esp, 0x1C);

locret_4AF775:
	retn(mv, &ts->esp, 0x14);
}

void sub_4AF780(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_4AF7C9;
    }
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x96DDA9E6);
	game::sub_55DDA0(ts, mv);
	push(mv, &ts->esp, 0xB10AE56F);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1FAB5998);
	push(mv, &ts->esp, 0x1FAB5998);
	push(mv, &ts->esp, 0x34DC1BEC);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x790D74);
	push(mv, &ts->esp, ts->esi);
	game::sub_558790(ts, mv);
	add(&ts->esp, 0x2C);
	pop(mv, &ts->esp, ts->esi);

locret_4AF7C9:
	retn(mv, &ts->esp, 0x14);
}

void sub_4AF7D0(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_4AF819;
    }
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, 0xCB5E3178);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x43DA9FD0);
	push(mv, &ts->esp, 0x43DA9FD0);
	push(mv, &ts->esp, 0x30ED2368);
	push(mv, &ts->esp, 0xBE503981);
	push(mv, &ts->esp, 0x88579775);
	push(mv, &ts->esp, 0x78FA24);
	push(mv, &ts->esp, ts->esi);
	game::sub_558790(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x96DDA9E6);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x2C);
	pop(mv, &ts->esp, ts->esi);

locret_4AF819:
	retn(mv, &ts->esp, 0x14);
}

void sub_4AF820(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772D90);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x48);
	mov(&ts->esi, ts->ecx);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4AF876;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x194EFA7A);
	push(mv, &ts->esp, 0xA230CD88);
	mov(&ts->ecx, ts->edi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x790CF4);
	mov(mv, x86::mem(ts->edi + 0x45, 1), 0x1);
	goto loc_4AF878;

loc_4AF876:
	xor_(&ts->edi, ts->edi);

loc_4AF878:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	or_(&ts->ebx, 0xFFFFFFFF);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));
	cmp(mv, &ts->eflags, x86::mem(0x862838, 4), 0x1);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4AF8D5;
    }
	push(mv, &ts->esp, 0x48);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4AF8C7;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x9C07CA52);
	push(mv, &ts->esp, 0x22F2CEAB);
	mov(&ts->ecx, ts->edi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x790D44);
	goto loc_4AF8C9;

loc_4AF8C7:
	xor_(&ts->edi, ts->edi);

loc_4AF8C9:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));

loc_4AF8D5:
	push(mv, &ts->esp, 0x48);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x2);
	if (ts->eflags.zero) {
        goto loc_4AF90C;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x451879E2);
	push(mv, &ts->esp, 0xA964095B);
	mov(&ts->ecx, ts->edi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x790D04);
	goto loc_4AF90E;

loc_4AF90C:
	xor_(&ts->edi, ts->edi);

loc_4AF90E:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));
	push(mv, &ts->esp, 0x48);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x3);
	if (ts->eflags.zero) {
        goto loc_4AF951;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xABB24BBC);
	push(mv, &ts->esp, 0x511F9D75);
	mov(&ts->ecx, ts->edi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x790CFC);
	goto loc_4AF953;

loc_4AF951:
	xor_(&ts->edi, ts->edi);

loc_4AF953:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	push(mv, &ts->esp, 0x48);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x4);
	if (ts->eflags.zero) {
        goto loc_4AF99A;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x8513F2C0);
	push(mv, &ts->esp, 0x7A9B397A);
	mov(&ts->ecx, ts->edi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x790D6C);
	mov(mv, x86::mem(ts->edi + 0x45, 1), 0x1);
	goto loc_4AF99C;

loc_4AF99A:
	xor_(&ts->edi, ts->edi);

loc_4AF99C:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));
	push(mv, &ts->esp, 0x48);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x5);
	if (ts->eflags.zero) {
        goto loc_4AF9DF;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xCE62C0BF);
	push(mv, &ts->esp, 0x49D2E3DE);
	mov(&ts->ecx, ts->edi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x790D24);
	goto loc_4AF9E1;

loc_4AF9DF:
	xor_(&ts->edi, ts->edi);

loc_4AF9E1:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	push(mv, &ts->esp, 0x48);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x7);
	if (ts->eflags.zero) {
        goto loc_4AFA24;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x3EC7395);
	push(mv, &ts->esp, 0x8ADA6FD4);
	mov(&ts->ecx, ts->edi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x790D64);
	goto loc_4AFA26;

loc_4AFA24:
	xor_(&ts->edi, ts->edi);

loc_4AFA26:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));
	push(mv, &ts->esp, 0x48);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x8);
	if (ts->eflags.zero) {
        goto loc_4AFA6D;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x46E7D84);
	push(mv, &ts->esp, 0xFC39853F);
	mov(&ts->ecx, ts->edi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x790D8C);
	mov(mv, x86::mem(ts->edi + 0x45, 1), 0x1);
	goto loc_4AFA6F;

loc_4AFA6D:
	xor_(&ts->edi, ts->edi);

loc_4AFA6F:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50B8A0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4C, 4));
	add(&ts->esp, 0x4);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x20, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x10, 4));
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4AFAD5;
    }
	push(mv, &ts->esp, 0x790E08);
	game::sub_577EB0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4AFAD5;
    }
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->eax);
	game::sub_4A7180(ts, mv);

loc_4AFAD5:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_772CF0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x790DF8);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_772D04:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x790DE8);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_772D18:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x790DE0);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_772D2C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x790DD0);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_772D40:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x790DC4);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_772D54:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x790DB4);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_772D68:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x790DA4);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_772D7C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x790D94);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4AF820:
	mov(&ts->eax, 0x7DF2F8);
	goto ___CxxFrameHandler;
}

void sub_4AFAF0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, ts->ecx);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ecx);
	retn(mv, &ts->esp);
}

void sub_4AFB00(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_4AFB15;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_53DDB0(ts, mv);
	pop(mv, &ts->esp, ts->ecx);

locret_4AFB15:
	retn(mv, &ts->esp, 0x14);
}

void sub_4AFB20(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_4AFB35;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_53DDF0(ts, mv);
	pop(mv, &ts->esp, ts->ecx);

locret_4AFB35:
	retn(mv, &ts->esp, 0x14);
}

void sub_4AFB40(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_4AFB5E;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x790D2C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);

locret_4AFB5E:
	retn(mv, &ts->esp, 0x14);
}

void sub_4AFB70(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772DDC);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->al, x86::mem(0x836327, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4AFBA8;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax + 0x20, 4));
	mov(mv, x86::mem(0x836327, 1), 0x1);
	goto loc_4AFBC0;

loc_4AFBA8:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4C, 4));
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50B8A0(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->ebx + 0x20, 4));

loc_4AFBC0:
	push(mv, &ts->esp, 0x1);
	game::sub_510D50(ts, mv);
	mov(&ts->ebx, ts->eax);
	neg(&ts->ebx);
	sbb(&ts->bl, ts->bl);
	push(mv, &ts->esp, 0x48);
	inc(&ts->bl);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4AFC09;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xC7993F9A);
	push(mv, &ts->esp, 0xFF293517);
	mov(&ts->ecx, ts->edi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x790E28);
	mov(mv, x86::mem(ts->edi + 0x22, 1), ts->bl);
	goto loc_4AFC0B;

loc_4AFC09:
	xor_(&ts->edi, ts->edi);

loc_4AFC0B:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xFFFFFFFF);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	push(mv, &ts->esp, 0x2);
	game::sub_510D50(ts, mv);
	mov(&ts->ebx, ts->eax);
	neg(&ts->ebx);
	sbb(&ts->bl, ts->bl);
	push(mv, &ts->esp, 0x48);
	inc(&ts->bl);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4AFC64;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7647B08C);
	push(mv, &ts->esp, 0x597DF2A7);
	mov(&ts->ecx, ts->edi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x790E30);
	mov(mv, x86::mem(ts->edi + 0x22, 1), ts->bl);
	goto loc_4AFC66;

loc_4AFC64:
	xor_(&ts->edi, ts->edi);

loc_4AFC66:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xFFFFFFFF);
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));
	mov(&ts->ecx, 0x85AD40);
	game::sub_5009E0(ts, mv);
	mov(&ts->ebx, ts->eax);
	neg(&ts->ebx);
	sbb(&ts->bl, ts->bl);
	push(mv, &ts->esp, 0x48);
	inc(&ts->bl);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x2);
	if (ts->eflags.zero) {
        goto loc_4AFCC2;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xE0004602);
	push(mv, &ts->esp, 0x878FFDF);
	mov(&ts->ecx, ts->edi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x790E38);
	mov(mv, x86::mem(ts->edi + 0x22, 1), ts->bl);
	goto loc_4AFCC4;

loc_4AFCC2:
	xor_(&ts->edi, ts->edi);

loc_4AFCC4:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xFFFFFFFF);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax + 0x20, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_772DA0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x790E5C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_772DB4:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x790E50);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_772DC8:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x790E40);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4AFB70:
	mov(&ts->eax, 0x7DF32C);
	goto ___CxxFrameHandler;
}

void sub_4AFD00(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772E04);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x2C);
	mov(mv, &ts->eax, x86::mem(0x862838, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x8, 4), 0x0);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4AFDDC;
    }
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x8, 4), 0x862100);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_4AFD40:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edi, x86::mem(ts->eax, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4AFDB5;
    }
	mov(&ts->ecx, ts->edi);
	game::sub_500180(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F604);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	push(mv, &ts->esp, 0x4C);
	game::j__malloc(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x14);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->esi);
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x40, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4AFDA3;
    }
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x79B604);
	mov(mv, x86::mem(ts->esi + 0x48, 4), ts->edi);
	goto loc_4AFDA5;

loc_4AFDA3:
	xor_(&ts->esi, ts->esi);

loc_4AFDA5:
	mov(mv, &ts->eax, x86::mem(ts->ebx, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x44, 4), 0xFFFFFFFF);
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));

loc_4AFDB5:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(0x862838, 4));
	inc(&ts->eax);
	add(&ts->edx, 0x104);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4AFD40;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);

loc_4AFDDC:
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x4C, 4));
	lea(mv, &ts->ecx, x86::mem(ts->ebx + 0x4C, 4));
	push(mv, &ts->esp, 0x0);
	call(ts, mv, x86::mem(ts->edx + 0x20, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x30, 4));
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x38);
	retn(mv, &ts->esp);

loc_772DF0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x790E70);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x30, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4AFD00:
	mov(&ts->eax, 0x7DF350);
	goto ___CxxFrameHandler;
}

void sub_4AFE00(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x918, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x840, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	game::sub_511E60(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(&ts->edi, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	game::sub_4901D0(ts, mv);
	add(&ts->esp, 0x14);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4AFE40;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xE4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C990(ts, mv);
	add(&ts->esp, 0x8);
	goto loc_4AFE5A;

loc_4AFE40:
	push(mv, &ts->esp, 0x790324);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xE4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50C990(ts, mv);
	add(&ts->esp, 0xC);

loc_4AFE5A:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x918, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x840, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_511E60(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(&ts->edi, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	game::sub_4901D0(ts, mv);
	add(&ts->esp, 0x14);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4AFE96;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xE8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C990(ts, mv);
	add(&ts->esp, 0x8);
	goto loc_4AFEB0;

loc_4AFE96:
	push(mv, &ts->esp, 0x790324);
	game::sub_505450(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xE8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C990(ts, mv);
	add(&ts->esp, 0xC);

loc_4AFEB0:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x84, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x80, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x88, 4));
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->edi);
	game::sub_538080(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x50, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	if (ts->eflags.zero) {
        goto loc_4AFEDC;
    }
	add(&ts->eax, 0xFFFFFFF0);
	goto loc_4AFEDE;

loc_4AFEDC:
	xor_(&ts->eax, ts->eax);

loc_4AFEDE:
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4AFEF6;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->edi);
	game::sub_50D820(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	goto loc_496160;

loc_4AFEF6:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4AFF02;
    }
	add(&ts->eax, 0xFFFFFFF0);
	goto loc_4AFF04;

loc_4AFF02:
	xor_(&ts->eax, ts->eax);

loc_4AFF04:
	cmp(&ts->eflags, ts->ecx, ts->eax);
	mov(&ts->ecx, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_4AFF1C;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x2);
	game::sub_50D820(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	goto loc_496160;

loc_4AFF1C:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1);
	game::sub_50D820(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x2);
	mov(&ts->ecx, ts->edi);
	game::sub_50D820(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	goto loc_496160;

loc_496160:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	push(mv, &ts->esp, ts->edi);
	game::sub_511E00(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	lea(mv, &ts->edi, x86::mem(ts->esi + 0xF0, 4));
	game::sub_5B53A0(ts, mv);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_4FF550(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	game::sub_511E00(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x134, 4));
	game::sub_5B6A20(ts, mv);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_4FF550(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	game::sub_511E00(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	add(&ts->esi, 0x178);
	game::sub_5B5490(ts, mv);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_4FF550(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	jmp(x86::mem(ts->eax + 0x18, 4));
}

void sub_4AFF40(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x85AD40);
	game::sub_500BF0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4AFF82;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x10, 4));
	mov(mv, &ts->esi, x86::mem(ts->ecx, 4));
	game::Iostream_init__Iostream_init_void_(ts, mv);
	mov(&ts->edi, ts->eax);
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4AFF82;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_4AFF70:
	mov(mv, &ts->edx, x86::mem(ts->ebx, 4));
	mov(&ts->ecx, ts->ebx);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x8, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_4AFF8B;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_4AFF70;
    }

loc_4AFF82:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0xC);

loc_4AFF8B:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0xC);
}

void sub_4AFFA0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0x9120409E);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4B000F;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x50, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4AFFC0;
    }
	add(&ts->eax, 0xFFFFFFF0);
	goto loc_4AFFC2;

loc_4AFFC0:
	xor_(&ts->eax, ts->eax);

loc_4AFFC2:
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B0073;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F568);
	push(mv, &ts->esp, 0x790E98);
	push(mv, &ts->esp, ts->eax);
	game::sub_5426C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x14, 4));
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4AFFF1;
    }
	add(&ts->eax, 0xFFFFFFF0);
	goto loc_4AFFF3;

loc_4AFFF1:
	xor_(&ts->eax, ts->eax);

loc_4AFFF3:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x84, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esi + 0x58, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	dec(&ts->ecx);
	push(mv, &ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x84, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	goto loc_4B006B;

loc_4B000F:
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_4B0073;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B0022;
    }
	add(&ts->eax, 0xFFFFFFF0);
	goto loc_4B0024;

loc_4B0022:
	xor_(&ts->eax, ts->eax);

loc_4B0024:
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B0073;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F568);
	push(mv, &ts->esp, 0x790E84);
	push(mv, &ts->esp, ts->ecx);
	game::sub_5426C0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x10, 4));
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B004F;
    }
	add(&ts->eax, 0xFFFFFFF0);
	goto loc_4B0051;

loc_4B004F:
	xor_(&ts->eax, ts->eax);

loc_4B0051:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x84, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->esi + 0x58, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->eax);
	inc(&ts->edx);
	push(mv, &ts->esp, 0x5);
	mov(mv, x86::mem(ts->esi + 0x84, 4), ts->edx);
	push(mv, &ts->esp, ts->ecx);

loc_4B006B:
	game::sub_50D150(ts, mv);
	add(&ts->esp, 0xC);

loc_4B0073:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4B00F4;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x918, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x844, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4B00ED;
    }
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x840, 4));
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4B00B0;
    }
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	goto loc_4B00D5;

loc_4B00B0:
	push(mv, &ts->esp, 0x7906DC);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4B00E1;
    }
	push(mv, &ts->esp, 0x7906DC);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B00E1;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4C, 4));

loc_4B00D5:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B00E1;
    }
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->eax);
	game::sub_4A5EE0(ts, mv);

loc_4B00E1:
	mov(mv, &ts->edx, x86::mem(0x8651AC, 4));
	mov(mv, x86::mem(ts->esi + 0xE0, 4), ts->edx);

loc_4B00ED:
	mov(&ts->ecx, ts->esi);
	game::sub_4AFE00(ts, mv);

loc_4B00F4:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4B0100(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4B0120(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4B0118;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4B0118:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4B0120(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x790EAC);
	add(&ts->ecx, 0x3A4);
	goto nullsub_1;
}

void sub_4B0140(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x5C, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x93475966);
	xor_(&ts->edi, ts->edi);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x790EF4);
	push(mv, &ts->esp, 0x790EE8);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x931, 1));
	add(&ts->esp, 0x14);
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_4B0235;
    }
	mov(mv, &ts->dl, x86::mem(ts->eax + 0x930, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	if (!ts->eflags.zero) {
        goto loc_4B022D;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x790EDC);
	game::sub_43DB50(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x918, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x840, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_511E60(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC0, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50C990(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x918, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x840, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	game::sub_511E60(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x790EC8);
	mov(&ts->edi, ts->eax);
	game::sub_43DB50(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x790EB8);
	game::sub_43DB50(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_5379C0(ts, mv);
	add(&ts->esp, 0x44);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0x4);
	goto loc_4B0353;

loc_4B022D:
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_4B02C5;
    }

loc_4B0235:
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x930, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_4B02D3;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x790EDC);
	game::sub_43DB50(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x790EC8);
	game::sub_43DB50(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xCA89507E);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x24);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, 0x790EC8);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x790EB8);
	game::sub_43DB50(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(&ts->edi, 0xDA665928);
	goto loc_4B0350;

loc_4B02C5:
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x930, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_4B0353;
    }

loc_4B02D3:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x790EDC);
	game::sub_43DB50(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x790EC8);
	game::sub_43DB50(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xC9F7F7E5);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x24);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, 0x790EC8);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x790EB8);
	game::sub_43DB50(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(&ts->edi, 0xF05704AC);

loc_4B0350:
	add(&ts->esp, 0x20);

loc_4B0353:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	game::sub_4901D0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B0374;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xBC, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C990(ts, mv);
	add(&ts->esp, 0x8);

loc_4B0374:
	push(mv, &ts->esp, 0x790038);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4B049F;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F758);
	push(mv, &ts->esp, 0x26F1F64B);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F758);
	push(mv, &ts->esp, 0x26F1F64C);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x790EB0);
	push(mv, &ts->esp, 0xDF422345);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	add(&ts->esp, 0x30);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B03D7;
    }
	add(&ts->eax, 0xFFFFFFF0);
	goto loc_4B03D9;

loc_4B03D7:
	xor_(&ts->eax, ts->eax);

loc_4B03D9:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4B040F;
    }
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x60, 4));
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->edi);
	game::sub_50D820(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x2);
	mov(&ts->ecx, ts->edi);
	game::sub_50D820(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x26F1F64B);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	goto loc_4B0488;

loc_4B040F:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x50, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B041B;
    }
	add(&ts->eax, 0xFFFFFFF0);
	goto loc_4B041D;

loc_4B041B:
	xor_(&ts->eax, ts->eax);

loc_4B041D:
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x60, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_4B0464;
    }
	game::sub_50D820(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x2);
	mov(&ts->ecx, ts->edi);
	game::sub_50D820(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x26F1F64B);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x26F1F64C);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	goto loc_4B049C;

loc_4B0464:
	game::sub_50D820(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x2);
	mov(&ts->ecx, ts->edi);
	game::sub_50D820(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x26F1F64B);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);

loc_4B0488:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x26F1F64C);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);

loc_4B049C:
	add(&ts->esp, 0x18);

loc_4B049F:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x5C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x58, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x60, 4));
	game::sub_538080(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	goto loc_4962F0;

loc_4962F0:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x931, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_496386;
    }
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x930, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_496386;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_511E00(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	lea(mv, &ts->edi, x86::mem(ts->esi + 0xC8, 4));
	game::sub_5B53A0(ts, mv);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_4FF550(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	game::sub_511E00(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x10C, 4));
	game::sub_5B6A20(ts, mv);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_4FF550(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	game::sub_511E00(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	add(&ts->esi, 0x150);
	game::sub_5B5490(ts, mv);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_4FF550(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	jmp(x86::mem(ts->eax + 0x18, 4));

loc_496386:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4B04C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0x9120409E);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4B0545;
    }
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_4B05A7;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x50, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B04EB;
    }
	add(&ts->eax, 0xFFFFFFF0);
	goto loc_4B04ED;

loc_4B04EB:
	xor_(&ts->eax, ts->eax);

loc_4B04ED:
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B05A7;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F568);
	push(mv, &ts->esp, 0x790E84);
	push(mv, &ts->esp, ts->eax);
	game::sub_5426C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x10, 4));
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B051C;
    }
	add(&ts->eax, 0xFFFFFFF0);
	goto loc_4B051E;

loc_4B051C:
	xor_(&ts->eax, ts->eax);

loc_4B051E:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x5C, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	inc(&ts->ecx);
	push(mv, &ts->esp, 0x5);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x5C, 4), ts->ecx);
	game::sub_50D150(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8651AC, 4));
	mov(mv, x86::mem(ts->esi + 0xB8, 4), ts->ecx);
	goto loc_4B05A4;

loc_4B0545:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B0551;
    }
	add(&ts->eax, 0xFFFFFFF0);
	goto loc_4B0553;

loc_4B0551:
	xor_(&ts->eax, ts->eax);

loc_4B0553:
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B05A7;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F568);
	push(mv, &ts->esp, 0x790E98);
	push(mv, &ts->esp, ts->edx);
	game::sub_5426C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x14, 4));
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B057E;
    }
	add(&ts->eax, 0xFFFFFFF0);
	goto loc_4B0580;

loc_4B057E:
	xor_(&ts->eax, ts->eax);

loc_4B0580:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x5C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	dec(&ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x5C, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->eax);
	game::sub_50D150(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8651AC, 4));
	mov(mv, x86::mem(ts->esi + 0xB8, 4), ts->eax);

loc_4B05A4:
	add(&ts->esp, 0xC);

loc_4B05A7:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4B0669;
    }
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x930, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_4B05C8;
    }
	mov(&ts->ecx, 0x8637D0);
	game::sub_53D8C0(ts, mv);
	goto loc_4B05F8;

loc_4B05C8:
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x931, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	mov(&ts->ecx, 0x8637D0);
	if (ts->eflags.zero) {
        goto loc_4B05DE;
    }
	game::sub_53D8C0(ts, mv);
	goto loc_4B05F8;

loc_4B05DE:
	game::sub_557EC0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	push(mv, &ts->esp, 0x0);
	game::sub_511E00(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x8637D0);
	game::sub_55B1A0(ts, mv);

loc_4B05F8:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x918, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x844, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4B0662;
    }
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x840, 4));
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4B0631;
    }
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	goto loc_4B0656;

loc_4B0631:
	push(mv, &ts->esp, 0x7906DC);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4B0662;
    }
	push(mv, &ts->esp, 0x7906DC);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B0662;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4C, 4));

loc_4B0656:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B0662;
    }
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->eax);
	game::sub_4A5EE0(ts, mv);

loc_4B0662:
	mov(&ts->ecx, ts->esi);
	game::sub_4B0140(ts, mv);

loc_4B0669:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4B0670(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x20, 4));
	mov(&ts->esi, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_500DE0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_4965F0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(0x835F38, 4));
	lea(mv, &ts->edx, x86::mem(ts->ecx + 0x1, 4));
	mov(mv, x86::mem(0x835F38, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x7F4348, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x78F6F4);
	game::sub_50B990(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_5379C0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	add(&ts->esp, 0x18);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4B06E4;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4B06E4;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x34, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_4B06E4;
    }
	push(mv, &ts->esp, 0xB90F50BB);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C990(ts, mv);
	add(&ts->esp, 0x8);

loc_4B06E4:
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x20, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x24, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x28, 4));
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->ecx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x2C, 4));
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x18, 4), 0x0);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x10, 4));
	mov(mv, x86::mem(ts->esi + 0x28, 1), 0x1);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	mov(&ts->eax, ts->esi);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x14, 4));
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x8);
}

void sub_4B0740(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x8, 4), 0xE);
	mov(mv, &ts->eax, x86::mem(0x835F70, 4));
	mov(&ts->ecx, ts->eax);
	inc(&ts->eax);
	mov(mv, x86::mem(0x835F70, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x7F4380, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F6F4);
	game::sub_50B990(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_5379C0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x64, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x60, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x14, 4));
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->edx);
	movzx(mv, &ts->eax, x86::mem(ts->eax + 0x40C, 2));
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	add(&ts->esp, 0x14);
	mov(mv, x86::mem(ts->esi + 0x28, 1), 0x0);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	mov(&ts->eax, ts->esi);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784240, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x18, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4B07B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0xC, 4));
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->ecx + 0xC, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4B07D3;
    }
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x10, 4));

loc_4B07C1:
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	game::sub_514160(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4B07DB;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_4B07C1;
    }

loc_4B07D3:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

loc_4B07DB:
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_4B07F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4B084C;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edi);

loc_4B0802:
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x8, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0x8, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_4B0815;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4B0802;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4B0815:
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x20, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x1C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x24, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51D4D0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x24, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F6BC);
	push(mv, &ts->esp, ts->edx);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0x1C);
	pop(mv, &ts->esp, ts->edi);

loc_4B084C:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4B0850(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x14, 4));
	xor_(&ts->ebx, ts->ebx);
	test(&ts->eflags, ts->edx, ts->edx);
	push(mv, &ts->esp, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_4B08BA;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	cmp(&ts->eflags, ts->edx, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_4B0879;
    }
	push(mv, &ts->esp, ts->edx);
	game::sub_4964D0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4B0970;
    }

loc_4B0879:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0xC, 4));
	lea(mv, &ts->ebp, x86::mem(ts->esi + 0xC, 4));
	cmp(&ts->eflags, ts->edi, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_4B0970;
    }

loc_4B0887:
	cmp(&ts->eflags, ts->edx, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_4B0894;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x8, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x8, 4), ts->edx);
	if (!ts->eflags.zero) {
        goto loc_4B08A8;
    }

loc_4B0894:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x20, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_496760(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4B08B3;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));

loc_4B08A8:
	mov(mv, &ts->edi, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->edi, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_4B0887;
    }
	goto loc_4B0970;

loc_4B08B3:
	mov(&ts->ebx, ts->edi);
	goto loc_4B0970;

loc_4B08BA:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	cmp(&ts->eflags, ts->eax, 0x3);
	if (!ts->eflags.zero) {
        goto loc_4B0915;
    }
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x18, 4));
	cmp(&ts->eflags, ts->ebp, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_4B08E0;
    }
	push(mv, &ts->esp, ts->ebp);
	game::sub_4964D0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4B08E0;
    }
	xor_(&ts->ebx, ts->ebx);
	goto loc_4B0970;

loc_4B08E0:
	mov(&ts->ebx, ts->edx);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0xC, 4));

loc_4B08E5:
	mov(mv, &ts->eax, x86::mem(ts->ebx, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_4B08ED;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));

loc_4B08ED:
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esi + 0x14, 4));
	mov(&ts->ebx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B0970;
    }
	cmp(&ts->eflags, ts->ebp, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_4B0901;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x8, 4), ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_4B08E5;
    }

loc_4B0901:
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->eax);
	game::sub_496760(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4B08E5;
    }
	goto loc_4B0970;

loc_4B0915:
	cmp(&ts->eflags, ts->eax, 0x2);
	if (!ts->eflags.zero) {
        goto loc_4B0970;
    }
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x18, 4));
	cmp(&ts->eflags, ts->ebp, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_4B0934;
    }
	push(mv, &ts->esp, ts->ebp);
	game::sub_4964D0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4B0934;
    }
	xor_(&ts->ebx, ts->ebx);
	goto loc_4B0970;

loc_4B0934:
	mov(&ts->ebx, ts->edx);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0xC, 4));
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_4B0940:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x4, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_4B094A;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));

loc_4B094A:
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esi + 0x14, 4));
	mov(&ts->ebx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B0970;
    }
	cmp(&ts->eflags, ts->ebp, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_4B095E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x8, 4), ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_4B0940;
    }

loc_4B095E:
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->eax);
	game::sub_496760(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4B0940;
    }

loc_4B0970:
	cmp(mv, &ts->eflags, ts->ebx, x86::mem(ts->esi + 0x14, 4));
	if (ts->eflags.zero) {
        goto loc_4B098C;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x14, 4), 0x3);
	push(mv, &ts->esp, 0x0);
	if (!ts->eflags.zero) {
        goto loc_4B0982;
    }
	push(mv, &ts->esp, 0x4);
	goto loc_4B0984;

loc_4B0982:
	push(mv, &ts->esp, 0x5);

loc_4B0984:
	game::sub_51DE30(ts, mv);
	add(&ts->esp, 0x8);

loc_4B098C:
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->ebx);
	push(mv, &ts->esp, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B09CD;
    }
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x20, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x1C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x24, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51D4D0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x24, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F6BC);
	push(mv, &ts->esp, ts->edx);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0x1C);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x8);

loc_4B09CD:
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x8);
}

void sub_4B09E0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x50);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x1C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(0x89E7A0, 4));
	if (ts->eflags.zero) {
        goto loc_4B0A00;
    }
	movsx(mv, &ts->eax, x86::mem(ts->eax + 0x8A, 2));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4B0A0C;
    }

loc_4B0A00:
	push(mv, &ts->esp, ts->ecx);
	game::sub_5D3E40(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->edi + 0x1C, 4), ts->eax);

loc_4B0A0C:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x18, 4));
	shl(&ts->eax, 0x4);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x7F42D0, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78F8CC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0xB4, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->edx);
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0xAC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0xB0, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x7F42D0, 4));
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ecx);
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x20, 4));
	push(mv, &ts->esp, 0x0);
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x58, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x7F42C8, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x5);
	mov(&ts->ecx, ts->esi);
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A18C, 4));
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A18C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78F8CC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x7F42CC, 4));
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A18C, 4));
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A18C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78F8CC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x64, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x64, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x60, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x64, 4));
	game::sub_5179D0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	mov(&ts->ebx, 0x400000);
	or_(&ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->ecx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x20, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x58, 4));
	push(mv, &ts->esp, ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x5C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, 0x6);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	mov(&ts->ecx, ts->esi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x64, 4));
	game::sub_5179D0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	or_(&ts->eax, ts->ebx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x48, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x44, 4));
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x20, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_51D620(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x20, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x54, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x54, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_51D620(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x20, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x5C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x58, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_51D730(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x20, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x68, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x60, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_51D730(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x4, 4));
	lea(mv, &ts->ebx, x86::mem(ts->edi + 0x4, 4));
	add(&ts->esp, 0x30);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4B0D49;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	goto loc_4B0BE0;

loc_4B0BE0:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x50, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784254, 4));
	mov(mv, x86::mem(ts->esp + 0x50, 4), ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_43C350(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x18, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_43C350(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x60, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x54, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x5C, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x60, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x60, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x50, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fsubr(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x54, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	game::sub_43E6D0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x38, 4));
	movzx(&ts->edx, ts->ax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x34, 4));
	mov(mv, x86::mem(ts->esp + 0x30, 4), ts->edx);
	mov(&ts->edx, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	mov(mv, x86::mem(ts->esi + 0x20, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784248, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	game::sub_51D4D0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x3C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	mov(&ts->eax, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->edx);
	game::sub_51CED0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x20, 4));
	add(&ts->esp, 0x24);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_496760(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4B0CEF;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0xE);
	if (ts->eflags.zero) {
        goto loc_4B0CEB;
    }
	cmp(&ts->eflags, ts->eax, 0x10);
	if (ts->eflags.zero) {
        goto loc_4B0CEB;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_4964D0(ts, mv);
	add(&ts->esp, 0x4);
	neg(&ts->al);
	sbb(&ts->al, ts->al);
	inc(&ts->al);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4B0CEF;
    }

loc_4B0CEB:
	mov(&ts->al, 0x1);
	goto loc_4B0CF1;

loc_4B0CEF:
	xor_(&ts->al, ts->al);

loc_4B0CF1:
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4B0D00;
    }
	game::sub_50CA50(ts, mv);
	goto loc_4B0D05;

loc_4B0D00:
	game::sub_50CA00(ts, mv);

loc_4B0D05:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	add(&ts->esp, 0x4);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4B0D29;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, 0x41700000);
	push(mv, &ts->esp, 0x41700000);
	push(mv, &ts->esp, ts->eax);
	goto loc_4B0D37;

loc_4B0D29:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, 0x41300000);
	push(mv, &ts->esp, 0x41300000);
	push(mv, &ts->esp, ts->ecx);

loc_4B0D37:
	game::sub_50CB00(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4B0BE0;
    }

loc_4B0D49:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x50);
	retn(mv, &ts->esp);
}

void sub_4B0D50(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x20, 4));
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->edi);
	game::sub_500DE0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_4965F0(ts, mv);
	push(mv, &ts->esp, 0xDD9EF5FF);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x20, 4), ts->eax);
	game::sub_537A60(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CCC0(ts, mv);
	add(&ts->esp, 0x14);
	mov(&ts->ecx, ts->eax);
	game::sub_5054D0(ts, mv);
	push(mv, &ts->esp, 0xC11804C2);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->eax);
	game::sub_537A60(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CCC0(ts, mv);
	add(&ts->esp, 0x10);
	mov(&ts->ecx, ts->eax);
	game::sub_5054D0(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x78F6E8);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->eax);
	game::sub_50B990(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537A60(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x78F6DC);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->eax);
	game::sub_50B990(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537A60(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x78F6C4);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->eax);
	game::sub_50B990(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537A60(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x78F6D0);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->eax);
	game::sub_50B990(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537A10(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x20, 4));
	add(&ts->esp, 0x40);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x7F4348, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F6F4);
	game::sub_50B990(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537A60(ts, mv);
	mov(&ts->edi, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_50C980(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C990(ts, mv);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CCC0(ts, mv);
	add(&ts->esp, 0x28);
	mov(&ts->ecx, ts->eax);
	game::sub_5054D0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_51D7F0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0xC);
}

void sub_4B0E70(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x5C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4B0E82;
    }
	game::sub_496B20(ts, mv);

loc_4B0E82:
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x5C, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4B0EE8;
    }
	game::sub_496C50(ts, mv);
	mov(&ts->ecx, 0x838590);
	game::sub_501100(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B0EE8;
    }
	mov(&ts->ecx, 0x838590);
	game::sub_501100(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.zero) {
        goto loc_4B0EE8;
    }
	mov(&ts->ecx, 0x838590);
	game::sub_501100(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_4B0EE8;
    }
	mov(&ts->ecx, 0x838590);
	game::sub_501100(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.zero) {
        goto loc_4B0EE8;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x5C, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x20, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_4964D0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4B0EE8;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_4B07F0(ts, mv);

loc_4B0EE8:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_4B0EF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x5C, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4B0FA8;
    }
	mov(mv, &ts->dl, x86::mem(ts->edi + 0x24, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	setz(ts->eflags, &ts->al);
	mov(&ts->ecx, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_496920(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x20, 4));
	xor_(&ts->ecx, ts->ecx);
	mov(mv, &ts->cl, x86::mem(ts->edi + 0x24, 1));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_496390(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->ecx, 0x838590);
	game::sub_501100(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B0F7A;
    }
	mov(&ts->ecx, 0x838590);
	game::sub_501100(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.zero) {
        goto loc_4B0F7A;
    }
	mov(&ts->ecx, 0x838590);
	game::sub_501100(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_4B0F7A;
    }
	mov(&ts->ecx, 0x838590);
	game::sub_501100(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.zero) {
        goto loc_4B0F7A;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x5C, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x20, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_4964D0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4B0FA8;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_4B07F0(ts, mv);
	goto loc_4B0FA8;

loc_4B0F7A:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x5C, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x20, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_4964D0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4B0FA8;
    }
	mov(mv, &ts->eax, x86::mem(0x838590, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_4B07B0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B0FA8;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_4967F0(ts, mv);

loc_4B0FA8:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B0FD8;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_4964D0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4B0FD8;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x24, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esi + 0x14, 4), 0x0);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);

loc_4B0FD8:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4B0FE0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(&ts->ecx, 0x838590);
	game::sub_501100(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B101E;
    }
	mov(&ts->ecx, 0x838590);
	game::sub_501100(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.zero) {
        goto loc_4B101E;
    }
	mov(&ts->ecx, 0x838590);
	game::sub_501100(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_4B101E;
    }
	mov(&ts->ecx, 0x838590);
	game::sub_501100(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x3);
	if (!ts->eflags.zero) {
        goto loc_4B1039;
    }

loc_4B101E:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	or_(&ts->ecx, 0x20000000);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	game::sub_54E6E0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4B1039:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	push(mv, &ts->esp, ts->edx);
	or_(&ts->eax, 0x10000000);
	push(mv, &ts->esp, ts->eax);
	game::sub_54E6E0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4B1060(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x5C, 4));
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4B107B;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x54, 4));
	push(mv, &ts->esp, ts->edi);
	game::sub_4B0E70(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4B107B:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4B1092;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4B108E;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));

loc_4B108E:
	push(mv, &ts->esp, 0x2);
	goto loc_4B10A6;

loc_4B1092:
	cmp(&ts->eflags, ts->ecx, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4B10B0;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4B10A4;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));

loc_4B10A4:
	push(mv, &ts->esp, 0x3);

loc_4B10A6:
	mov(&ts->edi, ts->eax);
	game::sub_50D180(ts, mv);
	add(&ts->esp, 0x4);

loc_4B10B0:
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_4B0E70(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4B10C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(&ts->ecx, 0x838590);
	game::sub_501100(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B10FE;
    }
	mov(&ts->ecx, 0x838590);
	game::sub_501100(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.zero) {
        goto loc_4B10FE;
    }
	mov(&ts->ecx, 0x838590);
	game::sub_501100(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_4B10FE;
    }
	mov(&ts->ecx, 0x838590);
	game::sub_501100(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x3);
	if (!ts->eflags.zero) {
        goto loc_4B1124;
    }

loc_4B10FE:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x12C23B2C);
	push(mv, &ts->esp, 0x34DC1BEC);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->eax);
	game::sub_558610(ts, mv);
	add(&ts->esp, 0x14);
	mov(mv, x86::mem(ts->esi + 0x61, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4B1124:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B1163;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x63477036);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xB4623F67);
	push(mv, &ts->esp, 0xB4623F67);
	push(mv, &ts->esp, 0x51123592);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->edx);
	game::sub_558790(ts, mv);
	add(&ts->esp, 0x24);
	mov(mv, x86::mem(ts->esi + 0x61, 1), 0x1);

loc_4B1163:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4B1170(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x8, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4B1197;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x5C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4B118A;
    }
	game::sub_496B20(ts, mv);

loc_4B118A:
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x5C, 4), 0x0);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_4B1197:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x8, 4));
	sub(&ts->eax, 0x0);
	if (ts->eflags.zero) {
        goto loc_4B11B3;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4B11F0;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_4B0E70(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_4B11B3:
	mov(&ts->ecx, 0x838590);
	game::sub_4AE930(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4B11F0;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_4964D0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4B11F0;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_496850(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4B11F0;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	game::sub_4967F0(ts, mv);

loc_4B11F0:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_4B1200(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x10);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->ecx);
	mov(mv, x86::mem(ts->ebp + 0x34, 4), ts->eax);
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->ebx, ts->ebx);
	xor_(&ts->eax, ts->eax);
	lea(mv, &ts->edi, x86::mem(ts->ebp + 0x4, 4));
	mov(&ts->ecx, 0xB);
	mov(mv, x86::mem(ts->ebp, 4), 0x790EFC);
	mov(mv, x86::mem(ts->ebp + 0x30, 4), ts->ebx);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x34, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ebp);
	if (ts->eflags.zero) {
        goto loc_4B1321;
    }
	movsx(mv, &ts->edi, x86::mem(ts->eax + 0x18, 2));
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	push(mv, &ts->esp, ts->esi);
	game::sub_4FFDC0(ts, mv);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x28, 1), ts->al);
	game::sub_5D3E40(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->esi, ts->eax);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	push(mv, &ts->esp, 0x30);
	if (!ts->eflags.zero) {
        goto loc_4B12A8;
    }
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebx);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4B1318;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x1C, 1), ts->bl);
	mov(&ts->ecx, ts->ebx);
	mov(&ts->edx, ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x18, 4), 0x44000000);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->edx);
	mov(mv, x86::mem(ts->ebp + 0x30, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->ebp + 0x1C, 4), ts->edi);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_4B12A8:
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4B1318;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x11C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x120, 4));
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x98, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x118, 4));
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->edx);
	mov(mv, &ts->dl, x86::mem(ts->esi + 0x124, 1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x18, 4));
	cmp(&ts->eflags, ts->dl, ts->bl);
	setnz(ts->eflags, &ts->dl);
	mov(mv, x86::mem(ts->eax + 0x1C, 1), ts->dl);
	movsx(mv, &ts->edx, x86::mem(ts->esp + 0x24, 1));
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->eax + 0x8, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->edx);
	mov(mv, x86::mem(ts->ebp + 0x30, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->ebp + 0x1C, 4), ts->edi);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_4B1318:
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ebp + 0x30, 4), ts->eax);
	mov(mv, x86::mem(ts->ebp + 0x1C, 4), ts->edi);
	pop(mv, &ts->esp, ts->esi);

loc_4B1321:
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);
}

void sub_4B1330(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4B1350(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4B1348;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4B1348:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4B1350(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x790F04);
	retn(mv, &ts->esp);
}

void sub_4B1360(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772E24);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x14);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, ts->ecx);
	movzx(mv, &ts->eax, x86::mem(ts->ebx + 0x224, 1));
	push(mv, &ts->esp, ts->esi);
	xor_(&ts->esi, ts->esi);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x85AD40);
	mov(mv, x86::mem(ts->ebp - 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->ebp - 0x10, 4), ts->esi);
	game::sub_500C00(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4B1506;
    }
	mov(mv, x86::mem(ts->ebp - 0x14, 4), ts->esi);
	game::sub_4FFD80(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4B1506;
    }
	push(mv, &ts->esp, ts->edi);
	goto loc_4B13B7;

loc_4B13B4:
	mov(mv, &ts->ebx, x86::mem(ts->ebp - 0x18, 4));

loc_4B13B7:
	push(mv, &ts->esp, ts->esi);
	game::sub_4FFD90(ts, mv);
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->al, x86::mem(ts->ebx + 0x224, 1));
	mov(mv, &ts->cl, x86::mem(ts->edi + 0x37, 1));
	movsx(&ts->edx, ts->cl);
	movzx(&ts->ebx, ts->al);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->edx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4B13E5;
    }
	cmp(&ts->eflags, ts->al, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4B14F4;
    }
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_4B14F4;
    }

loc_4B13E5:
	movsx(mv, &ts->ebx, x86::mem(ts->edi + 0x18, 2));
	push(mv, &ts->esp, ts->ebx);
	game::sub_5D3E40(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x1C, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B14F4;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0xDD60E402);
	if (ts->eflags.zero) {
        goto loc_4B14F4;
    }
	cmp(&ts->eflags, ts->eax, 0xDD60E403);
	if (ts->eflags.zero) {
        goto loc_4B14F4;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ebp - 0x10, 4), 0x46);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_4B1505;
    }
	push(mv, &ts->esp, 0x38);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->ebp - 0x20, 4), ts->eax);
	xor_(&ts->esi, ts->esi);
	cmp(&ts->eflags, ts->eax, ts->esi);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_4B1440;
    }
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->eax);
	game::sub_4B1200(ts, mv);
	mov(&ts->esi, ts->eax);

loc_4B1440:
	push(mv, &ts->esp, 0x10);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B1463;
    }
	mov(mv, x86::mem(ts->eax, 4), 0x790F04);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->esi);
	add(&ts->eax, 0x4);
	goto loc_4B1465;

loc_4B1463:
	xor_(&ts->eax, ts->eax);

loc_4B1465:
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->edx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->edx);
	movsx(mv, &ts->eax, x86::mem(ts->edi + 0xF, 1));
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->ebx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x85AD40);
	game::sub_500B80(ts, mv);
	movzx(&ts->ecx, ts->al);
	mov(mv, x86::mem(ts->esi + 0x20, 4), ts->ecx);
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0xF, 1), 0x5);
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x18, 4));
	if (!ts->eflags.zero) {
        goto loc_4B14B2;
    }
	game::sub_4FFDC0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, 0x844ADC);
	game::sub_502C50(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->eax);
	goto loc_4B14C6;

loc_4B14B2:
	game::sub_4FFDC0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, 0x844ADC);
	game::sub_502AA0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->eax);

loc_4B14C6:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x790F18);
	game::sub_50B990(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebp - 0x1C, 4));
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x98, 4));
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->eax);
	movsx(mv, &ts->ecx, x86::mem(ts->edi + 0x37, 1));
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->esp, 0x8);
	inc(&ts->eax);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->ecx);
	mov(mv, &ts->esi, x86::mem(ts->ebp - 0x14, 4));
	mov(mv, x86::mem(ts->ebp - 0x10, 4), ts->eax);

loc_4B14F4:
	inc(&ts->esi);
	mov(mv, x86::mem(ts->ebp - 0x14, 4), ts->esi);
	game::sub_4FFD80(ts, mv);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4B13B4;
    }

loc_4B1505:
	pop(mv, &ts->esp, ts->edi);

loc_4B1506:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_772E10:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x790F08);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4B1360:
	mov(&ts->eax, 0x7DF374);
	goto ___CxxFrameHandler;
}

void sub_4B1520(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x13C, 4));
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x13C, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B1582;
    }
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->esi, x86::mem(ts->edi + 0x138, 4));
	mov(&ts->ecx, ts->esi);
	game::sub_538740(ts, mv);

loc_4B1541:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x144, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4B1554;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->edx, 4));

loc_4B1554:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B1560;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_4B1562;

loc_4B1560:
	xor_(&ts->eax, ts->eax);

loc_4B1562:
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esi + 0xC, 4));
	mov(&ts->ecx, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4B1572;
    }
	push(mv, &ts->esp, 0x1);
	game::sub_5437C0(ts, mv);
	goto loc_4B1541;

loc_4B1572:
	game::sub_5385C0(ts, mv);
	mov(mv, x86::mem(ts->edi + 0x228, 4), 0x0);
	pop(mv, &ts->esp, ts->esi);

loc_4B1582:
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp);
}

void sub_4B1590(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x138, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_51F7E0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x228, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x19C, 4));
	game::sub_538080(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xA0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B15C5;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_4B15C7;

loc_4B15C5:
	xor_(&ts->eax, ts->eax);

loc_4B15C7:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xB0, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4B15DA;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA00(ts, mv);
	goto loc_4B15E3;

loc_4B15DA:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x54, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA50(ts, mv);

loc_4B15E3:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x9C, 4));
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B15F5;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_4B15F7;

loc_4B15F5:
	xor_(&ts->eax, ts->eax);

loc_4B15F7:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xB0, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4B160A;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x50, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	goto loc_4B1613;

loc_4B160A:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA50(ts, mv);

loc_4B1613:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x8, 4));
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B1622;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_4B1624;

loc_4B1622:
	xor_(&ts->eax, ts->eax);

loc_4B1624:
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->edi + 0xC, 4));
	if (!ts->eflags.zero) {
        goto loc_4B1634;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x58, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA00(ts, mv);
	goto loc_4B163D;

loc_4B1634:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);

loc_4B163D:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B164C;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_4B164E;

loc_4B164C:
	xor_(&ts->eax, ts->eax);

loc_4B164E:
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->edi + 0xC, 4));
	if (!ts->eflags.zero) {
        goto loc_4B1662;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x5C, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4B1662:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x5C, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4B1680(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772E38);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, 0x783FE5);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, 0x80);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x790F38);
	mov(mv, x86::mem(ts->esi + 0x90, 4), 0x1);
	game::sub_50C960(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x8C, 4), ts->eax);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	add(&ts->esp, 0x4);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 8));
	push(mv, &ts->esp, 0x78F744);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, 0x80);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi, 4), 0x790F38);
	mov(mv, x86::mem(ts->esi + 0x94, 4), ts->eax);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	add(&ts->esp, 0x14);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_772E30:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_4AEA30;

SEH_4B1680:
	mov(&ts->eax, 0x7DF398);
	goto ___CxxFrameHandler;
}

void sub_4B1710(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772E64);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x98);
	mov(&ts->esi, ts->ecx);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4B175B;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4B1680(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B175B;
    }
	add(&ts->eax, 0x4);
	goto loc_4B175D;

loc_4B175B:
	xor_(&ts->eax, ts->eax);

loc_4B175D:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x10, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_772E50:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x790F3C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4B1710:
	mov(&ts->eax, 0x7DF3BC);
	goto ___CxxFrameHandler;
}

void sub_4B1780(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x1C);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->ebx);
	add(&ts->eax, 0xC);
	push(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4B17A1;
    }
	lea(mv, &ts->edi, x86::mem(ts->eax - 0x4, 4));
	goto loc_4B17A3;

loc_4B17A1:
	xor_(&ts->edi, ts->edi);

loc_4B17A3:
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	lea(mv, &ts->ebx, x86::mem(ts->ecx + 0xC, 4));
	if (ts->eflags.zero) {
        goto loc_4B17B6;
    }
	add(&ts->eax, 0xFFFFFFFC);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	goto loc_4B17BE;

loc_4B17B6:
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);

loc_4B17BE:
	game::sub_51F1C0(ts, mv);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esp + 0x30, 1), 0x0);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_4B17D0:
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4B17D9;
    }
	lea(mv, &ts->eax, x86::mem(ts->ebx - 0x4, 4));
	goto loc_4B17DB;

loc_4B17D9:
	xor_(&ts->eax, ts->eax);

loc_4B17DB:
	cmp(&ts->eflags, ts->ebp, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B18E5;
    }
	mov(mv, &ts->ecx, x86::mem(0x836328, 4));
	mov(mv, &ts->al, x86::mem(ts->edi + 0x90, 1));
	imul(&ts->ecx, ts->ecx, 0x44);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0xC, 4));
	add(&ts->ecx, 0x836568);
	test(&ts->eflags, ts->al, 0x1);
	if (ts->eflags.zero) {
        goto loc_4B1854;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x94, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_4FF550(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x836328, 4));
	imul(&ts->ecx, ts->ecx, 0x44);
	push(mv, &ts->esp, 0x1);
	add(&ts->ecx, 0x836568);
	game::sub_512240(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x836328, 4));
	imul(&ts->ecx, ts->ecx, 0x44);
	add(&ts->ecx, 0x836568);
	game::sub_4FF530(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x94, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784258, 4));
	game::__ftol2(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x790F54);
	push(mv, &ts->esp, ts->esi);
	game::sub_537BE0(ts, mv);
	goto loc_4B1880;

loc_4B1854:
	push(mv, &ts->esp, 0x0);
	game::sub_512240(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x8C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B1871;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	goto loc_4B1883;

loc_4B1871:
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, ts->esi);
	game::sub_537BE0(ts, mv);

loc_4B1880:
	add(&ts->esp, 0xC);

loc_4B1883:
	test(mv, &ts->eflags, x86::mem(ts->edi + 0x90, 1), 0x2);
	if (ts->eflags.zero) {
        goto loc_4B1891;
    }
	mov(mv, x86::mem(ts->esp + 0x30, 1), 0x1);

loc_4B1891:
	mov(mv, &ts->edi, x86::mem(ts->edi + 0x4, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4B189D;
    }
	add(&ts->edi, 0xFFFFFFFC);
	goto loc_4B189F;

loc_4B189D:
	xor_(&ts->edi, ts->edi);

loc_4B189F:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B18AC;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_4B18AE;

loc_4B18AC:
	xor_(&ts->eax, ts->eax);

loc_4B18AE:
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4B18CF;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B18BE;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax - 0x4, 4));
	goto loc_4B18C0;

loc_4B18BE:
	xor_(&ts->ecx, ts->ecx);

loc_4B18C0:
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4B18C9;
    }
	lea(mv, &ts->eax, x86::mem(ts->ebx - 0x4, 4));
	goto loc_4B18CB;

loc_4B18C9:
	xor_(&ts->eax, ts->eax);

loc_4B18CB:
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4B18E5;
    }

loc_4B18CF:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B18DE;
    }
	lea(mv, &ts->ebp, x86::mem(ts->eax - 0x4, 4));
	goto loc_4B17D0;

loc_4B18DE:
	xor_(&ts->ebp, ts->ebp);
	goto loc_4B17D0;

loc_4B18E5:
	mov(mv, &ts->al, x86::mem(ts->esp + 0x30, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4B192E;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0xC, 4));
	push(mv, &ts->esp, 0xFFCAF48A);
	push(mv, &ts->esp, ts->eax);
	game::sub_51D7F0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x14, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4B1974;
    }
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edx);
	game::sub_50CCC0(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->ecx, ts->eax);
	game::sub_5054D0(ts, mv);
	and_(&ts->eax, 0xFFFFFF);
	or_(&ts->eax, 0xDC000000);
	goto loc_4B196A;

loc_4B192E:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51D7F0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->esi, x86::mem(ts->edx + 0x14, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4B1974;
    }
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CCC0(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->ecx, ts->eax);
	game::sub_5054D0(ts, mv);
	and_(&ts->eax, 0xFFFFFF);
	or_(&ts->eax, 0x7D000000);

loc_4B196A:
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_51D7F0(ts, mv);
	add(&ts->esp, 0x8);

loc_4B1974:
	mov(mv, &ts->eax, x86::mem(0x836328, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	inc(&ts->eax);
	pop(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(0x836328, 4), ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x1C);
	retn(mv, &ts->esp, 0x4);
}

void sub_4B1990(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ebx, x86::mem(ts->ecx + 0x8, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4B1A4A;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x10, 4));
	push(mv, &ts->esp, ts->ebp);
	lea(mv, &ts->ebp, x86::mem(ts->ecx + 0x10, 4));
	cmp(&ts->eflags, ts->eax, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4B1A48;
    }
	xor_(&ts->esi, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x28, 4));
	mov(mv, x86::mem(0x836328, 4), ts->esi);
	mov(mv, &ts->eax, x86::mem(ts->ebx, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4B19C4;
    }
	lea(mv, &ts->esi, x86::mem(ts->eax - 0x4, 4));

loc_4B19C4:
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4B19CD;
    }
	lea(mv, &ts->eax, x86::mem(ts->ebx - 0x4, 4));
	goto loc_4B19CF;

loc_4B19CD:
	xor_(&ts->eax, ts->eax);

loc_4B19CF:
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B1A0F;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_51F1C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B19EE;
    }
	lea(mv, &ts->edi, x86::mem(ts->eax - 0x4, 4));
	goto loc_4B19F0;

loc_4B19EE:
	xor_(&ts->edi, ts->edi);

loc_4B19F0:
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_4B19F9;
    }
	lea(mv, &ts->eax, x86::mem(ts->ebp - 0x4, 4));
	goto loc_4B19FB;

loc_4B19F9:
	xor_(&ts->eax, ts->eax);

loc_4B19FB:
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B1A0F;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4B1A0B;
    }
	add(&ts->esi, 0xFFFFFFFC);
	goto loc_4B19C4;

loc_4B1A0B:
	xor_(&ts->esi, ts->esi);
	goto loc_4B19C4;

loc_4B1A0F:
	test(&ts->eflags, ts->ebx, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4B1A19;
    }
	lea(mv, &ts->eax, x86::mem(ts->ebx - 0x4, 4));
	goto loc_4B1A1B;

loc_4B1A19:
	xor_(&ts->eax, ts->eax);

loc_4B1A1B:
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B1A48;
    }

loc_4B1A1F:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4B1A2B;
    }
	add(&ts->esi, 0xFFFFFFFC);
	goto loc_4B1A30;

loc_4B1A2B:
	xor_(&ts->esi, ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_4B1A30:
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4B1A39;
    }
	lea(mv, &ts->eax, x86::mem(ts->ebx - 0x4, 4));
	goto loc_4B1A3B;

loc_4B1A39:
	xor_(&ts->eax, ts->eax);

loc_4B1A3B:
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B1A48;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_51F220(ts, mv);
	goto loc_4B1A1F;

loc_4B1A48:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);

loc_4B1A4A:
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_4B1A50(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(ts->esp + 0x4, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4B1A91;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x68, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x64, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xF8, 4));
	sub(&ts->eax, ts->edx);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B1AD4;
    }
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->edi);
	game::sub_5430C0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xF8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x7);
	inc(&ts->edx);
	push(mv, &ts->esp, 0x7);
	mov(mv, x86::mem(ts->esi + 0xF8, 4), ts->edx);
	push(mv, &ts->esp, ts->ecx);
	goto loc_4B1ABC;

loc_4B1A91:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xF8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B1AD4;
    }
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	mov(&ts->ecx, ts->edi);
	game::sub_5430C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xF8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x7);
	dec(&ts->ecx);
	push(mv, &ts->esp, 0x6);
	mov(mv, x86::mem(ts->esi + 0xF8, 4), ts->ecx);
	push(mv, &ts->esp, ts->edx);

loc_4B1ABC:
	game::sub_50D150(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->edi);
	game::sub_538500(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_496F50(ts, mv);

loc_4B1AD4:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4B1AE0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0xC8);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xD8, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4B1B1A;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xD4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x790F5C);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, 0xC8);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	add(&ts->esp, 0x18);
	goto loc_4B1B3A;

loc_4B1B1A:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xD4, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, 0xC8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C960(ts, mv);
	add(&ts->esp, 0x10);

loc_4B1B3A:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xDC, 4));
	game::sub_4AEA60(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0xC8);
	retn(mv, &ts->esp, 0xC);
}

void sub_4B1B60(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0x911C0A4B);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 1), 0x1);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4B1BA8;
    }
	if (ts->eflags.zero) {
        goto loc_4B1B89;
    }
	cmp(&ts->eflags, ts->eax, 0x406415E3);
	if (ts->eflags.zero) {
        goto loc_4B1BEC;
    }
	cmp(&ts->eflags, ts->eax, 0x72619778);
	if (!ts->eflags.zero) {
        goto loc_4B1BEC;
    }
	mov(mv, x86::mem(ts->esp + 0x4, 1), 0x0);

loc_4B1B89:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(0x8651AC, 4));
	if (ts->eflags.zero) {
        goto loc_4B1BEC;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_4B1A50(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x10);

loc_4B1BA8:
	cmp(&ts->eflags, ts->eax, 0x9803F6E2);
	if (!ts->eflags.zero) {
        goto loc_4B1BEC;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x104, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_52D100(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4B1BD0;
    }
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_4B1A50(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x10);

loc_4B1BD0:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x100, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_52D100(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4B1BEC;
    }
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_4B1A50(ts, mv);

loc_4B1BEC:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x10);
}

void sub_4B1C00(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776418);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x10, 4), ts->esi);
	game::sub_551DE0(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi, 4), 0x78F760);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(0x83A9D8, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), ts->eax);
	game::sub_50D2D0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537950(ts, mv);
	add(&ts->esp, 0xC);
	mov(&ts->ecx, ts->esi);
	game::sub_497040(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_776410:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

SEH_4E3300:
	mov(&ts->eax, 0x7DEE70);
	goto ___CxxFrameHandler;
}

void sub_4B1C70(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::std__strstreambuf___strstreambuf_void_(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4B1C88;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4B1C88:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4B1C90(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772E84);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x50);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4B1CDB;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4B1C00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4B1CDB:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_772E70:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x790F64);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4B1C90:
	mov(&ts->eax, 0x7DF3E0);
	goto ___CxxFrameHandler;
}

void sub_4B1CF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776418);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x10, 4), ts->esi);
	game::sub_551DE0(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->esi, 4), 0x790F78);
	mov(mv, &ts->ecx, x86::mem(0x83A9D8, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), 0x0);
	game::sub_50D2D0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537950(ts, mv);
	add(&ts->esp, 0xC);
	mov(&ts->ecx, ts->esi);
	game::sub_497330(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_776410:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

SEH_4E3300:
	mov(&ts->eax, 0x7DEE70);
	goto ___CxxFrameHandler;
}

void sub_4B1D60(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4B1D80(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4B1D78;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4B1D78:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4B1D80(x86::thread_state* ts, x86::memory_view* mv) {
	goto sub_510D40;
}

void sub_4B1D90(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772EA4);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x4C);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4B1DDB;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4B1CF0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4B1DDB:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_772E90:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x790F88);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4B1D90:
	mov(&ts->eax, 0x7DF404);
	goto ___CxxFrameHandler;
}

void sub_4B1DF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x60, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B1DFF;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_4B1E01;

loc_4B1DFF:
	xor_(&ts->eax, ts->eax);

loc_4B1E01:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x70, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4B1E14;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	goto loc_4B1E20;

loc_4B1E14:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA50(ts, mv);

loc_4B1E20:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x5C, 4));
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B1E2F;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_4B1E31;

loc_4B1E2F:
	xor_(&ts->eax, ts->eax);

loc_4B1E31:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x70, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4B1E47;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xF8, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4B1E47:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xF8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4B1E60(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(ts->esp + 0x4, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4C, 4));
	if (ts->eflags.zero) {
        goto loc_4B1EBB;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B1E7B;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_4B1E7D;

loc_4B1E7B:
	xor_(&ts->eax, ts->eax);

loc_4B1E7D:
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0x24, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B1F17;
    }
	mov(&ts->ecx, ts->edi);
	game::sub_54EB40(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x7);
	push(mv, &ts->esp, 0x5);
	push(mv, &ts->esp, ts->eax);
	game::sub_50D150(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x104, 1));
	inc(&ts->al);
	mov(mv, x86::mem(ts->esi + 0x104, 1), ts->al);
	movzx(&ts->eax, ts->al);
	mov(mv, &ts->ecx, x86::mem(0x7F4428, 4));
	mov(mv, &ts->edx, x86::mem(0x7F4424, 4));
	goto loc_4B1F02;

loc_4B1EBB:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x10, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B1EC7;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_4B1EC9;

loc_4B1EC7:
	xor_(&ts->eax, ts->eax);

loc_4B1EC9:
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0x24, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B1F17;
    }
	mov(&ts->ecx, ts->edi);
	game::sub_54EB60(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x7);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_50D150(ts, mv);
	mov(mv, &ts->dl, x86::mem(ts->esi + 0x104, 1));
	dec(&ts->dl);
	movzx(&ts->eax, ts->dl);
	shl(&ts->eax, 0x2);
	mov(mv, x86::mem(ts->esi + 0x104, 1), ts->dl);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x7F4428, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x7F442C, 4));

loc_4B1F02:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0x18);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->edi);
	game::sub_538500(ts, mv);

loc_4B1F17:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4B1F20(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0x9120409E);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(&ts->ecx, 0x8);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4B1FA0;
    }
	if (ts->eflags.zero) {
        goto loc_4B200A;
    }
	cmp(&ts->eflags, ts->eax, 0x406415E3);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4B1F62;
    }
	if (ts->eflags.zero) {
        goto loc_4B1F72;
    }
	cmp(&ts->eflags, ts->eax, 0xC407210);
	if (ts->eflags.zero) {
        goto loc_4B1F72;
    }
	cmp(&ts->eflags, ts->eax, 0x35F8620B);
	if (!ts->eflags.zero) {
        goto loc_4B2033;
    }
	push(mv, &ts->esp, 0xF);
	game::sub_50D180(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4B1F62:
	cmp(&ts->eflags, ts->eax, 0x911AB364);
	if (!ts->eflags.zero) {
        goto loc_4B2033;
    }
	mov(&ts->ecx, 0xA);

loc_4B1F72:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x100, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(0x8651AC, 4));
	if (ts->eflags.zero) {
        goto loc_4B2033;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_50D150(ts, mv);
	add(&ts->esp, 0xC);
	mov(mv, x86::mem(0x837AA4, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4B1FA0:
	cmp(&ts->eflags, ts->eax, 0x9803F6E2);
	if (ts->eflags.zero) {
        goto loc_4B1FF7;
    }
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	if (ts->eflags.zero) {
        goto loc_4B202A;
    }
	cmp(&ts->eflags, ts->eax, 0xC98356BA);
	if (!ts->eflags.zero) {
        goto loc_4B2033;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	game::sub_538500(ts, mv);
	mov(mv, &ts->al, x86::mem(0x837AA4, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4B1FEC;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(0x837AA4, 1), 0x0);
	game::sub_5379A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, 0x1);
	game::sub_5F4240(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4B1FEC:
	mov(&ts->ecx, ts->esi);
	game::sub_4B1DF0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4B1FF7:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xF8, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_52D100(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4B2017;
    }

loc_4B200A:
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_4B1E60(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4B2017:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_52D100(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4B2033;
    }

loc_4B202A:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_4B1E60(ts, mv);

loc_4B2033:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);
}

void sub_4B2040(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x14);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebx, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x64, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ebx + 0x78, 4));
	if (ts->eflags.zero) {
        goto loc_4B2058;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_4B205A;

loc_4B2058:
	xor_(&ts->eax, ts->eax);

loc_4B205A:
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B206A;
    }
	add(&ts->eax, 0xFFFFFFFC);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	goto loc_4B2072;

loc_4B206A:
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);

loc_4B2072:
	xor_(&ts->eax, ts->eax);

loc_4B2074:
	mov(mv, &ts->esi, x86::mem(ts->ebx + 0x4, 4));
	lea(mv, &ts->ebp, x86::mem(ts->eax + 0x1, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x790F98);
	game::sub_50B990(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_5379C0(ts, mv);
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(&ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B20F2;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x10, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_4B20F2;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x18, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	movsx(mv, &ts->eax, x86::mem(ts->edx + 0x5, 1));
	push(mv, &ts->esp, ts->eax);
	game::sub_4974A0(ts, mv);
	push(mv, &ts->esp, ts->esi);
	game::sub_50CA50(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	game::sub_51D860(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x18, 4));
	mov(mv, &ts->al, x86::mem(ts->edx + 0x4, 1));
	add(&ts->esp, 0x14);
	cmp(&ts->eflags, ts->al, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4B20D4;
    }
	push(mv, &ts->esp, 0xEE28AC57);
	goto loc_4B20D9;

loc_4B20D4:
	push(mv, &ts->esp, 0x4B9B8F5A);

loc_4B20D9:
	push(mv, &ts->esp, ts->esi);
	game::sub_50C990(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->edi + 0x4, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4B20EE;
    }
	add(&ts->edi, 0xFFFFFFFC);
	goto loc_4B20FB;

loc_4B20EE:
	xor_(&ts->edi, ts->edi);
	goto loc_4B20FB;

loc_4B20F2:
	push(mv, &ts->esp, ts->esi);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);

loc_4B20FB:
	mov(&ts->eax, ts->ebp);
	cmp(&ts->eflags, ts->eax, 0xA);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4B2074;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x14);
	retn(mv, &ts->esp);
}

void sub_4B2110(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4B2155;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x10C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	lea(mv, &ts->esi, x86::mem(ts->edi + 0xFC, 4));
	if (ts->eflags.zero) {
        goto loc_4B2132;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_4B2134;

loc_4B2132:
	xor_(&ts->eax, ts->eax);

loc_4B2134:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x24, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B218B;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x6);
	push(mv, &ts->esp, ts->eax);
	game::sub_50D150(ts, mv);
	add(&ts->esp, 0xC);
	mov(&ts->ecx, ts->esi);
	game::sub_54EB60(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4B2155:
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4B218B;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x110, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0xFC, 4));
	if (ts->eflags.zero) {
        goto loc_4B216F;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_4B2171;

loc_4B216F:
	xor_(&ts->eax, ts->eax);

loc_4B2171:
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x24, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B218B;
    }
	game::sub_54EB40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x6);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50D150(ts, mv);
	add(&ts->esp, 0xC);

loc_4B218B:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4B2190(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x6C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4B21B7;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1B0, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1B4, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4B21B7:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x60, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B21C3;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_4B21C5;

loc_4B21C3:
	xor_(&ts->eax, ts->eax);

loc_4B21C5:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x74, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4B21E7;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1B0, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1B4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4B21E7:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x64, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B21F3;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_4B21F5;

loc_4B21F3:
	xor_(&ts->eax, ts->eax);

loc_4B21F5:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x74, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4B2217;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1B0, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1B4, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4B2217:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1B0, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1B4, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4B2240(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772EC4);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x104);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4B228E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_497850(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4B228E:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_772EB0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x790FB0);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4B2240:
	mov(&ts->eax, 0x7DF428);
	goto ___CxxFrameHandler;
}

void sub_4B22A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_497A80(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4B22B8;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4B22B8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4B22C0(x86::thread_state* ts, x86::memory_view* mv) {
	game::sub_50E2C0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, 0x0);
	if (ts->eflags.zero) {
        goto loc_4B22EA;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x42);
	push(mv, &ts->esp, 0x78F530);
	push(mv, &ts->esp, ts->eax);
	game::sub_4A3100(ts, mv);
	add(&ts->esp, 0x1C);
	goto sub_50E2D0;

loc_4B22EA:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, 0x78F530);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);
	goto sub_50E2D0;
}

void sub_4B2310(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xA936C3A2);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x89782734);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	add(&ts->esp, 0x18);
	cmp(&ts->eflags, ts->eax, 0x20);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_4B24D4;
    }
	if (ts->eflags.zero) {
        goto loc_4B23F7;
    }
	sub(&ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_4B23A6;
    }
	sub(&ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_4B2378;
    }
	sub(&ts->eax, 0x4);
	if (!ts->eflags.zero) {
        goto loc_4B2542;
    }
	push(mv, &ts->esp, 0x87FEA07);
	goto loc_4B2528;

loc_4B2378:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xF221D7ED);
	push(mv, &ts->esp, 0x42ADB44C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0xAA3CD907);
	push(mv, &ts->esp, 0xA936C3A2);
	goto loc_4B252D;

loc_4B23A6:
	mov(mv, &ts->eax, x86::mem(0x7F444C, 4));
	cmp(&ts->eflags, ts->eax, 0x4);
	if (ts->eflags.zero) {
        goto loc_4B23B5;
    }
	cmp(&ts->eflags, ts->eax, 0x8);
	if (!ts->eflags.zero) {
        goto loc_4B23ED;
    }

loc_4B23B5:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xA936C3A2);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x89782734);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	add(&ts->esp, 0x18);
	and_(&ts->eax, 0xFFFFEFFF);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);

loc_4B23ED:
	push(mv, &ts->esp, 0x5AC1FB59);
	goto loc_4B2528;

loc_4B23F7:
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	and_(&ts->edi, 0xFFFFEFFF);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x920, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x83AD90);
	game::sub_5163A0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	mov(&ts->ecx, 0x83AD90);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4B247E;
    }
	game::sub_516340(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	if (!ts->eflags.zero) {
        goto loc_4B245D;
    }
	push(mv, &ts->esp, 0xEFDDC126);
	push(mv, &ts->esp, 0xA936C3A2);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	add(&ts->esp, 0x8);
	or_(&ts->eax, 0x40000);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	goto loc_4B2523;

loc_4B245D:
	push(mv, &ts->esp, 0x5DA6131B);
	push(mv, &ts->esp, 0xA936C3A2);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	goto loc_4B2523;

loc_4B247E:
	game::sub_516360(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4B2523;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xC8054CE0);
	push(mv, &ts->esp, 0xA936C3A2);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x89782734);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xA936C3A2);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x20);
	goto loc_4B2523;

loc_4B24D4:
	cmp(&ts->eflags, ts->eax, 0x100);
	if (ts->eflags.zero) {
        goto loc_4B24E9;
    }
	cmp(&ts->eflags, ts->eax, 0x200);
	if (!ts->eflags.zero) {
        goto loc_4B2542;
    }
	push(mv, &ts->esp, 0xD5F627);
	goto loc_4B2528;

loc_4B24E9:
	mov(mv, &ts->eax, x86::mem(0x7F444C, 4));
	cmp(&ts->eflags, ts->eax, 0x4);
	if (ts->eflags.zero) {
        goto loc_4B24F8;
    }
	cmp(&ts->eflags, ts->eax, 0x8);
	if (!ts->eflags.zero) {
        goto loc_4B2523;
    }

loc_4B24F8:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xA936C3A2);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x89782734);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x18);

loc_4B2523:
	push(mv, &ts->esp, 0x61032CE5);

loc_4B2528:
	push(mv, &ts->esp, 0x42ADB44C);

loc_4B252D:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);

loc_4B2542:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x918, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x840, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	game::sub_511E60(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(&ts->edi, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	game::sub_4901D0(ts, mv);
	add(&ts->esp, 0x14);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B257E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C990(ts, mv);
	add(&ts->esp, 0x8);
	goto loc_4B2598;

loc_4B257E:
	push(mv, &ts->esp, 0x790324);
	game::sub_505450(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xC8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C990(ts, mv);
	add(&ts->esp, 0xC);

loc_4B2598:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x918, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x840, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_511E60(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(&ts->edi, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	game::sub_4901D0(ts, mv);
	add(&ts->esp, 0x14);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B25D4;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xCC, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C990(ts, mv);
	add(&ts->esp, 0x8);
	goto loc_4B25EE;

loc_4B25D4:
	push(mv, &ts->esp, 0x790324);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xCC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50C990(ts, mv);
	add(&ts->esp, 0xC);

loc_4B25EE:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x64, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x60, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x6C, 4));
	game::sub_538080(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x790E98);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x790E84);
	mov(&ts->ebp, ts->eax);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x50, 4));
	add(&ts->esp, 0x18);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B263C;
    }
	add(&ts->eax, 0xFFFFFFF0);
	goto loc_4B263E;

loc_4B263C:
	xor_(&ts->eax, ts->eax);

loc_4B263E:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4B2673;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1A5, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4B2746;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x444969FD);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x1A5, 1), 0x0);
	goto loc_4B2743;

loc_4B2673:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B267F;
    }
	add(&ts->eax, 0xFFFFFFF0);
	goto loc_4B2681;

loc_4B267F:
	xor_(&ts->eax, ts->eax);

loc_4B2681:
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4B26B3;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1A6, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4B2746;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x444969FE);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x1A6, 1), 0x0);
	goto loc_4B2743;

loc_4B26B3:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1A5, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4B26DA;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x444969FD);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x1A5, 1), 0x1);
	goto loc_4B26FF;

loc_4B26DA:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1A6, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4B2702;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x444969FE);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x1A6, 1), 0x1);

loc_4B26FF:
	add(&ts->esp, 0xC);

loc_4B2702:
	push(mv, &ts->esp, 0x78F568);
	push(mv, &ts->esp, ts->ebp);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4B2724;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F758);
	push(mv, &ts->esp, ts->ebp);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);

loc_4B2724:
	push(mv, &ts->esp, 0x78F568);
	push(mv, &ts->esp, ts->edi);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4B2746;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F758);
	push(mv, &ts->esp, ts->edi);
	game::sub_51CF70(ts, mv);

loc_4B2743:
	add(&ts->esp, 0xC);

loc_4B2746:
	mov(mv, &ts->eax, x86::mem(0x7F444C, 4));
	cmp(&ts->eflags, ts->eax, 0x3);
	mov(&ts->edi, 0xE798A2F7);
	pop(mv, &ts->esp, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_4B275D;
    }
	mov(&ts->edi, 0x6B68362C);
	goto loc_4B278A;

loc_4B275D:
	test(&ts->eflags, ts->al, 0x1);
	if (ts->eflags.zero) {
        goto loc_4B2766;
    }
	mov(&ts->edi, 0xE798A2F7);

loc_4B2766:
	test(&ts->eflags, ts->al, 0x2);
	if (ts->eflags.zero) {
        goto loc_4B276F;
    }
	mov(&ts->edi, 0xE7AB43D3);

loc_4B276F:
	test(&ts->eflags, ts->al, 0x4);
	if (ts->eflags.zero) {
        goto loc_4B2778;
    }
	mov(&ts->edi, 0xB4045365);

loc_4B2778:
	test(&ts->eflags, ts->al, 0x8);
	if (ts->eflags.zero) {
        goto loc_4B2781;
    }
	mov(&ts->edi, 0x26FECEE7);

loc_4B2781:
	test(&ts->eflags, ts->al, 0x10);
	if (ts->eflags.zero) {
        goto loc_4B278A;
    }
	mov(&ts->edi, 0x1A23D5E6);

loc_4B278A:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x920, 4));
	mov(mv, &ts->ecx, x86::mem(0x850078, 4));
	cmp(&ts->eflags, ts->ecx, 0x8);
	if (ts->eflags.zero) {
        goto loc_4B27A6;
    }
	cmp(&ts->eflags, ts->ecx, 0x200);
	if (!ts->eflags.zero) {
        goto loc_4B27AB;
    }

loc_4B27A6:
	cmp(&ts->eflags, ts->eax, 0x4);
	if (ts->eflags.zero) {
        goto loc_4B27E7;
    }

loc_4B27AB:
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x83AD90);
	game::sub_516340(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4B27E7;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x39B2B1C6);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xE8CA2E25);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0x18);
	goto loc_4B281F;

loc_4B27E7:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x39B2B1C6);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xE8CA2E25);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	add(&ts->esp, 0x18);
	and_(&ts->eax, 0xFFFFEFFF);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);

loc_4B281F:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x3E81DE59);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_54E6E0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x4);
	goto loc_497CD0;

loc_497CD0:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	push(mv, &ts->esp, ts->edi);
	game::sub_511E00(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	lea(mv, &ts->edi, x86::mem(ts->esi + 0xD8, 4));
	game::sub_5B53A0(ts, mv);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_4FF550(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	game::sub_511E00(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x11C, 4));
	game::sub_5B6A20(ts, mv);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_4FF550(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	game::sub_511E00(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	add(&ts->esi, 0x160);
	game::sub_5B5490(ts, mv);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_4FF550(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	jmp(x86::mem(ts->eax + 0x18, 4));
}

void sub_4B2860(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x50, 4));
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->esi, x86::mem(ts->ecx + 0x50, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4B288D;
    }
	goto loc_4B2870;

loc_4B2870:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->eax - 0x10, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4B2889;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax, 4));

loc_4B2889:
	cmp(mv, &ts->eflags, x86::mem(ts->esi, 4), ts->esi);
	if (!ts->eflags.zero) {
        goto loc_4B2870;
    }

loc_4B288D:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4B2890(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776418);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	game::sub_551DE0(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi, 4), 0x790FC4);
	mov(mv, x86::mem(ts->esi + 0x4C, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0x4D, 1), ts->al);
	cmp(mv, &ts->eflags, x86::mem(0x85AD28, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4B28DC;
    }
	push(mv, &ts->esp, 0xFC6731A6);
	goto loc_4B28E1;

loc_4B28DC:
	push(mv, &ts->esp, 0x5BC4BC1E);

loc_4B28E1:
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F850);
	push(mv, &ts->esp, ts->edi);
	game::sub_542600(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_776410:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

SEH_4E3300:
	mov(&ts->eax, 0x7DEE70);
	goto ___CxxFrameHandler;
}

void sub_4B2910(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4B2930(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4B2928;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4B2928:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4B2930(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x790FC4);
	goto sub_510D40;
}

void sub_4B2940(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(0x836340, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto locret_4B295A;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax, 4));
	mov(mv, x86::mem(0x836340, 4), 0x0);

locret_4B295A:
	retn(mv, &ts->esp);
}

void sub_4B2960(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->ecx + 0x4, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4B2988;
    }
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x10, 4));

loc_4B2971:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DCC0(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B2990;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_4B2971;
    }

loc_4B2988:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

loc_4B2990:
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_4B29A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	mov(mv, &ts->ebx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	mov(&ts->edi, ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_4B2960(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->eax);
	game::sub_537980(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_43DCC0(ts, mv);
	add(&ts->esp, 0x14);
	test(&ts->eflags, ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	if (!ts->eflags.zero) {
        goto locret_4B29F2;
    }
	mov(mv, &ts->ecx, x86::mem(0x836340, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4B29E8;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->edx, 4));

loc_4B29E8:
	mov(mv, x86::mem(0x836340, 4), 0x0);

locret_4B29F2:
	retn(mv, &ts->esp);
}

void sub_4B2A00(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	mov(mv, &ts->ebx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x10, 4));
	mov(&ts->edi, ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_4B2960(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->eax);
	game::sub_537980(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_43DCC0(ts, mv);
	add(&ts->esp, 0x14);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4B2A76;
    }
	mov(mv, &ts->ecx, x86::mem(0x7F4468, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4B2A5C;
    }
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x4);
	if (!ts->eflags.zero) {
        goto loc_4B2A5C;
    }
	mov(&ts->ecx, 0x83A9D0);
	game::sub_515D70(ts, mv);

loc_4B2A5C:
	mov(mv, &ts->ecx, x86::mem(0x836340, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4B2A6C;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->edx, 4));

loc_4B2A6C:
	mov(mv, x86::mem(0x836340, 4), 0x0);

loc_4B2A76:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_4B2A80(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	cmp(&ts->eflags, ts->eax, 0x4);
	mov(mv, &ts->ecx, x86::mem(0x83AAB4, 4));
	if (!ts->eflags.zero) {
        goto loc_4B2A9B;
    }
	cmp(&ts->eflags, ts->ecx, 0x8);
	if (!ts->eflags.zero) {
        goto loc_4B2ADB;
    }
	mov(mv, &ts->eax, x86::mem(0x7F4460, 4));
	retn(mv, &ts->esp);

loc_4B2A9B:
	cmp(&ts->eflags, ts->eax, 0x200);
	if (ts->eflags.zero) {
        goto loc_4B2AA7;
    }
	cmp(&ts->eflags, ts->eax, 0x8);
	if (!ts->eflags.zero) {
        goto loc_4B2AD4;
    }

loc_4B2AA7:
	cmp(mv, &ts->eflags, x86::mem(0x850088, 4), 0x8);
	if (!ts->eflags.zero) {
        goto loc_4B2ACF;
    }
	push(mv, &ts->esp, 0x7FFFFFFF);
	game::sub_43C1C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_4FEF50(ts, mv);
	mov(mv, x86::mem(0x8500B8, 2), ts->ax);
	mov(mv, &ts->eax, x86::mem(0x7F4460, 4));
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);

loc_4B2ACF:
	cmp(&ts->eflags, ts->eax, 0x8);
	if (ts->eflags.zero) {
        goto loc_4B2AE5;
    }

loc_4B2AD4:
	cmp(&ts->eflags, ts->eax, 0x200);
	if (ts->eflags.zero) {
        goto loc_4B2AE5;
    }

loc_4B2ADB:
	cmp(&ts->eflags, ts->ecx, 0x9);
	mov(mv, &ts->eax, x86::mem(0x7F446C, 4));
	if (ts->eflags.zero) {
        goto locret_4B2AEA;
    }

loc_4B2AE5:
	mov(mv, &ts->eax, x86::mem(0x7F4464, 4));

locret_4B2AEA:
	retn(mv, &ts->esp);
}

void sub_4B2AF0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	cmp(&ts->eflags, ts->eax, 0x4);
	if (!ts->eflags.zero) {
        goto loc_4B2B09;
    }
	cmp(mv, &ts->eflags, x86::mem(0x83AAB4, 4), 0x8);
	if (!ts->eflags.zero) {
        goto loc_4B2B1E;
    }

loc_4B2B03:
	mov(mv, &ts->eax, x86::mem(0x7F445C, 4));
	retn(mv, &ts->esp);

loc_4B2B09:
	cmp(&ts->eflags, ts->eax, 0x200);
	if (ts->eflags.zero) {
        goto loc_4B2B15;
    }
	cmp(&ts->eflags, ts->eax, 0x8);
	if (!ts->eflags.zero) {
        goto loc_4B2B1E;
    }

loc_4B2B15:
	cmp(mv, &ts->eflags, x86::mem(0x850088, 4), 0x8);
	if (ts->eflags.zero) {
        goto loc_4B2B03;
    }

loc_4B2B1E:
	mov(mv, &ts->eax, x86::mem(0x7F4464, 4));
	retn(mv, &ts->esp);
}

void sub_4B2B30(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_543D40(ts, mv);
	cmp(&ts->eflags, ts->edi, 0xC407210);
	if (ts->eflags.zero) {
        goto loc_4B2B9D;
    }
	cmp(&ts->eflags, ts->edi, 0x911AB364);
	if (ts->eflags.zero) {
        goto loc_4B2B9D;
    }
	cmp(&ts->eflags, ts->edi, 0xE1FDE1D1);
	if (!ts->eflags.zero) {
        goto loc_4B2BCF;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x13C, 4));
	cmp(&ts->eflags, ts->esi, 0xC407210);
	if (ts->eflags.zero) {
        goto loc_4B2B8D;
    }
	cmp(&ts->eflags, ts->esi, 0x911AB364);
	if (!ts->eflags.zero) {
        goto loc_4B2BCF;
    }
	mov(mv, &ts->ecx, x86::mem(0x836340, 4));
	game::sub_4B2A00(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4B2B8D:
	mov(mv, &ts->ecx, x86::mem(0x836340, 4));
	game::sub_4B29A0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4B2B9D:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537D40(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4B2BCF;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C60(ts, mv);
	add(&ts->esp, 0x10);

loc_4B2BCF:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);
}

void sub_4B2BE0(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_4B2BF2;
    }
	push(mv, &ts->esp, 0x0);
	game::sub_4B2C00(ts, mv);
	pop(mv, &ts->esp, ts->ecx);

locret_4B2BF2:
	retn(mv, &ts->esp, 0x14);
}

void sub_4B2C00(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	cmp(&ts->eflags, ts->eax, 0x8);
	if (ts->eflags.zero) {
        goto loc_4B2C1D;
    }
	cmp(&ts->eflags, ts->eax, 0x200);
	if (ts->eflags.zero) {
        goto loc_4B2C1D;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x83AAB4, 4), ts->ecx);
	goto loc_4B2C27;

loc_4B2C1D:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x850088, 4), ts->edx);

loc_4B2C27:
	cmp(&ts->eflags, ts->eax, 0x4);
	mov(&ts->ecx, 0x83AAB4);
	if (!ts->eflags.zero) {
        goto loc_4B2C45;
    }
	push(mv, &ts->esp, 0x2);
	game::sub_502930(ts, mv);
	push(mv, &ts->esp, 0x2);
	mov(&ts->ecx, 0x83AAB4);
	game::sub_502960(ts, mv);
	retn(mv, &ts->esp);

loc_4B2C45:
	push(mv, &ts->esp, 0x1);
	game::sub_502930(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(0x83AAB4, 4), 0x4);
	if (!ts->eflags.zero) {
        goto loc_4B2C62;
    }
	push(mv, &ts->esp, 0x5);
	mov(&ts->ecx, 0x83AAB4);
	game::sub_502960(ts, mv);
	retn(mv, &ts->esp);

loc_4B2C62:
	push(mv, &ts->esp, 0x3);
	mov(&ts->ecx, 0x83AAB4);
	game::sub_502960(ts, mv);
	retn(mv, &ts->esp);
}

void sub_4B2C70(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_4B2C82;
    }
	push(mv, &ts->esp, 0x1);
	game::sub_4B2C00(ts, mv);
	pop(mv, &ts->esp, ts->ecx);

locret_4B2C82:
	retn(mv, &ts->esp, 0x14);
}

void sub_4B2C90(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_4B2CA2;
    }
	push(mv, &ts->esp, 0x2);
	game::sub_4B2C00(ts, mv);
	pop(mv, &ts->esp, ts->ecx);

locret_4B2CA2:
	retn(mv, &ts->esp, 0x14);
}

void sub_4B2CB0(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_4B2CC2;
    }
	push(mv, &ts->esp, 0x3);
	game::sub_4B2C00(ts, mv);
	pop(mv, &ts->esp, ts->ecx);

locret_4B2CC2:
	retn(mv, &ts->esp, 0x14);
}

void sub_4B2CD0(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_4B2CEC;
    }
	mov(&ts->ecx, 0x83AAB4);
	game::sub_5028D0(ts, mv);
	push(mv, &ts->esp, 0x8);
	game::sub_4B2C00(ts, mv);
	pop(mv, &ts->esp, ts->ecx);

locret_4B2CEC:
	retn(mv, &ts->esp, 0x14);
}

void sub_4B2CF0(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_4B2D1A;
    }
	push(mv, &ts->esp, 0x9);
	game::sub_4B2C00(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->ecx, 0x83AAB4);
	game::sub_502910(ts, mv);
	mov(mv, x86::mem(ts->eax, 2), 0xFA0);
	mov(mv, x86::mem(ts->eax + 0x4, 4), 0x0);

locret_4B2D1A:
	retn(mv, &ts->esp, 0x14);
}

void sub_4B2D20(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_4B2D32;
    }
	push(mv, &ts->esp, 0xA);
	game::sub_4B2C00(ts, mv);
	pop(mv, &ts->esp, ts->ecx);

locret_4B2D32:
	retn(mv, &ts->esp, 0x14);
}

void sub_4B2D40(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_4B2D52;
    }
	push(mv, &ts->esp, 0x4);
	game::sub_4B2C00(ts, mv);
	pop(mv, &ts->esp, ts->ecx);

locret_4B2D52:
	retn(mv, &ts->esp, 0x14);
}

void sub_4B2D60(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772F70);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x83AAB4);
	game::sub_502910(ts, mv);
	push(mv, &ts->esp, 0x48);
	mov(mv, x86::mem(ts->eax + 0x8, 1), 0x0);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4B2DC0;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x93FDEE74);
	push(mv, &ts->esp, 0xE9638D3E);
	mov(&ts->ecx, ts->edi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x790FD4);
	goto loc_4B2DC2;

loc_4B2DC0:
	xor_(&ts->edi, ts->edi);

loc_4B2DC2:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	or_(&ts->ebp, 0xFFFFFFFF);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebp);
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));
	push(mv, &ts->esp, 0x48);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4B2E08;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xDCB9F861);
	push(mv, &ts->esp, 0x2521E5EB);
	mov(&ts->ecx, ts->edi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x790FDC);
	goto loc_4B2E0A;

loc_4B2E08:
	xor_(&ts->edi, ts->edi);

loc_4B2E0A:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebp);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	push(mv, &ts->esp, 0x48);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x2);
	if (ts->eflags.zero) {
        goto loc_4B2E4D;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x35102EDF);
	push(mv, &ts->esp, 0xAAAB31E9);
	mov(&ts->ecx, ts->edi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x790FE4);
	goto loc_4B2E4F;

loc_4B2E4D:
	xor_(&ts->edi, ts->edi);

loc_4B2E4F:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebp);
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));
	push(mv, &ts->esp, 0x48);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x3);
	if (ts->eflags.zero) {
        goto loc_4B2E92;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xD7162CFA);
	push(mv, &ts->esp, 0x119144);
	mov(&ts->ecx, ts->edi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x790FEC);
	goto loc_4B2E94;

loc_4B2E92:
	xor_(&ts->edi, ts->edi);

loc_4B2E94:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebp);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	push(mv, &ts->esp, 0x48);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x4);
	if (ts->eflags.zero) {
        goto loc_4B2ED7;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x30DA61E1);
	push(mv, &ts->esp, 0x91703AEF);
	mov(&ts->ecx, ts->edi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x791004);
	goto loc_4B2ED9;

loc_4B2ED7:
	xor_(&ts->edi, ts->edi);

loc_4B2ED9:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebp);
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));
	push(mv, &ts->esp, 0x48);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x5);
	if (ts->eflags.zero) {
        goto loc_4B2F1C;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xC786C4E7);
	push(mv, &ts->esp, 0x3F6495C5);
	mov(&ts->ecx, ts->edi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x79100C);
	goto loc_4B2F1E;

loc_4B2F1C:
	xor_(&ts->edi, ts->edi);

loc_4B2F1E:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebp);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	cmp(&ts->eflags, ts->eax, 0x8);
	if (ts->eflags.zero) {
        goto loc_4B2F40;
    }
	cmp(&ts->eflags, ts->eax, 0x200);
	if (ts->eflags.zero) {
        goto loc_4B2F40;
    }
	cmp(&ts->eflags, ts->eax, 0x4);
	if (!ts->eflags.zero) {
        goto loc_4B2F8A;
    }

loc_4B2F40:
	push(mv, &ts->esp, 0x48);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x6);
	if (ts->eflags.zero) {
        goto loc_4B2F77;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x613D3106);
	push(mv, &ts->esp, 0x86C74CB);
	mov(&ts->ecx, ts->edi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x790FF4);
	goto loc_4B2F79;

loc_4B2F77:
	xor_(&ts->edi, ts->edi);

loc_4B2F79:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebp);
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(0x850078, 4));

loc_4B2F8A:
	cmp(&ts->eflags, ts->eax, 0x8);
	if (ts->eflags.zero) {
        goto loc_4B2FE0;
    }
	cmp(&ts->eflags, ts->eax, 0x200);
	if (ts->eflags.zero) {
        goto loc_4B2FE0;
    }
	cmp(&ts->eflags, ts->eax, 0x4);
	if (ts->eflags.zero) {
        goto loc_4B2FE0;
    }
	push(mv, &ts->esp, 0x48);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x7);
	if (ts->eflags.zero) {
        goto loc_4B2FD2;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x6F2421B7);
	push(mv, &ts->esp, 0x713D99C1);
	mov(&ts->ecx, ts->edi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x790FFC);
	goto loc_4B2FD4;

loc_4B2FD2:
	xor_(&ts->edi, ts->edi);

loc_4B2FD4:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebp);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));

loc_4B2FE0:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4C, 4));
	add(&ts->esi, 0x4C);
	push(mv, &ts->esp, ts->eax);
	game::sub_50B8A0(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edi + 0x20, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_772ED0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x791060);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_772EE4:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x791054);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_772EF8:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79104C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_772F0C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x791044);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_772F20:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x791034);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_772F34:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79102C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_772F48:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x791020);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_772F5C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x791014);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4B2D60:
	mov(&ts->eax, 0x7DF484);
	goto ___CxxFrameHandler;
}

void sub_4B3010(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	cmp(&ts->eflags, ts->edi, 0x9120409E);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4B3028;
    }
	cmp(&ts->eflags, ts->edi, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_4B3037;
    }

loc_4B3028:
	mov(mv, &ts->al, x86::mem(0x850098, 1));
	test(&ts->eflags, ts->al, ts->al);
	setz(ts->eflags, &ts->al);
	mov(mv, x86::mem(0x850098, 1), ts->al);

loc_4B3037:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x92B703B5);
	game::sub_55DDA0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x40, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4B3060(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(0x850088, 4), 0x9);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4B30C9;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F21C);
	push(mv, &ts->esp, ts->eax);
	game::sub_51CF70(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F21C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51CF70(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FC44);
	push(mv, &ts->esp, 0x7BCD6704);
	push(mv, &ts->esp, 0x78F380);
	game::sub_537C00(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FC44);
	push(mv, &ts->esp, 0x7C51B6D7);
	push(mv, &ts->esp, 0x78F380);
	game::sub_537C00(ts, mv);
	mov(mv, x86::mem(0x850098, 1), 0x0);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x38);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x20, 4));

loc_4B30C9:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0xFD85BCB4);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->cl, x86::mem(0x850098, 1));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x30, 4));
	neg(&ts->cl);
	sbb(&ts->ecx, ts->ecx);
	and_(&ts->ecx, 0x58B0443D);
	add(&ts->ecx, 0xE1F1271);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0x14);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4B3110(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x7910B8);
	mov(mv, &ts->eax, x86::mem(0x850088, 4));
	cmp(&ts->eflags, ts->eax, 0x4);
	if (!ts->eflags.zero) {
        goto loc_4B314A;
    }
	mov(&ts->ecx, 0x6);
	goto loc_4B3164;

loc_4B314A:
	cmp(&ts->eflags, ts->eax, 0x2);
	if (!ts->eflags.zero) {
        goto loc_4B315F;
    }
	cmp(mv, &ts->eflags, x86::mem(0x8500B8, 2), 0x1132);
	mov(&ts->ecx, 0x3);
	if (ts->eflags.zero) {
        goto loc_4B3164;
    }

loc_4B315F:
	mov(&ts->ecx, 0x4);

loc_4B3164:
	mov(mv, &ts->al, x86::mem(0x850098, 1));
	test(&ts->eflags, ts->al, ts->al);
	setnz(ts->eflags, &ts->al);
	add(&ts->al, 0x2);
	cmp(&ts->eflags, ts->al, ts->cl);
	mov(mv, x86::mem(0x850080, 1), ts->cl);
	mov(mv, x86::mem(0x850081, 1), ts->al);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_4B3184;
    }
	mov(mv, x86::mem(0x850080, 1), ts->al);

loc_4B3184:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x14);
}

void sub_4B3190(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(0x850088, 4));
	cmp(&ts->eflags, ts->edx, 0x4);
	setz(ts->eflags, &ts->al);
	cmp(&ts->eflags, ts->edx, 0x2);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	movzx(mv, &ts->ecx, x86::mem(0x850080, 1));
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax) + 0x4, 4));
	if (!ts->eflags.zero) {
        goto loc_4B31BD;
    }
	cmp(mv, &ts->eflags, x86::mem(0x8500B8, 2), 0x1132);
	if (!ts->eflags.zero) {
        goto loc_4B31BD;
    }
	mov(&ts->al, 0x3);

loc_4B31BD:
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	cmp(&ts->eflags, ts->edi, 0x9120409E);
	if (!ts->eflags.zero) {
        goto loc_4B31DA;
    }
	movzx(mv, &ts->edx, x86::mem(0x850081, 1));
	dec(&ts->ecx);
	cmp(&ts->eflags, ts->ecx, ts->edx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4B31F1;
    }
	movzx(&ts->ecx, ts->al);
	goto loc_4B31F1;

loc_4B31DA:
	cmp(&ts->eflags, ts->edi, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_4B31F1;
    }
	movzx(&ts->eax, ts->al);
	inc(&ts->ecx);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4B31F1;
    }
	movzx(mv, &ts->ecx, x86::mem(0x850081, 1));

loc_4B31F1:
	mov(mv, x86::mem(0x850080, 1), ts->cl);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x92B703B5);
	game::sub_55DDA0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x40, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4B3220(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(0x850098, 1));
	test(&ts->eflags, ts->al, ts->al);
	setnz(ts->eflags, &ts->al);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->cl, x86::mem(0x850080, 1));
	add(&ts->al, 0x2);
	cmp(&ts->eflags, ts->al, ts->cl);
	mov(mv, x86::mem(0x850081, 1), ts->al);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_4B3243;
    }
	mov(mv, x86::mem(0x850080, 1), ts->al);

loc_4B3243:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0xA40967B0);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	movzx(mv, &ts->ecx, x86::mem(0x850080, 1));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x7845D4);
	push(mv, &ts->esp, ts->edx);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0x14);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4B3270(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	cmp(&ts->eflags, ts->edi, 0x9120409E);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4B3288;
    }
	cmp(&ts->eflags, ts->edi, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_4B3297;
    }

loc_4B3288:
	mov(mv, &ts->al, x86::mem(0x85009A, 1));
	test(&ts->eflags, ts->al, ts->al);
	setz(ts->eflags, &ts->al);
	mov(mv, x86::mem(0x85009A, 1), ts->al);

loc_4B3297:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x92B703B5);
	game::sub_55DDA0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x40, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4B32C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(0x85009A, 1));
	neg(&ts->al);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0xF154);
	add(&ts->eax, 0x61C);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0x7712E575);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4B3300(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	cmp(&ts->eflags, ts->edi, 0x9120409E);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4B3318;
    }
	cmp(&ts->eflags, ts->edi, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_4B3327;
    }

loc_4B3318:
	mov(mv, &ts->al, x86::mem(0x85008C, 1));
	test(&ts->eflags, ts->al, ts->al);
	setz(ts->eflags, &ts->al);
	mov(mv, x86::mem(0x85008C, 1), ts->al);

loc_4B3327:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x92B703B5);
	game::sub_55DDA0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x40, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4B3350(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(0x85008C, 1));
	neg(&ts->al);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0x4D2C2);
	add(&ts->eax, 0xFABFC6DC);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0x96A1E80F);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4B3390(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0x9120409E);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4B33A5;
    }
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_4B33B6;
    }

loc_4B33A5:
	mov(mv, &ts->cl, x86::mem(0x850099, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	setz(ts->eflags, &ts->cl);
	mov(mv, x86::mem(0x850099, 1), ts->cl);

loc_4B33B6:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x40, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4B33D0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(0x850099, 1));
	neg(&ts->al);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0xF154);
	add(&ts->eax, 0x61C);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0xB82A976E);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4B3410(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0x9120409E);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4B3425;
    }
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_4B3434;
    }

loc_4B3425:
	mov(mv, &ts->cl, x86::mem(0x8500C8, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	setz(mv, ts->eflags, x86::mem(0x8500C8, 1));

loc_4B3434:
	mov(mv, &ts->cl, x86::mem(0x8500C8, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_4B3445;
    }
	mov(mv, x86::mem(0x85009B, 1), 0x0);

loc_4B3445:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x40, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4B3460(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(0x8500C8, 1));
	neg(&ts->al);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0xF154);
	add(&ts->eax, 0x61C);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0x95684A90);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4B34A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	cmp(&ts->eflags, ts->edi, 0x9120409E);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4B34B8;
    }
	cmp(&ts->eflags, ts->edi, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_4B34C7;
    }

loc_4B34B8:
	mov(mv, &ts->al, x86::mem(0x85009B, 1));
	test(&ts->eflags, ts->al, ts->al);
	setz(ts->eflags, &ts->al);
	mov(mv, x86::mem(0x85009B, 1), ts->al);

loc_4B34C7:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x92B703B5);
	game::sub_55DDA0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x40, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4B34F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(0x8500C8, 1));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x28, 1));
	if (ts->eflags.zero) {
        goto loc_4B350A;
    }
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4B3515;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	call(ts, mv, x86::mem(ts->eax + 0x20, 4));
	goto loc_4B3515;

loc_4B350A:
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4B3515;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x1C, 4));

loc_4B3515:
	mov(mv, &ts->al, x86::mem(0x85009B, 1));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	neg(&ts->al);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0xF154);
	add(&ts->eax, 0x61C);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0x744A80A7);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4B3550(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0x9953843B);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->al, x86::mem(0x85009C, 1));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4B3580;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0x7912A8);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4B3580:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0xBB298A80);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4B35A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0x97CB518B);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->al, x86::mem(0x8500A9, 1));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4B35D0;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0x7912A8);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4B35D0:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0xBB298A80);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4B35F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x850090, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	cmp(&ts->eflags, ts->ecx, 0x9120409E);
	if (!ts->eflags.zero) {
        goto loc_4B360E;
    }
	dec(&ts->eax);
	if (!ts->eflags.sign) {
        goto loc_4B361E;
    }
	mov(&ts->eax, 0x6);
	goto loc_4B361E;

loc_4B360E:
	cmp(&ts->eflags, ts->ecx, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_4B361E;
    }
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0x6);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4B361E;
    }
	xor_(&ts->eax, ts->eax);

loc_4B361E:
	mov(mv, x86::mem(0x850090, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x40, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4B3640(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0x81CAA8E6);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x850090, 4));
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, 0x6);
	if (!ts->eflags.zero) {
        goto loc_4B3677;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0x2F8344EA);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4B3677:
	movsx(mv, &ts->ecx, x86::mem(ts->eax + 0x78DA98, 1));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, ts->edx);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4B36A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x850094, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	cmp(&ts->eflags, ts->ecx, 0x9120409E);
	if (!ts->eflags.zero) {
        goto loc_4B36BE;
    }
	dec(&ts->eax);
	if (!ts->eflags.sign) {
        goto loc_4B36CE;
    }
	mov(&ts->eax, 0x4);
	goto loc_4B36CE;

loc_4B36BE:
	cmp(&ts->eflags, ts->ecx, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_4B36CE;
    }
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0x4);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4B36CE;
    }
	xor_(&ts->eax, ts->eax);

loc_4B36CE:
	mov(mv, x86::mem(0x850094, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x40, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4B36F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0xFE407A18);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x850094, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x30, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4B3726;
    }
	push(mv, &ts->esp, 0x53B157FC);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4B3726:
	push(mv, &ts->esp, 0x542110C3);
	game::sub_4FFA80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x850094, 4));
	movsx(mv, &ts->edx, x86::mem(ts->ecx + 0x78DAA0, 1));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x790358);
	push(mv, &ts->esp, ts->esi);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0x14);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4B3750(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x773818);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->esi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x791380);
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x2);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	if (!ts->eflags.zero) {
        goto loc_4B37D9;
    }
	cmp(mv, &ts->eflags, x86::mem(0x83AAB4, 4), 0x2);
	if (!ts->eflags.zero) {
        goto loc_4B37D9;
    }
	mov(&ts->ecx, 0x83AAB4);
	game::sub_502910(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 2), 0x1132);
	if (!ts->eflags.zero) {
        goto loc_4B37D9;
    }
	mov(&ts->ecx, 0x83AAB4);
	game::sub_502710(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4B37D9;
    }
	push(mv, &ts->esp, 0x2);
	mov(&ts->ecx, 0x83AAB4);
	game::sub_502960(ts, mv);

loc_4B37D9:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x14);

loc_773810:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_4CF650;

SEH_4BA2C0:
	mov(&ts->eax, 0x7DF4A8);
	goto ___CxxFrameHandler;
}

void sub_4B37F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4B3809;
    }
	cmp(&ts->eflags, ts->eax, 0x9120409E);
	if (!ts->eflags.zero) {
        goto loc_4B38B8;
    }

loc_4B3809:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x83AAB4);
	game::sub_5026F0(ts, mv);
	mov(&ts->ecx, 0x83AAB4);
	mov(&ts->ebx, ts->eax);
	game::sub_502710(ts, mv);
	xor_(&ts->ecx, ts->ecx);
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->eax, x86::mem(0x83AAB4, 4));
	cmp(&ts->eflags, ts->eax, 0x4);
	setz(ts->eflags, &ts->cl);
	lea(mv, &ts->ecx, x86::mem(ts->ecx + (ts->ecx) + 0x3, 4));
	mov(&ts->esi, ts->ecx);
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x2);
	if (!ts->eflags.zero) {
        goto loc_4B385B;
    }
	cmp(&ts->eflags, ts->eax, 0x2);
	if (!ts->eflags.zero) {
        goto loc_4B385B;
    }
	mov(&ts->ecx, 0x83AAB4);
	game::sub_502910(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 2), 0x1132);
	if (!ts->eflags.zero) {
        goto loc_4B385B;
    }
	mov(&ts->esi, 0x2);

loc_4B385B:
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x2);
	mov(&ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4B386B;
    }
	xor_(&ts->eax, ts->eax);

loc_4B386B:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	cmp(&ts->eflags, ts->ecx, 0x9120409E);
	if (!ts->eflags.zero) {
        goto loc_4B3883;
    }
	dec(&ts->edi);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4B3895;
    }
	sub(&ts->esi, ts->ebx);
	inc(&ts->esi);
	mov(&ts->edi, ts->esi);
	goto loc_4B3895;

loc_4B3883:
	cmp(&ts->eflags, ts->ecx, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_4B3895;
    }
	sub(&ts->esi, ts->ebx);
	inc(&ts->edi);
	inc(&ts->esi);
	cmp(&ts->eflags, ts->edi, ts->esi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4B3895;
    }
	mov(&ts->edi, ts->eax);

loc_4B3895:
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x83AAB4);
	game::sub_502960(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebp);
	call(ts, mv, x86::mem(ts->edx + 0x40, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp, 4));
	mov(&ts->ecx, ts->ebp);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);

loc_4B38B8:
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x8);
}

void sub_4B38C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0x3384A679);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x30, 4));
	add(&ts->esp, 0x8);
	mov(&ts->ecx, 0x83AAB4);
	game::sub_502710(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7845D4);
	push(mv, &ts->esp, ts->edi);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0xC);
	mov(&ts->ecx, 0x83AAB4);
	game::sub_502910(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x8, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x28, 1));
	if (ts->eflags.zero) {
        goto loc_4B3912;
    }
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4B391F;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	jmp(x86::mem(ts->edx + 0x20, 4));

loc_4B3912:
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4B391F;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	jmp(x86::mem(ts->eax + 0x1C, 4));

loc_4B391F:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4B3930(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x7913C8);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x14);
}

void sub_4B3960(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x83AAB4);
	game::sub_502730(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	cmp(&ts->eflags, ts->edi, 0x9120409E);
	if (!ts->eflags.zero) {
        goto loc_4B3984;
    }
	dec(&ts->eax);
	if (!ts->eflags.sign) {
        goto loc_4B3994;
    }
	mov(&ts->eax, 0x2);
	goto loc_4B3994;

loc_4B3984:
	cmp(&ts->eflags, ts->edi, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_4B3994;
    }
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4B3994;
    }
	xor_(&ts->eax, ts->eax);

loc_4B3994:
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x83AAB4);
	game::sub_502990(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x40, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4B39C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(&ts->ecx, 0x83AAB4);
	xor_(&ts->esi, ts->esi);
	game::sub_502730(ts, mv);
	movzx(&ts->eax, ts->al);
	sub(&ts->eax, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4B39EB;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B39E4;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4B39F0;
    }
	mov(&ts->esi, 0xDBBCF37C);
	goto loc_4B39F0;

loc_4B39E4:
	mov(&ts->esi, 0xCAB262DE);
	goto loc_4B39F0;

loc_4B39EB:
	mov(&ts->esi, 0xDBBB4E8F);

loc_4B39F0:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x2C, 4));
	push(mv, &ts->esp, 0x4D156786);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x30, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4B3A10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	cmp(&ts->eflags, ts->edi, 0x9120409E);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4B3A28;
    }
	cmp(&ts->eflags, ts->edi, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_4B3A43;
    }

loc_4B3A28:
	mov(&ts->ecx, 0x83AAB4);
	game::sub_5028F0(ts, mv);
	neg(&ts->al);
	sbb(&ts->al, ts->al);
	inc(&ts->al);
	mov(&ts->ecx, 0x83AAB4);
	push(mv, &ts->esp, ts->eax);
	game::sub_5029F0(ts, mv);

loc_4B3A43:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x40, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4B3A60(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(&ts->ecx, 0x83AAB4);
	game::sub_5028F0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4B3A7C;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0x63C);
	push(mv, &ts->esp, ts->eax);
	goto loc_4B3A85;

loc_4B3A7C:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0xCCFA);
	push(mv, &ts->esp, ts->ecx);

loc_4B3A85:
	game::sub_50C900(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x2C, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x8B8E913A);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4B3AA0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x791458);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x14);
}

void sub_4B3AD0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x83AAB4);
	game::sub_502750(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	cmp(&ts->eflags, ts->edi, 0x9120409E);
	if (!ts->eflags.zero) {
        goto loc_4B3AF4;
    }
	dec(&ts->eax);
	if (!ts->eflags.sign) {
        goto loc_4B3B04;
    }
	mov(&ts->eax, 0x3);
	goto loc_4B3B04;

loc_4B3AF4:
	cmp(&ts->eflags, ts->edi, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_4B3B04;
    }
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4B3B04;
    }
	xor_(&ts->eax, ts->eax);

loc_4B3B04:
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x83AAB4);
	game::sub_5029C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x40, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4B3B30(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(&ts->ecx, 0x83AAB4);
	xor_(&ts->esi, ts->esi);
	game::sub_502750(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x3);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4B3B45;
    }
	jmp(x86::mem(0x4B3B84, 4));

loc_4B3B4C:
	mov(&ts->esi, 0x896BCB4D);
	goto def_4B3B45;

loc_4B3B53:
	mov(&ts->esi, 0xB6BD9C95);
	goto def_4B3B45;

loc_4B3B5A:
	mov(&ts->esi, 0x907C555E);
	goto def_4B3B45;

loc_4B3B61:
	mov(&ts->esi, 0xB672F15A);

def_4B3B45:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x30, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x2C, 4));
	push(mv, &ts->esp, 0xEB9DFC09);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4B3BA0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x83AAB4);
	game::sub_502770(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	cmp(&ts->eflags, ts->edi, 0x9120409E);
	if (!ts->eflags.zero) {
        goto loc_4B3BC4;
    }
	dec(&ts->eax);
	if (!ts->eflags.sign) {
        goto loc_4B3BD4;
    }
	mov(&ts->eax, 0x6);
	goto loc_4B3BD4;

loc_4B3BC4:
	cmp(&ts->eflags, ts->edi, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_4B3BD4;
    }
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0x6);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4B3BD4;
    }
	xor_(&ts->eax, ts->eax);

loc_4B3BD4:
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x83AAB4);
	game::sub_502A20(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x40, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4B3C00(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0x81CAA8E6);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->ecx, 0x83AAB4);
	game::sub_502770(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x6);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x30, 4));
	if (!ts->eflags.zero) {
        goto loc_4B3C3C;
    }
	push(mv, &ts->esp, 0x2F8344EA);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4B3C3C:
	mov(&ts->ecx, 0x83AAB4);
	game::sub_502790(ts, mv);
	movsx(&ts->ecx, ts->al);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, ts->esi);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4B3C60(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x83AAB4);
	game::sub_502780(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	cmp(&ts->eflags, ts->edi, 0x9120409E);
	if (!ts->eflags.zero) {
        goto loc_4B3C84;
    }
	dec(&ts->eax);
	if (!ts->eflags.sign) {
        goto loc_4B3C94;
    }
	mov(&ts->eax, 0x4);
	goto loc_4B3C94;

loc_4B3C84:
	cmp(&ts->eflags, ts->edi, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_4B3C94;
    }
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0x4);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4B3C94;
    }
	xor_(&ts->eax, ts->eax);

loc_4B3C94:
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x83AAB4);
	game::sub_502A30(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x40, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4B3CC0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0xFE407A18);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->ecx, 0x83AAB4);
	game::sub_502780(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x30, 4));
	if (!ts->eflags.zero) {
        goto loc_4B3CFB;
    }
	push(mv, &ts->esp, 0x53B157FC);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4B3CFB:
	push(mv, &ts->esp, 0x542110C3);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x83AAB4);
	game::sub_5027A0(ts, mv);
	movsx(&ts->ecx, ts->al);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x787ABC);
	push(mv, &ts->esp, ts->esi);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4B3D30(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x791530);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x14);
}

void sub_4B3D60(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x83AAB4);
	game::sub_502910(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x14, 4));
	cmp(&ts->eflags, ts->ebx, 0x9120409E);
	movzx(mv, &ts->edi, x86::mem(ts->eax + 0x2, 2));
	if (!ts->eflags.zero) {
        goto loc_4B3D8C;
    }
	dec(&ts->edi);
	cmp(&ts->eflags, ts->edi, 0x1);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4B3D9F;
    }
	mov(&ts->edi, 0xA);
	goto loc_4B3D9F;

loc_4B3D8C:
	cmp(&ts->eflags, ts->ebx, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_4B3D9F;
    }
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, 0xA);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4B3D9F;
    }
	mov(&ts->edi, 0x1);

loc_4B3D9F:
	mov(&ts->ecx, 0x83AAB4);
	game::sub_502910(ts, mv);
	mov(mv, x86::mem(ts->eax + 0x2, 2), ts->di);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x40, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x8);
}

void sub_4B3DD0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x30, 4));
	mov(&ts->ecx, 0x83AAB4);
	game::sub_502910(ts, mv);
	movzx(mv, &ts->eax, x86::mem(ts->eax + 0x2, 2));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7845D4);
	push(mv, &ts->esp, ts->edi);
	game::sub_537BE0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0x48494E83);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x14);
	mov(&ts->ecx, 0x83AAB4);
	game::sub_502910(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x8, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x28, 1));
	if (ts->eflags.zero) {
        goto loc_4B3E23;
    }
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4B3E30;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	jmp(x86::mem(ts->edx + 0x20, 4));

loc_4B3E23:
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4B3E30;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	jmp(x86::mem(ts->eax + 0x1C, 4));

loc_4B3E30:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4B3E40(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_51E230(ts, mv);
	mov(&ts->ecx, 0x1);
	mov(mv, x86::mem(ts->esi, 4), 0x791578);
	mov(mv, x86::mem(ts->esi + 0x54, 2), ts->cx);
	mov(mv, &ts->eax, x86::mem(0x850088, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(&ts->edx, 0x2);
	if (ts->eflags.zero) {
        goto loc_4B3EA2;
    }
	cmp(&ts->eflags, ts->eax, 0x4);
	if (ts->eflags.zero) {
        goto loc_4B3EA2;
    }
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.zero) {
        goto loc_4B3E9A;
    }
	cmp(&ts->eflags, ts->eax, 0x5);
	if (ts->eflags.zero) {
        goto loc_4B3E9A;
    }
	cmp(&ts->eflags, ts->eax, 0xA);
	if (ts->eflags.zero) {
        goto loc_4B3E9A;
    }
	mov(mv, x86::mem(ts->esi + 0x54, 2), ts->cx);
	goto loc_4B3EA6;

loc_4B3E9A:
	mov(mv, x86::mem(ts->esi + 0x54, 2), 0x4);
	goto loc_4B3EA6;

loc_4B3EA2:
	mov(mv, x86::mem(ts->esi + 0x54, 2), ts->dx);

loc_4B3EA6:
	mov(mv, &ts->ax, x86::mem(0x8500BA, 2));
	cmp(mv, &ts->eflags, ts->ax, x86::mem(ts->esi + 0x54, 2));
	if (!ts->eflags.carry) {
        goto loc_4B3F05;
    }
	mov(mv, &ts->eax, x86::mem(0x850088, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B3EF7;
    }
	cmp(&ts->eflags, ts->eax, 0x4);
	if (ts->eflags.zero) {
        goto loc_4B3EF7;
    }
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.zero) {
        goto loc_4B3EE0;
    }
	cmp(&ts->eflags, ts->eax, 0x5);
	if (ts->eflags.zero) {
        goto loc_4B3EE0;
    }
	cmp(&ts->eflags, ts->eax, 0xA);
	if (ts->eflags.zero) {
        goto loc_4B3EE0;
    }
	mov(mv, x86::mem(ts->esi + 0x54, 2), ts->cx);
	mov(&ts->eax, ts->esi);
	mov(mv, x86::mem(0x8500BA, 2), ts->cx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x14);

loc_4B3EE0:
	mov(mv, x86::mem(ts->esi + 0x54, 2), 0x4);
	mov(mv, &ts->cx, x86::mem(ts->esi + 0x54, 2));
	mov(&ts->eax, ts->esi);
	mov(mv, x86::mem(0x8500BA, 2), ts->cx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x14);

loc_4B3EF7:
	mov(&ts->cx, ts->dx);
	mov(mv, x86::mem(ts->esi + 0x54, 2), ts->dx);
	mov(mv, x86::mem(0x8500BA, 2), ts->cx);

loc_4B3F05:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x14);
}

void sub_4B3F10(x86::thread_state* ts, x86::memory_view* mv) {
	movzx(mv, &ts->eax, x86::mem(0x8500BA, 2));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	cmp(&ts->eflags, ts->ecx, 0x9120409E);
	if (!ts->eflags.zero) {
        goto loc_4B3F36;
    }
	movzx(mv, &ts->edx, x86::mem(ts->esi + 0x54, 2));
	dec(&ts->eax);
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4B3F48;
    }
	mov(&ts->eax, 0xA);
	goto loc_4B3F48;

loc_4B3F36:
	cmp(&ts->eflags, ts->ecx, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_4B3F48;
    }
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0xA);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4B3F48;
    }
	movzx(mv, &ts->eax, x86::mem(ts->esi + 0x54, 2));

loc_4B3F48:
	mov(mv, x86::mem(0x8500BA, 2), ts->ax);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x40, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4B3F70(x86::thread_state* ts, x86::memory_view* mv) {
	movzx(mv, &ts->eax, x86::mem(0x8500BA, 2));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0x7845D4);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537BE0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0x48494E83);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x14);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4B3FA0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x7915C0);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x14);
}

void sub_4B3FD0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(&ts->ecx, 0x83AAB4);
	game::sub_502910(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x8, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_4B3FEF;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0x63C);
	push(mv, &ts->esp, ts->eax);
	goto loc_4B3FF8;

loc_4B3FEF:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0xCCFA);
	push(mv, &ts->esp, ts->ecx);

loc_4B3FF8:
	game::sub_50C900(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x2C, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x7FD73849);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4B4020(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	cmp(&ts->eflags, ts->edi, 0x9120409E);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4B4038;
    }
	cmp(&ts->eflags, ts->edi, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_4B4059;
    }

loc_4B4038:
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, 0x83AAB4);
	game::sub_502910(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x8, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	mov(&ts->ecx, 0x83AAB4);
	setz(ts->eflags, &ts->bl);
	game::sub_502910(ts, mv);
	mov(mv, x86::mem(ts->eax + 0x8, 1), ts->bl);
	pop(mv, &ts->esp, ts->ebx);

loc_4B4059:
	mov(&ts->ecx, 0x83AAB4);
	game::sub_502910(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x8, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_4B4086;
    }
	mov(&ts->ecx, 0x83AAB4);
	game::sub_502910(ts, mv);
	push(mv, &ts->esp, 0x3);
	mov(&ts->ecx, 0x83AAB4);
	mov(mv, x86::mem(ts->eax + 0x2, 2), 0x3);
	game::sub_502960(ts, mv);

loc_4B4086:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x92B703B5);
	game::sub_55DDA0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x40, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4B40B0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x791608);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x14);
}

void sub_4B40E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	cmp(&ts->eflags, ts->edi, 0x9120409E);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4B40F8;
    }
	cmp(&ts->eflags, ts->edi, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_4B4140;
    }

loc_4B40F8:
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	cmp(&ts->eflags, ts->eax, 0x8);
	if (ts->eflags.zero) {
        goto loc_4B4115;
    }
	cmp(&ts->eflags, ts->eax, 0x200);
	if (ts->eflags.zero) {
        goto loc_4B4115;
    }
	mov(&ts->ecx, 0x83AAB4);
	game::sub_502910(ts, mv);
	goto loc_4B411A;

loc_4B4115:
	mov(&ts->eax, 0x8500B8);

loc_4B411A:
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	xor_(&ts->ecx, ts->ecx);
	cmp(&ts->eflags, ts->edx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4B4128;
    }
	mov(&ts->ecx, 0x1);

loc_4B4128:
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(0x89E7A4, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x40, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));

loc_4B4140:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4B4150(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0xA88FFEB4);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, 0x8);
	if (ts->eflags.zero) {
        goto loc_4B4181;
    }
	cmp(&ts->eflags, ts->eax, 0x200);
	if (ts->eflags.zero) {
        goto loc_4B4181;
    }
	mov(&ts->ecx, 0x83AAB4);
	game::sub_502910(ts, mv);
	goto loc_4B4186;

loc_4B4181:
	mov(&ts->eax, 0x8500B8);

loc_4B4186:
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4B41A0;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0x9E4C4648);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4B41A0:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0x22F254AF);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4B41C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x773084);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x134, 4), 0x8);
	push(mv, &ts->esp, 0x54);
	mov(mv, x86::mem(0x85009B, 1), 0x0);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4B4235;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x791220);
	goto loc_4B4237;

loc_4B4235:
	xor_(&ts->edi, ts->edi);

loc_4B4237:
	push(mv, &ts->esp, 0x1);
	or_(&ts->ebp, 0xFFFFFFFF);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebp);
	game::sub_54F170(ts, mv);
	push(mv, &ts->esp, 0x254);
	mov(mv, x86::mem(ts->esi + 0x154, 4), ts->eax);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4B42A3;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x5);
	push(mv, &ts->esp, 0x783FE5);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xC);
	mov(&ts->ecx, ts->edi);
	game::sub_51E9E0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x791268);
	goto loc_4B42A5;

loc_4B42A3:
	xor_(&ts->edi, ts->edi);

loc_4B42A5:
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebp);
	game::sub_54F820(ts, mv);
	push(mv, &ts->esp, 0x254);
	mov(mv, x86::mem(ts->esi + 0x150, 4), ts->eax);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x2);
	if (ts->eflags.zero) {
        goto loc_4B430C;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x5);
	push(mv, &ts->esp, 0x783FE5);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0xC);
	mov(&ts->ecx, ts->edi);
	game::sub_51E9E0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7912B0);
	goto loc_4B430E;

loc_4B430C:
	xor_(&ts->edi, ts->edi);

loc_4B430E:
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebp);
	game::sub_54F820(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x14C, 4), ts->eax);
	cmp(mv, &ts->eflags, x86::mem(0x850088, 4), 0x8);
	if (!ts->eflags.zero) {
        goto loc_4B43DF;
    }
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x3);
	if (ts->eflags.zero) {
        goto loc_4B4376;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7912F0);
	goto loc_4B4378;

loc_4B4376:
	xor_(&ts->edi, ts->edi);

loc_4B4378:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebp);
	game::sub_54F170(ts, mv);
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x4);
	if (ts->eflags.zero) {
        goto loc_4B43CF;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x791338);
	goto loc_4B43D1;

loc_4B43CF:
	xor_(&ts->edi, ts->edi);

loc_4B43D1:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebp);
	game::sub_54F170(ts, mv);

loc_4B43DF:
	movzx(mv, &ts->edx, x86::mem(0x8500B8, 2));
	push(mv, &ts->esp, ts->edx);
	game::sub_5D3E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x850088, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->ecx, 0x8);
	mov(&ts->edi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B4485;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0x86, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_4B4485;
    }
	movsx(mv, &ts->eax, x86::mem(ts->edi + 0x8A, 2));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1F8);
	game::sub_5156F0(ts, mv);
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4B447F;
    }
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x5);
	if (ts->eflags.zero) {
        goto loc_4B4467;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->eax);
	game::sub_4B40B0(ts, mv);
	goto loc_4B4469;

loc_4B4467:
	xor_(&ts->eax, ts->eax);

loc_4B4469:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebp);
	game::sub_54F170(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x850088, 4));
	goto loc_4B448F;

loc_4B447F:
	mov(mv, &ts->ecx, x86::mem(0x850088, 4));

loc_4B4485:
	mov(mv, x86::mem(0x8500BC, 4), 0x0);

loc_4B448F:
	cmp(&ts->eflags, ts->ecx, 0x1);
	if (ts->eflags.zero) {
        goto loc_4B449D;
    }
	cmp(&ts->eflags, ts->ecx, 0x2);
	if (ts->eflags.zero) {
        goto loc_4B449D;
    }
	xor_(&ts->dl, ts->dl);
	goto loc_4B449F;

loc_4B449D:
	mov(&ts->dl, 0x1);

loc_4B449F:
	cmp(&ts->eflags, ts->ecx, 0x3);
	if (!ts->eflags.zero) {
        goto loc_4B44B1;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0x80, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_4B44B1;
    }
	mov(&ts->al, 0x1);
	goto loc_4B44B3;

loc_4B44B1:
	xor_(&ts->al, ts->al);

loc_4B44B3:
	test(&ts->eflags, ts->dl, ts->dl);
	if (!ts->eflags.zero) {
        goto loc_4B451F;
    }
	cmp(&ts->eflags, ts->ecx, 0x8);
	if (ts->eflags.zero) {
        goto loc_4B451F;
    }
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4B451F;
    }
	push(mv, &ts->esp, 0x58);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x6);
	if (ts->eflags.zero) {
        goto loc_4B4501;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->eax);
	game::sub_4B3E40(ts, mv);
	goto loc_4B4503;

loc_4B4501:
	xor_(&ts->eax, ts->eax);

loc_4B4503:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebp);
	game::sub_54F170(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x160, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(0x850088, 4));
	goto loc_4B4528;

loc_4B451F:
	mov(mv, x86::mem(0x8500BA, 2), 0x1);

loc_4B4528:
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x200);
	if (ts->eflags.zero) {
        goto loc_4B45A2;
    }
	cmp(&ts->eflags, ts->ecx, 0x8);
	if (ts->eflags.zero) {
        goto loc_4B45A2;
    }
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x7);
	if (ts->eflags.zero) {
        goto loc_4B4590;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->edi, 4), 0x791070);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebp);
	game::sub_54F170(ts, mv);
	goto loc_4B45A9;

loc_4B4590:
	xor_(&ts->edi, ts->edi);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebp);
	game::sub_54F170(ts, mv);
	goto loc_4B45A9;

loc_4B45A2:
	mov(mv, x86::mem(0x850098, 1), 0x0);

loc_4B45A9:
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x8);
	if (ts->eflags.zero) {
        goto loc_4B45EA;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->eax);
	game::sub_4B3110(ts, mv);
	goto loc_4B45EC;

loc_4B45EA:
	xor_(&ts->eax, ts->eax);

loc_4B45EC:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebp);
	game::sub_54F170(ts, mv);
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x9);
	if (ts->eflags.zero) {
        goto loc_4B4643;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x791100);
	goto loc_4B4645;

loc_4B4643:
	xor_(&ts->edi, ts->edi);

loc_4B4645:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebp);
	game::sub_54F170(ts, mv);
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0xA);
	if (ts->eflags.zero) {
        goto loc_4B469C;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x791148);
	goto loc_4B469E;

loc_4B469C:
	xor_(&ts->edi, ts->edi);

loc_4B469E:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebp);
	game::sub_54F170(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x850088, 4));
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.zero) {
        goto loc_4B4724;
    }
	cmp(&ts->eflags, ts->eax, 0xA);
	if (ts->eflags.zero) {
        goto loc_4B4724;
    }
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0xB);
	if (ts->eflags.zero) {
        goto loc_4B4712;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->edi, 4), 0x791190);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebp);
	game::sub_54F170(ts, mv);
	goto loc_4B472B;

loc_4B4712:
	xor_(&ts->edi, ts->edi);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebp);
	game::sub_54F170(ts, mv);
	goto loc_4B472B;

loc_4B4724:
	mov(mv, x86::mem(0x850099, 1), 0x0);

loc_4B472B:
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x200);
	if (ts->eflags.zero) {
        goto loc_4B4790;
    }
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0xC);
	if (ts->eflags.zero) {
        goto loc_4B4780;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7911D8);
	goto loc_4B4782;

loc_4B4780:
	xor_(&ts->edi, ts->edi);

loc_4B4782:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebp);
	game::sub_54F170(ts, mv);

loc_4B4790:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_772F80:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x791744);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_772F94:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x791730);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_772FA8:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x791718);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_772FBC:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x791704);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_772FD0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7916F4);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_772FE4:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7916E0);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_772FF8:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7916D0);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_77300C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7916C0);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773020:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7916AC);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773034:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x791690);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773048:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x791674);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_77305C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x791660);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773070:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79164C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4B41C0:
	mov(&ts->eax, 0x7DF52C);
	goto ___CxxFrameHandler;
}

void sub_4B47B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x774434);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	cmp(&ts->eflags, ts->eax, 0x8);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4B49F0;
    }
	cmp(&ts->eflags, ts->eax, 0x200);
	if (ts->eflags.zero) {
        goto loc_4B49F0;
    }
	mov(&ts->ecx, 0x83AAB4);
	game::sub_502910(ts, mv);
	movzx(mv, &ts->eax, x86::mem(ts->eax, 2));
	push(mv, &ts->esp, ts->eax);
	game::sub_5D3E40(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x86, 1));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->cl, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4B4872;
    }
	movsx(mv, &ts->ecx, x86::mem(ts->eax + 0x8A, 2));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x1);
	game::sub_5156F0(ts, mv);
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4B4872;
    }
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4B485E;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4B40B0(ts, mv);
	goto loc_4B4860;

loc_4B485E:
	xor_(&ts->eax, ts->eax);

loc_4B4860:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0xFFFFFFFF);
	game::sub_54F170(ts, mv);

loc_4B4872:
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4B48BC;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x791530);
	goto loc_4B48BE;

loc_4B48BC:
	xor_(&ts->edi, ts->edi);

loc_4B48BE:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xFFFFFFFF);
	game::sub_54F170(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x4);
	if (ts->eflags.zero) {
        goto loc_4B4982;
    }
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x2);
	if (ts->eflags.zero) {
        goto loc_4B491E;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->eax);
	game::sub_4B3750(ts, mv);
	goto loc_4B4920;

loc_4B491E:
	xor_(&ts->eax, ts->eax);

loc_4B4920:
	push(mv, &ts->esp, 0x1);
	or_(&ts->edi, 0xFFFFFFFF);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->edi);
	game::sub_54F170(ts, mv);
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x3);
	if (ts->eflags.zero) {
        goto loc_4B4972;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->eax);
	game::sub_4B3930(ts, mv);
	goto loc_4B4974;

loc_4B4972:
	xor_(&ts->eax, ts->eax);

loc_4B4974:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->edi);
	game::sub_54F170(ts, mv);

loc_4B4982:
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x4);
	if (ts->eflags.zero) {
        goto loc_4B49CB;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x791410);
	goto loc_4B49CD;

loc_4B49CB:
	xor_(&ts->edi, ts->edi);

loc_4B49CD:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xFFFFFFFF);
	game::sub_54F170(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4B49F0:
	mov(&ts->ecx, ts->esi);
	game::sub_4B41C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_7743D0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7916E0);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7743E4:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x791784);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7743F8:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x791770);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_77440C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x791764);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774420:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x791758);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4B47B0:
	mov(&ts->eax, 0x7DF570);
	goto ___CxxFrameHandler;
}

void sub_4B4A10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7730B8);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	cmp(&ts->eflags, ts->eax, 0x8);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4B4B41;
    }
	cmp(&ts->eflags, ts->eax, 0x200);
	if (ts->eflags.zero) {
        goto loc_4B4B41;
    }
	mov(&ts->ecx, 0x83AAB4);
	game::sub_502910(ts, mv);
	movzx(mv, &ts->eax, x86::mem(ts->eax, 2));
	push(mv, &ts->esp, ts->eax);
	game::sub_5D3E40(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x86, 1));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->cl, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4B4AD2;
    }
	movsx(mv, &ts->ecx, x86::mem(ts->eax + 0x8A, 2));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x1);
	game::sub_5156F0(ts, mv);
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4B4AD2;
    }
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4B4ABE;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4B40B0(ts, mv);
	goto loc_4B4AC0;

loc_4B4ABE:
	xor_(&ts->eax, ts->eax);

loc_4B4AC0:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0xFFFFFFFF);
	game::sub_54F170(ts, mv);

loc_4B4AD2:
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4B4B1C;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x791458);
	goto loc_4B4B1E;

loc_4B4B1C:
	xor_(&ts->edi, ts->edi);

loc_4B4B1E:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xFFFFFFFF);
	game::sub_54F170(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4B4B41:
	mov(&ts->ecx, ts->esi);
	game::sub_4B41C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_773090:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7916E0);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7730A4:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x791790);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4B4A10:
	mov(&ts->eax, 0x7DF59C);
	goto ___CxxFrameHandler;
}

void sub_4B4B60(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4985A0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4B4B78;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4B4B78:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4B4B80(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4B4B92;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x18, 4));
	goto loc_4B4B98;

loc_4B4B92:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x120, 4));

loc_4B4B98:
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_4B4BF3;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4B4BB1;
    }
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x1C, 1));
	goto loc_4B4BB7;

loc_4B4BB1:
	mov(mv, &ts->al, x86::mem(ts->eax + 0x124, 1));

loc_4B4BB7:
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4B4BE4;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784264, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	game::__ftol2(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x2C, 1), 0x0);
	game::sub_498630(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4B4BE4:
	mov(mv, x86::mem(ts->esi + 0x2C, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0x0);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4B4BF3:
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0x0);
	game::sub_498630(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4B4C10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x30);
	mov(&ts->edi, ts->ecx);
	game::j__malloc(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B4C3F;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 1), 0x0);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0xC, 4), 0x0);
	mov(mv, x86::mem(ts->eax + 0x10, 4), 0x0);
	mov(&ts->esi, ts->eax);
	goto loc_4B4C41;

loc_4B4C3F:
	xor_(&ts->esi, ts->esi);

loc_4B4C41:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x50, 4));
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x4C, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	cmp(&ts->eflags, ts->eax, 0x8);
	if (ts->eflags.zero) {
        goto loc_4B4C67;
    }
	cmp(&ts->eflags, ts->eax, 0x200);
	mov(&ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4B4C6C;
    }

loc_4B4C67:
	mov(&ts->eax, 0x1F8);

loc_4B4C6C:
	movsx(mv, &ts->ecx, x86::mem(ts->edx + 0x8A, 2));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5156F0(ts, mv);
	add(&ts->esp, 0x10);
	neg(&ts->al);
	sbb(&ts->al, ts->al);
	inc(&ts->al);
	mov(mv, x86::mem(ts->esi + 0x8, 1), ts->al);
	inc(mv, x86::mem(ts->edi + 0x150, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4B4CA0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4989A0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4B4CB8;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4B4CB8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4B4CC0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x24);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x850264);
	mov(&ts->esi, ts->ecx);
	mov(&ts->ebp, 0x1);
	push(mv, &ts->esp, 0x786E70);
	mov(mv, x86::mem(0x836348, 4), ts->ebp);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x78FC4C);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->eax);
	game::sub_537BE0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x208, 4), 0x850164);
	mov(mv, &ts->eax, x86::mem(0x85015C, 4));
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->eax, 0x100);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4B4D19;
    }
	mov(&ts->eax, 0xFF);

loc_4B4D19:
	mov(mv, x86::mem(ts->esi + 0x58, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x850150, 4));
	mov(mv, x86::mem(ts->esi + 0x210, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(0x850154, 4));
	mov(mv, x86::mem(ts->esi + 0x214, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(0x850160, 4));
	xor_(&ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x218, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->edi);
	game::sub_4FF970(ts, mv);
	dec(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0x6);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4B4D4F;
    }
	jmp(x86::mem(0x4B50E0, 4));

loc_4B4D56:
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->ebp);
	goto loc_4B4D94;

loc_4B4D5B:
	mov(mv, x86::mem(ts->esi + 0x4C, 4), 0x2);
	goto loc_4B4D94;

loc_4B4D64:
	mov(mv, x86::mem(ts->esi + 0x4C, 4), 0x3);
	goto loc_4B4D94;

loc_4B4D6D:
	mov(mv, x86::mem(ts->esi + 0x4C, 4), 0x4);
	goto loc_4B4D94;

loc_4B4D76:
	mov(mv, x86::mem(ts->esi + 0x4C, 4), 0x5);
	goto loc_4B4D94;

loc_4B4D7F:
	mov(mv, x86::mem(ts->esi + 0x4C, 4), 0x6);
	goto loc_4B4D94;

loc_4B4D88:
	mov(mv, x86::mem(ts->esi + 0x4C, 4), 0x7);
	goto loc_4B4D94;

def_4B4D4F:
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->edi);

loc_4B4D94:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x218, 4), 0x3);
	mov(mv, x86::mem(ts->esi + 0x5C, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x5D, 1), 0x0);
	mov(mv, x86::mem(ts->esi + 0x5E, 1), 0x0);
	mov(mv, x86::mem(ts->esi + 0x5F, 1), 0x0);
	mov(mv, x86::mem(ts->esi + 0x50, 4), ts->edi);
	if (!ts->eflags.zero) {
        goto loc_4B4DB4;
    }
	mov(mv, x86::mem(ts->esi + 0x5E, 1), 0x1);

loc_4B4DB4:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x5DFA6642);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xA036136A);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	add(&ts->esp, 0x10);
	mov(mv, x86::mem(ts->esi + 0x64, 4), ts->eax);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x124, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xD);
	goto loc_4B4DF0;

loc_4B4DF0:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x791808);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x7917F0);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x38, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->edi - 0xBC, 4), ts->eax);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x40, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_5379C0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x48, 4));
	add(&ts->esp, 0x38);
	add(&ts->edi, 0x4);
	inc(&ts->ebp);
	dec(&ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4B4DF0;
    }
	mov(&ts->ebp, 0x1);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x158, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x22);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_4B4E70:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x7917E0);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x7917C8);
	mov(mv, x86::mem(ts->edi - 0xBC, 4), ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x38, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x40, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_5379C0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x48, 4));
	add(&ts->esp, 0x38);
	add(&ts->edi, 0x4);
	inc(&ts->ebp);
	dec(&ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4B4E70;
    }
	mov(&ts->ebp, 0x1);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x1F4, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x5);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_4B4EF0:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x7917B8);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x7917A0);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x38, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->edi - 0x14, 4), ts->eax);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x40, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_5379C0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x48, 4));
	add(&ts->esp, 0x38);
	add(&ts->edi, 0x4);
	inc(&ts->ebp);
	dec(&ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4B4EF0;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1E0, 4));
	push(mv, &ts->esp, 0xE00AF3F);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1E4, 4));
	push(mv, &ts->esp, 0xE0204F4);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1E8, 4));
	push(mv, &ts->esp, 0xE013D55);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1EC, 4));
	push(mv, &ts->esp, 0xCF4E278C);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1F0, 4));
	push(mv, &ts->esp, 0xCF52681A);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x218, 4));
	add(&ts->esp, 0x28);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4B4FE0;
    }
	game::sub_4FF970(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x8);
	if (ts->eflags.zero) {
        goto loc_4B4FE0;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xFA4C00A9);
	push(mv, &ts->esp, 0xBF8EC481);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	goto loc_4B501F;

loc_4B4FE0:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x4C913F7);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xBF8EC481);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x261A66D0);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x24);

loc_4B501F:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x218, 4), 0x3);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	if (!ts->eflags.zero) {
        goto loc_4B507D;
    }
	push(mv, &ts->esp, 0x261A66CE);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x261A66CF);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x2A7D443D);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xCA67C5A7);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x30);
	goto loc_4B5099;

loc_4B507D:
	push(mv, &ts->esp, 0xE013D55);
	push(mv, &ts->esp, 0xCA67C5A7);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);

loc_4B5099:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x7F042BCD);
	push(mv, &ts->esp, 0x59C69891);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x95E10F41);
	push(mv, &ts->esp, 0x64AFF8D3);
	push(mv, &ts->esp, ts->esi);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x24);
	retn(mv, &ts->esp);
}

void sub_4B5100(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x244);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x60, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x1C, 4));
	mov(&ts->ecx, 0x2);
	or_(&ts->edx, ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->edx);
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0x218, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x208, 4));
	if (!ts->eflags.zero) {
        goto loc_4B514C;
    }
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, 0x40);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50D310(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x60, 4));
	add(&ts->esp, 0xC);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_535FE0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	add(&ts->esp, 0x244);
	retn(mv, &ts->esp);

loc_4B514C:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x58, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43E000(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x60, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_51BD70(ts, mv);
	mov(&ts->ebx, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x60, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x74, 4));
	mov(mv, &ts->ebp, x86::mem(ts->eax + 0x1C, 4));
	add(&ts->esp, 0xC);
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x54, 2), 0x0);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	lea(mv, &ts->esi, x86::mem(ts->esp + 0x54, 4));
	if (ts->eflags.zero) {
        goto loc_4B51B1;
    }
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_4B5190:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->ebx);
	game::sub_50BCE0(ts, mv);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4B51B1;
    }
	add(&ts->esi, 0x2);
	cmp(mv, &ts->eflags, x86::mem(ts->esi, 2), 0x0);
	if (!ts->eflags.zero) {
        goto loc_4B5190;
    }

loc_4B51B1:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x60, 4));
	push(mv, &ts->esp, ts->esi);
	game::sub_535F40(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	add(&ts->esp, 0x244);
	retn(mv, &ts->esp);
}

void sub_4B51D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x208, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DBB0(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4B5256;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x5C, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4B51FB;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4B5256;
    }
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4B520D;
    }

loc_4B51FB:
	push(mv, &ts->esp, 0x783FE5);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x5C, 1), 0x0);
	game::sub_498B40(ts, mv);
	goto loc_4B5241;

loc_4B520D:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	dec(&ts->ecx);
	cmp(&ts->eflags, ts->ecx, ts->edi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4B5233;
    }
	goto loc_4B5220;

loc_4B5220:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x208, 4));
	mov(mv, &ts->al, x86::mem(ts->edx + (ts->ecx) + 0x1, 1));
	add(&ts->edx, ts->ecx);
	inc(&ts->ecx);
	cmp(&ts->eflags, ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->edx, 1), ts->al);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4B5220;
    }

loc_4B5233:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x208, 4));
	mov(mv, x86::mem(ts->edi + (ts->ecx) - 0x1, 1), 0x0);
	dec(mv, x86::mem(ts->esi + 0x54, 4));

loc_4B5241:
	mov(&ts->ecx, ts->esi);
	game::sub_4B5100(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x19);
	push(mv, &ts->esp, ts->edx);
	game::sub_51DE60(ts, mv);
	add(&ts->esp, 0x8);

loc_4B5256:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4B5260(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776418);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	game::sub_551DE0(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	mov(mv, x86::mem(ts->esi, 4), 0x791838);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), 0x791828);
	mov(mv, x86::mem(ts->esi + 0x50, 4), 0x791818);
	mov(mv, x86::mem(ts->esi + 0x54, 4), 0x78FD08);
	game::sub_4991B0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_776410:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

SEH_4E3300:
	mov(&ts->eax, 0x7DEE70);
	goto ___CxxFrameHandler;
}

void sub_4B52D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4B52F0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4B52E8;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4B52E8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4B52F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x791838);
	goto sub_510D40;
}

void sub_4B5300(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776418);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	game::sub_551DE0(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	mov(mv, x86::mem(ts->esi, 4), 0x78F978);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), 0x791828);
	mov(mv, x86::mem(ts->esi + 0x50, 4), 0x791818);
	mov(mv, x86::mem(ts->esi + 0x54, 1), ts->al);
	game::sub_4998E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_776410:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

SEH_4E3300:
	mov(&ts->eax, 0x7DEE70);
	goto ___CxxFrameHandler;
}

void sub_4B5360(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4993E0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4B5378;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4B5378:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4B5380(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_499A70(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4B5398;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4B5398:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4B53A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(ts->eax + 0x50, 1), 0x1);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x58, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_4901D0(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);
}

void sub_4B53C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x83A9D8, 4));
	sub(&ts->esp, 0x1E8);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50D2D0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537950(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x863444, 4));
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B56CF;
    }
	mov(mv, &ts->edi, x86::mem(0x863448, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4B56CF;
    }
	movsx(mv, &ts->eax, x86::mem(ts->edi + 0x18, 2));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->eax);
	game::sub_5D3E40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(&ts->ebx, ts->eax);
	mov(mv, &ts->al, x86::mem(0x83AA1A, 1));
	test(&ts->eflags, ts->al, ts->al);
	setz(ts->eflags, &ts->al);
	neg(&ts->al);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0xF6640E9B);
	add(&ts->eax, 0xB5D640B1);
	push(mv, &ts->esp, ts->eax);
	game::sub_4FFA80(ts, mv);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + 0x98, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x98, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->edx, ts->edx);
	push(mv, &ts->esp, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4B544C;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78454C, 4));

loc_4B544C:
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x791884, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	sub(&ts->esp, 0x8);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 8));
	push(mv, &ts->esp, 0x79187C);
	push(mv, &ts->esp, 0x80C9DAA);
	push(mv, &ts->esp, ts->eax);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x18);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x85AD40);
	game::sub_500C30(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, 0xB54B81A7);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x791864);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x791858);
	game::sub_50B990(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x3C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x58, 4), ts->eax);
	game::sub_57D900(ts, mv);
	add(&ts->esp, 0x2C);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ebx, ts->eax);
	push(mv, &ts->esp, 0x791848);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, 0x88EB00);
	game::sub_5E8670(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, 0x5);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->eax);
	game::sub_57CEF0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	add(&ts->esp, 0x14);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->eax);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->eax + 0xD8, 4), ts->ecx);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->eax);
	game::sub_570FA0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x4B53A0);
	game::sub_57BD70(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_512620(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xDE075B62);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	push(mv, &ts->esp, 0x17EA64F8);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x100, 4));
	push(mv, &ts->esp, 0x100);
	push(mv, &ts->esp, ts->eax);
	game::sub_4FFA50(ts, mv);
	mov(&ts->edx, 0x268D063C);
	add(&ts->esp, 0x14);
	mov(&ts->ebx, 0x9B39C122);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edx);
	mov(mv, &ts->al, x86::mem(ts->edi + 0x34, 1));
	cmp(&ts->eflags, ts->al, 0x3);
	mov(&ts->cl, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4B556B;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0xD, 1), ts->cl);
	if (!ts->eflags.zero) {
        goto loc_4B55E4;
    }

loc_4B556B:
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0xD, 1), ts->cl);
	if (ts->eflags.zero) {
        goto loc_4B55E4;
    }
	cmp(&ts->eflags, ts->al, 0x2);
	if (!ts->eflags.zero) {
        goto loc_4B5586;
    }
	mov(&ts->ebx, 0x80B8267C);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0xB46377BC);
	goto def_4B559B;

loc_4B5586:
	cmp(&ts->eflags, ts->al, ts->cl);
	if (!ts->eflags.zero) {
        goto def_4B559B;
    }
	movsx(mv, &ts->eax, x86::mem(ts->edi + 0xF, 1));
	cmp(&ts->eflags, ts->eax, 0x5);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4B559B;
    }
	jmp(x86::mem(0x4B56D8, 4));

loc_4B55A2:
	mov(&ts->ebx, 0xF037A7B);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edx);
	goto def_4B559B;

loc_4B55B0:
	mov(&ts->ebx, 0x7216A68);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0xBA613729);
	goto def_4B559B;

loc_4B55BF:
	mov(&ts->ebx, 0xC5F7902C);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0xFDA6758);
	goto def_4B559B;

loc_4B55CE:
	mov(&ts->ebx, 0x3D6A70E6);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x40C91BA7);
	goto def_4B559B;

loc_4B55DD:
	mov(&ts->ebx, 0xB5205101);
	goto loc_4B5631;

loc_4B55E4:
	movsx(mv, &ts->eax, x86::mem(ts->edi + 0xF, 1));
	cmp(&ts->eflags, ts->eax, 0x5);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4B559B;
    }
	jmp(x86::mem(0x4B56F0, 4));

loc_4B55F4:
	mov(&ts->ebx, 0x9B39C122);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edx);
	goto def_4B559B;

loc_4B55FF:
	mov(&ts->ebx, 0x9EC5F82F);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0xBA613729);
	goto def_4B559B;

loc_4B560E:
	mov(&ts->ebx, 0x57F833AD);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0xFDA6758);
	goto def_4B559B;

loc_4B561D:
	mov(&ts->ebx, 0xE45A7387);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x40C91BA7);
	goto def_4B559B;

loc_4B562C:
	mov(&ts->ebx, 0x3A10A7C2);

loc_4B5631:
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x59ECB2C2);

def_4B559B:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xF365871);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ecx);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x108, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x2C167533);
	push(mv, &ts->esp, ts->eax);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x2C, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x15E1351B);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x30);
	push(mv, &ts->esp, 0x40);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x38, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_512820(ts, mv);
	push(mv, &ts->esp, 0x9F29D70D);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x78, 4));
	push(mv, &ts->esp, 0x80);
	push(mv, &ts->esp, ts->eax);
	game::sub_4FFA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x40, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x84, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0xFECED617);
	push(mv, &ts->esp, ts->eax);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x1C);
	pop(mv, &ts->esp, ts->ebx);

loc_4B56CF:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x1E8);
	retn(mv, &ts->esp);
}

void sub_4B5710(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_499DD0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4B5728;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4B5728:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4B5730(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x88, 4));
	mov(mv, &ts->ecx, x86::mem(0x838574, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	game::sub_5107D0(ts, mv);
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4B57AE;
    }
	push(mv, &ts->esp, 0x1);
	game::sub_48B1E0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B57AE;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x44, 4));
	add(&ts->eax, 0x44);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B576A;
    }
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4B576A;
    }
	add(&ts->ecx, 0xFFFFFFFC);
	goto loc_4B576C;

loc_4B576A:
	xor_(&ts->ecx, ts->ecx);

loc_4B576C:
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0xC, 4), 0x14);
	if (!ts->eflags.zero) {
        goto loc_4B57AE;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B5783;
    }
	mov(&ts->eax, ts->ecx);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B5783;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax - 0x4, 4));
	goto loc_4B5785;

loc_4B5783:
	xor_(&ts->ecx, ts->ecx);

loc_4B5785:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x28, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_4463C0(ts, mv);

loc_4B57AE:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4B57B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->bl, x86::mem(ts->esp + 0xC, 1));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x78, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4B57CE;
    }
	test(&ts->eflags, ts->bl, ts->bl);
	if (ts->eflags.zero) {
        goto loc_4B57CE;
    }
	mov(&ts->ecx, 0x8364F4);
	game::sub_510A70(ts, mv);

loc_4B57CE:
	game::sub_50D510(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B5809;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x7C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(0x838574, 4));
	add(&ts->edi, ts->edx);
	game::sub_430660(ts, mv);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4B57FD;
    }
	mov(mv, &ts->ecx, x86::mem(0x838574, 4));
	game::sub_430660(ts, mv);
	mov(&ts->edi, ts->eax);
	dec(&ts->edi);

loc_4B57FD:
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4B5803;
    }
	xor_(&ts->edi, ts->edi);

loc_4B5803:
	mov(mv, x86::mem(ts->esi + 0x7C, 4), ts->edi);
	push(mv, &ts->esp, ts->edi);
	goto loc_4B5822;

loc_4B5809:
	game::sub_510C40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x838574, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_510840(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x78, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4B5830;
    }
	push(mv, &ts->esp, ts->eax);

loc_4B5822:
	mov(mv, &ts->ecx, x86::mem(0x838574, 4));
	game::sub_510880(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x78, 4), ts->eax);

loc_4B5830:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x78, 4));
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x80, 4));
	push(mv, &ts->esp, ts->edi);
	game::sub_510680(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_4B5730(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x90, 4));
	mov(mv, &ts->ecx, x86::mem(0x838574, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_510800(ts, mv);
	test(&ts->eflags, ts->bl, ts->bl);
	if (ts->eflags.zero) {
        goto loc_4B5874;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x84, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, 0x8364F4);
	game::sub_523BC0(ts, mv);

loc_4B5874:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x8);
}

void sub_4B5880(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x791898);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x791888);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esp + 0x30, 1));
	add(&ts->esp, 0x20);
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->al, ts->bl);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F9D4);
	if (!ts->eflags.zero) {
        goto loc_4B590D;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xB6638240);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F9D4);
	push(mv, &ts->esp, 0x824FA72F);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x20);
	mov(&ts->ecx, 0x8364F4);
	game::sub_510A70(ts, mv);
	mov(&ts->ecx, 0x8364F4);
	game::sub_523B40(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

loc_4B590D:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x2253BD97);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xBC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xD8, 4), ts->ebx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->esi + 0xD4, 1), ts->bl);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC0, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xCC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xDC, 4), ts->ebx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->esi + 0xD5, 1), ts->bl);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC4, 4));
	add(&ts->esp, 0x40);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xD0, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x18);
	mov(mv, x86::mem(ts->esi + 0xE0, 4), ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0xD6, 1), ts->bl);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_4B59D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x99, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4B5A6E;
    }
	mov(&ts->ecx, 0x832DAC);
	game::sub_488B80(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4B5A6E;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(0x7FA29C, 1), 0x1);
	game::sub_4B5880(ts, mv);
	mov(mv, &ts->edi, x86::mem(0x832DB4, 4));
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, 0x832DAC);
	game::sub_5BA030(ts, mv);
	mov(&ts->ebx, ts->eax);
	game::sub_523C70(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x836498, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4B5A45;
    }
	mov(mv, x86::mem(ts->ecx + 0x14, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x836498, 4));
	mov(mv, x86::mem(ts->eax + 0x50, 4), 0x2);
	mov(mv, &ts->ecx, x86::mem(0x836498, 4));
	mov(mv, x86::mem(ts->ecx + 0x1C, 4), ts->edi);
	mov(mv, &ts->edx, x86::mem(0x836498, 4));
	mov(mv, x86::mem(ts->edx + 0x54, 4), ts->ebx);

loc_4B5A45:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x36FAD7);
	push(mv, &ts->esp, 0x172176E8);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xCB1);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->eax);
	game::sub_4A3100(ts, mv);
	add(&ts->esp, 0x1C);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x99, 1), 0x0);
	pop(mv, &ts->esp, ts->ebx);

loc_4B5A6E:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4B5A70(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0x911AB364);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4B5A87;
    }
	cmp(&ts->eflags, ts->eax, 0xB4623F67);
	if (!ts->eflags.zero) {
        goto loc_4B5AC2;
    }

loc_4B5A87:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xA);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50D150(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x8900AC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x4, 4));
	add(&ts->esp, 0xC);
	add(&ts->ecx, 0x40);
	game::sub_592500(ts, mv);
	mov(&ts->ecx, 0x85EF50);
	game::sub_5295B0(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_49A460(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x50, 4), 0x4CEA70);

loc_4B5AC2:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);
}

void sub_4B5AD0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8900AC, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x554, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0x9120409E);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4B5B9D;
    }
	if (ts->eflags.zero) {
        goto loc_4B5BAF;
    }
	cmp(&ts->eflags, ts->eax, 0x72619778);
	if (ts->eflags.zero) {
        goto loc_4B5B5A;
    }
	cmp(&ts->eflags, ts->eax, 0x911AB364);
	if (ts->eflags.zero) {
        goto loc_4B5C10;
    }
	cmp(&ts->eflags, ts->eax, 0x911C0A4B);
	if (!ts->eflags.zero) {
        goto loc_4B5C60;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0xEB, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, 0x3F800000);
	if (ts->eflags.zero) {
        goto loc_4B5B40;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0xEB, 1), 0x0);
	game::sub_61F820(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4B5B40:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0xEB, 1), 0x1);
	game::sub_61F820(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4B5B5A:
	mov(mv, &ts->al, x86::mem(ts->esi + 0xE9, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, 0x3F800000);
	if (ts->eflags.zero) {
        goto loc_4B5B83;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0xE9, 1), 0x0);
	game::sub_61F820(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4B5B83:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0xE9, 1), 0x1);
	game::sub_61F820(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4B5B9D:
	cmp(&ts->eflags, ts->eax, 0xB4623F67);
	if (ts->eflags.zero) {
        goto loc_4B5C10;
    }
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_4B5C60;
    }

loc_4B5BAF:
	mov(mv, &ts->al, x86::mem(ts->esi + 0xEA, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, 0x3F800000);
	if (ts->eflags.zero) {
        goto loc_4B5BE7;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x2);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0xEA, 1), 0x0);
	game::sub_61F820(ts, mv);
	push(mv, &ts->esp, 0x3F800000);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x3);
	push(mv, &ts->esp, ts->edi);
	game::sub_61F820(ts, mv);
	add(&ts->esp, 0x20);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4B5BE7:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x2);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0xEA, 1), 0x1);
	game::sub_61F820(ts, mv);
	push(mv, &ts->esp, 0x3F800000);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x3);
	push(mv, &ts->esp, ts->edi);
	game::sub_61F820(ts, mv);
	add(&ts->esp, 0x20);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4B5C10:
	mov(mv, x86::mem(0x836353, 1), 0x0);
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->edi);
	game::sub_5EBA30(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x18, 4));
	mov(mv, &ts->ebx, x86::mem(ts->eax, 4));
	mov(mv, x86::mem(ts->ebp + 0x8, 4), ts->eax);
	game::sub_5EB430(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	call(ts, mv, x86::mem(ts->ebx + 0x34, 4));
	mov(mv, &ts->edi, x86::mem(ts->edi + 0x30, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x1C, 4));
	mov(&ts->ecx, 0x85EF50);
	game::sub_5295B0(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_49A460(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x50, 4), 0x4CEA70);
	pop(mv, &ts->esp, ts->ebx);

loc_4B5C60:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);
}

void sub_4B5C70(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_499F10(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50D150(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xBC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	xor_(&ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xD8, 4), ts->ebx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->esi + 0xD4, 1), ts->bl);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC0, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xCC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xDC, 4), ts->ebx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->esi + 0xD5, 1), ts->bl);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	add(&ts->esp, 0x44);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, 0x1335F0);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xD0, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xE0, 4), 0x911AB364);
	add(&ts->esp, 0x14);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0xD6, 1), 0x1);
	game::sub_49A2E0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x50, 4), 0x4B5A70);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x85EF50);
	pop(mv, &ts->esp, ts->ebx);
	goto sub_529580;
}

void sub_4B5D80(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xBC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	xor_(&ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xD8, 4), ts->ebx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->esi + 0xD4, 1), ts->bl);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC0, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xCC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xDC, 4), ts->ebx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->esi + 0xD5, 1), ts->bl);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x3C);
	push(mv, &ts->esp, 0x1335F0);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xD0, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xE0, 4), 0x911AB364);
	add(&ts->esp, 0x14);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0xD6, 1), 0x1);
	game::sub_49A3A0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x50, 4), 0x4B5AD0);
	mov(&ts->ecx, 0x85EF50);
	mov(mv, x86::mem(0x836353, 1), 0x1);
	game::sub_529580(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8900AC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	game::sub_5EBA30(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8900AC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x30, 4));
	push(mv, &ts->esp, 0x3F4CCCCD);
	game::sub_5EB8F0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_4B5EA0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50D150(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x78, 4));
	add(&ts->esp, 0xC);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x80, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_510710(ts, mv);
	mov(&ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	goto sub_4B5730;
}

void sub_4B5ED0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776418);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x10, 4), ts->esi);
	game::sub_551DE0(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->esi, 4), 0x7918A8);
	mov(mv, &ts->ecx, x86::mem(0x83A9D8, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), 0x0);
	game::sub_50D2D0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537950(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_776410:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

SEH_4E3300:
	mov(&ts->eax, 0x7DEE70);
	goto ___CxxFrameHandler;
}

void sub_4B5F40(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4B5F60(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4B5F58;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4B5F58:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4B5F60(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x7918A8);
	goto sub_510D40;
}

void sub_4B5F70(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F21C);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x28, 1), 0x1);
	game::sub_51CF70(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F21C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4B5FA0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x791DF4);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x28, 1), 0x0);
	game::sub_51CF70(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x791DF4);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4B5FD0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F21C);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x28, 1), 0x1);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);
}

void sub_4B5FF0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x791DF4);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x28, 1), 0x0);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);
}

void sub_4B6010(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->bl, x86::mem(0x844AD8, 1));
	test(&ts->eflags, ts->bl, ts->bl);
	if (ts->eflags.zero) {
        goto loc_4B605C;
    }
	mov(&ts->ecx, 0x83A9D0);
	game::sub_52A4C0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4B6031;
    }
	cmp(mv, &ts->eflags, ts->bl, x86::mem(0x836360, 1));
	if (ts->eflags.zero) {
        goto loc_4B605C;
    }

loc_4B6031:
	mov(mv, &ts->eax, x86::mem(0x83635C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x2042);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4A3100(ts, mv);
	add(&ts->esp, 0x1C);
	mov(&ts->ecx, 0x83A9D0);
	pop(mv, &ts->esp, ts->ebx);
	goto sub_5032C0;

loc_4B605C:
	mov(mv, &ts->edx, x86::mem(0x83635C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);
	mov(&ts->ecx, 0x83A9D0);
	pop(mv, &ts->esp, ts->ebx);
	goto sub_5032C0;
}

void sub_4B6080(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_543D40(ts, mv);
	cmp(&ts->eflags, ts->edi, 0x911AB364);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4B615A;
    }
	if (ts->eflags.zero) {
        goto loc_4B611F;
    }
	cmp(&ts->eflags, ts->edi, 0xC407210);
	if (ts->eflags.zero) {
        goto loc_4B60D7;
    }
	cmp(&ts->eflags, ts->edi, 0x1FAB5998);
	if (!ts->eflags.zero) {
        goto def_4B6181;
    }
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(0x83AA04, 4), 0x5);
	game::sub_538CA0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4B60D7:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537D40(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto def_4B6181;
    }
	cmp(mv, &ts->eflags, x86::mem(0x83AA04, 4), 0x6);
	if (ts->eflags.zero) {
        goto def_4B6181;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C60(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4B611F:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537D40(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto def_4B6181;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C60(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4B615A:
	cmp(&ts->eflags, ts->edi, 0xE1FDE1D1);
	if (!ts->eflags.zero) {
        goto def_4B6181;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x13C, 4));
	cmp(&ts->eflags, ts->eax, 0xC407210);
	if (!ts->eflags.zero) {
        goto loc_4B61E8;
    }
	mov(mv, &ts->eax, x86::mem(0x83AA04, 4));
	cmp(&ts->eflags, ts->eax, 0x8);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4B6181;
    }
	jmp(x86::mem(0x4B620C, 4));

loc_4B6188:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78FA50);
	push(mv, &ts->esp, ts->edx);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4B61A0:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x793DCC);
	push(mv, &ts->esp, ts->eax);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4B61B8:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x793DB8);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4B61D0:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x793DAC);
	push(mv, &ts->esp, ts->edx);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4B61E8:
	cmp(&ts->eflags, ts->eax, 0x911AB364);
	if (!ts->eflags.zero) {
        goto def_4B6181;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_50B8C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_4B6010(ts, mv);
	add(&ts->esp, 0xC);

def_4B6181:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);
}

void sub_4B6230(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x773184);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x48);
	mov(&ts->esi, ts->ecx);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4B6282;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xE76CD783);
	push(mv, &ts->esp, 0xF37AF144);
	mov(&ts->ecx, ts->edi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7918B8);
	goto loc_4B6284;

loc_4B6282:
	xor_(&ts->edi, ts->edi);

loc_4B6284:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	or_(&ts->ebx, 0xFFFFFFFF);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));
	push(mv, &ts->esp, 0x48);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4B62CA;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x4204D527);
	push(mv, &ts->esp, 0x8A006328);
	mov(&ts->ecx, ts->edi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7918C0);
	goto loc_4B62CC;

loc_4B62CA:
	xor_(&ts->edi, ts->edi);

loc_4B62CC:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	push(mv, &ts->esp, 0x48);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x2);
	if (ts->eflags.zero) {
        goto loc_4B630F;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xD0CF6EE1);
	push(mv, &ts->esp, 0x4DF98FB2);
	mov(&ts->ecx, ts->edi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7918C8);
	goto loc_4B6311;

loc_4B630F:
	xor_(&ts->edi, ts->edi);

loc_4B6311:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));
	push(mv, &ts->esp, 0x48);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x3);
	if (ts->eflags.zero) {
        goto loc_4B6354;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xF760EABE);
	push(mv, &ts->esp, 0xD708EFEF);
	mov(&ts->ecx, ts->edi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7918D0);
	goto loc_4B6356;

loc_4B6354:
	xor_(&ts->edi, ts->edi);

loc_4B6356:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	push(mv, &ts->esp, 0x48);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x4);
	if (ts->eflags.zero) {
        goto loc_4B6399;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x4DC6DB5);
	push(mv, &ts->esp, 0xA04A7B26);
	mov(&ts->ecx, ts->edi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7918D8);
	goto loc_4B639B;

loc_4B6399:
	xor_(&ts->edi, ts->edi);

loc_4B639B:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));
	cmp(mv, &ts->eflags, x86::mem(0x8500D0, 4), 0xC);
	push(mv, &ts->esp, 0x48);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4B6437;
    }
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x5);
	if (ts->eflags.zero) {
        goto loc_4B63EB;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xDCFB6B36);
	push(mv, &ts->esp, 0xC52CCBF6);
	mov(&ts->ecx, ts->edi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7918E0);
	goto loc_4B63ED;

loc_4B63EB:
	xor_(&ts->edi, ts->edi);

loc_4B63ED:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	push(mv, &ts->esp, 0x48);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x6);
	if (ts->eflags.zero) {
        goto loc_4B64C9;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x905101F);
	push(mv, &ts->esp, 0x51009E20);
	mov(&ts->ecx, ts->edi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7918F0);
	goto loc_4B64CB;

loc_4B6437:
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x200);
	if (!ts->eflags.zero) {
        goto loc_4B6494;
    }
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x7);
	if (ts->eflags.zero) {
        goto loc_4B6484;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x19889765);
	push(mv, &ts->esp, 0x83070A37);
	mov(&ts->ecx, ts->edi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7918E8);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	goto loc_4B64D7;

loc_4B6484:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	xor_(&ts->edi, ts->edi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	goto loc_4B64D7;

loc_4B6494:
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x8);
	if (ts->eflags.zero) {
        goto loc_4B64C9;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7D347E05);
	push(mv, &ts->esp, 0x83070A37);
	mov(&ts->ecx, ts->edi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7918E8);
	goto loc_4B64CB;

loc_4B64C9:
	xor_(&ts->edi, ts->edi);

loc_4B64CB:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));

loc_4B64D7:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4C, 4));
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50B8A0(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->ebx + 0x20, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_7730D0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x793E44);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7730E4:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x793E38);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7730F8:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x793E2C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_77310C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x793E20);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773120:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x793E10);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773134:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x793E04);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773148:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x793DF8);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_77315C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x793DEC);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773170:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x793DEC);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4B6230:
	mov(&ts->eax, 0x7DF600);
	goto ___CxxFrameHandler;
}

void sub_4B6510(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77335C);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(0x8764D0, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	or_(&ts->ebp, 0xFFFFFFFF);
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4B661A;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x98);
	game::j__malloc(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4B6588;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	game::sub_51E840(ts, mv);
	mov(mv, x86::mem(ts->ebx, 4), 0x7920E0);
	goto loc_4B658A;

loc_4B6588:
	xor_(&ts->ebx, ts->ebx);

loc_4B658A:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ebp);
	game::sub_54F410(ts, mv);
	push(mv, &ts->esp, 0x7D3930E7);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, 0x5E);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DDF0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B6619;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x4335C04E);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->ebx + 0x24, 4), ts->eax);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0xC);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4B65FD;
    }
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x790BD8);
	goto loc_4B65FF;

loc_4B65FD:
	xor_(&ts->edi, ts->edi);

loc_4B65FF:
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebp);
	game::sub_54EE40(ts, mv);
	mov(mv, x86::mem(ts->ebx + 0x1C, 4), 0xC37C0000);
	mov(mv, x86::mem(ts->ebx + 0x20, 4), 0xC1D00000);

loc_4B6619:
	pop(mv, &ts->esp, ts->ebx);

loc_4B661A:
	mov(mv, &ts->eax, x86::mem(0x8764D4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B667C;
    }
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x2);
	if (ts->eflags.zero) {
        goto loc_4B666C;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x792130);
	goto loc_4B666E;

loc_4B666C:
	xor_(&ts->edi, ts->edi);

loc_4B666E:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebp);
	game::sub_54EF30(ts, mv);

loc_4B667C:
	mov(mv, &ts->eax, x86::mem(0x8764D8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B66E1;
    }
	push(mv, &ts->esp, 0x98);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x3);
	if (ts->eflags.zero) {
        goto loc_4B66D1;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E840(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x792178);
	goto loc_4B66D3;

loc_4B66D1:
	xor_(&ts->edi, ts->edi);

loc_4B66D3:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebp);
	game::sub_54F410(ts, mv);

loc_4B66E1:
	mov(mv, &ts->eax, x86::mem(0x8764DC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B6743;
    }
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x4);
	if (ts->eflags.zero) {
        goto loc_4B6733;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7921C8);
	goto loc_4B6735;

loc_4B6733:
	xor_(&ts->edi, ts->edi);

loc_4B6735:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebp);
	game::sub_54EF30(ts, mv);

loc_4B6743:
	mov(mv, &ts->eax, x86::mem(0x876510, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B67A5;
    }
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x5);
	if (ts->eflags.zero) {
        goto loc_4B6795;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x792210);
	goto loc_4B6797;

loc_4B6795:
	xor_(&ts->edi, ts->edi);

loc_4B6797:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebp);
	game::sub_54EF30(ts, mv);

loc_4B67A5:
	mov(mv, &ts->eax, x86::mem(0x8764E8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B6807;
    }
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x6);
	if (ts->eflags.zero) {
        goto loc_4B67F7;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x792258);
	goto loc_4B67F9;

loc_4B67F7:
	xor_(&ts->edi, ts->edi);

loc_4B67F9:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebp);
	game::sub_54EF30(ts, mv);

loc_4B6807:
	mov(mv, &ts->eax, x86::mem(0x87650C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B686C;
    }
	push(mv, &ts->esp, 0x98);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x7);
	if (ts->eflags.zero) {
        goto loc_4B685C;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E840(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7922A0);
	goto loc_4B685E;

loc_4B685C:
	xor_(&ts->edi, ts->edi);

loc_4B685E:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebp);
	game::sub_54F410(ts, mv);

loc_4B686C:
	mov(mv, &ts->eax, x86::mem(0x8764EC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B68D1;
    }
	push(mv, &ts->esp, 0x98);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x8);
	if (ts->eflags.zero) {
        goto loc_4B68C1;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E840(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7922F0);
	goto loc_4B68C3;

loc_4B68C1:
	xor_(&ts->edi, ts->edi);

loc_4B68C3:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebp);
	game::sub_54F410(ts, mv);

loc_4B68D1:
	mov(mv, &ts->eax, x86::mem(0x8764F8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B6933;
    }
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x9);
	if (ts->eflags.zero) {
        goto loc_4B6923;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x792340);
	goto loc_4B6925;

loc_4B6923:
	xor_(&ts->edi, ts->edi);

loc_4B6925:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebp);
	game::sub_54EF30(ts, mv);

loc_4B6933:
	mov(mv, &ts->eax, x86::mem(0x8764FC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B6995;
    }
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0xA);
	if (ts->eflags.zero) {
        goto loc_4B6985;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x792388);
	goto loc_4B6987;

loc_4B6985:
	xor_(&ts->edi, ts->edi);

loc_4B6987:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebp);
	game::sub_54EF30(ts, mv);

loc_4B6995:
	mov(mv, &ts->eax, x86::mem(0x876504, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B69F7;
    }
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0xB);
	if (ts->eflags.zero) {
        goto loc_4B69E7;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7923D0);
	goto loc_4B69E9;

loc_4B69E7:
	xor_(&ts->edi, ts->edi);

loc_4B69E9:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebp);
	game::sub_54EF30(ts, mv);

loc_4B69F7:
	mov(mv, &ts->eax, x86::mem(0x8764F4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B6A59;
    }
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0xC);
	if (ts->eflags.zero) {
        goto loc_4B6A49;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x792418);
	goto loc_4B6A4B;

loc_4B6A49:
	xor_(&ts->edi, ts->edi);

loc_4B6A4B:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebp);
	game::sub_54EF30(ts, mv);

loc_4B6A59:
	mov(mv, &ts->eax, x86::mem(0x8764F0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B6ABB;
    }
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0xD);
	if (ts->eflags.zero) {
        goto loc_4B6AAB;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x792460);
	goto loc_4B6AAD;

loc_4B6AAB:
	xor_(&ts->edi, ts->edi);

loc_4B6AAD:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebp);
	game::sub_54EF30(ts, mv);

loc_4B6ABB:
	mov(mv, &ts->eax, x86::mem(0x876508, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B6B1D;
    }
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0xE);
	if (ts->eflags.zero) {
        goto loc_4B6B0D;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7924F8);
	goto loc_4B6B0F;

loc_4B6B0D:
	xor_(&ts->edi, ts->edi);

loc_4B6B0F:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebp);
	game::sub_54EF30(ts, mv);

loc_4B6B1D:
	mov(mv, &ts->eax, x86::mem(0x876520, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B6B82;
    }
	push(mv, &ts->esp, 0x98);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0xF);
	if (ts->eflags.zero) {
        goto loc_4B6B72;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E840(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7924A8);
	goto loc_4B6B74;

loc_4B6B72:
	xor_(&ts->edi, ts->edi);

loc_4B6B74:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebp);
	game::sub_54F410(ts, mv);

loc_4B6B82:
	mov(mv, &ts->eax, x86::mem(0x87651C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B6BE4;
    }
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x10);
	if (ts->eflags.zero) {
        goto loc_4B6BD4;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x792540);
	goto loc_4B6BD6;

loc_4B6BD4:
	xor_(&ts->edi, ts->edi);

loc_4B6BD6:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebp);
	game::sub_54EF30(ts, mv);

loc_4B6BE4:
	mov(mv, &ts->eax, x86::mem(0x876524, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B6C46;
    }
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x11);
	if (ts->eflags.zero) {
        goto loc_4B6C36;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x792588);
	goto loc_4B6C38;

loc_4B6C36:
	xor_(&ts->edi, ts->edi);

loc_4B6C38:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebp);
	game::sub_54EF30(ts, mv);

loc_4B6C46:
	mov(mv, &ts->eax, x86::mem(0x876514, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B6CA8;
    }
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x12);
	if (ts->eflags.zero) {
        goto loc_4B6C98;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7925D0);
	goto loc_4B6C9A;

loc_4B6C98:
	xor_(&ts->edi, ts->edi);

loc_4B6C9A:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebp);
	game::sub_54EF30(ts, mv);

loc_4B6CA8:
	mov(mv, &ts->eax, x86::mem(0x876518, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B6D0A;
    }
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x13);
	if (ts->eflags.zero) {
        goto loc_4B6CFA;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x792618);
	goto loc_4B6CFC;

loc_4B6CFA:
	xor_(&ts->edi, ts->edi);

loc_4B6CFC:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebp);
	game::sub_54EF30(ts, mv);

loc_4B6D0A:
	mov(mv, &ts->eax, x86::mem(0x876528, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B6D6C;
    }
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x14);
	if (ts->eflags.zero) {
        goto loc_4B6D5C;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x792660);
	goto loc_4B6D5E;

loc_4B6D5C:
	xor_(&ts->edi, ts->edi);

loc_4B6D5E:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebp);
	game::sub_54EF30(ts, mv);

loc_4B6D6C:
	mov(mv, &ts->eax, x86::mem(0x876530, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B6DD1;
    }
	push(mv, &ts->esp, 0x98);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x15);
	if (ts->eflags.zero) {
        goto loc_4B6DC1;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E840(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x791FC8);
	goto loc_4B6DC3;

loc_4B6DC1:
	xor_(&ts->edi, ts->edi);

loc_4B6DC3:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebp);
	game::sub_54F410(ts, mv);

loc_4B6DD1:
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x16);
	if (ts->eflags.zero) {
        goto loc_4B6E1A;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x792018);
	goto loc_4B6E1C;

loc_4B6E1A:
	xor_(&ts->edi, ts->edi);

loc_4B6E1C:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebp);
	game::sub_54EF30(ts, mv);
	push(mv, &ts->esp, 0x793FC0);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78FA8C);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_773190:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x793FAC);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7731A4:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x793F9C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7731B8:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x793F88);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7731CC:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x793F78);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7731E0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x793F68);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7731F4:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x793F54);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773208:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x793F44);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_77321C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x793F34);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773230:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x793F1C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773244:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x793F0C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773258:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x793EFC);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_77326C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x793EE8);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773280:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x793ED8);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773294:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x793EC8);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7732A8:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x793EB8);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7732BC:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x793EB0);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7732D0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x793EA4);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7732E4:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x793E94);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7732F8:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x793E84);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_77330C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x793E74);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773320:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x793E6C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773334:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x793E58);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773348:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x793E4C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4B6510:
	mov(&ts->eax, 0x7DF6D4);
	goto ___CxxFrameHandler;
}

void sub_4B6E60(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x773410);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x98);
	mov(&ts->esi, ts->ecx);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4B6EC7;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E840(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7918F8);
	goto loc_4B6EC9;

loc_4B6EC7:
	xor_(&ts->edi, ts->edi);

loc_4B6EC9:
	push(mv, &ts->esp, 0x1);
	or_(&ts->ebx, 0xFFFFFFFF);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebx);
	game::sub_54F410(ts, mv);
	push(mv, &ts->esp, 0x98);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4B6F26;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E840(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x791A88);
	goto loc_4B6F28;

loc_4B6F26:
	xor_(&ts->edi, ts->edi);

loc_4B6F28:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebx);
	game::sub_54F410(ts, mv);
	push(mv, &ts->esp, 0x98);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x2);
	if (ts->eflags.zero) {
        goto loc_4B6F82;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E840(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x791AD8);
	goto loc_4B6F84;

loc_4B6F82:
	xor_(&ts->edi, ts->edi);

loc_4B6F84:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebx);
	game::sub_54F410(ts, mv);
	push(mv, &ts->esp, 0x98);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x3);
	if (ts->eflags.zero) {
        goto loc_4B6FDE;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E840(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x791A38);
	goto loc_4B6FE0;

loc_4B6FDE:
	xor_(&ts->edi, ts->edi);

loc_4B6FE0:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebx);
	game::sub_54F410(ts, mv);
	push(mv, &ts->esp, 0x98);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x4);
	if (ts->eflags.zero) {
        goto loc_4B703A;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E840(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x791948);
	goto loc_4B703C;

loc_4B703A:
	xor_(&ts->edi, ts->edi);

loc_4B703C:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebx);
	game::sub_54F410(ts, mv);
	push(mv, &ts->esp, 0x98);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x5);
	if (ts->eflags.zero) {
        goto loc_4B7096;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E840(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x791998);
	goto loc_4B7098;

loc_4B7096:
	xor_(&ts->edi, ts->edi);

loc_4B7098:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebx);
	game::sub_54F410(ts, mv);
	push(mv, &ts->esp, 0x98);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x6);
	if (ts->eflags.zero) {
        goto loc_4B70F2;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E840(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7919E8);
	goto loc_4B70F4;

loc_4B70F2:
	xor_(&ts->edi, ts->edi);

loc_4B70F4:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebx);
	game::sub_54F410(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x8);
	if (ts->eflags.zero) {
        goto loc_4B7164;
    }
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x7);
	if (ts->eflags.zero) {
        goto loc_4B7154;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x791B28);
	goto loc_4B7156;

loc_4B7154:
	xor_(&ts->edi, ts->edi);

loc_4B7156:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebx);
	game::sub_54EF30(ts, mv);

loc_4B7164:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0xF6D18624);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_773370:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x794028);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773384:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x794018);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773398:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x794008);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7733AC:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x793FFC);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7733C0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x793FEC);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7733D4:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x793FE0);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7733E8:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x793FD4);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7733FC:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x793FC8);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4B6E60:
	mov(&ts->eax, 0x7DF730);
	goto ___CxxFrameHandler;
}

void sub_4B7180(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x773E30);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x54);
	mov(&ts->esi, ts->ecx);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4B71E3;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x791F30);
	mov(&ts->ebx, ts->edi);

loc_4B71E3:
	push(mv, &ts->esp, 0x1);
	or_(&ts->ebp, 0xFFFFFFFF);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ebp);
	game::sub_54EF30(ts, mv);
	push(mv, &ts->esp, 0x9C);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4B724A;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E840(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x791F78);
	mov(mv, x86::mem(ts->edi + 0x98, 4), 0x0);
	goto loc_4B724C;

loc_4B724A:
	xor_(&ts->edi, ts->edi);

loc_4B724C:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ebp);
	game::sub_54F410(ts, mv);
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->edi + 0x98, 4), ts->ebx);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x2);
	if (ts->eflags.zero) {
        goto loc_4B729B;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x792060);
	goto loc_4B729D;

loc_4B729B:
	xor_(&ts->edi, ts->edi);

loc_4B729D:
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebp);
	game::sub_54EE40(ts, mv);
	push(mv, &ts->esp, 0x38);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x3);
	if (ts->eflags.zero) {
        goto loc_4B72E4;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7920A0);
	goto loc_4B72E6;

loc_4B72E4:
	xor_(&ts->edi, ts->edi);

loc_4B72E6:
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebp);
	game::sub_54EE40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_773DE0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x794074);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773DF4:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x794060);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773E08:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x794048);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773E1C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x794034);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4C36C0:
	mov(&ts->eax, 0x7DF76C);
	goto ___CxxFrameHandler;
}

void sub_4B7310(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7734AC);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x54);
	mov(&ts->esi, ts->ecx);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4B7374;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x791C00);
	goto loc_4B7376;

loc_4B7374:
	xor_(&ts->edi, ts->edi);

loc_4B7376:
	push(mv, &ts->esp, 0x1);
	or_(&ts->ebx, 0xFFFFFFFF);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebx);
	game::sub_54EF30(ts, mv);
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4B73D0;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x791C48);
	goto loc_4B73D2;

loc_4B73D0:
	xor_(&ts->edi, ts->edi);

loc_4B73D2:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebx);
	game::sub_54EF30(ts, mv);
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x2);
	if (ts->eflags.zero) {
        goto loc_4B7429;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x791C90);
	goto loc_4B742B;

loc_4B7429:
	xor_(&ts->edi, ts->edi);

loc_4B742B:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebx);
	game::sub_54EF30(ts, mv);
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x3);
	if (ts->eflags.zero) {
        goto loc_4B7482;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x791D20);
	goto loc_4B7484;

loc_4B7482:
	xor_(&ts->edi, ts->edi);

loc_4B7484:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebx);
	game::sub_54EF30(ts, mv);
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x4);
	if (ts->eflags.zero) {
        goto loc_4B74DB;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x791D68);
	goto loc_4B74DD;

loc_4B74DB:
	xor_(&ts->edi, ts->edi);

loc_4B74DD:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebx);
	game::sub_54EF30(ts, mv);
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x5);
	if (ts->eflags.zero) {
        goto loc_4B7534;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x791CD8);
	goto loc_4B7536;

loc_4B7534:
	xor_(&ts->edi, ts->edi);

loc_4B7536:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebx);
	game::sub_54EF30(ts, mv);
	push(mv, &ts->esp, 0x58);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x6);
	if (ts->eflags.zero) {
        goto loc_4B758D;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x793D68);
	goto loc_4B758F;

loc_4B758D:
	xor_(&ts->edi, ts->edi);

loc_4B758F:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebx);
	game::sub_54EF30(ts, mv);
	mov(mv, &ts->cl, x86::mem(0x844AD8, 1));
	mov(mv, x86::mem(ts->esi + 0x14F, 1), ts->cl);
	mov(mv, &ts->dl, x86::mem(0x844AD9, 1));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x150, 1), ts->dl);
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0xB575A5E2);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_773420:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7940E4);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773434:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7940D8);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773448:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7940C8);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_77345C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7940B4);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773470:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7940A0);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773484:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x794090);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773498:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x794084);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4B7310:
	mov(&ts->eax, 0x7DF7C0);
	goto ___CxxFrameHandler;
}

void sub_4B75D0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	cmp(&ts->eflags, ts->edx, 0x9120409E);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4B75E7;
    }
	cmp(&ts->eflags, ts->edx, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_4B7610;
    }

loc_4B75E7:
	mov(mv, &ts->eax, x86::mem(0x836364, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->eax*4), 4));
	movzx(mv, &ts->eax, x86::mem(0x83AA79, 1));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4B7602;
    }
	mov(&ts->eax, 0x1);
	goto loc_4B7609;

loc_4B7602:
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4B7609;
    }
	xor_(&ts->eax, ts->eax);

loc_4B7609:
	mov(mv, x86::mem(0x83AA79, 1), ts->al);

loc_4B7610:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x40, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4B7630(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0xD31407E7);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x836364, 4));
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*4), 4));
	movzx(mv, &ts->eax, x86::mem(0x83AA79, 1));
	xor_(&ts->ecx, ts->ecx);
	add(&ts->esp, 0x8);
	sub(&ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4B7671;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4B7676;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	mov(&ts->ecx, 0x1B3A2485);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4B7671:
	mov(&ts->ecx, 0x61CB0720);

loc_4B7676:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4B7690(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	cmp(&ts->eflags, ts->edx, 0x9120409E);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4B76A7;
    }
	cmp(&ts->eflags, ts->edx, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_4B76D0;
    }

loc_4B76A7:
	mov(mv, &ts->eax, x86::mem(0x836364, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->eax*4), 4));
	movzx(mv, &ts->eax, x86::mem(0x83AA7A, 1));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4B76C2;
    }
	mov(&ts->eax, 0x1);
	goto loc_4B76C9;

loc_4B76C2:
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4B76C9;
    }
	xor_(&ts->eax, ts->eax);

loc_4B76C9:
	mov(mv, x86::mem(0x83AA7A, 1), ts->al);

loc_4B76D0:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x40, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4B76F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0xDF06ED22);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x836364, 4));
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*4), 4));
	movzx(mv, &ts->eax, x86::mem(0x83AA7A, 1));
	xor_(&ts->ecx, ts->ecx);
	add(&ts->esp, 0x8);
	sub(&ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4B7731;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4B7736;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	mov(&ts->ecx, 0xCCFA);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4B7731:
	mov(&ts->ecx, 0x63C);

loc_4B7736:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4B7750(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x836364, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	cmp(&ts->eflags, ts->edx, 0x9120409E);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->eax*4), 4));
	mov(mv, &ts->eax, x86::mem(0x83AA74, 4));
	if (!ts->eflags.zero) {
        goto loc_4B7778;
    }
	dec(&ts->eax);
	if (!ts->eflags.sign) {
        goto loc_4B7788;
    }
	mov(&ts->eax, 0x3);
	goto loc_4B7788;

loc_4B7778:
	cmp(&ts->eflags, ts->edx, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_4B7788;
    }
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4B7788;
    }
	xor_(&ts->eax, ts->eax);

loc_4B7788:
	mov(mv, x86::mem(0x83AA74, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x40, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4B77B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0xF6CCDC5F);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x836364, 4));
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*4), 4));
	mov(mv, &ts->eax, x86::mem(0x83AA74, 4));
	add(&ts->esp, 0x8);
	xor_(&ts->ecx, ts->ecx);
	cmp(&ts->eflags, ts->eax, 0x4);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4B77DA;
    }
	jmp(x86::mem(0x4B7848, 4));

loc_4B77E1:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	mov(&ts->ecx, 0x1EA4CEC2);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4B77F5:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	mov(&ts->ecx, 0x5AE3441F);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4B7809:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	mov(&ts->ecx, 0x414F19D7);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4B781D:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	mov(&ts->ecx, 0xC3E9AE58);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4B7831:
	mov(&ts->ecx, 0x916039B4);

def_4B77DA:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4B7860(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	cmp(&ts->eflags, ts->ecx, 0x9120409E);
	if (ts->eflags.zero) {
        goto loc_4B7877;
    }
	cmp(&ts->eflags, ts->ecx, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_4B7892;
    }

loc_4B7877:
	mov(mv, &ts->eax, x86::mem(0x836364, 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*4), 4));
	mov(mv, &ts->dl, x86::mem(0x83AA64, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	setz(ts->eflags, &ts->dl);
	mov(mv, x86::mem(0x83AA64, 1), ts->dl);

loc_4B7892:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x40, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4B78B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0xAC148579);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x836364, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->eax*4), 4));
	mov(mv, &ts->al, x86::mem(0x83AA64, 1));
	neg(&ts->al);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0xFFFF3942);
	add(&ts->eax, 0xCCFA);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4B78F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	cmp(&ts->eflags, ts->ecx, 0x9120409E);
	if (ts->eflags.zero) {
        goto loc_4B7907;
    }
	cmp(&ts->eflags, ts->ecx, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_4B7922;
    }

loc_4B7907:
	mov(mv, &ts->eax, x86::mem(0x836364, 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*4), 4));
	mov(mv, &ts->dl, x86::mem(0x83AA65, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	setz(ts->eflags, &ts->dl);
	mov(mv, x86::mem(0x83AA65, 1), ts->dl);

loc_4B7922:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x40, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4B7940(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0x82CD8F92);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x836364, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->eax*4), 4));
	mov(mv, &ts->al, x86::mem(0x83AA65, 1));
	neg(&ts->al);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0xFFFF3942);
	add(&ts->eax, 0xCCFA);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4B7980(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	cmp(&ts->eflags, ts->ecx, 0x9120409E);
	if (ts->eflags.zero) {
        goto loc_4B7997;
    }
	cmp(&ts->eflags, ts->ecx, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_4B79B2;
    }

loc_4B7997:
	mov(mv, &ts->eax, x86::mem(0x836364, 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*4), 4));
	mov(mv, &ts->dl, x86::mem(0x83AA66, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	setz(ts->eflags, &ts->dl);
	mov(mv, x86::mem(0x83AA66, 1), ts->dl);

loc_4B79B2:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x40, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4B79D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0x969F96A5);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x836364, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->eax*4), 4));
	mov(mv, &ts->al, x86::mem(0x83AA66, 1));
	neg(&ts->al);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0xFFFF3942);
	add(&ts->eax, 0xCCFA);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4B7A10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	cmp(&ts->eflags, ts->ecx, 0x9120409E);
	if (ts->eflags.zero) {
        goto loc_4B7A27;
    }
	cmp(&ts->eflags, ts->ecx, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_4B7A42;
    }

loc_4B7A27:
	mov(mv, &ts->eax, x86::mem(0x836364, 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*4), 4));
	mov(mv, &ts->dl, x86::mem(0x83AA67, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	setz(ts->eflags, &ts->dl);
	mov(mv, x86::mem(0x83AA67, 1), ts->dl);

loc_4B7A42:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x40, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4B7A60(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0xC03F9F19);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x836364, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->eax*4), 4));
	mov(mv, &ts->al, x86::mem(0x83AA67, 1));
	neg(&ts->al);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0xFFFF3942);
	add(&ts->eax, 0xCCFA);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4B7AA0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x836364, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	cmp(&ts->eflags, ts->edx, 0x9120409E);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->eax*4), 4));
	movzx(mv, &ts->eax, x86::mem(0x83AA78, 1));
	if (!ts->eflags.zero) {
        goto loc_4B7AC9;
    }
	dec(&ts->eax);
	if (!ts->eflags.sign) {
        goto loc_4B7AD9;
    }
	mov(&ts->eax, 0x4);
	goto loc_4B7AD9;

loc_4B7AC9:
	cmp(&ts->eflags, ts->edx, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_4B7AD9;
    }
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0x4);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4B7AD9;
    }
	xor_(&ts->eax, ts->eax);

loc_4B7AD9:
	mov(mv, x86::mem(0x83AA78, 1), ts->al);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x40, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4B7B00(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0x84BC378);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x836364, 4));
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*4), 4));
	movzx(mv, &ts->eax, x86::mem(0x83AA78, 1));
	add(&ts->esp, 0x8);
	xor_(&ts->ecx, ts->ecx);
	cmp(&ts->eflags, ts->eax, 0x4);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4B7B2B;
    }
	jmp(x86::mem(0x4B7B98, 4));

loc_4B7B32:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	mov(&ts->ecx, 0xD93F8F55);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4B7B46:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	mov(&ts->ecx, 0xC44D3943);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4B7B5A:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	mov(&ts->ecx, 0x17FAFC32);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4B7B6E:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	mov(&ts->ecx, 0x1EA459F8);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4B7B82:
	mov(&ts->ecx, 0xCCFA);

def_4B7B2B:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4B7BB0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	cmp(&ts->eflags, ts->ecx, 0x9120409E);
	if (ts->eflags.zero) {
        goto loc_4B7BC7;
    }
	cmp(&ts->eflags, ts->ecx, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_4B7BE2;
    }

loc_4B7BC7:
	mov(mv, &ts->eax, x86::mem(0x836364, 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*4), 4));
	mov(mv, &ts->dl, x86::mem(0x83AA69, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	setz(ts->eflags, &ts->dl);
	mov(mv, x86::mem(0x83AA69, 1), ts->dl);

loc_4B7BE2:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x40, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4B7C00(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0xC93FBFB5);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x836364, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->eax*4), 4));
	mov(mv, &ts->al, x86::mem(0x83AA69, 1));
	neg(&ts->al);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0xFFFF3942);
	add(&ts->eax, 0xCCFA);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4B7C40(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	cmp(&ts->eflags, ts->ecx, 0x9120409E);
	if (ts->eflags.zero) {
        goto loc_4B7C57;
    }
	cmp(&ts->eflags, ts->ecx, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_4B7C72;
    }

loc_4B7C57:
	mov(mv, &ts->eax, x86::mem(0x836364, 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*4), 4));
	mov(mv, &ts->dl, x86::mem(0x83AA6A, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	setz(ts->eflags, &ts->dl);
	mov(mv, x86::mem(0x83AA6A, 1), ts->dl);

loc_4B7C72:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x40, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4B7C90(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0xBFB34120);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x836364, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->eax*4), 4));
	mov(mv, &ts->dl, x86::mem(0x83AA6A, 1));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	neg(&ts->dl);
	sbb(&ts->edx, ts->edx);
	and_(&ts->edx, 0xFFFF3942);
	add(&ts->edx, 0xCCFA);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4B7CD0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7735B0);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x54);
	mov(&ts->esi, ts->ecx);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4B7D35;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7940F0);
	goto loc_4B7D37;

loc_4B7D35:
	xor_(&ts->edi, ts->edi);

loc_4B7D37:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x1);
	or_(&ts->ebx, 0xFFFFFFFF);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ebx);
	game::sub_54EF30(ts, mv);
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4B7D92;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x794138);
	goto loc_4B7D94;

loc_4B7D92:
	xor_(&ts->edi, ts->edi);

loc_4B7D94:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ebx);
	game::sub_54EF30(ts, mv);
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x2);
	if (ts->eflags.zero) {
        goto loc_4B7DEB;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x794180);
	goto loc_4B7DED;

loc_4B7DEB:
	xor_(&ts->edi, ts->edi);

loc_4B7DED:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ebx);
	game::sub_54EF30(ts, mv);
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x3);
	if (ts->eflags.zero) {
        goto loc_4B7E44;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7941C8);
	goto loc_4B7E46;

loc_4B7E44:
	xor_(&ts->edi, ts->edi);

loc_4B7E46:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ebx);
	game::sub_54EF30(ts, mv);
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x4);
	if (ts->eflags.zero) {
        goto loc_4B7E9D;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x794210);
	goto loc_4B7E9F;

loc_4B7E9D:
	xor_(&ts->edi, ts->edi);

loc_4B7E9F:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ebx);
	game::sub_54EF30(ts, mv);
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x5);
	if (ts->eflags.zero) {
        goto loc_4B7EF6;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x794258);
	goto loc_4B7EF8;

loc_4B7EF6:
	xor_(&ts->edi, ts->edi);

loc_4B7EF8:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ebx);
	game::sub_54EF30(ts, mv);
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x6);
	if (ts->eflags.zero) {
        goto loc_4B7F4F;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7942E8);
	goto loc_4B7F51;

loc_4B7F4F:
	xor_(&ts->edi, ts->edi);

loc_4B7F51:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ebx);
	game::sub_54EF30(ts, mv);
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x7);
	if (ts->eflags.zero) {
        goto loc_4B7FA8;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7942A0);
	goto loc_4B7FAA;

loc_4B7FA8:
	xor_(&ts->edi, ts->edi);

loc_4B7FAA:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ebx);
	game::sub_54EF30(ts, mv);
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x8);
	if (ts->eflags.zero) {
        goto loc_4B8001;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x794330);
	goto loc_4B8003;

loc_4B8001:
	xor_(&ts->edi, ts->edi);

loc_4B8003:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->ebx);
	game::sub_54EF30(ts, mv);
	push(mv, &ts->esp, 0x3C);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0x9);
	if (ts->eflags.zero) {
        goto loc_4B8056;
    }
	mov(mv, &ts->ebp, x86::mem(0x836364, 4));
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x791E00);
	mov(mv, x86::mem(ts->edi + 0x38, 4), ts->ebp);
	goto loc_4B8058;

loc_4B8056:
	xor_(&ts->edi, ts->edi);

loc_4B8058:
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ebx);
	game::sub_54EE40(ts, mv);
	push(mv, &ts->esp, 0x58);
	mov(mv, x86::mem(ts->esi + 0x154, 4), ts->eax);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xA);
	if (ts->eflags.zero) {
        goto loc_4B80C8;
    }
	mov(mv, &ts->ebp, x86::mem(0x836364, 4));
	game::sub_5B8240(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x10, 1), ts->al);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x791DB0);
	mov(mv, x86::mem(ts->edi + 0x54, 4), ts->ebp);
	goto loc_4B80CA;

loc_4B80C8:
	xor_(&ts->edi, ts->edi);

loc_4B80CA:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->ebx);
	game::sub_54F170(ts, mv);
	push(mv, &ts->esp, 0x54);
	mov(mv, x86::mem(ts->esi + 0x158, 4), ts->eax);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xB);
	pop(mv, &ts->esp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_4B8128;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x794378);
	goto loc_4B812A;

loc_4B8128:
	xor_(&ts->edi, ts->edi);

loc_4B812A:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ebx);
	game::sub_54EF30(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xC90DC4AB);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->eax, 0x8);
	pop(mv, &ts->esp, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4B8179;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xB0FCF98E);
	push(mv, &ts->esp, 0xC90DC4AB);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);

loc_4B8179:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esi + 0x14E, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0xF35B6D7F);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x14);
	retn(mv, &ts->esp);

loc_7734C0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x794448);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7734D4:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79443C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7734E8:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x794430);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7734FC:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x794424);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773510:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x794418);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773524:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79440C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773538:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x794400);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_77354C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7943F8);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773560:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7943E8);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773574:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7943D8);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773588:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7943CC);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_77359C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7943BC);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4B7CD0:
	mov(&ts->eax, 0x7DF83C);
	goto ___CxxFrameHandler;
}

void sub_4B81A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7735E8);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x54);
	mov(&ts->esi, ts->ecx);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4B8203;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x791B70);
	goto loc_4B8205;

loc_4B8203:
	xor_(&ts->edi, ts->edi);

loc_4B8205:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xFFFFFFFF);
	game::sub_54EF30(ts, mv);
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4B8260;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x791BB8);
	goto loc_4B8262;

loc_4B8260:
	xor_(&ts->edi, ts->edi);

loc_4B8262:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xFFFFFFFF);
	game::sub_54EF30(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x200);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	if (!ts->eflags.zero) {
        goto loc_4B828A;
    }
	push(mv, &ts->esp, 0x19889765);
	goto loc_4B828F;

loc_4B828A:
	push(mv, &ts->esp, 0x22B1C2E6);

loc_4B828F:
	push(mv, &ts->esp, 0x42ADB44C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0xE683C971);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_7735C0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x794470);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7735D4:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x794458);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4B81A0:
	mov(&ts->eax, 0x7DF868);
	goto ___CxxFrameHandler;
}

void sub_4B82C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x7944C0);
	push(mv, &ts->esp, ts->eax);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_4B82E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x794508);
	push(mv, &ts->esp, ts->eax);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_4B8300(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_4B832D;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F5B8);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x7F4480, 4), 0x7944C0);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);

locret_4B832D:
	retn(mv, &ts->esp, 0x8);
}

void sub_4B8330(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x794558);
	push(mv, &ts->esp, ts->eax);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_4B8350(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77363C);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x38);
	mov(&ts->esi, ts->ecx);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4B83A5;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x794480);
	goto loc_4B83A7;

loc_4B83A5:
	xor_(&ts->edi, ts->edi);

loc_4B83A7:
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0xFFFFFFFF);
	game::sub_54EE40(ts, mv);
	push(mv, &ts->esp, 0x38);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4B83F2;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7944C8);
	goto loc_4B83F4;

loc_4B83F2:
	xor_(&ts->edi, ts->edi);

loc_4B83F4:
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0xFFFFFFFF);
	game::sub_54EE40(ts, mv);
	push(mv, &ts->esp, 0x38);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x2);
	if (ts->eflags.zero) {
        goto loc_4B843F;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x794518);
	goto loc_4B8441;

loc_4B843F:
	xor_(&ts->edi, ts->edi);

loc_4B8441:
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0xFFFFFFFF);
	game::sub_54EE40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_773600:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x794580);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773614:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x794574);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773628:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x794568);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4B8350:
	mov(&ts->eax, 0x7DF89C);
	goto ___CxxFrameHandler;
}

void sub_4B8470(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x10CBA23);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x97B71DDE);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x7326E44C);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xC90DC4AB);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x7945B4);
	mov(mv, x86::mem(ts->esi + 0x14C, 1), 0x0);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x40);
	push(mv, &ts->esp, 0x7945A4);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x794588);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x444969FD);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x444969FE);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x83AA04, 4));
	add(&ts->esp, 0x38);
	cmp(&ts->eflags, ts->eax, 0x7);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4B8555;
    }
	jmp(x86::mem(0x4B85FC, 4));

loc_4B855C:
	mov(&ts->ecx, ts->esi);
	game::sub_4B6E60(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_539650(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4B856F:
	mov(&ts->ecx, ts->esi);
	game::sub_4B7180(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_539650(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4B8582:
	mov(&ts->ecx, ts->esi);
	game::sub_4B7310(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_539650(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4B8595:
	mov(&ts->ecx, ts->esi);
	game::sub_4B7CD0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x444969FD);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x444969FE);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0x18);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_539650(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4B85D3:
	mov(&ts->ecx, ts->esi);
	game::sub_4B81A0(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_539650(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4B85E6:
	mov(&ts->ecx, ts->esi);
	game::sub_4B8350(ts, mv);

def_4B8555:
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_539650(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4B8620(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776418);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	game::sub_551DE0(ts, mv);
	push(mv, &ts->esp, 0x78FCD8);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x0);
	mov(mv, x86::mem(ts->esi, 4), 0x7945C4);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4B8673;
    }
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_5379A0(ts, mv);
	add(&ts->esp, 0x4);

loc_4B8673:
	mov(mv, &ts->ecx, x86::mem(0x7F4480, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x4F7FD471);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C9B0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	add(&ts->esp, 0x8);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_776410:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

SEH_4E3300:
	mov(&ts->eax, 0x7DEE70);
	goto ___CxxFrameHandler;
}

void sub_4B86B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776418);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x7945C4);
	push(mv, &ts->esp, 0x78FCD8);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x0);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4B8701;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78FCD8);
	push(mv, &ts->esp, 0x0);
	game::sub_555F50(ts, mv);
	add(&ts->esp, 0x14);

loc_4B8701:
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	game::sub_510D40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_776410:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

SEH_4E3300:
	mov(&ts->eax, 0x7DEE70);
	goto ___CxxFrameHandler;
}

void sub_4B8720(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x773664);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x68);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4B876B;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_49C9F0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4B876B:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_773650:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7945D4);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4B8720:
	mov(&ts->eax, 0x7DF8C0);
	goto ___CxxFrameHandler;
}

void sub_4B8780(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_49CA70(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4B8798;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4B8798:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4B87A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	sub(&ts->esp, 0x20);
	cmp(&ts->eflags, ts->eax, 0xC98356BA);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4B88A2;
    }
	if (ts->eflags.zero) {
        goto loc_4B8953;
    }
	cmp(&ts->eflags, ts->eax, 0x29161540);
	if (ts->eflags.zero) {
        goto loc_4B8891;
    }
	cmp(&ts->eflags, ts->eax, 0x35F8620B);
	if (ts->eflags.zero) {
        goto loc_4B87F8;
    }
	cmp(&ts->eflags, ts->eax, 0x911AB364);
	if (!ts->eflags.zero) {
        goto loc_4B8998;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78FA3C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp, 0x10);

loc_4B87F8:
	game::sub_4FF970(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_4FF640(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->ebx, ts->eax);
	mov(&ts->edi, 0x783FE5);
	game::sub_4FF970(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4B883B;
    }
	game::sub_570A30(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4B8826;
    }
	mov(&ts->edi, 0x79461C);
	goto loc_4B883B;

loc_4B8826:
	game::sub_570A40(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4B8836;
    }
	mov(&ts->edi, 0x794618);
	goto loc_4B883B;

loc_4B8836:
	mov(&ts->ebx, 0x794610);

loc_4B883B:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x7945FC);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	add(&ts->esp, 0x14);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x5C, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_525A30(ts, mv);
	push(mv, &ts->esp, 0x2D);
	mov(&ts->ecx, ts->edi);
	game::sub_5113F0(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x7945F0);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x50, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4C, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp, 0x10);

loc_4B8891:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x38, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x58, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp, 0x10);

loc_4B88A2:
	cmp(&ts->eflags, ts->eax, 0xE1FDE1D1);
	if (ts->eflags.zero) {
        goto loc_4B8947;
    }
	cmp(&ts->eflags, ts->eax, 0xE6E946B8);
	if (!ts->eflags.zero) {
        goto loc_4B8998;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x4C, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4B8998;
    }
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x5C, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_511360(ts, mv);
	mov(&ts->ebp, ts->eax);
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_4B88E4;
    }
	mov(&ts->ecx, ts->edi);
	game::sub_511340(ts, mv);
	mov(&ts->ebp, ts->eax);
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_4B8998;
    }

loc_4B88E4:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_52CEF0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ebx, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	mov(&ts->edi, ts->eax);
	mov(mv, x86::mem(ts->edi + 0x58, 4), 0x0);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x50, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x2C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x2C, 4));
	game::sub_49CAD0(ts, mv);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	game::sub_537AB0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7945E4);
	game::sub_505450(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_52B030(ts, mv);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->ebx);
	game::sub_495610(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp, 0x10);

loc_4B8947:
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x5C, 4));
	game::sub_511320(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x4C, 1), 0x0);

loc_4B8953:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B8998;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_52CEF0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x58, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x44, 4));
	game::sub_505400(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CE20(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_5371A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4B8991;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->edx, 4));

loc_4B8991:
	mov(mv, x86::mem(ts->esi + 0x58, 4), 0x0);

loc_4B8998:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp, 0x10);
}

void sub_4B89B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x773684);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x4C);
	game::j__malloc(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->esi, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B89F5;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_551DE0(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x78FAD0);
	mov(&ts->eax, ts->esi);

loc_4B89F5:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_773670:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x794620);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4B89B0:
	mov(&ts->eax, 0x7DF8E4);
	goto ___CxxFrameHandler;
}

void sub_4B8A10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7736CC);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x9C);
	mov(&ts->esi, ts->ecx);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4B8A83;
    }
	mov(mv, &ts->ebx, x86::mem(0x836364, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E840(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x791E40);
	mov(mv, x86::mem(ts->edi + 0x98, 4), ts->ebx);
	goto loc_4B8A85;

loc_4B8A83:
	xor_(&ts->edi, ts->edi);

loc_4B8A85:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::sub_54F410(ts, mv);
	push(mv, &ts->esp, 0x9C);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4B8AEF;
    }
	mov(mv, &ts->ebx, x86::mem(0x836364, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E840(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x791E90);
	mov(mv, x86::mem(ts->edi + 0x98, 4), ts->ebx);
	goto loc_4B8AF1;

loc_4B8AEF:
	xor_(&ts->edi, ts->edi);

loc_4B8AF1:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::sub_54F410(ts, mv);
	push(mv, &ts->esp, 0x9C);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x2);
	if (ts->eflags.zero) {
        goto loc_4B8B5B;
    }
	mov(mv, &ts->ebx, x86::mem(0x836364, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E840(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x791EE0);
	mov(mv, x86::mem(ts->edi + 0x98, 4), ts->ebx);
	goto loc_4B8B5D;

loc_4B8B5B:
	xor_(&ts->edi, ts->edi);

loc_4B8B5D:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::sub_54F410(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_773690:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x794658);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7736A4:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x794644);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7736B8:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79462C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4B8A10:
	mov(&ts->eax, 0x7DF918);
	goto ___CxxFrameHandler;
}

void sub_4B8B90(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_49CCA0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4B8BA8;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4B8BA8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4B8BB0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0xD15504EC);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4B8C73;
    }
	if (ts->eflags.zero) {
        goto locret_4B8CCF;
    }
	cmp(&ts->eflags, ts->eax, 0xC98356BA);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4B8C39;
    }
	if (ts->eflags.zero) {
        goto loc_4B8C2E;
    }
	cmp(&ts->eflags, ts->eax, 0xB19B00B5);
	if (ts->eflags.zero) {
        goto loc_4B8C12;
    }
	cmp(&ts->eflags, ts->eax, 0xB19BA115);
	if (!ts->eflags.zero) {
        goto loc_4B8CA7;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, 0x0);
	if (!ts->eflags.zero) {
        goto loc_4B8BFE;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	push(mv, &ts->esp, 0x835B98);
	push(mv, &ts->esp, ts->eax);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp, 0x10);

loc_4B8BFE:
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x4, 4));
	push(mv, &ts->esp, 0x836304);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp, 0x10);

loc_4B8C12:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x52C, 4), ts->eax);
	if (ts->eflags.zero) {
        goto locret_4B8CCF;
    }
	mov(mv, x86::mem(0x838528, 1), 0x0);
	retn(mv, &ts->esp, 0x10);

loc_4B8C2E:
	add(&ts->ecx, 0x4C);
	game::sub_588480(ts, mv);
	retn(mv, &ts->esp, 0x10);

loc_4B8C39:
	cmp(&ts->eflags, ts->eax, 0xD09F00D5);
	if (!ts->eflags.zero) {
        goto loc_4B8CA7;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x52C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto locret_4B8CCF;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x8, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x4, 4), 0xB19BA115);
	jmp(x86::mem(ts->edx + 0x8, 4));

loc_4B8C73:
	cmp(&ts->eflags, ts->eax, 0xD25504EC);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4B8CA0;
    }
	if (ts->eflags.zero) {
        goto locret_4B8CCF;
    }
	cmp(&ts->eflags, ts->eax, 0xD15554EC);
	if (ts->eflags.zero) {
        goto locret_4B8CCF;
    }
	cmp(&ts->eflags, ts->eax, 0xD15C04EC);
	if (!ts->eflags.zero) {
        goto loc_4B8CA7;
    }
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->esi, x86::mem(ts->ecx + 0x4C, 4));
	mov(&ts->ecx, ts->esi);
	game::sub_49D5B0(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_583B30(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4B8CA0:
	cmp(&ts->eflags, ts->eax, 0xDEAD900D);
	if (ts->eflags.zero) {
        goto loc_4B8CC5;
    }

loc_4B8CA7:
	mov(&ts->edx, ts->eax);
	and_(&ts->edx, 0xEB0FFE0);
	cmp(&ts->eflags, ts->edx, 0xEB0FFE0);
	if (!ts->eflags.zero) {
        goto locret_4B8CCF;
    }
	and_(&ts->eax, 0xF14F001F);
	mov(mv, x86::mem(ts->ecx + 0x518, 4), ts->eax);
	retn(mv, &ts->esp, 0x10);

loc_4B8CC5:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->ecx + 0x518, 4), ts->eax);

locret_4B8CCF:
	retn(mv, &ts->esp, 0x10);
}

void sub_4B8CE0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_49CE50(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4B8CF8;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4B8CF8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4B8D00(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ebp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4D8, 4));
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->ebp + 0x1D4, 4));
	mov(&ts->ecx, 0xBE);
	mov(&ts->esi, ts->ebx);
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ebp + 0x4DC, 1), 0x0);
	mov(&ts->esi, 0x1);
	if (ts->eflags.zero) {
        goto loc_4B8D3D;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);

loc_4B8D3D:
	mov(mv, &ts->al, x86::mem(ts->ebx + 0x245, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4B8D59;
    }
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xEB0FFE1);
	mov(&ts->edi, 0x1);
	mov(&ts->esi, 0x2);

loc_4B8D59:
	mov(mv, &ts->al, x86::mem(ts->ebx + 0x272, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4B8D70;
    }
	mov(&ts->eax, ts->esi);
	or_(&ts->eax, 0xEB0FFE0);
	mov(mv, x86::mem(ts->esp + (ts->edi*4) + 0x10, 4), ts->eax);
	inc(&ts->edi);
	inc(&ts->esi);

loc_4B8D70:
	mov(mv, &ts->al, x86::mem(ts->ebx + 0x29F, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4B8D88;
    }
	mov(&ts->ecx, ts->esi);
	or_(&ts->ecx, 0xEB0FFE0);
	mov(mv, x86::mem(ts->esp + (ts->edi*4) + 0x10, 4), ts->ecx);
	inc(&ts->edi);
	inc(&ts->esi);

loc_4B8D88:
	mov(mv, &ts->al, x86::mem(ts->ebx + 0x2CC, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4B8D9D;
    }
	or_(&ts->esi, 0xEB0FFE0);
	mov(mv, x86::mem(ts->esp + (ts->edi*4) + 0x10, 4), ts->esi);
	inc(&ts->edi);

loc_4B8D9D:
	lea(mv, &ts->eax, x86::mem(ts->ebx + 0x40, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B8DC2;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 1), 0x30);
	if (!ts->eflags.zero) {
        goto loc_4B8DC2;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x1, 1), 0x78);
	if (!ts->eflags.zero) {
        goto loc_4B8DC2;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_43DE50(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->bl, 0x1);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x8);
	goto loc_4B8DC4;

loc_4B8DC2:
	xor_(&ts->bl, ts->bl);

loc_4B8DC4:
	cmp(&ts->eflags, ts->edi, 0x3);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4B8DCD;
    }
	jmp(x86::mem(0x4B8E94, 4));

loc_4B8DD4:
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x4D4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->ecx);
	game::sub_558310(ts, mv);
	add(&ts->esp, 0xC);
	goto loc_4B8E6A;

loc_4B8DEE:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x4D4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->ecx);
	game::sub_5585E0(ts, mv);
	add(&ts->esp, 0x14);
	goto loc_4B8E6A;

loc_4B8E0F:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x4D4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->ecx);
	game::sub_558820(ts, mv);
	add(&ts->esp, 0x20);
	goto loc_4B8E6A;

loc_4B8E39:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x4D4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->ecx);
	game::sub_5589D0(ts, mv);
	add(&ts->esp, 0x2C);

loc_4B8E6A:
	mov(mv, x86::mem(ts->ebp + 0x4D8, 4), ts->eax);

def_4B8DCD:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4D8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B8E83;
    }
	test(&ts->eflags, ts->bl, ts->bl);
	if (!ts->eflags.zero) {
        goto loc_4B8E83;
    }
	game::sub_4FF2D0(ts, mv);

loc_4B8E83:
	mov(&ts->ecx, ts->ebp);
	game::sub_49D760(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);
}

void sub_4B8EB0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x4DC, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x4CC, 4));
	mov(mv, x86::mem(ts->ecx + 0x4CC, 4), 0x6);
	if (!ts->eflags.zero) {
        goto loc_4B8ED0;
    }
	game::sub_49D760(ts, mv);

loc_4B8ED0:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4B8EE0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B8EF8;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi, 4), 0x0);

loc_4B8EF8:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4B8F0D;
    }
	push(mv, &ts->esp, 0x23E142);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);

loc_4B8F0D:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xCA4C311B);
	push(mv, &ts->esp, 0x541389E5);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->ecx);
	game::sub_5585E0(ts, mv);
	add(&ts->esp, 0x14);
	mov(mv, x86::mem(ts->esi, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4B8F40(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4B8F59;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi, 4), 0x0);

loc_4B8F59:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, 0xD857CE14);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xCA4C3140);
	push(mv, &ts->esp, 0xCA4C3140);
	push(mv, &ts->esp, 0x2C0E485A);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->edi);
	game::sub_558750(ts, mv);
	add(&ts->esp, 0x28);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4B8FA0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B8FB8;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi, 4), 0x0);

loc_4B8FB8:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0x82159A60);
	if (ts->eflags.zero) {
        goto loc_4B8FD1;
    }
	cmp(&ts->eflags, ts->eax, 0x5A6F817F);
	if (ts->eflags.zero) {
        goto loc_4B8FD1;
    }
	cmp(&ts->eflags, ts->eax, 0xA3F55E1F);
	if (!ts->eflags.zero) {
        goto loc_4B9002;
    }

loc_4B8FD1:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x73C044EC);
	push(mv, &ts->esp, 0x541389E5);
	push(mv, &ts->esp, 0x39DF715);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->ecx);
	game::sub_558860(ts, mv);
	add(&ts->esp, 0x20);
	mov(mv, x86::mem(ts->esi, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_4B9002:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->ecx);
	game::sub_558610(ts, mv);
	add(&ts->esp, 0x14);
	mov(mv, x86::mem(ts->esi, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);
}

void sub_4B9030(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(0x8500CC, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto locret_4B9063;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x4, 4), 0x2);
	if (ts->eflags.zero) {
        goto loc_4B9069;
    }
	game::sub_4A0000(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(0x8500D0, 4), 0xB);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_4B9064;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x2C0E485A);
	push(mv, &ts->esp, 0x13138F54);
	game::sub_4B8FA0(ts, mv);

locret_4B9063:
	retn(mv, &ts->esp);

loc_4B9064:
	goto loc_4BC270;

loc_4B9069:
	push(mv, &ts->esp, 0xC);
	mov(&ts->ecx, 0x850080);
	game::sub_5031B0(ts, mv);
	game::sub_582B60(ts, mv);
	mov(&ts->ecx, ts->eax);
	goto sub_582E20;

loc_4BC270:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xD15C04EC);
	game::sub_55DDE0(ts, mv);
	add(&ts->esp, 0x8);
	game::sub_582B60(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_582AD0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8500D0, 4));
	mov(mv, x86::mem(0x7F4488, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x836514, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(0x83636C, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4BC2CD;
    }
	push(mv, &ts->esp, 0x3);
	mov(&ts->ecx, 0x850080);
	mov(mv, x86::mem(0x836524, 4), 0x4A0120);
	mov(mv, x86::mem(0x836528, 4), 0x5A6F817F);
	game::sub_5031B0(ts, mv);
	mov(mv, x86::mem(0x8500CC, 1), 0x1);
	retn(mv, &ts->esp);

loc_4BC2CD:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78787878);
	push(mv, &ts->esp, 0x0);
	game::sub_49D8C0(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x3);
	mov(&ts->ecx, 0x850080);
	game::sub_5031B0(ts, mv);
	mov(mv, x86::mem(0x8500CC, 1), 0x1);
	retn(mv, &ts->esp);
}

void sub_4B9090(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4B90FB;
    }
	mov(mv, x86::mem(0x8500CC, 1), 0x1);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_4B90C8;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi, 4), 0x0);

loc_4B90C8:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, 0x5A6F817F);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x2C0E485A);
	push(mv, &ts->esp, 0x73C044EC);
	push(mv, &ts->esp, 0x541389E5);
	push(mv, &ts->esp, 0x39DF715);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->eax);
	game::sub_558860(ts, mv);
	add(&ts->esp, 0x20);
	mov(mv, x86::mem(ts->esi, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4B90FB:
	push(mv, &ts->esp, 0x6);
	mov(&ts->ecx, 0x850080);
	game::sub_5031B0(ts, mv);
	retn(mv, &ts->esp);
}

void sub_4B9110(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edx, 0x106AE8C8);
	mov(&ts->edi, 0x904ACA43);
	if (ts->eflags.zero) {
        goto loc_4B920A;
    }
	cmp(&ts->eflags, ts->eax, 0x6C6F676E);
	mov(&ts->ebx, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4B9142;
    }
	mov(&ts->edx, 0x6CACF1EC);
	goto loc_4B91E8;

loc_4B9142:
	cmp(&ts->eflags, ts->eax, 0x626C616B);
	if (!ts->eflags.zero) {
        goto loc_4B9153;
    }
	mov(&ts->edx, 0x7190CAB);
	goto loc_4B91E8;

loc_4B9153:
	cmp(&ts->eflags, ts->eax, 0x696D7374);
	if (!ts->eflags.zero) {
        goto loc_4B9164;
    }
	mov(&ts->edx, 0x4A69F7AA);
	goto loc_4B91E8;

loc_4B9164:
	cmp(&ts->eflags, ts->eax, 0x70617373);
	if (!ts->eflags.zero) {
        goto loc_4B9172;
    }
	mov(&ts->edx, 0xC042C11C);
	goto loc_4B91E8;

loc_4B9172:
	cmp(&ts->eflags, ts->eax, 0x696B6579);
	if (!ts->eflags.zero) {
        goto loc_4B91AE;
    }
	game::sub_58A0E0(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0xC4, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto loc_4B918D;
    }
	mov(&ts->edx, 0x1973DA3A);
	goto loc_4B91E8;

loc_4B918D:
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_49D870(ts, mv);
	mov(mv, x86::mem(0x8500CC, 1), ts->bl);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	mov(mv, x86::mem(ts->edi + 0x14, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	mov(mv, x86::mem(ts->edi + 0x18, 4), ts->ecx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_4B91AE:
	cmp(&ts->eflags, ts->eax, 0x746F7361);
	if (!ts->eflags.zero) {
        goto loc_4B91C2;
    }
	mov(mv, &ts->eax, x86::mem(0x836370, 4));
	mov(mv, x86::mem(ts->eax + 0x150, 1), ts->bl);
	goto loc_4B91E8;

loc_4B91C2:
	cmp(&ts->eflags, ts->eax, 0x64626572);
	if (!ts->eflags.zero) {
        goto loc_4B91D0;
    }
	mov(&ts->edx, 0x25CB7F0C);
	goto loc_4B91E8;

loc_4B91D0:
	cmp(&ts->eflags, ts->eax, 0x6C6F636B);
	if (!ts->eflags.zero) {
        goto loc_4B91DE;
    }
	mov(&ts->edx, 0x3B33C4FC);
	goto loc_4B91E8;

loc_4B91DE:
	mov(&ts->edx, 0x106AE8C8);
	mov(&ts->edi, 0x2C0E485A);

loc_4B91E8:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(0x8500CC, 1), ts->bl);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->ecx + 0x14, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x18, 4), ts->eax);
	game::sub_4B8FA0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_4B920A:
	push(mv, &ts->esp, 0x8);
	mov(&ts->ecx, 0x850080);
	game::sub_5031B0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_4B9220(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B9281;
    }
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B9246;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi, 4), 0x0);

loc_4B9246:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, 0xC04643B0);
	push(mv, &ts->esp, 0xAA54BF29);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->eax);
	game::sub_558610(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), ts->eax);
	mov(mv, x86::mem(0x8500CC, 1), 0x1);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x8, 4));
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0xC, 4));
	add(&ts->esp, 0x14);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->edx);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp);

loc_4B9281:
	push(mv, &ts->esp, 0xA);
	mov(&ts->ecx, 0x850080);
	game::sub_5031B0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp);
}

void sub_4B9290(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7736F3);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	game::sub_551DE0(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi, 4), 0x794668);
	mov(mv, x86::mem(ts->esi + 0x4C, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0x4D, 1), ts->al);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x50, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x54, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0x58, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x5C, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0x5D, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0x5E, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0x5F, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0x60, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0x64, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x68, 4), ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0xFF);
	mov(&ts->cl, 0x1);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x6C, 1), ts->cl);
	mov(mv, x86::mem(ts->esi + 0x6D, 1), ts->al);
	push(mv, &ts->esp, 0x78FCA8);
	mov(mv, x86::mem(ts->esp + 0x20, 1), ts->cl);
	mov(mv, x86::mem(0x83636C, 1), ts->al);
	mov(mv, x86::mem(0x836368, 4), ts->esi);
	game::sub_555EE0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	add(&ts->esp, 0x10);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_7736E0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

loc_7736E8:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x50);
	goto sub_49D870;

SEH_4B9290:
	mov(&ts->eax, 0x7DF944);
	goto ___CxxFrameHandler;
}

void sub_4B9330(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776418);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x794668);
	xor_(&ts->ebx, ts->ebx);
	mov(mv, x86::mem(0x8383B4, 1), ts->bl);
	mov(mv, x86::mem(0x836368, 4), ts->ebx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x50, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4B9379;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x50, 4), ts->ebx);

loc_4B9379:
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0xFFFFFFFF);
	game::sub_510D40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_776410:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

SEH_4E3300:
	mov(&ts->eax, 0x7DEE70);
	goto ___CxxFrameHandler;
}

void sub_4B93A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->ecx, 0x89CF48);
	mov(mv, x86::mem(0x8383B4, 1), 0x0);
	game::sub_5F00F0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4B9419;
    }
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(0x838521, 1), ts->al);
	game::sub_4A0140(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8384C4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0xE8, 4));
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4B93FE;
    }
	push(mv, &ts->esp, ts->edi);

loc_4B93D8:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_49FFA0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4B93F7;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_5379A0(ts, mv);
	add(&ts->esp, 0x4);

loc_4B93F7:
	test(&ts->eflags, ts->edi, ts->edi);
	mov(&ts->esi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_4B93D8;
    }
	pop(mv, &ts->esp, ts->edi);

loc_4B93FE:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, 0x78FCD8);
	push(mv, &ts->esp, 0x78F530);
	game::sub_555F10(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4B9419:
	push(mv, &ts->esp, 0x78F138);
	push(mv, &ts->esp, 0x2C0E485A);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_4B9430(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776418);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x1C, 4));
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	game::sub_551DE0(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x78FCE8);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x10, 4));
	mov(mv, x86::mem(ts->esi + 0x58, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(0x836238, 4));
	mov(mv, &ts->edx, x86::mem(0x835978, 4));
	mov(mv, &ts->eax, x86::mem(0x835E34, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0x0);
	game::sub_49DA40(ts, mv);
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->eax, x86::mem(0x836238, 4));
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->eax, 0x10073C4F);
	if (!ts->eflags.zero) {
        goto loc_4B94C8;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x10073C4F);
	push(mv, &ts->esp, 0x78FCF8);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_49DB00(ts, mv);
	goto loc_4B9541;

loc_4B94C8:
	cmp(&ts->eflags, ts->edi, 0xA3F55E1F);
	push(mv, &ts->esp, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4B94DD;
    }
	cmp(&ts->eflags, ts->edi, 0x5A6F817F);
	if (ts->eflags.zero) {
        goto loc_4B94DD;
    }
	xor_(&ts->bl, ts->bl);
	goto loc_4B94DF;

loc_4B94DD:
	mov(&ts->bl, 0x1);

loc_4B94DF:
	mov(&ts->ecx, 0x89CF48);
	mov(mv, x86::mem(ts->esp + 0x20, 1), ts->bl);
	game::sub_5F00F0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4B94FA;
    }
	mov(mv, &ts->eax, x86::mem(0x836370, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B9511;
    }

loc_4B94FA:
	neg(&ts->bl);
	mov(mv, x86::mem(ts->esp + 0x20, 1), 0x0);
	sbb(&ts->ebx, ts->ebx);
	and_(&ts->ebx, 0xAFDC7A93);
	add(&ts->ebx, 0x3F920248);
	mov(&ts->edi, ts->ebx);

loc_4B9511:
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x78FCF8);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_49DB00(ts, mv);
	pop(mv, &ts->esp, ts->ebx);

loc_4B9541:
	cmp(mv, &ts->eflags, x86::mem(0x8500D0, 4), 0x2);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4B957F;
    }
	push(mv, &ts->esp, 0x0);
	game::sub_58FD50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, 0x89CF48);
	game::sub_5FE2B0(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x200);
	if (!ts->eflags.zero) {
        goto loc_4B957F;
    }
	mov(mv, &ts->al, x86::mem(0x8500C7, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4B957F;
    }
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F08F0(ts, mv);

loc_4B957F:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->eax + 0x6C, 1), 0x0);
	mov(mv, x86::mem(ts->eax + 0x6D, 1), 0x1);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_776410:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

SEH_4E3300:
	mov(&ts->eax, 0x7DEE70);
	goto ___CxxFrameHandler;
}

void sub_4B95A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_49DA30(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4B95B8;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4B95B8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4B95C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	mov(mv, x86::mem(ts->eax + 0x6C, 1), 0x0);
	mov(mv, x86::mem(ts->eax + 0x6D, 1), 0x0);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + (ts->eax*4) + 0x4C, 4));
	cmp(&ts->eflags, ts->eax, 0x3);
	if (!ts->eflags.zero) {
        goto loc_4B95F3;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	game::sub_4B93A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_5379A0(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4B95F3:
	cmp(&ts->eflags, ts->eax, 0x2);
	if (!ts->eflags.zero) {
        goto loc_4B961F;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	game::sub_49D950(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xD15504EC);
	game::sub_55DDE0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->ecx);
	game::sub_5379A0(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4B961F:
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.zero) {
        goto loc_4B9628;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4B9637;
    }

loc_4B9628:
	game::sub_5B7C40(ts, mv);
	mov(mv, x86::mem(0x864F4C, 4), 0x1);

loc_4B9637:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_5379A0(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4B9650(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x138, 4));
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->ecx + 0x138, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4B967E;
    }
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x10, 4));

loc_4B9667:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DCC0(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B9686;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_4B9667;
    }

loc_4B967E:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

loc_4B9686:
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_4B9690(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x140, 4));
	mov(mv, &ts->ebx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	mov(&ts->edi, ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_4B9650(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x140, 4), ts->eax);
	game::sub_537980(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x148, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_43DCC0(ts, mv);
	add(&ts->esp, 0x14);
	test(&ts->eflags, ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	if (!ts->eflags.zero) {
        goto locret_4B96EB;
    }
	mov(mv, &ts->ecx, x86::mem(0x836370, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4B96E1;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->edx, 4));

loc_4B96E1:
	mov(mv, x86::mem(0x836370, 4), 0x0);

locret_4B96EB:
	retn(mv, &ts->esp);
}

void sub_4B96F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x140, 4));
	mov(mv, &ts->ebx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x10, 4));
	mov(&ts->edi, ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_4B9650(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x140, 4), ts->eax);
	game::sub_537980(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x144, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_43DCC0(ts, mv);
	add(&ts->esp, 0x14);
	test(&ts->eflags, ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	if (!ts->eflags.zero) {
        goto locret_4B974B;
    }
	mov(mv, &ts->ecx, x86::mem(0x836370, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4B9741;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->edx, 4));

loc_4B9741:
	mov(mv, x86::mem(0x836370, 4), 0x0);

locret_4B974B:
	retn(mv, &ts->esp);
}

void sub_4B9750(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x773714);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x58);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4B979B;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_49DE10(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4B979B:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_773700:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x794678);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4B9750:
	mov(&ts->eax, 0x7DF968);
	goto ___CxxFrameHandler;
}

void sub_4B97B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_49DEB0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4B97C8;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4B97C8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4B97D0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0xC407210);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4B9906;
    }
	cmp(&ts->eflags, ts->eax, 0x406415E3);
	if (ts->eflags.zero) {
        goto loc_4B9906;
    }
	cmp(&ts->eflags, ts->eax, 0xC98356BA);
	if (!ts->eflags.zero) {
        goto loc_4B9916;
    }
	game::sub_49DF20(ts, mv);
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_4B98B3;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4B9916;
    }
	mov(mv, &ts->eax, x86::mem(0x8667E0, 4));
	cmp(&ts->eflags, ts->eax, 0x2D646966);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_4B9864;
    }
	if (ts->eflags.zero) {
        goto loc_4B984A;
    }
	cmp(&ts->eflags, ts->eax, 0x2D617468);
	if (ts->eflags.zero) {
        goto loc_4B9843;
    }
	cmp(&ts->eflags, ts->eax, 0x2D636667);
	if (ts->eflags.zero) {
        goto loc_4B983C;
    }
	cmp(&ts->eflags, ts->eax, 0x2D646576);
	if (!ts->eflags.zero) {
        goto loc_4B9872;
    }
	push(mv, &ts->esp, 0x8645E0D4);
	goto loc_4B984F;

loc_4B983C:
	push(mv, &ts->esp, 0xB9BCDE4B);
	goto loc_4B984F;

loc_4B9843:
	push(mv, &ts->esp, 0xE097DE5F);
	goto loc_4B987E;

loc_4B984A:
	push(mv, &ts->esp, 0x81273F29);

loc_4B984F:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xC407210);
	push(mv, &ts->esp, 0xC407210);
	goto loc_4B98D7;

loc_4B9864:
	cmp(&ts->eflags, ts->eax, 0x2D696E69);
	if (ts->eflags.zero) {
        goto loc_4B98AC;
    }
	cmp(&ts->eflags, ts->eax, 0x2D6C6E6B);
	if (ts->eflags.zero) {
        goto loc_4B9879;
    }

loc_4B9872:
	push(mv, &ts->esp, 0xE156E946);
	goto loc_4B987E;

loc_4B9879:
	push(mv, &ts->esp, 0x31D451C9);

loc_4B987E:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xC407210);
	push(mv, &ts->esp, 0xC407210);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x790038);
	push(mv, &ts->esp, ts->edi);
	game::sub_558540(ts, mv);
	add(&ts->esp, 0x1C);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4B98AC:
	push(mv, &ts->esp, 0x82EC0F03);
	goto loc_4B984F;

loc_4B98B3:
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFE);
	if (!ts->eflags.zero) {
        goto loc_4B98F2;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4B9916;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x33CE3D4);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x2C0E485A);
	push(mv, &ts->esp, 0x2C0E485A);

loc_4B98D7:
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->edi);
	game::sub_558540(ts, mv);
	add(&ts->esp, 0x1C);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4B98F2:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4B9916;
    }
	mov(mv, &ts->ecx, x86::mem(0x836370, 4));
	game::sub_4B9690(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4B9906:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x50, 1), 0x1);
	game::sub_4A0140(ts, mv);
	add(&ts->esp, 0x4);

loc_4B9916:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);
}

void sub_4B9920(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x40);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0x5B2B70F);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x836370, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x88, 1));
	add(&ts->eax, 0x88);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_4B9961;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0xBB298A80);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x40);
	retn(mv, &ts->esp);

loc_4B9961:
	push(mv, &ts->esp, ts->eax);
	game::sub_43DBB0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x12);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4B99A8;
    }
	mov(mv, &ts->edx, x86::mem(0x836370, 4));
	push(mv, &ts->esp, 0x12);
	add(&ts->edx, 0x88);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43DC00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x7946C8);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x2E, 1), 0x0);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x40);
	retn(mv, &ts->esp);

loc_4B99A8:
	mov(mv, &ts->eax, x86::mem(0x836370, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	add(&ts->eax, 0x88);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x40);
	retn(mv, &ts->esp);
}

void sub_4B99D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0x5B2B70F);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x254, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B9A06;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 1), 0x0);
	if (!ts->eflags.zero) {
        goto loc_4B9A06;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0xBB298A80);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4B9A06:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, ts->edx);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4B9A20(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_556020(ts, mv);
	cmp(&ts->eflags, ts->edi, 0x911AB364);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4B9AF6;
    }
	if (ts->eflags.zero) {
        goto loc_4B9A9F;
    }
	cmp(&ts->eflags, ts->edi, 0xC407210);
	if (ts->eflags.zero) {
        goto loc_4B9A89;
    }
	cmp(&ts->eflags, ts->edi, 0x2C0E485A);
	if (ts->eflags.zero) {
        goto loc_4B9A77;
    }
	cmp(&ts->eflags, ts->edi, 0x34DC1BEC);
	if (!ts->eflags.zero) {
        goto loc_4B9AF0;
    }
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x18A, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_4B9A77:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_4A0140(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_4B9A89:
	cmp(mv, &ts->eflags, x86::mem(ts->ebx + 0x10, 4), 0xD79B07A0);
	if (!ts->eflags.zero) {
        goto loc_4B9AF0;
    }
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x18A, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_4B9A9F:
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4B9ABA;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ebx + 0x10, 4), 0xD79B07A0);
	if (!ts->eflags.zero) {
        goto loc_4B9ABA;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_51DE60(ts, mv);
	add(&ts->esp, 0x8);

loc_4B9ABA:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);

loc_4B9ABE:
	game::sub_5379A0(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, 0x78F250);
	game::sub_51CD60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B9AF0;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x10, 4), 0xB2980BAB);
	if (!ts->eflags.zero) {
        goto loc_4B9AF0;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, ts->eax);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);

loc_4B9AF0:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_4B9AF6:
	cmp(&ts->eflags, ts->edi, 0xC98356BA);
	if (ts->eflags.zero) {
        goto loc_4B9B4D;
    }
	cmp(&ts->eflags, ts->edi, 0xC9D30688);
	if (ts->eflags.zero) {
        goto loc_4B9B40;
    }
	cmp(&ts->eflags, ts->edi, 0xDA5B8712);
	if (!ts->eflags.zero) {
        goto loc_4B9AF0;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x54, 4));
	push(mv, &ts->esp, 0x32);
	add(&ts->edx, 0x4C);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x158, 4));
	push(mv, &ts->esp, ts->edi);
	game::sub_43DC00(ts, mv);
	push(mv, &ts->esp, ts->edi);
	game::sub_49E1C0(ts, mv);
	add(&ts->esp, 0x10);
	xor_(&ts->ecx, ts->ecx);
	test(&ts->eflags, ts->al, ts->al);
	setnz(ts->eflags, &ts->cl);
	pop(mv, &ts->esp, ts->edi);
	inc(&ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x18C, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_4B9B40:
	mov(&ts->ecx, ts->esi);
	game::sub_51FF40(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_4B9B4D:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x18A, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4B9B60;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	goto loc_4B9ABE;

loc_4B9B60:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18C, 4));
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4B9BA0;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x7E77208C);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->edi);
	game::sub_558540(ts, mv);
	add(&ts->esp, 0x1C);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x18C, 4), 0x0);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_4B9BA0:
	cmp(&ts->eflags, ts->eax, 0x2);
	if (!ts->eflags.zero) {
        goto loc_4B9AF0;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x158, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	game::sub_58B940(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->ecx, ts->eax);
	game::sub_587150(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xD4966F2C);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x34DC1BEC);
	push(mv, &ts->esp, 0x34DC1BEC);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->edi);
	game::sub_558540(ts, mv);
	add(&ts->esp, 0x1C);
	mov(&ts->ecx, ts->esi);
	game::sub_51FF40(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x18C, 4), 0x0);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);
}

void sub_4B9C10(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_4B9C26;
    }
	mov(mv, &ts->eax, x86::mem(0x836370, 4));
	mov(mv, x86::mem(ts->eax + 0x4, 4), 0x0);

locret_4B9C26:
	retn(mv, &ts->esp, 0x8);
}

void sub_4B9C30(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0xED21B47F);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_4B9C50(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_4B9C66;
    }
	mov(mv, &ts->eax, x86::mem(0x836370, 4));
	mov(mv, x86::mem(ts->eax + 0x4, 4), 0x1);

locret_4B9C66:
	retn(mv, &ts->esp, 0x8);
}

void sub_4B9C70(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x36E79B9);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_4B9C90(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_51DFC0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(0x78DFA8, 4));
	mov(mv, x86::mem(ts->esi + 0x38, 4), ts->eax);
	mov(mv, x86::mem(ts->esi, 4), 0x794790);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->ecx);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);
}

void sub_4B9CD0(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_4B9CE6;
    }
	mov(mv, &ts->eax, x86::mem(0x836370, 4));
	mov(mv, x86::mem(ts->eax + 0x4, 4), 0x2);

locret_4B9CE6:
	retn(mv, &ts->esp, 0x8);
}

void sub_4B9CF0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x38, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x3D0447AA);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4B9D20(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77375C);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x850080);
	game::sub_5031D0(ts, mv);
	mov(&ts->ecx, 0x850080);
	mov(&ts->edi, ts->eax);
	game::sub_503210(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x144, 1), 0x0);
	cmp(mv, &ts->eflags, x86::mem(ts->edi, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_4B9DBA;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_4B9DBA;
    }
	push(mv, &ts->esp, 0x3C);
	mov(mv, x86::mem(ts->esi + 0x144, 1), 0x1);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4B9DA8;
    }
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, 0x850080);
	game::sub_5031D0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_4B9C90(ts, mv);
	goto loc_4B9DAA;

loc_4B9DA8:
	xor_(&ts->eax, ts->eax);

loc_4B9DAA:
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0xFFFFFFFF);
	game::sub_54EE40(ts, mv);

loc_4B9DBA:
	push(mv, &ts->esp, 0x38);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4B9DFE;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x78DFA8, 4));
	mov(mv, x86::mem(ts->edi, 4), 0x794710);
	mov(mv, x86::mem(ts->edi + 0x1C, 4), ts->ecx);
	goto loc_4B9E00;

loc_4B9DFE:
	xor_(&ts->edi, ts->edi);

loc_4B9E00:
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0xFFFFFFFF);
	game::sub_54EE40(ts, mv);
	push(mv, &ts->esp, 0x38);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x2);
	if (ts->eflags.zero) {
        goto loc_4B9E54;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x78DFA8, 4));
	mov(mv, x86::mem(ts->edi, 4), 0x794750);
	mov(mv, x86::mem(ts->edi + 0x1C, 4), ts->ecx);
	goto loc_4B9E56;

loc_4B9E54:
	xor_(&ts->edi, ts->edi);

loc_4B9E56:
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0xFFFFFFFF);
	game::sub_54EE40(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_539650(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_773720:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x794800);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773734:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7947E8);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773748:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7947D0);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4B9D20:
	mov(&ts->eax, 0x7DF99C);
	goto ___CxxFrameHandler;
}

void sub_4B9E80(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x773784);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x530);
	game::j__malloc(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->esi, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_4B9EC8;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_49CCB0(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x78FD6C);
	mov(&ts->eax, ts->esi);

loc_4B9EC8:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_773770:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x794814);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4B9E80:
	mov(&ts->eax, 0x7DF9C0);
	goto ___CxxFrameHandler;
}

void sub_4B9EE0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0x911AB364);
	if (ts->eflags.zero) {
        goto loc_4B9F1D;
    }
	cmp(&ts->eflags, ts->eax, 0xB19BA115);
	if (ts->eflags.zero) {
        goto loc_4B9EFB;
    }
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	goto sub_4B8BB0;

loc_4B9EFB:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4B9F1D;
    }
	mov(mv, &ts->eax, x86::mem(0x836370, 4));
	mov(mv, x86::mem(ts->eax + 0x151, 1), 0x1);
	mov(mv, &ts->ecx, x86::mem(0x836370, 4));
	game::sub_4B9690(ts, mv);
	retn(mv, &ts->esp, 0x10);

loc_4B9F1D:
	mov(mv, &ts->ecx, x86::mem(0x836370, 4));
	game::sub_4B96F0(ts, mv);
	retn(mv, &ts->esp, 0x10);
}

void sub_4B9F30(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x773818);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x34, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x3C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0xC);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->esi);
	game::sub_51E9E0(ts, mv);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, &ts->al, x86::mem(ts->esp + 0x2C, 1));
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x0);
	mov(mv, x86::mem(ts->esi, 4), 0x794820);
	mov(mv, x86::mem(ts->esi + 0x254, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), 0xC2FA0000);
	if (ts->eflags.zero) {
        goto loc_4B9FA1;
    }
	mov(&ts->eax, ts->edi);
	goto loc_4B9FAE;

loc_4B9FA1:
	push(mv, &ts->esp, 0x9700A5AD);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);

loc_4B9FAE:
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DC00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x20);

loc_773810:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_4CF650;

SEH_4BA2C0:
	mov(&ts->eax, 0x7DF4A8);
	goto ___CxxFrameHandler;
}

void sub_4B9FE0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x254, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto locret_4B9FEF;
    }
	goto sub_55E120;

locret_4B9FEF:
	retn(mv, &ts->esp, 0x8);
}

void sub_4BA000(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0x794860);
	push(mv, &ts->esp, ts->eax);
	game::sub_537BE0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4BA030(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7737B8);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	game::sub_58A0E0(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	xor_(&ts->ebp, ts->ebp);

loc_4BA060:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ebp);
	game::sub_5822E0(ts, mv);
	mov(&ts->edi, ts->eax);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4BA0DD;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_43DBB0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4BA0DD;
    }
	push(mv, &ts->esp, 0x258);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4BA0C6;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->eax);
	game::sub_4B9F30(ts, mv);
	goto loc_4BA0C8;

loc_4BA0C6:
	xor_(&ts->eax, ts->eax);

loc_4BA0C8:
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x24, 4), 0xFFFFFFFF);
	game::sub_54F820(ts, mv);
	goto loc_4BA172;

loc_4BA0DD:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4BA16E;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x16C, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4BA16E;
    }
	push(mv, &ts->esp, 0x258);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4BA13D;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->eax);
	game::sub_4B9F30(ts, mv);
	goto loc_4BA13F;

loc_4BA13D:
	xor_(&ts->eax, ts->eax);

loc_4BA13F:
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x24, 4), 0xFFFFFFFF);
	game::sub_54F820(ts, mv);
	push(mv, &ts->esp, 0x72BB728E);
	mov(&ts->edi, ts->eax);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_51FE70(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_50D7E0(ts, mv);

loc_4BA16E:
	inc(mv, x86::mem(ts->esp + 0xC, 4));

loc_4BA172:
	inc(&ts->ebp);
	cmp(&ts->eflags, ts->ebp, 0x4);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4BA060;
    }
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_539650(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x16C, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	mov(&ts->eax, 0x5DC29751);
	if (ts->eflags.zero) {
        goto loc_4BA199;
    }
	mov(&ts->eax, 0x50EAC1E3);

loc_4BA199:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x3C458C1);
	push(mv, &ts->esp, ts->esi);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x18);
	retn(mv, &ts->esp);

loc_773790:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x794884);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7737A4:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x794884);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4BA030:
	mov(&ts->eax, 0x7DF9EC);
	goto ___CxxFrameHandler;
}

void sub_4BA1D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0x65929D97);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x836370, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x8, 1));
	add(&ts->eax, 0x8);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_4BA206;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0xBB298A80);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4BA206:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, ts->edx);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4BA220(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0x903E809);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x836370, 4));
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x48, 1));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4BA254;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0xBB298A80);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4BA254:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0x7912A8);
	push(mv, &ts->esp, ts->eax);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4BA270(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0x99659496);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x836370, 4));
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x68, 1));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4BA2A4;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0xBB298A80);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4BA2A4:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0x7912A8);
	push(mv, &ts->esp, ts->eax);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4BA2C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x773818);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->esi);
	game::sub_51EBD0(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x78DFA4, 4));
	mov(mv, x86::mem(ts->esi, 4), 0x794958);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(0x836370, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x128, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	if (!ts->eflags.zero) {
        goto loc_4BA334;
    }
	mov(&ts->eax, 0x1);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x54, 4), 0x7BC);
	goto loc_4BA346;

loc_4BA334:
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x130, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x12C, 4));
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->edx);

loc_4BA346:
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x50, 4), ts->eax);
	game::sub_538060(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x14);

loc_773810:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_4CF650;

SEH_4BA2C0:
	mov(&ts->eax, 0x7DF4A8);
	goto ___CxxFrameHandler;
}

void sub_4BA370(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x6);
	retn(mv, &ts->esp);
}

void sub_4BA380(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4BA3C8;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FEF4);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x58, 4), ts->eax);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x836370, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x140, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x7949A0);
	game::sub_555EB0(ts, mv);
	add(&ts->esp, 0x20);

loc_4BA3C8:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4BA3D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0x1492D7BE);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x836370, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x128, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4BA407;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0xBB298A80);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4BA407:
	mov(&ts->ecx, ts->esi);
	game::sub_538060(ts, mv);
	game::sub_4FF970(ts, mv);
	dec(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0xA);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4BA420;
    }
	movzx(mv, &ts->eax, x86::mem(ts->eax + 0x4BA4E8, 1));
	jmp(x86::mem(0x4BA4E0, 4));

loc_4BA427:
	mov(mv, &ts->eax, x86::mem(0x836370, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x130, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x12C, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x128, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7949D0);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0x14);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4BA454:
	mov(mv, &ts->eax, x86::mem(0x836370, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x130, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x12C, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x128, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x7949C0);
	push(mv, &ts->esp, ts->eax);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0x14);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

def_4BA420:
	game::sub_570A30(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x1);
	mov(mv, &ts->eax, x86::mem(0x836370, 4));
	if (!ts->eflags.zero) {
        goto loc_4BA4B8;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x130, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x12C, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x128, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7949C0);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0x14);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4BA4B8:
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x130, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x128, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x12C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x7949B4);
	push(mv, &ts->esp, ts->eax);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0x14);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4BA500(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xAD18D273);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	retn(mv, &ts->esp);
}

void sub_4BA510(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x7D0);
	retn(mv, &ts->esp);
}

void sub_4BA520(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	cmp(&ts->eflags, ts->edi, 0x9120409E);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4BA538;
    }
	cmp(&ts->eflags, ts->edi, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_4BA54E;
    }

loc_4BA538:
	mov(mv, &ts->eax, x86::mem(0x836370, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x134, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	setz(ts->eflags, &ts->cl);
	mov(mv, x86::mem(ts->eax + 0x134, 1), ts->cl);

loc_4BA54E:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x92B703B5);
	game::sub_55DDA0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x40, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4BA580(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x836370, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x134, 1));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	neg(&ts->cl);
	sbb(&ts->ecx, ts->ecx);
	and_(&ts->ecx, 0x5B41928B);
	add(&ts->ecx, 0x193F3E);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0xCB6B7CFF);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4BA5C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	cmp(&ts->eflags, ts->edi, 0x9120409E);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4BA5D8;
    }
	cmp(&ts->eflags, ts->edi, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_4BA5EE;
    }

loc_4BA5D8:
	mov(mv, &ts->eax, x86::mem(0x836370, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x135, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	setz(ts->eflags, &ts->cl);
	mov(mv, x86::mem(ts->eax + 0x135, 1), ts->cl);

loc_4BA5EE:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x92B703B5);
	game::sub_55DDA0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x40, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4BA620(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x836370, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x135, 1));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	neg(&ts->cl);
	sbb(&ts->ecx, ts->ecx);
	and_(&ts->ecx, 0xF154);
	add(&ts->ecx, 0x61C);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0xDA3CDDBB);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4BA660(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787590, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x2C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51D380(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x44, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x3C, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->edx);
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->eax);
	game::sub_51D620(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	add(&ts->esp, 0x18);
	push(mv, &ts->esp, ts->eax);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->edi);
	game::sub_51D4D0(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x48, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->ecx);
	game::sub_51D070(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x794A6C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	add(&ts->esp, 0x14);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	game::sub_51D380(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x3C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->edx);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x44, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	game::sub_51D730(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x48, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x794A6C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4C, 4));
	add(&ts->esp, 0x10);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x3C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_51D380(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x48, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x794A6C, 4));
	add(&ts->esp, 0x4);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x3C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x50, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_51D380(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4BA799;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x20, 4));
	sub(&ts->esp, 0x8);
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x10, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x1C, 4));
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_51D380(ts, mv);
	add(&ts->esp, 0xC);

loc_4BA799:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4BA7A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	cmp(&ts->eflags, ts->edi, 0x9120409E);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4BA7B8;
    }
	cmp(&ts->eflags, ts->edi, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_4BA7CE;
    }

loc_4BA7B8:
	mov(mv, &ts->eax, x86::mem(0x836370, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x136, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	setz(ts->eflags, &ts->cl);
	mov(mv, x86::mem(ts->eax + 0x136, 1), ts->cl);

loc_4BA7CE:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x92B703B5);
	game::sub_55DDA0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x40, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4BA800(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x836370, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x136, 1));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	neg(&ts->cl);
	sbb(&ts->ecx, ts->ecx);
	and_(&ts->ecx, 0xF154);
	add(&ts->ecx, 0x61C);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0x9B985275);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4BA840(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0xA0);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(0x836370, 4));
	push(mv, &ts->esp, ts->edi);
	add(&ts->esi, 0x8);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->edi, ts->ecx);
	game::sub_49E290(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4BA927;
    }
	xor_(&ts->ecx, ts->ecx);
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x12D, 1));
	xor_(&ts->edx, ts->edx);
	mov(mv, &ts->dl, x86::mem(ts->esi + 0x12E, 1));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xC0, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x128, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->dl, x86::mem(ts->esi + 0x12C, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x124, 4));
	setz(ts->eflags, &ts->al);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x120, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x80, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x40, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x30, 4));
	game::sub_4952C0(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x49E480);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	game::sub_58B940(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->ecx, ts->eax);
	game::sub_586E40(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4BA8FE;
    }
	mov(mv, &ts->edi, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x906B132A);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->edi);
	game::sub_558540(ts, mv);
	add(&ts->esp, 0x1C);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0xA0);
	retn(mv, &ts->esp);

loc_4BA8FE:
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x44345F7F);
	mov(mv, x86::mem(ts->edi + 0x180, 1), 0x1);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->esi);
	game::sub_558310(ts, mv);
	add(&ts->esp, 0x10);
	mov(mv, x86::mem(ts->edi + 0x184, 4), ts->eax);

loc_4BA927:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0xA0);
	retn(mv, &ts->esp);
}

void sub_4BA930(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0x20747C);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x836370, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + 0xC8, 1));
	add(&ts->eax, 0xC8);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_4BA96B;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0xBB298A80);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4BA96B:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, ts->edx);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4BA980(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7737E4);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(0x836370, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x254);
	mov(&ts->esi, ts->ecx);
	add(&ts->ebx, 0xC8);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4BA9F8;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x32);
	mov(&ts->ecx, ts->edi);
	game::sub_51E9E0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x794AB8);
	goto loc_4BA9FA;

loc_4BA9F8:
	xor_(&ts->edi, ts->edi);

loc_4BA9FA:
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xFFFFFFFF);
	game::sub_54F820(ts, mv);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x14C, 4), ts->eax);
	game::sub_539650(ts, mv);
	mov(mv, &ts->al, x86::mem(0x836376, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	if (ts->eflags.zero) {
        goto loc_4BAA2C;
    }
	push(mv, &ts->esp, 0x34D83742);
	goto loc_4BAA31;

loc_4BAA2C:
	push(mv, &ts->esp, 0x371B340F);

loc_4BAA31:
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x794B08);
	push(mv, &ts->esp, ts->esi);
	game::sub_542600(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_7737D0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x794AF8);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4BA980:
	mov(&ts->eax, 0x7DFA10);
	goto ___CxxFrameHandler;
}

void sub_4BAA60(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x773804);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x4C);
	game::j__malloc(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->esi, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_4BAAA5;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_551DE0(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x78FE38);
	mov(&ts->eax, ts->esi);

loc_4BAAA5:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_7737F0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x794B14);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4BAA60:
	mov(&ts->eax, 0x7DFA34);
	goto ___CxxFrameHandler;
}

void sub_4BAAC0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0xC407210);
	if (ts->eflags.zero) {
        goto loc_4BAAE0;
    }
	cmp(&ts->eflags, ts->eax, 0x911AB364);
	if (!ts->eflags.zero) {
        goto locret_4BAAEB;
    }
	mov(mv, &ts->ecx, x86::mem(0x836370, 4));
	game::sub_4B96F0(ts, mv);
	retn(mv, &ts->esp, 0x10);

loc_4BAAE0:
	mov(mv, &ts->ecx, x86::mem(0x836370, 4));
	game::sub_4B9690(ts, mv);

locret_4BAAEB:
	retn(mv, &ts->esp, 0x10);
}

void sub_4BAAF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x773818);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x2C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x34, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x10);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->esi);
	game::sub_51E9E0(ts, mv);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x0);
	mov(mv, x86::mem(ts->esi, 4), 0x794B28);
	if (!ts->eflags.zero) {
        goto loc_4BAB51;
    }
	mov(&ts->edi, 0x783FE5);

loc_4BAB51:
	push(mv, &ts->esp, 0xFF);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DC00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x1C);

loc_773810:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_4CF650;

SEH_4BA2C0:
	mov(&ts->eax, 0x7DF4A8);
	goto ___CxxFrameHandler;
}

void sub_4BAB80(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0x6B6538A1);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->ecx, 0x850080);
	game::sub_5031D0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DBB0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4BABBE;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0xBB298A80);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4BABBE:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x30, 4));
	mov(&ts->ecx, 0x850080);
	game::sub_5031D0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4BABE0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x773818);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x2C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x34, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x10);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->esi);
	game::sub_51E9E0(ts, mv);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x0);
	mov(mv, x86::mem(ts->esi, 4), 0x794B68);
	if (!ts->eflags.zero) {
        goto loc_4BAC41;
    }
	mov(&ts->edi, 0x783FE5);

loc_4BAC41:
	push(mv, &ts->esp, 0xFF);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DC00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x1C);

loc_773810:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_4CF650;

SEH_4BA2C0:
	mov(&ts->eax, 0x7DF4A8);
	goto ___CxxFrameHandler;
}

void sub_4BAC70(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0xB34AB032);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->ecx, 0x850080);
	game::sub_503210(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DBB0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4BACAE;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0xBB298A80);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4BACAE:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0x7912A8);
	push(mv, &ts->esp, ts->edx);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4BACD0(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_4BAD4E;
    }
	mov(&ts->ecx, 0x850080);
	game::sub_5031D0(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 1), 0x0);
	if (!ts->eflags.zero) {
        goto loc_4BAD12;
    }
	push(mv, &ts->esp, 0x5DAFD047);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->eax);
	game::sub_558540(ts, mv);
	add(&ts->esp, 0x1C);
	retn(mv, &ts->esp, 0x8);

loc_4BAD12:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	game::sub_58B940(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->ecx, ts->eax);
	game::sub_587230(ts, mv);
	push(mv, &ts->esp, 0x8AA2AA13);
	game::sub_4FFA80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->ecx);
	game::sub_558540(ts, mv);
	add(&ts->esp, 0x1C);

locret_4BAD4E:
	retn(mv, &ts->esp, 0x8);
}

void sub_4BAD60(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0xADBC52F2);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_4BAD80(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_4BADA3;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x794C28);
	game::sub_555EB0(ts, mv);
	add(&ts->esp, 0x10);

locret_4BADA3:
	retn(mv, &ts->esp, 0x8);
}

void sub_4BADB0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x3CD7C4C);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_4BADD0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x773880);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x254);
	mov(&ts->esi, ts->ecx);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4BAE3E;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x2);
	mov(&ts->ecx, 0x850080);
	game::sub_5031D0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_4BAAF0(ts, mv);
	goto loc_4BAE40;

loc_4BAE3E:
	xor_(&ts->eax, ts->eax);

loc_4BAE40:
	or_(&ts->ebx, 0xFFFFFFFF);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	game::sub_54F820(ts, mv);
	push(mv, &ts->esp, 0x254);
	mov(mv, x86::mem(ts->esi + 0x14C, 4), ts->eax);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4BAEA8;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x5);
	mov(&ts->ecx, 0x850080);
	game::sub_503210(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_4BABE0(ts, mv);
	goto loc_4BAEAA;

loc_4BAEA8:
	xor_(&ts->eax, ts->eax);

loc_4BAEAA:
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	game::sub_54F820(ts, mv);
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esi + 0x150, 4), ts->eax);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x2);
	if (ts->eflags.zero) {
        goto loc_4BAEF7;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x794BA8);
	goto loc_4BAEF9;

loc_4BAEF7:
	xor_(&ts->edi, ts->edi);

loc_4BAEF9:
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	game::sub_54EE40(ts, mv);
	push(mv, &ts->esp, 0x38);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x3);
	if (ts->eflags.zero) {
        goto loc_4BAF40;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x794BE8);
	goto loc_4BAF42;

loc_4BAF40:
	xor_(&ts->edi, ts->edi);

loc_4BAF42:
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	game::sub_54EE40(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_51FE70(ts, mv);
	push(mv, &ts->esp, 0xB32F2B49);
	mov(mv, x86::mem(ts->esi + 0x17C, 4), ts->eax);
	game::sub_4FFA80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x17C, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_50D7E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x150, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_51FE70(ts, mv);
	push(mv, &ts->esp, 0x332C0B6F);
	mov(mv, x86::mem(ts->esi + 0x180, 4), ts->eax);
	game::sub_4FFA80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x180, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_50D7E0(ts, mv);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_539650(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_773830:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x794C88);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773844:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x794C70);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773858:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x794C5C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_77386C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x794C44);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4BADD0:
	mov(&ts->eax, 0x7DFA70);
	goto ___CxxFrameHandler;
}

void sub_4BAFD0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x24);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x74, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x1);

loc_4BAFE4:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x18, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x108, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_584B50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x794CB0);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ebx, ts->eax);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	add(&ts->esp, 0x1C);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(&ts->edi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4BB051;
    }
	mov(mv, &ts->al, x86::mem(ts->ebx + 0xD, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4BB051;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x794CA8);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_537CC0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4BB081;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x794CA8);
	goto loc_4BB071;

loc_4BB051:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x794C9C);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_537CC0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4BB081;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x794C9C);

loc_4BB071:
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);

loc_4BB081:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4BB08D;
    }
	lea(mv, &ts->ebp, x86::mem(ts->eax - 0x4, 4));
	goto loc_4BB08F;

loc_4BB08D:
	xor_(&ts->ebp, ts->ebp);

loc_4BB08F:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0xF);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4BAFE4;
    }
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->edi);
	game::sub_538500(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->edi + 0x24, 4));
	push(mv, &ts->esp, 0x0);
	game::sub_58F740(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4BB0C5;
    }
	xor_(&ts->ebp, ts->ebp);
	goto loc_4BB0D0;

loc_4BB0C5:
	push(mv, &ts->esp, ts->eax);
	game::sub_73D8D0(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->ebp, ts->eax);

loc_4BB0D0:
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->edi);
	game::sub_51F440(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x174, 4));
	game::sub_538080(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x24);
	retn(mv, &ts->esp);
}

void sub_4BB0F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77389B);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x91C);
	cmp(mv, &ts->eflags, x86::mem(0x8500D0, 4), 0x11);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4BB2C2;
    }
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x200);
	if (!ts->eflags.zero) {
        goto loc_4BB22B;
    }
	mov(mv, x86::mem(0x850098, 1), 0x0);

loc_4BB139:
	mov(&ts->ecx, 0x8371C0);
	game::sub_5B5330(ts, mv);
	mov(&ts->cl, 0x3);
	sub(&ts->cl, ts->al);
	mov(mv, x86::mem(ts->esp + 0x14, 1), ts->cl);

loc_4BB14B:
	push(mv, &ts->esp, 0x14);
	push(mv, &ts->esp, 0x794CC0);
	game::sub_58A0E0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_582380(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_7420B0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x850088, 4));
	mov(&ts->edx, ts->eax);
	imul(mv, &ts->edx, x86::mem(ts->ebp + 0x8, 4));
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	mov(mv, &ts->al, x86::mem(0x85008C, 1));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->edx);
	mov(mv, &ts->dl, x86::mem(0x850098, 1));
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x24, 1), ts->al);
	mov(mv, &ts->al, x86::mem(0x85009A, 1));
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->ecx);
	mov(mv, &ts->cl, x86::mem(0x850099, 1));
	mov(mv, x86::mem(ts->esp + 0x2C, 1), ts->dl);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, 0x49EC60);
	mov(mv, x86::mem(ts->esp + 0x31, 1), ts->al);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	mov(mv, x86::mem(ts->esp + 0x36, 1), ts->cl);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x108, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x3B, 1), 0x1);
	mov(mv, x86::mem(ts->esp + 0x3C, 1), 0x0);
	game::sub_5904C0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4BB2C2;
    }
	push(mv, &ts->esp, 0x12);
	mov(&ts->ecx, 0x850080);
	game::sub_5031B0(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x65FDA335);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xCA4CE1);
	push(mv, &ts->esp, 0x541389E5);
	push(mv, &ts->esp, 0x7902C8);
	push(mv, &ts->esp, ts->esi);
	game::sub_5585E0(ts, mv);
	add(&ts->esp, 0x18);
	mov(mv, x86::mem(ts->edi + 0x110, 4), ts->eax);
	xor_(&ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x924, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_4BB22B:
	cmp(mv, &ts->eflags, x86::mem(0x850098, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_4BB139;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x10);
	mov(&ts->ecx, 0x83AD90);
	game::sub_5162D0(ts, mv);
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4BB271;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_4BB250:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x434, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(0x850088, 4));
	if (ts->eflags.zero) {
        goto loc_4BB271;
    }
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x10);
	mov(&ts->ecx, 0x83AD90);
	game::sub_5162D0(ts, mv);
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_4BB250;
    }

loc_4BB271:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x30, 4));
	game::sub_40C910(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x34, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x938, 4), 0x0);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x40, 4));
	game::sub_5B5330(ts, mv);
	mov(&ts->dl, 0x3);
	sub(&ts->dl, ts->al);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x3B4, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 1), ts->dl);
	mov(mv, x86::mem(ts->esp + 0x92C, 4), 0xFFFFFFFF);
	game::nullsub_1(ts, mv);
	goto loc_4BB14B;

loc_4BB2C2:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x924, 4));
	pop(mv, &ts->esp, ts->edi);
	or_(&ts->eax, 0xFFFFFFFF);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_773890:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x900, 4));
	goto sub_401800;

SEH_4D9800:
	mov(&ts->eax, 0x7DFA94);
	goto ___CxxFrameHandler;
}

void sub_4BB2E0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x5C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_4BB2F9;
    }
	lea(mv, &ts->edi, x86::mem(ts->eax - 0x4, 4));
	goto loc_4BB2FB;

loc_4BB2F9:
	xor_(&ts->edi, ts->edi);

loc_4BB2FB:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x70, 4));
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	game::sub_51F440(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x68, 4));
	mov(&ts->ebp, 0x1);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_4BB3BC;
    }
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_4BB320:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4BB32C;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_4BB32E;

loc_4BB32C:
	xor_(&ts->eax, ts->eax);

loc_4BB32E:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	mov(&ts->esi, 0x1);
	cmp(&ts->eflags, ts->ecx, ts->esi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4BB366;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x10, 4));
	mov(&ts->edi, ts->edi);

loc_4BB340:
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_4BB349;
    }
	lea(mv, &ts->ecx, x86::mem(ts->edx - 0x4, 4));
	goto loc_4BB34B;

loc_4BB349:
	xor_(&ts->ecx, ts->ecx);

loc_4BB34B:
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4BB3C8;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4BB35B;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_4BB35D;

loc_4BB35B:
	xor_(&ts->eax, ts->eax);

loc_4BB35D:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4BB340;
    }

loc_4BB366:
	mov(mv, &ts->dl, x86::mem(ts->eax + 0xC, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	if (ts->eflags.zero) {
        goto loc_4BB380;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DCC0(ts, mv);
	add(&ts->esp, 0x8);
	goto loc_4BB39A;

loc_4BB380:
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8C, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_4FFA80(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_43DCC0(ts, mv);
	add(&ts->esp, 0xC);

loc_4BB39A:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4BB3D4;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4BB3AA;
    }
	lea(mv, &ts->edi, x86::mem(ts->eax - 0x4, 4));
	goto loc_4BB3AC;

loc_4BB3AA:
	xor_(&ts->edi, ts->edi);

loc_4BB3AC:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x68, 4));
	inc(&ts->ebp);
	cmp(&ts->eflags, ts->ebp, ts->ecx);
	if (ts->eflags.carry) {
        goto loc_4BB320;
    }

loc_4BB3BC:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebx);
	game::sub_54EDD0(ts, mv);

loc_4BB3C8:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x8);

loc_4BB3D4:
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->ebx);
	game::sub_54EDD0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x8);
}

void sub_4BB3F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(ts->esi + 0x100, 4), 0x0);
	game::sub_4BB0F0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4BB44A;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x110, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4BB41B;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);

loc_4BB41B:
	mov(mv, x86::mem(ts->esi + 0x110, 4), 0x0);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x8173FC6B);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->esi);
	game::sub_558540(ts, mv);
	add(&ts->esp, 0x1C);

loc_4BB44A:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4BB450(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x2C, 4));
	push(mv, &ts->esp, 0x332C0B6F);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->ebp + 0x4C, 1));
	lea(mv, &ts->edi, x86::mem(ts->ebp + 0x4C, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4BB489;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x30, 4));
	push(mv, &ts->esp, 0xBB298A80);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4BB489:
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->esi, ts->esi);
	game::sub_43DBB0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4BB4B3;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_4BB4A0:
	mov(mv, x86::mem(ts->esp + (ts->esi) + 0xC, 1), 0x2A);
	push(mv, &ts->esp, ts->edi);
	inc(&ts->esi);
	game::sub_43DBB0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4BB4A0;
    }

loc_4BB4B3:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x30, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esp + (ts->esi) + 0x10, 1), 0x20);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + (ts->esi) + 0x15, 1), 0x0);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4BB4E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_556020(ts, mv);
	cmp(&ts->eflags, ts->edi, 0xC9D30688);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4BB59A;
    }
	if (ts->eflags.zero) {
        goto loc_4BB5C2;
    }
	cmp(&ts->eflags, ts->edi, 0xC407210);
	if (ts->eflags.zero) {
        goto loc_4BB548;
    }
	cmp(&ts->eflags, ts->edi, 0x911AB364);
	if (!ts->eflags.zero) {
        goto loc_4BB5C9;
    }
	push(mv, &ts->esp, 0x794D18);
	game::sub_5379A0(ts, mv);
	push(mv, &ts->esp, 0x78F320);
	push(mv, &ts->esp, 0xF7F19667);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_4BB548:
	cmp(mv, &ts->eflags, x86::mem(ts->ebx + 0x10, 4), 0xD79B07A0);
	if (!ts->eflags.zero) {
        goto loc_4BB5C9;
    }
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x155, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_49EE00(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4BB5C9;
    }
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x850080);
	game::sub_495200(ts, mv);
	push(mv, &ts->esp, 0x794D18);
	mov(mv, x86::mem(0x836388, 4), 0x85009C);
	game::sub_5379A0(ts, mv);
	push(mv, &ts->esp, 0x78F320);
	push(mv, &ts->esp, 0x8905384);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_4BB59A:
	cmp(&ts->eflags, ts->edi, 0xDA5B8712);
	if (!ts->eflags.zero) {
        goto loc_4BB5C9;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esi + 0x150, 4));
	if (!ts->eflags.zero) {
        goto loc_4BB5C2;
    }
	push(mv, &ts->esp, 0xD);
	add(&ts->eax, 0x4C);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x155, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_43DC00(ts, mv);
	add(&ts->esp, 0xC);

loc_4BB5C2:
	mov(&ts->ecx, ts->esi);
	game::sub_51FF40(ts, mv);

loc_4BB5C9:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);
}

void sub_4BB5D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	sub(&ts->esp, 0x500);
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x200);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4BB6CC;
    }
	mov(mv, &ts->eax, x86::mem(0x8358F0, 4));
	xor_(&ts->ebp, ts->ebp);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4BB6CC;
    }

loc_4BB601:
	mov(mv, &ts->al, x86::mem(ts->ebp + 0x83590C, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4BB6BE;
    }
	mov(mv, &ts->eax, x86::mem(0x8358F4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_582B60(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_582BB0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x298, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_49E870(ts, mv);
	mov(&ts->esi, ts->eax);
	mov(&ts->ecx, 0x9F);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x18, 4));
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x54, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4BB6BE;
    }
	game::sub_582B60(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xF8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x2);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x78, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_73FB50(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x80, 4));
	add(&ts->esp, 0x14);
	push(mv, &ts->esp, ts->ecx);
	game::sub_58F6D0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_58FF10(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x6C, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->ebp + 0x83590C, 1), 0x0);
	game::sub_49EE40(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x6C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x635CB250);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	game::sub_4A0000(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_558540(ts, mv);
	add(&ts->esp, 0x1C);

loc_4BB6BE:
	mov(mv, &ts->eax, x86::mem(0x8358F0, 4));
	inc(&ts->ebp);
	cmp(&ts->eflags, ts->ebp, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4BB601;
    }

loc_4BB6CC:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_4BB6E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	sub(&ts->esp, 0x84);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1170, 4));
	push(mv, &ts->esp, ts->edi);
	game::sub_582980(ts, mv);
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_4BB767;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x1178, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4BB767;
    }
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4BB91A;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1170, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x49F890);
	game::sub_58AA20(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4BB73B;
    }
	push(mv, &ts->esp, 0x12);
	mov(&ts->ecx, 0x850080);
	game::sub_5031B0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_4BB73B:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x313F8CC5);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->esi);
	game::sub_558540(ts, mv);
	add(&ts->esp, 0x1C);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_4BB767:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1174, 4));
	game::sub_58D0D0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1170, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1178, 1));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x49F890);
	game::sub_58A7E0(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4BB88C;
    }
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x200);
	if (ts->eflags.zero) {
        goto loc_4BB82D;
    }
	mov(&ts->edi, 0x8358F4);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_4BB7B0:
	cmp(mv, &ts->eflags, x86::mem(ts->edi, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4BB7CF;
    }
	game::sub_582B60(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0xF8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x2);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_73FB50(ts, mv);
	add(&ts->esp, 0x14);

loc_4BB7CF:
	add(&ts->edi, 0x4);
	cmp(&ts->eflags, ts->edi, 0x83590C);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4BB7B0;
    }
	mov(mv, x86::mem(ts->esp + 0x10, 1), ts->bl);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x1F);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x11, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	push(mv, &ts->esp, 0x794D2C);
	push(mv, &ts->esp, 0x679FD4E9);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, 0x80);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C960(ts, mv);
	game::sub_582B60(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0xF8, 4));
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x5);
	push(mv, &ts->esp, ts->edx);
	game::sub_73F180(ts, mv);
	add(&ts->esp, 0x24);

loc_4BB82D:
	push(mv, &ts->esp, 0x12);
	mov(&ts->ecx, 0x850080);
	game::sub_5031B0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x9C6E60A4);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x1188, 4), ts->ebx);
	game::sub_558330(ts, mv);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8651AC, 4));
	add(&ts->esp, 0xC);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787AF4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784264, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x119C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x11A0, 1), 0x1);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_4BB88C:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xA6F52EE0);
	push(mv, &ts->esp, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4BB8E4;
    }
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1170, 4));
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	game::sub_58AB40(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xD616E55A);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->edi);
	game::sub_558540(ts, mv);
	add(&ts->esp, 0x1C);
	mov(mv, x86::mem(ts->esi + 0x1178, 1), ts->bl);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_4BB8E4:
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xD99CFE5E);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->edi);
	game::sub_558540(ts, mv);
	add(&ts->esp, 0x28);
	mov(mv, x86::mem(ts->esi + 0x1178, 1), ts->bl);

loc_4BB91A:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_4BB930(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	sub(&ts->esp, 0x80);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1174, 4));
	push(mv, &ts->esp, ts->edi);
	game::sub_58D0D0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1170, 4));
	game::sub_582930(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4BB9A5;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1170, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x49F800);
	game::sub_58D800(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4BB97D;
    }
	push(mv, &ts->esp, 0x12);
	mov(&ts->ecx, 0x850080);
	game::sub_5031B0(ts, mv);
	goto loc_4BB9B8;

loc_4BB97D:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xACC1F7DA);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x2C0E485A);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->esi);
	game::sub_5585E0(ts, mv);
	add(&ts->esp, 0x18);
	goto loc_4BB9B8;

loc_4BB9A5:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78F240);
	push(mv, &ts->esp, ts->eax);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);

loc_4BB9B8:
	mov(mv, x86::mem(ts->esp + 0x8, 1), 0x0);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x1F);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x9, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	push(mv, &ts->esp, 0x794D2C);
	push(mv, &ts->esp, 0x679FD4E9);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, 0x80);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	game::sub_582B60(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xF8, 4));
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	game::sub_73F180(ts, mv);
	add(&ts->esp, 0x24);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_4BBA20(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77389B);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x948);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1170, 4));
	push(mv, &ts->esp, ts->edi);
	game::sub_582930(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4BBA71;
    }
	cmp(mv, &ts->eflags, x86::mem(0x850084, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_4BBA71;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1170, 4));
	game::sub_58D9F0(ts, mv);
	cmp(&ts->eflags, ts->al, 0x1);
	if (ts->eflags.zero) {
        goto loc_4BBFD2;
    }

loc_4BBA71:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4BBA82;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	game::sub_54EB60(ts, mv);
	goto loc_4BBA8C;

loc_4BBA82:
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4BBA8C;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	game::sub_54EB40(ts, mv);

loc_4BBA8C:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x70, 4));
	push(mv, &ts->esp, 0xF636A00);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	add(&ts->edi, 0x918);
	push(mv, &ts->esp, ts->edi);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x11BD, 1));
	if (!ts->eflags.zero) {
        goto loc_4BBC20;
    }
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4BBAF4;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x11BC, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4BBAF4;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FFD0);
	push(mv, &ts->esp, 0x794D58);
	push(mv, &ts->esp, ts->eax);
	game::sub_5426C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x7F44B8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FC44);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_5426C0(ts, mv);
	add(&ts->esp, 0x20);

loc_4BBAF4:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xF636A00);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x794D48);
	push(mv, &ts->esp, ts->edi);
	game::sub_542600(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x78, 4));
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4C, 4));
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4BBB28;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, ts->eax);
	game::sub_51EE80(ts, mv);

loc_4BBB28:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->edi);
	game::sub_538500(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x850084, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4BBBB5;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1180, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4BBB88;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x78FEAC);
	push(mv, &ts->esp, 0xBA9BA7E3);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F21C);
	push(mv, &ts->esp, 0xB1000CC7);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x20);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x954, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_4BBB88:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x78F21C);
	push(mv, &ts->esp, 0xBA9BA7E3);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x954, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_4BBBB5:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1170, 4));
	game::sub_58D9F0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, 0x1);
	if (ts->eflags.zero) {
        goto loc_4BBBF3;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x78FEA4);
	push(mv, &ts->esp, 0xBA9BA7E3);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x954, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_4BBBF3:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x78F21C);
	push(mv, &ts->esp, 0xBA9BA7E3);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x954, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_4BBC20:
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4BBC5D;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x11BC, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4BBC5D;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FC44);
	push(mv, &ts->esp, 0x794D58);
	push(mv, &ts->esp, ts->eax);
	game::sub_5426C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x7F44B8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FFD0);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5426C0(ts, mv);
	add(&ts->esp, 0x20);

loc_4BBC5D:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x70, 4));
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51F440(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4BBCB8;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0xB26C37AE);
	push(mv, &ts->esp, ts->edx);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0xCC878E5B);
	push(mv, &ts->esp, ts->eax);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0x72979984);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x24);
	mov(&ts->ecx, ts->esi);
	game::sub_49F6F0(ts, mv);
	goto loc_4BBFB1;

loc_4BBCB8:
	mov(&ts->ecx, ts->edi);
	game::sub_51F530(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51F350(ts, mv);
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x20, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_4BBD05;
    }
	mov(mv, &ts->edx, x86::mem(0x8A1CCC, 4));
	mov(&ts->ebx, ts->eax);
	imul(&ts->ebx, ts->ebx, 0x890);
	add(&ts->ebx, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->edx);
	game::sub_5120B0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, 0xB26C37AE);
	push(mv, &ts->esp, ts->eax);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x10);
	goto loc_4BBD1B;

loc_4BBD05:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x794D44);
	push(mv, &ts->esp, 0xB26C37AE);
	push(mv, &ts->esp, ts->eax);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0xC);

loc_4BBD1B:
	mov(&ts->ecx, 0x850080);
	game::sub_5031F0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51EE20(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4BBE1F;
    }
	mov(&ts->ecx, 0x850080);
	game::sub_5031F0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_4400D0(ts, mv);
	add(&ts->esp, 0x8);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51EE20(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4BBE1F;
    }
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4BBE1F;
    }
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x30, 4));
	game::sub_5B5330(ts, mv);
	mov(&ts->bl, 0x3);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x60, 4));
	sub(&ts->bl, ts->al);
	game::sub_40C910(ts, mv);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x64, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, 0x83A9D0);
	mov(mv, x86::mem(ts->esp + 0x968, 4), 0x0);
	game::sub_515D00(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x70, 4));
	game::sub_5B5330(ts, mv);
	mov(&ts->cl, 0x3);
	sub(&ts->cl, ts->al);
	movsx(&ts->eax, ts->cl);
	movsx(&ts->ecx, ts->bl);
	sub(&ts->eax, ts->ecx);
	add(&ts->eax, 0x3);
	cmp(&ts->eflags, ts->eax, 0x6);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4BBDB9;
    }
	jmp(x86::mem(0x4BBFF4, 4));

loc_4BBDC0:
	push(mv, &ts->esp, 0x1CD9FE88);
	goto loc_4BBDEF;

loc_4BBDC7:
	push(mv, &ts->esp, 0x1A84D5E7);
	goto loc_4BBDEF;

loc_4BBDCE:
	push(mv, &ts->esp, 0x182FAD46);
	goto loc_4BBDEF;

loc_4BBDD5:
	push(mv, &ts->esp, 0xD0942448);
	goto loc_4BBDEF;

loc_4BBDDC:
	push(mv, &ts->esp, 0x1E8D8068);
	goto loc_4BBDEF;

loc_4BBDE3:
	push(mv, &ts->esp, 0x6B87BD29);
	goto loc_4BBDEF;

loc_4BBDEA:
	push(mv, &ts->esp, 0xB881F9EA);

loc_4BBDEF:
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xCC878E5B);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x10);

def_4BBDB9:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x3E4, 4));
	mov(mv, x86::mem(ts->esp + 0x95C, 4), 0xFFFFFFFF);
	game::nullsub_1(ts, mv);
	goto loc_4BBE6E;

loc_4BBE1F:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x794D44);
	push(mv, &ts->esp, 0xCC878E5B);
	push(mv, &ts->esp, ts->edx);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, 0xBA9BA7E3);
	push(mv, &ts->esp, ts->eax);
	game::sub_537CC0(ts, mv);
	add(&ts->esp, 0x18);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4BBE6E;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1198, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4BBE6E;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, 0xBA9BA7E3);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);

loc_4BBE6E:
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x200);
	if (ts->eflags.zero) {
        goto loc_4BBF30;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0x928, 4), 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_4BBEA2;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x794D44);
	push(mv, &ts->esp, 0x72979984);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0xC);
	goto loc_4BBF4C;

loc_4BBEA2:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	game::sub_58F740(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->ecx, ts->eax);
	game::sub_5829C0(ts, mv);
	mov(&ts->ebx, ts->eax);
	cmp(&ts->eflags, ts->ebx, 0x6);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4BBF30;
    }
	cmp(&ts->eflags, ts->ebx, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_4BBF30;
    }
	game::sub_58F230(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x928, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ebx);
	game::sub_58CE30(ts, mv);
	mov(&ts->ebx, ts->eax);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x15, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x19, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x1D, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x21, 2), ts->ax);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x18, 1), 0x0);
	mov(mv, x86::mem(ts->esp + 0x27, 1), ts->al);
	game::sub_5825E0(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_5826B0(ts, mv);
	movsx(&ts->ecx, ts->al);
	add(&ts->esp, 0x4);
	inc(&ts->ecx);
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, 0x794D3C);
	push(mv, &ts->esp, ts->edx);
	game::sub_4400D0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x72979984);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x1C);
	goto loc_4BBF4C;

loc_4BBF30:
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x7F2F7AD6);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x72979984);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x10);

loc_4BBF4C:
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x200);
	if (!ts->eflags.zero) {
        goto loc_4BBF61;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_49F400(ts, mv);
	goto loc_4BBFA9;

loc_4BBF61:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->edx, x86::mem(ts->edi + 0x918, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x0);
	game::sub_58F740(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->ecx, ts->eax);
	game::sub_58DA10(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(&ts->ecx, ts->esi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4BBF8A;
    }
	game::sub_49F660(ts, mv);
	goto loc_4BBFA9;

loc_4BBF8A:
	cmp(&ts->eflags, ts->eax, 0x32);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_4BBF96;
    }
	game::sub_49F400(ts, mv);
	goto loc_4BBFA9;

loc_4BBF96:
	cmp(&ts->eflags, ts->eax, 0x96);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_4BBFA4;
    }
	game::sub_49F490(ts, mv);
	goto loc_4BBFA9;

loc_4BBFA4:
	game::sub_49F570(ts, mv);

loc_4BBFA9:
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_49F270(ts, mv);

loc_4BBFB1:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x78, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4C, 4));
	if (ts->eflags.zero) {
        goto loc_4BBFC9;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, ts->eax);
	game::sub_51EE80(ts, mv);

loc_4BBFC9:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->edi);
	game::sub_538500(ts, mv);

loc_4BBFD2:
	mov(&ts->ecx, ts->esi);
	push(mv, &ts->esp, 0x0);
	game::sub_49EFE0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x954, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_773890:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x900, 4));
	goto sub_401800;

SEH_4D9800:
	mov(&ts->eax, 0x7DFA94);
	goto ___CxxFrameHandler;
}

void sub_4BC010(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x60, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4BC0B9;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x78, 4));
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->ebx, ts->ebx);
	game::sub_43DBB0(ts, mv);
	lea(mv, &ts->ebp, x86::mem(ts->eax + (ts->esi) + 0x78, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->ebp, ts->edi);
	mov(&ts->eax, ts->ebp);
	mov(&ts->dl, 0xA);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_4BC052;
    }
	goto loc_4BC040;

loc_4BC040:
	cmp(mv, &ts->eflags, x86::mem(ts->eax - 0x1, 1), ts->dl);
	if (!ts->eflags.zero) {
        goto loc_4BC04D;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x70, 4));
	inc(&ts->ebx);
	cmp(&ts->eflags, ts->ebx, ts->ecx);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_4BC052;
    }

loc_4BC04D:
	dec(&ts->eax);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4BC040;
    }

loc_4BC052:
	xor_(&ts->edi, ts->edi);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	mov(&ts->ecx, ts->eax);
	if (!ts->eflags.carry) {
        goto loc_4BC071;
    }
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_4BC060:
	mov(mv, &ts->bl, x86::mem(ts->ecx, 1));
	inc(&ts->ecx);
	cmp(&ts->eflags, ts->bl, ts->dl);
	if (!ts->eflags.zero) {
        goto loc_4BC06D;
    }
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, 0x4);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4BC071;
    }

loc_4BC06D:
	cmp(&ts->eflags, ts->ecx, ts->ebp);
	if (ts->eflags.carry) {
        goto loc_4BC060;
    }

loc_4BC071:
	sub(&ts->ecx, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	inc(&ts->ecx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x60, 4));
	add(&ts->ecx, 0x64);
	game::sub_51DEE0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_4AE760(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x60, 4));
	or_(mv, x86::mem(ts->eax + 0x1C, 4), 0x400002);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x74, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x70, 4));
	add(&ts->esp, 0xC);
	mov(&ts->eax, ts->ecx);
	sub(&ts->eax, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0x1);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4BC0AD;
    }
	mov(&ts->eax, 0x1);

loc_4BC0AD:
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x4);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	game::sub_538080(ts, mv);

loc_4BC0B9:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4BC0C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xC, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->esi, 1), 0x0);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4BC103;
    }
	mov(&ts->edi, ts->edi);

loc_4BC0D0:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->ebx);
	game::sub_49F970(ts, mv);
	mov(&ts->edi, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x1, 4));
	cmp(&ts->eflags, ts->eax, 0x1000);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4BC10A;
    }
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->ebx);
	game::sub_49FA00(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esi + (ts->edi), 1));
	add(&ts->esi, ts->edi);
	cmp(&ts->eflags, ts->al, 0x20);
	if (!ts->eflags.zero) {
        goto loc_4BC0FE;
    }

loc_4BC0F6:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1, 1));
	inc(&ts->esi);
	cmp(&ts->eflags, ts->al, 0x20);
	if (ts->eflags.zero) {
        goto loc_4BC0F6;
    }

loc_4BC0FE:
	cmp(mv, &ts->eflags, x86::mem(ts->esi, 1), 0x0);
	if (!ts->eflags.zero) {
        goto loc_4BC0D0;
    }

loc_4BC103:
	mov(&ts->ecx, ts->ebx);
	game::sub_4BC010(ts, mv);

loc_4BC10A:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_4BC110(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_4BC0C0(ts, mv);
	retn(mv, &ts->esp);
}

void sub_4BC120(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x70, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esi + 0x74, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4BC14C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F568);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51CF70(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x70, 4));
	add(&ts->esp, 0xC);
	inc(&ts->eax);
	mov(mv, x86::mem(ts->esi + 0x70, 4), ts->eax);
	mov(&ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	goto sub_4BC010;

loc_4BC14C:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4BC150(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x70, 4), 0x4);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4BC17B;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F568);
	push(mv, &ts->esp, ts->eax);
	game::sub_51CF70(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x70, 4));
	add(&ts->esp, 0xC);
	dec(&ts->eax);
	mov(mv, x86::mem(ts->esi + 0x70, 4), ts->eax);
	mov(&ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	goto sub_4BC010;

loc_4BC17B:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4BC180(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x83651C, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4A0090(ts, mv);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4BC1A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(0x8500CC, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto locret_4BC26D;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	game::sub_582B60(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_582AD0(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xD15C04EC);
	game::sub_55DDE0(ts, mv);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x10, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4BC1DB;
    }
	xor_(&ts->esi, ts->esi);
	goto loc_4BC1E6;

loc_4BC1DB:
	push(mv, &ts->esp, ts->eax);
	game::sub_43DE50(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->esi, ts->eax);

loc_4BC1E6:
	mov(mv, &ts->al, x86::mem(0x837AB4, 1));
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));
	mov(&ts->ebx, 0x1);
	test(&ts->eflags, ts->bl, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4BC212;
    }
	or_(mv, x86::mem(0x837AB4, 4), ts->ebx);
	mov(mv, x86::mem(0x837AA8, 4), ts->edi);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xC, 4));
	mov(mv, x86::mem(0x837AAC, 4), ts->eax);
	mov(mv, x86::mem(0x837AB0, 4), ts->esi);

loc_4BC212:
	mov(mv, &ts->eax, x86::mem(0x836514, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(0x8500D0, 4));
	mov(mv, x86::mem(0x83636C, 1), ts->bl);
	mov(mv, x86::mem(0x7F4488, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4BC243;
    }
	mov(mv, x86::mem(0x836524, 4), 0x4BC180);
	mov(mv, x86::mem(0x836528, 4), 0x837AA8);
	goto loc_4BC257;

loc_4BC243:
	game::sub_4A0000(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_4A0090(ts, mv);
	add(&ts->esp, 0x10);

loc_4BC257:
	push(mv, &ts->esp, 0x3);
	mov(&ts->ecx, 0x850080);
	game::sub_5031B0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(0x8500CC, 1), ts->bl);
	pop(mv, &ts->esp, ts->ebx);

locret_4BC26D:
	retn(mv, &ts->esp);
}

void sub_4BC300(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x773A38);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x24);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x34, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	game::sub_551DE0(ts, mv);
	xor_(&ts->eax, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x38, 4), ts->eax);
	mov(mv, x86::mem(ts->edi, 4), 0x794D94);
	mov(mv, x86::mem(ts->edi + 0x4C, 4), ts->eax);
	mov(mv, x86::mem(ts->edi + 0x50, 1), ts->al);
	mov(mv, x86::mem(ts->edi + 0x54, 4), ts->eax);
	mov(&ts->esi, 0x1);
	mov(mv, x86::mem(ts->esp + 0x40, 4), ts->eax);
	push(mv, &ts->esp, ts->ebp);
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_4BC350:
	mov(mv, &ts->ecx, x86::mem(0x89CF50, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4BC405;
    }
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F0220(ts, mv);
	mov(&ts->ebp, ts->eax);
	mov(&ts->ecx, ts->ebp);
	game::sub_5F8FE0(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->eax + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x794D84);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	add(&ts->ebp, 0x12);
	push(mv, &ts->esp, ts->ebp);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_542600(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x794D78);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x38, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x790400);
	game::sub_50B990(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->edi + 0x4, 4));
	add(&ts->esp, 0x34);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x790050);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x783FE5);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_542600(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x68, 4));
	add(&ts->esp, 0x24);
	inc(&ts->esi);

loc_4BC405:
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0x6);
	mov(mv, x86::mem(ts->esp + 0x44, 4), ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4BC350;
    }
	cmp(&ts->eflags, ts->esi, 0x6);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_4BC49B;
    }
	mov(&ts->edi, ts->edi);

loc_4BC420:
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x794D84);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x783FE5);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_542600(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x794D78);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x783FE5);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x3C, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_542600(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x790050);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x4C, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x4, 4));
	add(&ts->esp, 0x48);
	push(mv, &ts->esp, 0x783FE5);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_542600(ts, mv);
	add(&ts->esp, 0xC);
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, 0x6);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4BC420;
    }

loc_4BC49B:
	mov(&ts->esi, 0x1);

loc_4BC4A0:
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x794D68);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x783FE5);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_542600(ts, mv);
	add(&ts->esp, 0x1C);
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, 0x6);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4BC4A0;
    }
	mov(&ts->ecx, ts->edi);
	game::sub_4A0360(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x2C, 4));
	mov(&ts->eax, ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x30);
	retn(mv, &ts->esp, 0x4);

loc_773A30:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x30, 4));
	goto sub_510D40;

SEH_4C0AA0:
	mov(&ts->eax, 0x7DFAB8);
	goto ___CxxFrameHandler;
}

void sub_4BC4F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4BC510(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4BC508;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4BC508:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4BC510(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x794D94);
	goto sub_510D40;
}

void sub_4BC520(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0x34DC1BEC);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4BC590;
    }
	cmp(&ts->eflags, ts->eax, 0xC98356BA);
	if (!ts->eflags.zero) {
        goto loc_4BC5D2;
    }
	cmp(mv, &ts->eflags, x86::mem(0x89CF48, 4), 0x5);
	if (!ts->eflags.zero) {
        goto loc_4BC553;
    }
	push(mv, &ts->esp, 0x794DA4);
	game::sub_558F00(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4BC553:
	mov(&ts->ecx, ts->esi);
	game::sub_4A0360(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	inc(&ts->ecx);
	mov(&ts->eax, ts->ecx);
	cmp(&ts->eflags, ts->eax, 0x5);
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4BC5D2;
    }
	mov(&ts->ecx, 0x89CF48);
	game::sub_5FE370(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4BC5D2;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4BC5D2;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_4A0200(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4BC590:
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, 0x83A9D0);
	game::sub_502FF0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C8D0(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, 0x83A9D0);
	game::sub_503040(ts, mv);
	mov(mv, x86::mem(0x89E7B0, 4), 0x0);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_558F00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	add(&ts->esp, 0x4);
	game::sub_603790(ts, mv);

loc_4BC5D2:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);
}

void sub_4BC5E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7F44F8, 4));
	sub(&ts->esp, 0x100);
	push(mv, &ts->esp, ts->eax);
	game::sub_51BD10(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10C, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0xC407210);
	if (!ts->eflags.zero) {
        goto loc_4BC6AA;
    }
	mov(mv, &ts->al, x86::mem(0x838520, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4BC6AA;
    }
	mov(mv, x86::mem(0x838528, 1), 0x0);
	game::sub_58A0E0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_582380(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_4BC655;
    }
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0xFF);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x794DD8);
	push(mv, &ts->esp, ts->eax);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_742360(ts, mv);
	add(&ts->esp, 0x10);

loc_4BC655:
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x3EFE5317);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, 0x783F8D11);
	push(mv, &ts->esp, ts->edx);
	game::sub_49CDB0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x7F44F8, 4));
	push(mv, &ts->esp, 0x1F);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x835B98);
	mov(&ts->esi, ts->eax);
	game::sub_43DC00(ts, mv);
	push(mv, &ts->esp, 0x1F);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x836304);
	game::sub_43DC00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x134, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x794DC4);
	push(mv, &ts->esp, ts->eax);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0x38);
	pop(mv, &ts->esp, ts->esi);

loc_4BC6AA:
	add(&ts->esp, 0x100);
	retn(mv, &ts->esp, 0x14);
}

void sub_4BC6C0(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_4BC6DE;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78F320);
	push(mv, &ts->esp, ts->eax);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);

locret_4BC6DE:
	retn(mv, &ts->esp, 0x14);
}

void sub_4BC6F0(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_4BC724;
    }
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x200);
	if (ts->eflags.zero) {
        goto loc_4BC710;
    }
	mov(mv, x86::mem(0x850078, 4), 0x8);

loc_4BC710:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x794DF0);
	push(mv, &ts->esp, ts->eax);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);

locret_4BC724:
	retn(mv, &ts->esp, 0x14);
}

void sub_4BC730(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_4BC74E;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x790070);
	push(mv, &ts->esp, ts->eax);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);

locret_4BC74E:
	retn(mv, &ts->esp, 0x14);
}

void sub_4BC760(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_4BC79E;
    }
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, 0x83A9D0);
	mov(mv, x86::mem(0x83635C, 4), 0x78F240);
	game::sub_52A460(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78FA3C);
	push(mv, &ts->esp, 0x78F240);
	game::sub_537980(ts, mv);
	mov(mv, &ts->al, x86::mem(0x844AD8, 1));
	add(&ts->esp, 0xC);
	mov(mv, x86::mem(0x836360, 1), ts->al);

locret_4BC79E:
	retn(mv, &ts->esp, 0x14);
}

void sub_4BC7B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x773914);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	or_(&ts->ebp, 0xFFFFFFFF);
	cmp(&ts->eflags, ts->eax, 0x200);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4BC81F;
    }
	push(mv, &ts->esp, 0x48);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4BC811;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x4815FDBD);
	push(mv, &ts->esp, 0x114F5968);
	mov(&ts->ecx, ts->edi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x794DBC);
	goto loc_4BC813;

loc_4BC811:
	xor_(&ts->edi, ts->edi);

loc_4BC813:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebp);
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));

loc_4BC81F:
	push(mv, &ts->esp, 0x48);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4BC85A;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x4AB6A4F8);
	push(mv, &ts->esp, 0x3B1B7603);
	mov(&ts->ecx, ts->edi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x794DE0);
	mov(mv, x86::mem(ts->edi + 0x45, 1), 0x1);
	goto loc_4BC85C;

loc_4BC85A:
	xor_(&ts->edi, ts->edi);

loc_4BC85C:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebp);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	push(mv, &ts->esp, 0x48);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x2);
	if (ts->eflags.zero) {
        goto loc_4BC89F;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xC0BEDF15);
	push(mv, &ts->esp, 0x9C0A19E0);
	mov(&ts->ecx, ts->edi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x794DE8);
	goto loc_4BC8A1;

loc_4BC89F:
	xor_(&ts->edi, ts->edi);

loc_4BC8A1:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebp);
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x200);
	if (ts->eflags.zero) {
        goto loc_4BC8FE;
    }
	push(mv, &ts->esp, 0x48);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x3);
	if (ts->eflags.zero) {
        goto loc_4BC8F0;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x8106D26A);
	push(mv, &ts->esp, 0xDA665928);
	mov(&ts->ecx, ts->edi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x794E04);
	goto loc_4BC8F2;

loc_4BC8F0:
	xor_(&ts->edi, ts->edi);

loc_4BC8F2:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebp);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));

loc_4BC8FE:
	push(mv, &ts->esp, 0x48);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x4);
	if (ts->eflags.zero) {
        goto loc_4BC935;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xBD81116C);
	push(mv, &ts->esp, 0x5A5E5137);
	mov(&ts->ecx, ts->edi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x794E0C);
	goto loc_4BC937;

loc_4BC935:
	xor_(&ts->edi, ts->edi);

loc_4BC937:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebp);
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x4C, 4));
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50B8A0(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->ebp + 0x20, 4));
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x200);
	if (!ts->eflags.zero) {
        goto loc_4BC983;
    }
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x3F6F2BF);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78FC4C);
	push(mv, &ts->esp, ts->ebp);
	game::sub_542600(ts, mv);
	add(&ts->esp, 0x10);

loc_4BC983:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4BC9B5;
    }
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51F820(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4BC9B5;
    }
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x78F758);
	push(mv, &ts->esp, 0x444969FE);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);

loc_4BC9B5:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_7738B0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x794E58);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7738C4:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x794E48);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7738D8:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x794E34);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7738EC:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x794E24);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773900:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x794E14);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4BC7B0:
	mov(&ts->eax, 0x7DFAFC);
	goto ___CxxFrameHandler;
}

void sub_4BC9D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4A03F0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4BC9E8;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4BC9E8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4BC9F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4A0810(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4BCA08;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4BCA08:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4BCA10(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x24);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x84, 4), 0x2);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_4BCA5D;
    }
	push(mv, &ts->esp, 0x42AA46C1);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x42AA46C0);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(&ts->ebp, 0x3D);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0x42);
	push(mv, &ts->esp, 0x40FAF14B);
	goto loc_4BCA94;

loc_4BCA5D:
	push(mv, &ts->esp, 0x42AA46C0);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x42AA46C1);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(&ts->ebp, 0x43);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0x48);
	push(mv, &ts->esp, 0x703970F8);

loc_4BCA94:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x1C);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, 0x794E7C);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x10);
	game::sub_58F230(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	cmp(mv, &ts->eflags, ts->ebp, x86::mem(ts->esp + 0x10, 4));
	mov(&ts->edi, 0x1);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ebp);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_4BCC5D;
    }
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_4BCAE0:
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	goto loc_4BCAF0;

loc_4BCAF0:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x84, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->ebp);
	game::sub_586C40(ts, mv);
	mov(&ts->ebx, ts->eax);
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->ebx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4BCB88;
    }
	mov(&ts->edx, ts->edi);
	and_(&ts->edx, 0x80000001);
	if (!ts->eflags.sign) {
        goto loc_4BCB1D;
    }
	dec(&ts->edx);
	or_(&ts->edx, 0xFFFFFFFE);
	inc(&ts->edx);

loc_4BCB1D:
	if (ts->eflags.zero) {
        goto loc_4BCB43;
    }
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->esi);
	game::sub_4A0890(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x794E6C);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0xC);

loc_4BCB43:
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x79013C);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x79012C);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0xC);
	goto loc_4BCC38;

loc_4BCB88:
	push(mv, &ts->esp, 0x794E68);
	mov(mv, x86::mem(ts->esp + 0x34, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x30, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->eax);
	push(mv, &ts->esp, 0x10);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->ebx + 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_7425D0(ts, mv);
	mov(&ts->edx, ts->edi);
	add(&ts->esp, 0x10);
	and_(&ts->edx, 0x80000001);
	if (!ts->eflags.sign) {
        goto loc_4BCBBF;
    }
	dec(&ts->edx);
	or_(&ts->edx, 0xFFFFFFFE);
	inc(&ts->edx);

loc_4BCBBF:
	if (ts->eflags.zero) {
        goto loc_4BCBED;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->eax);
	game::sub_4A0890(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x794E6C);
	game::sub_50B990(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x2C, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0xC);

loc_4BCBED:
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->edx, x86::mem(ts->ebx + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x79013C);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebx, 4));
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x79012C);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x28, 4));
	add(&ts->esp, 0x10);

loc_4BCC38:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	inc(&ts->edi);
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0x2);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4BCAF0;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	inc(&ts->ebp);
	cmp(&ts->eflags, ts->ebp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebp);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4BCAE0;
    }
	pop(mv, &ts->esp, ts->ebx);

loc_4BCC5D:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0x24);
	retn(mv, &ts->esp);
}

void sub_4BCC70(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x7C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4BCC8C;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x7C, 4), 0x0);

loc_4BCC8C:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->esi + 0x88, 4), 0xFFFFFFFF);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4BCCCE;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x6CF6E689);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x911AB364);
	push(mv, &ts->esp, 0x911AB364);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->esi);
	game::sub_558540(ts, mv);
	add(&ts->esp, 0x1C);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4BCCCE:
	mov(&ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	goto sub_4BCA10;
}

void sub_4BCCE0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	cmp(&ts->eflags, ts->edi, 0x9120409E);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4BCCF4;
    }
	push(mv, &ts->esp, 0xFFFFFFFF);
	goto loc_4BCCFE;

loc_4BCCF4:
	cmp(&ts->eflags, ts->edi, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_4BCD05;
    }
	push(mv, &ts->esp, 0x1);

loc_4BCCFE:
	mov(&ts->ecx, ts->esi);
	game::sub_4A0B80(ts, mv);

loc_4BCD05:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x40, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4BCD20(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x850088, 4));
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->ecx, 0xA);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4BCD30;
    }
	jmp(x86::mem(0x4BCD84, 4));

loc_4BCD37:
	mov(&ts->eax, 0x93FDEE74);
	goto def_4BCD30;

loc_4BCD3E:
	mov(&ts->eax, 0xDCB9F861);
	goto def_4BCD30;

loc_4BCD45:
	mov(&ts->eax, 0x35102EDF);
	goto def_4BCD30;

loc_4BCD4C:
	mov(&ts->eax, 0xD7162CFA);
	goto def_4BCD30;

loc_4BCD53:
	mov(&ts->eax, 0x30DA61E1);
	goto def_4BCD30;

loc_4BCD5A:
	mov(&ts->eax, 0x75F903F4);
	goto def_4BCD30;

loc_4BCD61:
	mov(&ts->eax, 0x613D3106);

def_4BCD30:
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0xFD81B9F7);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4BCDB0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x50);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->eax, ts->eax);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x18, 1), 0x0);
	mov(&ts->ecx, 0xF);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x19, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x5C, 4));
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	game::sub_43DBD0(ts, mv);
	push(mv, &ts->esp, 0x2F0CFB04);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, 0x40);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x7902C8);
	push(mv, &ts->esp, ts->eax);
	game::sub_558310(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->eax);
	game::sub_582B60(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xF8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x4AE650);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x34, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_73F8D0(ts, mv);
	add(&ts->esp, 0x34);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4BCE4A;
    }
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_49E810(ts, mv);
	add(&ts->esp, 0x8);

loc_4BCE4A:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x50);
	retn(mv, &ts->esp, 0x4);
}

void sub_4BCE60(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	sub(&ts->esp, 0x500);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebp, ts->ecx);
	game::sub_582B60(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_583140(ts, mv);
	xor_(&ts->ebx, ts->ebx);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ebp + 0x54, 4), ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4BCEC8;
    }

loc_4BCE87:
	push(mv, &ts->esp, ts->ebx);
	game::sub_582B60(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_582B90(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x298, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_49E870(ts, mv);
	mov(&ts->esi, ts->eax);
	mov(&ts->ecx, 0x9F);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x18, 4));
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x60, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4BCEC0;
    }
	inc(mv, x86::mem(ts->ebp + 0x1C8, 4));

loc_4BCEC0:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x54, 4));
	inc(&ts->ebx);
	cmp(&ts->eflags, ts->ebx, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4BCE87;
    }

loc_4BCEC8:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x1C8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4BCEEA;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	game::sub_50CEE0(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x9757A0C0);
	game::sub_55DDE0(ts, mv);
	add(&ts->esp, 0x10);

loc_4BCEEA:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_4BCF00(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x280);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebx, ts->ecx);
	xor_(&ts->ebp, ts->ebp);
	mov(&ts->edi, ts->edi);

loc_4BCF10:
	lea(mv, &ts->esi, x86::mem(ts->ebx + 0x6C, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->esi);
	game::sub_43BE60(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4BCFD2;
    }
	add(&ts->eax, 0xFFFFFFFC);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_4BCFD2;
    }
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->esi);
	game::sub_43BE60(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4BCF43;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_4BCF45;

loc_4BCF43:
	xor_(&ts->eax, ts->eax);

loc_4BCF45:
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->ebx + 0x64, 4));
	game::sub_52E7D0(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x14, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_4BCF95;
    }
	add(&ts->eax, 0x18);
	push(mv, &ts->esp, ts->eax);
	game::sub_582B60(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_582BB0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_49E870(ts, mv);
	sub(&ts->esp, 0x274);
	mov(&ts->edi, ts->esp);
	mov(&ts->esi, ts->eax);
	mov(&ts->ecx, 0x9F);
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x28C, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x34, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->ebx);
	game::sub_4A1380(ts, mv);
	goto loc_4BCFD2;

loc_4BCF95:
	lea(mv, &ts->esi, x86::mem(ts->ebp + 0x1, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x790258);
	game::sub_50B9C0(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FC44);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x78FEBC);
	game::sub_50B9C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x2C);

loc_4BCFD2:
	inc(&ts->ebp);
	cmp(&ts->eflags, ts->ebp, 0xA);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4BCF10;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x280);
	retn(mv, &ts->esp);
}

void sub_4BCFF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	sub(&ts->esp, 0x504);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x11C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4BD080;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x88, 4));
	add(&ts->eax, 0x18);
	push(mv, &ts->esp, ts->eax);
	game::sub_582B60(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_582BB0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x298, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_49E870(ts, mv);
	mov(&ts->esi, ts->eax);
	mov(&ts->ecx, 0x9F);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x18, 4));
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x70, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4BD080;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x38, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4BD080;
    }
	game::sub_582B60(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xF8, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x6C, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_73F0A0(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4BD079;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_49E810(ts, mv);
	add(&ts->esp, 0x8);

loc_4BD079:
	mov(&ts->ecx, ts->ebx);
	game::sub_4BCF00(ts, mv);

loc_4BD080:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_4BD090(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x27C);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ebx, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x1B0, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_52D100(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4BD0DE;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xC519BFC0);
	game::sub_55DDA0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F568);
	push(mv, &ts->esp, 0x794EF4);
	push(mv, &ts->esp, ts->edx);
	game::sub_5426C0(ts, mv);
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x27C);
	retn(mv, &ts->esp);

loc_4BD0DE:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x1B4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_52D100(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4BD121;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xB5971BF1);
	game::sub_55DDA0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F568);
	push(mv, &ts->esp, 0x794EE8);
	push(mv, &ts->esp, ts->edx);
	game::sub_5426C0(ts, mv);
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x27C);
	retn(mv, &ts->esp);

loc_4BD121:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x1B8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_52D100(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4BD164;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x911AB364);
	game::sub_55DDA0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F568);
	push(mv, &ts->esp, 0x794EE0);
	push(mv, &ts->esp, ts->edx);
	game::sub_5426C0(ts, mv);
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x27C);
	retn(mv, &ts->esp);

loc_4BD164:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x1BC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_52D100(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4BD1A7;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x406415E3);
	game::sub_55DDA0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F568);
	push(mv, &ts->esp, 0x794ED4);
	push(mv, &ts->esp, ts->edx);
	game::sub_5426C0(ts, mv);
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x27C);
	retn(mv, &ts->esp);

loc_4BD1A7:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x1A8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_52D100(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4BD1EA;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x5073EF13);
	game::sub_55DDA0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F568);
	push(mv, &ts->esp, 0xCF6F0439);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x27C);
	retn(mv, &ts->esp);

loc_4BD1EA:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x1AC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_52D100(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4BD22D;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xD9FEEC59);
	game::sub_55DDA0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F568);
	push(mv, &ts->esp, 0xABA93D3F);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x27C);
	retn(mv, &ts->esp);

loc_4BD22D:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x1A0, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_52D100(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4BD270;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x72619778);
	game::sub_55DDA0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F568);
	push(mv, &ts->esp, 0x444969FD);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x27C);
	retn(mv, &ts->esp);

loc_4BD270:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x1A4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_52D100(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4BD2B3;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x911C0A4B);
	game::sub_55DDA0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F568);
	push(mv, &ts->esp, 0x444969FE);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x27C);
	retn(mv, &ts->esp);

loc_4BD2B3:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x11C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4BD305;
    }
	mov(mv, &ts->esi, x86::mem(ts->ebx + 0x88, 4));
	lea(mv, &ts->ecx, x86::mem(ts->ebx + 0x64, 4));
	game::sub_54EB80(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x88, 4));
	add(&ts->eax, 0x18);
	add(&ts->esi, 0x18);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4BD305;
    }
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	game::sub_4A0F40(ts, mv);
	sub(&ts->esp, 0x27C);
	mov(&ts->edi, ts->esp);
	mov(&ts->ecx, 0x9F);
	lea(mv, &ts->esi, x86::mem(ts->esp + 0x288, 4));
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->ebx);
	game::sub_4A15F0(ts, mv);

loc_4BD305:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x27C);
	retn(mv, &ts->esp);
}

void sub_4BD310(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776418);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	game::sub_551DE0(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x794F00);
	mov(mv, x86::mem(ts->esi + 0x50, 4), 0x0);
	mov(mv, x86::mem(ts->esi + 0x54, 1), 0x0);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(0x836390, 4), ts->ecx);
	mov(mv, x86::mem(0x836394, 4), ts->ecx);
	push(mv, &ts->esp, 0x1);
	mov(mv, x86::mem(0x836398, 4), ts->ecx);
	push(mv, &ts->esp, 0x78FFD0);
	mov(mv, x86::mem(0x83639C, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x7902B8);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0x0);
	game::sub_5426C0(ts, mv);
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xC);
	push(mv, &ts->esp, 0x22729437);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0x6);
	push(mv, &ts->esp, 0x5B9D88B9);
	mov(&ts->ecx, ts->esi);
	game::sub_555F80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_776410:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

SEH_4E3300:
	mov(&ts->eax, 0x7DEE70);
	goto ___CxxFrameHandler;
}

void sub_4BD3C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4BD3E0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4BD3D8;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4BD3D8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4BD3E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x794F00);
	goto sub_510D40;
}

void sub_4BD3F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_582B60(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_582E10(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x64);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4BD42D;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x6AA4C280);
	push(mv, &ts->esp, 0x34DC1BEC);
	push(mv, &ts->esp, 0x34DC1BEC);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->eax);
	game::sub_558570(ts, mv);
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4BD42D:
	game::sub_582B60(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xF8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x4AE6D0);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_73F9C0(ts, mv);
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4BD470;
    }
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x10E, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_4BD45F;
    }
	cmp(&ts->eflags, ts->eax, 0xFFFFFF94);
	if (ts->eflags.zero) {
        goto loc_4BD481;
    }

loc_4BD45F:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_49E810(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4BD470:
	push(mv, &ts->esp, 0x836014);
	push(mv, &ts->esp, 0xA948A646);
	mov(&ts->ecx, ts->esi);
	game::sub_4A1700(ts, mv);

loc_4BD481:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4BD490(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x100);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ebx, ts->ecx);
	push(mv, &ts->esp, 0x836014);
	mov(mv, x86::mem(ts->ebx + 0x10F, 1), 0x1);
	game::sub_58F6D0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_58D030(ts, mv);
	game::sub_58F6D0(ts, mv);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	game::sub_43BE80(ts, mv);
	mov(&ts->esi, ts->eax);
	dec(&ts->esi);
	if (ts->eflags.sign) {
        goto loc_4BD504;
    }
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);

loc_4BD4C8:
	push(mv, &ts->esp, ts->esi);
	game::sub_58F6D0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_5847F0(ts, mv);
	mov(&ts->edi, ts->eax);
	lea(mv, &ts->ebp, x86::mem(ts->edi + 0xC, 4));
	push(mv, &ts->esp, 0x836014);
	push(mv, &ts->esp, ts->ebp);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4BD4FF;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x8, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	game::sub_58F6D0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_58D150(ts, mv);

loc_4BD4FF:
	dec(&ts->esi);
	if (!ts->eflags.sign) {
        goto loc_4BD4C8;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);

loc_4BD504:
	game::sub_58F6D0(ts, mv);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	game::sub_43BE80(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4BD52E;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1);
	game::sub_50CEE0(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x9757A0C0);
	game::sub_55DDE0(ts, mv);
	add(&ts->esp, 0x10);

loc_4BD52E:
	push(mv, &ts->esp, 0x836014);
	game::sub_582B60(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_582D00(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4BD579;
    }
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(0x836378, 4), 0x0);
	game::sub_582B60(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_502770(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_73E380(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x2);
	game::sub_50CEE0(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x9757A0C0);
	game::sub_55DDE0(ts, mv);
	add(&ts->esp, 0x18);

loc_4BD579:
	mov(mv, &ts->ecx, x86::mem(0x836010, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	game::sub_73EE20(ts, mv);
	game::sub_582B60(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0xF8, 4));
	push(mv, &ts->esp, 0x836014);
	push(mv, &ts->esp, ts->edx);
	game::sub_73FC50(ts, mv);
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x836014);
	game::sub_582B60(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_582BB0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4BD5E6;
    }
	push(mv, &ts->esp, 0x1);
	mov(mv, x86::mem(ts->ebx + 0x10F, 1), ts->al);
	push(mv, &ts->esp, 0x78F5B8);
	mov(mv, x86::mem(0x83637C, 4), 0x1);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x100);
	retn(mv, &ts->esp);

loc_4BD5E6:
	game::sub_582B60(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xF8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x4AE6F0);
	push(mv, &ts->esp, 0x836014);
	push(mv, &ts->esp, ts->eax);
	game::sub_740750(ts, mv);
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4BD638;
    }
	mov(mv, &ts->cl, x86::mem(ts->ebx + 0x10E, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_4BD618;
    }
	cmp(&ts->eflags, ts->eax, 0xFFFFFF94);
	if (ts->eflags.zero) {
        goto loc_4BD66E;
    }

loc_4BD618:
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_49E810(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x83637C, 4), 0x1);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x100);
	retn(mv, &ts->esp);

loc_4BD638:
	push(mv, &ts->esp, 0x836014);
	push(mv, &ts->esp, 0xB8066FD);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_4400D0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x7902C8);
	push(mv, &ts->esp, ts->eax);
	game::sub_558310(ts, mv);
	add(&ts->esp, 0x18);
	mov(mv, x86::mem(ts->ebx + 0x4C, 4), ts->eax);

loc_4BD66E:
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x83637C, 4), 0x1);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x100);
	retn(mv, &ts->esp);
}

void sub_4BD690(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x100);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_582B60(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xF8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x4AE670);
	push(mv, &ts->esp, 0x2);
	push(mv, &ts->esp, 0x836014);
	push(mv, &ts->esp, ts->eax);
	game::sub_73FAD0(ts, mv);
	add(&ts->esp, 0x14);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4BD6E2;
    }
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x10E, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_4BD6CD;
    }
	cmp(&ts->eflags, ts->eax, 0xFFFFFF94);
	if (ts->eflags.zero) {
        goto loc_4BD722;
    }

loc_4BD6CD:
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_49E810(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x100);
	retn(mv, &ts->esp);

loc_4BD6E2:
	push(mv, &ts->esp, 0x836014);
	push(mv, &ts->esp, 0x4B14AF4E);
	mov(mv, x86::mem(0x83637C, 4), 0x1);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_4400D0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x7902C8);
	push(mv, &ts->esp, ts->eax);
	game::sub_558310(ts, mv);
	add(&ts->esp, 0x18);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->eax);

loc_4BD722:
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x100);
	retn(mv, &ts->esp);
}

void sub_4BD730(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	sub(&ts->esp, 0x314);
	push(mv, &ts->esp, ts->ebx);
	xor_(&ts->eax, ts->eax);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0xD, 4), ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x15, 4), ts->eax);
	push(mv, &ts->esp, 0x10);
	mov(&ts->ebx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x1D, 4), ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->esp + 0x21, 2), ts->ax);
	push(mv, &ts->esp, 0x836014);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x1C, 1), 0x0);
	mov(mv, x86::mem(ts->esp + 0x2B, 1), ts->al);
	game::sub_43DC00(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x836014);
	game::sub_582B60(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_582BB0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xA8, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_49E870(ts, mv);
	mov(&ts->esi, ts->eax);
	push(mv, &ts->esp, 0x10);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x9F);
	mov(&ts->edi, 0x835FB8);
	push(mv, &ts->esp, 0x836014);
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));
	game::sub_43DC00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x7F44FC, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x18);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4BD9E9;
    }
	mov(mv, &ts->eax, x86::mem(0x835FC0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4BD925;
    }
	test(mv, &ts->eflags, x86::mem(0x836008, 4), 0x20000);
	if (!ts->eflags.zero) {
        goto loc_4BD925;
    }
	mov(mv, &ts->eax, x86::mem(0x835FF4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4BD8E9;
    }
	mov(mv, &ts->eax, x86::mem(0x835FEC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, 0x836014);
	if (ts->eflags.zero) {
        goto loc_4BD85C;
    }
	mov(mv, x86::mem(ts->esp + 0x24, 1), 0x0);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x1F);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x25, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	push(mv, &ts->esp, 0xA4CA09C8);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, 0x80);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x4, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x34DC1BEC);
	push(mv, &ts->esp, 0x34DC1BEC);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->ecx);
	game::sub_558540(ts, mv);
	add(&ts->esp, 0x28);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_4BD85C:
	game::sub_58F6D0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_58FF10(ts, mv);
	cmp(&ts->eflags, ts->eax, 0xFFFFFFF3);
	if (!ts->eflags.zero) {
        goto loc_4BD892;
    }
	mov(mv, &ts->ebx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0x836014);
	push(mv, &ts->esp, 0xE973EA37);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x34DC1BEC);
	push(mv, &ts->esp, 0x34DC1BEC);
	goto loc_4BD9FB;

loc_4BD892:
	cmp(&ts->eflags, ts->eax, 0xFFFFFFF0);
	if (!ts->eflags.zero) {
        goto loc_4BD89E;
    }
	push(mv, &ts->esp, 0x89E3B31F);
	goto loc_4BD8A8;

loc_4BD89E:
	cmp(&ts->eflags, ts->eax, 0xFFFFFFF2);
	if (!ts->eflags.zero) {
        goto loc_4BD8C0;
    }
	push(mv, &ts->esp, 0x2AD727F);

loc_4BD8A8:
	mov(mv, &ts->ebx, x86::mem(ts->ebx + 0x4, 4));
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x34DC1BEC);
	push(mv, &ts->esp, 0x34DC1BEC);
	goto loc_4BD9FB;

loc_4BD8C0:
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F5B8);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	mov(mv, x86::mem(0x83637C, 4), 0x1);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_4BD8E9:
	mov(mv, &ts->ebx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0x97B25A02);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x34DC1BEC);
	push(mv, &ts->esp, 0x34DC1BEC);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->ebx);
	game::sub_558540(ts, mv);
	add(&ts->esp, 0x1C);
	mov(mv, x86::mem(0x83637C, 4), 0x1);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_4BD925:
	mov(mv, &ts->eax, x86::mem(0x835FF4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4BD978;
    }
	push(mv, &ts->esp, 0x836014);
	game::sub_58F6D0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_58D030(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x7F44FC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xF9E94D58);
	game::sub_55DDA0(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F5B8);
	mov(mv, x86::mem(0x83637C, 4), 0x1);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_4BD978:
	mov(mv, &ts->edx, x86::mem(0x7F44FC, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0xF9E94D58);
	game::sub_55DDA0(ts, mv);
	game::sub_582B60(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xF8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x4AE710);
	push(mv, &ts->esp, 0x2);
	push(mv, &ts->esp, 0x836014);
	push(mv, &ts->esp, ts->eax);
	game::sub_73FB50(ts, mv);
	add(&ts->esp, 0x1C);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4BD9C6;
    }
	push(mv, &ts->esp, 0x836014);
	push(mv, &ts->esp, 0xED8E446B);
	mov(&ts->ecx, ts->ebx);
	game::sub_4A1700(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_4BD9C6:
	mov(mv, &ts->cl, x86::mem(ts->ebx + 0x10E, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_4BD9D5;
    }
	cmp(&ts->eflags, ts->eax, 0xFFFFFF94);
	if (ts->eflags.zero) {
        goto loc_4BDA0E;
    }

loc_4BD9D5:
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_49E810(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_4BD9E9:
	mov(mv, &ts->ebx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0xD831EAB3);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0xFFFFFFFF);

loc_4BD9FB:
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->ebx);
	game::sub_558540(ts, mv);
	add(&ts->esp, 0x1C);

loc_4BDA0E:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_4BDA20(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0xCC);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xD4, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x1180, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, 0xC8);
	push(mv, &ts->esp, ts->edx);
	game::sub_743450(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x835FE0, 4));
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4BDA7B;
    }
	game::sub_582B60(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xF8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x4AE730);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x63686174);
	push(mv, &ts->esp, ts->eax);
	game::sub_7407C0(ts, mv);
	add(&ts->esp, 0x18);
	goto loc_4BDA9F;

loc_4BDA7B:
	game::sub_582B60(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xF8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x4AE730);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x836014);
	push(mv, &ts->esp, ts->eax);
	game::sub_73FC80(ts, mv);
	add(&ts->esp, 0x14);

loc_4BDA9F:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4BDABA;
    }
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_49E810(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0xCC);
	retn(mv, &ts->esp, 0x4);

loc_4BDABA:
	mov(mv, x86::mem(ts->esi + 0x1380, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0xCC);
	retn(mv, &ts->esp, 0x4);
}

void sub_4BDAD0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x22C);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x238, 4));
	mov(&ts->ebp, ts->ecx);
	mov(&ts->eax, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebp);
	lea(mv, &ts->edx, x86::mem(ts->eax + 0x1, 4));
	goto loc_4BDAF0;

loc_4BDAF0:
	mov(mv, &ts->cl, x86::mem(ts->eax, 1));
	inc(&ts->eax);
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_4BDAF0;
    }
	sub(&ts->eax, ts->edx);
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	mov(&ts->edi, ts->eax);
	mov(&ts->edx, ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	if (ts->eflags.zero) {
        goto loc_4BDB22;
    }
	mov(mv, &ts->al, x86::mem(ts->esi, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4BDB22;
    }
	nop();

loc_4BDB10:
	movsx(&ts->ax, ts->al);
	mov(mv, x86::mem(ts->ecx, 2), ts->ax);
	mov(mv, &ts->al, x86::mem(ts->edx + 0x1, 1));
	add(&ts->ecx, 0x2);
	inc(&ts->edx);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4BDB10;
    }

loc_4BDB22:
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(ts->ecx, 2), 0x0);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x1174, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x116C, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50BCE0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x1170, 4));
	sub(&ts->eax, 0x10);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fcompp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.parity) {
        goto loc_4BDBEC;
    }
	push(mv, &ts->esp, ts->ebx);

loc_4BDB61:
	dec(&ts->edi);
	cmp(&ts->eflags, ts->edi, 0x1);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4BDBD3;
    }
	test(&ts->eflags, ts->edi, ts->edi);
	mov(&ts->eax, ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	if (ts->eflags.zero) {
        goto loc_4BDB9E;
    }
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4BDB99;
    }
	xor_(&ts->edx, ts->edx);
	cmp(mv, &ts->eflags, x86::mem(ts->esi, 1), ts->dl);
	lea(mv, &ts->ebx, x86::mem(ts->edi - 0x1, 4));
	if (ts->eflags.zero) {
        goto loc_4BDB99;
    }
	mov(&ts->edi, ts->edi);

loc_4BDB80:
	cmp(&ts->eflags, ts->ebx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_4BDB99;
    }
	movsx(mv, &ts->bp, x86::mem(ts->eax, 1));
	mov(mv, x86::mem(ts->ecx, 2), ts->bp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x14, 4));
	add(&ts->ecx, 0x2);
	inc(&ts->eax);
	inc(&ts->edx);
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 1), 0x0);
	if (!ts->eflags.zero) {
        goto loc_4BDB80;
    }

loc_4BDB99:
	mov(mv, x86::mem(ts->ecx, 2), 0x0);

loc_4BDB9E:
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x1174, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x116C, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50BCE0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x1170, 4));
	sub(&ts->eax, 0x10);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fcompp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.parity) {
        goto loc_4BDB61;
    }

loc_4BDBD3:
	cmp(mv, &ts->eflags, ts->edi, x86::mem(ts->esp + 0x18, 4));
	pop(mv, &ts->esp, ts->ebx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4BDBEC;
    }
	lea(mv, &ts->ecx, x86::mem(ts->edi - 0x1, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4BDBEC;
    }

loc_4BDBE1:
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + (ts->esi), 1), 0x20);
	if (ts->eflags.zero) {
        goto loc_4BDBFA;
    }
	dec(&ts->ecx);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_4BDBE1;
    }

loc_4BDBEC:
	mov(&ts->eax, ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0x22C);
	retn(mv, &ts->esp, 0x4);

loc_4BDBFA:
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4BDBEC;
    }
	mov(&ts->eax, ts->ecx);

loc_4BDC00:
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + (ts->esi), 1), 0x20);
	if (!ts->eflags.zero) {
        goto loc_4BDC18;
    }
	dec(&ts->ecx);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_4BDC00;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	inc(&ts->eax);
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0x22C);
	retn(mv, &ts->esp, 0x4);

loc_4BDC18:
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4BDC1E;
    }
	mov(&ts->eax, ts->ecx);

loc_4BDC1E:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	inc(&ts->eax);
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0x22C);
	retn(mv, &ts->esp, 0x4);
}

void sub_4BDC30(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1168, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4BDD1E;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x168, 4));
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->ebx, ts->ebx);
	game::sub_43DBB0(ts, mv);
	lea(mv, &ts->ebp, x86::mem(ts->eax + (ts->esi) + 0x168, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->ebp, ts->edi);
	mov(&ts->eax, ts->ebp);
	mov(&ts->dl, 0xA);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_4BDC79;
    }

loc_4BDC64:
	cmp(mv, &ts->eflags, x86::mem(ts->eax - 0x1, 1), ts->dl);
	if (!ts->eflags.zero) {
        goto loc_4BDC74;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1178, 4));
	inc(&ts->ebx);
	cmp(&ts->eflags, ts->ebx, ts->ecx);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_4BDC79;
    }

loc_4BDC74:
	dec(&ts->eax);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4BDC64;
    }

loc_4BDC79:
	xor_(&ts->edi, ts->edi);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	mov(&ts->ecx, ts->eax);
	if (!ts->eflags.carry) {
        goto loc_4BDC92;
    }

loc_4BDC81:
	mov(mv, &ts->bl, x86::mem(ts->ecx, 1));
	inc(&ts->ecx);
	cmp(&ts->eflags, ts->bl, ts->dl);
	if (!ts->eflags.zero) {
        goto loc_4BDC8E;
    }
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, 0xC);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4BDC92;
    }

loc_4BDC8E:
	cmp(&ts->eflags, ts->ecx, ts->ebp);
	if (ts->eflags.carry) {
        goto loc_4BDC81;
    }

loc_4BDC92:
	sub(&ts->ecx, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	inc(&ts->ecx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1168, 4));
	add(&ts->ecx, 0x64);
	game::sub_51DEE0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_4AE760(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1168, 4));
	or_(mv, x86::mem(ts->eax + 0x1C, 4), 0x400802);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x117C, 4));
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->eax, 0xC);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x110, 4));
	mov(&ts->ecx, ts->edi);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_4BDCD8;
    }
	push(mv, &ts->esp, 0x0);
	game::sub_50D880(ts, mv);
	goto loc_4BDCF5;

loc_4BDCD8:
	push(mv, &ts->esp, 0x1);
	game::sub_50D880(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->edi);
	game::sub_50D820(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x2);
	mov(&ts->ecx, ts->edi);
	game::sub_50D820(ts, mv);

loc_4BDCF5:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x117C, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x1178, 4));
	mov(&ts->eax, ts->ecx);
	sub(&ts->eax, ts->ebx);
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4BDD10;
    }
	mov(&ts->eax, 0x1);

loc_4BDD10:
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xC);
	mov(&ts->ecx, ts->edi);
	game::sub_538080(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);

loc_4BDD1E:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4BDD20(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xC, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->esi, 1), 0x0);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4BDD63;
    }
	mov(&ts->edi, ts->edi);

loc_4BDD30:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->ebx);
	game::sub_4BDAD0(ts, mv);
	mov(&ts->edi, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x1, 4));
	cmp(&ts->eflags, ts->eax, 0x1000);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4BDD6A;
    }
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->ebx);
	game::sub_4A1FD0(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esi + (ts->edi), 1));
	add(&ts->esi, ts->edi);
	cmp(&ts->eflags, ts->al, 0x20);
	if (!ts->eflags.zero) {
        goto loc_4BDD5E;
    }

loc_4BDD56:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1, 1));
	inc(&ts->esi);
	cmp(&ts->eflags, ts->al, 0x20);
	if (ts->eflags.zero) {
        goto loc_4BDD56;
    }

loc_4BDD5E:
	cmp(mv, &ts->eflags, x86::mem(ts->esi, 1), 0x0);
	if (!ts->eflags.zero) {
        goto loc_4BDD30;
    }

loc_4BDD63:
	mov(&ts->ecx, ts->ebx);
	game::sub_4BDC30(ts, mv);

loc_4BDD6A:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_4BDD70(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x1178, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->ecx + 0x117C, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4BDD85;
    }
	inc(&ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x1178, 4), ts->eax);

loc_4BDD85:
	goto sub_4BDC30;
}

void sub_4BDD90(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x1178, 4));
	cmp(&ts->eflags, ts->eax, 0xC);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4BDDA2;
    }
	dec(&ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x1178, 4), ts->eax);

loc_4BDDA2:
	goto sub_4BDC30;
}

void sub_4BDDB0(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_4BDDCE;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x794F18);
	push(mv, &ts->esp, ts->eax);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);

locret_4BDDCE:
	retn(mv, &ts->esp, 0x14);
}

void sub_4BDDE0(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_4BDDFE;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79040C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);

locret_4BDDFE:
	retn(mv, &ts->esp, 0x14);
}

void sub_4BDE10(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_4BDE2E;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x794F44);
	push(mv, &ts->esp, ts->eax);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);

locret_4BDE2E:
	retn(mv, &ts->esp, 0x14);
}

void sub_4BDE40(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77395C);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xBC782557);
	push(mv, &ts->esp, 0x78FC4C);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	push(mv, &ts->esp, 0x48);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0xC);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4BDEB4;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x3BFE592C);
	push(mv, &ts->esp, 0xA2515EBD);
	mov(&ts->ecx, ts->edi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x794F10);
	goto loc_4BDEB6;

loc_4BDEB4:
	xor_(&ts->edi, ts->edi);

loc_4BDEB6:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	or_(&ts->ebx, 0xFFFFFFFF);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));
	push(mv, &ts->esp, 0x48);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4BDEFC;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x553EDA6B);
	push(mv, &ts->esp, 0x9973213C);
	mov(&ts->ecx, ts->edi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x794F34);
	goto loc_4BDEFE;

loc_4BDEFC:
	xor_(&ts->edi, ts->edi);

loc_4BDEFE:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	push(mv, &ts->esp, 0x48);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x2);
	if (ts->eflags.zero) {
        goto loc_4BDF41;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x29742F2D);
	push(mv, &ts->esp, 0x9DD4BB38);
	mov(&ts->ecx, ts->edi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x794F3C);
	goto loc_4BDF43;

loc_4BDF41:
	xor_(&ts->edi, ts->edi);

loc_4BDF43:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4C, 4));
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50B8A0(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->ebx + 0x20, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_773920:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x794F88);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773934:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x794F74);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773948:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x794F60);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4BDE40:
	mov(&ts->eax, 0x7DFB30);
	goto ___CxxFrameHandler;
}

void sub_4BDF80(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0x911AB364);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4BE065;
    }
	if (ts->eflags.zero) {
        goto loc_4BE049;
    }
	cmp(&ts->eflags, ts->eax, 0x406415E3);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4BE031;
    }
	if (ts->eflags.zero) {
        goto loc_4BDFFD;
    }
	cmp(&ts->eflags, ts->eax, 0xC407210);
	if (ts->eflags.zero) {
        goto loc_4BDFFD;
    }
	cmp(&ts->eflags, ts->eax, 0x35F8620B);
	if (!ts->eflags.zero) {
        goto loc_4BE1AC;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FEF4);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, 0x8384E0);
	game::sub_537C00(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FEF4);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, 0x7902A0);
	game::sub_537C00(ts, mv);
	add(&ts->esi, 0x64);
	add(&ts->esp, 0x20);
	mov(&ts->ecx, ts->esi);
	game::sub_4958D0(ts, mv);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_538500(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4BDFFD:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x16C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4BE015;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x88, 4));
	add(&ts->eax, 0x18);
	mov(mv, x86::mem(0x835BF8, 4), ts->eax);

loc_4BE015:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F5B8);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4BE031:
	cmp(&ts->eflags, ts->eax, 0x72619778);
	if (!ts->eflags.zero) {
        goto loc_4BE1AC;
    }
	push(mv, &ts->esp, 0xFFFFFFFF);
	mov(&ts->ecx, ts->esi);
	game::sub_4A20D0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4BE049:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F5B8);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4BE065:
	cmp(&ts->eflags, ts->eax, 0xC98356BA);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4BE188;
    }
	if (ts->eflags.zero) {
        goto loc_4BE13A;
    }
	cmp(&ts->eflags, ts->eax, 0x911C0A4B);
	if (ts->eflags.zero) {
        goto loc_4BE12D;
    }
	cmp(&ts->eflags, ts->eax, 0x9803F6E2);
	if (!ts->eflags.zero) {
        goto loc_4BE1AC;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x64, 4));
	game::sub_54EB80(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x110, 4));
	game::sub_538130(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x170, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_52D100(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4BE0C7;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x72619778);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4BE0C7:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x174, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_52D100(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4BE0EF;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x911C0A4B);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4BE0EF:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14C, 4));
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_4BE118;
    }
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4BE1AC;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x911C0A4B);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4BE118:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x72619778);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4BE12D:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_4A20D0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4BE13A:
	game::sub_582B60(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_584F10(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x51, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4BE1AC;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_5379A0(ts, mv);
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, 0x7902A0);
	mov(mv, x86::mem(ts->esi + 0x51, 1), 0x0);
	game::sub_537950(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x835BF8, 4));
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4BE1AC;
    }
	push(mv, &ts->esp, 0x7902A0);
	push(mv, &ts->esp, 0x64);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4BE188:
	cmp(&ts->eflags, ts->eax, 0xE1FDE1D1);
	if (!ts->eflags.zero) {
        goto loc_4BE1AC;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79031C);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, 0x7902A0);
	game::sub_537C00(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x51, 1), 0x1);
	add(&ts->esp, 0x10);

loc_4BE1AC:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);
}

void sub_4BE1B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::std__ios_base___ios_base_void_(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4BE1C8;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4BE1C8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4BE1D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x68, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4BE1E0;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_4BE1E2;

loc_4BE1E0:
	xor_(&ts->eax, ts->eax);

loc_4BE1E2:
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4BE204;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	add(&ts->eax, 0xFFFFFFFC);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA00(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_4BE204:
	xor_(&ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA00(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_4BE220(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	sub(&ts->esp, 0x80);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x78, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_51F440(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x7F4544, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x4AE750);
	push(mv, &ts->esp, ts->eax);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x836014);
	game::sub_58B9A0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_58BC60(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x8, 1), 0x0);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x1F);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x9, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	push(mv, &ts->esp, 0x836014);
	push(mv, &ts->esp, 0x5566D903);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, 0x80);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x7902C8);
	push(mv, &ts->esp, ts->eax);
	game::sub_558310(ts, mv);
	add(&ts->esp, 0x1C);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_4BE2C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776418);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	game::sub_551DE0(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi, 4), 0x794F9C);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x50, 1), ts->al);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x164, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0x165, 1), ts->al);
	mov(mv, &ts->edx, x86::mem(0x835FB8, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x836014);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	game::sub_58F6D0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_5847A0(ts, mv);
	push(mv, &ts->esp, 0x4F876B6F);
	mov(mv, x86::mem(ts->esi + 0x160, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDA473D2F);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x308DB484);
	push(mv, &ts->esp, 0xDA473D30);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x2C119933);
	push(mv, &ts->esp, 0xDA473D31);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->ecx, ts->esi);
	game::sub_4A2680(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_776410:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

SEH_4E3300:
	mov(&ts->eax, 0x7DEE70);
	goto ___CxxFrameHandler;
}

void sub_4BE3A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776418);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x794F9C);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	mov(mv, x86::mem(ts->esi + 0x165, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4BE3E9;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), 0x0);

loc_4BE3E9:
	game::sub_582B60(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0xFC, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_4BE41A;
    }
	game::sub_582B60(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xF8, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4BE41A;
    }
	game::sub_582B60(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xF8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_73EA00(ts, mv);
	add(&ts->esp, 0x4);

loc_4BE41A:
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	game::sub_510D40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_776410:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

SEH_4E3300:
	mov(&ts->eax, 0x7DEE70);
	goto ___CxxFrameHandler;
}

void sub_4BE440(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x918, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x840, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	game::sub_511E60(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(&ts->edi, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	game::sub_4901D0(ts, mv);
	add(&ts->esp, 0x14);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4BE481;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xC8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C990(ts, mv);
	add(&ts->esp, 0x8);
	goto loc_4BE49B;

loc_4BE481:
	push(mv, &ts->esp, 0x790324);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50C990(ts, mv);
	add(&ts->esp, 0xC);

loc_4BE49B:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x918, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x840, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_511E60(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(&ts->edi, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	game::sub_4901D0(ts, mv);
	add(&ts->esp, 0x14);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4BE4D7;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xCC, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C990(ts, mv);
	add(&ts->esp, 0x8);
	goto loc_4BE4F1;

loc_4BE4D7:
	push(mv, &ts->esp, 0x790324);
	game::sub_505450(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xCC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C990(ts, mv);
	add(&ts->esp, 0xC);

loc_4BE4F1:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x64, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x60, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x6C, 4));
	game::sub_538080(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x790E98);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x790E84);
	mov(&ts->ebp, ts->eax);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x50, 4));
	add(&ts->esp, 0x18);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4BE53E;
    }
	add(&ts->eax, 0xFFFFFFF0);
	goto loc_4BE540;

loc_4BE53E:
	xor_(&ts->eax, ts->eax);

loc_4BE540:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4BE57D;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1A5, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4BE658;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x444969FD);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x1A5, 1), 0x0);
	mov(&ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	goto loc_497CD0;

loc_4BE57D:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4BE589;
    }
	add(&ts->eax, 0xFFFFFFF0);
	goto loc_4BE58B;

loc_4BE589:
	xor_(&ts->eax, ts->eax);

loc_4BE58B:
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4BE5C5;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1A6, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4BE658;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x444969FE);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x1A6, 1), 0x0);
	mov(&ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	goto loc_497CD0;

loc_4BE5C5:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1A5, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4BE5EC;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x444969FD);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x1A5, 1), 0x1);
	goto loc_4BE611;

loc_4BE5EC:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1A6, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4BE614;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x444969FE);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x1A6, 1), 0x1);

loc_4BE611:
	add(&ts->esp, 0xC);

loc_4BE614:
	push(mv, &ts->esp, 0x78F568);
	push(mv, &ts->esp, ts->ebp);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4BE636;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F758);
	push(mv, &ts->esp, ts->ebp);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);

loc_4BE636:
	push(mv, &ts->esp, 0x78F568);
	push(mv, &ts->esp, ts->edi);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4BE658;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F758);
	push(mv, &ts->esp, ts->edi);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);

loc_4BE658:
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	goto loc_497CD0;

loc_497CD0:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	push(mv, &ts->esp, ts->edi);
	game::sub_511E00(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	lea(mv, &ts->edi, x86::mem(ts->esi + 0xD8, 4));
	game::sub_5B53A0(ts, mv);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_4FF550(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	game::sub_511E00(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x11C, 4));
	game::sub_5B6A20(ts, mv);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_4FF550(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	game::sub_511E00(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	add(&ts->esi, 0x160);
	game::sub_5B5490(ts, mv);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_4FF550(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	jmp(x86::mem(ts->eax + 0x18, 4));
}

void sub_4BE670(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1E0, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4BE681;
    }
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4BE681:
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x4BE8E0);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x98, 4));
	push(mv, &ts->esp, 0x836014);
	push(mv, &ts->esp, ts->edi);
	game::sub_58B9A0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_58BBB0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x1DC, 4), ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4BE6DE;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xB6AAE6A6);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x911AB364);
	push(mv, &ts->esp, 0x911AB364);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->edi);
	game::sub_558540(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1DC, 4));
	add(&ts->esp, 0x1C);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4BE6DE:
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_5851B0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, 0xBC790617);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x10);
	mov(&ts->ecx, ts->edi);
	game::sub_583160(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, 0xBC790618);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x10);
	mov(&ts->ecx, ts->edi);
	game::sub_5831A0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, 0xBC790619);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x10);
	mov(&ts->ecx, ts->edi);
	game::sub_585230(ts, mv);
	sub(&ts->esp, 0x8);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 8));
	push(mv, &ts->esp, 0x794FE0);
	push(mv, &ts->esp, 0xBC79061A);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x14);
	mov(&ts->ecx, ts->edi);
	game::sub_5852A0(ts, mv);
	sub(&ts->esp, 0x8);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 8));
	push(mv, &ts->esp, 0x794FE0);
	push(mv, &ts->esp, 0xBC79061B);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x14);
	mov(&ts->ecx, ts->edi);
	game::sub_585320(ts, mv);
	sub(&ts->esp, 0x8);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 8));
	push(mv, &ts->esp, 0x794FE0);
	push(mv, &ts->esp, 0xBC79061C);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x5EB0ABE1);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x18);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_5853A0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x794FD8);
	push(mv, &ts->esp, 0xBC79061E);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x5EB0ABE1);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x18);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_5853F0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x794FD8);
	push(mv, &ts->esp, 0xBC79061F);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, 0x4B99C928);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->al, x86::mem(0x83AA1A, 1));
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x24);
	cmp(&ts->eflags, ts->al, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4BE865;
    }
	push(mv, &ts->esp, 0xE74B7E13);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_5831E0(ts, mv);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7904FC, 4));
	sub(&ts->esp, 0x8);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 8));
	push(mv, &ts->esp, 0x794FCC);
	push(mv, &ts->esp, 0xBC79061D);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x18);
	mov(&ts->ecx, ts->edi);
	game::sub_583200(ts, mv);
	sub(&ts->esp, 0x8);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 8));
	push(mv, &ts->esp, 0x794FC4);
	goto loc_4BE8A6;

loc_4BE865:
	mov(&ts->ecx, ts->edi);
	game::sub_5831E0(ts, mv);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78426C, 4));
	sub(&ts->esp, 0x8);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 8));
	push(mv, &ts->esp, 0x794FB8);
	push(mv, &ts->esp, 0xBC79061D);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x14);
	mov(&ts->ecx, ts->edi);
	game::sub_583200(ts, mv);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x790AE4, 4));
	sub(&ts->esp, 0x8);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 8));
	push(mv, &ts->esp, 0x794FAC);

loc_4BE8A6:
	push(mv, &ts->esp, 0x4B99C927);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x14);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x50, 4));
	push(mv, &ts->esp, 0x3F800000);
	mov(&ts->ecx, ts->edi);
	game::sub_4FF550(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1DC, 4));
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4BE8E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4BE8FC;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), 0x0);

loc_4BE8FC:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->esi + 0x1DC, 4), 0xFFFFFFFF);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4BE930;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x98, 4));
	game::sub_5874E0(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_4BE670(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x1E0, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4BE930:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x4F8406C2);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x911AB364);
	push(mv, &ts->esp, 0x911AB364);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->esi);
	game::sub_558540(ts, mv);
	add(&ts->esp, 0x1C);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4BE960(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776418);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	game::sub_551DE0(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi, 4), 0x794FE8);
	mov(mv, x86::mem(ts->esi + 0x50, 4), ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->eax);
	game::sub_4A2FF0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_776410:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

SEH_4E3300:
	mov(&ts->eax, 0x7DEE70);
	goto ___CxxFrameHandler;
}

void sub_4BE9C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4BE9E0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4BE9D8;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4BE9D8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4BE9E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x794FE8);
	goto sub_510D40;
}

void sub_4BE9F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x836498, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x64, 4));
	push(mv, &ts->esp, 0x0);
	add(&ts->ecx, 0xC);
	game::sub_43BE60(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4BEA19;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	add(&ts->eax, 0xFFFFFFFC);
	add(&ts->eax, 0xC);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);

loc_4BEA19:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	xor_(&ts->eax, ts->eax);
	mov(&ts->eax, 0xC);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4BEA30(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->esi, x86::mem(ts->edi + 0x6C, 4));
	push(mv, &ts->esp, ts->esi);
	game::sub_43DBD0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x98, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xFC, 4));
	add(&ts->esp, 0x8);
	sub(&ts->eax, 0x0);
	if (ts->eflags.zero) {
        goto loc_4BEA74;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4BEAB8;
    }
	mov(mv, &ts->eax, x86::mem(0x836498, 4));
	mov(mv, x86::mem(ts->eax + 0x10, 4), 0x7);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->esi);
	game::sub_4A3330(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4BEA74:
	mov(&ts->ecx, 0x83A9E0);
	game::sub_502FE0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4BEAA9;
    }
	push(mv, &ts->esp, 0x6000000);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x81B1D73D);
	mov(&ts->ecx, ts->edi);
	game::sub_4A3890(ts, mv);
	mov(&ts->ecx, ts->edi);
	game::sub_4A3330(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4BEAA9:
	mov(mv, &ts->eax, x86::mem(0x836498, 4));
	mov(mv, x86::mem(ts->eax + 0x10, 4), 0x6);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->esi);

loc_4BEAB8:
	mov(&ts->ecx, ts->edi);
	game::sub_4A3330(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4BEAD0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x24);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	xor_(&ts->ebx, ts->ebx);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebx);
	game::sub_43DBD0(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_43DBB0(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x90, 4));
	mov(&ts->edi, ts->eax);
	add(&ts->ebp, 0x90);
	add(&ts->esp, 0xC);
	mov(mv, x86::mem(ts->esp + (ts->edi) + 0x14, 1), 0x20);
	inc(&ts->edi);
	cmp(&ts->eflags, ts->esi, ts->ebp);
	mov(mv, x86::mem(ts->esp + (ts->edi) + 0x14, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_4BEB52;
    }

loc_4BEB17:
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	game::sub_43DC60(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4BEB3E;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x3C, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ebx);
	add(&ts->eax, 0x4);
	mov(mv, x86::mem(ts->esp + 0x3C, 4), ts->eax);
	inc(mv, x86::mem(ts->esp + 0x10, 4));

loc_4BEB3E:
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_4BEB17;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x24);
	retn(mv, &ts->esp, 0x8);

loc_4BEB52:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	mov(&ts->eax, ts->ebx);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x24);
	retn(mv, &ts->esp, 0x8);
}

void sub_4BEB60(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0x406415E3);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4BEBB9;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x5C, 4), 0xE);
	if (!ts->eflags.zero) {
        goto loc_4BEB7B;
    }
	mov(mv, x86::mem(ts->esi + 0x5C, 4), 0x1);

loc_4BEB7B:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x5C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(0x836498, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_6FB09F(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_4A37C0(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x5);
	mov(&ts->ecx, ts->esi);
	game::sub_4A3460(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x5C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	inc(&ts->eax);
	mov(mv, x86::mem(ts->esi + 0x5C, 4), ts->eax);
	mov(mv, x86::mem(0x836538, 4), ts->edx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4BEBB9:
	cmp(&ts->eflags, ts->eax, 0x911AB364);
	if (!ts->eflags.zero) {
        goto loc_4BEBDB;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x8867412D);
	game::sub_55DDA0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(0x836538, 4), ts->ecx);

loc_4BEBDB:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);
}

void sub_4BEBE0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xB19F8B41);
	push(mv, &ts->esp, 0x426C7B4D);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x836498, 4));
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->eax + 0x64, 4), ts->esi);
	mov(&ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	goto sub_4A3C80;
}

void sub_4BEC20(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_4BEC8C;
    }
	mov(&ts->ecx, 0x83A9D0);
	game::sub_503080(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4BEC7A;
    }
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, 0x6C328734);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xB4623F67);
	push(mv, &ts->esp, 0xB4623F67);
	push(mv, &ts->esp, 0x451E768E);
	push(mv, &ts->esp, 0x541389E5);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x795000);
	push(mv, &ts->esp, ts->esi);
	game::sub_558790(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x96DDA9E6);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x2C);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x14);

loc_4BEC7A:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x3411395C);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);

locret_4BEC8C:
	retn(mv, &ts->esp, 0x14);
}

void sub_4BEC90(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	cmp(mv, &ts->eflags, x86::mem(ts->ebp + 0xC, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto loc_4BECB5;
    }
	mov(&ts->ecx, 0x85AD40);
	game::sub_54CAE0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xA);
	game::sub_5F41E0(ts, mv);

loc_4BECB5:
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x14);
}

void sub_4BECC0(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_4BED09;
    }
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, 0xAA50AA02);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xB4623F67);
	push(mv, &ts->esp, 0xB4623F67);
	push(mv, &ts->esp, 0xE1A57D51);
	push(mv, &ts->esp, 0x541389E5);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x795000);
	push(mv, &ts->esp, ts->esi);
	game::sub_558790(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x96DDA9E6);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x2C);
	pop(mv, &ts->esp, ts->esi);

locret_4BED09:
	retn(mv, &ts->esp, 0x14);
}

void sub_4BED10(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_4BED35;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78F0E8);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x7F45A1, 1), 0x1);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);

locret_4BED35:
	retn(mv, &ts->esp, 0x14);
}

void sub_4BED40(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_4BED89;
    }
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, 0xE15B558A);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xB4623F67);
	push(mv, &ts->esp, 0xB4623F67);
	push(mv, &ts->esp, 0x30ED2368);
	push(mv, &ts->esp, 0x541389E5);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x795000);
	push(mv, &ts->esp, ts->esi);
	game::sub_558790(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x96DDA9E6);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x2C);
	pop(mv, &ts->esp, ts->esi);

locret_4BED89:
	retn(mv, &ts->esp, 0x14);
}

void sub_4BED90(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_4BEDB6;
    }
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79056C);
	push(mv, &ts->esp, ts->esi);
	game::sub_537980(ts, mv);
	push(mv, &ts->esp, ts->esi);
	game::sub_4A4B50(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);

locret_4BEDB6:
	retn(mv, &ts->esp, 0x14);
}

void sub_4BEDC0(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_4BEE09;
    }
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, 0x33C42E03);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xB4623F67);
	push(mv, &ts->esp, 0xB4623F67);
	push(mv, &ts->esp, 0x33C42E03);
	push(mv, &ts->esp, 0x541389E5);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x795000);
	push(mv, &ts->esp, ts->esi);
	game::sub_558790(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x96DDA9E6);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x2C);
	pop(mv, &ts->esp, ts->esi);

locret_4BEE09:
	retn(mv, &ts->esp, 0x14);
}

void sub_4BEE10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7739FC);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x1);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4BEF3A;
    }
	mov(&ts->ecx, 0x85BA64);
	game::sub_513FA0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4BEE8E;
    }
	push(mv, &ts->esp, 0x48);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4BEE7C;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x23F359B8);
	push(mv, &ts->esp, 0x12BB5EA2);
	mov(&ts->ecx, ts->edi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x795014);
	goto loc_4BEE7E;

loc_4BEE7C:
	xor_(&ts->edi, ts->edi);

loc_4BEE7E:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0xFFFFFFFF);
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));

loc_4BEE8E:
	push(mv, &ts->esp, 0x48);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4BEEC9;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xC3E5BCDC);
	push(mv, &ts->esp, 0x62AA0DF6);
	mov(&ts->ecx, ts->edi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x794FF8);
	mov(mv, x86::mem(ts->edi + 0x45, 1), 0x1);
	goto loc_4BEECB;

loc_4BEEC9:
	xor_(&ts->edi, ts->edi);

loc_4BEECB:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0xFFFFFFFF);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_4BEF3A;
    }
	mov(mv, &ts->al, x86::mem(0x85BA67, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4BEF3A;
    }
	push(mv, &ts->esp, 0x48);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x2);
	if (ts->eflags.zero) {
        goto loc_4BEF28;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x5E670A9E);
	push(mv, &ts->esp, 0x3109913C);
	mov(&ts->ecx, ts->edi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x79503C);
	mov(mv, x86::mem(ts->edi + 0x45, 1), 0x1);
	goto loc_4BEF2A;

loc_4BEF28:
	xor_(&ts->edi, ts->edi);

loc_4BEF2A:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0xFFFFFFFF);
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));

loc_4BEF3A:
	push(mv, &ts->esp, 0x48);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x3);
	if (ts->eflags.zero) {
        goto loc_4BEF75;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x80833FC2);
	push(mv, &ts->esp, 0xB295A6B6);
	mov(&ts->ecx, ts->edi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x79501C);
	mov(mv, x86::mem(ts->edi + 0x45, 1), 0x1);
	goto loc_4BEF77;

loc_4BEF75:
	xor_(&ts->edi, ts->edi);

loc_4BEF77:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0xFFFFFFFF);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	push(mv, &ts->esp, 0x48);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x4);
	if (ts->eflags.zero) {
        goto loc_4BEFBE;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xF82DF37E);
	push(mv, &ts->esp, 0x70BB9626);
	mov(&ts->ecx, ts->edi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x795024);
	goto loc_4BEFC0;

loc_4BEFBE:
	xor_(&ts->edi, ts->edi);

loc_4BEFC0:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0xFFFFFFFF);
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x4);
	if (ts->eflags.zero) {
        goto loc_4BF03B;
    }
	mov(mv, &ts->eax, x86::mem(0x8650B8, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x50EC, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_4BF03B;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xBC, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4BF03B;
    }
	push(mv, &ts->esp, 0x48);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x5);
	if (ts->eflags.zero) {
        goto loc_4BF029;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7840428A);
	push(mv, &ts->esp, 0x84D1D864);
	mov(&ts->ecx, ts->edi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x795034);
	goto loc_4BF02B;

loc_4BF029:
	xor_(&ts->edi, ts->edi);

loc_4BF02B:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0xFFFFFFFF);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));

loc_4BF03B:
	push(mv, &ts->esp, 0x48);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x6);
	if (ts->eflags.zero) {
        goto loc_4BF076;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xC7E1420C);
	push(mv, &ts->esp, 0x4C9E34E6);
	mov(&ts->ecx, ts->edi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x79502C);
	mov(mv, x86::mem(ts->edi + 0x45, 1), 0x1);
	goto loc_4BF078;

loc_4BF076:
	xor_(&ts->edi, ts->edi);

loc_4BF078:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0xFFFFFFFF);
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_773970:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7950A0);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773984:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x795094);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773998:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x795080);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7739AC:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x795070);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7739C0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x795060);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7739D4:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x795054);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7739E8:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x795044);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4BEE10:
	mov(&ts->eax, 0x7DFB84);
	goto ___CxxFrameHandler;
}

void sub_4BF0A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->edi + 0x68, 1));
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	neg(&ts->al);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0x197F062B);
	add(&ts->eax, 0xC97A2D22);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xA4EC03BE);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x89E7CC, 4));
	mov(mv, &ts->ecx, x86::mem(0x89E7C8, 4));
	mov(mv, &ts->ebx, x86::mem(0x89E7C4, 4));
	mov(mv, &ts->edx, x86::mem(0x89E7C0, 4));
	add(&ts->ecx, ts->eax);
	add(&ts->ecx, ts->ebx);
	add(&ts->ecx, ts->edx);
	add(&ts->esp, 0x8);
	xor_(&ts->esi, ts->esi);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4BF13B;
    }
	lea(mv, &ts->ebx, x86::mem(ts->edi + 0x4C, 4));

loc_4BF0F7:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->ebx);
	game::sub_43BE60(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->edi + 0x68, 1));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	inc(&ts->esi);
	push(mv, &ts->esp, ts->esi);
	test(&ts->eflags, ts->cl, ts->cl);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4BF115;
    }
	game::sub_4A4110(ts, mv);
	goto loc_4BF11A;

loc_4BF115:
	game::sub_4A4020(ts, mv);

loc_4BF11A:
	mov(mv, &ts->edx, x86::mem(0x89E7CC, 4));
	mov(mv, &ts->eax, x86::mem(0x89E7C8, 4));
	mov(mv, &ts->ecx, x86::mem(0x89E7C4, 4));
	add(&ts->eax, ts->edx);
	mov(mv, &ts->edx, x86::mem(0x89E7C0, 4));
	add(&ts->eax, ts->ecx);
	add(&ts->eax, ts->edx);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4BF0F7;
    }

loc_4BF13B:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_4BF140(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, 0x864630);
	game::sub_43BE80(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4BF287;
    }
	mov(&ts->esi, 0x1);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_4BF170:
	lea(mv, &ts->ebx, x86::mem(ts->esi - 0x1, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, 0x864630);
	game::sub_43BE60(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x14, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_4BF1A7;
    }
	mov(mv, &ts->ebp, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x249DB7B7);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x79051C);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	game::sub_537C60(ts, mv);
	add(&ts->esp, 0x10);

loc_4BF1A7:
	mov(mv, &ts->ebp, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x7909F8);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x79051C);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->ebp, x86::mem(ts->edi + 0x4, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, 0x864630);
	game::sub_43BE60(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x79050C);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->ebp, x86::mem(ts->edi + 0x4, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, 0x864630);
	game::sub_43BE60(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_610110(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x790400);
	game::sub_50B990(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x790500);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->eax);
	game::sub_50B990(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x24, 4));
	add(&ts->esp, 0x14);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->ebp, x86::mem(ts->edi + 0x4, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, 0x864630);
	game::sub_43BE60(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x10, 4));
	sub(&ts->esp, 0x8);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 8));
	push(mv, &ts->esp, 0x7950AC);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x7904EC);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	add(&ts->esp, 0x14);
	inc(&ts->esi);
	lea(mv, &ts->eax, x86::mem(ts->esi - 0x1, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4BF170;
    }

loc_4BF287:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_4BF290(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x89E7CC, 4));
	mov(mv, &ts->edx, x86::mem(0x89E7C0, 4));
	sub(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(0x89E7C4, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x89E7C8, 4));
	add(&ts->ecx, ts->eax);
	add(&ts->ecx, ts->esi);
	add(&ts->ecx, ts->edx);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4BF4BF;
    }
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->esi, 0x1);
	push(mv, &ts->esp, ts->ebp);

loc_4BF2C3:
	lea(mv, &ts->edx, x86::mem(ts->esi - 0x1, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x4C, 4));
	game::sub_43BE60(ts, mv);
	mov(mv, &ts->ebp, x86::mem(ts->eax + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(0x890080, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ebp);
	game::sub_5F0E30(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x4, 4));
	mov(&ts->ebx, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x14, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x890080, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_5F0E30(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x14, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x4, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_4BF343;
    }
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x900, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_4BF343;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x7905F8);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x79051C);
	game::sub_50B990(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C60(ts, mv);
	add(&ts->esp, 0x10);

loc_4BF343:
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x7909F8);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x79051C);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->edx);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	mov(&ts->edx, 0x1);
	add(&ts->esp, 0x10);
	cmp(&ts->eflags, ts->ecx, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_4BF3C0;
    }
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x900, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_4BF3C0;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x18, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x10, 4), ts->edx);
	mov(mv, &ts->ebp, x86::mem(ts->edi + 0x4, 4));
	if (!ts->eflags.zero) {
        goto loc_4BF3B8;
    }
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x79050C);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0xD87133BD);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	goto loc_4BF40D;

loc_4BF3B8:
	game::sub_5F41B0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	goto loc_4BF3F0;

loc_4BF3C0:
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F00F0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4BF3E2;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F0220(ts, mv);
	add(&ts->eax, 0x12);
	push(mv, &ts->esp, ts->eax);
	goto loc_4BF3ED;

loc_4BF3E2:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	add(&ts->edx, 0x90C);
	push(mv, &ts->esp, ts->edx);

loc_4BF3ED:
	mov(mv, &ts->ebp, x86::mem(ts->edi + 0x4, 4));

loc_4BF3F0:
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x79050C);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x10);

loc_4BF40D:
	mov(mv, &ts->ebx, x86::mem(ts->ebx + 0xC, 4));
	mov(mv, &ts->ebp, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x790400);
	game::sub_50B990(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x790500);
	mov(&ts->ebx, ts->eax);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->al, x86::mem(0x89E7D9, 1));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4BF454;
    }
	mov(mv, &ts->eax, x86::mem(0x890104, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4BF487;
    }

loc_4BF454:
	mov(mv, &ts->eax, x86::mem(0x89E7BC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + (ts->eax*4) + 0x198, 4));
	mov(mv, &ts->ebx, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x7904EC);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x10);
	goto loc_4BF494;

loc_4BF487:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_4A4020(ts, mv);

loc_4BF494:
	mov(mv, &ts->eax, x86::mem(0x89E7CC, 4));
	mov(mv, &ts->ecx, x86::mem(0x89E7C8, 4));
	mov(mv, &ts->ebx, x86::mem(0x89E7C4, 4));
	mov(mv, &ts->edx, x86::mem(0x89E7C0, 4));
	add(&ts->ecx, ts->eax);
	add(&ts->ecx, ts->ebx);
	inc(&ts->esi);
	add(&ts->ecx, ts->edx);
	lea(mv, &ts->edx, x86::mem(ts->esi - 0x1, 4));
	cmp(&ts->eflags, ts->edx, ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4BF2C3;
    }
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);

loc_4BF4BF:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);
}

void sub_4BF4D0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x64);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebp, ts->ecx);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, 0x6950EC05);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7950CC);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_537B80(ts, mv);
	mov(&ts->ebx, 0x1);
	mov(&ts->ecx, 0xD);
	mov(&ts->esi, 0x850478);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x4C, 4));
	push(mv, &ts->esp, ts->ebx);
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, 0x79051C);
	game::sub_50B990(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->al, x86::mem(0x83AA1A, 1));
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x4, 4));
	dec(&ts->al);
	neg(&ts->al);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0xE3ABF617);
	add(&ts->eax, 0x365DC8E2);
	push(mv, &ts->esp, ts->eax);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x24);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x79050C);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x790500);
	game::sub_50B990(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x68, 4));
	add(&ts->esp, 0x20);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->eax);
	game::sub_577240(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x4, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x7904EC);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->al, x86::mem(0x83AA1A, 1));
	dec(&ts->al);
	neg(&ts->al);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0x2D8E3349);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x4, 4));
	add(&ts->eax, 0x1C6F2A82);
	push(mv, &ts->esp, 0x2);
	push(mv, &ts->esp, 0x79051C);
	mov(&ts->esi, ts->eax);
	game::sub_50B990(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x28);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x2);
	push(mv, &ts->esp, 0x79050C);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, 0x2);
	push(mv, &ts->esp, 0x790500);
	game::sub_50B990(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x74, 4));
	add(&ts->esp, 0x20);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x24, 4));
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ecx);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	game::sub_577240(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x4, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, 0x2);
	push(mv, &ts->esp, 0x7904EC);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->al, x86::mem(0x83AA1A, 1));
	add(&ts->esp, 0x10);
	cmp(&ts->eflags, ts->al, ts->bl);
	if (!ts->eflags.zero) {
        goto loc_4BF688;
    }
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xE74B7E13);
	mov(&ts->edi, 0xAA461724);
	goto loc_4BF695;

loc_4BF688:
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xE74B86F8);
	mov(&ts->edi, 0xBCF1255F);

loc_4BF695:
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, 0x3);
	push(mv, &ts->esp, 0x79051C);
	game::sub_50B990(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x18);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x3);
	push(mv, &ts->esp, 0x79050C);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, 0x3);
	push(mv, &ts->esp, 0x790500);
	game::sub_50B990(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x70, 4));
	mov(mv, &ts->al, x86::mem(0x83AA1A, 1));
	add(&ts->esp, 0x20);
	cmp(&ts->eflags, ts->al, ts->bl);
	if (!ts->eflags.zero) {
        goto loc_4BF708;
    }
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7904FC, 4));
	goto loc_4BF70E;

loc_4BF708:
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78426C, 4));

loc_4BF70E:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_4FFA80(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	sub(&ts->esp, 0x8);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 8));
	push(mv, &ts->esp, 0x7950C0);
	push(mv, &ts->esp, 0x3);
	push(mv, &ts->esp, 0x7904EC);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, 0x79051C);
	game::sub_50B990(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, 0xC431600C);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x30);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, 0x79050C);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, 0x790500);
	game::sub_50B990(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->al, x86::mem(0x83AA1A, 1));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x88, 4));
	add(&ts->esp, 0x20);
	cmp(&ts->eflags, ts->al, ts->bl);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edx);
	if (!ts->eflags.zero) {
        goto loc_4BF7C5;
    }
	mov(&ts->eax, 0xF0AEB103);
	goto loc_4BF7DE;

loc_4BF7C5:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x68, 4));
	mov(&ts->eax, 0xD0B86077);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784258, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7950B8, 8));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));

loc_4BF7DE:
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_4FFA80(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	sub(&ts->esp, 0x8);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 8));
	push(mv, &ts->esp, 0x7950C0);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, 0x7904EC);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, 0x5);
	push(mv, &ts->esp, 0x79051C);
	game::sub_50B990(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, 0x5D304669);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x30);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x5);
	push(mv, &ts->esp, 0x79050C);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, 0x5);
	push(mv, &ts->esp, 0x790500);
	game::sub_50B990(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->al, x86::mem(0x83AA1A, 1));
	add(&ts->esp, 0x20);
	cmp(&ts->eflags, ts->al, ts->bl);
	if (!ts->eflags.zero) {
        goto loc_4BF88C;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	mov(&ts->eax, 0xE74B7E13);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7904FC, 4));
	goto loc_4BF89B;

loc_4BF88C:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	mov(&ts->eax, 0xE74B86F8);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78426C, 4));

loc_4BF89B:
	mov(mv, &ts->ebp, x86::mem(ts->ebp + 0x4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_4FFA80(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	sub(&ts->esp, 0x8);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 8));
	push(mv, &ts->esp, 0x7950C0);
	push(mv, &ts->esp, 0x5);
	push(mv, &ts->esp, 0x7904EC);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x64);
	retn(mv, &ts->esp);
}

void sub_4BF8E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776418);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x1C, 4));
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	game::sub_551DE0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x0);
	mov(mv, x86::mem(ts->esi, 4), 0x7950D8);
	game::sub_4A3D50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, 0x0);
	game::sub_504820(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_4A4240(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_776410:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

SEH_4E3300:
	mov(&ts->eax, 0x7DEE70);
	goto ___CxxFrameHandler;
}

void sub_4BF950(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4BF970(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4BF968;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4BF968:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4BF970(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x7950D8);
	goto sub_510D40;
}

void __RTC_NumErrors_4(x86::thread_state* ts, x86::memory_view* mv) {
	mov(&ts->eax, 0x5);
	retn(mv, &ts->esp);
}

void sub_4BF990(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x20);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	game::sub_577240(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x795128);
	push(mv, &ts->esp, ts->eax);
	game::sub_537BE0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x7845D4);
	push(mv, &ts->esp, ts->edx);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0x1C);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp);
}

void sub_4BF9E0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x24);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x2C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	push(mv, &ts->esp, 0xF9D7F4C2);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ecx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	game::sub_577240(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, ts->edx);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x24);
	retn(mv, &ts->esp);
}

void sub_4BFA30(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x10C, 4));
	mov(mv, &ts->al, x86::mem(0x83AA1A, 1));
	cmp(&ts->eflags, ts->al, 0x1);
	push(mv, &ts->esp, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_4BFA54;
    }
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7904FC, 4));
	mov(&ts->edi, 0xE74B7E13);
	goto loc_4BFA5F;

loc_4BFA54:
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78426C, 4));
	mov(&ts->edi, 0xE74B86F8);

loc_4BFA5F:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0x5D304669);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->edi);
	game::sub_4FFA80(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->eax);
	sub(&ts->esp, 0x8);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 8));
	push(mv, &ts->esp, 0x7951F0);
	push(mv, &ts->esp, ts->esi);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0x14);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_4BFAA0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x110, 4));
	mov(mv, &ts->al, x86::mem(0x83AA1A, 1));
	cmp(&ts->eflags, ts->al, 0x1);
	push(mv, &ts->esp, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_4BFAC4;
    }
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7904FC, 4));
	mov(&ts->edi, 0xE74B7E13);
	goto loc_4BFACF;

loc_4BFAC4:
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78426C, 4));
	mov(&ts->edi, 0xE74B86F8);

loc_4BFACF:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0x5F38E63E);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->edi);
	game::sub_4FFA80(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->eax);
	sub(&ts->esp, 0x8);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 8));
	push(mv, &ts->esp, 0x7951F0);
	push(mv, &ts->esp, ts->esi);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0x14);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_4BFB10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, &ts->ebx, x86::mem(ts->eax + 0x124, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x128, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0x680AC597);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x78F770);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_4BFB50(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_51E1B0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->esi, 4), 0x795280);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->edx);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x18);
}

void sub_4BFB90(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x24);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x2C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	push(mv, &ts->esp, 0xAF6943CB);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ecx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	game::sub_577240(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, ts->edx);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x24);
	retn(mv, &ts->esp);
}

void sub_4BFBE0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_51E1B0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->esi, 4), 0x7952C0);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->edx);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x18);
}

void sub_4BFC20(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(0x89E7BC, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x2C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, &ts->edi, x86::mem(ts->eax + 0xF4, 4));
	push(mv, &ts->esp, 0xADBFD917);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x795300);
	push(mv, &ts->esp, ts->edx);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_4BFC60(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x2C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x214, 4));
	push(mv, &ts->esp, 0xD7D8CA79);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, ts->edx);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0x14);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4BFC90(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x28);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x2C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x218, 4));
	push(mv, &ts->esp, 0x5C17EC47);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ecx);
	game::sub_50C900(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784264, 4));
	add(&ts->esp, 0x8);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	game::sub_577240(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, ts->edx);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x28);
	retn(mv, &ts->esp);
}

void sub_4BFD00(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x21C, 4));
	push(mv, &ts->esp, ts->edi);
	game::__ftol2(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0xE8AEBFAF);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->edi, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, ts->edx);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0x14);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4BFD40(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x773A1E);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x84);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x58);
	mov(&ts->esi, ts->ecx);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x94, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4BFDC9;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x160, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x168, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x158, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x170, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E1B0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x9C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xA0, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xA4, 4));
	mov(mv, x86::mem(ts->edi, 4), 0x7950E8);
	mov(mv, x86::mem(ts->edi + 0x4C, 4), ts->ecx);
	mov(mv, x86::mem(ts->edi + 0x50, 4), ts->edx);
	mov(mv, x86::mem(ts->edi + 0x54, 4), ts->eax);
	goto loc_4BFDCB;

loc_4BFDC9:
	xor_(&ts->edi, ts->edi);

loc_4BFDCB:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x7845D4);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x54, 4));
	push(mv, &ts->esp, 0x7953D8);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0xA4, 4), 0xFFFFFFFF);
	game::sub_43DDA0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x180, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x60, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537A10(ts, mv);
	push(mv, &ts->esp, 0x7845D4);
	mov(mv, x86::mem(ts->edi + 0x2C, 4), ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x5C, 4));
	push(mv, &ts->esp, 0x7953C8);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DDA0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x180, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x68, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xAC, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xB4, 4));
	add(&ts->esp, 0x44);
	push(mv, &ts->esp, ts->ecx);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537A10(ts, mv);
	mov(mv, x86::mem(ts->edi + 0x30, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x17C, 4));
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x17C, 4), ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x178, 4));
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x15C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x174, 4));
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->ebx);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x128, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x174, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x16C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x164, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x128, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x164, 4));
	mov(mv, &ts->al, x86::mem(ts->edi + 0x28, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4BFEC4;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x20, 4));

loc_4BFEC4:
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x180, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8C, 4));
	inc(&ts->eax);
	mov(mv, x86::mem(ts->esi + 0x180, 4), ts->eax);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x90);
	retn(mv, &ts->esp, 0xC);

loc_773A10:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x90, 4));
	push(mv, &ts->esp, ts->eax);
	game::j__free(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

SEH_4BFD40:
	mov(&ts->eax, 0x7DFBA8);
	goto ___CxxFrameHandler;
}

void sub_4BFF00(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ebx, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x178, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->ebx + 0x178, 4));
	if (ts->eflags.zero) {
        goto loc_4BFF1A;
    }
	lea(mv, &ts->esi, x86::mem(ts->eax - 0x4, 4));
	goto loc_4BFF20;

loc_4BFF1A:
	xor_(&ts->esi, ts->esi);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_4BFF20:
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4BFF29;
    }
	lea(mv, &ts->eax, x86::mem(ts->edi - 0x4, 4));
	goto loc_4BFF2B;

loc_4BFF29:
	xor_(&ts->eax, ts->eax);

loc_4BFF2B:
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4BFF49;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x28, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4BFF1A;
    }
	add(&ts->esi, 0xFFFFFFFC);
	goto loc_4BFF20;

loc_4BFF49:
	cmp(mv, &ts->eflags, x86::mem(ts->edi, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_4BFF6D;
    }
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_4BFF50:
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->eax - 0x4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4BFF69;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax, 4));

loc_4BFF69:
	cmp(mv, &ts->eflags, x86::mem(ts->edi, 4), ts->edi);
	if (!ts->eflags.zero) {
        goto loc_4BFF50;
    }

loc_4BFF6D:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->ebx + 0x180, 4), 0x1);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_4BFF80(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x38, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x34, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_4BFFA0;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	mov(mv, x86::mem(ts->ecx + 0x38, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_4BFFA0:
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	cmp(&ts->eflags, ts->eax, 0x8);
	if (ts->eflags.zero) {
        goto loc_4BFFE7;
    }
	cmp(&ts->eflags, ts->eax, 0x200);
	if (ts->eflags.zero) {
        goto loc_4BFFE7;
    }
	cmp(&ts->eflags, ts->eax, 0x4);
	if (!ts->eflags.zero) {
        goto locret_4C0019;
    }
	cmp(mv, &ts->eflags, x86::mem(0x83AAB4, 4), 0x8);
	if (!ts->eflags.zero) {
        goto locret_4C0019;
    }
	mov(&ts->ecx, 0x83AAB4);
	game::sub_5027B0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4BFFF5;
    }
	push(mv, &ts->esp, 0x1);
	game::sub_526830(ts, mv);
	add(&ts->esp, 0x4);

loc_4BFFD7:
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x9);
	game::sub_5F41E0(ts, mv);
	retn(mv, &ts->esp);

loc_4BFFE7:
	mov(&ts->ecx, 0x89CF48);
	game::sub_5FE4C0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4BFFD7;
    }

loc_4BFFF5:
	mov(&ts->ecx, 0x83A9D0);
	push(mv, &ts->esp, 0x0);
	game::sub_502FF0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C8D0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x15);
	game::sub_5F41E0(ts, mv);

locret_4C0019:
	retn(mv, &ts->esp);
}

void sub_4C0020(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x38, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x30, 4), ts->eax);
	if (ts->eflags.zero) {
        goto locret_4C0040;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->ecx + 0x38, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);

locret_4C0040:
	retn(mv, &ts->esp);
}

void sub_4C0050(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(0x89E7E6, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C00AF;
    }
	mov(mv, &ts->ecx, x86::mem(0x850078, 4));
	mov(&ts->eax, 0x1);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4C007D;
    }
	mov(mv, &ts->ecx, x86::mem(0x863470, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4C00AF;
    }
	cmp(mv, &ts->eflags, x86::mem(0x85EF4C, 4), ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto locret_4C00B1;
    }
	xor_(&ts->al, ts->al);
	retn(mv, &ts->esp);

loc_4C007D:
	cmp(&ts->eflags, ts->ecx, 0x200);
	mov(&ts->edx, 0x8);
	if (ts->eflags.zero) {
        goto loc_4C008E;
    }
	cmp(&ts->eflags, ts->ecx, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_4C00A2;
    }

loc_4C008E:
	cmp(mv, &ts->eflags, x86::mem(0x850088, 4), ts->edx);
	if (ts->eflags.zero) {
        goto locret_4C00B1;
    }
	cmp(&ts->eflags, ts->ecx, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_4C00A2;
    }
	cmp(mv, &ts->eflags, x86::mem(0x850098, 1), ts->al);
	goto loc_4C00AD;

loc_4C00A2:
	cmp(&ts->eflags, ts->ecx, 0x4);
	if (!ts->eflags.zero) {
        goto loc_4C00AF;
    }
	cmp(mv, &ts->eflags, x86::mem(0x83AAB4, 4), ts->edx);

loc_4C00AD:
	if (ts->eflags.zero) {
        goto locret_4C00B1;
    }

loc_4C00AF:
	xor_(&ts->al, ts->al);

locret_4C00B1:
	retn(mv, &ts->esp);
}

void sub_4C00C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(0x89E7E6, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C00E5;
    }
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4C00E8;
    }
	mov(mv, &ts->eax, x86::mem(0x863470, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C00E5;
    }
	cmp(mv, &ts->eflags, x86::mem(0x85EF4C, 4), 0x1);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_4C010D;
    }

loc_4C00E5:
	xor_(&ts->al, ts->al);
	retn(mv, &ts->esp);

loc_4C00E8:
	cmp(&ts->eflags, ts->eax, 0x200);
	mov(&ts->ecx, 0x8);
	if (ts->eflags.zero) {
        goto loc_4C00F8;
    }
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4C0100;
    }

loc_4C00F8:
	cmp(mv, &ts->eflags, x86::mem(0x850088, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4C010D;
    }

loc_4C0100:
	cmp(&ts->eflags, ts->eax, 0x4);
	if (!ts->eflags.zero) {
        goto loc_4C00E5;
    }
	cmp(mv, &ts->eflags, x86::mem(0x83AAB4, 4), ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4C00E5;
    }

loc_4C010D:
	mov(&ts->al, 0x1);
	retn(mv, &ts->esp);
}

void sub_4C0110(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0xC);
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	cmp(&ts->eflags, ts->eax, 0x200);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_4C0131;
    }
	cmp(&ts->eflags, ts->eax, 0x8);
	if (!ts->eflags.zero) {
        goto loc_4C01BD;
    }

loc_4C0131:
	cmp(mv, &ts->eflags, x86::mem(0x850088, 4), 0x8);
	if (!ts->eflags.zero) {
        goto loc_4C01BD;
    }
	mov(&ts->ecx, 0x89CF48);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	game::sub_5F01E0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4C0256;
    }
	add(&ts->edi, 0x4C);
	mov(&ts->esi, 0x85036C);

loc_4C0160:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	movsx(mv, &ts->ebx, x86::mem(ts->eax + 0x78DAA7, 1));
	push(mv, &ts->esp, 0x18);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C018C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), 0x0);
	goto loc_4C018E;

loc_4C018C:
	xor_(&ts->eax, ts->eax);

loc_4C018E:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->edi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	inc(&ts->ebx);
	mov(&ts->ecx, 0x89CF48);
	mov(mv, x86::mem(ts->eax, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	add(&ts->esi, 0x224);
	game::sub_5F01E0(ts, mv);
	cmp(&ts->eflags, ts->ebx, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4C0160;
    }
	goto loc_4C0252;

loc_4C01BD:
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4C0263;
    }
	mov(mv, &ts->eax, x86::mem(0x85BAB4, 4));
	xor_(&ts->esi, ts->esi);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4C0256;
    }

loc_4C01D5:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x85BA64);
	game::sub_500D90(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x85036C);
	game::sub_503320(ts, mv);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x85BA64);
	mov(&ts->ebx, ts->eax);
	game::sub_513E70(ts, mv);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x85BA64);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	game::sub_513EB0(ts, mv);
	push(mv, &ts->esp, 0x18);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C0232;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->edx);
	goto loc_4C0234;

loc_4C0232:
	xor_(&ts->eax, ts->eax);

loc_4C0234:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x50, 4));
	add(&ts->ecx, 0x4C);
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(0x85BAB4, 4));
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4C01D5;
    }

loc_4C0252:
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));

loc_4C0256:
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x4C, 4));
	push(mv, &ts->esp, 0x4A4710);
	game::sub_43E650(ts, mv);

loc_4C0263:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);
}

void sub_4C0270(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F00F0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4C02B8;
    }
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	cmp(&ts->eflags, ts->eax, 0x200);
	if (ts->eflags.zero) {
        goto loc_4C0293;
    }
	cmp(&ts->eflags, ts->eax, 0x8);
	if (!ts->eflags.zero) {
        goto loc_4C029C;
    }

loc_4C0293:
	cmp(mv, &ts->eflags, x86::mem(0x850088, 4), 0x8);
	if (ts->eflags.zero) {
        goto loc_4C02B8;
    }

loc_4C029C:
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0xFF115FFF);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7953E4);
	push(mv, &ts->esp, ts->esi);
	game::sub_542600(ts, mv);
	add(&ts->esp, 0x10);

loc_4C02B8:
	mov(mv, &ts->al, x86::mem(0x89E7D9, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C02CA;
    }
	mov(mv, &ts->eax, x86::mem(0x890104, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C02F2;
    }

loc_4C02CA:
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0xC03F9F19);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7904BC);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0xC);

loc_4C02F2:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4C0300(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x890080, 4));
	push(mv, &ts->esp, ts->eax);
	inc(&ts->edi);
	game::sub_5F0E30(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x14, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x4, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_4C036F;
    }
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x900, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_4C036F;
    }
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x4);
	if (!ts->eflags.zero) {
        goto loc_4C0342;
    }
	cmp(mv, &ts->eflags, x86::mem(0x83AAB4, 4), 0x8);
	if (ts->eflags.zero) {
        goto loc_4C036F;
    }

loc_4C0342:
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x7905F8);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x79051C);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537C60(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->ebx);

loc_4C036F:
	mov(mv, &ts->ecx, x86::mem(ts->ebp, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x7909F8);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x79051C);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x8);
}

void sub_4C03A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	mov(&ts->ebx, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x890080, 4));
	push(mv, &ts->esp, ts->eax);
	inc(&ts->ebp);
	game::sub_5F0E30(ts, mv);
	mov(&ts->ecx, 0x89CF48);
	mov(&ts->esi, ts->eax);
	game::sub_5F00F0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4C03E1;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F0220(ts, mv);
	add(&ts->eax, 0x12);
	goto loc_4C0403;

loc_4C03E1:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x4, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_4C03FE;
    }
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x900, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_4C03FE;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x18, 4));
	game::sub_5F41B0(ts, mv);
	goto loc_4C0403;

loc_4C03FE:
	add(&ts->eax, 0x90C);

loc_4C0403:
	mov(mv, &ts->esi, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x79050C);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x8);
}

void sub_4C0430(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x2C);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x34, 4));
	mov(mv, &ts->cl, x86::mem(ts->ebx, 1));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	xor_(&ts->al, ts->al);
	test(&ts->eflags, ts->cl, ts->cl);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4C0445;
    }
	mov(&ts->al, 0x1);

loc_4C0445:
	mov(mv, &ts->cl, x86::mem(ts->ebx + 0x14, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_4C044E;
    }
	inc(&ts->al);

loc_4C044E:
	mov(mv, &ts->cl, x86::mem(ts->ebx + 0x28, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_4C0457;
    }
	inc(&ts->al);

loc_4C0457:
	mov(mv, &ts->cl, x86::mem(ts->ebx + 0x3C, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_4C0460;
    }
	inc(&ts->al);

loc_4C0460:
	mov(mv, &ts->cl, x86::mem(ts->ebx + 0x50, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_4C0469;
    }
	inc(&ts->al);

loc_4C0469:
	mov(mv, &ts->cl, x86::mem(ts->ebx + 0x64, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_4C0472;
    }
	inc(&ts->al);

loc_4C0472:
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x44, 4));
	movsx(&ts->eax, ts->al);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x6);
	mov(&ts->ecx, ts->esi);
	game::sub_4A4770(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x1C, 1), 0x0);
	mov(&ts->ecx, 0x7);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x1D, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	mov(mv, &ts->al, x86::mem(ts->ebx + 0xA0, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C061E;
    }
	lea(mv, &ts->ecx, x86::mem(ts->ebx + 0xA4, 4));
	mov(&ts->edi, 0x1);
	mov(mv, x86::mem(ts->esp + 0x40, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x44, 4), ts->ecx);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_4C04C0:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x40, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->edx, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_4C05F3;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x60, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C04DB;
    }
	cmp(&ts->eflags, ts->eax, 0x7FFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_4C0519;
    }

loc_4C04DB:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0xC4, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + 0xC4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4C04F1;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78454C, 4));

loc_4C04F1:
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78435C, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8651AC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784264, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->eax);

loc_4C0519:
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x79051C);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x783FE5);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_542600(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x5C, 4));
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x1C);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x79050C);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->edx, x86::mem(ts->edi - 0x1, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_4A4930(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x44, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	xor_(&ts->ebp, ts->ebp);
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_4C0587;
    }
	mov(&ts->ebp, 0x490A722D);
	goto loc_4C059C;

loc_4C0587:
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4C0592;
    }
	mov(&ts->ebp, 0xC147E3AC);
	goto loc_4C059C;

loc_4C0592:
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4C059C;
    }
	mov(&ts->ebp, 0x71D5E280);

loc_4C059C:
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x7904EC);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->edx);
	game::sub_4FFA80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x34, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_542600(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x790544);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x44, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x783FE5);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x50, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_542600(ts, mv);
	add(&ts->esp, 0x3C);

loc_4C05F3:
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x44, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x40, 4));
	add(&ts->edx, 0x14);
	add(&ts->ebp, 0x4);
	inc(&ts->edi);
	mov(mv, x86::mem(ts->esp + 0x40, 4), ts->edx);
	lea(mv, &ts->edx, x86::mem(ts->edi - 0x1, 4));
	cmp(&ts->eflags, ts->edx, 0x6);
	mov(mv, x86::mem(ts->esp + 0x44, 4), ts->ebp);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4C04C0;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x2C);
	retn(mv, &ts->esp);

loc_4C061E:
	mov(&ts->eax, 0xFEFEFEFE);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 2), ts->ax);
	mov(&ts->cl, 0x1);
	mov(&ts->edx, 0x1);
	mov(mv, x86::mem(ts->esp + 0x40, 4), 0x6);
	goto loc_4C0640;

loc_4C0640:
	xor_(&ts->al, ts->al);
	lea(mv, &ts->edi, x86::mem(ts->ebx + 0xE8, 4));

loc_4C0648:
	cmp(mv, &ts->eflags, ts->edx, x86::mem(ts->edi, 4));
	if (!ts->eflags.zero) {
        goto loc_4C0655;
    }
	movsx(&ts->ebp, ts->cl);
	mov(mv, x86::mem(ts->esp + (ts->ebp) + 0x13, 1), ts->al);
	inc(&ts->cl);

loc_4C0655:
	inc(&ts->al);
	add(&ts->edi, 0x4);
	cmp(&ts->eflags, ts->al, 0x6);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4C0648;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x40, 4));
	inc(&ts->edx);
	dec(&ts->eax);
	mov(mv, x86::mem(ts->esp + 0x40, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4C0640;
    }
	xor_(&ts->al, ts->al);
	lea(mv, &ts->edi, x86::mem(ts->ebx + 0xE8, 4));

loc_4C0672:
	cmp(mv, &ts->eflags, x86::mem(ts->edi, 4), 0x0);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4C0680;
    }
	movsx(&ts->edx, ts->cl);
	mov(mv, x86::mem(ts->esp + (ts->edx) + 0x13, 1), ts->al);
	inc(&ts->cl);

loc_4C0680:
	inc(&ts->al);
	add(&ts->edi, 0x4);
	cmp(&ts->eflags, ts->al, 0x6);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4C0672;
    }
	mov(&ts->cl, 0x1);
	mov(mv, x86::mem(ts->esp + 0x40, 1), ts->cl);
	nop();

loc_4C0690:
	movsx(&ts->ebp, ts->cl);
	mov(mv, &ts->al, x86::mem(ts->esp + (ts->ebp) + 0x13, 1));
	cmp(&ts->eflags, ts->al, 0xFF);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4C06A6;
    }
	inc(&ts->cl);
	mov(mv, x86::mem(ts->esp + 0x40, 1), ts->cl);
	goto loc_4C0789;

loc_4C06A6:
	push(mv, &ts->esp, ts->ebp);
	movsx(&ts->edi, ts->al);
	push(mv, &ts->esp, 0x794D68);
	mov(mv, x86::mem(ts->esi + 0x5C, 1), 0x1);
	mov(mv, &ts->eax, x86::mem(ts->ebx + (ts->edi*4) + 0xE8, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x54, 4), ts->eax);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x54, 4));
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4C06EE;
    }
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x7845D4);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_542600(ts, mv);
	add(&ts->esp, 0x10);
	goto loc_4C0704;

loc_4C06EE:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x7909A0);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_542600(ts, mv);
	add(&ts->esp, 0xC);

loc_4C0704:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->edi + (ts->edi*4), 4));
	lea(mv, &ts->edx, x86::mem(ts->ebx + (ts->ecx*4), 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x79050C);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->eax);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->esi);
	game::sub_4A4930(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x44, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->esi);
	game::sub_4A49C0(ts, mv);
	movzx(mv, &ts->eax, x86::mem(ts->edi + (ts->ebx) + 0x130, 1));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x790544);
	mov(mv, x86::mem(ts->esp + 0x54, 4), ts->edx);
	game::sub_50B990(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x54, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esp + 0x50, 1));
	add(&ts->esp, 0x10);
	inc(&ts->al);
	mov(mv, x86::mem(ts->esp + 0x40, 1), ts->al);
	mov(&ts->cl, ts->al);

loc_4C0789:
	cmp(&ts->eflags, ts->cl, 0x6);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4C0690;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x2C);
	retn(mv, &ts->esp);
}

void sub_4C07A0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0xC);
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	cmp(&ts->eflags, ts->eax, 0x4);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4C083E;
    }
	cmp(mv, &ts->eflags, x86::mem(0x83AAB4, 4), 0x8);
	if (!ts->eflags.zero) {
        goto loc_4C0953;
    }
	xor_(&ts->ebx, ts->ebx);
	lea(mv, &ts->edi, x86::mem(ts->ecx + 0x8C, 4));
	mov(&ts->esi, 0x85036C);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x2);
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_4C07E0:
	push(mv, &ts->esp, 0x18);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C080A;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	movzx(mv, &ts->ecx, x86::mem(ts->ecx + 0x83ABC8, 1));
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x10, 4), 0x0);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ecx);
	goto loc_4C080C;

loc_4C080A:
	xor_(&ts->eax, ts->eax);

loc_4C080C:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->edi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->edi);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	inc(&ts->ebx);
	add(&ts->esi, 0x224);
	dec(&ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4C07E0;
    }
	push(mv, &ts->esp, 0x4A4730);
	mov(&ts->ecx, ts->edi);
	game::sub_43E650(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_4C083E:
	cmp(&ts->eflags, ts->eax, 0x200);
	if (ts->eflags.zero) {
        goto loc_4C084E;
    }
	cmp(&ts->eflags, ts->eax, 0x8);
	if (!ts->eflags.zero) {
        goto loc_4C0953;
    }

loc_4C084E:
	cmp(mv, &ts->eflags, x86::mem(0x850088, 4), 0x8);
	if (!ts->eflags.zero) {
        goto loc_4C0953;
    }
	mov(&ts->ecx, 0x89CF48);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	game::sub_5F01E0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4C08DA;
    }
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x10, 4));
	add(&ts->ebx, 0x8C);
	mov(&ts->esi, 0x850370);

loc_4C0880:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	movzx(mv, &ts->edi, x86::mem(ts->edx + 0x83ABC8, 1));
	push(mv, &ts->esp, 0x18);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C08AE;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	lea(mv, &ts->edx, x86::mem(ts->esi - 0x4, 4));
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x10, 4), 0x0);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->edi);
	goto loc_4C08B0;

loc_4C08AE:
	xor_(&ts->eax, ts->eax);

loc_4C08B0:
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x4, 4));
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->ebx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	inc(&ts->edi);
	mov(&ts->ecx, 0x89CF48);
	mov(mv, x86::mem(ts->eax, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	add(&ts->esi, 0x224);
	game::sub_5F01E0(ts, mv);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4C0880;
    }

loc_4C08DA:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	add(&ts->ecx, 0x8C);
	push(mv, &ts->esp, 0x4A4730);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	game::sub_43E650(ts, mv);
	mov(&ts->ecx, 0x89CF48);
	xor_(&ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	xor_(&ts->esi, ts->esi);
	game::sub_5F01E0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4C09F8;
    }
	mov(&ts->edi, 0x850370);

loc_4C0915:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	game::sub_43BE60(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	movzx(mv, &ts->ecx, x86::mem(ts->ecx + 0x83ABC8, 1));
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4C0934;
    }
	mov(&ts->ebx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);

loc_4C0934:
	mov(&ts->ecx, 0x89CF48);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ebx);
	inc(&ts->esi);
	add(&ts->edi, 0x224);
	game::sub_5F01E0(ts, mv);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4C0915;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_4C0953:
	mov(mv, &ts->eax, x86::mem(0x85BAB4, 4));
	xor_(&ts->esi, ts->esi);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4C09F8;
    }
	add(&ts->ecx, 0x8C);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ecx);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_4C0970:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x85BA64);
	game::sub_500D90(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x85036C);
	game::sub_503320(ts, mv);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x85BA64);
	mov(&ts->ebx, ts->eax);
	game::sub_513E70(ts, mv);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x85BA64);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	game::sub_513EB0(ts, mv);
	push(mv, &ts->esp, 0x18);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C09CD;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ecx);
	goto loc_4C09CF;

loc_4C09CD:
	xor_(&ts->eax, ts->eax);

loc_4C09CF:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	push(mv, &ts->esp, 0x4A4730);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	game::sub_43E650(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x85BAB4, 4));
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4C0970;
    }

loc_4C09F8:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);
}

void sub_4C0A00(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x890080, 4));
	inc(&ts->esi);
	game::sub_5F0E30(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x14, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x4, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_4C0A6E;
    }
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x900, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_4C0A6E;
    }
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x4);
	if (!ts->eflags.zero) {
        goto loc_4C0A41;
    }
	cmp(mv, &ts->eflags, x86::mem(0x83AAB4, 4), 0x8);
	if (ts->eflags.zero) {
        goto loc_4C0A6E;
    }

loc_4C0A41:
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x7905F8);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x79051C);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537C60(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->ebx);

loc_4C0A6E:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->edi, x86::mem(ts->edi + 0x4, 4));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4C0A7D;
    }
	inc(&ts->eax);
	push(mv, &ts->esp, ts->eax);
	goto loc_4C0A7E;

loc_4C0A7D:
	push(mv, &ts->esp, ts->esi);

loc_4C0A7E:
	push(mv, &ts->esp, 0x7845D4);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x79051C);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);
}

void sub_4C0AA0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x773A38);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x2C);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x3C, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->esi);
	game::sub_551DE0(ts, mv);
	xor_(&ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esi, 4), 0x79055C);
	mov(mv, x86::mem(ts->esi + 0x50, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x74, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x75, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0xEC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xE8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xE4, 4), ts->ebx);
	mov(mv, x86::mem(0x8363EC, 4), ts->esi);
	mov(&ts->ebp, 0x1);
	mov(mv, x86::mem(0x8363E8, 4), ts->ebp);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x90038D25);
	mov(mv, x86::mem(ts->esp + 0x48, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xCC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xD2, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0xD3, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0xD4, 4), ts->ebx);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, 0x788C05E8);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x90732102);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, 0x8A0AB225);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x7139516D);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x5497B9BF);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->al, x86::mem(0x89E7D8, 1));
	add(&ts->esp, 0x40);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C0B95;
    }
	cmp(mv, &ts->eflags, x86::mem(0x890108, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4C0BF5;
    }

loc_4C0B95:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x79053C);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x788C05E8);
	push(mv, &ts->esp, ts->edi);
	game::sub_537C60(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x79053C);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x57F0E3A5);
	push(mv, &ts->esp, ts->edi);
	game::sub_537C60(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x79053C);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xF2685238);
	push(mv, &ts->esp, ts->edi);
	game::sub_537C60(ts, mv);
	add(&ts->esp, 0x10);

loc_4C0BF5:
	mov(mv, x86::mem(ts->esi + 0x78, 4), ts->ebx);
	mov(mv, &ts->ecx, x86::mem(0x8650B8, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x50, 4), ts->ebx);
	game::sub_579020(ts, mv);
	mov(&ts->edi, ts->eax);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebp);
	if (ts->eflags.zero) {
        goto loc_4C0CEA;
    }

loc_4C0C16:
	lea(mv, &ts->ebp, x86::mem(ts->edi + 0x8, 4));
	push(mv, &ts->esp, 0x79545C);
	push(mv, &ts->esp, ts->ebp);
	xor_(&ts->bl, ts->bl);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C0C41;
    }
	push(mv, &ts->esp, 0x79544C);
	push(mv, &ts->esp, ts->ebp);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C0C41;
    }
	mov(&ts->bl, 0x1);

loc_4C0C41:
	mov(mv, &ts->ecx, x86::mem(0x8650B8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x88, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x28, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x78, 4));
	sub(&ts->edx, ts->ecx);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4C0C88;
    }
	push(mv, &ts->esp, 0x79544C);
	push(mv, &ts->esp, ts->ebp);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4C0C88;
    }
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7850D8, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4C0C88;
    }
	mov(&ts->bl, 0x1);

loc_4C0C88:
	push(mv, &ts->esp, 0x79545C);
	push(mv, &ts->esp, ts->ebp);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4C0CA8;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4C0CA4;
    }
	mov(&ts->bl, 0x1);

loc_4C0CA4:
	inc(mv, x86::mem(ts->esp + 0x4C, 4));

loc_4C0CA8:
	test(&ts->eflags, ts->bl, ts->bl);
	if (!ts->eflags.zero) {
        goto loc_4C0CC9;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x78, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x1, 4));
	mov(mv, x86::mem(ts->esi + 0x78, 4), ts->ecx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x28, 4));
	mov(mv, x86::mem(ts->esi + (ts->eax*8) + 0x80, 4), ts->edi);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + (ts->eax*8) + 0x7C, 4));

loc_4C0CC9:
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(0x8650B8, 4));
	push(mv, &ts->esp, ts->ebx);
	game::sub_579020(ts, mv);
	mov(&ts->edi, ts->eax);
	inc(&ts->ebx);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4C0C16;
    }
	xor_(&ts->ebx, ts->ebx);

loc_4C0CEA:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x795440);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537A10(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x795434);
	mov(mv, x86::mem(ts->esi + 0xF8, 4), ts->eax);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537A10(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x7909B4);
	mov(mv, x86::mem(ts->esi + 0xFC, 4), ts->eax);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537A10(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x100, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x8650B8, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x88, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x795420);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x84, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xDC, 4));
	mov(mv, &ts->edx, x86::mem(0x8650B8, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x84, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xD8, 4));
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	mov(&ts->edi, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x44, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x80, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	game::sub_51D730(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x88, 4));
	mov(mv, x86::mem(ts->esi + 0xE0, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x2C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x1C, 4));
	add(&ts->eax, 0x1C);
	mov(mv, x86::mem(ts->esi + 0xE4, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->esi + 0xE8, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	mov(mv, x86::mem(ts->esi + 0xEC, 4), ts->eax);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xE0, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x795410);
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xE4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xE4, 4));
	game::sub_505450(ts, mv);
	add(&ts->esp, 0x40);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0xF0, 4), ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x795400);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0xF4, 4), ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x78, 4));
	add(&ts->esp, 0x1C);
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4C0EE7;
    }
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0x80, 4));
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_4C0E40:
	mov(mv, &ts->ecx, x86::mem(ts->ebx, 4));
	lea(mv, &ts->ebp, x86::mem(ts->eax + 0x1, 4));
	push(mv, &ts->esp, ts->ebp);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, 0x7953F0);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x58, 4), ts->ecx);
	game::sub_4400D0(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x64, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x28, 4));
	mov(&ts->edi, ts->eax);
	push(mv, &ts->esp, ts->edi);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xD8, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xDC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x68, 4));
	game::sub_50CA50(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x34, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_51D730(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x74, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xE0, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xE8, 4));
	add(&ts->esp, 0x28);
	push(mv, &ts->esp, ts->ecx);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xE4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->edi);
	game::sub_51D380(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x78, 4));
	mov(&ts->eax, ts->ebp);
	add(&ts->esp, 0xC);
	add(&ts->ebx, 0x8);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4C0E40;
    }
	xor_(&ts->ebx, ts->ebx);

loc_4C0EE7:
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	game::sub_430560(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4C0F03;
    }
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	push(mv, &ts->esp, 0x5);
	game::sub_5F4240(ts, mv);

loc_4C0F03:
	mov(mv, x86::mem(ts->esi + 0xD0, 1), 0x1);
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	game::sub_430560(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C0F20;
    }
	mov(mv, x86::mem(ts->esi + 0xD0, 1), 0x0);

loc_4C0F20:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x78, 4));
	mov(mv, x86::mem(ts->esi + 0xD1, 1), 0x0);
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	lea(mv, &ts->edi, x86::mem(ts->esi + (ts->edx*8) + 0x74, 4));
	game::sub_430560(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C0F40;
    }
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x7C, 4));

loc_4C0F40:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_4A4BF0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x8A0F21A1);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A60(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xAC6BDBC6);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A60(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xCBEDA229);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A60(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x58, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x8A10C890);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A60(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x5C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xA6B6DD4A);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A60(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x9C0AE9AA);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A60(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x64, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x8A094D85);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A60(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x68, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x8A0AB225);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x40);
	mov(mv, x86::mem(ts->esi + 0x6C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x8A0AA234);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A60(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79053C);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x70, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x76, 1), 0x1);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8900BC, 4));
	add(&ts->esp, 0x18);
	xor_(&ts->edi, ts->edi);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4C1029;
    }
	mov(&ts->edi, ts->edi);

loc_4C1010:
	mov(mv, &ts->ecx, x86::mem(0x8900B4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ebx);
	game::sub_5F1FD0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8900BC, 4));
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4C1010;
    }

loc_4C1029:
	mov(mv, &ts->edx, x86::mem(0x8650B8, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->edx + 0x24, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4C1039;
    }
	game::sub_579520(ts, mv);

loc_4C1039:
	mov(mv, &ts->eax, x86::mem(0x8384D8, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4C1066;
    }
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x6C, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_4C1066;
    }
	mov(mv, &ts->al, x86::mem(0x8384DC, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4C1066;
    }
	mov(mv, x86::mem(ts->esi + 0x104, 1), 0x1);
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	game::sub_54E6B0(ts, mv);
	goto loc_4C106D;

loc_4C1066:
	mov(mv, x86::mem(ts->esi + 0x104, 1), 0x0);

loc_4C106D:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x3C, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x38);
	retn(mv, &ts->esp, 0x4);

loc_773A30:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x30, 4));
	goto sub_510D40;

SEH_4C0AA0:
	mov(&ts->eax, 0x7DFAB8);
	goto ___CxxFrameHandler;
}

void sub_4C1090(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4A4B70(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4C10A8;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4C10A8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4C10B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0xD0, 1));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->al, ts->bl);
	if (ts->eflags.zero) {
        goto loc_4C10E3;
    }
	mov(mv, &ts->ecx, x86::mem(0x8650B8, 4));
	push(mv, &ts->esp, 0x790618);
	game::sub_57C080(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4C10DD;
    }
	mov(&ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	goto sub_4A50E0;

loc_4C10DD:
	mov(mv, x86::mem(ts->esi + 0xD0, 1), ts->bl);

loc_4C10E3:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xCC, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4C1203;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xD1, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto loc_4C1118;
    }
	add(&ts->eax, 0x38);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x88EB00);
	game::sub_5E7AF0(ts, mv);
	mov(mv, x86::mem(0x88ED89, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0xD1, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_4C1118:
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8651AC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xD4, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78E000, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4C1203;
    }
	mov(&ts->ecx, 0x88EB00);
	game::sub_5E7A40(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C1203;
    }
	mov(mv, x86::mem(ts->esi + 0xD3, 1), ts->bl);
	mov(mv, &ts->ecx, x86::mem(0x8650B8, 4));
	mov(mv, x86::mem(0x88ED89, 1), ts->bl);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xCC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_57C1D0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8650B8, 4));
	mov(mv, x86::mem(ts->ecx + 0x14, 4), ts->ebx);
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xD2, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_4C1185;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_4A50E0(ts, mv);
	goto loc_4C11AB;

loc_4C1185:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FC44);
	push(mv, &ts->esp, 0xA9723345);
	push(mv, &ts->esp, 0x79056C);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x5);
	game::sub_5F43D0(ts, mv);

loc_4C11AB:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x74, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0xD1, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0xCC, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4C1200;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F614);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79053C);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x790584);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537C60(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);

loc_4C1200:
	mov(mv, x86::mem(ts->esi + 0x76, 1), ts->bl);

loc_4C1203:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void _dynamic_atexit_destructor_for__std__tr1__shared_ptr___ExceptionPtr____ExceptionPtr__m_badAllocExceptionPtr___void_(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(0x8363EC, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto locret_4C121F;
    }
	goto sub_4C10B0;

locret_4C121F:
	retn(mv, &ts->esp);
}

void sub_4C1220(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0xD2, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C1274;
    }
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(ts->esi + 0xD2, 1), 0x1);
	mov(mv, &ts->ecx, x86::mem(0x8650B8, 4));
	push(mv, &ts->esp, 0x790618);
	game::sub_578FD0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4C125D;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xCC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4C1265;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_4A50E0(ts, mv);
	goto loc_4C1265;

loc_4C125D:
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_4A4BF0(ts, mv);

loc_4C1265:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x74, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C1274;
    }
	mov(&ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	goto sub_4A5200;

loc_4C1274:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4C1280(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x773A64);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x4C);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4C12CB;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4A5250(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4C12CB:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_773A50:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79546C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4C1280:
	mov(&ts->eax, 0x7DFBCC);
	goto ___CxxFrameHandler;
}

void sub_4C12E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0xC407210);
	if (ts->eflags.zero) {
        goto loc_4C132A;
    }
	cmp(&ts->eflags, ts->eax, 0x406415E3);
	if (ts->eflags.zero) {
        goto loc_4C132A;
    }
	cmp(&ts->eflags, ts->eax, 0x911AB364);
	if (!ts->eflags.zero) {
        goto locret_4C1335;
    }
	mov(mv, &ts->edx, x86::mem(0x8363DC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x38, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->edx + 0x30, 4));
	lea(mv, &ts->eax, x86::mem(ts->edx + 0x38, 4));
	cmp(&ts->eflags, ts->esi, ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero) {
        goto locret_4C1335;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x4, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(&ts->eax, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp, 0x10);

loc_4C132A:
	mov(mv, &ts->ecx, x86::mem(0x8363DC, 4));
	game::sub_4BFF80(ts, mv);

locret_4C1335:
	retn(mv, &ts->esp, 0x10);
}

void sub_4C1340(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x8, 4));
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_543D40(ts, mv);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x160, 4));
	game::sub_5448F0(ts, mv);
	cmp(&ts->eflags, ts->edi, 0x9120409E);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4C142D;
    }
	if (ts->eflags.zero) {
        goto loc_4C1406;
    }
	cmp(&ts->eflags, ts->edi, 0x34DC1BCF);
	if (ts->eflags.zero) {
        goto loc_4C13EF;
    }
	cmp(&ts->eflags, ts->edi, 0x35F8620B);
	if (ts->eflags.zero) {
        goto loc_4C13DF;
    }
	cmp(&ts->eflags, ts->edi, 0x911AB364);
	if (!ts->eflags.zero) {
        goto loc_4C14AE;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x78F5B8);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537CC0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C14AE;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_50B8C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F5B8);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4C13DF:
	mov(&ts->ecx, 0x8635BC);
	game::sub_525510(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4C13EF:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x251BF83E);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4C1406:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x158, 4));
	dec(&ts->edx);
	mov(&ts->eax, ts->edx);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x158, 4), ts->edx);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_4C14AE;
    }
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x158, 4), 0x0);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4C142D:
	cmp(&ts->eflags, ts->edi, 0xB5971BF1);
	if (ts->eflags.zero) {
        goto loc_4C148E;
    }
	cmp(&ts->eflags, ts->edi, 0xD05FC3A3);
	if (ts->eflags.zero) {
        goto loc_4C1462;
    }
	cmp(&ts->eflags, ts->edi, 0xE1FDE1D1);
	if (!ts->eflags.zero) {
        goto loc_4C14AE;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x13C, 4), 0x911AB364);
	if (!ts->eflags.zero) {
        goto loc_4C14AE;
    }
	mov(mv, &ts->ecx, x86::mem(0x8363DC, 4));
	game::sub_4C0020(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4C1462:
	mov(&ts->ecx, 0x8635BC);
	game::sub_5112A0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x48, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x85AD40);
	game::sub_532CF0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8363DC, 4));
	game::sub_4BFF80(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4C148E:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x158, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x15C, 4));
	inc(&ts->edi);
	mov(&ts->ecx, ts->edi);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x158, 4), ts->edi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4C14AE;
    }
	dec(&ts->eax);
	mov(mv, x86::mem(ts->esi + 0x158, 4), ts->eax);

loc_4C14AE:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);
}

void sub_4C14C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	mov(mv, &ts->eax, x86::mem(0x862838, 4));
	imul(&ts->eax, ts->eax, 0x104);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x862100, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x8, 4));
	if (!ts->eflags.zero) {
        goto loc_4C1519;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x48, 4));
	game::sub_5129F0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x39DF9562);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x34DC1BCF);
	push(mv, &ts->esp, 0x34DC1BCF);
	push(mv, &ts->esp, 0xD05FC3A3);
	push(mv, &ts->esp, 0xBE503981);
	push(mv, &ts->esp, 0x88579775);
	push(mv, &ts->esp, 0x795484);
	push(mv, &ts->esp, ts->esi);
	game::sub_558790(ts, mv);
	add(&ts->esp, 0x2C);

loc_4C1519:
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x96DDA9E6);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x14);
}

void sub_4C1530(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x773A84);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x2C);
	mov(mv, &ts->eax, x86::mem(0x83A9D8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50D2D0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_537950(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x862838, 4));
	imul(&ts->ecx, ts->ecx, 0x104);
	add(&ts->esp, 0xC);
	add(&ts->ecx, 0x861F14);
	game::sub_5005E0(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x862838, 4));
	imul(&ts->ecx, ts->ecx, 0x104);
	add(&ts->ecx, 0x862018);
	game::sub_500670(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8, 4), 0x0);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4C1670;
    }
	push(mv, &ts->esp, ts->ebx);

loc_4C15B0:
	mov(mv, &ts->ecx, x86::mem(0x862838, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	imul(&ts->ecx, ts->ecx, 0x104);
	push(mv, &ts->esp, ts->edx);
	add(&ts->ecx, 0x862018);
	game::sub_5006D0(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x7954B0);
	mov(&ts->ebx, ts->eax);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_537A60(ts, mv);
	add(&ts->esp, 0xC);
	mov(&ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x150, 4), ts->eax);
	game::sub_500180(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F604);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C960(ts, mv);
	push(mv, &ts->esp, 0x4C);
	game::j__malloc(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x14);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->esi);
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x40, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4C1648;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_505450(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x79547C);
	mov(mv, x86::mem(ts->esi + 0x48, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x45, 1), 0x1);
	goto loc_4C164A;

loc_4C1648:
	xor_(&ts->esi, ts->esi);

loc_4C164A:
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x44, 4), 0xFFFFFFFF);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4C15B0;
    }
	pop(mv, &ts->esp, ts->ebx);

loc_4C1670:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4C, 4));
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x4C, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax + 0x20, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x34, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x38);
	retn(mv, &ts->esp);

loc_773A70:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7954A0);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x30, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4C1530:
	mov(&ts->eax, 0x7DFBF0);
	goto ___CxxFrameHandler;
}

void sub_4C16A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_4A5740(ts, mv);
	retn(mv, &ts->esp);
}

void sub_4C16C0(x86::thread_state* ts, x86::memory_view* mv) {
	xor_(&ts->eax, ts->eax);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x20, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x30, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x34, 4), 0xFFFFFFFF);
	mov(&ts->edi, 0x7F45D8);

loc_4C16F3:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x8, 4), 0xFFFFFFFE);
	if (!ts->eflags.zero) {
        goto loc_4C170A;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x4C16A0);
	push(mv, &ts->esp, ts->edx);
	game::sub_5794B0(ts, mv);
	add(&ts->esp, 0xC);

loc_4C170A:
	add(&ts->edi, 0x4);
	cmp(&ts->eflags, ts->edi, 0x7F4604);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4C16F3;
    }
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4C1720(x86::thread_state* ts, x86::memory_view* mv) {
	goto sub_4A54D0;
}

void sub_4C1730(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772A43);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), ts->eax);
	game::sub_40C910(ts, mv);
	xor_(&ts->ebx, ts->ebx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x900, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ebx);
	game::sub_40C910(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11F0, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 1), 0x1);
	game::sub_40C910(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x1AE0, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 1), 0x2);
	game::sub_40C910(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x23D0, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 1), 0x3);
	game::sub_40C910(ts, mv);
	mov(&ts->eax, 0x1);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, 0x8A3288);
	mov(mv, x86::mem(ts->esp + 0x1C, 1), 0x4);
	mov(mv, x86::mem(ts->esi + 0x2CC0, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x2CC4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x2CC8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x2CCC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x2CD0, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x2CD4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x2CD8, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x2CDC, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x2CE0, 4), ts->eax);
	game::sub_610700(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x836408, 4), ts->ebx);
	mov(mv, x86::mem(0x83640C, 1), ts->bl);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_772A00:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x10);
	goto sub_401800;

loc_772A0B:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x900);
	goto sub_401800;

loc_772A19:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x11F0);
	goto sub_401800;

loc_772A27:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x1AE0);
	goto sub_401800;

loc_772A35:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x23D0);
	goto sub_401800;

SEH_4A5A10:
	mov(&ts->eax, 0x7DF028);
	goto ___CxxFrameHandler;
}

void sub_4C1810(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_51BD10(ts, mv);
	mov(&ts->ecx, ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x54, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + (ts->edx*4) + 0x4C, 4));
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(&ts->eax, 0x1);
	if (ts->eflags.zero) {
        goto locret_4C185C;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x8, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto locret_4C185C;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(0x8A1CCC, 4));
	imul(&ts->eax, ts->eax, 0x890);
	mov(mv, &ts->edx, x86::mem(ts->eax + (ts->ecx) + 0xD0, 4));
	add(&ts->eax, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_433CD0(ts, mv);
	add(&ts->esp, 0x8);

locret_4C185C:
	retn(mv, &ts->esp);
}

void sub_4C1860(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_51BD10(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4C18AA;
    }
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x10, 4));
	test(&ts->eflags, ts->bl, ts->bl);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	if (!ts->eflags.zero) {
        goto loc_4C188E;
    }
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_4A5B20(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4C18A8;
    }

loc_4C188E:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + (ts->ecx*4) + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_61F820(ts, mv);
	add(&ts->esp, 0x10);

loc_4C18A8:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);

loc_4C18AA:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4C18B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C190E;
    }
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_51BD10(ts, mv);
	mov(&ts->ecx, ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x54, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + (ts->edx*4) + 0x4C, 4));
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(&ts->eax, 0x1);
	if (ts->eflags.zero) {
        goto locret_4C1911;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x8, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto locret_4C1911;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(0x8A1CCC, 4));
	imul(&ts->eax, ts->eax, 0x890);
	mov(mv, &ts->edx, x86::mem(ts->eax + (ts->ecx) + 0xD0, 4));
	add(&ts->eax, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_433CD0(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);

loc_4C190E:
	or_(&ts->eax, 0xFFFFFFFF);

locret_4C1911:
	retn(mv, &ts->esp);
}

void sub_4C1920(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_4C195B;
    }
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_51BD10(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x54, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + (ts->edx*4) + 0x4C, 4));
	game::sub_61FBA0(ts, mv);

locret_4C195B:
	retn(mv, &ts->esp);
}

void sub_4C1960(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x773AA6);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->edi);
	push(mv, &ts->esp, 0x4903B0);
	push(mv, &ts->esp, 0x4AFAF0);
	push(mv, &ts->esp, 0x3);
	push(mv, &ts->esp, 0x18);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x34, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x28, 1), 0x1);
	game::sub_75C461(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->esi + 0x84, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x88, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x9C, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0xA0, 4), ts->edi);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_773A90:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x4);
	goto sub_4903B0;

loc_773A9B:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x1C);
	goto sub_4903B0;

SEH_4C1960:
	mov(&ts->eax, 0x7DFC1C);
	goto ___CxxFrameHandler;
}

void sub_4C19E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x773AE7);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x94, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x3);
	game::sub_4903B0(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x7C, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 1), 0x2);
	game::sub_4903B0(ts, mv);
	push(mv, &ts->esp, 0x4903B0);
	push(mv, &ts->esp, 0x3);
	push(mv, &ts->esp, 0x18);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x34, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x20, 1), 0x1);
	game::_eh_vector_destructor_iterator__void_P_uint_int_void__P__void_P__(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 1), 0x0);
	game::sub_4903B0(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	game::sub_4903B0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_773AB0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x4);
	goto sub_4903B0;

loc_773ABB:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x1C);
	goto sub_4903B0;

loc_773AC6:
	push(mv, &ts->esp, 0x4903B0);
	push(mv, &ts->esp, 0x3);
	push(mv, &ts->esp, 0x18);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->eax, 0x34);
	push(mv, &ts->esp, ts->eax);
	game::_eh_vector_destructor_iterator__void_P_uint_int_void__P__void_P__(ts, mv);
	retn(mv, &ts->esp);

loc_773ADC:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x7C);
	goto sub_4903B0;

SEH_4C19E0:
	mov(&ts->eax, 0x7DFC58);
	goto ___CxxFrameHandler;
}

void std__strstreambuf___strstreambuf_void_(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x773B21);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x7954C0);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x118, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x2);
	if (ts->eflags.zero) {
        goto loc_4C1AAB;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax, 4));

loc_4C1AAB:
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4C, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4C1AC3;
    }
	mov(&ts->ecx, ts->edi);
	game::sub_6380E0(ts, mv);
	push(mv, &ts->esp, ts->edi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4C1AC3:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x50, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4C1ADA;
    }
	mov(&ts->ecx, ts->edi);
	game::sub_6380E0(ts, mv);
	push(mv, &ts->esp, ts->edi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4C1ADA:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x234, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4C1AF4;
    }
	mov(&ts->ecx, ts->edi);
	game::sub_4A5A10(ts, mv);
	push(mv, &ts->esp, ts->edi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4C1AF4:
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x70, 4));
	game::sub_4903B0(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x88, 4));
	game::sub_4903B0(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xA0, 4));
	game::sub_4903B0(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xB8, 4));
	game::sub_4903B0(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xD0, 4));
	game::sub_4903B0(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xE8, 4));
	game::sub_4903B0(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x100, 4));
	game::sub_4903B0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x74, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	pop(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4C1B51;
    }
	game::nullsub_1(ts, mv);

loc_4C1B51:
	mov(&ts->ecx, 0x8357E0);
	game::sub_491E10(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x23C, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 1), 0x1);
	game::sub_4A54D0(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 1), 0x0);
	game::sub_4C19E0(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	game::sub_510D40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_773B00:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

loc_773B08:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x6C);
	goto sub_4C19E0;

loc_773B13:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x23C);
	goto sub_4C1720;

SEH_4C1A70:
	mov(&ts->eax, 0x7DFC8C);
	goto ___CxxFrameHandler;
}

void sub_4C1BA0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x134, 4));
	imul(&ts->eax, ts->eax, 0xAB4C);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x83AC34, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	game::sub_4FFA80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1BC, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x790980);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537BE0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x234, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x2CD0, 4));
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4C1BF1;
    }
	lea(mv, &ts->edi, x86::mem(ts->eax + 0x900, 4));
	goto loc_4C1C14;

loc_4C1BF1:
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x2CD4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4C1C03;
    }
	lea(mv, &ts->edi, x86::mem(ts->eax + 0x11F0, 4));
	goto loc_4C1C14;

loc_4C1C03:
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x2CCC, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4C1C12;
    }
	lea(mv, &ts->edi, x86::mem(ts->eax + 0x10, 4));
	goto loc_4C1C14;

loc_4C1C12:
	xor_(&ts->edi, ts->edi);

loc_4C1C14:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1CC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4C1D14;
    }
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4C1D14;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x3B7F8AE);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	add(&ts->edi, 0x10);
	add(&ts->esp, 0xC);
	mov(&ts->ecx, ts->edi);
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0x1D8, 4));
	game::sub_5B53A0(ts, mv);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_4A5920(ts, mv);
	mov(&ts->ecx, ts->edi);
	lea(mv, &ts->ebp, x86::mem(ts->esi + 0x1F0, 4));
	game::sub_5B6A20(ts, mv);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebp);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_4A5920(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x208, 4));
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edx);
	game::sub_5B5490(ts, mv);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_4A5920(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1D0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4C1CDA;
    }
	mov(&ts->ecx, ts->edi);
	game::sub_5B53A0(ts, mv);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_4A59B0(ts, mv);
	mov(&ts->ecx, ts->edi);
	game::sub_5B6A20(ts, mv);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebp);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_4A59B0(ts, mv);
	mov(&ts->ecx, ts->edi);
	game::sub_5B5490(ts, mv);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_4A59B0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_4C1CDA:
	mov(mv, &ts->ebx, x86::mem(ts->ebx + 0xC, 4));
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4C1CEA;
    }
	push(mv, &ts->esp, ts->ebx);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);

loc_4C1CEA:
	mov(mv, &ts->ebp, x86::mem(ts->ebp + 0xC, 4));
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_4C1CFA;
    }
	push(mv, &ts->esp, ts->ebp);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);

loc_4C1CFA:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C1D2B;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_4C1D14:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x3B7F8AE);
	push(mv, &ts->esp, ts->esi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0xC);

loc_4C1D2B:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_4C1D40(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x8651AC, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(0x837AA0, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x274, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x158, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x154, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x23C, 4));
	game::sub_4A55E0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x118, 4));
	mov(mv, &ts->al, x86::mem(ts->esp + 0x18, 1));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->al, ts->bl);
	mov(mv, x86::mem(ts->esi + 0x24C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x248, 4), ts->ebx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x14C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x124, 4));
	if (ts->eflags.zero) {
        goto loc_4C1DCE;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x230, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + (ts->eax*4) + 0x224, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x10);
	game::sub_51DE30(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x230, 4));
	add(&ts->esp, 0x8);
	inc(&ts->eax);
	cdq(&ts->eax, ts->edx);
	mov(&ts->ecx, 0x3);
	idiv(&ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x230, 4), ts->edx);

loc_4C1DCE:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x254, 4));
	mov(mv, x86::mem(ts->esi + 0x128, 4), ts->ebx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x274, 4));
	mov(mv, x86::mem(ts->esi + 0x120, 4), ts->ebx);
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78450C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4C1E13;
    }
	goto loc_4C1E00;

loc_4C1E00:
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78450C, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78450C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (ts->eflags.zero) {
        goto loc_4C1E00;
    }

loc_4C1E13:
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4C1E33;
    }

loc_4C1E20:
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78450C, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_4C1E20;
    }

loc_4C1E33:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x274, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(mv, x86::mem(ts->esi + 0x11C, 4), ts->edx);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4C1E60;
    }
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fsub(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78450C, 4));
	fsub(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	goto loc_4C1E76;

loc_4C1E60:
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fsub(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78450C, 4));
	fsub(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));

loc_4C1E76:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4C1E99;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	mov(mv, x86::mem(ts->esi + 0x138, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x120, 4), ts->eax);
	goto loc_4C1EAA;

loc_4C1E99:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esi + 0x138, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x120, 4), ts->ecx);

loc_4C1EAA:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x25C, 4));
	mov(mv, x86::mem(ts->esi + 0x130, 4), ts->ebx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7F45A4, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x12C, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4C1EDB;
    }
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fsub(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x130, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	goto loc_4C1EE7;

loc_4C1EDB:
	fsubrp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fabs(&ts->fp, x86::fp_index(0));
	fchs(&ts->fp, x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x130, 4));

loc_4C1EE7:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x160, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_4C1F3A;
    }
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x15C, 4));
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_51BD10(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4C1F2F;
    }
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->edi);
	game::sub_4A5B20(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4C1F2F;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x54, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + (ts->edx*4) + 0x4C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, 0x3F800000);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ecx);
	game::sub_61F820(ts, mv);
	add(&ts->esp, 0x10);

loc_4C1F2F:
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x18, 4));
	mov(mv, x86::mem(ts->esi + 0x160, 1), ts->bl);
	pop(mv, &ts->esp, ts->ebp);

loc_4C1F3A:
	cmp(&ts->eflags, ts->edi, 0x44);
	if (!ts->eflags.zero) {
        goto loc_4C1F78;
    }
	push(mv, &ts->esp, 0x78FCD8);
	mov(mv, x86::mem(ts->esi + 0x160, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x15C, 4), ts->ebx);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4C1F78;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x54, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + (ts->edx*4) + 0x4C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, 0x3F800000);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ecx);
	game::sub_61F820(ts, mv);
	add(&ts->esp, 0x10);

loc_4C1F78:
	mov(mv, &ts->dl, x86::mem(ts->esp + 0x1C, 1));
	mov(mv, x86::mem(ts->esi + 0x168, 4), ts->edi);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x166, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x167, 1), ts->dl);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);
}

void sub_4C1FA0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->edi + 0x167, 1), 0x0);
	mov(mv, x86::mem(ts->edi + 0x168, 4), 0xFFFFFFFF);
	mov(mv, &ts->eax, x86::mem(0x8651AC, 4));
	mov(mv, x86::mem(0x837AA0, 4), ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x118, 4));
	game::sub_453320(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->edi + 0x160, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4C2023;
    }
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->edi + 0x15C, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_51BD10(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4C201A;
    }
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->esi);
	game::sub_4A5B20(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4C201A;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + (ts->edx*4) + 0x4C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, 0x3F800000);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ecx);
	game::sub_61F820(ts, mv);
	add(&ts->esp, 0x10);

loc_4C201A:
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->edi + 0x160, 1), 0x0);
	pop(mv, &ts->esp, ts->ebp);

loc_4C2023:
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4C2030(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_51BD10(ts, mv);
	mov(&ts->ecx, ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x13C, 4));
	add(&ts->esp, 0x4);
	xor_(&ts->al, ts->al);
	cmp(&ts->eflags, ts->edx, 0x1);
	if (!ts->eflags.zero) {
        goto locret_4C2068;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x234, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x2CD4, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto locret_4C2068;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x2CE0, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (!ts->eflags.zero) {
        goto locret_4C2068;
    }
	mov(&ts->al, 0x1);

locret_4C2068:
	retn(mv, &ts->esp);
}

void sub_4C2070(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	game::sub_4A7830(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4C20F1;
    }
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(0x8363FC, 1), 0x0);
	game::sub_4C1FA0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esi + 0x274, 4), ts->ecx);
	mov(&ts->eax, ts->ecx);
	mov(mv, x86::mem(0x7F45A4, 4), ts->edx);
	mov(&ts->ecx, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x38, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x30, 4));
	mov(mv, x86::mem(ts->esi + 0x254, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x38, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x30, 4));
	mov(mv, x86::mem(ts->esi + 0x25C, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x38, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_4A5B70(ts, mv);

loc_4C20F1:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4C2100(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_4A7830(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_4C2130;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	mov(mv, x86::mem(0x8363FC, 1), 0x0);
	game::sub_4C1D40(ts, mv);

locret_4C2130:
	retn(mv, &ts->esp);
}

void sub_4C2140(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_4A7830(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_4C215D;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4C1FA0(ts, mv);

locret_4C215D:
	retn(mv, &ts->esp);
}

void sub_4C2160(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	and_(&ts->eax, 0xFFFFFFFB);
	retn(mv, &ts->esp, 0x4);
}

void sub_4C2170(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x150, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(0x8651AC, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));
	if (ts->eflags.zero) {
        goto loc_4C21B5;
    }
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_571A60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C21B5;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_543D40(ts, mv);

loc_4C21B5:
	cmp(&ts->eflags, ts->edi, 0x451E768E);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4C22D7;
    }
	if (ts->eflags.zero) {
        goto loc_4C229D;
    }
	cmp(&ts->eflags, ts->edi, 0x30F32A49);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4C226D;
    }
	if (ts->eflags.zero) {
        goto loc_4C2450;
    }
	cmp(&ts->eflags, ts->edi, 0xC407210);
	if (ts->eflags.zero) {
        goto loc_4C221B;
    }
	cmp(&ts->eflags, ts->edi, 0x13999FC2);
	if (ts->eflags.zero) {
        goto loc_4C2203;
    }
	cmp(&ts->eflags, ts->edi, 0x30ED2368);
	if (!ts->eflags.zero) {
        goto loc_4C249B;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_4A7CF0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_4C2203:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x251BF83E);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_4C221B:
	mov(&ts->ecx, ts->esi);
	game::sub_4A7BC0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4C249B;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x78F5B8);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537CC0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C249B;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F5B8);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x14);
	goto loc_4C22BA;

loc_4C226D:
	cmp(&ts->eflags, ts->edi, 0x33C42E03);
	if (ts->eflags.zero) {
        goto loc_4C228F;
    }
	cmp(&ts->eflags, ts->edi, 0x43DA9FD0);
	if (!ts->eflags.zero) {
        goto loc_4C249B;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_4A7C70(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_4C228F:
	mov(&ts->ecx, ts->esi);
	game::sub_4A7CC0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_4C229D:
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xB);
	game::sub_5F41E0(ts, mv);
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);

loc_4C22BA:
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4C249B;
    }
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379A0(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_4C22D7:
	cmp(&ts->eflags, ts->edi, 0xB5AF2461);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4C240C;
    }
	if (ts->eflags.zero) {
        goto loc_4C237F;
    }
	cmp(&ts->eflags, ts->edi, 0x4A05AE7F);
	if (ts->eflags.zero) {
        goto loc_4C2367;
    }
	cmp(&ts->eflags, ts->edi, 0x911AB364);
	if (ts->eflags.zero) {
        goto loc_4C237F;
    }
	cmp(&ts->eflags, ts->edi, 0xB4623F67);
	if (!ts->eflags.zero) {
        goto loc_4C249B;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x251BF83E);
	game::sub_55DDA0(ts, mv);
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C2342;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_555F10(ts, mv);
	add(&ts->esp, 0x10);

loc_4C2342:
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	game::sub_54E6A0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	game::sub_54E6E0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_4C2367:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x251BF83E);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_4C237F:
	mov(&ts->ecx, ts->esi);
	game::sub_4A7BC0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4C249B;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x78F5B8);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537CC0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C249B;
    }
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4C23CC;
    }
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379A0(ts, mv);
	add(&ts->esp, 0x4);

loc_4C23CC:
	mov(&ts->ecx, ts->esi);
	game::sub_52FBF0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_50DA20(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F5B8);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	game::sub_50B8C0(ts, mv);
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_4C240C:
	cmp(&ts->eflags, ts->edi, 0xE1A57D51);
	if (ts->eflags.zero) {
        goto loc_4C248E;
    }
	cmp(&ts->eflags, ts->edi, 0xE1FDE1D1);
	if (!ts->eflags.zero) {
        goto loc_4C249B;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x13C, 4));
	cmp(&ts->eflags, ts->eax, 0x4A05AE7F);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4C2479;
    }
	if (ts->eflags.zero) {
        goto loc_4C249B;
    }
	cmp(&ts->eflags, ts->eax, 0x30F32A49);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4C2464;
    }
	if (ts->eflags.zero) {
        goto loc_4C2450;
    }
	cmp(&ts->eflags, ts->eax, 0x13999FC2);
	if (ts->eflags.zero) {
        goto loc_4C249B;
    }
	cmp(&ts->eflags, ts->eax, 0x30ED2368);
	if (!ts->eflags.zero) {
        goto loc_4C249B;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_4A7CF0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_4C2450:
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	push(mv, &ts->esp, 0x4);
	game::sub_5F4240(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_4C2464:
	cmp(&ts->eflags, ts->eax, 0x43DA9FD0);
	if (!ts->eflags.zero) {
        goto loc_4C249B;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_4A7C70(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_4C2479:
	cmp(&ts->eflags, ts->eax, 0x911AB364);
	if (ts->eflags.zero) {
        goto loc_4C24A2;
    }
	cmp(&ts->eflags, ts->eax, 0xB5AF2461);
	if (ts->eflags.zero) {
        goto loc_4C24A2;
    }
	cmp(&ts->eflags, ts->eax, 0xE1A57D51);
	if (!ts->eflags.zero) {
        goto loc_4C249B;
    }

loc_4C248E:
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	push(mv, &ts->esp, 0x3);
	game::sub_5F4240(ts, mv);

loc_4C249B:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_4C24A2:
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	push(mv, &ts->esp, 0x1);
	game::sub_5F4240(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);
}

void sub_4C24C0(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_4C2501;
    }
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	push(mv, &ts->esp, 0x1);
	game::sub_5F4240(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_50B8C0(ts, mv);
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto locret_4C2501;
    }
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379A0(ts, mv);
	pop(mv, &ts->esp, ts->ecx);

locret_4C2501:
	retn(mv, &ts->esp, 0x14);
}

void sub_4C2510(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_4C2551;
    }
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	push(mv, &ts->esp, 0x2);
	game::sub_5F4240(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_50B8C0(ts, mv);
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto locret_4C2551;
    }
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379A0(ts, mv);
	pop(mv, &ts->esp, ts->ecx);

locret_4C2551:
	retn(mv, &ts->esp, 0x14);
}

void sub_4C2560(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_4C25CC;
    }
	mov(mv, &ts->eax, x86::mem(0x8900D8, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), 0x6);
	if (!ts->eflags.zero) {
        goto loc_4C2581;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x24, 4), 0x4);
	if (!ts->eflags.zero) {
        goto loc_4C2581;
    }
	mov(&ts->eax, 0x1);
	goto loc_4C2583;

loc_4C2581:
	xor_(&ts->eax, ts->eax);

loc_4C2583:
	neg(&ts->al);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0xB39D9AB5);
	add(&ts->eax, 0x33C42E03);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xB4623F67);
	push(mv, &ts->esp, 0xB4623F67);
	push(mv, &ts->esp, 0x33C42E03);
	push(mv, &ts->esp, 0x541389E5);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x795000);
	push(mv, &ts->esp, ts->esi);
	game::sub_558790(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x96DDA9E6);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x2C);
	pop(mv, &ts->esp, ts->esi);

locret_4C25CC:
	retn(mv, &ts->esp, 0x14);
}

void sub_4C25D0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x8900D8, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), 0x6);
	if (!ts->eflags.zero) {
        goto loc_4C25E7;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x24, 4), 0x4);
	if (!ts->eflags.zero) {
        goto loc_4C25E7;
    }
	mov(&ts->eax, 0x1);
	goto loc_4C25E9;

loc_4C25E7:
	xor_(&ts->eax, ts->eax);

loc_4C25E9:
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_4C263C;
    }
	neg(&ts->al);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0xA0DE05B7);
	add(&ts->eax, 0x972A44B);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xB4623F67);
	push(mv, &ts->esp, 0xB4623F67);
	push(mv, &ts->esp, 0xE1A57D51);
	push(mv, &ts->esp, 0x541389E5);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x795000);
	push(mv, &ts->esp, ts->esi);
	game::sub_558790(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x96DDA9E6);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x2C);
	pop(mv, &ts->esp, ts->esi);

locret_4C263C:
	retn(mv, &ts->esp, 0x14);
}

void sub_4C2640(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x7954F0);
	mov(mv, &ts->eax, x86::mem(0x8650B8, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x50EC, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_4C2694;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xB8, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4C2694;
    }
	mov(mv, &ts->eax, x86::mem(0x88F1A8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4C2694;
    }
	mov(&ts->eax, 0x1);
	test(&ts->eflags, ts->al, ts->al);
	setz(ts->eflags, &ts->al);
	mov(mv, x86::mem(ts->esi + 0x20, 1), ts->al);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);

loc_4C2694:
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->al, ts->al);
	setz(ts->eflags, &ts->al);
	mov(mv, x86::mem(ts->esi + 0x20, 1), ts->al);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);
}

void sub_4C26B0(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_4C26F8;
    }
	mov(mv, &ts->eax, x86::mem(0x8650B8, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x50EC, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto locret_4C26F8;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xB8, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto locret_4C26F8;
    }
	mov(mv, &ts->eax, x86::mem(0x88F1A8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto locret_4C26F8;
    }
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7954F8);
	push(mv, &ts->esp, ts->esi);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);
	mov(mv, x86::mem(0x8363E4, 4), ts->esi);
	pop(mv, &ts->esp, ts->esi);

locret_4C26F8:
	retn(mv, &ts->esp, 0x14);
}

void sub_4C2700(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_4C271E;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79071C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);

locret_4C271E:
	retn(mv, &ts->esp, 0x14);
}

void sub_4C2730(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_4C2779;
    }
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, 0xC9BA9E3E);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xB4623F67);
	push(mv, &ts->esp, 0xB4623F67);
	push(mv, &ts->esp, 0x43DA9FD0);
	push(mv, &ts->esp, 0x541389E5);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x795000);
	push(mv, &ts->esp, ts->esi);
	game::sub_558790(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x96DDA9E6);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x2C);
	pop(mv, &ts->esp, ts->esi);

locret_4C2779:
	retn(mv, &ts->esp, 0x14);
}

void sub_4C2780(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_4C27EC;
    }
	mov(mv, &ts->eax, x86::mem(0x8900D8, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), 0x6);
	if (!ts->eflags.zero) {
        goto loc_4C27A1;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x24, 4), 0x4);
	if (!ts->eflags.zero) {
        goto loc_4C27A1;
    }
	mov(&ts->eax, 0x1);
	goto loc_4C27A3;

loc_4C27A1:
	xor_(&ts->eax, ts->eax);

loc_4C27A3:
	neg(&ts->al);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0xA718ECB5);
	add(&ts->eax, 0x60B42AFB);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xB4623F67);
	push(mv, &ts->esp, 0xB4623F67);
	push(mv, &ts->esp, 0x451E768E);
	push(mv, &ts->esp, 0x541389E5);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x795000);
	push(mv, &ts->esp, ts->esi);
	game::sub_558790(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x96DDA9E6);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x2C);
	pop(mv, &ts->esp, ts->esi);

locret_4C27EC:
	retn(mv, &ts->esp, 0x14);
}

void sub_4C27F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x795528);
	mov(mv, x86::mem(ts->esi + 0x45, 1), 0x1);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);
}

void sub_4C2820(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_4C28EE;
    }
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	cmp(&ts->eflags, ts->eax, 0x8);
	if (!ts->eflags.zero) {
        goto loc_4C286B;
    }
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F0120(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, &ts->al, x86::mem(0x850098, 1));
	if (ts->eflags.zero) {
        goto loc_4C285B;
    }
	neg(&ts->al);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0x244C7F5D);
	add(&ts->eax, 0x555BD5B6);
	goto loc_4C28B3;

loc_4C285B:
	neg(&ts->al);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0xEDD4EC9D);
	add(&ts->eax, 0xCE50DA14);
	goto loc_4C28B3;

loc_4C286B:
	cmp(&ts->eflags, ts->eax, 0x200);
	if (!ts->eflags.zero) {
        goto loc_4C288C;
    }
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F0120(ts, mv);
	neg(&ts->al);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0x7F206C34);
	add(&ts->eax, 0xD63B6982);
	goto loc_4C28B3;

loc_4C288C:
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx, 4), 0x6);
	if (!ts->eflags.zero) {
        goto loc_4C28A4;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x24, 4), 0x4);
	if (!ts->eflags.zero) {
        goto loc_4C28A4;
    }
	mov(&ts->eax, 0xE15B558A);
	goto loc_4C28B3;

loc_4C28A4:
	dec(&ts->eax);
	neg(&ts->eax);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0xC1A58CC2);
	add(&ts->eax, 0x6F4796A6);

loc_4C28B3:
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xB4623F67);
	push(mv, &ts->esp, 0xB4623F67);
	push(mv, &ts->esp, 0x30ED2368);
	push(mv, &ts->esp, 0x541389E5);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x795000);
	push(mv, &ts->esp, ts->esi);
	game::sub_558790(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x96DDA9E6);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x2C);
	pop(mv, &ts->esp, ts->esi);

locret_4C28EE:
	retn(mv, &ts->esp, 0x14);
}

void sub_4C2900(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x773BD0);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(0x850078, 4));
	mov(&ts->ebx, 0x1);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4C2982;
    }
	cmp(mv, &ts->eflags, x86::mem(0x89E7B0, 4), 0x7);
	if (ts->eflags.zero) {
        goto loc_4C29D1;
    }
	push(mv, &ts->esp, 0x48);
	game::j__malloc(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4C296E;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xC3E5BCDC);
	push(mv, &ts->esp, 0x62AA0DF6);
	mov(&ts->ecx, ts->esi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x7954D8);
	goto loc_4C2970;

loc_4C296E:
	xor_(&ts->esi, ts->esi);

loc_4C2970:
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xFFFFFFFF);
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));
	goto loc_4C29C7;

loc_4C2982:
	push(mv, &ts->esp, 0x48);
	game::j__malloc(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4C29B5;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xC44A6515);
	push(mv, &ts->esp, 0x62AA0DF6);
	mov(&ts->ecx, ts->esi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x7954D8);
	goto loc_4C29B7;

loc_4C29B5:
	xor_(&ts->esi, ts->esi);

loc_4C29B7:
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xFFFFFFFF);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));

loc_4C29C7:
	mov(mv, &ts->esi, x86::mem(0x850078, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4C2A2C;
    }

loc_4C29D1:
	mov(mv, &ts->al, x86::mem(0x8635A8, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4C2A2C;
    }
	push(mv, &ts->esp, 0x48);
	game::j__malloc(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x2);
	if (ts->eflags.zero) {
        goto loc_4C2A14;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x453890E1);
	push(mv, &ts->esp, 0xB8038AC0);
	mov(&ts->ecx, ts->esi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x795518);
	mov(mv, x86::mem(ts->esi + 0x45, 1), ts->bl);
	goto loc_4C2A16;

loc_4C2A14:
	xor_(&ts->esi, ts->esi);

loc_4C2A16:
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xFFFFFFFF);
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));
	mov(mv, &ts->esi, x86::mem(0x850078, 4));

loc_4C2A2C:
	mov(&ts->ecx, ts->edi);
	game::sub_4A7BF0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4C2A86;
    }
	push(mv, &ts->esp, 0x48);
	game::j__malloc(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x3);
	if (ts->eflags.zero) {
        goto loc_4C2A6E;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xB34993C9);
	push(mv, &ts->esp, 0x520DE4E3);
	mov(&ts->ecx, ts->esi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x795510);
	goto loc_4C2A70;

loc_4C2A6E:
	xor_(&ts->esi, ts->esi);

loc_4C2A70:
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xFFFFFFFF);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	mov(mv, &ts->esi, x86::mem(0x850078, 4));

loc_4C2A86:
	cmp(&ts->eflags, ts->esi, 0x4);
	if (ts->eflags.zero) {
        goto loc_4C2ADF;
    }
	cmp(&ts->eflags, ts->esi, 0x8);
	if (ts->eflags.zero) {
        goto loc_4C2AE4;
    }
	cmp(&ts->eflags, ts->esi, 0x200);
	if (ts->eflags.zero) {
        goto loc_4C2ADF;
    }
	push(mv, &ts->esp, 0x48);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x4);
	if (ts->eflags.zero) {
        goto loc_4C2AC7;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7840428A);
	push(mv, &ts->esp, 0x84D1D864);
	mov(&ts->ecx, ts->eax);
	game::sub_4C2640(ts, mv);
	goto loc_4C2AC9;

loc_4C2AC7:
	xor_(&ts->eax, ts->eax);

loc_4C2AC9:
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xFFFFFFFF);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	mov(mv, &ts->esi, x86::mem(0x850078, 4));

loc_4C2ADF:
	cmp(&ts->eflags, ts->esi, 0x8);
	if (!ts->eflags.zero) {
        goto loc_4C2B25;
    }

loc_4C2AE4:
	push(mv, &ts->esp, 0x48);
	game::j__malloc(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x5);
	if (ts->eflags.zero) {
        goto loc_4C2BA3;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFF956AF2);

loc_4C2B0B:
	push(mv, &ts->esp, 0x4C9E34E6);
	mov(&ts->ecx, ts->esi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x795528);
	mov(mv, x86::mem(ts->esi + 0x45, 1), ts->bl);
	goto loc_4C2BA5;

loc_4C2B25:
	push(mv, &ts->esp, 0x48);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->esi, 0x200);
	mov(&ts->esi, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	if (!ts->eflags.zero) {
        goto loc_4C2B8B;
    }
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x6);
	if (ts->eflags.zero) {
        goto loc_4C2B67;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xF39723A1);
	push(mv, &ts->esp, 0x4C9E34E6);
	mov(&ts->ecx, ts->esi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x795528);
	mov(mv, x86::mem(ts->esi + 0x45, 1), ts->bl);
	goto loc_4C2B69;

loc_4C2B67:
	xor_(&ts->esi, ts->esi);

loc_4C2B69:
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xFFFFFFFF);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4C2B8B:
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x7);
	if (ts->eflags.zero) {
        goto loc_4C2BA3;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xC7E1420C);
	goto loc_4C2B0B;

loc_4C2BA3:
	xor_(&ts->esi, ts->esi);

loc_4C2BA5:
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xFFFFFFFF);
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_773B30:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x795574);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773B44:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x795574);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773B58:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x795564);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773B6C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x795550);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773B80:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x795544);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773B94:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x795530);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773BA8:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x795530);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773BBC:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x795530);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4C2900:
	mov(&ts->eax, 0x7DFCE8);
	goto ___CxxFrameHandler;
}

void sub_4C2BD0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x773CD0);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(0x8500D0, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ebx, 0x3);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4C2F11;
    }
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_4C2C5C;
    }
	mov(mv, &ts->al, x86::mem(0x85BA67, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4C2C5C;
    }
	push(mv, &ts->esp, 0x48);
	game::j__malloc(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4C2C4A;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x5E670A9E);
	push(mv, &ts->esp, 0x3109913C);
	mov(&ts->ecx, ts->esi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x7954E0);
	mov(mv, x86::mem(ts->esi + 0x45, 1), 0x1);
	goto loc_4C2C4C;

loc_4C2C4A:
	xor_(&ts->esi, ts->esi);

loc_4C2C4C:
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xFFFFFFFF);
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));

loc_4C2C5C:
	push(mv, &ts->esp, 0x48);
	game::j__malloc(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4C2C97;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xF6601088);
	push(mv, &ts->esp, 0x12BB5EA2);
	mov(&ts->ecx, ts->esi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x7954D0);
	mov(mv, x86::mem(ts->esi + 0x45, 1), 0x1);
	goto loc_4C2C99;

loc_4C2C97:
	xor_(&ts->esi, ts->esi);

loc_4C2C99:
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xFFFFFFFF);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	cmp(mv, &ts->eflags, x86::mem(0x89E7B0, 4), 0x7);
	mov(mv, &ts->esi, x86::mem(0x850078, 4));
	if (ts->eflags.zero) {
        goto loc_4C2D18;
    }
	cmp(&ts->eflags, ts->esi, 0x8);
	if (ts->eflags.zero) {
        goto loc_4C2D18;
    }
	cmp(&ts->eflags, ts->esi, 0x200);
	if (ts->eflags.zero) {
        goto loc_4C2D18;
    }
	push(mv, &ts->esp, 0x48);
	game::j__malloc(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x2);
	if (ts->eflags.zero) {
        goto loc_4C2D00;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x80833FC2);
	push(mv, &ts->esp, 0xB295A6B6);
	mov(&ts->ecx, ts->esi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x7954E8);
	mov(mv, x86::mem(ts->esi + 0x45, 1), 0x1);
	goto loc_4C2D02;

loc_4C2D00:
	xor_(&ts->esi, ts->esi);

loc_4C2D02:
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xFFFFFFFF);
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));
	mov(mv, &ts->esi, x86::mem(0x850078, 4));

loc_4C2D18:
	cmp(&ts->eflags, ts->esi, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4C2D76;
    }
	cmp(mv, &ts->eflags, x86::mem(0x89E7B0, 4), 0x7);
	if (ts->eflags.zero) {
        goto loc_4C2D76;
    }
	push(mv, &ts->esp, 0x48);
	game::j__malloc(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4C2D5D;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xDB4E3C0D);
	push(mv, &ts->esp, 0x62AA0DF6);
	mov(&ts->ecx, ts->esi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x795520);
	mov(mv, x86::mem(ts->esi + 0x45, 1), 0x1);
	goto loc_4C2D5F;

loc_4C2D5D:
	xor_(&ts->esi, ts->esi);

loc_4C2D5F:
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	or_(&ts->ebx, 0xFFFFFFFF);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	mov(mv, &ts->esi, x86::mem(0x850078, 4));
	goto loc_4C2D79;

loc_4C2D76:
	or_(&ts->ebx, 0xFFFFFFFF);

loc_4C2D79:
	mov(&ts->ecx, ts->edi);
	game::sub_4A7BF0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4C2DCF;
    }
	push(mv, &ts->esp, 0x48);
	game::j__malloc(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x4);
	if (ts->eflags.zero) {
        goto loc_4C2DBB;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xB34993C9);
	push(mv, &ts->esp, 0x520DE4E3);
	mov(&ts->ecx, ts->esi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x795510);
	goto loc_4C2DBD;

loc_4C2DBB:
	xor_(&ts->esi, ts->esi);

loc_4C2DBD:
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));
	mov(mv, &ts->esi, x86::mem(0x850078, 4));

loc_4C2DCF:
	cmp(&ts->eflags, ts->esi, 0x4);
	if (ts->eflags.zero) {
        goto loc_4C2E24;
    }
	cmp(&ts->eflags, ts->esi, 0x8);
	if (ts->eflags.zero) {
        goto loc_4C2E29;
    }
	cmp(&ts->eflags, ts->esi, 0x200);
	if (ts->eflags.zero) {
        goto loc_4C2E24;
    }
	push(mv, &ts->esp, 0x48);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x5);
	if (ts->eflags.zero) {
        goto loc_4C2E10;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7840428A);
	push(mv, &ts->esp, 0x84D1D864);
	mov(&ts->ecx, ts->eax);
	game::sub_4C2640(ts, mv);
	goto loc_4C2E12;

loc_4C2E10:
	xor_(&ts->eax, ts->eax);

loc_4C2E12:
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	mov(mv, &ts->esi, x86::mem(0x850078, 4));

loc_4C2E24:
	cmp(&ts->eflags, ts->esi, 0x8);
	if (!ts->eflags.zero) {
        goto loc_4C2EA0;
    }

loc_4C2E29:
	push(mv, &ts->esp, 0x48);
	game::j__malloc(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x6);
	if (ts->eflags.zero) {
        goto loc_4C2E80;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFF956AF2);
	push(mv, &ts->esp, 0x4C9E34E6);
	mov(&ts->ecx, ts->esi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x795528);
	mov(mv, x86::mem(ts->esi + 0x45, 1), 0x1);
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4C2E80:
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	xor_(&ts->esi, ts->esi);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4C2EA0:
	push(mv, &ts->esp, 0x48);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->esi, 0x200);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4C2EDE;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x7);
	if (ts->eflags.zero) {
        goto loc_4C2F06;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xF39723A1);
	push(mv, &ts->esp, 0x4C9E34E6);
	mov(&ts->ecx, ts->eax);
	game::sub_4C27F0(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebx);
	goto loc_4C2FE5;

loc_4C2EDE:
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x8);
	if (ts->eflags.zero) {
        goto loc_4C2F06;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xC7E1420C);
	push(mv, &ts->esp, 0x4C9E34E6);
	mov(&ts->ecx, ts->eax);
	game::sub_4C27F0(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebx);
	goto loc_4C2FE5;

loc_4C2F06:
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebx);
	goto loc_4C2FE5;

loc_4C2F11:
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	cmp(&ts->eflags, ts->eax, 0x8);
	push(mv, &ts->esp, 0x48);
	if (!ts->eflags.zero) {
        goto loc_4C2F7A;
    }
	game::j__malloc(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x9);
	if (ts->eflags.zero) {
        goto loc_4C2F56;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFF956AF2);
	push(mv, &ts->esp, 0x4C9E34E6);
	mov(&ts->ecx, ts->esi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x795528);
	mov(mv, x86::mem(ts->esi + 0x45, 1), 0x1);
	goto loc_4C2F58;

loc_4C2F56:
	xor_(&ts->esi, ts->esi);

loc_4C2F58:
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xFFFFFFFF);
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4C2F7A:
	cmp(&ts->eflags, ts->eax, 0x200);
	if (!ts->eflags.zero) {
        goto loc_4C2FAE;
    }
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0xA);
	if (ts->eflags.zero) {
        goto loc_4C2FDB;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xF39723A1);
	push(mv, &ts->esp, 0x4C9E34E6);
	mov(&ts->ecx, ts->eax);
	game::sub_4C27F0(ts, mv);
	goto loc_4C2FDD;

loc_4C2FAE:
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0xB);
	if (ts->eflags.zero) {
        goto loc_4C2FDB;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xC7E1420C);
	push(mv, &ts->esp, 0x4C9E34E6);
	mov(&ts->ecx, ts->eax);
	game::sub_4C27F0(ts, mv);
	goto loc_4C2FDD;

loc_4C2FDB:
	xor_(&ts->eax, ts->eax);

loc_4C2FDD:
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0xFFFFFFFF);

loc_4C2FE5:
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	push(mv, &ts->esp, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_773BE0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7955C0);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773BF4:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7955B0);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773C08:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7955A0);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773C1C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x795588);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773C30:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x795550);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773C44:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x795544);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773C58:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x795530);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773C6C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x795530);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773C80:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x795530);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773C94:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x795530);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773CA8:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x795530);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773CBC:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x795530);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4C2BD0:
	mov(&ts->eax, 0x7DFD64);
	goto ___CxxFrameHandler;
}

void sub_4C3000(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x773D30);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1D7BB6C9);
	push(mv, &ts->esp, 0x78FC4C);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x933DD695);
	push(mv, &ts->esp, 0x7955E4);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x8202C364);
	push(mv, &ts->esp, 0x7955D4);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	push(mv, &ts->esp, 0x48);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0xC);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4C30BE;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xE76CD783);
	push(mv, &ts->esp, 0xF37AF144);
	mov(&ts->ecx, ts->edi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7918B8);
	goto loc_4C30C0;

loc_4C30BE:
	xor_(&ts->edi, ts->edi);

loc_4C30C0:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	or_(&ts->ebx, 0xFFFFFFFF);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));
	push(mv, &ts->esp, 0x48);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4C3106;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x4204D527);
	push(mv, &ts->esp, 0x8A006328);
	mov(&ts->ecx, ts->edi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7918C0);
	goto loc_4C3108;

loc_4C3106:
	xor_(&ts->edi, ts->edi);

loc_4C3108:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	push(mv, &ts->esp, 0x48);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x2);
	if (ts->eflags.zero) {
        goto loc_4C314B;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xD0CF6EE1);
	push(mv, &ts->esp, 0x4DF98FB2);
	mov(&ts->ecx, ts->edi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7918C8);
	goto loc_4C314D;

loc_4C314B:
	xor_(&ts->edi, ts->edi);

loc_4C314D:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));
	push(mv, &ts->esp, 0x48);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x3);
	if (ts->eflags.zero) {
        goto loc_4C3190;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xF760EABE);
	push(mv, &ts->esp, 0xD708EFEF);
	mov(&ts->ecx, ts->edi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7918D0);
	goto loc_4C3192;

loc_4C3190:
	xor_(&ts->edi, ts->edi);

loc_4C3192:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4C, 4));
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50B8A0(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->ebx + 0x20, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_773CE0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x793E44);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773CF4:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x793E38);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773D08:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x793E2C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773D1C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x793E20);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4C3000:
	mov(&ts->eax, 0x7DFDA0);
	goto ___CxxFrameHandler;
}

void sub_4C31D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	cmp(&ts->eflags, ts->eax, 0x9120409E);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4C31EE;
    }
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_4C32CB;
    }

loc_4C31EE:
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x20, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(0x8900AC, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4C3209;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x8, 4));
	goto loc_4C320C;

loc_4C3209:
	or_(&ts->eax, 0xFFFFFFFF);

loc_4C320C:
	cmp(&ts->eflags, ts->esi, ts->eax);
	mov(mv, &ts->ebp, x86::mem(0x8900B0, 4));
	if (!ts->eflags.zero) {
        goto loc_4C321A;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_4C322F;

loc_4C321A:
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_4C3223;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	goto loc_4C3226;

loc_4C3223:
	or_(&ts->eax, 0xFFFFFFFF);

loc_4C3226:
	xor_(&ts->edx, ts->edx);
	cmp(&ts->eflags, ts->esi, ts->eax);
	setz(ts->eflags, &ts->dl);
	mov(&ts->eax, ts->edx);

loc_4C322F:
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*4), 4));
	movzx(mv, &ts->edx, x86::mem(0x83AA7A, 1));
	test(&ts->eflags, ts->edx, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_4C3245;
    }
	mov(&ts->edx, 0x1);
	goto loc_4C324C;

loc_4C3245:
	cmp(&ts->eflags, ts->edx, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4C324C;
    }
	xor_(&ts->edx, ts->edx);

loc_4C324C:
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4C3255;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x8, 4));
	goto loc_4C3258;

loc_4C3255:
	or_(&ts->eax, 0xFFFFFFFF);

loc_4C3258:
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4C3260;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_4C3279;

loc_4C3260:
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_4C3269;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	goto loc_4C326C;

loc_4C3269:
	or_(&ts->eax, 0xFFFFFFFF);

loc_4C326C:
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->esi, ts->eax);
	setz(ts->eflags, &ts->bl);
	mov(&ts->eax, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x10, 4));

loc_4C3279:
	test(&ts->eflags, ts->edi, ts->edi);
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*4), 4));
	mov(mv, x86::mem(0x83AA7A, 1), ts->dl);
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x20, 4));
	if (ts->eflags.zero) {
        goto loc_4C328F;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x8, 4));
	goto loc_4C3292;

loc_4C328F:
	or_(&ts->eax, 0xFFFFFFFF);

loc_4C3292:
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4C329A;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_4C32B3;

loc_4C329A:
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_4C32A3;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	goto loc_4C32A6;

loc_4C32A3:
	or_(&ts->eax, 0xFFFFFFFF);

loc_4C32A6:
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	setz(ts->eflags, &ts->bl);
	mov(&ts->eax, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x10, 4));

loc_4C32B3:
	mov(mv, &ts->ecx, x86::mem(0x8650B8, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x2);
	game::sub_578EF0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);

loc_4C32CB:
	mov(mv, &ts->edx, x86::mem(ts->ebx, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	call(ts, mv, x86::mem(ts->edx + 0x40, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx, 4));
	mov(&ts->ecx, ts->ebx);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x8);
}

void sub_4C32E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0xDF06ED22);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8900AC, 4));
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x20, 4));
	add(&ts->esp, 0x8);
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C330E;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	goto loc_4C3311;

loc_4C330E:
	or_(&ts->eax, 0xFFFFFFFF);

loc_4C3311:
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4C3319;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_4C3333;

loc_4C3319:
	mov(mv, &ts->eax, x86::mem(0x8900B0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C3327;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	goto loc_4C332A;

loc_4C3327:
	or_(&ts->eax, 0xFFFFFFFF);

loc_4C332A:
	xor_(&ts->edx, ts->edx);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	setz(ts->eflags, &ts->dl);
	mov(&ts->eax, ts->edx);

loc_4C3333:
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*4), 4));
	movzx(mv, &ts->eax, x86::mem(0x83AA7A, 1));
	sub(&ts->eax, 0x0);
	if (ts->eflags.zero) {
        goto loc_4C335B;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4C3360;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	mov(&ts->edi, 0xCCFA);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4C335B:
	mov(&ts->edi, 0x63C);

loc_4C3360:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4C3370(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x773DCC);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1D7BB6C9);
	push(mv, &ts->esp, 0x78FC4C);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x737D1B97);
	push(mv, &ts->esp, 0x795640);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x933DD695);
	push(mv, &ts->esp, 0x7955E4);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x8202C364);
	push(mv, &ts->esp, 0x7955D4);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	push(mv, &ts->esp, 0x98);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0xC);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4C3468;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E840(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7918F8);
	goto loc_4C346A;

loc_4C3468:
	xor_(&ts->edi, ts->edi);

loc_4C346A:
	push(mv, &ts->esp, 0x1);
	or_(&ts->ebx, 0xFFFFFFFF);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebx);
	game::sub_54F800(ts, mv);
	push(mv, &ts->esp, 0x98);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4C34C7;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E840(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x791A88);
	goto loc_4C34C9;

loc_4C34C7:
	xor_(&ts->edi, ts->edi);

loc_4C34C9:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebx);
	game::sub_54F800(ts, mv);
	push(mv, &ts->esp, 0x98);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x2);
	if (ts->eflags.zero) {
        goto loc_4C3523;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E840(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x791AD8);
	goto loc_4C3525;

loc_4C3523:
	xor_(&ts->edi, ts->edi);

loc_4C3525:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebx);
	game::sub_54F800(ts, mv);
	push(mv, &ts->esp, 0x98);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x3);
	if (ts->eflags.zero) {
        goto loc_4C357F;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E840(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x791A38);
	goto loc_4C3581;

loc_4C357F:
	xor_(&ts->edi, ts->edi);

loc_4C3581:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebx);
	game::sub_54F800(ts, mv);
	push(mv, &ts->esp, 0x98);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x4);
	if (ts->eflags.zero) {
        goto loc_4C35DB;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E840(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x791948);
	goto loc_4C35DD;

loc_4C35DB:
	xor_(&ts->edi, ts->edi);

loc_4C35DD:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebx);
	game::sub_54F800(ts, mv);
	push(mv, &ts->esp, 0x98);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x5);
	if (ts->eflags.zero) {
        goto loc_4C3637;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E840(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x791998);
	goto loc_4C3639;

loc_4C3637:
	xor_(&ts->edi, ts->edi);

loc_4C3639:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebx);
	game::sub_54F800(ts, mv);
	push(mv, &ts->esp, 0x98);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x6);
	if (ts->eflags.zero) {
        goto loc_4C3693;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E840(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7919E8);
	goto loc_4C3695;

loc_4C3693:
	xor_(&ts->edi, ts->edi);

loc_4C3695:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebx);
	game::sub_54F800(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_773D40:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x794028);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773D54:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x794018);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773D68:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x794008);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773D7C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x793FFC);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773D90:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x793FEC);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773DA4:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x795634);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773DB8:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x793FD4);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4C3370:
	mov(&ts->eax, 0x7DFDF4);
	goto ___CxxFrameHandler;
}

void sub_4C36C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x773E30);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1D7BB6C9);
	push(mv, &ts->esp, 0x78FC4C);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0xEF1BB23B);
	push(mv, &ts->esp, 0x795640);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x933DD695);
	push(mv, &ts->esp, 0x7955E4);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x8202C364);
	push(mv, &ts->esp, 0x7955D4);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0xC);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4C37B7;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x791F30);
	mov(&ts->ebx, ts->edi);
	goto loc_4C37B9;

loc_4C37B7:
	xor_(&ts->ebx, ts->ebx);

loc_4C37B9:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::sub_54EF30(ts, mv);
	push(mv, &ts->esp, 0x9C);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4C3821;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E840(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x791F78);
	mov(mv, x86::mem(ts->edi + 0x98, 4), 0x0);
	goto loc_4C3823;

loc_4C3821:
	xor_(&ts->edi, ts->edi);

loc_4C3823:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::sub_54F410(ts, mv);
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->edi + 0x98, 4), ts->ebx);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x2);
	if (ts->eflags.zero) {
        goto loc_4C3876;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x792060);
	goto loc_4C3878;

loc_4C3876:
	xor_(&ts->edi, ts->edi);

loc_4C3878:
	or_(&ts->ebx, 0xFFFFFFFF);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	game::sub_54EE40(ts, mv);
	push(mv, &ts->esp, 0x38);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x3);
	if (ts->eflags.zero) {
        goto loc_4C38C2;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7920A0);
	goto loc_4C38C4;

loc_4C38C2:
	xor_(&ts->edi, ts->edi);

loc_4C38C4:
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	game::sub_54EE40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_773DE0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x794074);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773DF4:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x794060);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773E08:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x794048);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773E1C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x794034);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4C36C0:
	mov(&ts->eax, 0x7DF76C);
	goto ___CxxFrameHandler;
}

void sub_4C38F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x773ECC);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->al, x86::mem(0x844AD8, 1));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->esi + 0x159, 1), ts->al);
	mov(mv, &ts->cl, x86::mem(0x844AD9, 1));
	push(mv, &ts->esp, 0x1D7BB6C9);
	push(mv, &ts->esp, 0x78FC4C);
	mov(mv, x86::mem(ts->esi + 0x15A, 1), ts->cl);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0xE8647E75);
	push(mv, &ts->esp, 0x795640);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x933DD695);
	push(mv, &ts->esp, 0x7955E4);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x8202C364);
	push(mv, &ts->esp, 0x7955D4);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->ecx, 0x85AD40);
	game::sub_500B60(ts, mv);
	or_(&ts->ebx, 0xFFFFFFFF);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4C3A20;
    }
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4C3A10;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x791D20);
	goto loc_4C3A12;

loc_4C3A10:
	xor_(&ts->edi, ts->edi);

loc_4C3A12:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebx);
	game::sub_54EF30(ts, mv);

loc_4C3A20:
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4C3A69;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x791C00);
	goto loc_4C3A6B;

loc_4C3A69:
	xor_(&ts->edi, ts->edi);

loc_4C3A6B:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebx);
	game::sub_54F170(ts, mv);
	mov(&ts->ecx, 0x83AAB4);
	game::sub_5026F0(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_4C3AE1;
    }
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x2);
	if (ts->eflags.zero) {
        goto loc_4C3AD1;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x791C48);
	goto loc_4C3AD3;

loc_4C3AD1:
	xor_(&ts->edi, ts->edi);

loc_4C3AD3:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebx);
	game::sub_54F170(ts, mv);

loc_4C3AE1:
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x3);
	if (ts->eflags.zero) {
        goto loc_4C3B2A;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x791C90);
	goto loc_4C3B2C;

loc_4C3B2A:
	xor_(&ts->edi, ts->edi);

loc_4C3B2C:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebx);
	game::sub_54F170(ts, mv);
	mov(&ts->ecx, 0x83AAB4);
	game::sub_5026F0(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_4C3BA2;
    }
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x4);
	if (ts->eflags.zero) {
        goto loc_4C3B92;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x791D68);
	goto loc_4C3B94;

loc_4C3B92:
	xor_(&ts->edi, ts->edi);

loc_4C3B94:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebx);
	game::sub_54F170(ts, mv);

loc_4C3BA2:
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x5);
	if (ts->eflags.zero) {
        goto loc_4C3BEB;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x791CD8);
	goto loc_4C3BED;

loc_4C3BEB:
	xor_(&ts->edi, ts->edi);

loc_4C3BED:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebx);
	game::sub_54F170(ts, mv);
	push(mv, &ts->esp, 0x58);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x6);
	if (ts->eflags.zero) {
        goto loc_4C3C44;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x793D68);
	goto loc_4C3C46;

loc_4C3C44:
	xor_(&ts->edi, ts->edi);

loc_4C3C46:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebx);
	game::sub_54F170(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_773E40:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7940B4);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773E54:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7940E4);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773E68:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7940D8);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773E7C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7940C8);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773E90:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7940A0);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773EA4:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x794090);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773EB8:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x795650);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4C38F0:
	mov(&ts->eax, 0x7DFE48);
	goto ___CxxFrameHandler;
}

void sub_4C3C70(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	cmp(&ts->eflags, ts->eax, 0x9120409E);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4C3C8E;
    }
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_4C3D6B;
    }

loc_4C3C8E:
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x20, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(0x8900AC, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4C3CA9;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x8, 4));
	goto loc_4C3CAC;

loc_4C3CA9:
	or_(&ts->eax, 0xFFFFFFFF);

loc_4C3CAC:
	cmp(&ts->eflags, ts->esi, ts->eax);
	mov(mv, &ts->ebp, x86::mem(0x8900B0, 4));
	if (!ts->eflags.zero) {
        goto loc_4C3CBA;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_4C3CCF;

loc_4C3CBA:
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_4C3CC3;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	goto loc_4C3CC6;

loc_4C3CC3:
	or_(&ts->eax, 0xFFFFFFFF);

loc_4C3CC6:
	xor_(&ts->edx, ts->edx);
	cmp(&ts->eflags, ts->esi, ts->eax);
	setz(ts->eflags, &ts->dl);
	mov(&ts->eax, ts->edx);

loc_4C3CCF:
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*4), 4));
	movzx(mv, &ts->edx, x86::mem(0x83AA79, 1));
	test(&ts->eflags, ts->edx, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_4C3CE5;
    }
	mov(&ts->edx, 0x1);
	goto loc_4C3CEC;

loc_4C3CE5:
	cmp(&ts->eflags, ts->edx, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4C3CEC;
    }
	xor_(&ts->edx, ts->edx);

loc_4C3CEC:
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4C3CF5;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x8, 4));
	goto loc_4C3CF8;

loc_4C3CF5:
	or_(&ts->eax, 0xFFFFFFFF);

loc_4C3CF8:
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4C3D00;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_4C3D19;

loc_4C3D00:
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_4C3D09;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	goto loc_4C3D0C;

loc_4C3D09:
	or_(&ts->eax, 0xFFFFFFFF);

loc_4C3D0C:
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->esi, ts->eax);
	setz(ts->eflags, &ts->bl);
	mov(&ts->eax, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x10, 4));

loc_4C3D19:
	test(&ts->eflags, ts->edi, ts->edi);
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*4), 4));
	mov(mv, x86::mem(0x83AA79, 1), ts->dl);
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x20, 4));
	if (ts->eflags.zero) {
        goto loc_4C3D2F;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x8, 4));
	goto loc_4C3D32;

loc_4C3D2F:
	or_(&ts->eax, 0xFFFFFFFF);

loc_4C3D32:
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4C3D3A;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_4C3D53;

loc_4C3D3A:
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_4C3D43;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	goto loc_4C3D46;

loc_4C3D43:
	or_(&ts->eax, 0xFFFFFFFF);

loc_4C3D46:
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	setz(ts->eflags, &ts->bl);
	mov(&ts->eax, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x10, 4));

loc_4C3D53:
	mov(mv, &ts->ecx, x86::mem(0x8650B8, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1);
	game::sub_578EF0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);

loc_4C3D6B:
	mov(mv, &ts->edx, x86::mem(ts->ebx, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	call(ts, mv, x86::mem(ts->edx + 0x40, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx, 4));
	mov(&ts->ecx, ts->ebx);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x8);
}

void sub_4C3D80(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0xD31407E7);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8900AC, 4));
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x20, 4));
	add(&ts->esp, 0x8);
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C3DAE;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	goto loc_4C3DB1;

loc_4C3DAE:
	or_(&ts->eax, 0xFFFFFFFF);

loc_4C3DB1:
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4C3DB9;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_4C3DD3;

loc_4C3DB9:
	mov(mv, &ts->eax, x86::mem(0x8900B0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C3DC7;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	goto loc_4C3DCA;

loc_4C3DC7:
	or_(&ts->eax, 0xFFFFFFFF);

loc_4C3DCA:
	xor_(&ts->edx, ts->edx);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	setz(ts->eflags, &ts->dl);
	mov(&ts->eax, ts->edx);

loc_4C3DD3:
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*4), 4));
	movzx(mv, &ts->eax, x86::mem(0x83AA79, 1));
	sub(&ts->eax, 0x0);
	if (ts->eflags.zero) {
        goto loc_4C3DFB;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4C3E00;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	mov(&ts->edi, 0x1B3A2485);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4C3DFB:
	mov(&ts->edi, 0x61CB0720);

loc_4C3E00:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4C3E10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	cmp(&ts->eflags, ts->edi, 0x9120409E);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4C3E24;
    }
	push(mv, &ts->esp, 0xFFFFFFFF);
	goto loc_4C3E2E;

loc_4C3E24:
	cmp(&ts->eflags, ts->edi, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_4C3E3F;
    }
	push(mv, &ts->esp, 0x1);

loc_4C3E2E:
	game::sub_4A7AE0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8900AC, 4));
	game::sub_5F2FA0(ts, mv);

loc_4C3E3F:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x40, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4C3E60(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x2C, 4));
	push(mv, &ts->esp, 0xF6CCDC5F);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8900AC, 4));
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x20, 4));
	add(&ts->esp, 0x8);
	xor_(&ts->esi, ts->esi);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C3E8E;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	goto loc_4C3E91;

loc_4C3E8E:
	or_(&ts->eax, 0xFFFFFFFF);

loc_4C3E91:
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4C3E99;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_4C3EB3;

loc_4C3E99:
	mov(mv, &ts->eax, x86::mem(0x8900B0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C3EA7;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	goto loc_4C3EAA;

loc_4C3EA7:
	or_(&ts->eax, 0xFFFFFFFF);

loc_4C3EAA:
	xor_(&ts->edx, ts->edx);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	setz(ts->eflags, &ts->dl);
	mov(&ts->eax, ts->edx);

loc_4C3EB3:
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*4), 4));
	mov(mv, &ts->eax, x86::mem(0x83AA74, 4));
	cmp(&ts->eflags, ts->eax, 0x4);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4C3EC2;
    }
	jmp(x86::mem(0x4C3F34, 4));

loc_4C3EC9:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x30, 4));
	mov(&ts->esi, 0x1EA4CEC2);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4C3EDE:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x30, 4));
	mov(&ts->esi, 0x5AE3441F);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4C3EF3:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x30, 4));
	mov(&ts->esi, 0x414F19D7);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4C3F08:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x30, 4));
	mov(&ts->esi, 0xC3E9AE58);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4C3F1D:
	mov(&ts->esi, 0x916039B4);

def_4C3EC2:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x30, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4C3F50(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0x9120409E);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4C3F69;
    }
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_4C3FF2;
    }

loc_4C3F69:
	mov(mv, &ts->eax, x86::mem(0x8900D8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x20, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(0x8900AC, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4C3F83;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	goto loc_4C3F86;

loc_4C3F83:
	or_(&ts->eax, 0xFFFFFFFF);

loc_4C3F86:
	cmp(&ts->eflags, ts->ecx, ts->eax);
	mov(mv, &ts->ebp, x86::mem(0x8900B0, 4));
	if (!ts->eflags.zero) {
        goto loc_4C3F94;
    }
	xor_(&ts->edi, ts->edi);
	goto loc_4C3FA9;

loc_4C3F94:
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_4C3F9D;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	goto loc_4C3FA0;

loc_4C3F9D:
	or_(&ts->eax, 0xFFFFFFFF);

loc_4C3FA0:
	xor_(&ts->edx, ts->edx);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	setz(ts->eflags, &ts->dl);
	mov(&ts->edi, ts->edx);

loc_4C3FA9:
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4C3FB2;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	goto loc_4C3FB5;

loc_4C3FB2:
	or_(&ts->eax, 0xFFFFFFFF);

loc_4C3FB5:
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4C3FBD;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_4C3FD2;

loc_4C3FBD:
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_4C3FC6;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	goto loc_4C3FC9;

loc_4C3FC6:
	or_(&ts->eax, 0xFFFFFFFF);

loc_4C3FC9:
	xor_(&ts->edx, ts->edx);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	setz(ts->eflags, &ts->dl);
	mov(&ts->eax, ts->edx);

loc_4C3FD2:
	lea(mv, &ts->ecx, x86::mem(ts->edi + (ts->edi*4), 4));
	mov(mv, &ts->dl, x86::mem(0x83AA64, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	pop(mv, &ts->esp, ts->edi);
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*4), 4));
	setz(ts->eflags, &ts->dl);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x83AA64, 1), ts->dl);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	pop(mv, &ts->esp, ts->ebp);

loc_4C3FF2:
	mov(mv, &ts->edx, x86::mem(ts->ebx, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	call(ts, mv, x86::mem(ts->edx + 0x40, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx, 4));
	mov(&ts->ecx, ts->ebx);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x8);
}

void sub_4C4010(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0xAC148579);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8900AC, 4));
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x20, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C403B;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	goto loc_4C403E;

loc_4C403B:
	or_(&ts->eax, 0xFFFFFFFF);

loc_4C403E:
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4C4046;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_4C4060;

loc_4C4046:
	mov(mv, &ts->eax, x86::mem(0x8900B0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C4054;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	goto loc_4C4057;

loc_4C4054:
	or_(&ts->eax, 0xFFFFFFFF);

loc_4C4057:
	xor_(&ts->edx, ts->edx);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	setz(ts->eflags, &ts->dl);
	mov(&ts->eax, ts->edx);

loc_4C4060:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*4), 4));
	mov(mv, &ts->al, x86::mem(0x83AA64, 1));
	neg(&ts->al);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0xFFFF3942);
	add(&ts->eax, 0xCCFA);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4C4090(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0x9120409E);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4C40A9;
    }
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_4C4132;
    }

loc_4C40A9:
	mov(mv, &ts->eax, x86::mem(0x8900D8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x20, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(0x8900AC, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4C40C3;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	goto loc_4C40C6;

loc_4C40C3:
	or_(&ts->eax, 0xFFFFFFFF);

loc_4C40C6:
	cmp(&ts->eflags, ts->ecx, ts->eax);
	mov(mv, &ts->ebp, x86::mem(0x8900B0, 4));
	if (!ts->eflags.zero) {
        goto loc_4C40D4;
    }
	xor_(&ts->edi, ts->edi);
	goto loc_4C40E9;

loc_4C40D4:
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_4C40DD;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	goto loc_4C40E0;

loc_4C40DD:
	or_(&ts->eax, 0xFFFFFFFF);

loc_4C40E0:
	xor_(&ts->edx, ts->edx);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	setz(ts->eflags, &ts->dl);
	mov(&ts->edi, ts->edx);

loc_4C40E9:
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4C40F2;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	goto loc_4C40F5;

loc_4C40F2:
	or_(&ts->eax, 0xFFFFFFFF);

loc_4C40F5:
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4C40FD;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_4C4112;

loc_4C40FD:
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_4C4106;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	goto loc_4C4109;

loc_4C4106:
	or_(&ts->eax, 0xFFFFFFFF);

loc_4C4109:
	xor_(&ts->edx, ts->edx);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	setz(ts->eflags, &ts->dl);
	mov(&ts->eax, ts->edx);

loc_4C4112:
	lea(mv, &ts->ecx, x86::mem(ts->edi + (ts->edi*4), 4));
	mov(mv, &ts->dl, x86::mem(0x83AA65, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	pop(mv, &ts->esp, ts->edi);
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*4), 4));
	setz(ts->eflags, &ts->dl);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x83AA65, 1), ts->dl);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	pop(mv, &ts->esp, ts->ebp);

loc_4C4132:
	mov(mv, &ts->edx, x86::mem(ts->ebx, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	call(ts, mv, x86::mem(ts->edx + 0x40, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx, 4));
	mov(&ts->ecx, ts->ebx);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x8);
}

void sub_4C4150(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0x82CD8F92);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8900AC, 4));
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x20, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C417B;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	goto loc_4C417E;

loc_4C417B:
	or_(&ts->eax, 0xFFFFFFFF);

loc_4C417E:
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4C4186;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_4C41A0;

loc_4C4186:
	mov(mv, &ts->eax, x86::mem(0x8900B0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C4194;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	goto loc_4C4197;

loc_4C4194:
	or_(&ts->eax, 0xFFFFFFFF);

loc_4C4197:
	xor_(&ts->edx, ts->edx);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	setz(ts->eflags, &ts->dl);
	mov(&ts->eax, ts->edx);

loc_4C41A0:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*4), 4));
	mov(mv, &ts->al, x86::mem(0x83AA65, 1));
	neg(&ts->al);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0xFFFF3942);
	add(&ts->eax, 0xCCFA);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4C41D0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0x9120409E);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4C41E9;
    }
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_4C4272;
    }

loc_4C41E9:
	mov(mv, &ts->eax, x86::mem(0x8900D8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x20, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(0x8900AC, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4C4203;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	goto loc_4C4206;

loc_4C4203:
	or_(&ts->eax, 0xFFFFFFFF);

loc_4C4206:
	cmp(&ts->eflags, ts->ecx, ts->eax);
	mov(mv, &ts->ebp, x86::mem(0x8900B0, 4));
	if (!ts->eflags.zero) {
        goto loc_4C4214;
    }
	xor_(&ts->edi, ts->edi);
	goto loc_4C4229;

loc_4C4214:
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_4C421D;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	goto loc_4C4220;

loc_4C421D:
	or_(&ts->eax, 0xFFFFFFFF);

loc_4C4220:
	xor_(&ts->edx, ts->edx);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	setz(ts->eflags, &ts->dl);
	mov(&ts->edi, ts->edx);

loc_4C4229:
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4C4232;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	goto loc_4C4235;

loc_4C4232:
	or_(&ts->eax, 0xFFFFFFFF);

loc_4C4235:
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4C423D;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_4C4252;

loc_4C423D:
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_4C4246;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	goto loc_4C4249;

loc_4C4246:
	or_(&ts->eax, 0xFFFFFFFF);

loc_4C4249:
	xor_(&ts->edx, ts->edx);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	setz(ts->eflags, &ts->dl);
	mov(&ts->eax, ts->edx);

loc_4C4252:
	lea(mv, &ts->ecx, x86::mem(ts->edi + (ts->edi*4), 4));
	mov(mv, &ts->dl, x86::mem(0x83AA66, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	pop(mv, &ts->esp, ts->edi);
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*4), 4));
	setz(ts->eflags, &ts->dl);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x83AA66, 1), ts->dl);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	pop(mv, &ts->esp, ts->ebp);

loc_4C4272:
	mov(mv, &ts->edx, x86::mem(ts->ebx, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	call(ts, mv, x86::mem(ts->edx + 0x40, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx, 4));
	mov(&ts->ecx, ts->ebx);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x8);
}

void sub_4C4290(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0x969F96A5);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8900AC, 4));
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x20, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C42BB;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	goto loc_4C42BE;

loc_4C42BB:
	or_(&ts->eax, 0xFFFFFFFF);

loc_4C42BE:
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4C42C6;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_4C42E0;

loc_4C42C6:
	mov(mv, &ts->eax, x86::mem(0x8900B0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C42D4;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	goto loc_4C42D7;

loc_4C42D4:
	or_(&ts->eax, 0xFFFFFFFF);

loc_4C42D7:
	xor_(&ts->edx, ts->edx);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	setz(ts->eflags, &ts->dl);
	mov(&ts->eax, ts->edx);

loc_4C42E0:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*4), 4));
	mov(mv, &ts->al, x86::mem(0x83AA66, 1));
	neg(&ts->al);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0xFFFF3942);
	add(&ts->eax, 0xCCFA);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4C4310(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0x9120409E);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4C4329;
    }
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_4C43B2;
    }

loc_4C4329:
	mov(mv, &ts->eax, x86::mem(0x8900D8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x20, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(0x8900AC, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4C4343;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	goto loc_4C4346;

loc_4C4343:
	or_(&ts->eax, 0xFFFFFFFF);

loc_4C4346:
	cmp(&ts->eflags, ts->ecx, ts->eax);
	mov(mv, &ts->ebp, x86::mem(0x8900B0, 4));
	if (!ts->eflags.zero) {
        goto loc_4C4354;
    }
	xor_(&ts->edi, ts->edi);
	goto loc_4C4369;

loc_4C4354:
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_4C435D;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	goto loc_4C4360;

loc_4C435D:
	or_(&ts->eax, 0xFFFFFFFF);

loc_4C4360:
	xor_(&ts->edx, ts->edx);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	setz(ts->eflags, &ts->dl);
	mov(&ts->edi, ts->edx);

loc_4C4369:
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4C4372;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	goto loc_4C4375;

loc_4C4372:
	or_(&ts->eax, 0xFFFFFFFF);

loc_4C4375:
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4C437D;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_4C4392;

loc_4C437D:
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_4C4386;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	goto loc_4C4389;

loc_4C4386:
	or_(&ts->eax, 0xFFFFFFFF);

loc_4C4389:
	xor_(&ts->edx, ts->edx);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	setz(ts->eflags, &ts->dl);
	mov(&ts->eax, ts->edx);

loc_4C4392:
	lea(mv, &ts->ecx, x86::mem(ts->edi + (ts->edi*4), 4));
	mov(mv, &ts->dl, x86::mem(0x83AA67, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	pop(mv, &ts->esp, ts->edi);
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*4), 4));
	setz(ts->eflags, &ts->dl);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x83AA67, 1), ts->dl);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	pop(mv, &ts->esp, ts->ebp);

loc_4C43B2:
	mov(mv, &ts->edx, x86::mem(ts->ebx, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	call(ts, mv, x86::mem(ts->edx + 0x40, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx, 4));
	mov(&ts->ecx, ts->ebx);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x8);
}

void sub_4C43D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0xC03F9F19);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8900AC, 4));
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x20, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C43FB;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	goto loc_4C43FE;

loc_4C43FB:
	or_(&ts->eax, 0xFFFFFFFF);

loc_4C43FE:
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4C4406;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_4C4420;

loc_4C4406:
	mov(mv, &ts->eax, x86::mem(0x8900B0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C4414;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	goto loc_4C4417;

loc_4C4414:
	or_(&ts->eax, 0xFFFFFFFF);

loc_4C4417:
	xor_(&ts->edx, ts->edx);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	setz(ts->eflags, &ts->dl);
	mov(&ts->eax, ts->edx);

loc_4C4420:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*4), 4));
	mov(mv, &ts->al, x86::mem(0x83AA67, 1));
	neg(&ts->al);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0xFFFF3942);
	add(&ts->eax, 0xCCFA);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4C4450(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(0x8900AC, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	mov(mv, &ts->eax, x86::mem(0x8900D8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x20, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4C446D;
    }
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x8, 4));
	goto loc_4C4470;

loc_4C446D:
	or_(&ts->eax, 0xFFFFFFFF);

loc_4C4470:
	cmp(&ts->eflags, ts->esi, ts->eax);
	mov(mv, &ts->ebx, x86::mem(0x8900B0, 4));
	if (!ts->eflags.zero) {
        goto loc_4C447E;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_4C4493;

loc_4C447E:
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4C4487;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x8, 4));
	goto loc_4C448A;

loc_4C4487:
	or_(&ts->eax, 0xFFFFFFFF);

loc_4C448A:
	xor_(&ts->ecx, ts->ecx);
	cmp(&ts->eflags, ts->esi, ts->eax);
	setz(ts->eflags, &ts->cl);
	mov(&ts->eax, ts->ecx);

loc_4C4493:
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x18, 4));
	cmp(&ts->eflags, ts->ebp, 0x9120409E);
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*4), 4));
	movzx(mv, &ts->ecx, x86::mem(0x83AA78, 1));
	if (!ts->eflags.zero) {
        goto loc_4C44B4;
    }
	dec(&ts->ecx);
	if (!ts->eflags.sign) {
        goto loc_4C44C4;
    }
	mov(&ts->ecx, 0x4);
	goto loc_4C44C4;

loc_4C44B4:
	cmp(&ts->eflags, ts->ebp, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_4C44C4;
    }
	inc(&ts->ecx);
	cmp(&ts->eflags, ts->ecx, 0x4);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4C44C4;
    }
	xor_(&ts->ecx, ts->ecx);

loc_4C44C4:
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_4C44CD;
    }
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x8, 4));
	goto loc_4C44D0;

loc_4C44CD:
	or_(&ts->eax, 0xFFFFFFFF);

loc_4C44D0:
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4C44D8;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_4C44ED;

loc_4C44D8:
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4C44E1;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x8, 4));
	goto loc_4C44E4;

loc_4C44E1:
	or_(&ts->eax, 0xFFFFFFFF);

loc_4C44E4:
	xor_(&ts->edx, ts->edx);
	cmp(&ts->eflags, ts->esi, ts->eax);
	setz(ts->eflags, &ts->dl);
	mov(&ts->eax, ts->edx);

loc_4C44ED:
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*4), 4));
	mov(mv, x86::mem(0x83AA78, 1), ts->cl);
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x40, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x8);
}

void sub_4C4510(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x2C, 4));
	push(mv, &ts->esp, 0x84BC378);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8900AC, 4));
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x20, 4));
	add(&ts->esp, 0x8);
	xor_(&ts->esi, ts->esi);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C453E;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	goto loc_4C4541;

loc_4C453E:
	or_(&ts->eax, 0xFFFFFFFF);

loc_4C4541:
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4C4549;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_4C4563;

loc_4C4549:
	mov(mv, &ts->eax, x86::mem(0x8900B0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C4557;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	goto loc_4C455A;

loc_4C4557:
	or_(&ts->eax, 0xFFFFFFFF);

loc_4C455A:
	xor_(&ts->edx, ts->edx);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	setz(ts->eflags, &ts->dl);
	mov(&ts->eax, ts->edx);

loc_4C4563:
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*4), 4));
	movzx(mv, &ts->eax, x86::mem(0x83AA78, 1));
	cmp(&ts->eflags, ts->eax, 0x4);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4C4573;
    }
	jmp(x86::mem(0x4C45E4, 4));

loc_4C457A:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x30, 4));
	mov(&ts->esi, 0xD93F8F55);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4C458F:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x30, 4));
	mov(&ts->esi, 0xC44D3943);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4C45A4:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x30, 4));
	mov(&ts->esi, 0x17FAFC32);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4C45B9:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x30, 4));
	mov(&ts->esi, 0x1EA459F8);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4C45CE:
	mov(&ts->esi, 0xCCFA);

def_4C4573:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x30, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4C4600(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0x9120409E);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4C4619;
    }
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_4C46A2;
    }

loc_4C4619:
	mov(mv, &ts->eax, x86::mem(0x8900D8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x20, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(0x8900AC, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4C4633;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	goto loc_4C4636;

loc_4C4633:
	or_(&ts->eax, 0xFFFFFFFF);

loc_4C4636:
	cmp(&ts->eflags, ts->ecx, ts->eax);
	mov(mv, &ts->ebp, x86::mem(0x8900B0, 4));
	if (!ts->eflags.zero) {
        goto loc_4C4644;
    }
	xor_(&ts->edi, ts->edi);
	goto loc_4C4659;

loc_4C4644:
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_4C464D;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	goto loc_4C4650;

loc_4C464D:
	or_(&ts->eax, 0xFFFFFFFF);

loc_4C4650:
	xor_(&ts->edx, ts->edx);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	setz(ts->eflags, &ts->dl);
	mov(&ts->edi, ts->edx);

loc_4C4659:
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4C4662;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	goto loc_4C4665;

loc_4C4662:
	or_(&ts->eax, 0xFFFFFFFF);

loc_4C4665:
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4C466D;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_4C4682;

loc_4C466D:
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_4C4676;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	goto loc_4C4679;

loc_4C4676:
	or_(&ts->eax, 0xFFFFFFFF);

loc_4C4679:
	xor_(&ts->edx, ts->edx);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	setz(ts->eflags, &ts->dl);
	mov(&ts->eax, ts->edx);

loc_4C4682:
	lea(mv, &ts->ecx, x86::mem(ts->edi + (ts->edi*4), 4));
	mov(mv, &ts->dl, x86::mem(0x83AA69, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	pop(mv, &ts->esp, ts->edi);
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*4), 4));
	setz(ts->eflags, &ts->dl);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x83AA69, 1), ts->dl);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	pop(mv, &ts->esp, ts->ebp);

loc_4C46A2:
	mov(mv, &ts->edx, x86::mem(ts->ebx, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	call(ts, mv, x86::mem(ts->edx + 0x40, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx, 4));
	mov(&ts->ecx, ts->ebx);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x8);
}

void sub_4C46C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0xC93FBFB5);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8900AC, 4));
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x20, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C46EB;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	goto loc_4C46EE;

loc_4C46EB:
	or_(&ts->eax, 0xFFFFFFFF);

loc_4C46EE:
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4C46F6;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_4C4710;

loc_4C46F6:
	mov(mv, &ts->eax, x86::mem(0x8900B0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C4704;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	goto loc_4C4707;

loc_4C4704:
	or_(&ts->eax, 0xFFFFFFFF);

loc_4C4707:
	xor_(&ts->edx, ts->edx);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	setz(ts->eflags, &ts->dl);
	mov(&ts->eax, ts->edx);

loc_4C4710:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*4), 4));
	mov(mv, &ts->al, x86::mem(0x83AA69, 1));
	neg(&ts->al);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0xFFFF3942);
	add(&ts->eax, 0xCCFA);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4C4740(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x773FA8);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1D7BB6C9);
	push(mv, &ts->esp, 0x78FC4C);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0xD9DC2F12);
	push(mv, &ts->esp, 0x795640);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x933DD695);
	push(mv, &ts->esp, 0x7955E4);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x8202C364);
	push(mv, &ts->esp, 0x7955D4);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->al, x86::mem(0x89E7D8, 1));
	add(&ts->esp, 0x8);
	or_(&ts->ebp, 0xFFFFFFFF);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C485F;
    }
	mov(mv, &ts->eax, x86::mem(0x890108, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4C485F;
    }
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4C484F;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x795660);
	goto loc_4C4851;

loc_4C484F:
	xor_(&ts->edi, ts->edi);

loc_4C4851:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ebp);
	game::sub_54F170(ts, mv);

loc_4C485F:
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4C48AA;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7955F0);
	mov(&ts->eax, ts->edi);
	goto loc_4C48AC;

loc_4C48AA:
	xor_(&ts->eax, ts->eax);

loc_4C48AC:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ebp);
	mov(mv, x86::mem(ts->esi + 0x14C, 4), ts->eax);
	game::sub_54F170(ts, mv);
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x2);
	if (ts->eflags.zero) {
        goto loc_4C4909;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7956A8);
	goto loc_4C490B;

loc_4C4909:
	xor_(&ts->edi, ts->edi);

loc_4C490B:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ebp);
	game::sub_54F170(ts, mv);
	push(mv, &ts->esp, 0x58);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x3);
	if (ts->eflags.zero) {
        goto loc_4C497A;
    }
	push(mv, &ts->esp, ts->ebx);
	game::sub_5B8240(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x10, 1), ts->al);
	game::sub_4A7AE0(ts, mv);
	mov(&ts->ebx, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi + 0x54, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi, 4), 0x791DB0);
	pop(mv, &ts->esp, ts->ebx);
	goto loc_4C497C;

loc_4C497A:
	xor_(&ts->edi, ts->edi);

loc_4C497C:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ebp);
	game::sub_54F170(ts, mv);
	push(mv, &ts->esp, 0x54);
	mov(mv, x86::mem(ts->esi + 0x154, 4), ts->eax);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x4);
	if (ts->eflags.zero) {
        goto loc_4C49D9;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7956F0);
	goto loc_4C49DB;

loc_4C49D9:
	xor_(&ts->edi, ts->edi);

loc_4C49DB:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ebp);
	game::sub_54F170(ts, mv);
	mov(mv, &ts->al, x86::mem(0x89E7E6, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C4B5A;
    }
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x5);
	if (ts->eflags.zero) {
        goto loc_4C4A3F;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x795738);
	goto loc_4C4A41;

loc_4C4A3F:
	xor_(&ts->edi, ts->edi);

loc_4C4A41:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ebp);
	game::sub_54F170(ts, mv);
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x6);
	if (ts->eflags.zero) {
        goto loc_4C4A98;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x795780);
	goto loc_4C4A9A;

loc_4C4A98:
	xor_(&ts->edi, ts->edi);

loc_4C4A9A:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ebp);
	game::sub_54F170(ts, mv);
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x7);
	if (ts->eflags.zero) {
        goto loc_4C4AF1;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x795810);
	goto loc_4C4AF3;

loc_4C4AF1:
	xor_(&ts->edi, ts->edi);

loc_4C4AF3:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ebp);
	game::sub_54F170(ts, mv);
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x8);
	if (ts->eflags.zero) {
        goto loc_4C4B4A;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x795858);
	goto loc_4C4B4C;

loc_4C4B4A:
	xor_(&ts->edi, ts->edi);

loc_4C4B4C:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ebp);
	game::sub_54F170(ts, mv);

loc_4C4B5A:
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x9);
	if (ts->eflags.zero) {
        goto loc_4C4BA3;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7957C8);
	goto loc_4C4BA5;

loc_4C4BA3:
	xor_(&ts->edi, ts->edi);

loc_4C4BA5:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ebp);
	game::sub_54F170(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x14);
	retn(mv, &ts->esp);

loc_773EE0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x795904);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773EF4:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7958F8);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773F08:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7958EC);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773F1C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7943CC);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773F30:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7958E0);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773F44:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7958D4);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773F58:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7958C8);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773F6C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7958B8);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773F80:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7958A8);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_773F94:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79589C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4C4740:
	mov(&ts->eax, 0x7DFEB4);
	goto ___CxxFrameHandler;
}

void sub_4C4BD0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x444969FD);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x150, 1), 0x0);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x444969FE);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x83AA04, 4));
	add(&ts->esp, 0x18);
	cmp(&ts->eflags, ts->eax, 0x3);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4C4C0F;
    }
	jmp(x86::mem(0x4C4C7C, 4));

loc_4C4C16:
	mov(&ts->ecx, ts->esi);
	game::sub_4C3370(ts, mv);
	goto def_4C4C0F;

loc_4C4C1F:
	mov(&ts->ecx, ts->esi);
	game::sub_4C36C0(ts, mv);
	goto def_4C4C0F;

loc_4C4C28:
	mov(&ts->ecx, ts->esi);
	game::sub_4C38F0(ts, mv);
	goto def_4C4C0F;

loc_4C4C31:
	mov(&ts->ecx, ts->esi);
	game::sub_4C4740(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x444969FD);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x444969FE);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0x18);

def_4C4C0F:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50B8A0(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_539650(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4C4C90(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776418);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	game::sub_551DE0(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x50, 1), ts->al);
	mov(mv, x86::mem(ts->esi, 4), 0x790758);
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x58, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x3C44A2C);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x54, 4), 0x7FFFFFFF);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x3B35A98E);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xB08E7468);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x2C, 4));
	add(&ts->esp, 0x24);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_776410:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

SEH_4E3300:
	mov(&ts->eax, 0x7DEE70);
	goto ___CxxFrameHandler;
}

void sub_4C4D30(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4A8410(ts, mv);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4C4D40(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	push(mv, &ts->esp, ts->esi);
	xor_(&ts->esi, ts->esi);
	cmp(&ts->eflags, ts->eax, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4C4E8A;
    }
	mov(mv, &ts->eax, x86::mem(0x863444, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->edx, x86::mem(0x8654A4, 4));
	if (ts->eflags.zero) {
        goto loc_4C4E13;
    }
	mov(mv, &ts->ecx, x86::mem(0x86344C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4C4E13;
    }
	cmp(&ts->eflags, ts->edx, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4C4E13;
    }
	neg(&ts->eax);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, ts->ecx);
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x38, 4), 0x7FC8D0D0);
	mov(&ts->esi, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_4C4D94;
    }
	mov(&ts->esi, 0x401);

loc_4C4D94:
	movsx(mv, &ts->eax, x86::mem(ts->eax + 0x50, 1));
	cmp(&ts->eflags, ts->eax, 0x6);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4C4DA1;
    }
	jmp(x86::mem(0x4C4EA0, 4));

loc_4C4DA8:
	or_(&ts->esi, 0x8);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	game::sub_4A8590(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4C4DB6:
	or_(&ts->esi, 0x10);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	game::sub_4A8590(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4C4DC4:
	or_(&ts->esi, 0x20);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	game::sub_4A8590(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4C4DD2:
	or_(&ts->esi, 0x40);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	game::sub_4A8590(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4C4DE0:
	or_(&ts->esi, 0x80);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	game::sub_4A8590(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4C4DF1:
	or_(&ts->esi, 0x100);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	game::sub_4A8590(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4C4E02:
	or_(&ts->esi, 0x200);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	game::sub_4A8590(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4C4E13:
	cmp(&ts->eflags, ts->edx, 0x4);
	if (ts->eflags.zero) {
        goto loc_4C4E1D;
    }
	cmp(&ts->eflags, ts->edx, 0x5);
	if (!ts->eflags.zero) {
        goto def_4C4DA1;
    }

loc_4C4E1D:
	cmp(mv, &ts->eflags, x86::mem(0x862838, 4), 0x1);
	mov(&ts->esi, 0x2);
	if (!ts->eflags.zero) {
        goto loc_4C4E41;
    }
	mov(&ts->ecx, 0x86211C);
	game::sub_5004D0(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4C4E43;
    }
	cmp(mv, &ts->eflags, x86::mem(0x862838, 4), 0x1);

loc_4C4E41:
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4C4E48;
    }

loc_4C4E43:
	mov(&ts->esi, 0x2002);

loc_4C4E48:
	mov(mv, &ts->eax, x86::mem(0x8900D8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto def_4C4DA1;
    }
	mov(mv, &ts->al, x86::mem(0x89E7E1, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4C4E6B;
    }
	or_(&ts->esi, 0x800);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	game::sub_4A8590(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4C4E6B:
	mov(&ts->ecx, 0x89E7A0);
	game::sub_42FC40(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto def_4C4DA1;
    }
	or_(&ts->esi, 0x1000);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	game::sub_4A8590(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4C4E8A:
	cmp(&ts->eflags, ts->eax, 0x8);
	if (!ts->eflags.zero) {
        goto def_4C4DA1;
    }
	mov(&ts->esi, 0x4);

def_4C4DA1:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	game::sub_4A8590(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4C4EC0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4C4EE0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4C4ED8;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4C4ED8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4C4EE0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x795914);
	retn(mv, &ts->esp);
}

void sub_4C4EF0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->ecx + 0x4, 4));
	if (ts->eflags.zero) {
        goto loc_4C4F02;
    }
	lea(mv, &ts->esi, x86::mem(ts->eax - 0x4, 4));
	goto loc_4C4F04;

loc_4C4F02:
	xor_(&ts->esi, ts->esi);

loc_4C4F04:
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x10, 4));

loc_4C4F08:
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4C4F11;
    }
	lea(mv, &ts->eax, x86::mem(ts->edi - 0x4, 4));
	goto loc_4C4F13;

loc_4C4F11:
	xor_(&ts->eax, ts->eax);

loc_4C4F13:
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C4F40;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_43DCC0(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C4F38;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4C4F34;
    }
	add(&ts->esi, 0xFFFFFFFC);
	goto loc_4C4F08;

loc_4C4F34:
	xor_(&ts->esi, ts->esi);
	goto loc_4C4F08;

loc_4C4F38:
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

loc_4C4F40:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_4C4F50(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	mov(mv, &ts->eax, x86::mem(0x836488, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C507B;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x4, 4));
	add(&ts->eax, 0xC);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4C4F72;
    }
	add(&ts->ecx, 0xFFFFFFFC);
	goto loc_4C4F74;

loc_4C4F72:
	xor_(&ts->ecx, ts->ecx);

loc_4C4F74:
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(&ts->edx, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x836488, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->edx + 0xC, 4));
	if (ts->eflags.zero) {
        goto loc_4C4F8E;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_4C4F90;

loc_4C4F8E:
	xor_(&ts->eax, ts->eax);

loc_4C4F90:
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->ecx + 0xC, 4));
	if (!ts->eflags.zero) {
        goto loc_4C4FB8;
    }
	mov(mv, &ts->eax, x86::mem(0x836498, 4));
	mov(mv, x86::mem(ts->eax + 0x9, 1), 0x1);
	mov(mv, &ts->ecx, x86::mem(0x836488, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4C4FAE;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->edx, 4));

loc_4C4FAE:
	mov(mv, x86::mem(0x836488, 4), 0x0);

loc_4C4FB8:
	push(mv, &ts->esp, 0x78EA4C);
	push(mv, &ts->esp, ts->esi);
	game::sub_43DCC0(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4C5014;
    }
	mov(mv, &ts->eax, x86::mem(0x836498, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C4FF4;
    }
	mov(mv, &ts->ax, x86::mem(ts->eax + 0x20, 2));
	test(&ts->eflags, ts->ax, ts->ax);
	if (ts->eflags.zero) {
        goto loc_4C4FE2;
    }
	cmp(&ts->eflags, ts->ax, 0xB);
	if (!ts->eflags.zero) {
        goto loc_4C4FF4;
    }

loc_4C4FE2:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_4C4FF4:
	mov(mv, &ts->eax, x86::mem(0x836488, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x4, 4));
	add(&ts->eax, 0xC);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4C500B;
    }
	add(&ts->ecx, 0xFFFFFFFC);
	goto loc_4C500D;

loc_4C500B:
	xor_(&ts->ecx, ts->ecx);

loc_4C500D:
	mov(&ts->edx, ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, &ts->esi, x86::mem(ts->edx + 0xC, 4));

loc_4C5014:
	mov(mv, &ts->al, x86::mem(0x83648C, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4C506B;
    }
	push(mv, &ts->esp, 0x78F530);
	push(mv, &ts->esp, ts->esi);
	game::sub_43DCC0(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4C506B;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x850078, 4), 0x1);
	game::sub_50D2A0(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, 0xDD60E402);
	mov(&ts->ecx, 0x85AD40);
	mov(mv, x86::mem(0x83A9D8, 4), ts->eax);
	game::sub_5003F0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x85AD40);
	game::sub_5410E0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	goto sub_5404A0;

loc_4C506B:
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);

loc_4C507B:
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_4C5080(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(0x836488, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto locret_4C50B1;
    }
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->edi, ts->ecx);
	game::sub_4C4EF0(ts, mv);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4C509F;
    }
	mov(mv, x86::mem(ts->edi + 0xC, 4), ts->eax);

loc_4C509F:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);

locret_4C50B1:
	retn(mv, &ts->esp);
}

void sub_4C50C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x773FD4);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4C510B;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4A8650(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4C510B:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_773FC0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x795918);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4C50C0:
	mov(&ts->eax, 0x7DFED8);
	goto ___CxxFrameHandler;
}

void sub_4C5120(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x4, 4), 0xC98356BA);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4C51E9;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x50, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4C5197;
    }
	mov(mv, &ts->eax, x86::mem(0x8651AC, 4));
	sub(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78E050, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4C51E9;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x795944);
	push(mv, &ts->esp, 0x4B98C4B9);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x50, 4), 0x1);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x795938);
	push(mv, &ts->esp, 0x94DCE36A);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x20);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4C5197:
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4C51E9;
    }
	mov(mv, &ts->eax, x86::mem(0x8651AC, 4));
	sub(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78E050, 4));
	fadd(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fcompp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4C51E9;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x795928);
	push(mv, &ts->esp, 0x94DCE36A);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_4C4F50(ts, mv);
	add(&ts->esp, 0x18);

loc_4C51E9:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);
}

void sub_4C51F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0x8867412D);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4C5241;
    }
	if (ts->eflags.zero) {
        goto loc_4C520E;
    }
	cmp(&ts->eflags, ts->eax, 0x35F8620B);
	if (ts->eflags.zero) {
        goto loc_4C5223;
    }
	cmp(&ts->eflags, ts->eax, 0x461A18EE);
	if (!ts->eflags.zero) {
        goto loc_4C526D;
    }

loc_4C520E:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4C4F50(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4C5223:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x121);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->esi);
	game::sub_4A3100(ts, mv);
	add(&ts->esp, 0x1C);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4C5241:
	cmp(&ts->eflags, ts->eax, 0xC98356BA);
	if (!ts->eflags.zero) {
        goto loc_4C526D;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x4C, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C526D;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x121);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->eax);
	game::sub_4A3100(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x4C, 1), 0x1);
	add(&ts->esp, 0x1C);

loc_4C526D:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);
}

void sub_4C5280(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x4, 4), 0xC98356BA);
	if (!ts->eflags.zero) {
        goto locret_4C52BE;
    }
	mov(mv, &ts->eax, x86::mem(0x8651AC, 4));
	sub(mv, &ts->eax, x86::mem(ts->ecx + 0x4C, 4));
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7843E8, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto locret_4C52BE;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_4C4F50(ts, mv);
	add(&ts->esp, 0x8);

locret_4C52BE:
	retn(mv, &ts->esp, 0x10);
}

void sub_4C52D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x773FF4);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x4C);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4C531B;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4A8860(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4C531B:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_773FE0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x795954);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4C52D0:
	mov(&ts->eax, 0x7DFEFC);
	goto ___CxxFrameHandler;
}

void sub_4C5330(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0x406415E3);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4C5356;
    }
	cmp(&ts->eflags, ts->eax, 0xB5AF2461);
	if (ts->eflags.zero) {
        goto loc_4C5356;
    }
	cmp(&ts->eflags, ts->eax, 0xC3960EB9);
	if (!ts->eflags.zero) {
        goto loc_4C5392;
    }
	mov(mv, x86::mem(0x8383A8, 4), 0x1);

loc_4C5356:
	mov(mv, &ts->eax, x86::mem(0x836490, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C5381;
    }
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	game::sub_480CB0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x795964);
	push(mv, &ts->esp, ts->eax);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4C5381:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_4C4F50(ts, mv);
	add(&ts->esp, 0x8);

loc_4C5392:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);
}

void sub_4C53A0(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x4, 4), 0xC3960EB9);
	if (!ts->eflags.zero) {
        goto locret_4C53C5;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(0x8383A8, 4), 0x1);
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4C4F50(ts, mv);
	add(&ts->esp, 0x8);

locret_4C53C5:
	retn(mv, &ts->esp, 0x10);
}

void sub_4C53D0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0xC3960EB9);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4C5445;
    }
	if (ts->eflags.zero) {
        goto loc_4C541A;
    }
	cmp(&ts->eflags, ts->eax, 0x406415E3);
	if (ts->eflags.zero) {
        goto loc_4C53EE;
    }
	cmp(&ts->eflags, ts->eax, 0xB5AF2461);
	if (!ts->eflags.zero) {
        goto loc_4C5454;
    }

loc_4C53EE:
	mov(mv, &ts->eax, x86::mem(0x836498, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C5454;
    }
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x5, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_4C5454;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(0x836494, 1), 0x1);
	game::sub_4C4F50(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4C541A:
	mov(mv, x86::mem(0x8383A8, 4), 0x1);
	game::sub_5BEEA0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x836494, 1), 0x1);
	game::sub_4C4F50(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4C5445:
	cmp(&ts->eflags, ts->eax, 0xC98356BA);
	if (!ts->eflags.zero) {
        goto loc_4C5454;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	game::sub_576460(ts, mv);

loc_4C5454:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);
}

void sub_4C5460(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x4, 4), 0xC98356BA);
	if (!ts->eflags.zero) {
        goto locret_4C54AD;
    }
	mov(mv, &ts->eax, x86::mem(0x8651AC, 4));
	sub(mv, &ts->eax, x86::mem(ts->ecx + 0x4C, 4));
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78E050, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7859D0, 4));
	fcompp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto locret_4C54AD;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x836494, 1), 0x1);
	game::sub_4C4F50(ts, mv);
	add(&ts->esp, 0x8);

locret_4C54AD:
	retn(mv, &ts->esp, 0x10);
}

void sub_4C54B0(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x4, 4), 0xC98356BA);
	if (!ts->eflags.zero) {
        goto locret_4C54EE;
    }
	mov(mv, &ts->eax, x86::mem(0x8651AC, 4));
	sub(mv, &ts->eax, x86::mem(ts->ecx + 0x4C, 4));
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78E050, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto locret_4C54EE;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_4C4F50(ts, mv);
	add(&ts->esp, 0x8);

locret_4C54EE:
	retn(mv, &ts->esp, 0x10);
}

void sub_4C5500(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x774014);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4C554B;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4A90F0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4C554B:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_774000:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x795974);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4C5500:
	mov(&ts->eax, 0x7DFF20);
	goto ___CxxFrameHandler;
}

void sub_4C5560(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::stdiobuf___stdiobuf_void_(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4C5578;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4C5578:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4C5580(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0xB5AF2461);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4C55ED;
    }
	if (ts->eflags.zero) {
        goto loc_4C55A2;
    }
	cmp(&ts->eflags, ts->eax, 0x35F8620B);
	if (ts->eflags.zero) {
        goto loc_4C55CF;
    }
	cmp(&ts->eflags, ts->eax, 0x406415E3);
	if (!ts->eflags.zero) {
        goto loc_4C568C;
    }

loc_4C55A2:
	mov(mv, &ts->al, x86::mem(0x836495, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4C568C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x9);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51DE60(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_4C4F50(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4C55CF:
	mov(mv, &ts->eax, x86::mem(0x8651AC, 4));
	push(mv, &ts->esp, 0x795984);
	push(mv, &ts->esp, 0x69696969);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->eax);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4C55ED:
	cmp(&ts->eflags, ts->eax, 0xC98356BA);
	if (!ts->eflags.zero) {
        goto loc_4C568C;
    }
	mov(mv, &ts->ecx, x86::mem(0x8651AC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x50, 4));
	mov(&ts->edx, ts->ecx);
	sub(&ts->edx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784478, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4C5635;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x78EA74);
	push(mv, &ts->esp, ts->eax);
	game::sub_4C5080(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4C5635:
	mov(mv, &ts->al, x86::mem(0x836495, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C568C;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C568C;
    }
	cmp(&ts->eflags, ts->eax, 0x7FFFFFFF);
	if (ts->eflags.zero) {
        goto loc_4C568C;
    }
	mov(&ts->edx, ts->eax);
	sub(&ts->ecx, ts->edx);
	cmp(&ts->eflags, ts->ecx, 0x3E80);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4C568C;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F970);
	mov(mv, x86::mem(0x836495, 1), 0x1);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x2DDF58C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F970);
	push(mv, &ts->esp, 0x4C46F86A);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x20);

loc_4C568C:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);
}

void sub_4C5690(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0x795990);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_4C56BB;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, 0x505E82BF);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	goto sub_50CA50;

locret_4C56BB:
	retn(mv, &ts->esp);
}

void sub_4C56C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776418);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	game::sub_551DE0(ts, mv);
	xor_(&ts->eax, ts->eax);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x4C5690);
	mov(mv, x86::mem(ts->esi, 4), 0x7959C4);
	push(mv, &ts->esp, 0x7959A8);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->eax);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_494D30(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x505E82BF);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	add(&ts->esp, 0x1C);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_776410:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

SEH_4E3300:
	mov(&ts->eax, 0x7DEE70);
	goto ___CxxFrameHandler;
}

void sub_4C5740(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4C5760(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4C5758;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4C5758:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4C5760(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x7959C4);
	goto sub_510D40;
}

void sub_4C5770(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x4, 4), 0xC407210);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4C57B6;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C57B6;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x10, 4), 0x4F876B6F);
	if (!ts->eflags.zero) {
        goto loc_4C57AC;
    }
	game::sub_5BF540(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4C57B6;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4C4F50(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4C57AC:
	mov(mv, x86::mem(0x864F4C, 4), 0x1);

loc_4C57B6:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);
}

void sub_4C57C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0x790734);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto locret_4C57E0;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x790734);
	game::sub_555E80(ts, mv);
	add(&ts->esp, 0x8);

locret_4C57E0:
	retn(mv, &ts->esp);
}

void sub_4C57F0(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_4C5815;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x4A51);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->eax);
	game::sub_4A3100(ts, mv);
	add(&ts->esp, 0x1C);

locret_4C5815:
	retn(mv, &ts->esp, 0x14);
}

void sub_4C5820(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_4C584B;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, 0x8867412D);
	push(mv, &ts->esp, 0x3A2BE557);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xC11);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->eax);
	game::sub_4A3100(ts, mv);
	add(&ts->esp, 0x1C);

locret_4C584B:
	retn(mv, &ts->esp, 0x14);
}

void sub_4C5850(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_4C5875;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x831);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->eax);
	game::sub_4A3100(ts, mv);
	add(&ts->esp, 0x1C);

locret_4C5875:
	retn(mv, &ts->esp, 0x14);
}

void sub_4C5880(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 4), 0xC407210);
	if (!ts->eflags.zero) {
        goto locret_4C58A5;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x861);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->eax);
	game::sub_4A3100(ts, mv);
	add(&ts->esp, 0x1C);

locret_4C58A5:
	retn(mv, &ts->esp, 0x14);
}

void sub_4C58B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x774070);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x48);
	mov(&ts->esi, ts->ecx);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4C5901;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1C8ACE);
	push(mv, &ts->esp, 0x228B7E32);
	mov(&ts->ecx, ts->edi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7959D4);
	goto loc_4C5903;

loc_4C5901:
	xor_(&ts->edi, ts->edi);

loc_4C5903:
	push(mv, &ts->esp, ts->ebx);
	or_(&ts->ebx, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x48);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x150, 4), ts->edi);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x2);
	if (ts->eflags.zero) {
        goto loc_4C5948;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x55423473);
	push(mv, &ts->esp, 0x56026748);
	mov(&ts->ecx, ts->edi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7959EC);
	goto loc_4C594A;

loc_4C5948:
	xor_(&ts->edi, ts->edi);

loc_4C594A:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));
	push(mv, &ts->esp, 0x48);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x3);
	if (ts->eflags.zero) {
        goto loc_4C598D;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x18ECFF);
	push(mv, &ts->esp, 0x2287E063);
	mov(&ts->ecx, ts->edi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7959DC);
	goto loc_4C598F;

loc_4C598D:
	xor_(&ts->edi, ts->edi);

loc_4C598F:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x150, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));
	push(mv, &ts->esp, 0x48);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x4);
	if (ts->eflags.zero) {
        goto loc_4C59E0;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x56B00632);
	push(mv, &ts->esp, 0xB9929709);
	mov(&ts->ecx, ts->edi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7959E4);
	goto loc_4C59E2;

loc_4C59E0:
	xor_(&ts->edi, ts->edi);

loc_4C59E2:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	mov(&ts->ecx, ts->esi);
	game::sub_4A9360(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4C, 4));
	add(&ts->esi, 0x4C);
	push(mv, &ts->esp, ts->eax);
	game::sub_50B8A0(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edi + 0x20, 4));
	mov(mv, &ts->esi, x86::mem(0x836498, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4C5A2B;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x5C, 4));
	push(mv, &ts->esp, 0x100);
	push(mv, &ts->esp, 0x0);
	game::sub_6FBFCC(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xB, 1), 0x1);

loc_4C5A2B:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_774020:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x795A14);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774034:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x795A08);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774048:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x795A00);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_77405C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7959F4);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4C58B0:
	mov(&ts->eax, 0x7DFF64);
	goto ___CxxFrameHandler;
}

void sub_4C5A40(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7740A8);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x48);
	mov(&ts->esi, ts->ecx);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4C5A91;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x55423473);
	push(mv, &ts->esp, 0x56026748);
	mov(&ts->ecx, ts->edi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7959EC);
	goto loc_4C5A93;

loc_4C5A91:
	xor_(&ts->edi, ts->edi);

loc_4C5A93:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0xFFFFFFFF);
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));
	push(mv, &ts->esp, 0x48);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4C5ADA;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x56B00632);
	push(mv, &ts->esp, 0xB9929709);
	mov(&ts->ecx, ts->edi);
	game::sub_51F670(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7959E4);
	goto loc_4C5ADC;

loc_4C5ADA:
	xor_(&ts->edi, ts->edi);

loc_4C5ADC:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0xFFFFFFFF);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4C, 4));
	add(&ts->esi, 0x4C);
	push(mv, &ts->esp, ts->eax);
	game::sub_50B8A0(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edi + 0x20, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_774080:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x795A08);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774094:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7959F4);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4C5A40:
	mov(&ts->eax, 0x7DFF90);
	goto ___CxxFrameHandler;
}

void sub_4C5B20(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x20, 4));
	inc(&ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x20, 4), ts->eax);
	retn(mv, &ts->esp);
}

void sub_4C5B30(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x20, 4));
	dec(&ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x20, 4), ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto locret_4C5B44;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax + 0x14, 4));
	xor_(&ts->eax, ts->eax);

locret_4C5B44:
	retn(mv, &ts->esp);
}

void sub_4C5B50(x86::thread_state* ts, x86::memory_view* mv) {
	add(&ts->ecx, 0x4);
	goto sub_6F55DD;
}

void sub_4C5B60(x86::thread_state* ts, x86::memory_view* mv) {
	add(&ts->ecx, 0x4);
	goto sub_6F55E8;
}

void sub_4C5B70(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->esi, 4), 0x795A1C);
	game::sub_6F55D2(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4C5B91;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4C5B91:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4C5BA0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7740D4);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x24);
	game::j__malloc(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->esi, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C5BF3;
    }
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	xor_(&ts->ecx, ts->ecx);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esi, 4), 0x795A1C);
	mov(mv, x86::mem(ts->esi + 0x20, 4), 0x1);
	mov(&ts->eax, 0x1C);
	game::sub_6F55C7(ts, mv);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->edi);

loc_4C5BF3:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_7740C0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x795A34);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4C5BA0:
	mov(&ts->eax, 0x7DFFB4);
	goto ___CxxFrameHandler;
}

void sub_4C5C10(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	dec(&ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto locret_4C5C24;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax + 0x20, 4));
	xor_(&ts->eax, ts->eax);

locret_4C5C24:
	retn(mv, &ts->esp);
}

void sub_4C5C30(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_6F5A04(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	game::j__free(ts, mv);
	add(&ts->esp, 0xC);
	mov(mv, x86::mem(ts->esi + 0x24, 1), 0x0);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4C5C60(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6F5889(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);
}

void sub_4C5C70(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(ts->ecx + 0x20, 4), ts->eax);
	push(mv, &ts->esp, ts->eax);
	add(&ts->ecx, 0x14);
	push(mv, &ts->esp, ts->ecx);
	game::sub_6F5968(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x4);
}

void sub_4C5C90(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0x28);
	game::j__malloc(ts, mv);
	xor_(&ts->ecx, ts->ecx);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4C5CBE;
    }
	mov(mv, x86::mem(ts->eax, 4), 0x795A44);
	mov(mv, x86::mem(ts->eax + 0x4, 4), 0x1);
	mov(mv, x86::mem(ts->eax + 0xC, 4), 0x1000);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x24, 1), ts->cl);
	retn(mv, &ts->esp);

loc_4C5CBE:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp);
}

void sub_4C5CD0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	game::j__malloc(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	push(mv, &ts->esp, 0x4C5D10);
	push(mv, &ts->esp, ts->eax);
	game::sub_6F5A40(ts, mv);
	add(&ts->esp, 0x1C);
	mov(mv, x86::mem(ts->esi + 0x24, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4C5D10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->al, x86::mem(ts->esi + 0x24, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C5D31;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_4C5D20:
	push(mv, &ts->esp, 0x1);
	game::sub_6F5889(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x24, 1));
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4C5D20;
    }

loc_4C5D31:
	push(mv, &ts->esp, ts->esi);
	call(ts, mv, x86::mem(ts->esi + 0x8, 4));
	add(&ts->esp, 0x4);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4C5D40(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x24, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, x86::mem(ts->esi, 4), 0x795A44);
	if (ts->eflags.zero) {
        goto loc_4C5D63;
    }
	push(mv, &ts->esp, 0x0);
	game::sub_4C5C30(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6F5859(ts, mv);
	add(&ts->esp, 0x4);

loc_4C5D63:
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4C5D73;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4C5D73:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4C5D80(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7740F4);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(0x837AD8, 4));
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x48);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	xor_(&ts->ebx, ts->ebx);
	test(&ts->eflags, ts->al, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebp, ts->ecx);
	mov(&ts->edi, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4C5DCC;
    }
	or_(&ts->eax, ts->edi);
	mov(mv, x86::mem(0x837AD8, 4), ts->eax);
	mov(mv, x86::mem(0x837AC8, 4), ts->ebx);
	mov(mv, x86::mem(0x837ACC, 4), ts->ebx);
	mov(mv, x86::mem(0x837AD0, 4), ts->ebx);
	mov(mv, x86::mem(0x837AD4, 4), ts->ebx);

loc_4C5DCC:
	test(&ts->eflags, ts->al, 0x2);
	if (!ts->eflags.zero) {
        goto loc_4C5DEE;
    }
	or_(&ts->eax, 0x2);
	mov(mv, x86::mem(0x837AD8, 4), ts->eax);
	mov(mv, x86::mem(0x837ABC, 4), 0x837AC0);
	mov(mv, x86::mem(0x837AC0, 4), ts->edi);
	mov(mv, x86::mem(0x837AC4, 4), ts->ebx);

loc_4C5DEE:
	cmp(mv, &ts->eflags, x86::mem(0x837AB8, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4C5EA4;
    }
	push(mv, &ts->esp, 0x8);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4C5E13;
    }
	mov(mv, x86::mem(ts->eax, 4), 0x786DE0);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edi);
	goto loc_4C5E15;

loc_4C5E13:
	xor_(&ts->eax, ts->eax);

loc_4C5E15:
	push(mv, &ts->esp, 0x28);
	mov(mv, x86::mem(0x837AC8, 4), ts->eax);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4C5E43;
    }
	mov(mv, x86::mem(ts->eax, 4), 0x795A44);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0xC, 4), 0x1000);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x24, 1), ts->bl);
	goto loc_4C5E45;

loc_4C5E43:
	xor_(&ts->eax, ts->eax);

loc_4C5E45:
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x24);
	mov(mv, x86::mem(0x837ACC, 4), ts->eax);
	game::j__malloc(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->esi);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x60, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4C5E7F;
    }
	mov(mv, x86::mem(ts->esi + 0x20, 4), ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	xor_(&ts->ecx, ts->ecx);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esi, 4), 0x795A1C);
	mov(&ts->eax, 0x1C);
	game::sub_6F55C7(ts, mv);
	goto loc_4C5E81;

loc_4C5E7F:
	xor_(&ts->esi, ts->esi);

loc_4C5E81:
	mov(mv, x86::mem(0x837AD0, 4), ts->esi);
	mov(mv, x86::mem(ts->esp + 0x60, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(0x837AD4, 4), 0x4A96F0);
	mov(mv, x86::mem(0x837AB8, 4), 0x837AC8);
	pop(mv, &ts->esp, ts->esi);

loc_4C5EA4:
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x10);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	mov(&ts->eax, 0x44);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, 0x78E8F4);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ebp + 0x68, 4), 0x837ABC);
	mov(mv, x86::mem(ts->esp + 0x5A, 1), ts->bl);
	mov(mv, x86::mem(ts->esp + 0x5B, 1), ts->bl);
	xor_(&ts->ecx, ts->ecx);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x18, 4));
	game::sub_43E000(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x7F68C4);
	push(mv, &ts->esp, 0x837AC8);
	mov(mv, x86::mem(ts->esp + 0x66, 1), ts->bl);
	mov(mv, x86::mem(ts->esp + 0x67, 1), ts->bl);
	game::sub_6FC029(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x68, 4));
	add(&ts->esp, 0x14);
	mov(mv, x86::mem(ts->ebp + 0x58, 4), ts->ebx);
	mov(mv, x86::mem(ts->ebp, 4), ts->ebx);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->ebp + 0x5C, 4), ts->eax);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x54);
	retn(mv, &ts->esp);

loc_7740E0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x795A68);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x54, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4C5D80:
	mov(&ts->eax, 0x7DFFD8);
	goto ___CxxFrameHandler;
}

void sub_4C5F20(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x83A9D0);
	game::sub_52A440(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x836498, 4));
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x14, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4C5F5E;
    }
	mov(mv, x86::mem(ts->ecx + 0x14, 4), ts->ebp);
	mov(mv, &ts->ecx, x86::mem(0x836498, 4));
	mov(mv, x86::mem(ts->ecx + 0x50, 4), ts->ebx);
	mov(mv, &ts->edx, x86::mem(0x836498, 4));
	mov(mv, x86::mem(ts->edx + 0x1C, 4), ts->ebx);
	mov(mv, &ts->ecx, x86::mem(0x836498, 4));
	mov(mv, x86::mem(ts->ecx + 0x54, 4), ts->eax);

loc_4C5F5E:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_440820(ts, mv);
	push(mv, &ts->esp, 0x10);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x835BB8);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->eax);
	game::sub_43E030(ts, mv);
	push(mv, &ts->esp, ts->ebp);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->edi);
	game::sub_43DDA0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x4, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x18, 4), 0x6);
	mov(mv, x86::mem(ts->esi + 0x20, 2), ts->bx);
	mov(mv, x86::mem(ts->esi + 0x7, 1), ts->bl);
	mov(mv, &ts->eax, x86::mem(0x8650D0, 4));
	add(&ts->esp, 0x20);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4C5FBD;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x5C, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x835BB8);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	game::sub_6FBF1E(ts, mv);

loc_4C5FBD:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_4C5FD0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, 0x10);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x835BB8);
	mov(&ts->esi, ts->ecx);
	game::sub_43E030(ts, mv);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->ebx);
	game::sub_43DDA0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x64, 4));
	add(&ts->esp, 0x18);
	push(mv, &ts->esp, 0x837AE0);
	push(mv, &ts->esp, ts->edi);
	game::sub_4BEAD0(ts, mv);
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(0x837AE0, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x4, 1), ts->cl);
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x18, 4), 0x7);
	mov(mv, x86::mem(ts->esi + 0x20, 2), ts->cx);
	mov(mv, x86::mem(ts->esi + 0x7, 1), ts->cl);
	cmp(mv, &ts->eflags, x86::mem(0x8650D0, 4), ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4C6042;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x5C, 4));
	push(mv, &ts->esp, 0x835BB8);
	push(mv, &ts->esp, 0x837AE0);
	inc(&ts->eax);
	push(mv, &ts->esp, ts->eax);
	game::sub_6FBF6B(ts, mv);

loc_4C6042:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_4C6050(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x8650D4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C6067;
    }
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, 0x1);
	game::sub_57D670(ts, mv);
	add(&ts->esp, 0xC);

loc_4C6067:
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->ebx);
	game::sub_57E5B0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->eax);
	game::sub_57E480(ts, mv);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x30, 4));
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x14);
	xor_(&ts->esi, ts->esi);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_4C60A8;
    }

loc_4C6094:
	mov(mv, &ts->ecx, x86::mem(ts->ebp + (ts->esi*4), 4));
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->ecx);
	game::sub_57E5B0(ts, mv);
	add(&ts->esp, 0x8);
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.carry) {
        goto loc_4C6094;
    }

loc_4C60A8:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	game::sub_4A9BF0(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x836498, 4));
	mov(mv, x86::mem(ts->edx + 0x4, 1), 0x1);
	mov(mv, &ts->eax, x86::mem(0x836498, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->ecx, 0x3);
	if (ts->eflags.zero) {
        goto loc_4C60DE;
    }
	cmp(&ts->eflags, ts->ecx, 0x8);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4C6118;
    }
	cmp(&ts->eflags, ts->ecx, 0xA);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_4C6118;
    }
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4C6185;
    }
	goto loc_4C6118;

loc_4C60DE:
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_4C6118;
    }
	mov(mv, x86::mem(ts->eax + 0x7, 1), 0x1);
	mov(mv, &ts->eax, x86::mem(0x836498, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x64, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4C6105;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x15457DE1);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);
	goto loc_4C6113;

loc_4C6105:
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x4, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_4C6118;
    }
	mov(mv, x86::mem(ts->eax + 0x60, 4), 0x1);

loc_4C6113:
	mov(mv, &ts->eax, x86::mem(0x836498, 4));

loc_4C6118:
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x64, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C6185;
    }
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->eax);
	game::sub_4A37C0(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->edi - 0x1, 4));
	cmp(&ts->eflags, ts->eax, 0x3);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4C612F;
    }
	jmp(x86::mem(0x4C618C, 4));

loc_4C6136:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	goto loc_4C6142;

loc_4C613C:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);

loc_4C6142:
	mov(mv, &ts->ecx, x86::mem(ts->ebp, 4));
	mov(mv, &ts->edx, x86::mem(0x836498, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x64, 4));
	game::sub_4A35C0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0xC);

loc_4C615B:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(0x836498, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x64, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_4A35C0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0xC);

def_4C612F:
	mov(mv, &ts->ecx, x86::mem(0x836498, 4));
	mov(mv, x86::mem(ts->ecx + 0x4, 1), 0x0);

loc_4C6185:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0xC);
}

void sub_4C61A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x8650D4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C61B7;
    }
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, 0x3);
	game::sub_57D670(ts, mv);
	add(&ts->esp, 0xC);

loc_4C61B7:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0x10);
	push(mv, &ts->esp, ts->eax);
	game::sub_57E480(ts, mv);
	movzx(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 1));
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->esi, ts->eax);
	game::sub_57E480(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->eax, x86::mem(0x836498, 4));
	mov(mv, x86::mem(ts->eax + 0x18, 4), 0x0);
	mov(mv, &ts->ecx, x86::mem(0x836498, 4));
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x68, 4));
	setnz(ts->eflags, &ts->dl);
	mov(mv, x86::mem(ts->esp + 0x2C, 1), ts->dl);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	game::j__free(ts, mv);
	mov(mv, x86::mem(ts->edi + 0x8, 4), 0x0);
	mov(mv, &ts->eax, x86::mem(0x836498, 4));
	mov(mv, x86::mem(ts->eax + 0x20, 2), ts->si);
	mov(mv, &ts->ecx, x86::mem(0x836498, 4));
	add(&ts->esp, 0x1C);
	mov(mv, x86::mem(ts->ecx + 0x22, 2), ts->si);
	mov(mv, &ts->eax, x86::mem(0x836498, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x68, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->esi);
	game::sub_4A9C40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x836498, 4));
	mov(mv, &ts->dl, x86::mem(ts->esp + 0x14, 1));
	mov(mv, x86::mem(ts->ecx + 0x5, 1), ts->dl);
	mov(mv, &ts->eax, x86::mem(0x836498, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + 0xA, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4C6255;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x64, 4));
	game::sub_4A3C80(ts, mv);
	retn(mv, &ts->esp, 0x10);

loc_4C6255:
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x64, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x461A18EE);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x10);
}

void sub_4C6270(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x8650D4, 4));
	push(mv, &ts->esp, ts->ebx);
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4C628A;
    }
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, 0x5);
	game::sub_57D670(ts, mv);
	add(&ts->esp, 0xC);

loc_4C628A:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_57E4D0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x836498, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x50, 4));
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4C62B6;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_440540(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x836498, 4));
	add(&ts->esp, 0x4);

loc_4C62B6:
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x68, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	game::j__free(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->ebx);
	mov(mv, &ts->eax, x86::mem(0x836498, 4));
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->ebx);
	mov(mv, &ts->ecx, x86::mem(0x836498, 4));
	mov(mv, x86::mem(ts->ecx + 0x18, 4), ts->ebx);
	mov(mv, &ts->eax, x86::mem(0x836498, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x6, 1));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->cl, ts->bl);
	pop(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4C6309;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0xB, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto loc_4C6309;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 1), ts->bl);
	mov(mv, &ts->edx, x86::mem(0x836498, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x5C, 4));
	push(mv, &ts->esp, 0x100);
	push(mv, &ts->esp, 0x1);
	game::sub_6FBFCC(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x836498, 4));

loc_4C6309:
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x64, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x461A18EE);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_4C6330(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x8650D4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C6347;
    }
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, 0x8);
	game::sub_57D670(ts, mv);
	add(&ts->esp, 0xC);

loc_4C6347:
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->esi);
	game::sub_57E4D0(ts, mv);
	push(mv, &ts->esp, 0x783FE5);
	game::sub_43DBB0(ts, mv);
	add(&ts->esp, 0xC);
	mov(&ts->ecx, 0x83A9E0);
	mov(&ts->edi, ts->eax);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	push(mv, &ts->esp, ts->eax);
	add(&ts->edi, ts->esi);
	push(mv, &ts->esp, ts->edi);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_4C638A;
    }
	mov(&ts->ecx, 0x83A9D0);
	game::sub_5346F0(ts, mv);

loc_4C638A:
	mov(mv, &ts->eax, x86::mem(0x836498, 4));
	mov(mv, x86::mem(ts->eax + 0x18, 4), 0x0);
	mov(mv, &ts->ecx, x86::mem(0x836498, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x64, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x461A18EE);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x4);
}

void sub_4C63C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x8650D4, 4));
	push(mv, &ts->esp, ts->ebx);
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4C63DC;
    }
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, 0xD);
	game::sub_57D670(ts, mv);
	add(&ts->esp, 0xC);

loc_4C63DC:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0x10);
	push(mv, &ts->esp, ts->eax);
	game::sub_57E480(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->esi, ts->eax);
	game::sub_57E480(ts, mv);
	add(&ts->esp, 0x18);
	cmp(&ts->eflags, ts->esi, 0x1);
	mov(&ts->ebp, 0x8867412D);
	if (!ts->eflags.zero) {
        goto loc_4C6411;
    }
	mov(mv, &ts->edx, x86::mem(0x836498, 4));
	mov(mv, x86::mem(ts->edx + 0x7, 1), 0x1);

loc_4C6411:
	mov(mv, &ts->eax, x86::mem(0x836498, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	dec(&ts->ecx);
	cmp(&ts->eflags, ts->ecx, 0x7);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4C6424;
    }
	push(mv, &ts->esp, ts->edi);
	jmp(x86::mem(0x4C64E0, 4));

loc_4C642B:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0xB, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto loc_4C6436;
    }
	mov(mv, x86::mem(0x844AD9, 1), ts->bl);

loc_4C6436:
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x68, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->esi, 0x1);
	mov(mv, x86::mem(ts->edi + 0x8, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4C645E;
    }
	cmp(&ts->eflags, ts->esi, 0x4);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4C6457;
    }
	cmp(&ts->eflags, ts->esi, 0x6);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4C645E;
    }

loc_4C6457:
	mov(&ts->ebp, 0xDC12AF2E);
	goto loc_4C6463;

loc_4C645E:
	mov(&ts->ebp, 0x8867412D);

loc_4C6463:
	mov(mv, &ts->eax, x86::mem(0x836498, 4));

loc_4C6468:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x50, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4C647E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_440540(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x836498, 4));
	add(&ts->esp, 0x4);

loc_4C647E:
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->ebx);
	mov(mv, &ts->edx, x86::mem(0x836498, 4));
	mov(mv, x86::mem(ts->edx + 0x22, 2), ts->si);
	mov(mv, &ts->eax, x86::mem(0x836498, 4));
	goto loc_4C64B5;

loc_4C6492:
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x68, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::j__free(ts, mv);
	mov(mv, x86::mem(ts->edi + 0x8, 4), ts->ebx);
	mov(mv, &ts->eax, x86::mem(0x836498, 4));
	add(&ts->esp, 0x4);
	goto loc_4C64B5;

loc_4C64AB:
	cmp(&ts->eflags, ts->esi, 0x4);
	if (!ts->eflags.zero) {
        goto loc_4C64B5;
    }
	mov(&ts->ebp, 0x5A051729);

loc_4C64B5:
	pop(mv, &ts->esp, ts->edi);

def_4C6424:
	mov(mv, x86::mem(ts->eax + 0x20, 2), ts->si);
	mov(mv, &ts->ecx, x86::mem(0x836498, 4));
	mov(mv, x86::mem(ts->ecx + 0x18, 4), ts->ebx);
	mov(mv, &ts->edx, x86::mem(0x836498, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x64, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebp);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x8);
}

void sub_4C6500(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x8650D4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C6517;
    }
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, 0x10);
	game::sub_57D670(ts, mv);
	add(&ts->esp, 0xC);

loc_4C6517:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_57E480(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0x10);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->esi, ts->eax);
	game::sub_57E480(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->edx);
	game::sub_57E480(ts, mv);
	add(&ts->esp, 0x24);
	xor_(&ts->bl, ts->bl);
	cmp(&ts->eflags, ts->esi, 0x1);
	mov(&ts->edi, 0x9854ED75);
	if (!ts->eflags.zero) {
        goto loc_4C657D;
    }
	mov(mv, &ts->eax, x86::mem(0x836498, 4));
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x68, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(&ts->edi, 0x8867412D);
	if (ts->eflags.zero) {
        goto loc_4C6583;
    }
	mov(&ts->ecx, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x8, 4), 0x0);
	goto loc_4C6583;

loc_4C657D:
	cmp(&ts->eflags, ts->eax, 0x1);
	setz(ts->eflags, &ts->bl);

loc_4C6583:
	mov(mv, &ts->edx, x86::mem(0x836498, 4));
	mov(mv, x86::mem(0x844AD9, 1), ts->bl);
	mov(mv, x86::mem(ts->edx + 0x6, 1), ts->bl);
	mov(mv, &ts->eax, x86::mem(0x836498, 4));
	mov(mv, x86::mem(ts->eax + 0x18, 4), 0x0);
	mov(mv, &ts->ecx, x86::mem(0x836498, 4));
	mov(mv, x86::mem(ts->ecx + 0x8, 1), 0x0);
	mov(mv, &ts->edx, x86::mem(0x836498, 4));
	mov(mv, x86::mem(ts->edx + 0xC, 1), 0x0);
	mov(mv, &ts->eax, x86::mem(0x836498, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x5C, 4));
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, 0x0);
	game::sub_6FBFCC(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x836498, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x64, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C65DD;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);

loc_4C65DD:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0xC);
}

void sub_4C65F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x5C);
	mov(&ts->edi, ts->ecx);
	game::j__malloc(ts, mv);
	xor_(&ts->esi, ts->esi);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4C660D;
    }
	mov(&ts->ecx, ts->eax);
	game::sub_4AEC40(ts, mv);
	goto loc_4C660F;

loc_4C660D:
	xor_(&ts->eax, ts->eax);

loc_4C660F:
	mov(mv, x86::mem(ts->edi + 0x8, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x30, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x34, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x38, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x3C, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x40, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x44, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x48, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x4C, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x50, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x54, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x58, 4), ts->esi);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(0x7F6658, 4));
	mov(mv, x86::mem(ts->eax + 0x54, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x8, 4));
	mov(mv, x86::mem(ts->eax + 0x58, 4), 0x835BB8);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->ecx + 0x4C, 4), 0x8);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x8, 4));
	mov(mv, x86::mem(ts->edx + 0x50, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x8, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0xC);
}

void sub_4C6690(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x10, 4));
	push(mv, &ts->esp, ts->ebx);
	and_(&ts->eax, ts->edx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->ecx + 0x18, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x14, 4));
	and_(&ts->edx, ts->esi);
	or_(&ts->eax, ts->edx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->ecx + 0x1C, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_4C66B3;
    }
	mov(&ts->bl, 0x1);
	goto loc_4C66B5;

loc_4C66B3:
	xor_(&ts->bl, ts->bl);

loc_4C66B5:
	mov(mv, &ts->esi, x86::mem(ts->ecx, 4));
	game::Iostream_init__Iostream_init_void_(ts, mv);
	mov(&ts->edi, ts->eax);
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4C66DF;
    }

loc_4C66C2:
	test(&ts->eflags, ts->bl, ts->bl);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C66D1;
    }
	game::sub_50CA50(ts, mv);
	goto loc_4C66D6;

loc_4C66D1:
	game::sub_50CA00(ts, mv);

loc_4C66D6:
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_4C66C2;
    }

loc_4C66DF:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x8);
}

void sub_4C66F0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x18);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x24, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x24, 4));
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x2C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	game::sub_4901D0(ts, mv);
	movsx(mv, &ts->ecx, x86::mem(ts->eax + 0x46, 2));
	mov(mv, x86::mem(ts->esp + 0x30, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x34, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x38, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->edx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	sub(&ts->esp, 0x8);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	game::sub_4A9D60(ts, mv);
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x48, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x20, 4));
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	mov(mv, x86::mem(ts->esp + 0x30, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x38, 4));
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x3C, 4));
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x40, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	add(&ts->esp, 0x14);
	fsub(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x1C, 4));
	push(mv, &ts->esp, 0x0);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	or_(&ts->eax, 0x400000);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(&ts->ecx, ts->edi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->edi + 0x1C, 4), ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	game::sub_517DB0(ts, mv);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_517C10(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x18);
	retn(mv, &ts->esp, 0x18);
}

void sub_4C67E0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x18);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x24, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x24, 4));
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x2C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	game::sub_4901D0(ts, mv);
	movsx(mv, &ts->ecx, x86::mem(ts->eax + 0x44, 2));
	mov(mv, x86::mem(ts->esp + 0x30, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x34, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x38, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->edx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	sub(&ts->esp, 0x8);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	game::sub_4A9D60(ts, mv);
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	add(&ts->esp, 0x14);
	push(mv, &ts->esp, 0x0);
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x4C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x20, 4));
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x38, 4));
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ecx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x3C, 4));
	fsub(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x40, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x1C, 4));
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	or_(&ts->eax, 0x400000);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	mov(mv, x86::mem(ts->edi + 0x1C, 4), ts->eax);
	game::sub_517DB0(ts, mv);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_517C10(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x18);
	retn(mv, &ts->esp, 0x18);
}

void sub_4C68D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x20, 4));
	add(&ts->ebx, 0x7F0);
	add(&ts->edi, 0x1F0);
	cmp(&ts->eflags, ts->edx, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4C6914;
    }
	mov(mv, &ts->dl, x86::mem(ts->eax + 0x900, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	if (!ts->eflags.zero) {
        goto loc_4C6914;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x968, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C6914;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x58, 4));
	goto loc_4C6939;

loc_4C6914:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7FBED8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784258, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_4C6933;
    }
	mov(mv, &ts->edx, x86::mem(0x7FBED8, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edx);
	goto loc_4C693D;

loc_4C6933:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x440, 4));

loc_4C6939:
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);

loc_4C693D:
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x430, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x18, 4));
	and_(&ts->eax, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x1C, 4));
	and_(mv, &ts->edx, x86::mem(ts->ebp + 0x14, 4));
	fabs(&ts->fp, x86::fp_index(0));
	or_(&ts->eax, ts->edx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	if (ts->eflags.zero) {
        goto loc_4C6B4D;
    }
	game::sub_5EA8B0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4C6987;
    }
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7904FC, 4));
	push(mv, &ts->esp, 0x8569A25F);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	game::sub_4FFA80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x5C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	goto loc_4C69A0;

loc_4C6987:
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78426C, 4));
	push(mv, &ts->esp, 0x8569AB44);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	game::sub_4FFA80(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x5C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);

loc_4C69A0:
	game::sub_537BE0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	add(&ts->esp, 0xC);
	game::__ftol2(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x58, 4));
	push(mv, &ts->esp, 0x795AC0);
	push(mv, &ts->esp, ts->eax);
	game::sub_537BE0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x89E7C0, 4));
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4C69F4;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0xC4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_4AA0E0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x30, 4));
	add(&ts->esp, 0xC);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_51CED0(ts, mv);
	add(&ts->esp, 0x8);
	goto loc_4C6A66;

loc_4C69F4:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x788218, 4));
	game::__ftol2(ts, mv);
	mov(&ts->ecx, 0x1);
	sub(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ecx);
	xor_(&ts->eax, ts->eax);
	lea(mv, &ts->ebx, x86::mem(ts->ebp + 0x34, 4));
	goto loc_4C6A20;

loc_4C6A18:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_4C6A20:
	cmp(&ts->eflags, ts->eax, ts->ecx);
	lea(mv, &ts->edi, x86::mem(ts->eax + 0x1, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4C6A3D;
    }
	cmp(&ts->eflags, ts->edi, 0x6);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4C6A33;
    }
	push(mv, &ts->esp, 0xFFC80B0B);
	goto loc_4C6A51;

loc_4C6A33:
	mov(mv, &ts->edx, x86::mem(ts->ebx, 4));
	push(mv, &ts->esp, 0xFFCCF48A);
	push(mv, &ts->esp, ts->edx);
	goto loc_4C6A54;

loc_4C6A3D:
	cmp(&ts->eflags, ts->edi, 0x6);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4C6A4C;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx, 4));
	push(mv, &ts->esp, 0x7DC80B0B);
	push(mv, &ts->esp, ts->eax);
	goto loc_4C6A54;

loc_4C6A4C:
	push(mv, &ts->esp, 0x64CCF48A);

loc_4C6A51:
	mov(mv, &ts->ecx, x86::mem(ts->ebx, 4));
	push(mv, &ts->esp, ts->ecx);

loc_4C6A54:
	game::sub_51D7F0(ts, mv);
	mov(&ts->eax, ts->edi);
	add(&ts->esp, 0x8);
	add(&ts->ebx, 0x4);
	cmp(&ts->eflags, ts->eax, 0x7);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4C6A18;
    }

loc_4C6A66:
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x64, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_4C6ACF;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x434, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x448, 4));
	xor_(&ts->eax, ts->eax);
	goto loc_4C6A80;

loc_4C6A80:
	movsx(mv, &ts->ebx, x86::mem(0x7F66A4, 1));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4C6AB5;
    }
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0xA);
	if (ts->eflags.carry) {
        goto loc_4C6A80;
    }
	mov(&ts->al, 0x58);

loc_4C6A94:
	movsx(&ts->eax, ts->al);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x795ABC);
	push(mv, &ts->esp, ts->edx);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4C6ABE;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x64, 4));
	push(mv, &ts->esp, 0xFFC3C3C3);
	push(mv, &ts->esp, ts->ecx);
	goto loc_4C6AC7;

loc_4C6AB5:
	mov(mv, &ts->al, x86::mem(0x7F66A5, 1));
	goto loc_4C6A94;

loc_4C6ABE:
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x64, 4));
	push(mv, &ts->esp, 0xFFFF8040);
	push(mv, &ts->esp, ts->edx);

loc_4C6AC7:
	game::sub_51D7F0(ts, mv);
	add(&ts->esp, 0x8);

loc_4C6ACF:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x434, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	game::sub_5B5330(ts, mv);
	movsx(&ts->eax, ts->al);
	lea(mv, &ts->ecx, x86::mem(ts->edi + (ts->eax*8), 4));
	add(&ts->eax, ts->ecx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7FBF60, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x28, 4));
	cmp(&ts->eflags, ts->eax, 0x1);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	if (!ts->eflags.zero) {
        goto loc_4C6B11;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x434, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x34, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_594F00(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));

loc_4C6B11:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x434, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_5ECD30(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7FBF5C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4C6B41;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x78, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA50(ts, mv);
	goto loc_4C6B4A;

loc_4C6B41:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x78, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);

loc_4C6B4A:
	add(&ts->esp, 0x4);

loc_4C6B4D:
	mov(mv, &ts->al, x86::mem(ts->ebp + 0xC0, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4C6B6C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x50, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x7C, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x8);

loc_4C6B6C:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);
}

void sub_4C6B80(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x7, 4));
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esp + 0xB, 1), 0x0);
	game::sub_5ECEC0(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x14, 4));
	and_(&ts->eax, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	and_(&ts->ecx, ts->edx);
	or_(&ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4C6CA9;
    }
	mov(mv, &ts->al, x86::mem(ts->esp + 0x7, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C6BF6;
    }
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x28, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x34, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA50(ts, mv);
	goto loc_4C6C28;

loc_4C6BF6:
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x28, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x34, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA00(ts, mv);

loc_4C6C28:
	mov(mv, &ts->al, x86::mem(0x89E7D8, 1));
	add(&ts->esp, 0x18);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C6C3D;
    }
	mov(mv, &ts->eax, x86::mem(0x890108, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C6C66;
    }

loc_4C6C3D:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78E060, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78E064, 4));
	sub(&ts->esp, 0x8);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78E064, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78E060, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->eax);
	goto loc_4C6C8D;

loc_4C6C66:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78E05C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78E058, 4));
	sub(&ts->esp, 0x8);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78E058, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78E05C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->ecx);

loc_4C6C8D:
	mov(&ts->ecx, ts->esi);
	game::sub_4AA160(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x28, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_51CED0(ts, mv);
	add(&ts->esp, 0x8);

loc_4C6CA9:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);
}

void sub_4C6CB0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x20);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x890118, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x24, 4));
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4C6D3B;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x28, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	push(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4C6CE0;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->edx + 0xA, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_4C6CE0;
    }
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4C6CED;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xBD4, 4));
	goto loc_4C6CEF;

loc_4C6CE0:
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4C6CED;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xBD0, 4));
	goto loc_4C6CEF;

loc_4C6CED:
	xor_(&ts->eax, ts->eax);

loc_4C6CEF:
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->esi, x86::mem(ts->edi + 0x34, 4));
	push(mv, &ts->esp, ts->esi);
	game::sub_5F82D0(ts, mv);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_4C6D3A;
    }
	push(mv, &ts->esp, 0x2);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_577240(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x20, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, ts->edx);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0xC);
	mov(&ts->ecx, ts->edi);
	game::sub_4AA740(ts, mv);

loc_4C6D3A:
	pop(mv, &ts->esp, ts->esi);

loc_4C6D3B:
	pop(mv, &ts->esp, ts->edi);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp, 0x4);
}

void sub_4C6D50(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x20);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x28, 4));
	mov(mv, &ts->al, x86::mem(ts->esi + 0xD, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4C6DEF;
    }
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(0x890118, 4));
	mov(&ts->ecx, ts->esi);
	add(&ts->ebx, 0x18);
	game::sub_5EE290(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	sub(mv, &ts->eax, x86::mem(ts->ebx, 4));
	mov(mv, x86::mem(ts->esp + 0x30, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (ts->eflags.parity) {
        goto loc_4C6DAC;
    }
	movsx(mv, &ts->edx, x86::mem(ts->esi + 0x9, 1));
	mov(mv, &ts->eax, x86::mem(ts->esi + (ts->edx*4) + 0x90, 4));
	mov(mv, &ts->edx, x86::mem(0x890118, 4));
	sub(mv, &ts->eax, x86::mem(ts->edx + 0x18, 4));
	goto loc_4C6DC0;

loc_4C6DAC:
	mov(mv, &ts->ebx, x86::mem(0x890118, 4));
	mov(&ts->ecx, ts->esi);
	add(&ts->ebx, 0x18);
	game::sub_5EE290(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	sub(mv, &ts->eax, x86::mem(ts->ebx, 4));

loc_4C6DC0:
	push(mv, &ts->esp, 0x2);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x34, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	game::sub_577240(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x20, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0xC);
	mov(&ts->ecx, ts->edi);
	game::sub_4AA740(ts, mv);
	pop(mv, &ts->esp, ts->ebx);

loc_4C6DEF:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp, 0x4);
}

void sub_4C6E00(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x20);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	mov(mv, &ts->al, x86::mem(ts->ecx + 0xD, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4C6E46;
    }
	game::sub_5EE290(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, 0x2);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x34, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	game::sub_577240(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0xC);
	mov(&ts->ecx, ts->esi);
	game::sub_4AA740(ts, mv);

loc_4C6E46:
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp, 0x4);
}

void sub_4C6E50(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->al, x86::mem(ts->edx + 0xD, 1));
	sub(&ts->esp, 0x20);
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4C6EAC;
    }
	movsx(mv, &ts->eax, x86::mem(ts->edx + 0x9, 1));
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4C6EAC;
    }
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->edx + (ts->eax*4) + 0x90, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->edx + (ts->eax*4) + 0x94, 4));
	push(mv, &ts->esp, 0x2);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x34, 4));
	sub(&ts->edi, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx, 4), ts->edi);
	game::sub_577240(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x20, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, ts->edx);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0xC);
	mov(&ts->ecx, ts->esi);
	game::sub_4AA740(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);

loc_4C6EAC:
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp, 0x4);
}

void sub_4C6EC0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->esi, x86::mem(ts->ecx, 4));
	xor_(&ts->ebx, ts->ebx);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	mov(&ts->ebp, ts->eax);
	add(&ts->edi, 0x1C8);
	goto loc_4C6EE0;

loc_4C6EE0:
	cmp(&ts->eflags, ts->esi, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_4C6F1E;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	mov(mv, x86::mem(ts->edi - 0x4, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	mov(mv, x86::mem(ts->edi, 4), ts->ecx);
	mov(mv, &ts->dl, x86::mem(ts->esi + 0x14, 1));
	mov(mv, x86::mem(ts->edi + 0x4, 1), ts->dl);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x5, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1C, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_512080(ts, mv);
	add(&ts->esp, 0x10);
	mov(mv, x86::mem(ts->edi + 0x28, 4), ts->eax);
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	inc(&ts->ebx);
	add(&ts->edi, 0x30);
	cmp(&ts->eflags, ts->ebx, 0x4);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4C6EE0;
    }

loc_4C6F1E:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_4C6F30(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0xC);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x890118, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->esi);
	game::sub_5EEF60(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C7088;
    }
	mov(mv, &ts->ecx, x86::mem(0x890118, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x24, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4C707C;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebp, 0x1);
	add(&ts->esi, 0x2C);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xBD0);
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_4C6F80:
	cmp(&ts->eflags, ts->ebp, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_4C7058;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ebx, x86::mem(ts->edx + (ts->ecx), 4));
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4C7058;
    }
	mov(mv, &ts->edi, x86::mem(ts->ebx, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4C7058;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C7058;
    }
	mov(mv, x86::mem(ts->esi - 0xC, 4), ts->ebp);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_512080(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->eax);
	movsx(mv, &ts->eax, x86::mem(ts->edi + 0xA, 2));
	add(&ts->esp, 0x4);
	mov(&ts->ecx, 0x89CF48);
	mov(mv, x86::mem(ts->esi + 0x20, 4), ts->eax);
	game::sub_5F00F0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4C6FEF;
    }
	movsx(mv, &ts->ecx, x86::mem(ts->edi + 0xA, 2));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F0220(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C702F;
    }
	add(&ts->eax, 0x12);
	push(mv, &ts->esp, ts->eax);
	goto loc_4C7024;

loc_4C6FEF:
	mov(mv, &ts->edi, x86::mem(ts->edi + 0x14, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0x4, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_4C701D;
    }
	mov(mv, &ts->al, x86::mem(ts->edi + 0x900, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C701D;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x10, 4));
	imul(&ts->ecx, ts->ecx, 0xAB4C);
	add(&ts->ecx, 0x83A9E0);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	push(mv, &ts->esp, ts->eax);
	goto loc_4C7024;

loc_4C701D:
	add(&ts->edi, 0x90C);
	push(mv, &ts->esp, ts->edi);

loc_4C7024:
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->esi);
	game::sub_50C960(ts, mv);
	add(&ts->esp, 0xC);

loc_4C702F:
	mov(&ts->ecx, ts->ebx);
	game::sub_5EE250(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4C7051;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ecx, x86::mem(ts->esi - 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x890118, 4));
	game::sub_5F82D0(ts, mv);
	goto loc_4C7058;

loc_4C7051:
	mov(mv, x86::mem(ts->esi - 0x4, 4), 0x0);

loc_4C7058:
	add(mv, x86::mem(ts->esp + 0x10, 4), 0x4);
	mov(mv, &ts->ecx, x86::mem(0x890118, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x24, 4));
	inc(&ts->ebp);
	lea(mv, &ts->edx, x86::mem(ts->ebp - 0x1, 4));
	add(&ts->esi, 0x34);
	cmp(&ts->eflags, ts->edx, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4C6F80;
    }
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x18, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);

loc_4C707C:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_4AAED0(ts, mv);

loc_4C7088:
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp, 0x4);
}

void sub_4C7090(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x2C);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x4, 4));
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x434, 4));
	mov(mv, x86::mem(ts->esi + 0x84, 4), ts->ecx);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	game::sub_5ECD70(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4C70D9;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x8C, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C70E0;
    }
	mov(&ts->ecx, ts->edi);
	game::sub_5ECD90(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x90, 4));
	mov(mv, x86::mem(ts->esi + 0x8C, 1), 0x1);
	goto loc_4C70E0;

loc_4C70D9:
	mov(mv, x86::mem(ts->esi + 0x8C, 1), 0x0);

loc_4C70E0:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x14, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x4, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_4C711A;
    }
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x900, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_4C711A;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x968, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C711A;
    }
	mov(mv, &ts->cl, x86::mem(0x89E7D8, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_4C711A;
    }
	mov(mv, &ts->ecx, x86::mem(0x890108, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4C711A;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x58, 4));
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edx);
	goto loc_4C7142;

loc_4C711A:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7FBED8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784258, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_4C7138;
    }
	mov(mv, &ts->eax, x86::mem(0x7FBED8, 4));
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	goto loc_4C7142;

loc_4C7138:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x440, 4));
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->ecx);

loc_4C7142:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x14, 4));
	push(mv, &ts->esp, ts->ebx);
	and_(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	and_(&ts->ecx, ts->edi);
	or_(&ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4C7A6C;
    }
	mov(mv, &ts->al, x86::mem(0x83AA1A, 1));
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x430, 4));
	cmp(&ts->eflags, ts->al, 0x1);
	mov(mv, &ts->al, x86::mem(0x89E7E6, 1));
	if (!ts->eflags.zero) {
        goto loc_4C7190;
    }
	test(&ts->eflags, ts->al, ts->al);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7904FC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	if (!ts->eflags.zero) {
        goto loc_4C71DB;
    }
	push(mv, &ts->esp, 0x8569A25F);
	game::sub_4FFA80(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x78, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	goto loc_4C71AD;

loc_4C7190:
	test(&ts->eflags, ts->al, ts->al);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78426C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	if (!ts->eflags.zero) {
        goto loc_4C71DB;
    }
	push(mv, &ts->esp, 0x8569AB44);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x78, 4));
	push(mv, &ts->esp, ts->eax);

loc_4C71AD:
	game::sub_537BE0(ts, mv);
	mov(mv, &ts->al, x86::mem(0x89E7E6, 1));
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C71DB;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	game::__ftol2(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x7C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x795AC0);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0xC);
	goto loc_4C71F0;

loc_4C71DB:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x7C, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x78, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x8);

loc_4C71F0:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x20, 4));
	mov(mv, &ts->ecx, x86::mem(0x89E7C0, 4));
	add(&ts->eax, 0x1F0);
	cmp(&ts->eflags, ts->ecx, 0x1);
	push(mv, &ts->esp, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_4C722D;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	add(&ts->ecx, 0x7F0);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_4AB210(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_51CED0(ts, mv);
	add(&ts->esp, 0x8);
	goto loc_4C728F;

loc_4C722D:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78821C, 4));
	game::__ftol2(ts, mv);
	mov(&ts->ebx, ts->eax);
	xor_(&ts->eax, ts->eax);
	lea(mv, &ts->ebp, x86::mem(ts->esi + 0x40, 4));

loc_4C7246:
	cmp(&ts->eflags, ts->eax, ts->ebx);
	lea(mv, &ts->edi, x86::mem(ts->eax + 0x1, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4C7264;
    }
	cmp(&ts->eflags, ts->edi, 0xA);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4C7259;
    }
	push(mv, &ts->esp, 0xFFC80B0B);
	goto loc_4C7279;

loc_4C7259:
	mov(mv, &ts->edx, x86::mem(ts->ebp, 4));
	push(mv, &ts->esp, 0xFFCCF48A);
	push(mv, &ts->esp, ts->edx);
	goto loc_4C727D;

loc_4C7264:
	cmp(&ts->eflags, ts->edi, 0xA);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4C7274;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp, 4));
	push(mv, &ts->esp, 0x7DC80B0B);
	push(mv, &ts->esp, ts->eax);
	goto loc_4C727D;

loc_4C7274:
	push(mv, &ts->esp, 0x64CCF48A);

loc_4C7279:
	mov(mv, &ts->ecx, x86::mem(ts->ebp, 4));
	push(mv, &ts->esp, ts->ecx);

loc_4C727D:
	game::sub_51D7F0(ts, mv);
	mov(&ts->eax, ts->edi);
	add(&ts->esp, 0x8);
	add(&ts->ebp, 0x4);
	cmp(&ts->eflags, ts->eax, 0xC);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4C7246;
    }

loc_4C728F:
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->edi, x86::mem(ts->ebx + 0x20, 4));
	mov(&ts->ecx, ts->ebx);
	game::sub_5ECEA0(ts, mv);
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4C7310;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x8B, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C7310;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x1F4, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4C7310;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x8E, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C72E6;
    }
	mov(mv, &ts->edx, x86::mem(0x8651AC, 4));
	mov(mv, x86::mem(ts->esi + 0x94, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x8E, 1), 0x1);

loc_4C72E6:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x8D, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C7341;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x28, 4));
	mov(&ts->ebp, 0x1);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x78F568);
	push(mv, &ts->esp, ts->eax);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);
	mov(mv, x86::mem(ts->esi + 0x8D, 1), 0x1);
	goto loc_4C7346;

loc_4C7310:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x8D, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4C7341;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x28, 4));
	mov(&ts->ebp, 0x1);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x78F9D4);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);
	mov(mv, x86::mem(ts->esi + 0x8D, 1), 0x0);
	mov(mv, x86::mem(ts->esi + 0x8E, 1), 0x0);
	goto loc_4C7346;

loc_4C7341:
	mov(&ts->ebp, 0x1);

loc_4C7346:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x70, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_4C73B6;
    }
	mov(mv, &ts->edi, x86::mem(ts->ebx + 0x448, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x84, 4));
	xor_(&ts->eax, ts->eax);
	goto loc_4C7360;

loc_4C7360:
	movsx(mv, &ts->ebp, x86::mem(0x7F66A4, 1));
	cmp(&ts->eflags, ts->ecx, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_4C7397;
    }
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0xA);
	if (ts->eflags.carry) {
        goto loc_4C7360;
    }
	mov(&ts->al, 0x58);

loc_4C7374:
	movsx(&ts->eax, ts->al);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x795ABC);
	push(mv, &ts->esp, ts->edx);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4C73A0;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x98, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x70, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	goto loc_4C73A9;

loc_4C7397:
	mov(mv, &ts->al, x86::mem(0x7F66A5, 1));
	goto loc_4C7374;

loc_4C73A0:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x70, 4));
	push(mv, &ts->esp, 0xFFFF8000);
	push(mv, &ts->esp, ts->eax);

loc_4C73A9:
	game::sub_51D7F0(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->ebp, 0x1);

loc_4C73B6:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4C7541;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.parity) {
        goto loc_4C7541;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x88, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C754F;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x434, 4));
	cmp(mv, &ts->eflags, ts->ecx, x86::mem(ts->esi + 0x80, 4));
	if (ts->eflags.zero) {
        goto loc_4C7541;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.parity) {
        goto loc_4C7424;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x74, 4));
	push(mv, &ts->esp, 0x27D2DD45);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	goto loc_4C7473;

loc_4C7424:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x74, 4));
	push(mv, &ts->esp, 0x598B065);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->ecx, 0x83A9D0);
	game::sub_5030C0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4C7473;
    }
	mov(mv, &ts->eax, x86::mem(0x890118, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C7473;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), 0x4);
	if (!ts->eflags.zero) {
        goto loc_4C7473;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0xA5, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C7473;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ebx + 0x434, 4), ts->ebp);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4C7473;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xA6, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_4C7473;
    }
	mov(mv, x86::mem(ts->esi + 0xA6, 1), 0x0);

loc_4C7473:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x74, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x790968);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51CF70(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x74, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0x10);
	mov(mv, x86::mem(ts->esi + 0x88, 1), 0x1);

loc_4C7495:
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x40, 4));

loc_4C7499:
	mov(&ts->ecx, ts->ebx);
	game::sub_5ECE20(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x89, 1));
	if (ts->eflags.zero) {
        goto loc_4C7591;
    }
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C7595;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x74, 4));
	push(mv, &ts->esp, 0x75941DC1);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x74, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x790968);
	push(mv, &ts->esp, ts->eax);
	game::sub_51CF70(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x74, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0x18);
	mov(&ts->ecx, 0x83A9D0);
	mov(mv, x86::mem(ts->esi + 0x89, 1), 0x1);
	game::sub_5030C0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4C75CA;
    }
	mov(mv, &ts->eax, x86::mem(0x890118, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C75CA;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), 0x4);
	if (!ts->eflags.zero) {
        goto loc_4C76FF;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0xA5, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C75CA;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ebx + 0x434, 4), ts->ebp);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4C75CA;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xA6, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_4C75CA;
    }
	mov(mv, x86::mem(ts->esi + 0xA6, 1), 0x0);
	goto loc_4C75CA;

loc_4C7541:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x88, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4C7495;
    }

loc_4C754F:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x74, 4));
	push(mv, &ts->esp, 0x790968);
	push(mv, &ts->esp, ts->eax);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C7495;
    }
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x40, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x58, 4));
	cmp(&ts->eflags, ts->eax, 0x6);
	if (ts->eflags.zero) {
        goto loc_4C7580;
    }
	cmp(&ts->eflags, ts->eax, 0x7);
	if (ts->eflags.zero) {
        goto loc_4C7580;
    }
	mov(mv, x86::mem(ts->esi + 0x88, 1), 0x0);

loc_4C7580:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x74, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);
	goto loc_4C7499;

loc_4C7591:
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4C75CA;
    }

loc_4C7595:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x74, 4));
	push(mv, &ts->esp, 0x790968);
	push(mv, &ts->esp, ts->edx);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C75CA;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x58, 4));
	cmp(&ts->eflags, ts->eax, 0x6);
	if (ts->eflags.zero) {
        goto loc_4C75BE;
    }
	cmp(&ts->eflags, ts->eax, 0x7);
	if (ts->eflags.zero) {
        goto loc_4C75BE;
    }
	mov(mv, x86::mem(ts->esi + 0x89, 1), 0x0);

loc_4C75BE:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x74, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);

loc_4C75CA:
	mov(mv, &ts->ecx, x86::mem(0x890118, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx, 4), 0x4);
	if (!ts->eflags.zero) {
        goto loc_4C76FF;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x80, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esi + 0x84, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4C76FF;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C76FF;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x88, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C76FF;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x89, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C76FF;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (ts->eflags.parity) {
        goto loc_4C7659;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x8A, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C7659;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x74, 4));
	push(mv, &ts->esp, 0x2303D76C);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x74, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x790968);
	push(mv, &ts->esp, ts->eax);
	game::sub_51CF70(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x74, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA50(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x8A, 1), 0x1);
	goto loc_4C76A1;

loc_4C7659:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4C76A4;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x8B, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C76A4;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x74, 4));
	push(mv, &ts->esp, 0x27D75CD8);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x74, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x790968);
	push(mv, &ts->esp, ts->eax);
	game::sub_51CF70(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x74, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA50(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x8B, 1), 0x1);

loc_4C76A1:
	add(&ts->esp, 0x18);

loc_4C76A4:
	mov(&ts->ecx, 0x83A9D0);
	game::sub_5030C0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4C777D;
    }
	mov(mv, &ts->eax, x86::mem(0x890118, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C777D;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), 0x4);
	if (!ts->eflags.zero) {
        goto loc_4C777D;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0xA5, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C777D;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ebx + 0x434, 4), ts->ebp);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4C777D;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xA6, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_4C777D;
    }
	mov(mv, x86::mem(ts->esi + 0xA6, 1), 0x0);
	goto loc_4C777D;

loc_4C76FF:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x8A, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4C773E;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x74, 4));
	push(mv, &ts->esp, 0x790968);
	push(mv, &ts->esp, ts->edx);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C773E;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x58, 4));
	cmp(&ts->eflags, ts->eax, 0x6);
	if (ts->eflags.zero) {
        goto loc_4C7732;
    }
	cmp(&ts->eflags, ts->eax, 0x7);
	if (ts->eflags.zero) {
        goto loc_4C7732;
    }
	mov(mv, x86::mem(ts->esi + 0x8A, 1), 0x0);

loc_4C7732:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x74, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);

loc_4C773E:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x8B, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4C777D;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x74, 4));
	push(mv, &ts->esp, 0x790968);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C777D;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x58, 4));
	cmp(&ts->eflags, ts->eax, 0x6);
	if (ts->eflags.zero) {
        goto loc_4C7771;
    }
	cmp(&ts->eflags, ts->eax, 0x7);
	if (ts->eflags.zero) {
        goto loc_4C7771;
    }
	mov(mv, x86::mem(ts->esi + 0x8B, 1), 0x0);

loc_4C7771:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x74, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);

loc_4C777D:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x10, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x80, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	mov(mv, x86::mem(ts->esp + 0x40, 4), 0x0);
	game::sub_5B5330(ts, mv);
	movsx(&ts->eax, ts->al);
	lea(mv, &ts->ecx, x86::mem(ts->edi + (ts->eax*8), 4));
	add(&ts->eax, ts->ecx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7FBF60, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x28, 4));
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_4C77D7;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x34, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edx);
	game::sub_594F20(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x80, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x34, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4C, 4));
	game::sub_594F00(ts, mv);

loc_4C77D7:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x795AE8, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4C77F2;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x43FA0000);
	goto loc_4C77F6;

loc_4C77F2:
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));

loc_4C77F6:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x80, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->ebx);
	game::sub_5ECD30(ts, mv);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->esp + 0x2C, 4), 0x437F0000);
	mov(mv, x86::mem(ts->esp + 0x30, 4), 0x0);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	mov(mv, x86::mem(ts->esp + 0x34, 4), 0x43000000);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	mov(mv, x86::mem(ts->esp + 0x38, 4), 0x43400000);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (ts->eflags.parity) {
        goto loc_4C784C;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_4C7857;
    }

loc_4C784C:
	mov(&ts->ecx, ts->ebx);
	game::sub_5ECD70(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4C7878;
    }

loc_4C7857:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x9C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_51D7F0(ts, mv);
	add(&ts->esp, 0xC);
	goto loc_4C7A6B;

loc_4C7878:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7842A0, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (ts->eflags.parity) {
        goto loc_4C78D2;
    }
	cmp(mv, &ts->eflags, x86::mem(0x89E7C0, 4), ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_4C78A2;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, 0xFF800000);
	push(mv, &ts->esp, ts->eax);
	game::sub_51D7F0(ts, mv);
	add(&ts->esp, 0x8);

loc_4C78A2:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0x795ADC);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C7A5F;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x795ADC);
	push(mv, &ts->esp, ts->edx);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);
	goto loc_4C7A5F;

loc_4C78D2:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4C7974;
    }
	cmp(mv, &ts->eflags, x86::mem(0x89E7C0, 4), ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_4C7900;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, 0xFF00FF00);
	push(mv, &ts->esp, ts->eax);
	game::sub_51D7F0(ts, mv);
	add(&ts->esp, 0x8);

loc_4C7900:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0x795AD0);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C7927;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x795AD0);
	push(mv, &ts->esp, ts->edx);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);

loc_4C7927:
	mov(&ts->ecx, 0x83A9D0);
	game::sub_5030C0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4C7A5F;
    }
	mov(mv, &ts->eax, x86::mem(0x890118, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C7A5F;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), 0x4);
	if (!ts->eflags.zero) {
        goto loc_4C7A5F;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ebx + 0x434, 4), ts->ebp);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4C7A5F;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0xA5, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_4C7A5F;
    }
	mov(mv, x86::mem(ts->esi + 0xA5, 1), 0x0);
	goto loc_4C7A5F;

loc_4C7974:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x434, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C7A5F;
    }
	cmp(mv, &ts->eflags, x86::mem(0x89E7C0, 4), ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_4C79EC;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x9C, 4));
	mov(&ts->ecx, ts->eax);
	shr(&ts->ecx, 0x18);
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x40, 4), ts->ecx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4C79A7;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78454C, 4));

loc_4C79A7:
	movzx(mv, &ts->edx, x86::mem(ts->esi + 0x9E, 1));
	movzx(mv, &ts->ecx, x86::mem(ts->esi + 0x9D, 1));
	mov(mv, x86::mem(ts->esp + 0x40, 4), ts->edx);
	and_(&ts->eax, 0xFF);
	test(&ts->eflags, ts->eax, ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	mov(mv, x86::mem(ts->esp + 0x40, 4), ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	mov(mv, x86::mem(ts->esp + 0x40, 4), ts->eax);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4C79E8;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78454C, 4));

loc_4C79E8:
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));

loc_4C79EC:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0x795AC4);
	push(mv, &ts->esp, ts->edx);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C7A13;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x795AC4);
	push(mv, &ts->esp, ts->eax);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);

loc_4C7A13:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	fdivp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_4AB0B0(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(0x89E7C0, 4), ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_4C7A5F;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	game::sub_4A9E30(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51D7F0(ts, mv);
	add(&ts->esp, 0x8);

loc_4C7A5F:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0x4);

loc_4C7A6B:
	pop(mv, &ts->esp, ts->ebp);

loc_4C7A6C:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x84, 4));
	mov(mv, x86::mem(ts->esi + 0x80, 4), ts->eax);
	mov(mv, &ts->al, x86::mem(ts->esi + 0xA4, 1));
	test(&ts->eflags, ts->al, ts->al);
	pop(mv, &ts->esp, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4C7A98;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x28, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x8);

loc_4C7A98:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x2C);
	retn(mv, &ts->esp, 0x4);
}

void sub_4C7AA0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x14, 4));
	and_(&ts->eax, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	and_(&ts->ecx, ts->edx);
	or_(&ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4C7B1A;
    }
	cmp(mv, &ts->eflags, x86::mem(0x89E7C0, 4), 0x1);
	push(mv, &ts->esp, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4C7AF0;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, 0x40A00000);
	push(mv, &ts->esp, 0x42D20000);
	push(mv, &ts->esp, 0x3F800000);
	game::sub_5ECCD0(ts, mv);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_4C66F0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4C7AF0:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x4, 4));
	push(mv, &ts->esp, 0x41C80000);
	push(mv, &ts->esp, 0x41C80000);
	push(mv, &ts->esp, 0x3F800000);
	game::sub_5ECCD0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_4C66F0(ts, mv);

loc_4C7B1A:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4C7B20(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x14, 4));
	and_(&ts->eax, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	and_(&ts->ecx, ts->edx);
	or_(&ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4C7E11;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x40, 4));
	game::sub_5925B0(ts, mv);
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.parity) {
        goto loc_4C7B74;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x24, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4C7B74:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.parity) {
        goto loc_4C7CB1;
    }
	cmp(mv, &ts->eflags, x86::mem(0x89E7C0, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_4C7C40;
    }
	mov(mv, &ts->al, x86::mem(0x89E7D8, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C7BA8;
    }
	mov(mv, &ts->eax, x86::mem(0x890108, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C7BE2;
    }

loc_4C7BA8:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xC1100000);
	push(mv, &ts->esp, 0x42340000);
	push(mv, &ts->esp, 0x3F800000);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_4C66F0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4C7BE2:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x24, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA50(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x795AF0, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x28, 4));
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(0x795AF0, 4));
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(0x795AEC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51CED0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x2C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_51D7F0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7842A0, 4));
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->esi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8364B0, 4));
	retn(mv, &ts->esp, 0x4);

loc_4C7C40:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x24, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->al, x86::mem(0x89E7D8, 1));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C7C67;
    }
	mov(mv, &ts->eax, x86::mem(0x890108, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C7C8C;
    }

loc_4C7C67:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x42800000);
	push(mv, &ts->esp, 0x42800000);
	push(mv, &ts->esp, 0x3F800000);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_4C66F0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4C7C8C:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x42820000);
	push(mv, &ts->esp, 0x42820000);
	push(mv, &ts->esp, 0x3F800000);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	push(mv, &ts->esp, ts->eax);
	game::sub_4C67E0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4C7CB1:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x24, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x89E7C0, 4));
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, 0x1);
	mov(mv, &ts->al, x86::mem(0x89E7D8, 1));
	if (!ts->eflags.zero) {
        goto loc_4C7D87;
    }
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C7CE6;
    }
	mov(mv, &ts->eax, x86::mem(0x890108, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C7D35;
    }

loc_4C7CE6:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xC1100000);
	push(mv, &ts->esp, 0x42340000);
	push(mv, &ts->esp, 0x3F800000);
	push(mv, &ts->esp, 0x3F800000);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_4C66F0(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xC1100000);
	push(mv, &ts->esp, 0x42340000);

loc_4C7D13:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, 0x3F800000);
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x24, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_4C66F0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4C7D35:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x28, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x795AF0, 4));
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(0x795AF0, 4));
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(0x795AEC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_51CED0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_51D7F0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7842A0, 4));
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8364B0, 4));
	retn(mv, &ts->esp, 0x4);

loc_4C7D87:
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C7D94;
    }
	mov(mv, &ts->eax, x86::mem(0x890108, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C7DC6;
    }

loc_4C7D94:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x42800000);
	push(mv, &ts->esp, 0x42800000);
	push(mv, &ts->esp, 0x3F800000);
	push(mv, &ts->esp, 0x3F800000);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_4C66F0(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x42800000);
	push(mv, &ts->esp, 0x42800000);
	goto loc_4C7D13;

loc_4C7DC6:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x42820000);
	push(mv, &ts->esp, 0x42820000);
	push(mv, &ts->esp, 0x3F800000);
	push(mv, &ts->esp, 0x3F800000);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_4C67E0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x42820000);
	push(mv, &ts->esp, 0x42820000);
	push(mv, &ts->esp, 0x3F800000);
	push(mv, &ts->esp, ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	mov(&ts->ecx, ts->esi);
	push(mv, &ts->esp, ts->eax);
	game::sub_4C67E0(ts, mv);

loc_4C7E11:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4C7E20(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x18, 4), 0x0);
	mov(mv, &ts->ecx, x86::mem(0x864624, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0xC, 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*2), 4));
	shl(&ts->eax, 0x4);
	mov(mv, &ts->dl, x86::mem(ts->eax + (ts->ecx) + 0x6, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	setnz(ts->eflags, &ts->dl);
	mov(mv, x86::mem(ts->esi + 0x8, 1), ts->dl);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x24, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x1C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0xC, 4));
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(0x864624, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->eax*2), 4));
	shl(&ts->ecx, 0x4);
	mov(mv, &ts->eax, x86::mem(ts->ecx + (ts->edx), 4));
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x18, 4), 0x0);
	mov(mv, x86::mem(ts->esi + 0x20, 1), 0x0);
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0x14, 4), 0x4);
	setz(ts->eflags, &ts->cl);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x28, 1), ts->cl);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4C7EA0(x86::thread_state* ts, x86::memory_view* mv) {
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.zero) {
        goto loc_4C7EDD;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.zero) {
        goto loc_4C7EDD;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_4C7EF5;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x9A4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4C, 4));
	mov(mv, x86::mem(ts->ecx + 0x64, 4), 0xFFCAF48A);
	retn(mv, &ts->esp, 0xC);

loc_4C7EDD:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto locret_4C7EF5;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x9A4, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x4C, 4));
	mov(mv, x86::mem(ts->eax + 0x64, 4), 0xFFFF8020);

locret_4C7EF5:
	retn(mv, &ts->esp, 0xC);
}

void sub_4C7F00(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	sub(&ts->esp, 0x88);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x14, 4));
	and_(&ts->eax, ts->ebx);
	and_(&ts->ecx, ts->edi);
	or_(&ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4C83C9;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x1C, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4C83CD;
    }
	movsx(mv, &ts->edx, x86::mem(ts->edi + 0x10, 2));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x198, 4));
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0x2A, 4));
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x8, 4));
	mov(mv, x86::mem(ts->ebp - 0x4, 4), ts->edx);
	mov(mv, x86::mem(ts->ebp - 0x8, 4), ts->eax);
	game::sub_577240(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, 0x657A31F6);
	push(mv, &ts->esp, 0xA7806DDB);
	push(mv, &ts->esp, ts->eax);
	game::sub_537D40(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C7FC4;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x28, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C7FC4;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x657A31F6);
	push(mv, &ts->esp, 0xA7806DDB);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C60(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x89E7B0, 4));
	add(&ts->esp, 0x10);
	cmp(&ts->eflags, ts->eax, 0x7);
	push(mv, &ts->esp, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4C7FAA;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, 0x36819D93);
	push(mv, &ts->esp, 0x4E4566E5);
	push(mv, &ts->esp, ts->edx);
	goto loc_4C7FB8;

loc_4C7FAA:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, 0x657A31F6);
	push(mv, &ts->esp, 0x4E4566E5);
	push(mv, &ts->esp, ts->eax);

loc_4C7FB8:
	game::sub_537C60(ts, mv);
	add(&ts->esp, 0x10);
	mov(mv, x86::mem(ts->esi + 0x28, 1), 0x1);

loc_4C7FC4:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x4, 4));
	dec(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0xB);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4C7FD1;
    }
	jmp(x86::mem(0x4C83D8, 4));

loc_4C7FD8:
	mov(&ts->ecx, 0x89E7A0);
	game::sub_401910(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C80C7;
    }
	mov(&ts->ecx, 0x89E7A0);
	game::sub_42FC40(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C80C7;
    }
	mov(mv, &ts->al, x86::mem(0x89E7E6, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4C8045;
    }
	mov(&ts->ecx, 0x89E7A0);
	game::sub_4018F0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4C83CD;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0xC2878EBC);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x794FD8);
	push(mv, &ts->esp, 0xA7806DDB);
	push(mv, &ts->esp, ts->esi);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x14);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_4C8045:
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_4AB4B0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, 0xC2878EBC);
	mov(&ts->edi, ts->eax);
	game::sub_4FFA80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x89E7CC, 4));
	mov(mv, &ts->edx, x86::mem(0x89E7C8, 4));
	add(&ts->edx, ts->ecx);
	add(mv, &ts->edx, x86::mem(0x89E7C4, 4));
	mov(mv, &ts->ecx, x86::mem(0x89E7C0, 4));
	add(&ts->esp, 0x8);
	add(&ts->edx, ts->ecx);
	cmp(&ts->eflags, ts->edx, 0x1);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4C80A7;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, 0x794FD8);
	push(mv, &ts->esp, 0xA7806DDB);
	push(mv, &ts->esp, ts->edx);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x14);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_4C80A7:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x795B20);
	push(mv, &ts->esp, 0xA7806DDB);
	push(mv, &ts->esp, ts->eax);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_4C80C7:
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_4AB4B0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x1D4, 4));
	mov(&ts->ebx, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edx, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x2C, 4));
	game::__ftol2(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->edi, ts->eax);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, 0x13640DE9);
	mov(&ts->ebx, ts->eax);
	game::sub_4FFA80(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x89E7CC, 4));
	mov(mv, &ts->ecx, x86::mem(0x89E7C8, 4));
	add(&ts->ecx, ts->edx);
	add(mv, &ts->ecx, x86::mem(0x89E7C4, 4));
	mov(mv, &ts->edx, x86::mem(0x89E7C0, 4));
	add(&ts->esp, 0x8);
	add(&ts->ecx, ts->edx);
	cmp(&ts->eflags, ts->ecx, 0x1);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4C813D;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, 0x790980);
	push(mv, &ts->esp, 0xA7806DDB);
	push(mv, &ts->esp, ts->eax);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x14);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_4C813D:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x795B14);
	push(mv, &ts->esp, 0xA7806DDB);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_4C815D:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, 0x1B59940C);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_4C8177:
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_4C81F2;
    }
	mov(&ts->ecx, 0x83A9D0);
	game::sub_4AE8D0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C81F2;
    }
	mov(&ts->ecx, 0x83A9D0);
	game::sub_457BA0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C81F2;
    }
	mov(mv, &ts->eax, x86::mem(0x862838, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x85AD40);
	game::sub_500C60(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x5D10F6AF);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0xC2878EBC);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xDC089C64);
	game::sub_4FFA80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x795B04);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0x1C);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_4C81F2:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0xC2878EBC);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xDC089C64);
	game::sub_4FFA80(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x20, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x795B20);
	push(mv, &ts->esp, ts->edx);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0x14);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_4C8229:
	push(mv, &ts->esp, 0xC2878EBC);
	lea(mv, &ts->eax, x86::mem(ts->ebp - 0x48, 4));
	push(mv, &ts->esp, 0x40);
	push(mv, &ts->esp, ts->eax);
	game::sub_4FFA50(ts, mv);
	push(mv, &ts->esp, 0x5D1621B2);
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x88, 4));
	push(mv, &ts->esp, 0x40);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4FFA50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->edx, x86::mem(ts->ebp - 0x48, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->ebp - 0x88, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x795B20);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0x2C);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_4C8272:
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	cmp(&ts->eflags, ts->eax, 0x8);
	if (ts->eflags.zero) {
        goto loc_4C829D;
    }
	cmp(&ts->eflags, ts->eax, 0x200);
	if (ts->eflags.zero) {
        goto loc_4C829D;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, 0x7449D26D);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_4C829D:
	push(mv, &ts->esp, 0x7449D26D);
	lea(mv, &ts->eax, x86::mem(ts->ebp - 0x48, 4));
	push(mv, &ts->esp, 0x40);
	push(mv, &ts->esp, ts->eax);
	game::sub_4FFA50(ts, mv);
	push(mv, &ts->esp, 0xE863DD5C);
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x88, 4));
	push(mv, &ts->esp, 0x40);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4FFA50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	lea(mv, &ts->edx, x86::mem(ts->ebp - 0x88, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->ebp - 0x48, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x795AFC);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0x28);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_4C82E5:
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	cmp(&ts->eflags, ts->eax, 0x8);
	if (ts->eflags.zero) {
        goto loc_4C8310;
    }
	cmp(&ts->eflags, ts->eax, 0x200);
	if (ts->eflags.zero) {
        goto loc_4C8310;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, 0x4BA0D22F);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_4C8310:
	push(mv, &ts->esp, 0x4BA0D22F);
	lea(mv, &ts->eax, x86::mem(ts->ebp - 0x48, 4));
	push(mv, &ts->esp, 0x40);
	push(mv, &ts->esp, ts->eax);
	game::sub_4FFA50(ts, mv);
	push(mv, &ts->esp, 0xE863DD5C);
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x88, 4));
	push(mv, &ts->esp, 0x40);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4FFA50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	lea(mv, &ts->edx, x86::mem(ts->ebp - 0x88, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->ebp - 0x48, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x795AF4);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0x28);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_4C8358:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, 0x668C7453);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_4C8372:
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F0120(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, 0x4A8764A8);
	if (ts->eflags.zero) {
        goto loc_4C839A;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_4C839A:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

def_4C7FD1:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, 0xA074449F);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_4C83C9:
	mov(mv, x86::mem(ts->esi + 0x29, 1), 0x0);

loc_4C83CD:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_4C8410(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	sub(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(&ts->ecx, 0x838590);
	game::sub_501100(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4C8445;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0x155409E8);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0xC);
	goto loc_4C847C;

loc_4C8445:
	mov(&ts->ecx, 0x838590);
	game::sub_501100(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x2);
	if (!ts->eflags.zero) {
        goto loc_4C8470;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0x31139B65);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0xC);
	goto loc_4C847C;

loc_4C8470:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);

loc_4C847C:
	mov(&ts->ecx, 0x838590);
	mov(mv, x86::mem(ts->ebp - 0x1, 1), 0x0);
	game::sub_501100(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C84AC;
    }
	mov(&ts->ecx, 0x838590);
	game::sub_501100(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.zero) {
        goto loc_4C84AC;
    }
	mov(&ts->ecx, 0x838590);
	game::sub_501100(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x2);
	if (!ts->eflags.zero) {
        goto loc_4C84C1;
    }

loc_4C84AC:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x24, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0x8);

loc_4C84C1:
	mov(&ts->ecx, 0x838590);
	game::sub_501100(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x3);
	if (!ts->eflags.zero) {
        goto loc_4C84E9;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->ebp - 0x1, 1), 0x1);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0x8);

loc_4C84E9:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x24, 4), 0x1);
	mov(&ts->bl, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4C8510;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x2C, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x3E4, 4));
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.zero) {
        goto loc_4C850E;
    }
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_4C850E;
    }
	xor_(&ts->bl, ts->bl);
	goto loc_4C8510;

loc_4C850E:
	mov(&ts->bl, 0x1);

loc_4C8510:
	mov(&ts->ecx, 0x838590);
	game::sub_501100(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C854B;
    }
	mov(&ts->ecx, 0x838590);
	game::sub_501100(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.zero) {
        goto loc_4C854B;
    }
	mov(&ts->ecx, 0x838590);
	game::sub_501100(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_4C854B;
    }
	mov(&ts->ecx, 0x838590);
	game::sub_501100(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x3);
	if (!ts->eflags.zero) {
        goto loc_4C854F;
    }

loc_4C854B:
	test(&ts->eflags, ts->bl, ts->bl);
	if (ts->eflags.zero) {
        goto loc_4C8564;
    }

loc_4C854F:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0x8);

loc_4C8564:
	lea(mv, &ts->eax, x86::mem(ts->ebp - 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x838590);
	game::sub_5010C0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebp - 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51D4D0(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x35, 1));
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C85B4;
    }
	mov(mv, &ts->bl, x86::mem(ts->ebp - 0x1, 1));
	test(&ts->eflags, ts->bl, ts->bl);
	if (ts->eflags.zero) {
        goto loc_4C85A9;
    }
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4C85A9;
    }
	push(mv, &ts->esp, 0x12);
	game::sub_458520(ts, mv);

loc_4C85A9:
	mov(mv, x86::mem(ts->esi + 0x35, 1), ts->bl);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_4C85B4:
	mov(mv, &ts->dl, x86::mem(ts->ebp - 0x1, 1));
	mov(mv, x86::mem(ts->esi + 0x35, 1), ts->dl);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_4C85D0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x24);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, &ts->ecx, x86::mem(0x8900AC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x9A4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x34, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->edx + 0x2C, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x1C, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x1D4, 4));
	mov(mv, &ts->ebx, x86::mem(ts->eax, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + 0x44, 4));
	game::__ftol2(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x3C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537BE0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x7C, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x78, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->edi + 0x40, 1));
	lea(mv, &ts->ebp, x86::mem(ts->edi + 0x20, 4));
	add(&ts->esp, 0x14);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4C86B3;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x7C, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x78, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x78, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x7C, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->esi);
	game::sub_4AB780(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->ebp + 0x28, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4C86A8;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x18, 4));
	mov(mv, &ts->edx, x86::mem(0x86518C, 4));
	sub(&ts->edx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78E078, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4C86B3;
    }
	mov(mv, x86::mem(ts->ebp + 0x20, 1), 0x0);
	mov(mv, x86::mem(ts->ebp + 0x18, 4), 0x0);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x7C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x78, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x8);
	goto loc_4C86B3;

loc_4C86A8:
	mov(mv, x86::mem(ts->ebp + 0x20, 1), 0x0);
	mov(mv, x86::mem(ts->ebp + 0x18, 4), 0x0);

loc_4C86B3:
	cmp(mv, &ts->eflags, x86::mem(ts->ebx + 0x14, 4), 0x3);
	if (!ts->eflags.zero) {
        goto loc_4C86F3;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebx + 0x2C, 4));
	game::__ftol2(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x40, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, ts->edx);
	game::sub_537BE0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x40, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, ts->eax);
	game::sub_51CF70(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x44, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0x24);

loc_4C86F3:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x38, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x4, 4));
	mov(mv, &ts->ebx, x86::mem(ts->eax + 0x1C, 4));
	mov(mv, &ts->edi, x86::mem(ts->ebx + 0x1D8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	mov(mv, &ts->ebp, x86::mem(ts->edi + 0x20, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x24, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebp);
	game::__ftol2(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x1D4, 4));
	mov(mv, &ts->edi, x86::mem(ts->edi + 0x1C, 4));
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(ts->esp + 0x3C, 4), ts->eax);
	game::sub_56C7D0(ts, mv);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4C8879;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, ts->eax);
	game::sub_537BE0(ts, mv);
	push(mv, &ts->esp, 0xE03EF7A4);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4FFA50(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->edi + 0x1, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x34, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x3C, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, ts->eax);
	game::sub_537BE0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x7C, 4));
	add(&ts->esp, 0x34);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4C8799;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);

loc_4C8799:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x50, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x790A84);
	push(mv, &ts->esp, ts->edx);
	game::sub_537BE0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x44, 4));
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	mov(mv, x86::mem(ts->esi + 0x7C, 4), ts->edi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4C885E;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4C87E8;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fdivp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x70, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4C87E8;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));

loc_4C87E8:
	mov(mv, &ts->eax, x86::mem(0x86518C, 4));
	sub(mv, &ts->eax, x86::mem(ts->esi + 0x74, 4));
	mov(mv, x86::mem(ts->esp + 0x38, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4C88D0;
    }
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x78, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	setz(ts->eflags, &ts->cl);
	mov(mv, x86::mem(ts->esi + 0x78, 1), ts->cl);
	mov(mv, &ts->edx, x86::mem(0x86518C, 4));
	mov(mv, x86::mem(ts->esi + 0x74, 4), ts->edx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x78, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4C8843;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	push(mv, &ts->esp, 0xFFCAF48A);
	push(mv, &ts->esp, ts->eax);
	game::sub_51D7F0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x24);
	retn(mv, &ts->esp, 0x4);

loc_4C8843:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	push(mv, &ts->esp, 0xFFAA8000);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51D7F0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x24);
	retn(mv, &ts->esp, 0x4);

loc_4C885E:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x54, 4));
	push(mv, &ts->esp, 0xFFAA8000);
	push(mv, &ts->esp, ts->edx);
	game::sub_51D7F0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x24);
	retn(mv, &ts->esp, 0x4);

loc_4C8879:
	cmp(mv, &ts->eflags, ts->edi, x86::mem(ts->esi + 0x7C, 4));
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4C8891;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x50, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, ts->eax);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);

loc_4C8891:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x790A84);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537BE0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x54, 4));
	push(mv, &ts->esp, 0x795B2C);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esi + 0x7C, 4), ts->edi);
	game::sub_537BE0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, 0xCC62C8BE);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	push(mv, &ts->esp, 0xFFAA8000);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51D7F0(ts, mv);
	add(&ts->esp, 0x24);

loc_4C88D0:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x24);
	retn(mv, &ts->esp, 0x4);
}

void sub_4C88E0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x34);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x3C, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ecx, 4));
	cmp(&ts->eflags, ts->edi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->ebp);
	if (ts->eflags.zero) {
        goto loc_4C8AB7;
    }
	game::Iostream_init__Iostream_init_void_(ts, mv);
	cmp(&ts->eflags, ts->edi, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C8AB7;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	xor_(&ts->ebx, ts->ebx);
	goto loc_4C8914;

loc_4C8910:
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x10, 4));

loc_4C8914:
	cmp(mv, &ts->eflags, x86::mem(0x89E7D9, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto loc_4C8928;
    }
	cmp(mv, &ts->eflags, x86::mem(0x890104, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4C89BF;
    }

loc_4C8928:
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0xC, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4C89BF;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x6C, 4));
	mov(mv, &ts->ecx, x86::mem(0x8900AC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x9A4, 4));
	mov(mv, &ts->esi, x86::mem(ts->edx + 0x2C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, x86::mem(ts->esp + 0x4C, 4), ts->eax);
	game::sub_4C7E20(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, x86::mem(ts->esi + 0x20, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->edx);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x8, 1));
	mov(mv, x86::mem(ts->esi + 0x28, 1), ts->cl);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->esi + 0x2C, 4), ts->edx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	mov(mv, x86::mem(ts->esi + 0x30, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x14, 4));
	mov(mv, x86::mem(ts->esi + 0x34, 4), ts->edx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	mov(mv, x86::mem(ts->esi + 0x38, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x1C, 4));
	mov(mv, x86::mem(ts->esi + 0x3C, 4), ts->edx);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x20, 1));
	mov(mv, x86::mem(ts->esi + 0x40, 1), ts->cl);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x24, 4));
	mov(mv, x86::mem(ts->esi + 0x44, 4), ts->edx);
	mov(mv, &ts->al, x86::mem(ts->eax + 0x28, 1));
	mov(mv, x86::mem(ts->esi + 0x48, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0x40, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x38, 4), ts->ebx);
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0x14, 4), 0x4);
	if (!ts->eflags.zero) {
        goto loc_4C8AA9;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x74, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x48, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esi + 0x2C, 4), ts->ecx);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);
	goto loc_4C8AA9;

loc_4C89BF:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x20, 4));
	add(&ts->ebp, 0x20);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_4C89F6;
    }
	mov(&ts->esi, ts->eax);
	cmp(&ts->eflags, ts->esi, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_4C89F6;
    }
	nop();

loc_4C89D0:
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4C89F0;
    }
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4C89F0;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0xC, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esi + 0x14, 4));
	if (!ts->eflags.zero) {
        goto loc_4C89F0;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x24, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (ts->eflags.parity) {
        goto loc_4C8A40;
    }

loc_4C89F0:
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_4C89D0;
    }

loc_4C89F6:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x24, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_4C8AA9;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x24, 4));
	push(mv, &ts->esp, 0x2C);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4C8A84;
    }
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4C8A72;
    }
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->eax);
	game::sub_4C7E20(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp, 4));
	mov(mv, x86::mem(ts->ebp, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ebp);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	goto loc_4C8AA9;

loc_4C8A40:
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0x14, 4), 0x4);
	setz(ts->eflags, &ts->cl);
	mov(mv, x86::mem(ts->esi + 0x28, 1), ts->cl);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x14, 4));
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->edx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x24, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xC, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0x14, 4), 0x3);
	if (ts->eflags.zero) {
        goto loc_4C8A6D;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x1C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->eax);

loc_4C8A6D:
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->ebx);
	goto loc_4C8AA9;

loc_4C8A72:
	mov(mv, &ts->ecx, x86::mem(ts->ebp, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ebp, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ebp);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	goto loc_4C8AA9;

loc_4C8A84:
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4C8A9A;
    }
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->eax);
	game::sub_4C7E20(ts, mv);
	goto loc_4C8A9C;

loc_4C8A9A:
	xor_(&ts->eax, ts->eax);

loc_4C8A9C:
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->ebp + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->ebp);

loc_4C8AA9:
	mov(mv, &ts->edi, x86::mem(ts->edi, 4));
	cmp(mv, &ts->eflags, ts->edi, x86::mem(ts->esp + 0x14, 4));
	if (!ts->eflags.zero) {
        goto loc_4C8910;
    }
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);

loc_4C8AB7:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0x34);
	retn(mv, &ts->esp, 0x4);
}

void sub_4C8AC0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	movsx(mv, &ts->eax, x86::mem(ts->esi, 1));
	sub(&ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_4C8B0F;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4C8B6F;
    }
	mov(mv, &ts->eax, x86::mem(0x86518C, 4));
	sub(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78E080, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4C8B6F;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x1, 1), 0x14);
	if (ts->eflags.zero) {
        goto loc_4C8B07;
    }
	push(mv, &ts->esp, 0x4);
	mov(&ts->ecx, ts->esi);
	game::sub_4AB9F0(ts, mv);

loc_4C8B07:
	mov(mv, x86::mem(ts->esi, 1), 0x4);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);

loc_4C8B0F:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1, 1));
	cmp(&ts->eflags, ts->al, 0x14);
	mov(mv, &ts->ecx, x86::mem(0x78E07C, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(0x86518C, 4));
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4C8B2E;
    }
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x10, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));

loc_4C8B2E:
	cmp(&ts->eflags, ts->al, 0x13);
	if (!ts->eflags.zero) {
        goto loc_4C8B40;
    }
	mov(&ts->ecx, 0x861E7C);
	game::sub_502420(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C8B6E;
    }

loc_4C8B40:
	sub(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4C8B6E;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x1, 1), 0x14);
	if (ts->eflags.zero) {
        goto loc_4C8B6B;
    }
	push(mv, &ts->esp, 0x3);
	mov(&ts->ecx, ts->esi);
	game::sub_4AB9F0(ts, mv);

loc_4C8B6B:
	mov(mv, x86::mem(ts->esi, 1), 0x3);

loc_4C8B6E:
	pop(mv, &ts->esp, ts->edi);

loc_4C8B6F:
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_4C8B80(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	movsx(mv, &ts->eax, x86::mem(ts->esi, 1));
	sub(&ts->eax, 0x2);
	cmp(&ts->eflags, ts->eax, 0x4);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4C8B93;
    }
	push(mv, &ts->esp, ts->edi);

loc_4C8B93:
	jmp(x86::mem(0x4C8DB4, 4));

loc_4C8B9A:
	mov(mv, x86::mem(ts->esi, 1), 0x3);
	movsx(mv, &ts->eax, x86::mem(ts->esi, 1));
	sub(&ts->eax, 0x2);
	cmp(&ts->eflags, ts->eax, 0x4);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_4C8B93;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4C8BAD:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, 0x6FFF0767);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C990(ts, mv);
	movsx(mv, &ts->edx, x86::mem(ts->esi + 0x1, 1));
	push(mv, &ts->esp, ts->edx);
	game::sub_4ABE50(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C990(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->edi, x86::mem(ts->eax + 0xC, 4));
	push(mv, &ts->esp, 0x790AD0);
	push(mv, &ts->esp, ts->edi);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x24);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C8C14;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x790AD0);
	push(mv, &ts->esp, ts->edi);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);

loc_4C8C14:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x14, 4));
	push(mv, &ts->esp, 0x78F568);
	push(mv, &ts->esp, ts->edi);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C8C3C;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F568);
	push(mv, &ts->esp, ts->edi);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);

loc_4C8C3C:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->edi, x86::mem(ts->edx, 4));
	push(mv, &ts->esp, 0x78F6BC);
	push(mv, &ts->esp, ts->edi);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C8C78;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F6BC);
	push(mv, &ts->esp, ts->edi);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);
	goto loc_4C8C78;

loc_4C8C65:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, 0x6FFF0767);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C990(ts, mv);
	add(&ts->esp, 0x8);

loc_4C8C78:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->edi, x86::mem(ts->eax + 0xC, 4));
	push(mv, &ts->esp, 0x790AD0);
	push(mv, &ts->esp, ts->edi);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C8CB8;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x790AD0);
	push(mv, &ts->esp, ts->edi);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);

loc_4C8CB8:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x14, 4));
	push(mv, &ts->esp, 0x78F568);
	push(mv, &ts->esp, ts->edi);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C8CE0;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F568);
	push(mv, &ts->esp, ts->edi);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);

loc_4C8CE0:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->esi, x86::mem(ts->edx, 4));
	push(mv, &ts->esp, 0x78F6BC);
	push(mv, &ts->esp, ts->esi);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C8DAF;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F6BC);
	push(mv, &ts->esp, ts->esi);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4C8D10:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0xEA570722);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C990(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->edi, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, 0x78F9D4);
	push(mv, &ts->esp, ts->edi);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x18);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C8D5F;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F9D4);
	push(mv, &ts->esp, ts->edi);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);

loc_4C8D5F:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0xC, 4));
	push(mv, &ts->esp, 0x78F9D4);
	push(mv, &ts->esp, ts->edi);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C8D87;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F9D4);
	push(mv, &ts->esp, ts->edi);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);

loc_4C8D87:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->esi, x86::mem(ts->edx + 0x14, 4));
	push(mv, &ts->esp, 0x78F9D4);
	push(mv, &ts->esp, ts->esi);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C8DAF;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F9D4);
	push(mv, &ts->esp, ts->esi);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);

loc_4C8DAF:
	pop(mv, &ts->esp, ts->edi);

def_4C8B93:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4C8DD0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	movsx(mv, &ts->eax, x86::mem(ts->esi, 1));
	sub(&ts->eax, 0x2);
	cmp(&ts->eflags, ts->eax, 0x4);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4C8DE3;
    }
	push(mv, &ts->esp, ts->edi);

loc_4C8DE3:
	jmp(x86::mem(0x4C9010, 4));

loc_4C8DEA:
	mov(mv, x86::mem(ts->esi, 1), 0x3);
	movsx(mv, &ts->eax, x86::mem(ts->esi, 1));
	sub(&ts->eax, 0x2);
	cmp(&ts->eflags, ts->eax, 0x4);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_4C8DE3;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4C8DFD:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, 0x6FFF0767);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C990(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->edi, x86::mem(ts->eax + 0xC, 4));
	push(mv, &ts->esp, 0x790AD0);
	push(mv, &ts->esp, ts->edi);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x18);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C8E4D;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x790AD0);
	push(mv, &ts->esp, ts->edi);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);

loc_4C8E4D:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x14, 4));
	push(mv, &ts->esp, 0x78F568);
	push(mv, &ts->esp, ts->edi);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C8E75;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F568);
	push(mv, &ts->esp, ts->edi);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);

loc_4C8E75:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->edi, x86::mem(ts->edx, 4));
	push(mv, &ts->esp, 0x78F6BC);
	push(mv, &ts->esp, ts->edi);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C8EB1;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F6BC);
	push(mv, &ts->esp, ts->edi);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);
	goto loc_4C8EB1;

loc_4C8E9E:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, 0x6FFF0767);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C990(ts, mv);
	add(&ts->esp, 0x8);

loc_4C8EB1:
	movsx(mv, &ts->edx, x86::mem(ts->esi + 0x1, 1));
	push(mv, &ts->esp, ts->edx);
	game::sub_4ABE50(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C990(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->edi, x86::mem(ts->eax + 0xC, 4));
	push(mv, &ts->esp, 0x790AD0);
	push(mv, &ts->esp, ts->edi);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x1C);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C8F08;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x790AD0);
	push(mv, &ts->esp, ts->edi);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);

loc_4C8F08:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x14, 4));
	push(mv, &ts->esp, 0x78F568);
	push(mv, &ts->esp, ts->edi);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C8F30;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F568);
	push(mv, &ts->esp, ts->edi);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);

loc_4C8F30:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->esi, x86::mem(ts->edx, 4));
	push(mv, &ts->esp, 0x78F6BC);
	push(mv, &ts->esp, ts->esi);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C8F57;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F6BC);
	push(mv, &ts->esp, ts->esi);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);

loc_4C8F57:
	mov(&ts->ecx, 0x85EF50);
	game::sub_5012C0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4C8F66:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0xC, 4));
	push(mv, &ts->esp, 0x78F9D4);
	push(mv, &ts->esp, ts->edi);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C8FA6;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F9D4);
	push(mv, &ts->esp, ts->edi);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);

loc_4C8FA6:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->edi, x86::mem(ts->edx + 0x14, 4));
	push(mv, &ts->esp, 0x78F9D4);
	push(mv, &ts->esp, ts->edi);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C8FCE;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F9D4);
	push(mv, &ts->esp, ts->edi);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);

loc_4C8FCE:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->edi, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, 0x78F9D4);
	push(mv, &ts->esp, ts->edi);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C8FF5;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F9D4);
	push(mv, &ts->esp, ts->edi);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);

loc_4C8FF5:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0xEA570722);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C990(ts, mv);
	add(&ts->esp, 0x8);

loc_4C9008:
	pop(mv, &ts->esp, ts->edi);

def_4C8DE3:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4C9030(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C9041;
    }
	mov(mv, x86::mem(ts->esi, 1), 0x0);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4C9041:
	mov(mv, &ts->al, x86::mem(ts->esi, 1));
	cmp(&ts->eflags, ts->al, 0x1);
	if (ts->eflags.zero) {
        goto loc_4C909F;
    }
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4C909F;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_4C8AC0(ts, mv);
	movsx(mv, &ts->eax, x86::mem(ts->esi + 0x1, 1));
	sub(&ts->eax, 0x11);
	if (ts->eflags.zero) {
        goto loc_4C9093;
    }
	sub(&ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_4C9083;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C9073;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_4C8B80(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4C9073:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_4ABA30(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4C9083:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_4ABAF0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4C9093:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_4C8DD0(ts, mv);

loc_4C909F:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4C90B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->bl, ts->bl);
	xor_(&ts->eax, ts->eax);
	lea(mv, &ts->edi, x86::mem(ts->ecx + 0x60, 4));
	mov(&ts->ebp, 0x8);

loc_4C90C0:
	cmp(mv, &ts->eflags, x86::mem(ts->edi, 1), 0x0);
	if (ts->eflags.zero) {
        goto def_4C90D8;
    }
	movsx(mv, &ts->edx, x86::mem(ts->edi + 0x1, 1));
	lea(mv, &ts->esi, x86::mem(ts->edx - 0x1, 4));
	cmp(&ts->eflags, ts->esi, 0x13);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4C90D8;
    }
	movzx(mv, &ts->ecx, x86::mem(ts->esi + 0x4C9130, 1));
	jmp(x86::mem(0x4C9120, 4));

loc_4C90DF:
	mov(&ts->dl, 0x4);
	goto loc_4C90ED;

loc_4C90E3:
	mov(&ts->dl, 0x3);
	goto loc_4C90ED;

loc_4C90E7:
	mov(&ts->dl, 0x2);
	goto loc_4C90ED;

loc_4C90EB:
	mov(&ts->dl, 0x1);

loc_4C90ED:
	cmp(&ts->eflags, ts->dl, ts->bl);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto def_4C90D8;
    }
	movzx(mv, &ts->edx, x86::mem(ts->esi + 0x4C9154, 1));
	mov(&ts->eax, ts->edi);
	jmp(x86::mem(0x4C9144, 4));

loc_4C9101:
	mov(&ts->cl, 0x4);
	goto loc_4C9113;

loc_4C9105:
	mov(&ts->cl, 0x3);
	goto loc_4C9113;

loc_4C9109:
	mov(&ts->cl, 0x2);
	goto loc_4C9113;

loc_4C910D:
	mov(&ts->cl, 0x1);
	goto loc_4C9113;
	xor_(&ts->cl, ts->cl);

loc_4C9113:
	mov(&ts->bl, ts->cl);

def_4C90D8:
	add(&ts->edi, 0x14);
	dec(&ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_4C90C0;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_4C9170(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ebp, ts->ecx);
	mov(mv, &ts->cl, x86::mem(ts->esp + 0xC, 1));
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->ebp + 0x60, 4));
	xor_(&ts->eax, ts->eax);
	mov(&ts->edx, ts->edi);

loc_4C9180:
	cmp(mv, &ts->eflags, x86::mem(ts->edx + 0x1, 1), ts->cl);
	if (!ts->eflags.zero) {
        goto loc_4C918A;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->edx, 1), 0x0);
	if (!ts->eflags.zero) {
        goto loc_4C9195;
    }

loc_4C918A:
	inc(&ts->eax);
	add(&ts->edx, 0x14);
	cmp(&ts->eflags, ts->eax, 0x8);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4C9180;
    }
	goto loc_4C91A0;

loc_4C9195:
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*4), 4));
	lea(mv, &ts->esi, x86::mem(ts->ebp + (ts->eax*4) + 0x60, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_4C91D2;
    }

loc_4C91A0:
	xor_(&ts->eax, ts->eax);
	mov(&ts->edx, ts->edi);

loc_4C91A4:
	cmp(mv, &ts->eflags, x86::mem(ts->edx, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_4C91B8;
    }
	inc(&ts->eax);
	add(&ts->edx, 0x14);
	cmp(&ts->eflags, ts->eax, 0x8);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4C91A4;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x8);

loc_4C91B8:
	pop(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*4), 4));
	lea(mv, &ts->eax, x86::mem(ts->ebp + (ts->edx*4) + 0x60, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->eax + 0x1, 1), ts->cl);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	pop(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(ts->eax, 1), 0x1);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ecx);
	retn(mv, &ts->esp, 0x8);

loc_4C91D2:
	cmp(mv, &ts->eflags, x86::mem(ts->esi, 1), 0x4);
	if (!ts->eflags.zero) {
        goto loc_4C9209;
    }
	mov(mv, x86::mem(ts->esi + 0xC, 1), 0x4);
	mov(mv, x86::mem(ts->esi, 1), 0x2);
	mov(mv, &ts->edx, x86::mem(0x86518C, 4));
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->edx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1, 1));
	cmp(&ts->eflags, ts->al, 0x14);
	if (ts->eflags.zero) {
        goto loc_4C9202;
    }
	cmp(&ts->eflags, ts->al, 0x13);
	if (!ts->eflags.zero) {
        goto loc_4C91F6;
    }
	push(mv, &ts->esp, 0xF);
	goto loc_4C91F8;

loc_4C91F6:
	push(mv, &ts->esp, 0xD);

loc_4C91F8:
	push(mv, &ts->esp, 0xB);
	game::sub_51DE30(ts, mv);
	add(&ts->esp, 0x8);

loc_4C9202:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->eax);

loc_4C9209:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x8);
}

void sub_4C9210(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x28);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x14, 4));
	and_(&ts->eax, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	and_(&ts->ecx, ts->edx);
	or_(&ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4C92F3;
    }
	mov(mv, &ts->eax, x86::mem(0x85B944, 4));
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4C92F3;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784264, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	game::__ftol2(ts, mv);
	push(mv, &ts->esp, 0x4);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	game::sub_577240(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, ts->eax);
	game::sub_537BE0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784560, 4));
	add(&ts->esp, 0xC);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4C92CB;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, 0x795B34);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C92F3;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x795B34);
	push(mv, &ts->esp, ts->edx);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x28);
	retn(mv, &ts->esp, 0x4);

loc_4C92CB:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, 0x790EB0);
	push(mv, &ts->esp, ts->eax);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C92F3;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x790EB0);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);

loc_4C92F3:
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x28);
	retn(mv, &ts->esp, 0x4);
}

void sub_4C9300(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(0x890118, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_5EEF60(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C944A;
    }
	mov(mv, &ts->ecx, x86::mem(0x890118, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x24, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4C9442;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebp, 0x1);
	mov(&ts->esi, 0x83704C);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xBD0);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_4C9350:
	cmp(&ts->eflags, ts->ebp, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_4C9421;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ebx, x86::mem(ts->edx + (ts->ecx), 4));
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4C9421;
    }
	mov(mv, &ts->edi, x86::mem(ts->ebx, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4C9421;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C9421;
    }
	mov(mv, x86::mem(ts->esi - 0xC, 4), ts->ebp);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_512080(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->ecx, 0x89CF48);
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->eax);
	game::sub_5F00F0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4C93B8;
    }
	movsx(mv, &ts->eax, x86::mem(ts->edi + 0xA, 2));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F0220(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C93F8;
    }
	add(&ts->eax, 0x12);
	push(mv, &ts->esp, ts->eax);
	goto loc_4C93ED;

loc_4C93B8:
	mov(mv, &ts->edi, x86::mem(ts->edi + 0x14, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0x4, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_4C93E6;
    }
	mov(mv, &ts->al, x86::mem(ts->edi + 0x900, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C93E6;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x10, 4));
	imul(&ts->ecx, ts->ecx, 0xAB4C);
	add(&ts->ecx, 0x83A9E0);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	push(mv, &ts->esp, ts->eax);
	goto loc_4C93ED;

loc_4C93E6:
	add(&ts->edi, 0x90C);
	push(mv, &ts->esp, ts->edi);

loc_4C93ED:
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->esi);
	game::sub_50C960(ts, mv);
	add(&ts->esp, 0xC);

loc_4C93F8:
	mov(&ts->ecx, ts->ebx);
	game::sub_5EE250(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4C941A;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(0x890118, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->eax, x86::mem(ts->esi - 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_5F82D0(ts, mv);
	goto loc_4C9421;

loc_4C941A:
	mov(mv, x86::mem(ts->esi - 0x4, 4), 0x0);

loc_4C9421:
	add(mv, x86::mem(ts->esp + 0x10, 4), 0x4);
	mov(mv, &ts->ecx, x86::mem(0x890118, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x24, 4));
	inc(&ts->ebp);
	lea(mv, &ts->edx, x86::mem(ts->ebp - 0x1, 4));
	add(&ts->esi, 0x34);
	cmp(&ts->eflags, ts->edx, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4C9350;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);

loc_4C9442:
	add(&ts->esp, 0x8);
	goto loc_4AC040;

loc_4C944A:
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);

loc_4AC040:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(0x890118, 4));
	sub(&ts->esp, 0x3C);
	push(mv, &ts->esp, ts->eax);
	game::sub_5EEF60(ts, mv);
	xor_(&ts->ecx, ts->ecx);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4AC110;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	movsx(mv, &ts->esi, x86::mem(ts->eax + 0xA, 1));
	mov(mv, &ts->eax, x86::mem(0x7F6724, 4));
	push(mv, &ts->esp, ts->edi);
	dec(&ts->esi);
	xor_(&ts->edi, ts->edi);
	dec(&ts->eax);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ecx);
	mov(mv, x86::mem(0x8362C8, 4), ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4AC0CF;
    }
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(0x890118, 4));
	mov(mv, &ts->ebp, x86::mem(ts->ebp + 0x24, 4));
	test(&ts->eflags, ts->ebp, ts->ebp);
	lea(mv, &ts->ebx, x86::mem(ts->esi - 0x1, 4));
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x1, 4));
	mov(mv, x86::mem(ts->esp + 0x50, 4), ts->edi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4AC0CE;
    }

loc_4AC096:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4AC0CE;
    }
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4AC0AA;
    }
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4AC0AA;
    }
	mov(mv, x86::mem(ts->esp + (ts->edi*4) + 0x14, 4), ts->ebx);
	inc(&ts->edi);
	dec(&ts->eax);
	dec(&ts->ebx);

loc_4AC0AA:
	cmp(&ts->eflags, ts->edx, ts->ebp);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4AC0BD;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4AC0BD;
    }
	mov(mv, x86::mem(ts->esp + (ts->ecx*4) + 0x30, 4), ts->edx);
	inc(&ts->ecx);
	dec(&ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	inc(&ts->edx);

loc_4AC0BD:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x50, 4));
	inc(&ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x50, 4), ts->ecx);
	cmp(&ts->eflags, ts->ecx, ts->ebp);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4AC096;
    }

loc_4AC0CE:
	pop(mv, &ts->esp, ts->ebp);

loc_4AC0CF:
	test(&ts->eflags, ts->edi, ts->edi);
	mov(&ts->eax, 0x1);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4AC0F0;
    }
	lea(mv, &ts->edx, x86::mem(ts->esp + (ts->edi*4) + 0xC, 4));
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_4AC0E0:
	mov(mv, &ts->ebx, x86::mem(ts->edx, 4));
	sub(&ts->edx, 0x4);
	mov(mv, x86::mem(0x8362C8, 4), ts->ebx);
	inc(&ts->eax);
	dec(&ts->edi);
	if (!ts->eflags.zero) {
        goto loc_4AC0E0;
    }

loc_4AC0F0:
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4AC0FC;
    }
	mov(mv, x86::mem(0x8362C8, 4), ts->esi);
	inc(&ts->eax);

loc_4AC0FC:
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4AC10D;
    }
	lea(mv, &ts->edi, x86::mem(0x8362C8, 4));
	lea(mv, &ts->esi, x86::mem(ts->esp + 0x2C, 4));
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));

loc_4AC10D:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);

loc_4AC110:
	add(&ts->esp, 0x3C);
	retn(mv, &ts->esp);
}

void sub_4C9450(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x6);
	mov(&ts->edi, 0x8362C8);
	push(mv, &ts->esp, ts->esi);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	game::sub_4C9300(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x1C, 4));
	mov(mv, &ts->eax, x86::mem(0x890118, 4));
	movsx(mv, &ts->edx, x86::mem(ts->ecx + 0xA, 1));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x24, 4));
	lea(mv, &ts->ecx, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->edx);
	game::j__malloc(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x7F6724, 4));
	mov(&ts->ebp, ts->eax);
	add(&ts->esp, 0x8);
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebp);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4C94DE;
    }
	mov(&ts->edx, 0x8362C8);
	mov(&ts->ecx, ts->ebp);
	sub(&ts->edx, ts->ebp);

loc_4C94B0:
	mov(mv, &ts->esi, x86::mem(0x890118, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esi + 0x24, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4C94DE;
    }
	mov(mv, &ts->esi, x86::mem(ts->edx + (ts->ecx), 4));
	imul(&ts->esi, ts->esi, 0x34);
	inc(&ts->eax);
	add(&ts->ecx, 0x4);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x837048, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x790A3C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx - 0x4, 4));
	mov(mv, &ts->esi, x86::mem(0x7F6724, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4C94B0;
    }

loc_4C94DE:
	mov(mv, &ts->ecx, x86::mem(0x890118, 4));
	game::sub_5EEEA0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x7F6724, 4));
	fchs(&ts->fp, x86::fp_index(0));
	xor_(&ts->edx, ts->edx);
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	cmp(&ts->eflags, ts->eax, 0x4);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4C96CC;
    }
	mov(mv, &ts->eax, x86::mem(0x890118, 4));
	mov(mv, &ts->ebx, x86::mem(ts->eax + 0x24, 4));
	mov(&ts->eax, 0x8362C8);
	sub(&ts->eax, ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->eax);
	mov(&ts->eax, 0x8362CC);
	sub(&ts->eax, ts->ebp);
	mov(&ts->edi, 0x3);
	lea(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);

loc_4C9525:
	cmp(&ts->eflags, ts->edx, ts->ebx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4C9754;
    }
	mov(mv, &ts->eax, x86::mem(0x8362C8, 4));
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x14, 4));
	imul(&ts->eax, ts->eax, 0x34);
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x837040, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_4C9589;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx - 0x8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4C955D;
    }
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx - 0x8, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_4C9584;
    }

loc_4C955D:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx - 0x8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4C9589;
    }
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.parity) {
        goto loc_4C9589;
    }
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx - 0x8, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4C9589;
    }

loc_4C9584:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx - 0x8, 4));

loc_4C9589:
	lea(mv, &ts->esi, x86::mem(ts->edi - 0x1, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi - 0x1, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4C9754;
    }
	mov(mv, &ts->eax, x86::mem(0x8362CC, 4));
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x14, 4));
	imul(&ts->eax, ts->eax, 0x34);
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x837040, 4), ts->ebp);
	if (ts->eflags.zero) {
        goto loc_4C95F3;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx - 0x4, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4C95C7;
    }
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx - 0x4, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_4C95EE;
    }

loc_4C95C7:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx - 0x4, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4C95F3;
    }
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.parity) {
        goto loc_4C95F3;
    }
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx - 0x4, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4C95F3;
    }

loc_4C95EE:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx - 0x4, 4));

loc_4C95F3:
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4C976D;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + (ts->eax), 4));
	imul(&ts->eax, ts->eax, 0x34);
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x837040, 4), ts->ebp);
	if (ts->eflags.zero) {
        goto loc_4C964E;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4C9625;
    }
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_4C964A;
    }

loc_4C9625:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4C964E;
    }
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.parity) {
        goto loc_4C964E;
    }
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4C964E;
    }

loc_4C964A:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));

loc_4C964E:
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4C976D;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + (ts->ecx), 4));
	imul(&ts->eax, ts->eax, 0x34);
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x837040, 4), ts->ebp);
	if (ts->eflags.zero) {
        goto loc_4C96AE;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4C9682;
    }
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_4C96A9;
    }

loc_4C9682:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4C96AE;
    }
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.parity) {
        goto loc_4C96AE;
    }
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4C96AE;
    }

loc_4C96A9:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));

loc_4C96AE:
	mov(mv, &ts->eax, x86::mem(0x7F6724, 4));
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x10, 4));
	add(&ts->edi, 0x4);
	add(&ts->edx, 0x4);
	add(&ts->ecx, 0x10);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4C9525;
    }
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));

loc_4C96CC:
	cmp(mv, &ts->eflags, ts->edx, x86::mem(0x7F6724, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4C9773;
    }
	mov(mv, &ts->ecx, x86::mem(0x890118, 4));
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x24, 4));
	mov(&ts->esi, 0x8362C8);
	lea(mv, &ts->ecx, x86::mem(ts->ebp + (ts->edx*4), 4));
	sub(&ts->esi, ts->ebp);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_4C96F0:
	cmp(&ts->eflags, ts->edx, ts->edi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4C9754;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + (ts->esi), 4));
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x14, 4));
	imul(&ts->eax, ts->eax, 0x34);
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x837040, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4C9747;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4C971E;
    }
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_4C9743;
    }

loc_4C971E:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4C9747;
    }
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.parity) {
        goto loc_4C9747;
    }
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4C9747;
    }

loc_4C9743:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));

loc_4C9747:
	mov(mv, &ts->eax, x86::mem(0x7F6724, 4));
	inc(&ts->edx);
	add(&ts->ecx, 0x4);
	cmp(&ts->eflags, ts->edx, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4C96F0;
    }

loc_4C9754:
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));

loc_4C9758:
	push(mv, &ts->esp, ts->ebp);
	game::j__free(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_4C976D:
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x10, 4));
	goto loc_4C9754;

loc_4C9773:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	goto loc_4C9758;
}

void sub_4C9780(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ax, x86::mem(ts->esi + 0x44, 2));
	cmp(&ts->eflags, ts->ax, 0x4);
	if (!ts->eflags.zero) {
        goto loc_4C97AE;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x38, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FFE0);
	push(mv, &ts->esp, ts->eax);
	game::sub_51CF70(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x38, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0x10);
	goto loc_4C985C;

loc_4C97AE:
	cmp(&ts->eflags, ts->ax, 0x3);
	if (!ts->eflags.zero) {
        goto loc_4C985C;
    }
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	cmp(&ts->eflags, ts->eax, 0x4);
	if (!ts->eflags.zero) {
        goto loc_4C97F1;
    }
	cmp(mv, &ts->eflags, x86::mem(0x83AAB4, 4), 0x8);
	if (ts->eflags.zero) {
        goto loc_4C985C;
    }

loc_4C97CF:
	xor_(&ts->al, ts->al);

loc_4C97D1:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x1C, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->edx + 0xA, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_4C9828;
    }
	neg(&ts->al);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0x74B4BF22);
	add(&ts->eax, 0x783202B0);
	goto loc_4C9836;

loc_4C97F1:
	cmp(&ts->eflags, ts->eax, 0x200);
	mov(&ts->ecx, 0x8);
	if (ts->eflags.zero) {
        goto loc_4C9801;
    }
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4C9809;
    }

loc_4C9801:
	cmp(mv, &ts->eflags, x86::mem(0x850088, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4C9816;
    }

loc_4C9809:
	cmp(&ts->eflags, ts->eax, 0x4);
	if (!ts->eflags.zero) {
        goto loc_4C97CF;
    }
	cmp(mv, &ts->eflags, x86::mem(0x83AAB4, 4), ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4C97CF;
    }

loc_4C9816:
	mov(&ts->ecx, 0x83AAB4);
	game::sub_502840(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4C97CF;
    }
	mov(&ts->al, 0x1);
	goto loc_4C97D1;

loc_4C9828:
	neg(&ts->al);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0xB4CA362);
	add(&ts->eax, 0x18B97380);

loc_4C9836:
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x790968);
	push(mv, &ts->esp, ts->edx);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0x18);

loc_4C985C:
	xor_(&ts->eax, ts->eax);
	mov(mv, &ts->ax, x86::mem(ts->esi + 0x44, 2));
	cmp(&ts->eflags, ts->ax, 0x4);
	if (!ts->eflags.carry) {
        goto loc_4C986D;
    }
	inc(&ts->eax);
	mov(mv, x86::mem(ts->esi + 0x44, 2), ts->ax);

loc_4C986D:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4C9880(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x795B40);
	retn(mv, &ts->esp);
}

void sub_4C9890(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4C9880(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4C98A8;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4C98A8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4C98B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, 0x59BFB401);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x1C4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x10, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 8));
	push(mv, &ts->esp, 0x795B50);
	push(mv, &ts->esp, ts->edx);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4C98F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, 0x2DAB24E4);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x1C0, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x10, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 8));
	push(mv, &ts->esp, 0x795B50);
	push(mv, &ts->esp, ts->edx);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4C9930(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, 0x4);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x14, 4));
	push(mv, &ts->esp, ts->edi);
	game::sub_5EE2B0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_577240(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, 0x7A04C109);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0x14);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4C9970(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x774108);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ecx);
	xor_(&ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esi, 4), 0x795B68);
	mov(mv, x86::mem(ts->esi + 0x34, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x38, 4), ts->edi);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, 0x32A2CD8E);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->edi);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->esi + 0x34, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x38, 4), ts->edi);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x8);

loc_774100:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_4C9880;

SEH_4C9970:
	mov(&ts->eax, 0x7DFFFC);
	goto ___CxxFrameHandler;
}

void sub_4C99E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0xD, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4C99F8;
    }
	mov(mv, &ts->ecx, x86::mem(0x86518C, 4));
	mov(mv, x86::mem(ts->esi + 0x34, 4), ts->ecx);

loc_4C99F8:
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x1C, 4));
	game::sub_5EE270(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C9A72;
    }
	cmp(&ts->eflags, ts->eax, 0x7FFFFFFF);
	if (ts->eflags.zero) {
        goto loc_4C9A72;
    }
	mov(mv, &ts->eax, x86::mem(0x86518C, 4));
	sub(mv, &ts->eax, x86::mem(ts->esi + 0x34, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787ADC, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4C9A4D;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x1C, 4));
	game::sub_5EE270(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x86518C, 4));
	sub(mv, &ts->edx, x86::mem(ts->eax, 4));
	mov(mv, x86::mem(ts->esi + 0x38, 4), ts->edx);

loc_4C9A4D:
	push(mv, &ts->esp, 0x4);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x14, 4));
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x38, 4));
	game::sub_577240(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, ts->eax);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);

loc_4C9A72:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, 0x61C9B7A2);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4C9A90(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, 0x4);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x14, 4));
	push(mv, &ts->esp, ts->edi);
	add(&ts->ecx, 0x1A8);
	game::sub_577240(ts, mv);
	mov(mv, &ts->al, x86::mem(0x83AA1A, 1));
	dec(&ts->al);
	neg(&ts->al);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0xFFFFFFD8);
	add(&ts->eax, 0x64);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xC2BE294D);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_50B990(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, ts->edx);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0x1C);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4C9AF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, 0x4);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x14, 4));
	push(mv, &ts->esp, ts->edi);
	add(&ts->ecx, 0x1B4);
	game::sub_577240(ts, mv);
	mov(mv, &ts->al, x86::mem(0x83AA1A, 1));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	dec(&ts->al);
	neg(&ts->al);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0xE3AE057A);
	add(&ts->eax, 0xE591119D);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, ts->edx);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0x14);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4C9B40(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, 0x823B1FD8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x1C8, 4));
	add(&ts->esp, 0x8);
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.zero) {
        goto loc_4C9B73;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));

loc_4C9B73:
	mov(mv, &ts->al, x86::mem(0x83AA1A, 1));
	sub(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->al, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4C9BA5;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x10, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 8));
	push(mv, &ts->esp, 0x795B88);
	push(mv, &ts->esp, ts->edx);
	game::sub_537BE0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	push(mv, &ts->esp, 0x790AF8);
	push(mv, &ts->esp, ts->eax);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);

loc_4C9BA5:
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x790AF4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 8));
	push(mv, &ts->esp, 0x795B88);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537BE0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x14, 4));
	push(mv, &ts->esp, 0xCE8EDAB8);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4C9BE0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edi);
	game::sub_5EE2D0(ts, mv);
	game::__ftol2(ts, mv);
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, 0x7A04C109);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0x14);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4C9C20(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x1D4, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x44, 4));
	push(mv, &ts->esp, 0xDB1A145);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	game::sub_50C900(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	game::__ftol2(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, ts->edx);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0x14);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4C9C70(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x20);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x1D4, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx + 0x40, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784264, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->eax);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x34, 4));
	game::sub_577240(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, 0x58B8DF93);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, ts->eax);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0x14);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp, 0x8);
}

void sub_4C9CE0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x20);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x40, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_4C9CF7;
    }
	mov(mv, x86::mem(ts->esi + 0x40, 4), ts->ebp);

loc_4C9CF7:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4C9D0A;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x40, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x1C, 4));
	mov(mv, x86::mem(ts->esi + 0x44, 4), ts->edx);

loc_4C9D0A:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x18, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x24, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x1C, 4));
	and_(&ts->eax, ts->ebx);
	and_(&ts->ecx, ts->edi);
	or_(&ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4CA00C;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x28, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0x28, 4));
	if (ts->eflags.zero) {
        goto loc_4C9D31;
    }
	lea(mv, &ts->edi, x86::mem(ts->eax - 0x4, 4));
	goto loc_4C9D33;

loc_4C9D31:
	xor_(&ts->edi, ts->edi);

loc_4C9D33:
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4C9D3C;
    }
	lea(mv, &ts->eax, x86::mem(ts->ebx - 0x4, 4));
	goto loc_4C9D3E;

loc_4C9D3C:
	xor_(&ts->eax, ts->eax);

loc_4C9D3E:
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C9D5D;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x44, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x40, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->edi, x86::mem(ts->edi + 0x4, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4C9D31;
    }
	add(&ts->edi, 0xFFFFFFFC);
	goto loc_4C9D33;

loc_4C9D5D:
	mov(mv, &ts->al, x86::mem(0x89E7D8, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C9D73;
    }
	mov(mv, &ts->eax, x86::mem(0x890108, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CA00C;
    }

loc_4C9D73:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x430, 4));
	mov(mv, &ts->al, x86::mem(0x83AA1A, 1));
	mov(&ts->ebx, 0x1);
	cmp(&ts->eflags, ts->al, ts->bl);
	if (!ts->eflags.zero) {
        goto loc_4C9DA5;
    }
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7904FC, 4));
	push(mv, &ts->esp, 0x8569A25F);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	game::sub_4FFA80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x3C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	goto loc_4C9DBE;

loc_4C9DA5:
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78426C, 4));
	push(mv, &ts->esp, 0x8569AB44);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	game::sub_4FFA80(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x3C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);

loc_4C9DBE:
	game::sub_537BE0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	add(&ts->esp, 0xC);
	game::__ftol2(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x38, 4));
	push(mv, &ts->esp, 0x795AC0);
	push(mv, &ts->esp, ts->eax);
	game::sub_537BE0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x890118, 4));
	movsx(mv, &ts->ecx, x86::mem(ts->eax + 0xBF6, 1));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x40, 4));
	add(&ts->esp, 0x8);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + (ts->ecx*4) + 0xBF8, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78425C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8FC, 4));
	mov(&ts->edx, ts->ecx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x88F2B0, 4));
	mov(mv, x86::mem(ts->esp + 0x38, 4), ts->ecx);
	mov(&ts->ecx, 0x88F298);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_5D5CD0(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x30, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C9EA5;
    }
	fabs(&ts->fp, x86::fp_index(0));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78A54C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4C9EA7;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x40, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x30, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_4C9EA7;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x44, 4));
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	add(&ts->ecx, 0x1B4);
	game::sub_577240(ts, mv);
	mov(mv, &ts->al, x86::mem(0x83AA1A, 1));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x44, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x1B0, 4));
	dec(&ts->al);
	neg(&ts->al);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	sbb(&ts->eax, ts->eax);
	sub(&ts->esp, 0x8);
	and_(&ts->eax, 0xAEB1A31A);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 8));
	add(&ts->eax, 0xC76C65B4);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x34, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_537BE0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x34, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x790968);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0x20);
	goto loc_4C9EA7;

loc_4C9EA5:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));

loc_4C9EA7:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x32, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C9F3F;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x1A8, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x1A8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_4C9F3F;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x40, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x32, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_4C9F3F;
    }
	mov(mv, &ts->al, x86::mem(0x89E7D8, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4C9EF0;
    }
	mov(mv, &ts->eax, x86::mem(0x890108, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4C9F2D;
    }

loc_4C9EF0:
	push(mv, &ts->esp, 0x4);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_577240(ts, mv);
	mov(mv, &ts->al, x86::mem(0x83AA1A, 1));
	dec(&ts->al);
	neg(&ts->al);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0xFFFFFFD8);
	add(&ts->eax, 0x64);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xB6BB5E46);
	game::sub_4FFA80(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x34, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0x10);

loc_4C9F2D:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x34, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x790968);
	push(mv, &ts->esp, ts->eax);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);

loc_4C9F3F:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x33, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4CA00C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x44, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x1C8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4CA00C;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x40, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x33, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_4CA00C;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x1C8, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4C9FFA;
    }
	mov(&ts->ecx, 0x89E7A0);
	game::sub_4018F0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4C9FFA;
    }
	cmp(mv, &ts->eflags, x86::mem(0x83AA1A, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto loc_4C9FC2;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	push(mv, &ts->esp, 0x790AF8);
	sub(&ts->esp, 0x8);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 8));
	push(mv, &ts->esp, 0xC35E2357);
	game::sub_4FFA80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x34, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	goto loc_4C9FF2;

loc_4C9FC2:
	push(mv, &ts->esp, 0xCE8EDAB8);
	game::sub_4FFA80(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x790AF4, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	sub(&ts->esp, 0x8);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 8));
	push(mv, &ts->esp, 0xC35E2357);
	game::sub_4FFA80(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x34, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);

loc_4C9FF2:
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0x14);

loc_4C9FFA:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x34, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x790968);
	push(mv, &ts->esp, ts->eax);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);

loc_4CA00C:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp, 0x4);
}

void sub_4CA020(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(&ts->edx, ts->ecx);
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), 0x0);
	if (ts->eflags.zero) {
        goto locret_4CA088;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4CA045;
    }
	push(mv, &ts->esp, 0x0);
	game::sub_4ABFE0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x58, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_4C9170(ts, mv);
	retn(mv, &ts->esp, 0x4);

loc_4CA045:
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4CA05F;
    }
	push(mv, &ts->esp, 0x0);
	game::sub_4ABF70(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x58, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_4C9170(ts, mv);
	retn(mv, &ts->esp, 0x4);

loc_4CA05F:
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4CA075;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x58, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x11);
	game::sub_4C9170(ts, mv);
	retn(mv, &ts->esp, 0x4);

loc_4CA075:
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto locret_4CA088;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x58, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x12);
	game::sub_4C9170(ts, mv);

locret_4CA088:
	retn(mv, &ts->esp, 0x4);
}

void sub_4CA090(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x8, 4));
	and_(&ts->ebx, 0xFDFBFFFF);
	xor_(&ts->edi, ts->ebx);
	xor_(&ts->eax, ts->ebp);
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CA0DF;
    }
	mov(&ts->eax, ts->edi);
	and_(&ts->eax, 0x1000);
	xor_(&ts->edx, ts->edx);
	or_(&ts->eax, ts->edx);
	if (ts->eflags.zero) {
        goto loc_4CA0DF;
    }
	mov(&ts->eax, ts->ebx);
	and_(&ts->eax, 0x1000);
	push(mv, &ts->esp, ts->eax);
	game::sub_5F1E10(ts, mv);

loc_4CA0DF:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x18, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4CA0F8;
    }
	mov(&ts->eax, ts->edi);
	and_(&ts->eax, 0x40);
	xor_(&ts->edx, ts->edx);
	or_(&ts->eax, ts->edx);
	if (ts->eflags.zero) {
        goto loc_4CA0F8;
    }
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	game::sub_4C6690(ts, mv);

loc_4CA0F8:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4CA111;
    }
	mov(&ts->eax, ts->edi);
	and_(&ts->eax, 0x40);
	xor_(&ts->edx, ts->edx);
	or_(&ts->eax, ts->edx);
	if (ts->eflags.zero) {
        goto loc_4CA111;
    }
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	game::sub_4C6690(ts, mv);

loc_4CA111:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x34, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4CA12A;
    }
	mov(&ts->eax, ts->edi);
	and_(&ts->eax, 0x40);
	xor_(&ts->edx, ts->edx);
	or_(&ts->eax, ts->edx);
	if (ts->eflags.zero) {
        goto loc_4CA12A;
    }
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	game::sub_4C6690(ts, mv);

loc_4CA12A:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4CA145;
    }
	mov(&ts->eax, ts->edi);
	and_(&ts->eax, 0x200);
	xor_(&ts->edx, ts->edx);
	or_(&ts->eax, ts->edx);
	if (ts->eflags.zero) {
        goto loc_4CA145;
    }
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	game::sub_4C6690(ts, mv);

loc_4CA145:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x24, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4CA160;
    }
	mov(&ts->eax, ts->edi);
	and_(&ts->eax, 0x20000000);
	xor_(&ts->edx, ts->edx);
	or_(&ts->eax, ts->edx);
	if (ts->eflags.zero) {
        goto loc_4CA160;
    }
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	game::sub_4C6690(ts, mv);

loc_4CA160:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x28, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4CA17E;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	and_(&ts->edx, 0x40000);
	xor_(&ts->eax, ts->eax);
	or_(&ts->eax, ts->edx);
	if (ts->eflags.zero) {
        goto loc_4CA17E;
    }
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	game::sub_4C6690(ts, mv);

loc_4CA17E:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x2C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4CA199;
    }
	mov(&ts->eax, ts->edi);
	and_(&ts->eax, 0x80000000);
	xor_(&ts->edx, ts->edx);
	or_(&ts->eax, ts->edx);
	if (ts->eflags.zero) {
        goto loc_4CA199;
    }
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	game::sub_4C6690(ts, mv);

loc_4CA199:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4CA1B2;
    }
	mov(&ts->eax, ts->edi);
	and_(&ts->eax, 0x4);
	xor_(&ts->edx, ts->edx);
	or_(&ts->eax, ts->edx);
	if (ts->eflags.zero) {
        goto loc_4CA1B2;
    }
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	game::sub_4C6690(ts, mv);

loc_4CA1B2:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x5C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4CA1CB;
    }
	mov(&ts->eax, ts->edi);
	and_(&ts->eax, 0x1);
	xor_(&ts->edx, ts->edx);
	or_(&ts->eax, ts->edx);
	if (ts->eflags.zero) {
        goto loc_4CA1CB;
    }
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	game::sub_4C6690(ts, mv);

loc_4CA1CB:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x3C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4CA1E6;
    }
	mov(&ts->eax, ts->edi);
	and_(&ts->eax, 0x400);
	xor_(&ts->edx, ts->edx);
	or_(&ts->eax, ts->edx);
	if (ts->eflags.zero) {
        goto loc_4CA1E6;
    }
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	game::sub_4C6690(ts, mv);

loc_4CA1E6:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x40, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4CA201;
    }
	mov(&ts->eax, ts->edi);
	and_(&ts->eax, 0x800000);
	xor_(&ts->edx, ts->edx);
	or_(&ts->eax, ts->edx);
	if (ts->eflags.zero) {
        goto loc_4CA201;
    }
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	game::sub_4C6690(ts, mv);

loc_4CA201:
	mov(mv, &ts->al, x86::mem(0x89E7D9, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4CA251;
    }
	mov(mv, &ts->eax, x86::mem(0x890104, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4CA251;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x10, 4));
	mov(&ts->eax, ts->ebx);
	and_(&ts->eax, 0x400);
	xor_(&ts->ecx, ts->ecx);
	or_(&ts->eax, ts->ecx);
	push(mv, &ts->esp, 0x795C68);
	if (ts->eflags.zero) {
        goto loc_4CA23C;
    }
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	goto loc_4CA24E;

loc_4CA23C:
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);

loc_4CA24E:
	add(&ts->esp, 0x10);

loc_4CA251:
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x10, 4));
	and_(&ts->ebx, 0x400);
	xor_(&ts->ebp, ts->ebp);
	mov(&ts->ecx, ts->ebx);
	or_(&ts->ecx, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_4CA2D7;
    }
	push(mv, &ts->esp, 0x795C5C);
	push(mv, &ts->esp, 0x795C48);
	game::sub_505450(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537CC0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4CA2A7;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x795C5C);
	push(mv, &ts->esp, 0x795C48);
	game::sub_505450(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);

loc_4CA2A7:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, 0x795C5C);
	push(mv, &ts->esp, 0x795C68);
	game::sub_505450(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537CC0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4CA35C;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x795C5C);
	goto loc_4CA342;

loc_4CA2D7:
	push(mv, &ts->esp, 0x795C3C);
	push(mv, &ts->esp, 0x795C48);
	game::sub_505450(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537CC0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4CA318;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x795C3C);
	push(mv, &ts->esp, 0x795C48);
	game::sub_505450(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);

loc_4CA318:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, 0x795C3C);
	push(mv, &ts->esp, 0x795C68);
	game::sub_505450(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537CC0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4CA35C;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x795C3C);

loc_4CA342:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, 0x795C68);
	game::sub_505450(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);

loc_4CA35C:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x10, 4));
	and_(&ts->eax, 0x800000);
	xor_(&ts->ecx, ts->ecx);
	or_(&ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4CA41A;
    }
	push(mv, &ts->esp, 0x795C30);
	push(mv, &ts->esp, 0x795C20);
	game::sub_505450(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537CC0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4CA3B3;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x795C30);
	push(mv, &ts->esp, 0x795C20);
	game::sub_505450(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);

loc_4CA3B3:
	or_(&ts->ebx, ts->ebp);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x10, 4));
	if (ts->eflags.zero) {
        goto loc_4CA3EA;
    }
	push(mv, &ts->esp, 0x795C0C);
	push(mv, &ts->esp, 0x795BF8);
	game::sub_505450(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537CC0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4CA4F6;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x795C0C);
	goto loc_4CA4DC;

loc_4CA3EA:
	push(mv, &ts->esp, 0x795BE4);
	push(mv, &ts->esp, 0x795BF8);
	game::sub_505450(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537CC0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4CA4F6;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x795BE4);
	goto loc_4CA4DC;

loc_4CA41A:
	push(mv, &ts->esp, 0x795BD8);
	push(mv, &ts->esp, 0x795C20);
	game::sub_505450(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537CC0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4CA45B;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x795BD8);
	push(mv, &ts->esp, 0x795C20);
	game::sub_505450(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);

loc_4CA45B:
	cmp(mv, &ts->eflags, x86::mem(0x89E7B0, 4), 0x7);
	if (!ts->eflags.zero) {
        goto loc_4CA485;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x795BD0);
	push(mv, &ts->esp, 0x795C20);
	game::sub_505450(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);

loc_4CA485:
	or_(&ts->ebx, ts->ebp);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x10, 4));
	if (ts->eflags.zero) {
        goto loc_4CA4B5;
    }
	push(mv, &ts->esp, 0x795BBC);
	push(mv, &ts->esp, 0x795BF8);
	game::sub_505450(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537CC0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4CA4F6;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x795BBC);
	goto loc_4CA4DC;

loc_4CA4B5:
	push(mv, &ts->esp, 0x795BA8);
	push(mv, &ts->esp, 0x795BF8);
	game::sub_505450(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537CC0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4CA4F6;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x795BA8);

loc_4CA4DC:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, 0x795BF8);
	game::sub_505450(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);

loc_4CA4F6:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x48, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x20, 4));
	if (ts->eflags.zero) {
        goto loc_4CA51D;
    }
	mov(&ts->eax, ts->ebp);
	and_(&ts->eax, 0x80);
	xor_(&ts->edx, ts->edx);
	or_(&ts->eax, ts->edx);
	if (ts->eflags.zero) {
        goto loc_4CA51D;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_4C6690(ts, mv);

loc_4CA51D:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4CA53C;
    }
	mov(&ts->eax, ts->ebp);
	and_(&ts->eax, 0x20000);
	xor_(&ts->edx, ts->edx);
	or_(&ts->eax, ts->edx);
	if (ts->eflags.zero) {
        goto loc_4CA53C;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_4C6690(ts, mv);

loc_4CA53C:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x44, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4CA55B;
    }
	mov(&ts->eax, ts->ebp);
	and_(&ts->eax, 0x4000);
	xor_(&ts->edx, ts->edx);
	or_(&ts->eax, ts->edx);
	if (ts->eflags.zero) {
        goto loc_4CA55B;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_4C6690(ts, mv);

loc_4CA55B:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));
	if (ts->eflags.zero) {
        goto loc_4CA57F;
    }
	mov(&ts->edx, ts->edi);
	and_(&ts->edx, 0x20000);
	xor_(&ts->eax, ts->eax);
	or_(&ts->eax, ts->edx);
	if (ts->eflags.zero) {
        goto loc_4CA57F;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_4C6690(ts, mv);

loc_4CA57F:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4CA59C;
    }
	mov(&ts->edx, ts->edi);
	and_(&ts->edx, 0x2);
	xor_(&ts->eax, ts->eax);
	or_(&ts->eax, ts->edx);
	if (ts->eflags.zero) {
        goto loc_4CA59C;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_4C6690(ts, mv);

loc_4CA59C:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x64, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4CA5B9;
    }
	mov(&ts->edx, ts->edi);
	and_(&ts->edx, 0x4);
	xor_(&ts->eax, ts->eax);
	or_(&ts->eax, ts->edx);
	if (ts->eflags.zero) {
        goto loc_4CA5B9;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_4C6690(ts, mv);

loc_4CA5B9:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x6C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4CA5D6;
    }
	mov(&ts->edx, ts->edi);
	and_(&ts->edx, 0x40);
	xor_(&ts->eax, ts->eax);
	or_(&ts->eax, ts->edx);
	if (ts->eflags.zero) {
        goto loc_4CA5D6;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_4C6690(ts, mv);

loc_4CA5D6:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x70, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_4CA5F8;
    }
	mov(&ts->eax, ts->ebp);
	and_(&ts->eax, 0x800);
	xor_(&ts->ecx, ts->ecx);
	or_(&ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4CA5F8;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ecx, x86::mem(ts->edx + 0x8, 4));
	game::sub_4C6690(ts, mv);

loc_4CA5F8:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x78, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4CA618;
    }
	mov(&ts->edx, ts->edi);
	and_(&ts->edx, 0x80);
	xor_(&ts->eax, ts->eax);
	or_(&ts->eax, ts->edx);
	if (ts->eflags.zero) {
        goto loc_4CA618;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_4C6690(ts, mv);

loc_4CA618:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x74, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4CA635;
    }
	and_(&ts->ebp, 0x1);
	mov(&ts->eax, ts->ebp);
	xor_(&ts->edx, ts->edx);
	or_(&ts->eax, ts->edx);
	if (ts->eflags.zero) {
        goto loc_4CA635;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_4C6690(ts, mv);

loc_4CA635:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x80, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4CA658;
    }
	and_(&ts->edi, 0x80000);
	xor_(&ts->eax, ts->eax);
	mov(&ts->edx, ts->edi);
	or_(&ts->eax, ts->edx);
	if (ts->eflags.zero) {
        goto loc_4CA658;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_4C6690(ts, mv);

loc_4CA658:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0xC);
}

void sub_4CA670(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x58, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x14);
	game::sub_4C9170(ts, mv);
	retn(mv, &ts->esp, 0x4);
}

void sub_4CA690(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(0x836560, 4));
	mov(&ts->ecx, 0x836560);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CA6BB;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_4CA6B0:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x8, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4CA6BF;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4CA6B0;
    }

loc_4CA6BB:
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4CA6BF:
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4CA6D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4CA6F5;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0x12);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4CA6EE;
    }

loc_4CA6E7:
	movzx(mv, &ts->eax, x86::mem(ts->eax + 0x4CA7E4, 1));
	jmp(x86::mem(0x4CA7D4, 4));

loc_4CA6F5:
	xor_(&ts->eax, ts->eax);
	goto loc_4CA6E7;

loc_4CA6F9:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x890080, 4));
	game::sub_5F0E30(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CA776;
    }
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x550, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_4CA776;
    }
	mov(&ts->ecx, ts->eax);
	game::sub_5EC060(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4CA776;
    }
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x1);
	if (!ts->eflags.zero) {
        goto def_4CA6EE;
    }
	mov(&ts->ecx, 0x85B940);
	game::sub_501690(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	goto loc_4CA774;

loc_4CA73C:
	mov(&ts->ecx, 0x85AD40);
	game::sub_500B60(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4CA776;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x8, 4));
	mov(&ts->ecx, 0x861E7C);
	game::sub_502420(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4CA77B;
    }
	mov(&ts->ecx, 0x861E7C);
	game::sub_5024D0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4CA776;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x1C, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4CA776;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x4, 4), 0xB);

loc_4CA774:
	if (ts->eflags.zero) {
        goto def_4CA6EE;
    }

loc_4CA776:
	pop(mv, &ts->esp, ts->edi);
	xor_(&ts->al, ts->al);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4CA77B:
	mov(&ts->ecx, 0x838590);
	game::sub_4AE930(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4CA7A0;
    }
	mov(mv, &ts->eax, x86::mem(0x862838, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto def_4CA6EE;
    }
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x838590);
	game::sub_529410(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4CA7A0:
	mov(&ts->ecx, 0x85B940);
	game::sub_501690(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto def_4CA6EE;
    }
	mov(&ts->ecx, ts->edi);
	game::sub_500DE0(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x8635A9, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_4CA776;
    }
	mov(&ts->ecx, ts->edi);
	game::sub_533110(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	pop(mv, &ts->esp, ts->edi);
	setnz(ts->eflags, &ts->al);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

def_4CA6EE:
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4CA800(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->edi);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CA832;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));

loc_4CA815:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4CA821;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x4, 4));
	goto loc_4CA823;

loc_4CA821:
	xor_(&ts->ecx, ts->ecx);

loc_4CA823:
	cmp(&ts->eflags, ts->ecx, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_4CA82C;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x8, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_4CA839;
    }

loc_4CA82C:
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4CA815;
    }

loc_4CA832:
	pop(mv, &ts->esp, ts->edi);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);

loc_4CA839:
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4CA840(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x8364C0, 4));
	sub(&ts->esp, 0x64);
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4CA870;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi, 4));
	game::Iostream_init__Iostream_init_void_(ts, mv);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CA866;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_4CA860:
	mov(mv, &ts->edi, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4CA860;
    }

loc_4CA866:
	mov(mv, x86::mem(0x8364C0, 4), 0x0);

loc_4CA870:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(0x89E7A0, 4));
	if (ts->eflags.zero) {
        goto loc_4CA888;
    }
	movsx(mv, &ts->eax, x86::mem(ts->eax + 0x8A, 2));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4CA894;
    }

loc_4CA888:
	push(mv, &ts->esp, ts->ecx);
	game::sub_5D3E40(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->eax);

loc_4CA894:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78758C, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xC0, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xB4, 4));
	mov(&ts->edx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x38, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xAC, 4));
	mov(mv, x86::mem(ts->esp + 0x34, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0xB0, 4));
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->edx);
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78E098, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4CA8F6;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78758C, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78E098, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));

loc_4CA8F6:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x40, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x5C, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x4);
	mov(&ts->ecx, ts->esi);
	game::sub_4CA800(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_4AC2B0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	mov(mv, &ts->eax, x86::mem(0x89E7B0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->eax, x86::mem(0x89E7A0, 4));
	mov(mv, x86::mem(0x8364D0, 4), 0x40A00000);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x5C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fsub(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fsub(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	mov(mv, x86::mem(0x8364C8, 4), ts->edx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8364C4, 4));
	if (!ts->eflags.zero) {
        goto loc_4CA9BE;
    }
	mov(mv, x86::mem(0x8364CC, 4), 0x40A00000);
	goto loc_4CAA34;

loc_4CA9BE:
	mov(mv, &ts->cl, x86::mem(0x89E7D9, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_4CAA12;
    }
	mov(mv, &ts->ecx, x86::mem(0x890104, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4CAA12;
    }
	mov(mv, &ts->cl, x86::mem(0x89E7E3, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_4CAA12;
    }
	mov(mv, &ts->ecx, x86::mem(0x89010C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4CAA12;
    }
	mov(mv, &ts->cl, x86::mem(0x89E7E1, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_4CAA06;
    }
	mov(mv, &ts->cl, x86::mem(0x89E7E6, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_4CAA06;
    }
	mov(mv, x86::mem(0x8364CC, 4), 0x40A00000);
	goto loc_4CAA34;

loc_4CAA06:
	mov(mv, x86::mem(0x8364CC, 4), 0x40D33333);
	goto loc_4CAA34;

loc_4CAA12:
	cmp(&ts->eflags, ts->eax, 0x104E);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4CAA2A;
    }
	cmp(&ts->eflags, ts->eax, 0x1053);
	mov(mv, x86::mem(0x8364CC, 4), 0x40A00000);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4CAA34;
    }

loc_4CAA2A:
	mov(mv, x86::mem(0x8364CC, 4), 0x40533333);

loc_4CAA34:
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x791858);
	game::sub_50B990(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50C990(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x48, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x5C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x60, 4), ts->ecx);
	push(mv, &ts->esp, 0x5);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x68, 4), ts->edx);
	game::sub_5179D0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x1C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	mov(&ts->ebx, 0x400000);
	or_(&ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x1C, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x34, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x5C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x60, 4), ts->ecx);
	push(mv, &ts->esp, 0x6);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x68, 4), ts->edx);
	game::sub_5179D0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x1C, 4));
	or_(&ts->eax, ts->ebx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x58, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x54, 4));
	mov(mv, x86::mem(ts->edi + 0x1C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_51D620(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x64, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x64, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_51D620(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x6C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x68, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_51D730(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x78, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x70, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_51D730(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x89E7B0, 4));
	add(&ts->esp, 0x30);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (!ts->eflags.zero) {
        goto loc_4CAB2C;
    }
	cmp(mv, &ts->eflags, x86::mem(0x83AA1C, 1), 0x2);
	if (!ts->eflags.zero) {
        goto loc_4CAB5C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x40, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x44, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_43E6D0(ts, mv);
	movzx(&ts->eax, ts->ax);
	mov(mv, x86::mem(ts->esp + 0x40, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	goto loc_4CAB4F;

loc_4CAB2C:
	cmp(mv, &ts->eflags, x86::mem(0x83AA1B, 1), 0x2);
	if (!ts->eflags.zero) {
        goto loc_4CAB5C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x40, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x44, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_43E6D0(ts, mv);
	movzx(&ts->eax, ts->ax);
	mov(mv, x86::mem(ts->esp + 0x40, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));

loc_4CAB4F:
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784248, 4));
	add(&ts->esp, 0x8);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));

loc_4CAB5C:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	fchs(&ts->fp, x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x38, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51CED0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edx);
	game::sub_51CED0(ts, mv);
	push(mv, &ts->esp, 0x3F800000);
	push(mv, &ts->esp, 0x0);
	game::sub_43E6D0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	movzx(&ts->eax, ts->ax);
	mov(mv, x86::mem(ts->esp + 0x50, 4), ts->eax);
	add(&ts->esp, 0x14);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784248, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78E094, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_51CED0(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x8);
	mov(&ts->ecx, ts->esi);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	mov(&ts->esi, ts->eax);
	cmp(&ts->eflags, ts->edi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4CAE4A;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784244, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784254, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x18, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));

loc_4CAC02:
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x68, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x64, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_4AC2B0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x60, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->ebx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x2C, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x68, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	game::sub_43C350(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43C350(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->eax, x86::mem(0x89E7B0, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(mv, &ts->edx, x86::mem(0x78E090, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x38, 4), ts->edx);
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fsqrt(&ts->fp, x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	if (!ts->eflags.zero) {
        goto loc_4CAD01;
    }
	mov(&ts->ecx, 0x838590);
	game::sub_501100(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.zero) {
        goto loc_4CACF9;
    }
	mov(&ts->ecx, 0x838590);
	game::sub_501100(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CACF9;
    }
	mov(&ts->ecx, 0x838590);
	game::sub_501100(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.zero) {
        goto loc_4CACF9;
    }
	mov(&ts->ecx, 0x838590);
	game::sub_501100(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_4CACF9;
    }
	mov(mv, &ts->eax, x86::mem(0x862838, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CACF9;
    }
	mov(&ts->ecx, 0x85B940);
	game::sub_501690(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4CAD01;
    }

loc_4CACF9:
	mov(mv, x86::mem(ts->esp + 0x38, 4), 0x41200000);

loc_4CAD01:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x38, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4CAE1C;
    }
	mov(&ts->ecx, ts->edi);
	game::sub_4CA6D0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4CAE1C;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78E08C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4CAD3E;
    }
	test(mv, &ts->eflags, x86::mem(ts->edi + 0x18, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_4CAE1C;
    }

loc_4CAD3E:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x18, 4));
	shr(&ts->eax, 0x1);
	test(&ts->eflags, ts->al, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4CAE1C;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78E08C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4CAD82;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78E08C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78E08C, 4));
	goto loc_4CAD86;

loc_4CAD82:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));

loc_4CAD86:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x68, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x6C, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x58, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x5C, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x60, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	game::sub_43E6D0(ts, mv);
	movzx(&ts->eax, ts->ax);
	mov(mv, x86::mem(ts->esp + 0x3C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x1C, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784248, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x34, 4));
	if (ts->eflags.zero) {
        goto loc_4CADDC;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	goto loc_4CADDE;

loc_4CADDC:
	xor_(&ts->eax, ts->eax);

loc_4CADDE:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_51D4D0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x1C, 4));
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CAE0A;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x34, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_51CED0(ts, mv);
	add(&ts->esp, 0x8);
	goto loc_4CAE39;

loc_4CAE0A:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x34, 4));
	xor_(&ts->eax, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_51CED0(ts, mv);
	add(&ts->esp, 0x8);
	goto loc_4CAE39;

loc_4CAE1C:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x1C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CAE27;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	goto loc_4CAE29;

loc_4CAE27:
	xor_(&ts->eax, ts->eax);

loc_4CAE29:
	push(mv, &ts->esp, 0x44000000);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_51D4D0(ts, mv);
	add(&ts->esp, 0xC);

loc_4CAE39:
	mov(&ts->ecx, ts->edi);
	game::sub_4AC460(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->edi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_4CAC02;
    }

loc_4CAE4A:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x64);
	retn(mv, &ts->esp);
}

void sub_4CAE60(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	sub(&ts->esp, 0x40);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78758C, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0xC0, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xB4, 4));
	mov(&ts->edx, ts->ecx);
	mov(mv, x86::mem(ts->ebp - 0x14, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xAC, 4));
	mov(mv, x86::mem(ts->ebp - 0x1C, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0xB0, 4));
	mov(mv, x86::mem(ts->ebp - 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->ebp - 0x10, 4), ts->edx);
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0xC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x18, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78E098, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4CAEC3;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78758C, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78E098, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0xC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x18, 4));

loc_4CAEC3:
	lea(mv, &ts->eax, x86::mem(ts->ebp - 0x40, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x38, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x4);
	mov(&ts->ecx, ts->esi);
	game::sub_4CA800(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_4AC2B0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	lea(mv, &ts->edx, x86::mem(ts->ebp - 0x34, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->ebp - 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x38, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x20, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x1C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x14, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x10, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x34, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x14, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x24, 4));
	game::sub_51D620(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	lea(mv, &ts->edx, x86::mem(ts->ebp - 0x34, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->ebp - 0x30, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51D620(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	lea(mv, &ts->edx, x86::mem(ts->ebp - 0x30, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->ebp - 0x28, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51D730(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	lea(mv, &ts->edx, x86::mem(ts->ebp - 0x30, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->ebp - 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51D730(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	mov(mv, &ts->eax, x86::mem(0x89E7B0, 4));
	add(&ts->esp, 0x30);
	test(&ts->eflags, ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_4CAF87;
    }
	cmp(mv, &ts->eflags, x86::mem(0x83AA1C, 1), 0x2);
	if (!ts->eflags.zero) {
        goto loc_4CAFB1;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebp - 0x40, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x3C, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_43E6D0(ts, mv);
	movzx(&ts->ecx, ts->ax);
	mov(mv, x86::mem(ts->ebp - 0x1C, 4), ts->ecx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x1C, 4));
	goto loc_4CAFA8;

loc_4CAF87:
	cmp(mv, &ts->eflags, x86::mem(0x83AA1B, 1), 0x2);
	if (!ts->eflags.zero) {
        goto loc_4CAFB1;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebp - 0x40, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x3C, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_43E6D0(ts, mv);
	movzx(&ts->ecx, ts->ax);
	mov(mv, x86::mem(ts->ebp - 0x1C, 4), ts->ecx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x1C, 4));

loc_4CAFA8:
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784248, 4));
	add(&ts->esp, 0x8);

loc_4CAFB1:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x8, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x8, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x20, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0xC, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x10, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x14, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x24, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x18, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784244, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_43C350(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x18, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x8, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784254, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_43C350(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x18, 4));
	mov(mv, &ts->eax, x86::mem(0x78E090, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0xC, 4));
	add(&ts->esp, 0x4);
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(&ts->ecx, 0x838590);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0xC, 4));
	mov(mv, x86::mem(ts->ebp - 0x24, 4), ts->eax);
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x18, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0xC, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0xC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x8, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fsqrt(&ts->fp, x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x4, 4));
	game::sub_501100(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.zero) {
        goto loc_4CB078;
    }
	mov(&ts->ecx, 0x838590);
	game::sub_501100(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CB078;
    }
	mov(&ts->ecx, 0x838590);
	game::sub_501100(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.zero) {
        goto loc_4CB078;
    }
	mov(&ts->ecx, 0x838590);
	game::sub_501100(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_4CB078;
    }
	mov(mv, &ts->eax, x86::mem(0x862838, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4CB080;
    }

loc_4CB078:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784560, 4));
	goto loc_4CB083;

loc_4CB080:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x24, 4));

loc_4CB083:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x4, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4CB0F7;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x4, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78E08C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4CB0C4;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x8, 4));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78E08C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78E08C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0xC, 4));

loc_4CB0C4:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x3F800000);
	game::sub_43E6D0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x28, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x14, 4));
	add(&ts->esp, 0x8);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x2C, 4));
	mov(&ts->al, 0x1);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0xC, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x34, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edx, 4));
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4CB0F7:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x10, 4));
	mov(mv, x86::mem(ts->eax, 4), 0x44000000);
	mov(&ts->al, 0x1);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);
}

void sub_4CB110(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(0x8364D4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto locret_4CB146;
    }
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx, 4));
	game::Iostream_init__Iostream_init_void_(ts, mv);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CB145;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_4CB130:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x8, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4CB13D;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4CB130;
    }
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4CB13D:
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_4AC620(ts, mv);

loc_4CB145:
	pop(mv, &ts->esp, ts->esi);

locret_4CB146:
	retn(mv, &ts->esp);
}

void sub_4CB150(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(0x8364D4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4CB174;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_4CAE60(ts, mv);
	retn(mv, &ts->esp);

loc_4CB174:
	xor_(&ts->al, ts->al);
	retn(mv, &ts->esp);
}

void sub_4CB180(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77412B);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8364D8, 4));
	mov(mv, x86::mem(ts->esp, 4), ts->ecx);
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CB1B4;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_4AC730(ts, mv);

loc_4CB1B4:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

unknown_libname_56:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::nullsub_1(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
	mov(&ts->eax, 0x7E0020);
	goto ___CxxFrameHandler;
}

void sub_4CB1D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(0x8651AC, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	sub(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x55, 1));
	xor_(&ts->ecx, ts->ecx);
	cmp(&ts->eflags, ts->al, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_4CB207;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x5C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	mov(mv, x86::mem(ts->esi + 0x55, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_4CB207:
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78E0A0, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78E09C, 4));
	fcompp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4CB23E;
    }
	mov(mv, x86::mem(ts->esi + 0x54, 1), ts->cl);
	mov(mv, x86::mem(0x8364E0, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x55, 1), ts->cl);
	game::sub_5379A0(ts, mv);
	add(&ts->esp, 0x4);

loc_4CB23E:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_4CB250(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->edi + 0x8C, 1));
	xor_(&ts->ebx, ts->ebx);
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, x86::mem(ts->edi + 0x9C, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0xA0, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0xA4, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4CB2AD;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->ecx, x86::mem(0x836248, 4));
	imul(&ts->ecx, ts->ecx, 0x370);
	mov(mv, x86::mem(0x870768, 1), ts->bl);
	mov(mv, x86::mem(ts->ecx + 0x874F7C, 4), ts->ebx);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, ts->edx);
	game::sub_537950(ts, mv);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->edi + 0x8C, 1), ts->bl);

loc_4CB2AD:
	mov(&ts->ecx, 0x874C40);
	xor_(&ts->ebp, ts->ebp);
	mov(&ts->esi, 0x836240);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_4CB2C0:
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x230, 4), 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_4CB329;
    }
	game::sub_5B8720(ts, mv);
	sub(&ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_4CB2EE;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CB2DA;
    }
	xor_(&ts->eax, ts->eax);
	goto loc_4CB2F3;

loc_4CB2DA:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0xA4, 4));
	inc(&ts->ecx);
	mov(&ts->eax, 0x1);
	mov(mv, x86::mem(ts->edi + 0xA4, 4), ts->ecx);
	goto loc_4CB2F3;

loc_4CB2EE:
	mov(&ts->eax, 0x2);

loc_4CB2F3:
	mov(mv, &ts->ecx, x86::mem(0x835E1C, 4));
	mov(mv, x86::mem(ts->esi, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x835B80, 4));
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	add(&ts->esp, 0x10);
	inc(&ts->ebp);
	add(&ts->esi, 0xC);

loc_4CB329:
	add(&ts->ecx, 0x370);
	inc(&ts->ebx);
	cmp(&ts->eflags, ts->ecx, 0x8760E0);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4CB2C0;
    }
	mov(mv, &ts->al, x86::mem(ts->esp + 0x18, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, x86::mem(ts->edi + 0xA8, 4), ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_4CB352;
    }
	cmp(mv, &ts->eflags, x86::mem(0x8364EC, 4), ts->ebp);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4CB384;
    }

loc_4CB352:
	mov(mv, x86::mem(0x8364EC, 4), 0xFFFFFFFF);
	mov(mv, &ts->al, x86::mem(ts->edi + 0x8C, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4CB384;
    }
	mov(mv, &ts->eax, x86::mem(0x7F68B8, 4));
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(0x8364EC, 4), 0x0);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);

loc_4CB384:
	mov(mv, &ts->edx, x86::mem(0x8364EC, 4));
	mov(mv, &ts->eax, x86::mem(0x835B80, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_52CEA0(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x795C84);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_537A10(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8364EC, 4));
	lea(mv, &ts->ecx, x86::mem(ts->ecx + (ts->ecx*2), 4));
	mov(mv, &ts->edx, x86::mem(0x836240, 4));
	mov(mv, &ts->ecx, x86::mem(0x837B60, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x870764, 4));
	add(&ts->esp, 0x1C);
	cmp(&ts->eflags, ts->eax, 0x6);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4CB46D;
    }
	lea(mv, &ts->esi, x86::mem(0x0, 4));
	goto loc_4CB3F0;

loc_4CB3F0:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x835B80, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x14, 4));
	mov(mv, &ts->ebp, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_505450(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	game::sub_51CDA0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x835E1C, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->eax);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0x1C);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x795C78);
	game::sub_505450(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x835B80, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_52B030(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x795C78);
	game::sub_505450(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x835E1C, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_52B030(ts, mv);
	add(&ts->esi, 0x4);
	cmp(&ts->eflags, ts->esi, 0x18);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4CB3F0;
    }

loc_4CB46D:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);
}

void sub_4CB4B0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x40);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xE8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_4ACCA0(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x54, 4));
	push(mv, &ts->esp, 0x7845D4);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, 0x795C9C);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->edi + 0x2C, 4), ts->eax);
	game::sub_43DDA0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x134, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x44, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x4C, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_5379C0(ts, mv);
	mov(mv, x86::mem(ts->edi + 0x24, 4), ts->eax);
	mov(mv, x86::mem(ts->edi + 0x20, 4), 0xC1000000);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xEC, 4));
	add(&ts->esp, 0x28);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_4ACCA0(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x58, 4));
	mov(mv, x86::mem(ts->ebx + 0x2C, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xF0, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_4ACCA0(ts, mv);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x5C, 4));
	mov(mv, x86::mem(ts->ebp + 0x2C, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x50, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x58, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	lea(mv, &ts->eax, x86::mem(ts->ebx + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x60, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x5C, 4));
	lea(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x130, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x108, 4));
	mov(&ts->ecx, ts->edi);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x100, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x100, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x120, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x128, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	call(ts, mv, x86::mem(ts->edx + 0x20, 4));
	mov(mv, &ts->al, x86::mem(ts->ebx + 0x28, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4CB5B5;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx, 4));
	mov(&ts->ecx, ts->ebx);
	call(ts, mv, x86::mem(ts->eax + 0x20, 4));

loc_4CB5B5:
	mov(mv, &ts->al, x86::mem(ts->ebp + 0x28, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4CB5C4;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebp, 4));
	mov(&ts->ecx, ts->ebp);
	call(ts, mv, x86::mem(ts->edx + 0x20, 4));

loc_4CB5C4:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x134, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esi + 0x13C, 4));
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4CB5FE;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebx, 4));
	mov(&ts->ecx, ts->ebx);
	call(ts, mv, x86::mem(ts->edx + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx, 4));
	mov(&ts->ecx, ts->ebx);
	call(ts, mv, x86::mem(ts->eax + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp, 4));
	mov(&ts->ecx, ts->ebp);
	call(ts, mv, x86::mem(ts->edx + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp, 4));
	mov(&ts->ecx, ts->ebp);
	call(ts, mv, x86::mem(ts->eax + 0x10, 4));

loc_4CB5FE:
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x24, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F21C);
	push(mv, &ts->esp, ts->eax);
	game::sub_51CF70(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebx, 4));
	add(&ts->esp, 0xC);
	mov(&ts->ecx, ts->ebx);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp, 4));
	mov(&ts->ecx, ts->ebp);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x134, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x104, 4));
	inc(&ts->edx);
	mov(mv, x86::mem(ts->esi + 0x134, 4), ts->edx);
	mov(mv, x86::mem(ts->ebx + 0x14, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x104, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->ebp + 0x14, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x134, 4));
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	dec(&ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x40);
	retn(mv, &ts->esp, 0xC);
}

void sub_4CB660(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CB66C;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_4CB66E;

loc_4CB66C:
	xor_(&ts->eax, ts->eax);

loc_4CB66E:
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	mov(&ts->esi, 0x1);
	cmp(&ts->eflags, ts->edi, ts->esi);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4CB6A9;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x50, 4));

loc_4CB680:
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_4CB689;
    }
	lea(mv, &ts->ecx, x86::mem(ts->edx - 0x4, 4));
	goto loc_4CB68B;

loc_4CB689:
	xor_(&ts->ecx, ts->ecx);

loc_4CB68B:
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4CB6A7;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CB69B;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_4CB69D;

loc_4CB69B:
	xor_(&ts->eax, ts->eax);

loc_4CB69D:
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4CB680;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4CB6A7:
	xor_(&ts->eax, ts->eax);

loc_4CB6A9:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4CB6B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	sub(&ts->esp, 0x24);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x54, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->ecx + 0x54, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_4CB6CF;
    }
	lea(mv, &ts->esi, x86::mem(ts->eax - 0x4, 4));
	goto loc_4CB6D1;

loc_4CB6CF:
	xor_(&ts->esi, ts->esi);

loc_4CB6D1:
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x5C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4CB6DD;
    }
	lea(mv, &ts->edi, x86::mem(ts->ecx - 0x4, 4));
	goto loc_4CB6DF;

loc_4CB6DD:
	xor_(&ts->edi, ts->edi);

loc_4CB6DF:
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0xC, 4));

loc_4CB6E2:
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_4CB6EB;
    }
	lea(mv, &ts->eax, x86::mem(ts->edx - 0x4, 4));
	goto loc_4CB6ED;

loc_4CB6EB:
	xor_(&ts->eax, ts->eax);

loc_4CB6ED:
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CB7B3;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x29, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4CB737;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CD00(ts, mv);
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4CB79D;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));

loc_4CB737:
	mov(mv, &ts->al, x86::mem(ts->edi + 0x29, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4CB779;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0xC, 4));
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->edx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x18, 4));
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CD00(ts, mv);
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4CB7A8;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));

loc_4CB779:
	mov(mv, &ts->edi, x86::mem(ts->edi + 0x4, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4CB785;
    }
	add(&ts->edi, 0xFFFFFFFC);
	goto loc_4CB787;

loc_4CB785:
	xor_(&ts->edi, ts->edi);

loc_4CB787:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4CB796;
    }
	add(&ts->esi, 0xFFFFFFFC);
	goto loc_4CB6E2;

loc_4CB796:
	xor_(&ts->esi, ts->esi);
	goto loc_4CB6E2;

loc_4CB79D:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x8);

loc_4CB7A8:
	mov(&ts->eax, ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x8);

loc_4CB7B3:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x8);
}

void sub_4CB7C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->ecx + 0x5C, 4));
	test(&ts->eflags, ts->ebx, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4CB7D5;
    }
	add(&ts->ebx, 0xFFFFFFFC);
	goto loc_4CB7D7;

loc_4CB7D5:
	xor_(&ts->ebx, ts->ebx);

loc_4CB7D7:
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x4C, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4CB7E3;
    }
	add(&ts->edi, 0xFFFFFFFC);
	goto loc_4CB7E5;

loc_4CB7E3:
	xor_(&ts->edi, ts->edi);

loc_4CB7E5:
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x54, 4));
	lea(mv, &ts->ebp, x86::mem(ts->ecx + 0x54, 4));

loc_4CB7EB:
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4CB7F4;
    }
	add(&ts->esi, 0xFFFFFFFC);
	goto loc_4CB7F6;

loc_4CB7F4:
	xor_(&ts->esi, ts->esi);

loc_4CB7F6:
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_4CB7FF;
    }
	lea(mv, &ts->eax, x86::mem(ts->ebp - 0x4, 4));
	goto loc_4CB801;

loc_4CB7FF:
	xor_(&ts->eax, ts->eax);

loc_4CB801:
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CB858;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x45D9C800);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x34, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x28, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebx, 4));
	push(mv, &ts->esp, 0x45D9C800);
	mov(&ts->ecx, ts->ebx);
	call(ts, mv, x86::mem(ts->edx + 0x34, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx, 4));
	mov(&ts->ecx, ts->ebx);
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebx, 4));
	mov(&ts->ecx, ts->ebx);
	call(ts, mv, x86::mem(ts->edx + 0x28, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, 0x45D9C800);
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x34, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x28, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	goto loc_4CB7EB;

loc_4CB858:
	cmp(mv, &ts->eflags, x86::mem(ts->ebp, 4), ts->ebp);
	if (ts->eflags.zero) {
        goto loc_4CB87F;
    }
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_4CB860:
	mov(mv, &ts->eax, x86::mem(ts->ebp, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->eax - 0x4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4CB87A;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->edx, 4));

loc_4CB87A:
	cmp(mv, &ts->eflags, x86::mem(ts->ebp, 4), ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_4CB860;
    }

loc_4CB87F:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x5C, 4));
	pop(mv, &ts->esp, ts->edi);
	add(&ts->eax, 0x5C);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4CB8BF;
    }

loc_4CB891:
	mov(mv, &ts->eax, x86::mem(ts->esp, 4));
	add(&ts->eax, 0x5C);
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->eax - 0x4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4CB8B1;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax, 4));

loc_4CB8B1:
	mov(mv, &ts->eax, x86::mem(ts->esp, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x5C, 4));
	add(&ts->eax, 0x5C);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4CB891;
    }

loc_4CB8BF:
	mov(mv, &ts->eax, x86::mem(ts->esp, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4C, 4));
	add(&ts->eax, 0x4C);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CB8FE;
    }
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_4CB8D0:
	mov(mv, &ts->eax, x86::mem(ts->esp, 4));
	add(&ts->eax, 0x4C);
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->eax - 0x4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4CB8F0;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->edx, 4));

loc_4CB8F0:
	mov(mv, &ts->eax, x86::mem(ts->esp, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4C, 4));
	add(&ts->eax, 0x4C);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4CB8D0;
    }

loc_4CB8FE:
	mov(mv, &ts->ecx, x86::mem(ts->esp, 4));
	add(&ts->esp, 0x4);
	goto sub_4ACCF0;
}

void sub_4CB910(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x5C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4CB91F;
    }
	lea(mv, &ts->edi, x86::mem(ts->eax - 0x4, 4));
	goto loc_4CB921;

loc_4CB91F:
	xor_(&ts->edi, ts->edi);

loc_4CB921:
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x54, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	lea(mv, &ts->ebx, x86::mem(ts->ecx + 0x54, 4));
	if (ts->eflags.zero) {
        goto loc_4CB930;
    }
	lea(mv, &ts->esi, x86::mem(ts->eax - 0x4, 4));
	goto loc_4CB932;

loc_4CB930:
	xor_(&ts->esi, ts->esi);

loc_4CB932:
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4CB93B;
    }
	lea(mv, &ts->eax, x86::mem(ts->ebx - 0x4, 4));
	goto loc_4CB93D;

loc_4CB93B:
	xor_(&ts->eax, ts->eax);

loc_4CB93D:
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CB969;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CB95B;
    }
	lea(mv, &ts->edi, x86::mem(ts->eax - 0x4, 4));
	goto loc_4CB95D;

loc_4CB95B:
	xor_(&ts->edi, ts->edi);

loc_4CB95D:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4CB930;
    }
	add(&ts->esi, 0xFFFFFFFC);
	goto loc_4CB932;

loc_4CB969:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_4CB970(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x5C, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->eax, 0x1);
	if (ts->eflags.zero) {
        goto loc_4CB984;
    }
	lea(mv, &ts->esi, x86::mem(ts->edx - 0x4, 4));
	goto loc_4CB986;

loc_4CB984:
	xor_(&ts->esi, ts->esi);

loc_4CB986:
	lea(mv, &ts->edi, x86::mem(ts->ecx + 0x54, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4CB994;
    }
	lea(mv, &ts->edx, x86::mem(ts->ecx - 0x4, 4));
	goto loc_4CB996;

loc_4CB994:
	xor_(&ts->edx, ts->edx);

loc_4CB996:
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x10, 4));
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_4CB9A0:
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4CB9A9;
    }
	lea(mv, &ts->ecx, x86::mem(ts->edi - 0x4, 4));
	goto loc_4CB9AB;

loc_4CB9A9:
	xor_(&ts->ecx, ts->ecx);

loc_4CB9AB:
	cmp(&ts->eflags, ts->edx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4CB9D6;
    }
	cmp(&ts->eflags, ts->ebx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_4CB9D8;
    }
	cmp(&ts->eflags, ts->ebx, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4CB9D8;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4CB9C3;
    }
	lea(mv, &ts->esi, x86::mem(ts->ecx - 0x4, 4));
	goto loc_4CB9C5;

loc_4CB9C3:
	xor_(&ts->esi, ts->esi);

loc_4CB9C5:
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x4, 4));
	inc(&ts->eax);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4CB9D2;
    }
	lea(mv, &ts->edx, x86::mem(ts->ecx - 0x4, 4));
	goto loc_4CB9A0;

loc_4CB9D2:
	xor_(&ts->edx, ts->edx);
	goto loc_4CB9A0;

loc_4CB9D6:
	xor_(&ts->eax, ts->eax);

loc_4CB9D8:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_4CB9E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0x9120409E);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4CBA40;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x5C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->ebx + 0x5C, 4));
	if (ts->eflags.zero) {
        goto loc_4CB9FF;
    }
	lea(mv, &ts->esi, x86::mem(ts->eax - 0x4, 4));
	goto loc_4CBA01;

loc_4CB9FF:
	xor_(&ts->esi, ts->esi);

loc_4CBA01:
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4CBA0A;
    }
	lea(mv, &ts->eax, x86::mem(ts->ecx - 0x4, 4));
	goto loc_4CBA0C;

loc_4CBA0A:
	xor_(&ts->eax, ts->eax);

loc_4CBA0C:
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CBAA3;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ebx + 0x64, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_4CBA25;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4CB9FF;
    }
	add(&ts->esi, 0xFFFFFFFC);
	goto loc_4CBA01;

loc_4CBA25:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->ebx);
	game::sub_4CB970(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->ebx + 0x54, 4));

loc_4CBA30:
	dec(&ts->eax);
	push(mv, &ts->esp, ts->eax);
	game::sub_43BE60(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CBA85;
    }
	lea(mv, &ts->edi, x86::mem(ts->eax - 0x4, 4));
	goto loc_4CBA87;

loc_4CBA40:
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_4CBAA3;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x54, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->ebx + 0x54, 4));
	if (ts->eflags.zero) {
        goto loc_4CBA56;
    }
	lea(mv, &ts->esi, x86::mem(ts->eax - 0x4, 4));
	goto loc_4CBA58;

loc_4CBA56:
	xor_(&ts->esi, ts->esi);

loc_4CBA58:
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4CBA61;
    }
	lea(mv, &ts->eax, x86::mem(ts->ecx - 0x4, 4));
	goto loc_4CBA63;

loc_4CBA61:
	xor_(&ts->eax, ts->eax);

loc_4CBA63:
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CBAA3;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ebx + 0x64, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_4CBA78;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4CBA56;
    }
	add(&ts->esi, 0xFFFFFFFC);
	goto loc_4CBA58;

loc_4CBA78:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->ebx);
	game::sub_4CB970(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->ebx + 0x5C, 4));
	goto loc_4CBA30;

loc_4CBA85:
	xor_(&ts->edi, ts->edi);

loc_4CBA87:
	mov(mv, &ts->al, x86::mem(ts->edi + 0x28, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4CBAA3;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x24, 4));
	mov(mv, x86::mem(ts->ebx + 0x64, 4), ts->edi);
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x28, 4));

loc_4CBAA3:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_4CBAB0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_440EC0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CBAD3;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	mov(mv, x86::mem(ts->esi, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4CBAD3:
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4CBAF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x772BBB);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	push(mv, &ts->esp, 0x4022C0);
	push(mv, &ts->esp, 0x6);
	push(mv, &ts->esp, 0x14);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xC8, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0x0);
	game::_eh_vector_destructor_iterator__void_P_uint_int_void__P__void_P__(ts, mv);
	push(mv, &ts->esp, 0x4022C0);
	push(mv, &ts->esp, 0x6);
	push(mv, &ts->esp, 0x14);
	add(&ts->esi, 0x30);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::_eh_vector_destructor_iterator__void_P_uint_int_void__P__void_P__(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_772BB0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x10);
	goto loc_4AE7D0;

SEH_4CBAF0:
	mov(&ts->eax, 0x7DF1E0);
	goto ___CxxFrameHandler;

loc_4AE7D0:
}

void sub_4CBB60(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_531610(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4CBB78;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4CBB78:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4CBB80(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_531620(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4CBB98;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4CBB98:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4CBBA0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77414B);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x795CB4);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	game::sub_4358E0(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	game::sub_4358E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_774140:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x8);
	goto sub_4358E0;

SEH_4CBBA0:
	mov(&ts->eax, 0x7E0044);
	goto ___CxxFrameHandler;
}

void sub_4CBC00(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4CBBA0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4CBC18;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4CBC18:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4CBC20(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x795CBC);
	add(&ts->ecx, 0x4);
	goto sub_4358E0;
}

void strstreambuf___strstreambuf_void_(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776418);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x795CDC);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	game::sub_4358E0(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	game::sub_510D40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_776410:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

SEH_4E3300:
	mov(&ts->eax, 0x7DEE70);
	goto ___CxxFrameHandler;
}

void sub_4CBC90(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::strstreambuf___strstreambuf_void_(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4CBCA8;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4CBCA8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4CBCB0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776418);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x795CF0);
	mov(&ts->eax, 0x78F544);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	mov(mv, x86::mem(ts->esi + 0x178, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x134, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xF0, 4), ts->eax);
	game::sub_479100(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	game::sub_510D40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_776410:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

SEH_4E3300:
	mov(&ts->eax, 0x7DEE70);
	goto ___CxxFrameHandler;
}

void sub_4CBD20(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77419D);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x795D00);
	mov(&ts->ecx, 0x8637D0);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x4);
	game::sub_53D8C0(ts, mv);
	mov(&ts->eax, 0x78F544);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, x86::mem(ts->esi + 0x150, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x10C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xC8, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 1), 0x0);
	game::sub_479100(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	game::sub_510D40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_774160:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

loc_774168:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x4C);
	goto sub_479100;

loc_774173:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0xC8);
	goto sub_4957A0;

loc_774181:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x10C);
	goto sub_4957A0;

loc_77418F:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x150);
	goto sub_4957A0;

SEH_4F9AD0:
	mov(&ts->eax, 0x7E20EC);
	goto ___CxxFrameHandler;
}

void sub_4CBDA0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	mov(mv, &ts->eax, x86::mem(0x862838, 4));
	mov(mv, &ts->edx, x86::mem(0x7F4328, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x7F42C8);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_4CBDC0:
	cmp(&ts->eflags, ts->edx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4CBDE4;
    }
	inc(&ts->eax);
	add(&ts->ecx, 0x10);
	cmp(&ts->eflags, ts->eax, 0x6);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4CBDC0;
    }
	or_(&ts->edi, 0xFFFFFFFF);

loc_4CBDD0:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0x3);
	if (!ts->eflags.zero) {
        goto loc_4CBDE8;
    }
	dec(mv, x86::mem(ts->esi + 0x18, 4));
	if (!ts->eflags.sign) {
        goto loc_4CBDE0;
    }
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->edi);

loc_4CBDE0:
	push(mv, &ts->esp, 0x2);
	goto loc_4CBDF2;

loc_4CBDE4:
	mov(&ts->edi, ts->eax);
	goto loc_4CBDD0;

loc_4CBDE8:
	cmp(&ts->eflags, ts->eax, 0x2);
	if (!ts->eflags.zero) {
        goto loc_4CBDFA;
    }
	inc(mv, x86::mem(ts->esi + 0x18, 4));
	push(mv, &ts->esp, 0x3);

loc_4CBDF2:
	game::sub_50D180(ts, mv);
	add(&ts->esp, 0x4);

loc_4CBDFA:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	cdq(&ts->eax, ts->edx);
	inc(&ts->edi);
	idiv(&ts->eax, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->edx);
	game::sub_4B09E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x18, 4));
	shl(&ts->ecx, 0x4);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x7F42D4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x28, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x42FAAD5A);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x24, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4CBE6A;
    }
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_4967F0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x20, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_496760(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4CBE6A;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);

loc_4CBE6A:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_4CBE70(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x8, 4));
	sub(&ts->eax, 0x0);
	if (ts->eflags.zero) {
        goto loc_4CBEAB;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CBE95;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4CBED1;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_4CBDA0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4CBE95:
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_4B0E70(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_4B0EF0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4CBEAB:
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_4964D0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4CBED1;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_4967F0(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_4B10C0(ts, mv);

loc_4CBED1:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4CBEE0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	sub(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->eax, x86::mem(ts->ebp - 0x8, 4));
	mov(&ts->edi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CD70(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x4, 4));
	lea(mv, &ts->ebx, x86::mem(ts->edi + 0x4, 4));
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	mov(mv, x86::mem(ts->ebp - 0x1, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_4CBF61;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_4CBF10:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_52D100(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4CBF29;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	game::sub_4CBE70(ts, mv);

loc_4CBF29:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp - 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_52D020(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4CBF54;
    }
	cmp(mv, &ts->eflags, ts->esi, x86::mem(ts->edi, 4));
	if (ts->eflags.zero) {
        goto loc_4CBF50;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->edi, 4), ts->esi);
	game::sub_4B1170(ts, mv);

loc_4CBF50:
	mov(mv, x86::mem(ts->ebp - 0x1, 1), 0x1);

loc_4CBF54:
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4CBF10;
    }
	mov(mv, &ts->al, x86::mem(ts->ebp - 0x1, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4CBF77;
    }

loc_4CBF61:
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x5C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4CBF70;
    }
	game::sub_496B20(ts, mv);

loc_4CBF70:
	mov(mv, x86::mem(ts->esi + 0x5C, 4), 0x0);

loc_4CBF77:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_4CBF80(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x28);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, 0x34);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->esi);
	game::j__malloc(ts, mv);
	xor_(&ts->ebx, ts->ebx);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4CBFCF;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->eax, 4), 0x79B9D4);
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x28, 1), 0x1);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), 0x78F228);
	mov(mv, x86::mem(ts->eax + 0x30, 4), 0x78F21C);
	mov(&ts->edi, ts->eax);
	goto loc_4CBFD1;

loc_4CBFCF:
	xor_(&ts->edi, ts->edi);

loc_4CBFD1:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xC8E97C9C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	push(mv, &ts->esp, 0x10);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4CC003;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->eax, 4), 0x790C2C);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ecx);
	add(&ts->eax, 0x4);
	goto loc_4CC005;

loc_4CC003:
	xor_(&ts->eax, ts->eax);

loc_4CC005:
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x10, 4));
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0xC, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0x8C, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	game::sub_52E770(ts, mv);
	mov(&ts->edi, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x85AD40);
	game::sub_500C00(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4CC0A7;
    }

loc_4CC037:
	push(mv, &ts->esp, 0x18);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CC05B;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->eax, 4), 0x795CB0);
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 1), 0x1);
	mov(&ts->esi, ts->eax);
	goto loc_4CC05D;

loc_4CC05B:
	xor_(&ts->esi, ts->esi);

loc_4CC05D:
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0xA96B270);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C960(ts, mv);
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_4AEA60(ts, mv);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->ebx);
	game::sub_51F2E0(ts, mv);
	inc(&ts->edi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x85AD40);
	game::sub_500C00(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4CC037;
    }
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x10, 4));

loc_4CC0A7:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->ebx);
	game::sub_538500(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_4B1590(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x28);
	retn(mv, &ts->esp);
}

void sub_4CC0C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7763E2);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x795D10);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x3);
	game::sub_4B1520(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x1F4, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 1), 0x2);
	game::sub_4985A0(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x138, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 1), 0x1);
	game::sub_52EA90(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x8C, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 1), 0x0);
	game::sub_4CBBA0(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	game::sub_510D40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_7763B0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

loc_7763B8:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x8C);
	goto sub_4CBBA0;

loc_7763C6:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x138);
	goto sub_52EA90;

loc_7763D4:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x1F4);
	goto sub_4985A0;

SEH_4EE690:
	mov(&ts->eax, 0x7E18F4);
	goto ___CxxFrameHandler;
}

void sub_4CC140(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(ts->esp + 0x4, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x144, 4));
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x138, 4));
	if (ts->eflags.zero) {
        goto loc_4CC183;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CC165;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_4CC167;

loc_4CC165:
	xor_(&ts->eax, ts->eax);

loc_4CC167:
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->edi + 0xC, 4));
	if (ts->eflags.zero) {
        goto loc_4CC22F;
    }
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->edi);
	game::sub_5437C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x7);
	push(mv, &ts->esp, 0x7);
	push(mv, &ts->esp, ts->eax);
	goto loc_4CC1AB;

loc_4CC183:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CC18F;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_4CC191;

loc_4CC18F:
	xor_(&ts->eax, ts->eax);

loc_4CC191:
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->edi + 0xC, 4));
	if (ts->eflags.zero) {
        goto loc_4CC22F;
    }
	push(mv, &ts->esp, 0xFFFFFFFF);
	mov(&ts->ecx, ts->edi);
	game::sub_5437C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x7);
	push(mv, &ts->esp, 0x6);
	push(mv, &ts->esp, ts->ecx);

loc_4CC1AB:
	game::sub_50D150(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x144, 4));
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->ebx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CC1DF;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CC1D3;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x78, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x64, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));

loc_4CC1D3:
	mov(mv, &ts->edx, x86::mem(0x8651AC, 4));
	mov(mv, x86::mem(ts->esi + 0x22C, 4), ts->edx);

loc_4CC1DF:
	mov(&ts->ecx, ts->edi);
	game::sub_538760(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_4B1590(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x144, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x34, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4CC216;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_54E6E0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

loc_4CC216:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	or_(&ts->edx, 0x2000000);
	push(mv, &ts->esp, ts->edx);
	game::sub_54E6E0(ts, mv);

loc_4CC22F:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_4CC240(x86::thread_state* ts, x86::memory_view* mv) {
	goto sub_4CBBA0;
}

void sub_4CC250(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x80);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x18);
	mov(&ts->edi, ts->ecx);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CC27E;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 1), 0x1);
	mov(mv, x86::mem(ts->eax, 4), 0x795CB0);
	mov(&ts->esi, ts->eax);
	goto loc_4CC280;

loc_4CC27E:
	xor_(&ts->esi, ts->esi);

loc_4CC280:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x94, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	game::sub_4B1AE0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x90, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x78F744);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, 0x80);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C960(ts, mv);
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_4AEA60(ts, mv);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x4C, 4));
	game::sub_51F2E0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x80);
	retn(mv, &ts->esp, 0xC);
}

void sub_4CC2E0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x80);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x18);
	mov(&ts->edi, ts->ecx);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CC30E;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 1), 0x1);
	mov(mv, x86::mem(ts->eax, 4), 0x795CB0);
	mov(&ts->esi, ts->eax);
	goto loc_4CC310;

loc_4CC30E:
	xor_(&ts->esi, ts->esi);

loc_4CC310:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x98, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	game::sub_4B1AE0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x94, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x90, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F770);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, 0x80);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	add(&ts->esp, 0x14);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_4AEA60(ts, mv);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x4C, 4));
	game::sub_51F2E0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x80);
	retn(mv, &ts->esp, 0x10);
}

void sub_4CC380(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x80);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x18);
	mov(&ts->edi, ts->ecx);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CC3AE;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 1), 0x1);
	mov(mv, x86::mem(ts->eax, 4), 0x795CB0);
	mov(&ts->esi, ts->eax);
	goto loc_4CC3B0;

loc_4CC3AE:
	xor_(&ts->esi, ts->esi);

loc_4CC3B0:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_4AEA60(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x90, 4));
	sub(&ts->esp, 0x8);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 8));
	push(mv, &ts->esp, 0x795D28);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, 0x80);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	add(&ts->esp, 0x14);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_4AEA60(ts, mv);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x4C, 4));
	game::sub_51F2E0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x80);
	retn(mv, &ts->esp, 0x8);
}

void sub_4CC410(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x80);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x18);
	mov(&ts->edi, ts->ecx);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CC43E;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 1), 0x1);
	mov(mv, x86::mem(ts->eax, 4), 0x795CB0);
	mov(&ts->esi, ts->eax);
	goto loc_4CC440;

loc_4CC43E:
	xor_(&ts->esi, ts->esi);

loc_4CC440:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x94, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	game::sub_4B1AE0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x90, 4));
	sub(&ts->esp, 0x8);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 8));
	push(mv, &ts->esp, 0x795D28);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, 0x80);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C960(ts, mv);
	add(&ts->esp, 0x14);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_4AEA60(ts, mv);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x4C, 4));
	game::sub_51F2E0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x80);
	retn(mv, &ts->esp, 0xC);
}

void sub_4CC4A0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x80);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x18);
	mov(&ts->edi, ts->ecx);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CC4CE;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 1), 0x1);
	mov(mv, x86::mem(ts->eax, 4), 0x795CB0);
	mov(&ts->esi, ts->eax);
	goto loc_4CC4D0;

loc_4CC4CE:
	xor_(&ts->esi, ts->esi);

loc_4CC4D0:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, 0x80);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x2);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_4AEA60(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x783FE5);
	mov(&ts->ecx, ts->esi);
	game::sub_4AEA60(ts, mv);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x4C, 4));
	game::sub_51F2E0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x80);
	retn(mv, &ts->esp, 0x4);
}

void sub_4CC530(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7748B3);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x795D38);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x1);
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4CC57B;
    }
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379A0(ts, mv);
	add(&ts->esp, 0x4);

loc_4CC57B:
	movzx(mv, &ts->eax, x86::mem(ts->esi + 0x104, 1));
	mov(mv, &ts->ecx, x86::mem(0x7F4428, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_5379A0(ts, mv);
	add(&ts->esp, 0x4);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 1), 0x0);
	game::sub_4CBBA0(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	game::sub_510D40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

unknown_libname_57:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

loc_7748A8:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x4C);
	goto sub_4CBBA0;

SEH_4E5E60:
	mov(&ts->eax, 0x7E137C);
	goto ___CxxFrameHandler;
}

void sub_4CC5C0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x44);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, 0x34);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->esi);
	game::j__malloc(ts, mv);
	xor_(&ts->edi, ts->edi);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4CC60D;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->eax, 4), 0x79B9D4);
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x28, 1), 0x1);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), 0x78F228);
	mov(mv, x86::mem(ts->eax + 0x30, 4), 0x78F21C);
	mov(&ts->edi, ts->eax);

loc_4CC60D:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x3223A234);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	push(mv, &ts->esp, 0x10);
	mov(&ts->ebx, ts->eax);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CC639;
    }
	mov(mv, x86::mem(ts->eax, 4), 0x790C2C);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ebx);
	add(&ts->eax, 0x4);
	goto loc_4CC63B;

loc_4CC639:
	xor_(&ts->eax, ts->eax);

loc_4CC63B:
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x10, 4));
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0xC, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	add(&ts->esi, 0x4C);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	game::sub_52E770(ts, mv);
	push(mv, &ts->esp, 0x18);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CC67A;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->eax, 4), 0x795CB0);
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 1), 0x1);
	mov(&ts->edi, ts->eax);
	goto loc_4CC67C;

loc_4CC67A:
	xor_(&ts->edi, ts->edi);

loc_4CC67C:
	push(mv, &ts->esp, 0xA3532050);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, 0x40);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C960(ts, mv);
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_4AEA60(ts, mv);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_51F2E0(ts, mv);
	mov(mv, &ts->ebx, x86::mem(0x862838, 4));
	cmp(&ts->eflags, ts->ebx, 0x6);
	if (!ts->eflags.carry) {
        goto loc_4CC7AA;
    }
	push(mv, &ts->esp, 0x18);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CC6E1;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->eax, 4), 0x795CB0);
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 1), 0x1);
	mov(&ts->edi, ts->eax);
	goto loc_4CC6E3;

loc_4CC6E1:
	xor_(&ts->edi, ts->edi);

loc_4CC6E3:
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4CC703;
    }
	push(mv, &ts->esp, 0xD56AFE23);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, 0x40);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C960(ts, mv);
	add(&ts->esp, 0x10);
	goto loc_4CC731;

loc_4CC703:
	lea(mv, &ts->eax, x86::mem(ts->ebx - 0x3F750F4E, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x94D3715B);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, 0x40);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	add(&ts->esp, 0x14);

loc_4CC731:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_4AEA60(ts, mv);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_51F2E0(ts, mv);
	push(mv, &ts->esp, 0x18);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CC76D;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->eax, 4), 0x795CB0);
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 1), 0x1);
	mov(&ts->edi, ts->eax);
	goto loc_4CC76F;

loc_4CC76D:
	xor_(&ts->edi, ts->edi);

loc_4CC76F:
	push(mv, &ts->esp, 0x74E499B0);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, 0x40);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C960(ts, mv);
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_4AEA60(ts, mv);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_51F2E0(ts, mv);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_538500(ts, mv);

loc_4CC7AA:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	game::sub_4B1DF0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x44);
	retn(mv, &ts->esp);
}

void sub_4CC7C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7741BB);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x104);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi + 0x14, 1), 0x1);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x118, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x110, 4), 0x0);
	mov(mv, x86::mem(ts->esi, 4), 0x795CB0);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CC82B;
    }
	push(mv, &ts->esp, 0x100);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_497760(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	goto loc_4CC834;

loc_4CC82B:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x783FE5);

loc_4CC834:
	mov(&ts->ecx, ts->esi);
	game::sub_4AEA60(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x108, 4));
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x110);
	retn(mv, &ts->esp, 0x4);

loc_7741B0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x110, 4));
	goto sub_531610;

SEH_4CC7C0:
	mov(&ts->eax, 0x7E0068);
	goto ___CxxFrameHandler;
}

void std__strstreambuf___strstreambuf_void_(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7741F1);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x795D48);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x2);
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4CC8AC;
    }
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379A0(ts, mv);
	add(&ts->esp, 0x4);

loc_4CC8AC:
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x50, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_51F4E0(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 1), 0x1);
	game::sub_4CBBA0(ts, mv);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x14, 1), 0x0);
	game::sub_4CBBA0(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0xFFFFFFFF);
	game::sub_510D40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_7741D0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

loc_7741D8:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x50);
	goto sub_4CBBA0;

loc_7741E3:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0xFC);
	goto sub_4CBBA0;

SEH_4CC860:
	mov(&ts->eax, 0x7E009C);
	goto ___CxxFrameHandler;
}

void sub_4CC900(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x774214);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x120, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x18, 4));
	cmp(&ts->eflags, ts->eax, 0x1);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4CC935;
    }
	push(mv, &ts->esp, 0x78FC44);
	goto loc_4CC93A;

loc_4CC935:
	push(mv, &ts->esp, 0x78FFD0);

loc_4CC93A:
	push(mv, &ts->esp, 0x54049A3D);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x120, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x10);
	cmp(&ts->eflags, ts->ecx, 0x5);
	push(mv, &ts->esp, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4CC962;
    }
	push(mv, &ts->esp, 0x78FC44);
	goto loc_4CC967;

loc_4CC962:
	push(mv, &ts->esp, 0x78FFD0);

loc_4CC967:
	push(mv, &ts->esp, 0xD506A970);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	game::sub_51F4E0(ts, mv);
	mov(mv, &ts->ebx, x86::mem(0x861E60, 4));
	dec(&ts->ebx);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0xF, 1), 0x0);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4CCA2F;
    }
	nop();

loc_4CC9A0:
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, 0x860A60);
	game::sub_5014A0(ts, mv);
	mov(&ts->edi, ts->eax);
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0x6, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4CCA24;
    }
	mov(mv, &ts->al, x86::mem(ts->edi + 0x7, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x120, 4));
	if (ts->eflags.zero) {
        goto loc_4CC9CD;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	movsx(mv, &ts->edx, x86::mem(ts->ecx + 0x3, 1));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x18, 4));
	cmp(&ts->eflags, ts->edx, ts->eax);
	goto loc_4CC9D1;

loc_4CC9CD:
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x18, 4), 0x1);

loc_4CC9D1:
	if (!ts->eflags.zero) {
        goto loc_4CCA24;
    }
	push(mv, &ts->esp, 0x1C);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4CC9F5;
    }
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->eax);
	game::sub_4CC7C0(ts, mv);
	mov(&ts->ebx, ts->eax);

loc_4CC9F5:
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0xFFFFFFFF);
	game::sub_51F2E0(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	game::sub_52EA50(ts, mv);
	cmp(mv, &ts->eflags, ts->edi, x86::mem(0x836334, 4));
	if (!ts->eflags.zero) {
        goto loc_4CCA1B;
    }
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ebx);

loc_4CCA1B:
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esp + 0xF, 1), 0x1);

loc_4CCA24:
	dec(&ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	if (!ts->eflags.sign) {
        goto loc_4CC9A0;
    }

loc_4CCA2F:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x7C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x50, 4));
	if (ts->eflags.zero) {
        goto loc_4CCA47;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x30, 4));
	push(mv, &ts->esp, 0x78F21C);
	push(mv, &ts->esp, ts->eax);
	game::sub_51EE80(ts, mv);

loc_4CCA47:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->edi);
	game::sub_543470(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CCA69;
    }
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51F440(ts, mv);
	dec(&ts->eax);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_54EDD0(ts, mv);

loc_4CCA69:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x2C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4CCA7E;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, ts->edx);
	game::sub_51EE80(ts, mv);

loc_4CCA7E:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->edi);
	game::sub_538500(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_4B2040(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esp + 0xF, 1));
	test(&ts->eflags, ts->al, ts->al);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4CCABF;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x78FC44);
	push(mv, &ts->esp, 0x31CF7EC2);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FC44);
	push(mv, &ts->esp, 0x7D8C9EE7);
	push(mv, &ts->esp, ts->ecx);
	goto loc_4CCAE2;

loc_4CCABF:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x78FFD0);
	push(mv, &ts->esp, 0x31CF7EC2);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FFD0);
	push(mv, &ts->esp, 0x7D8C9EE7);
	push(mv, &ts->esp, ts->eax);

loc_4CCAE2:
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x20);
	mov(&ts->ecx, ts->esi);
	game::sub_4B2190(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x1C);
	retn(mv, &ts->esp);

loc_774200:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x795D58);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4CC900:
	mov(&ts->eax, 0x7E00C0);
	goto ___CxxFrameHandler;
}

void sub_4CCB10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x60, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x60, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CCB3E;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x74, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CCB3E;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x18, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CCB3E;
    }
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x860A60);
	game::sub_5014C0(ts, mv);
	mov(&ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	goto sub_4CC900;

loc_4CCB3E:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4CCB40(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x60, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x60, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CCC01;
    }
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x74, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4CCC00;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x18, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CCC00;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_4CCBB1;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x60, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x50, 4));
	if (ts->eflags.zero) {
        goto loc_4CCB80;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_4CCB82;

loc_4CCB80:
	xor_(&ts->eax, ts->eax);

loc_4CCB82:
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0x24, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CCBF9;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x6);
	push(mv, &ts->esp, ts->eax);
	game::sub_50D150(ts, mv);
	add(&ts->esp, 0xC);
	mov(&ts->ecx, ts->edi);
	game::sub_54EB60(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_4B2040(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_4B2190(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4CCBB1:
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4CCBF9;
    }
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0x50, 4));
	mov(&ts->ecx, ts->ebx);
	game::sub_4AEB20(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4CCBF8;
    }
	mov(mv, &ts->edi, x86::mem(ts->edi + 0x4, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4CCBD1;
    }
	lea(mv, &ts->eax, x86::mem(ts->edi - 0x4, 4));
	goto loc_4CCBD3;

loc_4CCBD1:
	xor_(&ts->eax, ts->eax);

loc_4CCBD3:
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x14, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_4CCBEA;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50D150(ts, mv);
	add(&ts->esp, 0xC);

loc_4CCBEA:
	mov(&ts->ecx, ts->ebx);
	game::sub_54EB40(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_4B2040(ts, mv);

loc_4CCBF8:
	pop(mv, &ts->esp, ts->ebx);

loc_4CCBF9:
	mov(&ts->ecx, ts->esi);
	game::sub_4B2190(ts, mv);

loc_4CCC00:
	pop(mv, &ts->esp, ts->edi);

loc_4CCC01:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4CCC10(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0x911AB364);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4CCD19;
    }
	if (ts->eflags.zero) {
        goto loc_4CCCE9;
    }
	cmp(&ts->eflags, ts->eax, 0x35F8620B);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4CCCA0;
    }
	if (ts->eflags.zero) {
        goto loc_4CCC83;
    }
	cmp(&ts->eflags, ts->eax, 0x1F23C75);
	if (ts->eflags.zero) {
        goto loc_4CCC5B;
    }
	cmp(&ts->eflags, ts->eax, 0xC407210);
	if (ts->eflags.zero) {
        goto loc_4CCCCB;
    }
	cmp(&ts->eflags, ts->eax, 0x34DC1BCF);
	if (!ts->eflags.zero) {
        goto loc_4CCEC6;
    }
	mov(mv, x86::mem(ts->esi + 0x1AC, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_4CCC5B:
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x1AC, 1), 0x1);
	game::sub_4CCB10(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x6C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4CCEC6;
    }
	mov(mv, x86::mem(ts->esi + 0x1A8, 4), 0x3);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_4CCC83:
	push(mv, &ts->esp, 0xF);
	game::sub_50D180(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->ecx, ts->esi);
	game::sub_4B2040(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_4B2190(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_4CCCA0:
	cmp(&ts->eflags, ts->eax, 0x406415E3);
	if (ts->eflags.zero) {
        goto loc_4CCCCB;
    }
	cmp(&ts->eflags, ts->eax, 0x5073EF13);
	if (ts->eflags.zero) {
        goto loc_4CCD82;
    }
	cmp(&ts->eflags, ts->eax, 0x72619778);
	if (!ts->eflags.zero) {
        goto loc_4CCEC6;
    }
	push(mv, &ts->esp, 0xFFFFFFFF);
	mov(&ts->ecx, ts->esi);
	game::sub_4CCB40(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_4CCCCB:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(0x8651AC, 4));
	if (ts->eflags.zero) {
        goto loc_4CCEC6;
    }
	mov(mv, x86::mem(ts->esi + 0x1A8, 4), 0x2);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_4CCCE9:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	cmp(mv, &ts->eflags, ts->ecx, x86::mem(0x8651AC, 4));
	if (ts->eflags.zero) {
        goto loc_4CCEC6;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0xA);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x1A8, 4), 0x1);
	game::sub_50D150(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_4CCD19:
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4CCDB4;
    }
	if (ts->eflags.zero) {
        goto loc_4CCDD1;
    }
	cmp(&ts->eflags, ts->eax, 0x911C0A4B);
	if (ts->eflags.zero) {
        goto loc_4CCDA6;
    }
	cmp(&ts->eflags, ts->eax, 0x9120409E);
	if (ts->eflags.zero) {
        goto loc_4CCD82;
    }
	cmp(&ts->eflags, ts->eax, 0x9803F6E2);
	if (!ts->eflags.zero) {
        goto loc_4CCEC6;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1AC, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4CCEC6;
    }
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x7C, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x74, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	game::sub_54EB80(ts, mv);
	cmp(mv, &ts->eflags, ts->edi, x86::mem(ts->esi + 0x74, 4));
	pop(mv, &ts->esp, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_4CCD6F;
    }
	cmp(mv, &ts->eflags, ts->ebx, x86::mem(ts->esi + 0x7C, 4));
	if (ts->eflags.zero) {
        goto loc_4CCEC6;
    }

loc_4CCD6F:
	mov(&ts->ecx, ts->esi);
	game::sub_4B2190(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_4B2040(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_4CCD82:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	cmp(mv, &ts->eflags, ts->ecx, x86::mem(0x8651AC, 4));
	if (ts->eflags.zero) {
        goto loc_4CCEC6;
    }
	push(mv, &ts->esp, 0xFFFFFFFF);
	mov(&ts->ecx, ts->esi);
	game::sub_4B2110(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_4CC900(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_4CCDA6:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_4CCB40(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_4CCDB4:
	cmp(&ts->eflags, ts->eax, 0xC519BFC0);
	if (ts->eflags.zero) {
        goto loc_4CCE5C;
    }
	cmp(&ts->eflags, ts->eax, 0xC98356BA);
	if (ts->eflags.zero) {
        goto loc_4CCE1D;
    }
	cmp(&ts->eflags, ts->eax, 0xD9FEEC59);
	if (!ts->eflags.zero) {
        goto loc_4CCEC6;
    }

loc_4CCDD1:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4C, 4));
	cmp(mv, &ts->eflags, ts->edx, x86::mem(0x8651AC, 4));
	if (ts->eflags.zero) {
        goto loc_4CCEC6;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x110, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	if (ts->eflags.zero) {
        goto loc_4CCDF5;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_4CCDF7;

loc_4CCDF5:
	xor_(&ts->eax, ts->eax);

loc_4CCDF7:
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x24, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CCE11;
    }
	game::sub_54EB40(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x6);
	push(mv, &ts->esp, ts->eax);
	game::sub_50D150(ts, mv);
	add(&ts->esp, 0xC);

loc_4CCE11:
	mov(&ts->ecx, ts->esi);
	game::sub_4CC900(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_4CCE1D:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1A8, 4));
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CCE30;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CCE46;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4CCEC6;
    }

loc_4CCE30:
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x1A8, 4), 0x4);
	game::sub_4977C0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_4CCE46:
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x1A8, 4), 0x4);
	game::sub_497810(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_4CCE5C:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	cmp(mv, &ts->eflags, ts->ecx, x86::mem(0x8651AC, 4));
	if (ts->eflags.zero) {
        goto loc_4CCEC6;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x60, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x60, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CCEC6;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x74, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CCEC6;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x18, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4CCEC6;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xF0A6E6B5);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x34DC1BCF);
	push(mv, &ts->esp, 0x34DC1BCF);
	push(mv, &ts->esp, 0x1F23C75);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esi + 0x1AC, 1), 0x0);
	game::sub_558790(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50D150(ts, mv);
	add(&ts->esp, 0x30);

loc_4CCEC6:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);
}

void sub_4CCED0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x774234);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x50);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4CCF1B;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4B2890(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4CCF1B:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_774220:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x795D70);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4CCED0:
	mov(&ts->eax, 0x7E00E4);
	goto ___CxxFrameHandler;
}

void sub_4CCF30(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	game::sub_4B2960(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4CCF60(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7742E0);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, 0x8);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4CD2AB;
    }
	cmp(&ts->eflags, ts->eax, 0x200);
	if (ts->eflags.zero) {
        goto loc_4CD2AB;
    }
	cmp(&ts->eflags, ts->eax, 0x4);
	if (!ts->eflags.zero) {
        goto loc_4CCFB8;
    }
	mov(&ts->ecx, 0x83AAB4);
	game::sub_502910(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x8, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_4CCFB8;
    }
	mov(&ts->ecx, 0x83AAB4);
	game::sub_502910(ts, mv);
	mov(mv, x86::mem(ts->eax + 0x8, 1), 0x0);

loc_4CCFB8:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x83AAB4);
	game::sub_502910(ts, mv);
	movzx(mv, &ts->eax, x86::mem(ts->eax, 2));
	push(mv, &ts->esp, ts->eax);
	game::sub_5D3E40(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x86, 1));
	add(&ts->esp, 0x4);
	or_(&ts->ebp, 0xFFFFFFFF);
	cmp(&ts->eflags, ts->cl, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4CD02F;
    }
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4CD01F;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->eax);
	game::sub_4B40B0(ts, mv);
	goto loc_4CD021;

loc_4CD01F:
	xor_(&ts->eax, ts->eax);

loc_4CD021:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ebp);
	game::sub_54F170(ts, mv);

loc_4CD02F:
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x4);
	if (ts->eflags.zero) {
        goto loc_4CD0E7;
    }
	mov(&ts->ecx, 0x83AAB4);
	game::sub_502910(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x8, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	setz(ts->eflags, &ts->al);
	push(mv, &ts->esp, 0x54);
	mov(mv, x86::mem(ts->esp + 0x10, 1), ts->al);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4CD093;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->eax);
	game::sub_4B3FA0(ts, mv);
	goto loc_4CD095;

loc_4CD093:
	xor_(&ts->eax, ts->eax);

loc_4CD095:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ebp);
	game::sub_54F170(ts, mv);
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x2);
	if (ts->eflags.zero) {
        goto loc_4CD128;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4B3D30(ts, mv);
	goto loc_4CD12A;

loc_4CD0E7:
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x3);
	if (ts->eflags.zero) {
        goto loc_4CD128;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4B3D30(ts, mv);
	goto loc_4CD12A;

loc_4CD128:
	xor_(&ts->eax, ts->eax);

loc_4CD12A:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ebp);
	game::sub_54F170(ts, mv);
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x4);
	if (ts->eflags.zero) {
        goto loc_4CD181;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x791458);
	goto loc_4CD183;

loc_4CD181:
	xor_(&ts->edi, ts->edi);

loc_4CD183:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ebp);
	game::sub_54F170(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x4);
	if (ts->eflags.zero) {
        goto loc_4CD240;
    }
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x5);
	if (ts->eflags.zero) {
        goto loc_4CD1DF;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->eax);
	game::sub_4B3750(ts, mv);
	goto loc_4CD1E1;

loc_4CD1DF:
	xor_(&ts->eax, ts->eax);

loc_4CD1E1:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ebp);
	game::sub_54F170(ts, mv);
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x6);
	if (ts->eflags.zero) {
        goto loc_4CD230;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->eax);
	game::sub_4B3930(ts, mv);
	goto loc_4CD232;

loc_4CD230:
	xor_(&ts->eax, ts->eax);

loc_4CD232:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ebp);
	game::sub_54F170(ts, mv);

loc_4CD240:
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x7);
	if (ts->eflags.zero) {
        goto loc_4CD289;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x791410);
	goto loc_4CD28B;

loc_4CD289:
	xor_(&ts->edi, ts->edi);

loc_4CD28B:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ebp);
	game::sub_54F170(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x14);
	retn(mv, &ts->esp);

loc_4CD2AB:
	mov(&ts->ecx, ts->esi);
	game::sub_4B41C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x14);
	retn(mv, &ts->esp);

loc_774240:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7916E0);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774254:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x795D84);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774268:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x791784);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_77427C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x791784);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774290:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x791790);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7742A4:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x791770);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7742B8:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x791764);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7742CC:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x791758);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4CCF60:
	mov(&ts->eax, 0x7E0140);
	goto ___CxxFrameHandler;
}

void sub_4CD2D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x774354);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	cmp(&ts->eflags, ts->eax, 0x8);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4CD510;
    }
	cmp(&ts->eflags, ts->eax, 0x200);
	if (ts->eflags.zero) {
        goto loc_4CD510;
    }
	mov(&ts->ecx, 0x83AAB4);
	game::sub_502910(ts, mv);
	movzx(mv, &ts->eax, x86::mem(ts->eax, 2));
	push(mv, &ts->esp, ts->eax);
	game::sub_5D3E40(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x86, 1));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->cl, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4CD392;
    }
	movsx(mv, &ts->ecx, x86::mem(ts->eax + 0x8A, 2));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x1);
	game::sub_5156F0(ts, mv);
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4CD392;
    }
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4CD37E;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4B40B0(ts, mv);
	goto loc_4CD380;

loc_4CD37E:
	xor_(&ts->eax, ts->eax);

loc_4CD380:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0xFFFFFFFF);
	game::sub_54F170(ts, mv);

loc_4CD392:
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4CD3DC;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x791458);
	goto loc_4CD3DE;

loc_4CD3DC:
	xor_(&ts->edi, ts->edi);

loc_4CD3DE:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xFFFFFFFF);
	game::sub_54F170(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x4);
	if (ts->eflags.zero) {
        goto loc_4CD4A2;
    }
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x2);
	if (ts->eflags.zero) {
        goto loc_4CD43E;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->eax);
	game::sub_4B3750(ts, mv);
	goto loc_4CD440;

loc_4CD43E:
	xor_(&ts->eax, ts->eax);

loc_4CD440:
	push(mv, &ts->esp, 0x1);
	or_(&ts->edi, 0xFFFFFFFF);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->edi);
	game::sub_54F170(ts, mv);
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x3);
	if (ts->eflags.zero) {
        goto loc_4CD492;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->eax);
	game::sub_4B3930(ts, mv);
	goto loc_4CD494;

loc_4CD492:
	xor_(&ts->eax, ts->eax);

loc_4CD494:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->edi);
	game::sub_54F170(ts, mv);

loc_4CD4A2:
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x4);
	if (ts->eflags.zero) {
        goto loc_4CD4EB;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x791410);
	goto loc_4CD4ED;

loc_4CD4EB:
	xor_(&ts->edi, ts->edi);

loc_4CD4ED:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xFFFFFFFF);
	game::sub_54F170(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4CD510:
	mov(&ts->ecx, ts->esi);
	game::sub_4B41C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_7742F0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7916E0);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774304:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x791790);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774318:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x791770);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_77432C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x791764);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774340:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x791758);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4CD530:
	mov(&ts->eax, 0x7E0184);
	goto ___CxxFrameHandler;
}

void sub_4CD530(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x774354);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	cmp(&ts->eflags, ts->eax, 0x8);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4CD786;
    }
	cmp(&ts->eflags, ts->eax, 0x200);
	if (ts->eflags.zero) {
        goto loc_4CD786;
    }
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x83AAB4);
	game::sub_502910(ts, mv);
	movzx(mv, &ts->eax, x86::mem(ts->eax, 2));
	push(mv, &ts->esp, ts->eax);
	game::sub_5D3E40(ts, mv);
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->al, x86::mem(ts->edi + 0x86, 1));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->al, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4CD5F4;
    }
	movsx(mv, &ts->ecx, x86::mem(ts->edi + 0x8A, 2));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x1);
	game::sub_5156F0(ts, mv);
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4CD5F4;
    }
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4CD5E0;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4B40B0(ts, mv);
	goto loc_4CD5E2;

loc_4CD5E0:
	xor_(&ts->eax, ts->eax);

loc_4CD5E2:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xFFFFFFFF);
	game::sub_54F170(ts, mv);

loc_4CD5F4:
	mov(mv, &ts->di, x86::mem(ts->edi + 0x8A, 2));
	cmp(&ts->eflags, ts->di, 0x1073);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4CD609;
    }
	cmp(&ts->eflags, ts->di, 0x107F);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4CD666;
    }

loc_4CD609:
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4CD652;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x791458);
	goto loc_4CD654;

loc_4CD652:
	xor_(&ts->edi, ts->edi);

loc_4CD654:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xFFFFFFFF);
	game::sub_54F170(ts, mv);

loc_4CD666:
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x4);
	if (ts->eflags.zero) {
        goto loc_4CD718;
    }
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x2);
	if (ts->eflags.zero) {
        goto loc_4CD6B4;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->eax);
	game::sub_4B3750(ts, mv);
	goto loc_4CD6B6;

loc_4CD6B4:
	xor_(&ts->eax, ts->eax);

loc_4CD6B6:
	push(mv, &ts->esp, 0x1);
	or_(&ts->edi, 0xFFFFFFFF);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->edi);
	game::sub_54F170(ts, mv);
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x3);
	if (ts->eflags.zero) {
        goto loc_4CD708;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->eax);
	game::sub_4B3930(ts, mv);
	goto loc_4CD70A;

loc_4CD708:
	xor_(&ts->eax, ts->eax);

loc_4CD70A:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->edi);
	game::sub_54F170(ts, mv);

loc_4CD718:
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x4);
	if (ts->eflags.zero) {
        goto loc_4CD761;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x791410);
	goto loc_4CD763;

loc_4CD761:
	xor_(&ts->edi, ts->edi);

loc_4CD763:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xFFFFFFFF);
	game::sub_54F170(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4CD786:
	mov(&ts->ecx, ts->esi);
	game::sub_4B41C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_7742F0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7916E0);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774304:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x791790);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774318:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x791770);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_77432C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x791764);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774340:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x791758);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4CD530:
	mov(&ts->eax, 0x7E0184);
	goto ___CxxFrameHandler;
}

void sub_4CD7A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7743C4);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	cmp(&ts->eflags, ts->eax, 0x8);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4CD9FD;
    }
	cmp(&ts->eflags, ts->eax, 0x200);
	if (ts->eflags.zero) {
        goto loc_4CD9FD;
    }
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x83AAB4);
	game::sub_502910(ts, mv);
	movzx(mv, &ts->eax, x86::mem(ts->eax, 2));
	push(mv, &ts->esp, ts->eax);
	game::sub_5D3E40(ts, mv);
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->al, x86::mem(ts->edi + 0x86, 1));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->al, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4CD864;
    }
	movsx(mv, &ts->ecx, x86::mem(ts->edi + 0x8A, 2));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x1);
	game::sub_5156F0(ts, mv);
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4CD864;
    }
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4CD850;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4B40B0(ts, mv);
	goto loc_4CD852;

loc_4CD850:
	xor_(&ts->eax, ts->eax);

loc_4CD852:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xFFFFFFFF);
	game::sub_54F170(ts, mv);

loc_4CD864:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x80, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4CD8C3;
    }
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4CD8AF;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4B3D30(ts, mv);
	goto loc_4CD8B1;

loc_4CD8AF:
	xor_(&ts->eax, ts->eax);

loc_4CD8B1:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xFFFFFFFF);
	game::sub_54F170(ts, mv);

loc_4CD8C3:
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x4);
	if (ts->eflags.zero) {
        goto loc_4CD984;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x80, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4CD92F;
    }
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x2);
	if (ts->eflags.zero) {
        goto loc_4CD91B;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4B3750(ts, mv);
	goto loc_4CD91D;

loc_4CD91B:
	xor_(&ts->eax, ts->eax);

loc_4CD91D:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xFFFFFFFF);
	game::sub_54F170(ts, mv);

loc_4CD92F:
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x3);
	if (ts->eflags.zero) {
        goto loc_4CD970;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4B3930(ts, mv);
	goto loc_4CD972;

loc_4CD970:
	xor_(&ts->eax, ts->eax);

loc_4CD972:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xFFFFFFFF);
	game::sub_54F170(ts, mv);

loc_4CD984:
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0x80, 4), 0x1);
	pop(mv, &ts->esp, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_4CDA04;
    }
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x4);
	if (ts->eflags.zero) {
        goto loc_4CD9CF;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4B3AA0(ts, mv);
	goto loc_4CD9D1;

loc_4CD9CF:
	xor_(&ts->eax, ts->eax);

loc_4CD9D1:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0xFFFFFFFF);
	game::sub_54F170(ts, mv);
	mov(mv, x86::mem(0x89E7C4, 4), 0x0);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4CD9FD:
	mov(&ts->ecx, ts->esi);
	game::sub_4B41C0(ts, mv);

loc_4CDA04:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_774360:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7916E0);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774374:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x791784);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774388:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x791770);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_77439C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x791764);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7743B0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x791790);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4CD7A0:
	mov(&ts->eax, 0x7E01C8);
	goto ___CxxFrameHandler;
}

void sub_4CDA20(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x774468);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	cmp(&ts->eflags, ts->eax, 0x8);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4CDB1E;
    }
	cmp(&ts->eflags, ts->eax, 0x200);
	if (ts->eflags.zero) {
        goto loc_4CDB1E;
    }
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4CDA9C;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7914A0);
	goto loc_4CDA9E;

loc_4CDA9C:
	xor_(&ts->edi, ts->edi);

loc_4CDA9E:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xFFFFFFFF);
	game::sub_54F170(ts, mv);
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4CDAF9;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7914E8);
	goto loc_4CDAFB;

loc_4CDAF9:
	xor_(&ts->edi, ts->edi);

loc_4CDAFB:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xFFFFFFFF);
	game::sub_54F170(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4CDB1E:
	mov(&ts->ecx, ts->esi);
	game::sub_4B41C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_774440:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x795D98);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774454:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x795D8C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4CDA20:
	mov(&ts->eax, 0x7E01F4);
	goto ___CxxFrameHandler;
}

void sub_4CDB40(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7744D0);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	cmp(&ts->eflags, ts->eax, 0x8);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4CDD1D;
    }
	cmp(&ts->eflags, ts->eax, 0x200);
	if (ts->eflags.zero) {
        goto loc_4CDD1D;
    }
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x83AAB4);
	game::sub_502910(ts, mv);
	movzx(mv, &ts->eax, x86::mem(ts->eax, 2));
	push(mv, &ts->esp, ts->eax);
	game::sub_5D3E40(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x86, 1));
	add(&ts->esp, 0x4);
	or_(&ts->ebp, 0xFFFFFFFF);
	cmp(&ts->eflags, ts->cl, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4CDC03;
    }
	movsx(mv, &ts->ecx, x86::mem(ts->eax + 0x8A, 2));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x1);
	game::sub_5156F0(ts, mv);
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4CDC03;
    }
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4CDBF3;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4B40B0(ts, mv);
	goto loc_4CDBF5;

loc_4CDBF3:
	xor_(&ts->eax, ts->eax);

loc_4CDBF5:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebp);
	game::sub_54F170(ts, mv);

loc_4CDC03:
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x4);
	if (ts->eflags.zero) {
        goto loc_4CDCB2;
    }
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4CDC51;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4B3750(ts, mv);
	goto loc_4CDC53;

loc_4CDC51:
	xor_(&ts->eax, ts->eax);

loc_4CDC53:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebp);
	game::sub_54F170(ts, mv);
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x2);
	if (ts->eflags.zero) {
        goto loc_4CDCA2;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4B3930(ts, mv);
	goto loc_4CDCA4;

loc_4CDCA2:
	xor_(&ts->eax, ts->eax);

loc_4CDCA4:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebp);
	game::sub_54F170(ts, mv);

loc_4CDCB2:
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x3);
	if (ts->eflags.zero) {
        goto loc_4CDCFB;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x791410);
	goto loc_4CDCFD;

loc_4CDCFB:
	xor_(&ts->edi, ts->edi);

loc_4CDCFD:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebp);
	game::sub_54F170(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4CDD1D:
	mov(&ts->ecx, ts->esi);
	game::sub_4B41C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_774480:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7916E0);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774494:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x791770);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7744A8:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x791764);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7744BC:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x791758);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4CDB40:
	mov(&ts->eax, 0x7E0230);
	goto ___CxxFrameHandler;
}

void sub_4CDD40(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x20);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4CDD5D;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_580E90(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->ebx);

loc_4CDD5D:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x18, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_4CDE0A;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esi + 0xC, 4));
	mov(mv, x86::mem(ts->esi + 0x18, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_4CDD88;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_580E90(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ebx);
	goto loc_4CDE0A;

loc_4CDD88:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4CDD92;
    }
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->ecx);

loc_4CDD92:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esi + 0x20, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ebx);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x791858);
	game::sub_50B990(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->edi, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	game::sub_4901D0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C990(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78DBCC, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78DBD0, 4));
	add(&ts->esp, 0x1C);
	mov(&ts->ecx, ts->esi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_4B4B80(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x2C, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4CDDF4;
    }
	mov(mv, &ts->al, x86::mem(ts->eax + 0x1C, 1));
	goto loc_4CDDFA;

loc_4CDDF4:
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x124, 1));

loc_4CDDFA:
	cmp(&ts->eflags, ts->al, ts->bl);
	if (ts->eflags.zero) {
        goto loc_4CDE0A;
    }
	push(mv, &ts->esp, 0x3F800000);
	mov(&ts->ecx, ts->esi);
	game::sub_498630(ts, mv);

loc_4CDE0A:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x14, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4CDE4C;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4CDE4C;
    }
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esi + 0x1C, 4));
	if (ts->eflags.zero) {
        goto loc_4CDE4C;
    }
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, 0x791864);
	push(mv, &ts->esp, ts->edx);
	game::sub_4400D0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x4AEBF0);
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, 0x2);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->eax);
	game::sub_57CF70(ts, mv);
	add(&ts->esp, 0x28);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->eax);

loc_4CDE4C:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4CDEBD;
    }
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esi + 0xC, 4));
	if (!ts->eflags.zero) {
        goto loc_4CDEBD;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x2C, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_4CDE73;
    }
	push(mv, &ts->esp, 0x3F800000);
	mov(&ts->ecx, ts->esi);
	game::sub_498630(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x2C, 1), ts->bl);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp);

loc_4CDE73:
	mov(mv, &ts->edx, x86::mem(0x865198, 4));
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x28, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_577310(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CDEBD;
    }
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78DBCC, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.parity) {
        goto loc_4CDEBB;
    }
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78DBCC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_498630(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp);

loc_4CDEBB:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));

loc_4CDEBD:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp);
}

void sub_4CDED0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(0x883DA4, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebp, ts->ecx);
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ebp);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4CDF10;
    }

loc_4CDEE5:
	push(mv, &ts->esp, ts->edi);
	game::sub_5D3E80(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->esi, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->ebp);
	game::sub_4987C0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4CDF06;
    }
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->ebp);
	game::sub_4B4C10(ts, mv);

loc_4CDF06:
	mov(mv, &ts->eax, x86::mem(0x883DA4, 4));
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4CDEE5;
    }

loc_4CDF10:
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ebx, x86::mem(ts->ebp + 0x4C, 4));
	push(mv, &ts->esp, 0x4987A0);
	mov(&ts->ecx, ts->ebx);
	game::sub_43E650(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->ebx, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4CDF7F;
    }

loc_4CDF26:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4CDF32;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	goto loc_4CDF39;

loc_4CDF32:
	movsx(mv, &ts->eax, x86::mem(ts->eax + 0x8A, 2));

loc_4CDF39:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->ebp + 0x5C, 4));
	game::sub_52EC90(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(&ts->ebp, ts->eax);
	game::sub_4984B0(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(&ts->edi, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	game::sub_4901D0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4CDF6B;
    }
	mov(&ts->edi, 0x74CE8C0B);

loc_4CDF6B:
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebp);
	game::sub_50C990(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x18, 4));
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4CDF26;
    }

loc_4CDF7F:
	mov(mv, &ts->ecx, x86::mem(0x850078, 4));
	cmp(&ts->eflags, ts->ecx, 0x8);
	if (!ts->eflags.zero) {
        goto loc_4CDF9A;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx, 4));
	mov(mv, x86::mem(ts->ebp + 0x54, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(0x850078, 4));
	cmp(&ts->eflags, ts->ecx, 0x8);
	if (ts->eflags.zero) {
        goto loc_4CDFB4;
    }

loc_4CDF9A:
	cmp(&ts->eflags, ts->ecx, 0x200);
	if (ts->eflags.zero) {
        goto loc_4CDFB4;
    }
	mov(&ts->ecx, 0x83AAB4);
	game::sub_502910(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x850078, 4));
	goto loc_4CDFB9;

loc_4CDFB4:
	mov(&ts->eax, 0x8500B8);

loc_4CDFB9:
	cmp(&ts->eflags, ts->ecx, 0x8);
	movzx(mv, &ts->edx, x86::mem(ts->eax, 2));
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x4, 4));
	if (ts->eflags.zero) {
        goto loc_4CE0DD;
    }
	test(&ts->eflags, ts->edx, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_4CE036;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x54, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4CDFD8;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebx, 4));
	mov(mv, x86::mem(ts->ebp + 0x54, 4), ts->ecx);

loc_4CDFD8:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x54, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x2C, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4CDFE9;
    }
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x14, 4));
	goto loc_4CDFF0;

loc_4CDFE9:
	movsx(mv, &ts->esi, x86::mem(ts->ecx + 0x8A, 2));

loc_4CDFF0:
	push(mv, &ts->esp, 0x78F8D0);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4CE0DD;
    }
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	cmp(&ts->eflags, ts->eax, 0x8);
	if (ts->eflags.zero) {
        goto loc_4CE02B;
    }
	cmp(&ts->eflags, ts->eax, 0x200);
	if (ts->eflags.zero) {
        goto loc_4CE02B;
    }
	mov(&ts->ecx, 0x83AAB4);
	game::sub_502910(ts, mv);
	mov(mv, x86::mem(ts->eax, 2), ts->si);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ebx);
	goto loc_4CE0DD;

loc_4CE02B:
	mov(mv, x86::mem(0x8500BC, 4), ts->ebx);
	goto loc_4CE0D6;

loc_4CE036:
	mov(mv, &ts->esi, x86::mem(ts->ebx, 4));
	mov(&ts->eax, ts->esi);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4CE05D;
    }
	mov(&ts->edi, ts->edi);

loc_4CE040:
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x2C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4CE04C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x14, 4));
	goto loc_4CE053;

loc_4CE04C:
	movsx(mv, &ts->ecx, x86::mem(ts->ecx + 0x8A, 2));

loc_4CE053:
	cmp(&ts->eflags, ts->ecx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_4CE05F;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4CE040;
    }

loc_4CE05D:
	xor_(&ts->eax, ts->eax);

loc_4CE05F:
	xor_(&ts->cl, ts->cl);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ebp + 0x54, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CE086;
    }
	mov(mv, &ts->dl, x86::mem(ts->eax + 0x8, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.zero) {
        goto loc_4CE082;
    }
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	cmp(&ts->eflags, ts->eax, 0x8);
	if (ts->eflags.zero) {
        goto loc_4CE082;
    }
	cmp(&ts->eflags, ts->eax, 0x200);
	if (ts->eflags.zero) {
        goto loc_4CE082;
    }
	mov(&ts->cl, 0x1);

loc_4CE082:
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_4CE0DD;
    }

loc_4CE086:
	mov(mv, x86::mem(ts->ebp + 0x54, 4), ts->esi);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4CE095;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x14, 4));
	goto loc_4CE09C;

loc_4CE095:
	movsx(mv, &ts->esi, x86::mem(ts->eax + 0x8A, 2));

loc_4CE09C:
	push(mv, &ts->esp, 0x78F8D0);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4CE0DD;
    }
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	cmp(&ts->eflags, ts->eax, 0x8);
	if (ts->eflags.zero) {
        goto loc_4CE0D0;
    }
	cmp(&ts->eflags, ts->eax, 0x200);
	if (ts->eflags.zero) {
        goto loc_4CE0D0;
    }
	mov(&ts->ecx, 0x83AAB4);
	game::sub_502910(ts, mv);
	mov(mv, x86::mem(ts->eax, 2), ts->si);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edi);
	goto loc_4CE0DD;

loc_4CE0D0:
	mov(mv, x86::mem(0x8500BC, 4), ts->edi);

loc_4CE0D6:
	mov(mv, x86::mem(0x8500B8, 2), ts->si);

loc_4CE0DD:
	lea(mv, &ts->esi, x86::mem(ts->ebp + 0x5C, 4));
	mov(&ts->ecx, ts->esi);
	game::sub_538900(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x54, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x2C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	pop(mv, &ts->esp, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4CE0F7;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x14, 4));
	goto loc_4CE0FE;

loc_4CE0F7:
	movsx(mv, &ts->eax, x86::mem(ts->ecx + 0x8A, 2));

loc_4CE0FE:
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_538700(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x54, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x2C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4CE115;
    }
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x14, 4));
	goto loc_4CE11C;

loc_4CE115:
	movsx(mv, &ts->esi, x86::mem(ts->ecx + 0x8A, 2));

loc_4CE11C:
	push(mv, &ts->esp, 0x78F8D0);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4CE160;
    }
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	cmp(&ts->eflags, ts->eax, 0x8);
	if (ts->eflags.zero) {
        goto loc_4CE153;
    }
	cmp(&ts->eflags, ts->eax, 0x200);
	if (ts->eflags.zero) {
        goto loc_4CE153;
    }
	mov(&ts->ecx, 0x83AAB4);
	game::sub_502910(ts, mv);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edi);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->eax, 2), ts->si);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

loc_4CE153:
	mov(mv, x86::mem(0x8500B8, 2), ts->si);
	mov(mv, x86::mem(0x8500BC, 4), ts->edi);

loc_4CE160:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);
}

void sub_4CE170(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x224);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x2C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4CE188;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x14, 4));
	goto loc_4CE18F;

loc_4CE188:
	movsx(mv, &ts->ecx, x86::mem(ts->ecx + 0x8A, 2));

loc_4CE18F:
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x10, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_516280(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xF601F2D4);
	push(mv, &ts->esp, ts->edi);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x53C956C4);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4C, 4));
	add(&ts->esp, 0x14);
	cmp(&ts->eflags, ts->eax, ts->edi);
	mov(&ts->ecx, 0x1);
	if (ts->eflags.zero) {
        goto loc_4CE1EB;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x54, 4));
	mov(&ts->edi, ts->edi);

loc_4CE1E0:
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (ts->eflags.zero) {
        goto loc_4CE1ED;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	inc(&ts->ecx);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_4CE1E0;
    }

loc_4CE1EB:
	xor_(&ts->ecx, ts->ecx);

loc_4CE1ED:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x150, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xC0, 4));
	game::sub_538080(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x790E98);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_5379C0(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x790E84);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_5379C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	mov(&ts->ebx, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	add(&ts->esp, 0x18);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4CE26B;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x158, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4CE32F;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x444969FD);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x158, 1), 0x0);
	goto loc_4CE32C;

loc_4CE26B:
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esi + 0x50, 4));
	mov(mv, &ts->al, x86::mem(ts->esi + 0x158, 1));
	if (!ts->eflags.zero) {
        goto loc_4CE29E;
    }
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4CE32F;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x444969FE);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x159, 1), 0x0);
	goto loc_4CE32C;

loc_4CE29E:
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4CE2BF;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x444969FD);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x158, 1), 0x1);
	goto loc_4CE2E4;

loc_4CE2BF:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x159, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4CE2E7;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x444969FE);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x159, 1), 0x1);

loc_4CE2E4:
	add(&ts->esp, 0xC);

loc_4CE2E7:
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, 0x78F568);
	push(mv, &ts->esp, ts->edi);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4CE30D;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F758);
	push(mv, &ts->esp, ts->edi);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);

loc_4CE30D:
	push(mv, &ts->esp, 0x78F568);
	push(mv, &ts->esp, ts->ebx);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4CE32F;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F758);
	push(mv, &ts->esp, ts->ebx);
	game::sub_51CF70(ts, mv);

loc_4CE32C:
	add(&ts->esp, 0xC);

loc_4CE32F:
	mov(&ts->ecx, ts->esi);
	game::sub_4988C0(ts, mv);
	mov(mv, &ts->bl, x86::mem(0x83AA1A, 1));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x2C, 4));
	test(&ts->eflags, ts->bl, ts->bl);
	setz(ts->eflags, &ts->al);
	test(&ts->eflags, ts->edx, ts->edx);
	pop(mv, &ts->esp, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4CE355;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x28, 4));
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edx);
	goto loc_4CE35F;

loc_4CE355:
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x98, 4));
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->ecx);

loc_4CE35F:
	test(&ts->eflags, ts->al, ts->al);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78435C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	if (ts->eflags.zero) {
        goto loc_4CE37F;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78F754, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));

loc_4CE37F:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	neg(&ts->al);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0xF6640E9B);
	add(&ts->eax, 0xB5D640B1);
	push(mv, &ts->esp, ts->eax);
	game::sub_4FFA80(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	sub(&ts->esp, 0x8);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 8));
	push(mv, &ts->esp, 0x78F748);
	push(mv, &ts->esp, 0x80C9DAA);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	add(&ts->esp, 0x18);
	cmp(&ts->eflags, ts->eax, 0x8);
	pop(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4CE3CE;
    }
	cmp(&ts->eflags, ts->eax, 0x200);
	mov(mv, &ts->eax, x86::mem(0x83AAB4, 4));
	if (!ts->eflags.zero) {
        goto loc_4CE3D3;
    }

loc_4CE3CE:
	mov(mv, &ts->eax, x86::mem(0x850088, 4));

loc_4CE3D3:
	cmp(&ts->eflags, ts->eax, 0x3);
	if (!ts->eflags.zero) {
        goto loc_4CE422;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x15C, 4));
	push(mv, &ts->esp, 0x3B7B9567);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x2C, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4CE3FB;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x14, 4));
	goto loc_4CE402;

loc_4CE3FB:
	movsx(mv, &ts->ecx, x86::mem(ts->ecx + 0x8A, 2));

loc_4CE402:
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x844ADC);
	game::sub_502C50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, 0x555EECA);
	push(mv, &ts->esp, ts->ecx);
	goto loc_4CE49A;

loc_4CE422:
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.zero) {
        goto loc_4CE43A;
    }
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_4CE43A;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x15C, 4));
	push(mv, &ts->esp, 0x3B4A1ECB);
	push(mv, &ts->esp, ts->edx);
	goto loc_4CE446;

loc_4CE43A:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x15C, 4));
	push(mv, &ts->esp, 0xDB0C5EFD);
	push(mv, &ts->esp, ts->eax);

loc_4CE446:
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x2C, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4CE45D;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x14, 4));
	goto loc_4CE464;

loc_4CE45D:
	movsx(mv, &ts->ecx, x86::mem(ts->ecx + 0x8A, 2));

loc_4CE464:
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x844ADC);
	game::sub_502AA0(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	game::sub_577240(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, 0x555EECA);
	push(mv, &ts->esp, ts->edx);

loc_4CE49A:
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x8D9B9EC7);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, 0x200);
	push(mv, &ts->esp, ts->eax);
	game::sub_4FFA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x2C, 4));
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4CE4C8;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x14, 4));
	goto loc_4CE4CF;

loc_4CE4C8:
	movsx(mv, &ts->eax, x86::mem(ts->ecx + 0x8A, 2));

loc_4CE4CF:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x795DA8);
	game::sub_50B990(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x38, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x258E6A24);
	push(mv, &ts->esp, ts->esi);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x1C);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x224);
	retn(mv, &ts->esp);
}

void sub_4CE500(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x24);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	xor_(&ts->esi, ts->esi);
	lea(mv, &ts->ebp, x86::mem(ts->edi + 0x68, 4));

loc_4CE512:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	game::sub_498BF0(ts, mv);
	mov(&ts->bl, ts->al);
	game::sub_4FF970(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x8);
	if (!ts->eflags.zero) {
        goto loc_4CE54C;
    }
	mov(&ts->ecx, ts->eax);
	xor_(&ts->eax, ts->eax);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	movsx(&ts->ax, ts->bl);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->ebp, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 2), ts->ax);
	game::sub_535F40(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	goto loc_4CE561;

loc_4CE54C:
	mov(mv, &ts->eax, x86::mem(ts->ebp, 4));
	movsx(&ts->edx, ts->bl);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x795ABC);
	push(mv, &ts->esp, ts->eax);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0xC);

loc_4CE561:
	inc(&ts->esi);
	add(&ts->ebp, 0x4);
	cmp(&ts->eflags, ts->esi, 0x2F);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4CE512;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x60, 4));
	push(mv, &ts->esp, 0x795DBC);
	game::sub_535FE0(ts, mv);
	mov(&ts->ecx, ts->edi);
	game::sub_4B5100(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x24);
	retn(mv, &ts->esp);
}

void sub_4CE590(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x5E, 1));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x218, 4));
	mov(&ts->cl, 0x1);
	xor_(&ts->al, ts->cl);
	mov(mv, x86::mem(ts->esi + 0x5E, 1), ts->al);
	xor_(&ts->al, ts->al);
	cmp(&ts->eflags, ts->edx, 0x3);
	mov(mv, x86::mem(ts->esi + 0x5D, 1), ts->al);
	if (!ts->eflags.zero) {
        goto loc_4CE5B3;
    }
	mov(mv, x86::mem(ts->esi + 0x5E, 1), ts->cl);
	mov(mv, x86::mem(ts->esi + 0x5D, 1), ts->al);

loc_4CE5B3:
	mov(&ts->ecx, ts->esi);
	game::sub_4CE500(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x18);
	push(mv, &ts->esp, ts->eax);
	game::sub_51DE60(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4CE5D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x5D, 1));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x218, 4));
	xor_(&ts->cl, 0x1);
	cmp(&ts->eflags, ts->eax, 0x3);
	mov(mv, x86::mem(ts->esi + 0x5D, 1), ts->cl);
	if (!ts->eflags.zero) {
        goto loc_4CE5EB;
    }
	mov(mv, x86::mem(ts->esi + 0x5D, 1), 0x0);

loc_4CE5EB:
	mov(&ts->ecx, ts->esi);
	game::sub_4CE500(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x18);
	push(mv, &ts->esp, ts->eax);
	game::sub_51DE60(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4CE610(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x5F, 1));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x218, 4));
	xor_(&ts->cl, 0x1);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x5F, 1), ts->cl);
	if (ts->eflags.zero) {
        goto loc_4CE62A;
    }
	mov(mv, x86::mem(ts->esi + 0x5F, 1), 0x0);

loc_4CE62A:
	mov(&ts->ecx, ts->esi);
	game::sub_4CE500(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x18);
	push(mv, &ts->esp, ts->eax);
	game::sub_51DE60(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4CE650(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7744F4);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x58);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4CE69B;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4B5260(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4CE69B:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_7744E0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x795DC4);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4CE650:
	mov(&ts->eax, 0x7E0254);
	goto ___CxxFrameHandler;
}

void sub_4CE6B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x774514);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x58);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4CE6FB;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4B5300(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4CE6FB:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_774500:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x795DD8);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4CE6B0:
	mov(&ts->eax, 0x7E0278);
	goto ___CxxFrameHandler;
}

void sub_4CE710(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776418);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	game::sub_551DE0(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	mov(mv, x86::mem(ts->esi, 4), 0x78F988);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x50, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x58, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x51, 1), ts->al);
	game::sub_4B53C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_776410:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

SEH_4E3300:
	mov(&ts->eax, 0x7DEE70);
	goto ___CxxFrameHandler;
}

void sub_4CE770(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776418);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x8, 4));
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->ebp - 0x10, 4), ts->esi);
	game::sub_551DE0(ts, mv);
	xor_(&ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esi, 4), 0x78F998);
	mov(mv, x86::mem(ts->esi + 0x54, 4), 0x3);
	mov(mv, x86::mem(ts->esi + 0x80, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x84, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x88, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x8C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x90, 4), ts->ebx);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), ts->ebx);
	game::sub_504820(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4CE7EF;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x6C, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_4CE7EF;
    }
	cmp(mv, &ts->eflags, x86::mem(0x8384DC, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_4CE7EF;
    }
	game::sub_54E6B0(ts, mv);

loc_4CE7EF:
	mov(mv, &ts->eax, x86::mem(0x83A9D8, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50D2D0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537950(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	game::sub_4AC9B0(ts, mv);
	mov(mv, x86::mem(0x7F68B4, 4), ts->ebx);
	add(&ts->esp, 0x10);
	mov(&ts->ecx, 0x832DAC);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x50, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x58, 4), 0x95AD0949);
	mov(mv, x86::mem(ts->esi + 0x5C, 4), 0x95AD094A);
	mov(mv, x86::mem(ts->esi + 0x60, 4), 0x95AD094B);
	mov(mv, x86::mem(ts->esi + 0x64, 4), 0x95AD094C);
	mov(mv, x86::mem(ts->esi + 0x68, 4), 0xC2EA8DE7);
	mov(mv, x86::mem(ts->esi + 0x6C, 4), 0xC2EA8DE8);
	mov(mv, x86::mem(ts->esi + 0x70, 4), 0xC2EA8DE9);
	mov(mv, x86::mem(ts->esi + 0x74, 4), 0xC2EA8DEA);
	mov(mv, x86::mem(ts->esi + 0xE9, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0xEA, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0xEB, 1), ts->bl);
	game::sub_488AE0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xC2EA8DE7);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x98, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x99, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x9A, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x9C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x94, 4), 0x1);
	game::sub_5379C0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xA0, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xC2EA8DE8);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xA4, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xC2EA8DE9);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xA8, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xC2EA8DEA);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xAC, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x69BA0835);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xB0, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x69BA0836);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xB4, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x69BA0837);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	add(&ts->esp, 0x38);
	mov(mv, x86::mem(ts->esi + 0xB8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xBC, 4), 0xB8A7C6CC);
	mov(mv, x86::mem(ts->esi + 0xC0, 4), 0xB8A7C6CD);
	mov(mv, x86::mem(ts->esi + 0xC4, 4), 0xB8A7C6CE);
	mov(mv, x86::mem(ts->esi + 0xC8, 4), 0x69BA0835);
	mov(mv, x86::mem(ts->esi + 0xCC, 4), 0x69BA0836);
	mov(mv, x86::mem(ts->esi + 0xD0, 4), 0x69BA0837);
	mov(mv, x86::mem(ts->esi + 0xD4, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0xD5, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0xD6, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0xD8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xDC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xE0, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xE4, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->esi + 0xE8, 1), ts->bl);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, 0x85B940);
	game::sub_541960(ts, mv);
	mov(&ts->ecx, 0x827E88);
	game::sub_4302C0(ts, mv);
	mov(&ts->ecx, 0x827E88);
	game::sub_4302F0(ts, mv);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, 0x85EF50);
	game::sub_5012E0(ts, mv);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, 0x85EF50);
	game::sub_501290(ts, mv);
	mov(&ts->ecx, 0x8A3288);
	game::sub_633A00(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(0x836352, 1), 0x1);
	game::sub_499EC0(ts, mv);
	mov(mv, &ts->edi, x86::mem(0x863444, 4));
	mov(mv, &ts->eax, x86::mem(0x863450, 4));
	neg(&ts->edi);
	sbb(&ts->edi, ts->edi);
	and_(&ts->edi, ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x85EF50);
	game::sub_541930(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->edi + 0x24, 1));
	cmp(&ts->eflags, ts->al, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4CEA07;
    }
	game::___setargv(ts, mv);
	goto loc_4CEA10;

loc_4CEA07:
	cmp(&ts->eflags, ts->al, 0x2);
	if (!ts->eflags.zero) {
        goto loc_4CEA10;
    }
	game::sub_510C60(ts, mv);

loc_4CEA10:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x78, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x7C, 4), ts->ebx);
	game::sub_4B57B0(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x791898);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	push(mv, &ts->esp, 0x791888);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x20);
	mov(&ts->ecx, ts->esi);
	game::sub_49A460(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_776410:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

SEH_4E3300:
	mov(&ts->eax, 0x7DEE70);
	goto ___CxxFrameHandler;
}

void sub_4CEA70(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0x911C0A4B);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4CEC43;
    }
	if (ts->eflags.zero) {
        goto loc_4CEB80;
    }
	cmp(&ts->eflags, ts->eax, 0x406415E3);
	if (ts->eflags.zero) {
        goto loc_4CEB61;
    }
	cmp(&ts->eflags, ts->eax, 0x72619778);
	if (!ts->eflags.zero) {
        goto def_4CEB6D;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4CEB4A;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + (ts->eax*4) + 0x58, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F21C);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + (ts->edx*4) + 0x68, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F21C);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + (ts->edx*4) + 0x58, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51CDA0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x54, 4));
	dec(&ts->edx);
	mov(&ts->eax, ts->edx);
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esi + (ts->eax*4) + 0x58, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_51CDA0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + (ts->ecx*4) + 0x58, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_52CEA0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + (ts->ecx*4) + 0x58, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x40);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + (ts->ecx*4) + 0x68, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x20);

loc_4CEB4A:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x6);
	push(mv, &ts->esp, ts->edx);
	game::sub_50D150(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x10);

loc_4CEB61:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	cmp(&ts->eflags, ts->eax, 0x3);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4CEB6D;
    }
	jmp(x86::mem(0x4CEDB0, 4));

loc_4CEB74:
	mov(&ts->ecx, ts->esi);
	game::sub_4B5C70(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x10);

loc_4CEB80:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4CEC2C;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + (ts->eax*4) + 0x58, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F21C);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + (ts->edx*4) + 0x68, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F21C);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + (ts->edx*4) + 0x58, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51CDA0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x54, 4));
	inc(&ts->edx);
	mov(&ts->eax, ts->edx);
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esi + (ts->eax*4) + 0x58, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_51CDA0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + (ts->ecx*4) + 0x58, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_52CEA0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + (ts->ecx*4) + 0x58, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x40);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + (ts->ecx*4) + 0x68, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x20);

loc_4CEC2C:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x7);
	push(mv, &ts->esp, ts->edx);
	game::sub_50D150(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x10);

loc_4CEC43:
	cmp(&ts->eflags, ts->eax, 0x9803F6E2);
	if (!ts->eflags.zero) {
        goto def_4CEB6D;
    }
	mov(mv, &ts->al, x86::mem(0x8763F0, 1));
	test(&ts->eflags, ts->al, ts->al);
	movzx(mv, &ts->eax, x86::mem(0x8763F2, 1));
	if (ts->eflags.zero) {
        goto loc_4CEC65;
    }
	movzx(mv, &ts->eax, x86::mem(0x8763F5, 1));

loc_4CEC65:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CECF3;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0xE8, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto def_4CEB6D;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xA0, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_52D100(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4CEB74;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xA4, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_52D100(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4CECB1;
    }

loc_4CECA5:
	mov(&ts->ecx, ts->esi);
	game::sub_4B5D80(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x10);

loc_4CECB1:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xA8, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_52D100(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4CECD0;
    }

loc_4CECC4:
	mov(&ts->ecx, ts->esi);
	game::sub_4B5EA0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x10);

loc_4CECD0:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xAC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_52D100(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto def_4CEB6D;
    }

loc_4CECE7:
	mov(&ts->ecx, ts->esi);
	game::sub_4CF460(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x10);

loc_4CECF3:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CD70(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xA0, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_52D020(ts, mv);
	add(&ts->esp, 0x14);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4CED2D;
    }
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_49A050(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x10);

loc_4CED2D:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xA4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_52D020(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4CED58;
    }
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_49A050(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x10);

loc_4CED58:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xA8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_52D020(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4CED83;
    }
	push(mv, &ts->esp, 0x2);
	mov(&ts->ecx, ts->esi);
	game::sub_49A050(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x10);

loc_4CED83:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xAC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_52D020(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto def_4CEB6D;
    }
	push(mv, &ts->esp, 0x3);
	mov(&ts->ecx, ts->esi);
	game::sub_49A050(ts, mv);

def_4CEB6D:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x10);
}

void sub_4CEDC0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0x911AB364);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4CEF6D;
    }
	if (ts->eflags.zero) {
        goto loc_4CEEFA;
    }
	cmp(&ts->eflags, ts->eax, 0x172176E8);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4CEE6C;
    }
	if (ts->eflags.zero) {
        goto loc_4CEE3A;
    }
	sub(&ts->eax, 0x36FAD7);
	if (ts->eflags.zero) {
        goto loc_4CEE27;
    }
	sub(&ts->eax, 0x10EB386D);
	if (ts->eflags.zero) {
        goto loc_4CEE11;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4CF160;
    }

loc_4CEDFC:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_4B5880(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_499FA0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4CEE11:
	mov(mv, x86::mem(0x7FA29C, 1), 0x0);
	mov(mv, x86::mem(ts->esi + 0x9C, 4), 0x1);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4CEE27:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x98, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4CEE5C;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x94, 4));
	push(mv, &ts->esp, ts->eax);
	goto loc_4CEE4B;

loc_4CEE3A:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x98, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4CEE5C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x94, 4));
	push(mv, &ts->esp, ts->ecx);

loc_4CEE4B:
	mov(&ts->ecx, 0x832DAC);
	game::sub_5CE6C0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x98, 1), 0x0);

loc_4CEE5C:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x9A, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4CF160;
    }
	goto loc_4CEDFC;

loc_4CEE6C:
	cmp(&ts->eflags, ts->eax, 0x406415E3);
	if (ts->eflags.zero) {
        goto loc_4CEE9B;
    }
	cmp(&ts->eflags, ts->eax, 0x72619778);
	if (!ts->eflags.zero) {
        goto loc_4CF160;
    }
	game::sub_50D510(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CF160;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_4B57B0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4CEE9B:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50D150(ts, mv);
	add(&ts->esp, 0xC);
	mov(&ts->ecx, 0x85EF50);
	game::sub_533680(ts, mv);
	game::sub_510C30(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	dec(&ts->eax);
	neg(&ts->eax);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0xE632EB32);
	add(&ts->eax, 0x3312F33);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x11223345);
	push(mv, &ts->esp, 0x11223344);
	push(mv, &ts->esp, 0xBE503981);
	push(mv, &ts->esp, 0x88579775);
	push(mv, &ts->esp, 0x78FA24);
	push(mv, &ts->esp, ts->ecx);
	game::sub_558790(ts, mv);
	add(&ts->esp, 0x24);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4CEEFA:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x9C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4CF160;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x99, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4CF160;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0xA);
	push(mv, &ts->esp, ts->eax);
	game::sub_50D150(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F9D4);
	push(mv, &ts->esp, 0x2253BD97);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xF9F1F5D0);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0x28);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_4B5880(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_49A460(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x50, 4), 0x4CEA70);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4CEF6D:
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4CEFC2;
    }
	if (ts->eflags.zero) {
        goto loc_4CEF88;
    }
	cmp(&ts->eflags, ts->eax, 0x911C0A4B);
	if (ts->eflags.zero) {
        goto loc_4CEFA5;
    }
	cmp(&ts->eflags, ts->eax, 0x9120409E);
	if (!ts->eflags.zero) {
        goto loc_4CF160;
    }

loc_4CEF88:
	game::sub_50D510(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CF160;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_4B57B0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4CEFA5:
	game::sub_50D510(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CF160;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xFFFFFFFF);
	mov(&ts->ecx, ts->esi);
	game::sub_4B57B0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4CEFC2:
	cmp(&ts->eflags, ts->eax, 0xC98356BA);
	if (ts->eflags.zero) {
        goto loc_4CF031;
    }
	cmp(&ts->eflags, ts->eax, 0xD9FEEC59);
	if (!ts->eflags.zero) {
        goto loc_4CF160;
    }
	game::sub_50D510(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CF160;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x98, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4CF160;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x94, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_510AE0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_510AD0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x832DAC);
	game::sub_5CE510(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CF160;
    }
	mov(&ts->ecx, 0x832DAC);
	mov(mv, x86::mem(ts->esi + 0x98, 1), 0x1);
	game::sub_488B50(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x99, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4CF031:
	mov(mv, &ts->eax, x86::mem(0x836508, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	if (ts->eflags.zero) {
        goto loc_4CF064;
    }
	mov(mv, &ts->ecx, x86::mem(0x836500, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4CF064;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x791898);
	push(mv, &ts->esp, ts->edi);
	game::sub_495400(ts, mv);
	push(mv, &ts->esp, 0x791898);
	push(mv, &ts->esp, ts->edi);
	game::sub_495500(ts, mv);
	add(&ts->esp, 0x14);
	goto loc_4CF07E;

loc_4CF064:
	push(mv, &ts->esp, 0x791898);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x10);

loc_4CF07E:
	mov(mv, &ts->eax, x86::mem(0x836510, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CF0AD;
    }
	mov(mv, &ts->ecx, x86::mem(0x836500, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4CF0AD;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x791888);
	push(mv, &ts->esp, ts->edi);
	game::sub_495400(ts, mv);
	push(mv, &ts->esp, 0x791888);
	push(mv, &ts->esp, ts->edi);
	game::sub_495500(ts, mv);
	add(&ts->esp, 0x14);
	goto loc_4CF0C7;

loc_4CF0AD:
	push(mv, &ts->esp, 0x791888);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x10);

loc_4CF0C7:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x9C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4CF159;
    }
	push(mv, &ts->esp, 0x78FA24);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4CF159;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x9C, 4));
	cmp(&ts->eflags, ts->eax, 0x4);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4CF152;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x98, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4CF159;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x94, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_510AE0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_510AD0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x832DAC);
	game::sub_5CE510(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CF159;
    }
	mov(&ts->ecx, 0x832DAC);
	mov(mv, x86::mem(ts->esi + 0x98, 1), 0x1);
	game::sub_488B50(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x99, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x9A, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x9C, 4), 0x0);
	game::sub_4B59D0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4CF152:
	inc(&ts->eax);
	mov(mv, x86::mem(ts->esi + 0x9C, 4), ts->eax);

loc_4CF159:
	mov(&ts->ecx, ts->esi);
	game::sub_4B59D0(ts, mv);

loc_4CF160:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);
}

void sub_4CF170(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x50, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x8, 4));
	if (ts->eflags.zero) {
        goto loc_4CF360;
    }
	cmp(&ts->eflags, ts->edi, 0x9803F6E2);
	if (!ts->eflags.zero) {
        goto loc_4CF34F;
    }
	mov(mv, &ts->al, x86::mem(0x8763F0, 1));
	test(&ts->eflags, ts->al, ts->al);
	movzx(mv, &ts->eax, x86::mem(0x8763F2, 1));
	if (ts->eflags.zero) {
        goto loc_4CF1A9;
    }
	movzx(mv, &ts->eax, x86::mem(0x8763F5, 1));

loc_4CF1A9:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CF283;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0xE8, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4CF274;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0xD4, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4CF1F4;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB0, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_52D100(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4CF1F4;
    }
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_49A1C0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0xE8, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4CF1F4:
	mov(mv, &ts->al, x86::mem(ts->esi + 0xD5, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4CF229;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xB4, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_52D100(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4CF229;
    }
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_49A1C0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0xE8, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4CF229:
	mov(mv, &ts->al, x86::mem(ts->esi + 0xD6, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4CF25E;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xB8, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_52D100(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4CF25E;
    }
	push(mv, &ts->esp, 0x2);
	mov(&ts->ecx, ts->esi);
	game::sub_49A1C0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0xE8, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4CF25E:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x9803F6E2);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->esi + 0x50, 4));

loc_4CF274:
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0xE8, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4CF283:
	lea(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0xE8, 1), 0x0);
	game::sub_50CD70(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esi + 0xD4, 1));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4CF2CA;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xB0, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_52D020(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4CF2CA;
    }
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_49A110(ts, mv);
	goto loc_4CF331;

loc_4CF2CA:
	mov(mv, &ts->al, x86::mem(ts->esi + 0xD5, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4CF2FA;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xB4, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_52D020(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4CF2FA;
    }
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_49A110(ts, mv);
	goto loc_4CF331;

loc_4CF2FA:
	mov(mv, &ts->al, x86::mem(ts->esi + 0xD6, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4CF32A;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xB8, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_52D020(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4CF32A;
    }
	push(mv, &ts->esp, 0x2);
	mov(&ts->ecx, ts->esi);
	game::sub_49A110(ts, mv);
	goto loc_4CF331;

loc_4CF32A:
	mov(&ts->ecx, ts->esi);
	game::sub_49A170(ts, mv);

loc_4CF331:
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x9803F6E2);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->esi + 0x50, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4CF34F:
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, ts->eax);

loc_4CF360:
	cmp(&ts->eflags, ts->edi, 0x35F8620B);
	if (ts->eflags.zero) {
        goto loc_4CF3C3;
    }
	cmp(&ts->eflags, ts->edi, 0xC98356BA);
	if (ts->eflags.zero) {
        goto loc_4CF38B;
    }
	cmp(&ts->eflags, ts->edi, 0xE1FDE1D1);
	if (!ts->eflags.zero) {
        goto loc_4CF457;
    }
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), 0x5);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4CF38B:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4CF457;
    }
	dec(&ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4CF457;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_5379A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, 0x2);
	game::sub_5F4240(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4CF3C3:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_51CDA0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x5C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51CDA0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x60, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_51CDA0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x64, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_51CDA0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + (ts->eax*4) + 0x58, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_52CEA0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + (ts->eax*4) + 0x58, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + (ts->eax*4) + 0x68, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x48);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	mov(&ts->ecx, 0x8635BC);
	mov(mv, x86::mem(ts->esi + 0x50, 4), 0x4CEA70);
	game::sub_525850(ts, mv);

loc_4CF457:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);
}

void sub_4CF460(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50D150(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xBC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0xD8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xD4, 1), ts->al);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC0, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC0, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x30);
	push(mv, &ts->esp, 0x1335F0);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xCC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xDC, 4), 0x911AB364);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->esi + 0xD5, 1), 0x1);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x20);
	push(mv, &ts->esp, 0x4F876B6F);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xD0, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xE0, 4), 0x406415E3);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xF9F1F5D0);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0xD6, 1), 0x1);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x20);
	mov(&ts->ecx, ts->esi);
	game::sub_49A1F0(ts, mv);
	mov(&ts->ecx, 0x85EF50);
	mov(mv, x86::mem(ts->esi + 0x50, 4), 0x4CEDC0);
	game::sub_501250(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_499E60(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F970);
	push(mv, &ts->esp, 0x2253BD97);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4CF5C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x774534);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x4C);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4CF60B;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4B5ED0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4CF60B:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_774520:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x795DEC);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4CF5C0:
	mov(&ts->eax, 0x7E029C);
	goto ___CxxFrameHandler;
}

void sub_4CF620(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4CF640(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4CF638;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4CF638:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4CF640(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx + 0x54, 4), 0x78F544);
	mov(mv, x86::mem(ts->ecx, 4), 0x790B98);
	retn(mv, &ts->esp);
}

void sub_4CF650(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x790B98);
	retn(mv, &ts->esp);
}

void sub_4CF660(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776E28);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	game::sub_552780(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	mov(mv, x86::mem(ts->esi, 4), 0x795E00);
	mov(mv, x86::mem(ts->esi + 0x134, 4), 0x8);
	game::sub_4B6510(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x381FE1E9);
	push(mv, &ts->esp, 0x42ADB44C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x16);
	push(mv, &ts->esp, 0x8);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x6C, 4));
	game::sub_538080(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_539650(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x8);
	if (!ts->eflags.zero) {
        goto loc_4CF6FE;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	or_(&ts->edx, 0x4000);
	push(mv, &ts->esp, ts->edx);
	game::sub_54E6E0(ts, mv);

loc_4CF6FE:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_776E20:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto ??1strstreambuf@@UAE@XZ;

SEH_4FBDC0:
	mov(&ts->eax, 0x7E02C0);
	goto ___CxxFrameHandler;
}

void sub_4CF720(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4CF740(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4CF738;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4CF738:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4CF740(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x795E00);
	goto ??1strstreambuf@@UAE@XZ;
}

void sub_4CF750(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776E28);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->esi);
	game::sub_552780(ts, mv);
	xor_(&ts->ebx, ts->ebx);
	mov(&ts->ebp, 0x8);
	mov(mv, x86::mem(ts->esi, 4), 0x795E28);
	mov(mv, x86::mem(ts->esi + 0x14C, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x14D, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x14E, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x154, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x158, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x2C, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x134, 4), ts->ebp);
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4CF80F;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xEB406FEC);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0xDA850671);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FFD0);
	push(mv, &ts->esp, 0x2BAC0CEE);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x1C);
	push(mv, &ts->esp, 0xB0FCF98E);
	push(mv, &ts->esp, 0xC90DC4AB);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	goto loc_4CF816;

loc_4CF80F:
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0xED586157);

loc_4CF816:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x793FC0);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537A10(ts, mv);
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->eax, x86::mem(0x83AA04, 4));
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4CF83C;
    }
	jmp(x86::mem(0x4CFA98, 4));

loc_4CF843:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xE76CD783);
	push(mv, &ts->esp, 0x42ADB44C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	goto loc_4CF9FE;

loc_4CF864:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x4204D527);
	push(mv, &ts->esp, 0x42ADB44C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	goto loc_4CF9FE;

loc_4CF885:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xD0CF6EE1);
	push(mv, &ts->esp, 0x42ADB44C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	push(mv, &ts->esp, ts->edi);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0xC);
	goto def_4CF83C;

loc_4CF8AF:
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_4CF8C3;
    }
	cmp(&ts->eflags, ts->eax, 0x200);
	if (!ts->eflags.zero) {
        goto def_4CF83C;
    }

loc_4CF8C3:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x7909A0);
	push(mv, &ts->esp, 0x793FC0);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0xD5F3F0E0);
	game::sub_542600(ts, mv);
	add(&ts->esp, 0xC);
	goto def_4CF83C;

loc_4CF8E5:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xF760EABE);
	push(mv, &ts->esp, 0x42ADB44C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x836364, 4));
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	setnz(ts->eflags, &ts->al);
	add(&ts->eax, 0xD87133BC);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	add(&ts->esp, 0x10);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_4CF936;
    }
	cmp(&ts->eflags, ts->eax, 0x200);
	if (ts->eflags.zero) {
        goto loc_4CF936;
    }
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0xF35B6D7F);
	goto loc_4CF953;

loc_4CF936:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x7909A0);
	push(mv, &ts->esp, 0x793FC0);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0xF35B6D7F);
	game::sub_542600(ts, mv);
	add(&ts->esp, 0xC);

loc_4CF953:
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), ts->ebp);
	if (!ts->eflags.zero) {
        goto def_4CF83C;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xB0FCF98E);
	push(mv, &ts->esp, 0xC90DC4AB);
	push(mv, &ts->esp, ts->edx);
	game::sub_495460(ts, mv);
	add(&ts->esp, 0xC);
	goto def_4CF83C;

loc_4CF97A:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDCFB6B36);
	push(mv, &ts->esp, 0x42ADB44C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->ebx, x86::mem(0x850078, 4));
	xor_(&ts->eax, ts->eax);
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->ebx, ts->ebp);
	setnz(ts->eflags, &ts->al);
	dec(&ts->eax);
	and_(&ts->eax, 0xF5538E5A);
	add(&ts->eax, 0xD8F5EDF7);
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->eax);
	goto def_4CF83C;

loc_4CF9B6:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xD10D7477);
	push(mv, &ts->esp, 0x42ADB44C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0xB5B3AB78);
	goto loc_4CF9FE;

loc_4CF9DB:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x905101F);
	push(mv, &ts->esp, 0x42ADB44C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0x844FEB00);

loc_4CF9FE:
	add(&ts->esp, 0x8);

def_4CF83C:
	mov(&ts->ecx, ts->esi);
	game::sub_4B8470(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_4CFA7F;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xB0FCF98E);
	push(mv, &ts->esp, 0xC90DC4AB);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xC90DC4AB);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x795E14);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	add(&ts->esp, 0x24);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_4CFA7F;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	or_(&ts->edx, 0x4000);
	push(mv, &ts->esp, ts->edx);
	game::sub_54E6E0(ts, mv);

loc_4CFA7F:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_776E20:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto ??1strstreambuf@@UAE@XZ;

SEH_4FBDC0:
	mov(&ts->eax, 0x7E02C0);
	goto ___CxxFrameHandler;
}

void sub_4CFAC0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x14E, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4CFADD;
    }
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x8);
	if (ts->eflags.zero) {
        goto loc_4CFADD;
    }
	push(mv, &ts->esp, 0xB);
	game::sub_50D180(ts, mv);
	add(&ts->esp, 0x4);

loc_4CFADD:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp, 0x14);
}

void sub_4CFAF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4CFB10(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4CFB08;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4CFB08:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4CFB10(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x795E28);
	goto ??1strstreambuf@@UAE@XZ;
}

void sub_4CFB20(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x774554);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x4C);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4CFB6B;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4B8620(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4CFB6B:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_774540:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x795E3C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4CFB20:
	mov(&ts->eax, 0x7E02E4);
	goto ___CxxFrameHandler;
}

void sub_4CFB80(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4B86B0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4CFB98;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4CFB98:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4CFBA0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776E28);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	game::sub_552780(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->esi, 4), 0x795E4C);
	mov(mv, x86::mem(ts->esi + 0x14C, 4), 0x0);
	mov(mv, x86::mem(ts->esi + 0x150, 4), 0x0);
	mov(mv, &ts->ecx, x86::mem(0x836364, 4));
	xor_(&ts->eax, ts->eax);
	test(&ts->eflags, ts->ecx, ts->ecx);
	setnz(ts->eflags, &ts->al);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x0);
	add(&ts->eax, 0xD87133BC);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x793FC0);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(&ts->edi, 0x8);
	add(&ts->esp, 0x8);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x134, 4), ts->edi);
	game::sub_4B8A10(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x6C, 4));
	game::sub_538080(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_539650(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), ts->edi);
	if (!ts->eflags.zero) {
        goto loc_4CFC66;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	or_(&ts->edx, 0x4000);
	push(mv, &ts->esp, ts->edx);
	game::sub_54E6E0(ts, mv);

loc_4CFC66:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_776E20:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto ??1strstreambuf@@UAE@XZ;

SEH_4FBDC0:
	mov(&ts->eax, 0x7E02C0);
	goto ___CxxFrameHandler;
}

void sub_4CFC80(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4CFCA0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4CFC98;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4CFC98:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4CFCA0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x795E4C);
	goto ??1strstreambuf@@UAE@XZ;
}

void sub_4CFCB0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	sub(&ts->esp, 0x100);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 1), 0x0);
	mov(mv, x86::mem(ts->esi + 0xE, 1), 0x0);
	mov(mv, x86::mem(ts->esi + 0x10, 1), 0x1);
	mov(mv, &ts->al, x86::mem(0x8500CC, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4CFCED;
    }
	mov(mv, &ts->ecx, x86::mem(0x8500D4, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x850080);
	game::sub_5031B0(ts, mv);

loc_4CFCED:
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x10, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_4CFD31;
    }
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8, 1), 0x0);
	mov(&ts->ecx, 0x3F);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x9, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	lea(mv, &ts->eax, x86::mem(ts->ebp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43FBC0(ts, mv);
	add(&ts->esp, 0xC);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_4B8EE0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xD, 1), 0x1);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_4CFD31:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CFD46;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi, 4), 0x0);

loc_4CFD46:
	push(mv, &ts->esp, 0x23E142);
	game::sub_4FFA80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xCA4C311B);
	push(mv, &ts->esp, 0x541389E5);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->ecx);
	game::sub_5585E0(ts, mv);
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xD, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_4CFD80(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->cl, x86::mem(ts->esp + 0xC, 1));
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 1), 0x0);
	mov(mv, x86::mem(ts->esi + 0xE, 1), 0x0);
	mov(mv, x86::mem(ts->esi + 0x10, 1), ts->cl);
	mov(mv, &ts->al, x86::mem(0x8500CC, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4CFDB3;
    }
	mov(mv, &ts->edx, x86::mem(0x8500D4, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x850080);
	game::sub_5031B0(ts, mv);

loc_4CFDB3:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x10, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_4CFDF9;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CFDCE;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi, 4), 0x0);

loc_4CFDCE:
	push(mv, &ts->esp, 0x23E142);
	game::sub_4FFA80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xCA4C311B);
	push(mv, &ts->esp, 0x541389E5);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->ecx);
	game::sub_5585E0(ts, mv);
	add(&ts->esp, 0x18);
	mov(mv, x86::mem(ts->esi, 4), ts->eax);

loc_4CFDF9:
	mov(mv, x86::mem(ts->esi + 0xD, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4CFE10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x4, 1), 0x0);
	mov(mv, x86::mem(ts->esi + 0xE, 1), 0x0);
	mov(mv, &ts->al, x86::mem(0x8500CC, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4CFE34;
    }
	mov(mv, &ts->eax, x86::mem(0x8500D4, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x850080);
	game::sub_5031B0(ts, mv);

loc_4CFE34:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x10, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4CFE7B;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CFE50;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi, 4), 0x0);

loc_4CFE50:
	push(mv, &ts->esp, 0x23E142);
	game::sub_4FFA80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xCA4C311B);
	push(mv, &ts->esp, 0x541389E5);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->ecx);
	game::sub_5585E0(ts, mv);
	add(&ts->esp, 0x18);
	mov(mv, x86::mem(ts->esi, 4), ts->eax);

loc_4CFE7B:
	mov(mv, x86::mem(ts->esi + 0xD, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4CFE90(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4CFEA8;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi, 4), 0x0);

loc_4CFEA8:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, 0x82159A60);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x2C0E485A);
	push(mv, &ts->esp, 0x73C044EC);
	push(mv, &ts->esp, 0x541389E5);
	push(mv, &ts->esp, 0x39DF715);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->eax);
	game::sub_558860(ts, mv);
	add(&ts->esp, 0x20);
	mov(mv, x86::mem(ts->esi, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4CFEE0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77456B);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x1D0);
	mov(mv, &ts->al, x86::mem(0x8500CC, 1));
	cmp(&ts->eflags, ts->al, 0x1);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(0x8500D0, 4));
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4CFF41;
    }
	mov(mv, &ts->eax, x86::mem(0x8500D4, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x850080);
	game::sub_5031B0(ts, mv);
	mov(&ts->eax, 0xFFFFFFFE);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1DC, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_4CFF41:
	cmp(&ts->eflags, ts->edi, 0x2);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4D0309;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D0309;
    }
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x8, 4));
	cmp(&ts->eflags, ts->ebx, 0x2);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4D0309;
    }
	cmp(&ts->eflags, ts->ebx, 0x11);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_4D0309;
    }
	game::sub_742DB0(ts, mv);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4D02ED;
    }
	cmp(&ts->eflags, ts->edi, 0x11);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4D02ED;
    }
	lea(mv, &ts->eax, x86::mem(ts->edi - 0x2, 4));
	cmp(&ts->eflags, ts->eax, 0xA);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4CFF8C;
    }
	jmp(x86::mem(0x4D0324, 4));

loc_4CFF93:
	push(mv, &ts->esp, 0x4);
	mov(&ts->ecx, 0x850080);
	game::sub_5031B0(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1DC, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_4CFFB8:
	game::sub_591030(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4D030C;
    }
	game::sub_58A0E0(ts, mv);
	mov(&ts->edi, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x4BC1A0);
	mov(&ts->ecx, ts->edi);
	game::sub_582360(ts, mv);
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F0150(ts, mv);
	push(mv, &ts->esp, ts->esi);
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x200);
	setz(ts->eflags, &ts->cl);
	push(mv, &ts->esp, 0x4B9090);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_588630(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4D0309;
    }
	push(mv, &ts->esp, 0x5);
	mov(&ts->ecx, 0x850080);
	game::sub_5031B0(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1DC, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_4D002C:
	mov(&ts->ecx, 0x850080);
	game::sub_5031D0(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_4D0309;
    }
	mov(&ts->ecx, 0x850080);
	game::sub_503210(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_4D0309;
    }
	game::sub_58A0E0(ts, mv);
	xor_(&ts->edx, ts->edx);
	mov(mv, &ts->dl, x86::mem(ts->esi + 0xC, 1));
	mov(&ts->ecx, 0x850080);
	mov(&ts->edi, ts->eax);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x4B9110);
	game::sub_503210(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x850080);
	game::sub_5031D0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_588770(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4D030C;
    }
	push(mv, &ts->esp, 0x7);
	mov(&ts->ecx, 0x850080);
	game::sub_5031B0(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1DC, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_4D00AF:
	mov(&ts->ecx, 0x850080);
	game::sub_5031F0(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_4D0309;
    }
	game::sub_58A0E0(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x4B9220);
	mov(&ts->ecx, 0x850080);
	mov(&ts->edi, ts->eax);
	game::sub_5031F0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_588B00(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4D030C;
    }
	push(mv, &ts->esp, 0x9);
	mov(&ts->ecx, 0x850080);
	game::sub_5031B0(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1DC, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_4D010E:
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x200);
	if (ts->eflags.zero) {
        goto loc_4D020F;
    }
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F00F0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4D020F;
    }
	game::sub_582B60(ts, mv);
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0xF8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D01C7;
    }
	mov(&ts->ecx, ts->edi);
	game::sub_5908A0(ts, mv);
	push(mv, &ts->esp, 0xC);
	mov(&ts->ecx, 0x850080);
	game::sub_5031B0(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x10, 1), 0x0);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x1F);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x11, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	push(mv, &ts->esp, 0x794D2C);
	push(mv, &ts->esp, 0x679FD4E9);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, 0x80);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C960(ts, mv);
	game::sub_582B60(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0xF8, 4));
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edx);
	game::sub_73F180(ts, mv);
	add(&ts->esp, 0x24);
	xor_(&ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1DC, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_4D01C7:
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x4B9030);
	mov(&ts->ecx, 0x850080);
	game::sub_503210(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x850080);
	game::sub_5031F0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_5909E0(ts, mv);
	push(mv, &ts->esp, 0xB);
	mov(&ts->ecx, 0x850080);
	game::sub_5031B0(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1DC, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_4D020F:
	push(mv, &ts->esp, 0xC);
	mov(&ts->ecx, 0x850080);
	game::sub_5031B0(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1DC, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_4D0234:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x90, 4));
	game::sub_4AE7F0(ts, mv);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x94, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x1F0, 4), 0x0);
	game::sub_58B9A0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_58E850(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x49D890);
	game::sub_58A0E0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_588B70(ts, mv);
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_4D027F;
    }
	push(mv, &ts->esp, 0xE);
	goto loc_4D02B3;

loc_4D027F:
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4D02B1;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x90, 4));
	mov(mv, x86::mem(ts->esp + 0x1E4, 4), 0xFFFFFFFF);
	game::sub_4CBAF0(ts, mv);
	mov(&ts->eax, ts->esi);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1DC, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_4D02B1:
	push(mv, &ts->esp, 0xD);

loc_4D02B3:
	mov(&ts->ecx, 0x850080);
	game::sub_5031B0(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x90, 4));
	mov(mv, x86::mem(ts->esp + 0x1E4, 4), 0xFFFFFFFF);
	game::sub_4CBAF0(ts, mv);

def_4CFF8C:
	xor_(&ts->eax, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1DC, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_4D02ED:
	mov(&ts->eax, 0x1);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1DC, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_4D0309:
	or_(&ts->eax, 0xFFFFFFFF);

loc_4D030C:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1DC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_774560:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x158, 4));
	goto sub_4CBAF0;

SEH_4D3490:
	mov(&ts->eax, 0x7E0308);
	goto ___CxxFrameHandler;
}

void sub_4D0350(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D0377;
    }
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x10, 4));
	mov(&ts->ecx, ts->esi);
	game::sub_4CFE90(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x8, 4));
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0xC, 4));
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp);

loc_4D0377:
	push(mv, &ts->esp, 0x10);
	mov(&ts->ecx, 0x850080);
	game::sub_5031B0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp);
}

void sub_4D0390(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x774594);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x5C);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4D03DB;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4B9430(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4D03DB:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_774580:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x795E60);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4D0390:
	mov(&ts->eax, 0x7E032C);
	goto ___CxxFrameHandler;
}

void sub_4D03F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7745B4);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x70);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4D043B;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4B9290(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4D043B:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_7745A0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x795E74);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4D03F0:
	mov(&ts->eax, 0x7E0350);
	goto ___CxxFrameHandler;
}

void sub_4D0450(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4B9330(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4D0468;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4D0468:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4D0470(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x4, 4), 0xC407210);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4D04F2;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x10, 4));
	cmp(&ts->eflags, ts->eax, 0xB8A7C6CC);
	if (ts->eflags.zero) {
        goto loc_4D04D7;
    }
	cmp(&ts->eflags, ts->eax, 0xB8A7C6CD);
	if (ts->eflags.zero) {
        goto loc_4D04B8;
    }
	cmp(&ts->eflags, ts->eax, 0xB8A7C6CE);
	if (!ts->eflags.zero) {
        goto loc_4D04F2;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->edx);
	game::sub_50D150(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x2);
	mov(&ts->ecx, ts->esi);
	game::sub_4B95C0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4D04B8:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50D150(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_4B95C0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4D04D7:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50D150(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_4B95C0(ts, mv);

loc_4D04F2:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);
}

void sub_4D0500(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7745DC);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x8);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->esi);
	game::sub_552780(ts, mv);
	xor_(&ts->ebx, ts->ebx);
	lea(mv, &ts->ebp, x86::mem(ts->esi + 0x158, 4));
	mov(mv, x86::mem(ts->esi, 4), 0x795EA8);
	mov(mv, x86::mem(ts->esi + 0x14C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x150, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x18A, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x18C, 4), ts->ebx);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0xC);
	mov(&ts->edi, ts->ebp);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	push(mv, &ts->esp, 0x258);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ebx);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edi);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x20, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4D05B7;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, ts->ebp);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x32);
	mov(&ts->ecx, ts->edi);
	game::sub_51E9E0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7946D0);
	mov(mv, x86::mem(ts->edi + 0x254, 4), ts->ebp);
	goto loc_4D05B9;

loc_4D05B7:
	xor_(&ts->edi, ts->edi);

loc_4D05B9:
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x24, 1), ts->bl);
	game::sub_54F820(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x150, 4), ts->eax);
	game::sub_51FE70(ts, mv);
	push(mv, &ts->esp, 0xBEDF2B09);
	mov(mv, x86::mem(ts->esi + 0x154, 4), ts->eax);
	game::sub_4FFA80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x154, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_50D7E0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x28, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->eax + 0xAF, 1), ts->bl);
	game::sub_539650(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x14);
	retn(mv, &ts->esp, 0x4);

loc_7745C0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x14, 4));
	goto ??1strstreambuf@@UAE@XZ;

loc_7745C8:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x795E8C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4D0500:
	mov(&ts->eax, 0x7E037C);
	goto ___CxxFrameHandler;
}

void stdiobuf___stdiobuf_void_(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776E28);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x795EA8);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4D0668;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x14C, 4), 0x0);

loc_4D0668:
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	game::strstreambuf___strstreambuf_void_(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_776E20:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto ??1strstreambuf@@UAE@XZ;

SEH_4FBDC0:
	mov(&ts->eax, 0x7E02C0);
	goto ___CxxFrameHandler;
}

void sub_4D0690(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x774606);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	game::sub_552780(ts, mv);
	xor_(&ts->ebx, ts->ebx);
	lea(mv, &ts->esi, x86::mem(ts->edi + 0x154, 4));
	mov(mv, x86::mem(ts->edi, 4), 0x795ED4);
	mov(mv, x86::mem(ts->edi + 0x14C, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x150, 1), ts->bl);
	mov(mv, x86::mem(ts->edi + 0x151, 1), ts->bl);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x4, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xC, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0xD, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0xE, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0xF, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x10, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x18, 1), 0x1);
	game::sub_570A30(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D0727;
    }
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x795EBC);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->ebp);

loc_4D0727:
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->edi + 0x134, 4), 0x3);
	game::sub_4B9D20(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(0x8500D0, 4), 0x2);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4D0761;
    }
	push(mv, &ts->esp, ts->ebx);
	game::sub_58FD50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, 0x89CF48);
	game::sub_5FE2B0(ts, mv);
	push(mv, &ts->esp, 0x3);
	mov(&ts->ecx, 0x850080);
	game::sub_5031B0(ts, mv);

loc_4D0761:
	mov(mv, &ts->eax, x86::mem(0x836370, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x150, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_4D0797;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x151, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_4D0797;
    }
	push(mv, &ts->esp, 0x144849C1);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->esi);
	game::sub_4CFCB0(ts, mv);
	mov(mv, x86::mem(ts->edi + 0x160, 1), 0x1);
	mov(mv, &ts->eax, x86::mem(0x836370, 4));
	add(&ts->esp, 0x10);

loc_4D0797:
	mov(mv, x86::mem(ts->eax + 0x14C, 4), ts->ebx);
	mov(mv, &ts->ecx, x86::mem(0x836370, 4));
	mov(mv, x86::mem(ts->ecx + 0x150, 1), ts->bl);
	mov(mv, &ts->edx, x86::mem(0x836370, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(&ts->eax, ts->edi);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->edx + 0x151, 1), ts->bl);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_7745F0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto ??1strstreambuf@@UAE@XZ;

loc_7745F8:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x154);
	goto sub_49D870;

SEH_4D0690:
	mov(&ts->eax, 0x7E03A8);
	goto ___CxxFrameHandler;
}

void stdiobuf___stdiobuf_void_(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x774606);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x795ED4);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4D0818;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x14C, 4), 0x0);

loc_4D0818:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x154, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_4D083A;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x154, 4), 0x0);

loc_4D083A:
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	game::strstreambuf___strstreambuf_void_(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_7745F0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto ??1strstreambuf@@UAE@XZ;

loc_7745F8:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x154);
	goto sub_49D870;

SEH_4D0690:
	mov(&ts->eax, 0x7E03A8);
	goto ___CxxFrameHandler;
}

void sub_4D0860(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x774626);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	game::sub_552780(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi, 4), 0x795EE8);
	mov(mv, x86::mem(ts->esi + 0x14C, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x150, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x154, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0x158, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x15C, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0x15D, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0x15E, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0x15F, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0x160, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0x164, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x168, 4), ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x16C, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0x144, 1), ts->al);
	game::sub_4BA030(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_774610:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto ??1strstreambuf@@UAE@XZ;

loc_774618:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x150);
	goto sub_49D870;

SEH_4D0860:
	mov(&ts->eax, 0x7E03D4);
	goto ___CxxFrameHandler;
}

void stdiobuf___stdiobuf_void_(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x774626);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x795EE8);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4D0958;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x14C, 4), 0x0);

loc_4D0958:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x150, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_4D097A;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x150, 4), 0x0);

loc_4D097A:
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	game::strstreambuf___strstreambuf_void_(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_774610:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto ??1strstreambuf@@UAE@XZ;

loc_774618:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x150);
	goto sub_49D870;

SEH_4D0860:
	mov(&ts->eax, 0x7E03D4);
	goto ___CxxFrameHandler;
}

void sub_4D09A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x774736);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->esi);
	game::sub_552780(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi, 4), 0x795F94);
	mov(mv, x86::mem(ts->esi + 0x14C, 1), ts->al);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x188, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x18C, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0x190, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x194, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0x195, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0x196, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0x197, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0x198, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0x19C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x1A0, 4), ts->eax);
	mov(mv, &ts->al, x86::mem(0x836374, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(&ts->ebx, 0x1);
	mov(mv, x86::mem(ts->esp + 0x1C, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto loc_4D0A41;
    }
	mov(mv, &ts->al, x86::mem(0x836375, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4D0A41;
    }
	mov(mv, &ts->ecx, x86::mem(0x836370, 4));
	add(&ts->ecx, 0x8);
	game::sub_495990(ts, mv);

loc_4D0A41:
	mov(mv, &ts->ebp, x86::mem(0x836370, 4));
	push(mv, &ts->esp, 0x254);
	mov(mv, x86::mem(0x836375, 1), 0x0);
	add(&ts->ebp, 0x8);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 1), 0x2);
	if (ts->eflags.zero) {
        goto loc_4D0AA7;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x2);
	push(mv, &ts->esp, ts->ebp);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x10);
	mov(&ts->ecx, ts->edi);
	game::sub_51E9E0(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x78DFA4, 4));
	mov(mv, x86::mem(ts->edi, 4), 0x794898);
	mov(mv, x86::mem(ts->edi + 0x1C, 4), ts->edx);
	goto loc_4D0AA9;

loc_4D0AA7:
	xor_(&ts->edi, ts->edi);

loc_4D0AA9:
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 1), ts->bl);
	game::sub_54F820(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x150, 4), ts->eax);
	mov(mv, &ts->ebp, x86::mem(0x836370, 4));
	push(mv, &ts->esp, 0x254);
	add(&ts->ebp, 0x48);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 1), 0x3);
	if (ts->eflags.zero) {
        goto loc_4D0B1A;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x5);
	push(mv, &ts->esp, ts->ebp);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x10);
	mov(&ts->ecx, ts->edi);
	game::sub_51E9E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x78DFA4, 4));
	mov(mv, x86::mem(ts->edi, 4), 0x7948D8);
	mov(mv, x86::mem(ts->edi + 0x1C, 4), ts->ecx);
	goto loc_4D0B1C;

loc_4D0B1A:
	xor_(&ts->edi, ts->edi);

loc_4D0B1C:
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 1), ts->bl);
	game::sub_54F820(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x154, 4), ts->eax);
	mov(mv, &ts->ebp, x86::mem(0x836370, 4));
	push(mv, &ts->esp, 0x254);
	add(&ts->ebp, 0x68);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 1), 0x4);
	if (ts->eflags.zero) {
        goto loc_4D0B8C;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x5);
	push(mv, &ts->esp, ts->ebp);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x10);
	mov(&ts->ecx, ts->edi);
	game::sub_51E9E0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x78DFA4, 4));
	mov(mv, x86::mem(ts->edi, 4), 0x794918);
	mov(mv, x86::mem(ts->edi + 0x1C, 4), ts->eax);
	goto loc_4D0B8E;

loc_4D0B8C:
	xor_(&ts->edi, ts->edi);

loc_4D0B8E:
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 1), ts->bl);
	game::sub_54F820(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x158, 4), ts->eax);
	mov(mv, &ts->ebp, x86::mem(0x836370, 4));
	push(mv, &ts->esp, 0x254);
	add(&ts->ebp, 0x88);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 1), 0x5);
	if (ts->eflags.zero) {
        goto loc_4D0C02;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, ts->ebp);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x32);
	mov(&ts->ecx, ts->edi);
	game::sub_51E9E0(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x78DFA4, 4));
	mov(mv, x86::mem(ts->edi, 4), 0x794688);
	mov(mv, x86::mem(ts->edi + 0x1C, 4), ts->edx);
	goto loc_4D0C04;

loc_4D0C02:
	xor_(&ts->edi, ts->edi);

loc_4D0C04:
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 1), ts->bl);
	game::sub_54F820(ts, mv);
	push(mv, &ts->esp, 0x5C);
	mov(mv, x86::mem(ts->esi + 0x15C, 4), ts->eax);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x1C, 1), 0x6);
	if (ts->eflags.zero) {
        goto loc_4D0C53;
    }
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->eax);
	game::sub_4BA2C0(ts, mv);
	goto loc_4D0C55;

loc_4D0C53:
	xor_(&ts->eax, ts->eax);

loc_4D0C55:
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 1), ts->bl);
	game::sub_54F820(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x160, 4), ts->eax);
	game::sub_51FE70(ts, mv);
	push(mv, &ts->esp, 0x54);
	mov(mv, x86::mem(ts->esi + 0x17C, 4), ts->eax);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 1), 0x7);
	if (ts->eflags.zero) {
        goto loc_4D0CC3;
    }
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x78DFA4, 4));
	mov(mv, x86::mem(ts->edi, 4), 0x7949E0);
	mov(mv, x86::mem(ts->edi + 0x1C, 4), ts->ecx);
	goto loc_4D0CC5;

loc_4D0CC3:
	xor_(&ts->edi, ts->edi);

loc_4D0CC5:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x24, 1), ts->bl);
	game::sub_54F170(ts, mv);
	push(mv, &ts->esp, 0x38);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 1), 0x8);
	if (ts->eflags.zero) {
        goto loc_4D0D0A;
    }
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x790BD8);
	goto loc_4D0D0C;

loc_4D0D0A:
	xor_(&ts->edi, ts->edi);

loc_4D0D0C:
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 1), ts->bl);
	game::sub_54EE40(ts, mv);
	push(mv, &ts->esp, 0x38);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 1), 0x9);
	if (ts->eflags.zero) {
        goto loc_4D0D50;
    }
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x790BD8);
	goto loc_4D0D52;

loc_4D0D50:
	xor_(&ts->edi, ts->edi);

loc_4D0D52:
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 1), ts->bl);
	game::sub_54EE40(ts, mv);
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 1), 0xA);
	mov(&ts->ebp, 0x420C0000);
	if (ts->eflags.zero) {
        goto loc_4D0DB2;
    }
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x794A28);
	mov(mv, x86::mem(ts->edi + 0x1C, 4), 0xC37E0000);
	mov(mv, x86::mem(ts->edi + 0x20, 4), ts->ebp);
	goto loc_4D0DB4;

loc_4D0DB2:
	xor_(&ts->edi, ts->edi);

loc_4D0DB4:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x24, 1), ts->bl);
	game::sub_54F170(ts, mv);
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esi + 0x164, 4), ts->eax);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 1), 0xB);
	if (ts->eflags.zero) {
        goto loc_4D0DFF;
    }
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x790BD8);
	goto loc_4D0E01;

loc_4D0DFF:
	xor_(&ts->edi, ts->edi);

loc_4D0E01:
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 1), ts->bl);
	game::sub_54EE40(ts, mv);
	push(mv, &ts->esp, 0x38);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 1), 0xC);
	if (ts->eflags.zero) {
        goto loc_4D0E45;
    }
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x790BD8);
	goto loc_4D0E47;

loc_4D0E45:
	xor_(&ts->edi, ts->edi);

loc_4D0E47:
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 1), ts->bl);
	game::sub_54EE40(ts, mv);
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 1), 0xD);
	if (ts->eflags.zero) {
        goto loc_4D0EA2;
    }
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x794A70);
	mov(mv, x86::mem(ts->edi + 0x1C, 4), 0xC37E0000);
	mov(mv, x86::mem(ts->edi + 0x20, 4), ts->ebp);
	goto loc_4D0EA4;

loc_4D0EA2:
	xor_(&ts->edi, ts->edi);

loc_4D0EA4:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x24, 1), ts->bl);
	game::sub_54F170(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x168, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x150, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_51FE70(ts, mv);
	push(mv, &ts->esp, 0xB32F2B49);
	mov(mv, x86::mem(ts->esi + 0x16C, 4), ts->eax);
	game::sub_4FFA80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x16C, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_50D7E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x154, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_51FE70(ts, mv);
	push(mv, &ts->esp, 0x332C0B6F);
	mov(mv, x86::mem(ts->esi + 0x170, 4), ts->eax);
	game::sub_4FFA80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x170, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_50D7E0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x158, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_51FE70(ts, mv);
	push(mv, &ts->esp, 0x9E275BF);
	mov(mv, x86::mem(ts->esi + 0x174, 4), ts->eax);
	game::sub_4FFA80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x174, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_50D7E0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x15C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_51FE70(ts, mv);
	push(mv, &ts->esp, 0xBEDF2B09);
	mov(mv, x86::mem(ts->esi + 0x178, 4), ts->eax);
	game::sub_4FFA80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x178, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_50D7E0(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x180, 1), 0x0);
	mov(mv, x86::mem(ts->esi + 0x184, 4), 0x0);
	game::sub_539650(ts, mv);
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4D0FAF;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_555F10(ts, mv);
	add(&ts->esp, 0x10);

loc_4D0FAF:
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	game::sub_54E6A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_54E6E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_774630:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto ??1strstreambuf@@UAE@XZ;

loc_774638:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x188);
	goto sub_49D870;

loc_774646:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x795F80);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_77465A:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x795F6C);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_77466E:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x795F54);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774682:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x795F40);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774696:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x795F2C);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7746AA:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x795F1C);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7746BE:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x793F9C);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7746D2:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x793F9C);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7746E6:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x795F0C);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7746FA:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x793F9C);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_77470E:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x793F9C);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774722:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x795EFC);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4D09A0:
	mov(&ts->eax, 0x7E0460);
	goto ___CxxFrameHandler;
}

void sub_4D0FF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x774756);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x795F94);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x184, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4D1038;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x184, 4), 0x0);

loc_4D1038:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x188, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_4D105A;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x188, 4), 0x0);

loc_4D105A:
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	game::strstreambuf___strstreambuf_void_(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_774740:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto ??1strstreambuf@@UAE@XZ;

loc_774748:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x188);
	goto sub_49D870;

SEH_4D0FF0:
	mov(&ts->eax, 0x7E048C);
	goto ___CxxFrameHandler;
}

void sub_4D1080(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776E28);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	game::sub_552780(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	mov(mv, x86::mem(ts->esi, 4), 0x795FA8);
	game::sub_4BA980(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_776E20:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto ??1strstreambuf@@UAE@XZ;

SEH_4FBDC0:
	mov(&ts->eax, 0x7E02C0);
	goto ___CxxFrameHandler;
}

void sub_4D10D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4D10F0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4D10E8;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4D10E8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4D10F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x795FA8);
	goto ??1strstreambuf@@UAE@XZ;
}

void sub_4D1100(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x774776);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->esi);
	game::sub_552780(ts, mv);
	xor_(&ts->ebx, ts->ebx);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x184, 4));
	mov(mv, x86::mem(ts->esi, 4), 0x795FBC);
	mov(mv, x86::mem(ts->esi + 0x14C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x150, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x17C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x180, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x4, 1), ts->bl);
	mov(mv, x86::mem(ts->edi + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0xC, 1), ts->bl);
	mov(mv, x86::mem(ts->edi + 0xD, 1), ts->bl);
	mov(mv, x86::mem(ts->edi + 0xE, 1), ts->bl);
	mov(mv, x86::mem(ts->edi + 0xF, 1), ts->bl);
	mov(mv, x86::mem(ts->edi + 0x10, 1), ts->bl);
	mov(mv, x86::mem(ts->edi + 0x14, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x18, 4), ts->ebx);
	xor_(&ts->ecx, ts->ecx);
	lea(mv, &ts->ebp, x86::mem(ts->esi + 0x154, 4));
	mov(&ts->edx, ts->ebp);
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	mov(mv, x86::mem(ts->edx + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->edx + 0x8, 4), ts->ecx);
	mov(mv, x86::mem(ts->edx + 0xC, 4), ts->ecx);
	mov(mv, x86::mem(ts->edx + 0x10, 4), ts->ecx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x168, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ecx);
	push(mv, &ts->esp, 0x10);
	mov(&ts->ecx, 0x850080);
	mov(mv, x86::mem(ts->esp + 0x20, 1), 0x1);
	game::sub_5031D0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	game::sub_43DC00(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x10);
	mov(&ts->ecx, 0x850080);
	game::sub_503210(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x168, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43DC00(ts, mv);
	add(&ts->esp, 0xC);
	mov(&ts->ecx, ts->esi);
	game::sub_4BADD0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x836370, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x150, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_4D121F;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x151, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_4D121F;
    }
	mov(&ts->ecx, 0x850080);
	game::sub_5031D0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x2756FB2F);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	game::sub_4CFCB0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x190, 1), 0x1);
	mov(mv, &ts->eax, x86::mem(0x836370, 4));
	add(&ts->esp, 0x10);

loc_4D121F:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->eax + 0x150, 1), ts->bl);
	mov(mv, &ts->edx, x86::mem(0x836370, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->edx + 0x151, 1), ts->bl);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_774760:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto ??1strstreambuf@@UAE@XZ;

loc_774768:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x184);
	goto sub_49D870;

SEH_4D1100:
	mov(&ts->eax, 0x7E04B8);
	goto ___CxxFrameHandler;
}

void sub_4D1250(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776E28);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x795FBC);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x184, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4D1298;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x184, 4), 0x0);

loc_4D1298:
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	game::strstreambuf___strstreambuf_void_(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_776E20:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto ??1strstreambuf@@UAE@XZ;

SEH_4FBDC0:
	mov(&ts->eax, 0x7E02C0);
	goto ___CxxFrameHandler;
}

void sub_4D12C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7747A1);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x795FD0);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x2);
	game::sub_58A0E0(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x49EC60);
	mov(&ts->ecx, ts->eax);
	game::sub_584270(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x108, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	game::sub_58A790(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x110, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D132A;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x110, 4), 0x0);

loc_4D132A:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x120, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4D134C;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x120, 4), 0x0);

loc_4D134C:
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 1), 0x0);
	game::sub_4CBBA0(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	game::sub_510D40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_774780:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

loc_774788:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x4C);
	goto sub_4CBBA0;

loc_774793:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x120);
	goto sub_49D870;

SEH_4D12C0:
	mov(&ts->eax, 0x7E04EC);
	goto ___CxxFrameHandler;
}

void sub_4D1380(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x90);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x3C, 1), 0x0);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0xF);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x3D, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	lea(mv, &ts->esi, x86::mem(ts->ebx + 0x4C, 4));
	mov(&ts->ecx, ts->esi);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	game::sub_51F530(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D13D1;
    }
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x40, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43DBD0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x2C, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4D13D1;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x30, 4));
	push(mv, &ts->esp, 0x78F21C);
	push(mv, &ts->esp, ts->edx);
	game::sub_51EE80(ts, mv);

loc_4D13D1:
	mov(&ts->ecx, ts->esi);
	game::sub_51F4E0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x108, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4D13ED;
    }
	xor_(&ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	goto loc_4D13FC;

loc_4D13ED:
	push(mv, &ts->esp, ts->eax);
	game::sub_73D8D0(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	mov(&ts->edi, ts->eax);

loc_4D13FC:
	mov(mv, &ts->al, x86::mem(ts->esp + 0xA0, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_4D160D;
    }
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4D160D;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_4D1420:
	push(mv, &ts->esp, 0x1C);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D144B;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 1), 0x1);
	mov(mv, x86::mem(ts->eax, 4), 0x795CB0);
	mov(mv, x86::mem(ts->eax + 0x18, 4), 0xFFFFFFFF);
	mov(&ts->esi, ts->eax);
	goto loc_4D144D;

loc_4D144B:
	xor_(&ts->esi, ts->esi);

loc_4D144D:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x108, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_73D8E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x108, 4));
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_584B50(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebp, ts->eax);
	game::sub_582950(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_4AEA60(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x110, 4));
	test(&ts->eflags, ts->eax, 0x4000000);
	if (ts->eflags.zero) {
        goto loc_4D14A3;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x93FDEE74);
	goto loc_4D150A;

loc_4D14A3:
	test(&ts->eflags, ts->eax, 0x8000000);
	if (ts->eflags.zero) {
        goto loc_4D14B5;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xDCB9F861);
	goto loc_4D150A;

loc_4D14B5:
	test(&ts->eflags, ts->eax, 0x10000000);
	if (ts->eflags.zero) {
        goto loc_4D14C7;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x35102EDF);
	goto loc_4D150A;

loc_4D14C7:
	test(&ts->eflags, ts->eax, 0x20000000);
	if (ts->eflags.zero) {
        goto loc_4D14D9;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xD7162CFA);
	goto loc_4D150A;

loc_4D14D9:
	test(&ts->eflags, ts->eax, 0x40000000);
	if (ts->eflags.zero) {
        goto loc_4D14EB;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x30DA61E1);
	goto loc_4D150A;

loc_4D14EB:
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.sign) {
        goto loc_4D14FA;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x75F903F4);
	goto loc_4D150A;

loc_4D14FA:
	test(&ts->eflags, ts->eax, 0x2000000);
	if (ts->eflags.zero) {
        goto loc_4D151A;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x613D3106);

loc_4D150A:
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->ecx, ts->esi);
	push(mv, &ts->esp, ts->eax);
	game::sub_4AEA60(ts, mv);

loc_4D151A:
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x19, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x1D, 2), ts->cx);
	mov(mv, x86::mem(ts->esp + 0x1F, 1), ts->cl);
	mov(mv, x86::mem(ts->esp + 0x18, 1), 0x0);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x11C, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x1BC, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F770);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	add(&ts->esp, 0x14);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_4AEA60(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x24, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4D157D;
    }
	push(mv, &ts->esp, 0x795FF0);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C960(ts, mv);
	add(&ts->esp, 0xC);
	goto loc_4D1592;

loc_4D157D:
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x795FE8);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	add(&ts->esp, 0x10);

loc_4D1592:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_4AEA60(ts, mv);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x8C, 4));
	push(mv, &ts->esp, 0x795FE0);
	push(mv, &ts->esp, ts->eax);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_7420B0(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_516280(ts, mv);
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_4AEA60(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->ecx);
	lea(mv, &ts->edi, x86::mem(ts->ebx + 0x4C, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	game::sub_51F2E0(ts, mv);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	game::sub_52EA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4D1420;
    }
	mov(&ts->edi, ts->ecx);

loc_4D160D:
	cmp(&ts->eflags, ts->edi, 0xF);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4D176A;
    }
	mov(&ts->eax, 0xF);
	sub(&ts->eax, ts->edi);
	lea(mv, &ts->ebp, x86::mem(ts->edi + 0x1, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);

loc_4D1624:
	push(mv, &ts->esp, 0x1C);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D164F;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 1), 0x1);
	mov(mv, x86::mem(ts->eax, 4), 0x795CB0);
	mov(mv, x86::mem(ts->eax + 0x18, 4), 0xFFFFFFFF);
	mov(&ts->esi, ts->eax);
	goto loc_4D1651;

loc_4D164F:
	xor_(&ts->esi, ts->esi);

loc_4D1651:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x783FE5);
	mov(&ts->ecx, ts->esi);
	game::sub_4AEA60(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x783FE5);
	mov(&ts->ecx, ts->esi);
	game::sub_4AEA60(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x783FE5);
	mov(&ts->ecx, ts->esi);
	game::sub_4AEA60(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x783FE5);
	mov(&ts->ecx, ts->esi);
	game::sub_4AEA60(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x783FE5);
	mov(&ts->ecx, ts->esi);
	game::sub_4AEA60(ts, mv);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x794CB0);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x88, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->ebx + 0x4, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x90, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0x78FC44);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_537CC0(ts, mv);
	add(&ts->esp, 0x28);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4D16FF;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FC44);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);

loc_4D16FF:
	mov(mv, x86::mem(ts->esp + 0x20, 1), 0x0);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x7);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x21, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x78FE80);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->ebx + 0x4, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x20);
	lea(mv, &ts->edi, x86::mem(ts->ebx + 0x4C, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	game::sub_51F2E0(ts, mv);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	game::sub_5434D0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	inc(&ts->ebp);
	dec(&ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4D1624;
    }
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));

loc_4D176A:
	mov(mv, &ts->al, x86::mem(ts->esp + 0x40, 1));
	test(&ts->eflags, ts->al, ts->al);
	pop(mv, &ts->esp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_4D17B7;
    }
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x3C, 4));
	lea(mv, &ts->esi, x86::mem(ts->ebx + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_51F350(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D17B7;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x3C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_51F350(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_51F440(ts, mv);
	dec(&ts->eax);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_54EDD0(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x2C, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4D17DC;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	goto loc_4D17D7;

loc_4D17B7:
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4D17DC;
    }
	lea(mv, &ts->esi, x86::mem(ts->ebx + 0x4C, 4));
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_54EDD0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x2C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4D17DC;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, ts->eax);

loc_4D17D7:
	game::sub_51EE80(ts, mv);

loc_4D17DC:
	mov(&ts->ecx, ts->ebx);
	game::sub_4BAFD0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x90);
	retn(mv, &ts->esp, 0x4);
}

void sub_4D17F0(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x4, 4), 0x3);
	if (!ts->eflags.zero) {
        goto locret_4D1802;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, 0x0);
	game::sub_4D1380(ts, mv);

locret_4D1802:
	retn(mv, &ts->esp);
}

void sub_4D1810(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7747CC);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	game::sub_552780(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	mov(&ts->ecx, 0x850080);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x0);
	mov(mv, x86::mem(ts->esi, 4), 0x796014);
	mov(mv, x86::mem(ts->esi + 0x154, 1), 0x0);
	game::sub_5031D0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xB34AB032);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78FC4C);
	push(mv, &ts->esp, ts->edi);
	game::sub_542600(ts, mv);
	push(mv, &ts->esp, 0x254);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x14);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x14, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4D18C6;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x5);
	push(mv, &ts->esp, 0x783FE5);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xC);
	mov(&ts->ecx, ts->edi);
	game::sub_51E9E0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x794CD8);
	goto loc_4D18C8;

loc_4D18C6:
	xor_(&ts->edi, ts->edi);

loc_4D18C8:
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x18, 1), 0x0);
	game::sub_54F820(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x14C, 4), ts->eax);
	game::sub_51FE70(ts, mv);
	push(mv, &ts->esp, 0x332C0B6F);
	mov(mv, x86::mem(ts->esi + 0x150, 4), ts->eax);
	game::sub_4FFA80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x150, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_50D7E0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x14C, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_539650(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_7747B0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto ??1strstreambuf@@UAE@XZ;

loc_7747B8:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x795FF4);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4D1810:
	mov(&ts->eax, 0x7E0518);
	goto ___CxxFrameHandler;
}

void sub_4D1930(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4D1950(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4D1948;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4D1948:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4D1950(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x796014);
	goto ??1strstreambuf@@UAE@XZ;
}

void sub_4D1960(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7747E8);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	mov(mv, x86::mem(ts->esi + 0x14, 1), 0x1);
	xor_(&ts->ebx, ts->ebx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi, 4), 0x796028);
	game::sub_40C910(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x917, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x92C, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x918, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x928, 4), 0xFFFFFFFF);
	xor_(&ts->eax, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x910, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 2), ts->ax);
	mov(mv, x86::mem(ts->ecx + 0x6, 1), ts->al);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_7747E0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_531610;

SEH_4D1A00:
	mov(&ts->eax, 0x7E053C);
	goto ___CxxFrameHandler;
}

void sub_4D19E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::std__strstreambuf___strstreambuf_void_(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4D19F8;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4D19F8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void std__strstreambuf___strstreambuf_void_(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7747E8);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x796028);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x3A4, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	game::nullsub_1(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->esi, 4), 0x795CB0);
	game::sub_4358E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_7747E0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_531610;

SEH_4D1A00:
	mov(&ts->eax, 0x7E053C);
	goto ___CxxFrameHandler;
}

void sub_4D1A60(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77481E);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ebp);
	mov(mv, x86::mem(ts->ebp, 4), 0x79602C);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x1);
	mov(&ts->esi, 0x8358F4);

loc_4D1A95:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->eax);
	game::j__free(ts, mv);
	add(&ts->esi, 0x4);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->esi, 0x83590C);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4D1A95;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x1188, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4D1AC6;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->ebp + 0x1188, 4), ts->ebx);

loc_4D1AC6:
	game::sub_58A0E0(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x48, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_4D1B33;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x1174, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	game::sub_582860(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x1170, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	game::sub_58A790(ts, mv);
	game::sub_58A0E0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_586950(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	game::sub_58F740(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->ecx, ts->eax);
	game::sub_582930(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4D1B33;
    }
	test(mv, &ts->eflags, x86::mem(ts->eax + 0x114, 4), 0x80000);
	if (!ts->eflags.zero) {
        goto loc_4D1B33;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x1174, 4));
	game::sub_58D0D0(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	game::sub_58F740(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->ecx, ts->eax);
	game::sub_58D800(ts, mv);

loc_4D1B33:
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->ebp + 0x4C, 4));
	mov(mv, x86::mem(0x836384, 4), ts->ebx);
	mov(mv, x86::mem(0x8500C4, 1), ts->bl);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edi);
	mov(mv, x86::mem(ts->edi, 4), 0x795CB4);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x10, 4));
	lea(mv, &ts->esi, x86::mem(ts->edi + 0x10, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 1), 0x2);
	if (ts->eflags.zero) {
        goto loc_4D1B7D;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_4D1B60:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->eax - 0x4, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4D1B77;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax, 4));

loc_4D1B77:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_4D1B60;
    }

loc_4D1B7D:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x8, 4));
	lea(mv, &ts->esi, x86::mem(ts->edi + 0x8, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 1), ts->bl);
	pop(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4D1BAD;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_4D1B90:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->eax - 0x4, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4D1BA7;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->edx, 4));

loc_4D1BA7:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_4D1B90;
    }

loc_4D1BAD:
	mov(&ts->ecx, ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xFFFFFFFF);
	game::sub_510D40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x14);
	retn(mv, &ts->esp);

loc_774800:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x14, 4));
	goto sub_510D40;

loc_774808:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x14, 4));
	add(&ts->ecx, 0x4C);
	goto sub_4CBBA0;

loc_774813:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x8);
	goto sub_4358E0;

SEH_4D1A60:
	mov(&ts->eax, 0x7E0570);
	goto ___CxxFrameHandler;
}

void sub_4D1BD0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_51CD60(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x24, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_51F440(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4D1CD8;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0x10, 4), 0xBA9BA7E3);
	if (!ts->eflags.zero) {
        goto loc_4D1CD8;
    }
	mov(mv, &ts->eax, x86::mem(0x850084, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4D1C5B;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1180, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4D1CD8;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1178, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4D1CD8;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50D2A0(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(0x83A9D8, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1170, 4));
	push(mv, &ts->esp, 0x1);
	game::sub_58AD20(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(0x838528, 1), 0x0);
	game::sub_4BB6E0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4D1C5B:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1170, 4));
	game::sub_58D9F0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4D1C9A;
    }
	mov(mv, x86::mem(0x838528, 1), ts->al);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1170, 4));
	push(mv, &ts->esp, 0x1);
	game::sub_58AD20(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50D2A0(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(0x83A9D8, 4), ts->eax);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x11BF, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4D1C9A:
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x0);
	game::sub_58F740(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->ecx, ts->eax);
	game::sub_58D940(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4D1CD8;
    }
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x200);
	setnz(ts->eflags, &ts->dl);
	mov(mv, x86::mem(0x838528, 1), ts->dl);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1170, 4));
	push(mv, &ts->esp, 0x0);
	game::sub_58AD20(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x11BF, 1), 0x0);

loc_4D1CD8:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4D1CE0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x2C);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x34);
	mov(&ts->edi, ts->ecx);
	game::j__malloc(ts, mv);
	xor_(&ts->ebx, ts->ebx);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4D1D2C;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->eax, 4), 0x79B9D4);
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x28, 1), 0x1);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), 0x78F228);
	mov(mv, x86::mem(ts->eax + 0x30, 4), 0x78F21C);
	mov(&ts->esi, ts->eax);
	goto loc_4D1D2E;

loc_4D1D2C:
	xor_(&ts->esi, ts->esi);

loc_4D1D2E:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0xBA9BA7E3);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	push(mv, &ts->esp, 0x10);
	mov(&ts->ebp, ts->eax);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4D1D5A;
    }
	mov(mv, x86::mem(ts->eax, 4), 0x790C2C);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ebp);
	add(&ts->eax, 0x4);
	goto loc_4D1D5C;

loc_4D1D5A:
	xor_(&ts->eax, ts->eax);

loc_4D1D5C:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x10, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0xB1000CC7);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	add(&ts->esp, 0x8);
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x4C, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->eax);
	game::sub_52E770(ts, mv);
	mov(mv, x86::mem(ts->edi + 0x11A4, 4), ts->esi);
	mov(&ts->ebp, 0x1);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x6);
	goto loc_4D1DA0;

loc_4D1D9E:
	xor_(&ts->ebx, ts->ebx);

loc_4D1DA0:
	push(mv, &ts->esp, 0x34);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4D1DE1;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->eax, 4), 0x79B9D4);
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x28, 1), 0x1);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), 0x78F228);
	mov(mv, x86::mem(ts->eax + 0x30, 4), 0x78F21C);
	mov(&ts->esi, ts->eax);
	goto loc_4D1DE3;

loc_4D1DE1:
	xor_(&ts->esi, ts->esi);

loc_4D1DE3:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x78FEDC);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, 0x24);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->ecx);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	push(mv, &ts->esp, 0x10);
	mov(mv, x86::mem(ts->esp + 0x34, 4), ts->eax);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x20);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4D1E35;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->eax, 4), 0x790C2C);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ecx);
	add(&ts->eax, 0x4);
	goto loc_4D1E37;

loc_4D1E35:
	xor_(&ts->eax, ts->eax);

loc_4D1E37:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x10, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	push(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	push(mv, &ts->esp, 0x79603C);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, 0x24);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->edi + 0x4, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_5379C0(ts, mv);
	add(&ts->esp, 0x1C);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x4C, 4));
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->eax);
	game::sub_52E770(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	inc(&ts->ebp);
	dec(&ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4D1D9E;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x2C);
	retn(mv, &ts->esp);
}

void sub_4D1EA0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, 0x774894);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x4C);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x64, 4));
	test(&ts->eflags, ts->ebp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4D1ED3;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1170, 4));
	game::sub_582930(ts, mv);
	mov(&ts->ebp, ts->eax);

loc_4D1ED3:
	test(&ts->eflags, ts->ebp, ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ebp);
	if (ts->eflags.zero) {
        goto loc_4D1EE3;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x1BC, 4));
	goto loc_4D1EE5;

loc_4D1EE3:
	xor_(&ts->eax, ts->eax);

loc_4D1EE5:
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, x86::mem(ts->esi + 0x11B0, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x11AC, 4), ts->ebp);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51F490(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x70, 4));
	mov(&ts->ecx, 0x850080);
	mov(mv, x86::mem(ts->esp + 0x38, 4), ts->eax);
	game::sub_5031F0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50B990(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x11A4, 4));
	mov(mv, x86::mem(ts->esp + 0x34, 4), ts->eax);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x30, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x78, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4D1F4F;
    }
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4D1F4F;
    }
	add(&ts->ebx, 0x918);
	push(mv, &ts->esp, ts->ebx);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->eax);

loc_4D1F4F:
	mov(&ts->ecx, ts->edi);
	game::sub_51F4E0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4D1F68;
    }
	add(&ts->eax, 0xFFFFFFFC);
	mov(mv, x86::mem(ts->esp + 0x6C, 4), ts->eax);
	goto loc_4D1F6C;

loc_4D1F68:
	mov(mv, x86::mem(ts->esp + 0x6C, 4), ts->ebx);

loc_4D1F6C:
	cmp(&ts->eflags, ts->ebp, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4D207F;
    }
	cmp(mv, &ts->eflags, x86::mem(0x850084, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4D207F;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x1BC, 4));
	mov(&ts->edx, 0x1);
	cmp(&ts->eflags, ts->ecx, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->edx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4D1FB3;
    }
	lea(mv, &ts->eax, x86::mem(ts->ebp + 0x260, 4));
	dec(&ts->ecx);
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_4D1FA0:
	test(mv, &ts->eflags, x86::mem(ts->eax, 4), 0x8000000);
	if (ts->eflags.zero) {
        goto loc_4D1FA9;
    }
	inc(&ts->edx);

loc_4D1FA9:
	add(&ts->eax, 0x64);
	dec(&ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4D1FA0;
    }
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->edx);

loc_4D1FB3:
	push(mv, &ts->esp, 0x930);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x34, 4), ts->eax);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x64, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4D1FD7;
    }
	mov(&ts->ecx, ts->eax);
	game::sub_4D1960(ts, mv);
	mov(&ts->edi, ts->eax);
	goto loc_4D1FD9;

loc_4D1FD7:
	xor_(&ts->edi, ts->edi);

loc_4D1FD9:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x9A9F1336);
	mov(mv, x86::mem(ts->esp + 0x70, 4), 0xFFFFFFFF);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_4AEA60(ts, mv);
	mov(&ts->ecx, 0x850080);
	game::sub_5031F0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x918, 4));
	push(mv, &ts->esp, 0x10);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C960(ts, mv);
	add(&ts->esp, 0xC);
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->ebx);
	game::sub_51F2E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ebp + 0x118, 4), ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->ebx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4D2060;
    }
	game::sub_5434D0(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1180, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4D204F;
    }
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x1180, 1), 0x0);
	game::sub_49EFE0(ts, mv);

loc_4D204F:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_51CD60(ts, mv);
	add(&ts->esp, 0x4);
	goto loc_4D2115;

loc_4D2060:
	game::sub_52EA50(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1180, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4D2115;
    }
	mov(mv, x86::mem(ts->esi + 0x1180, 1), 0x1);
	goto loc_4D210C;

loc_4D207F:
	push(mv, &ts->esp, 0x930);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x34, 4), ts->eax);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x64, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4D20A7;
    }
	mov(&ts->ecx, ts->eax);
	game::sub_4D1960(ts, mv);
	mov(&ts->ebx, ts->eax);
	goto loc_4D20A9;

loc_4D20A7:
	xor_(&ts->ebx, ts->ebx);

loc_4D20A9:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1170, 4));
	mov(mv, x86::mem(ts->esp + 0x64, 4), 0xFFFFFFFF);
	game::sub_58D9F0(ts, mv);
	cmp(&ts->eflags, ts->al, 0x1);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	if (!ts->eflags.zero) {
        goto loc_4D20CB;
    }
	push(mv, &ts->esp, 0xBBF1F488);
	goto loc_4D20D0;

loc_4D20CB:
	push(mv, &ts->esp, 0xFC00D963);

loc_4D20D0:
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->ecx, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	game::sub_4AEA60(ts, mv);
	mov(&ts->ecx, 0x850080);
	game::sub_5031F0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->ebx + 0x918, 4));
	push(mv, &ts->esp, 0x10);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C960(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->edi);
	game::sub_51F2E0(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->edi);
	game::sub_52EA50(ts, mv);

loc_4D210C:
	mov(&ts->ecx, ts->esi);
	push(mv, &ts->esp, 0x0);
	game::sub_49EFE0(ts, mv);

loc_4D2115:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x6C, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	xor_(&ts->ecx, ts->ecx);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4D212B;
    }
	add(&ts->eax, 0xFFFFFFFC);
	mov(mv, x86::mem(ts->esp + 0x6C, 4), ts->eax);
	goto loc_4D212F;

loc_4D212B:
	mov(mv, x86::mem(ts->esp + 0x6C, 4), ts->ecx);

loc_4D212F:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x11B0, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4D24B4;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	add(&ts->eax, 0x1C4);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x1);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);

loc_4D2154:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x11A8, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4D219B;
    }
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x18, 4));
	mov(&ts->edi, 0x8358F4);
	goto loc_4D2170;

loc_4D2170:
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebp);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D2194;
    }
	add(&ts->edi, 0x4);
	cmp(&ts->eflags, ts->edi, 0x83590C);
	mov(mv, x86::mem(ts->ebx + 0x835911, 1), 0x0);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4D2170;
    }
	goto loc_4D219B;

loc_4D2194:
	mov(mv, x86::mem(ts->ebx + 0x835911, 1), 0x1);

loc_4D219B:
	push(mv, &ts->esp, 0x930);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x34, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x64, 4), 0x2);
	if (ts->eflags.zero) {
        goto loc_4D21C3;
    }
	mov(&ts->ecx, ts->eax);
	game::sub_4D1960(ts, mv);
	mov(&ts->ebp, ts->eax);
	goto loc_4D21C5;

loc_4D21C3:
	xor_(&ts->ebp, ts->ebp);

loc_4D21C5:
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x10, 4));
	test(mv, &ts->eflags, x86::mem(ts->ebx + 0x38, 4), 0x8000000);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1198, 1));
	mov(mv, x86::mem(ts->esp + 0x64, 4), 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_4D2213;
    }
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4D229C;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FEA4);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x78FEC8);
	game::sub_50B9C0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	goto loc_4D229C;

loc_4D2213:
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4D223D;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x796078);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78FEC8);
	game::sub_50B9C0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);

loc_4D223D:
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x200);
	if (ts->eflags.zero) {
        goto loc_4D229C;
    }
	mov(mv, x86::mem(ts->esp + 0x3C, 1), 0x0);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x7);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x3D, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	mov(&ts->ecx, 0x850080);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	game::sub_5031F0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D229C;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x3C, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DBD0(ts, mv);
	game::sub_582B60(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xF8, 4));
	push(mv, &ts->esp, 0x40);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x48, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_740790(ts, mv);
	add(&ts->esp, 0x14);

loc_4D229C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->ebp);
	game::sub_4AEA60(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->edi, x86::mem(ts->ebp + 0x918, 4));
	push(mv, &ts->esp, 0x10);
	push(mv, &ts->esp, ts->edi);
	game::sub_50C960(ts, mv);
	push(mv, &ts->esp, ts->edi);
	game::sub_50B990(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x30, 4));
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4D22DB;
    }
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4D22DB;
    }
	cmp(&ts->eflags, ts->eax, 0xF636A00);
	if (ts->eflags.zero) {
        goto loc_4D22DB;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x6C, 4));
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->ecx);

loc_4D22DB:
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x30, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4D22E9;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x6C, 4));
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->edx);

loc_4D22E9:
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x0);
	game::sub_58B9A0(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	mov(&ts->edi, ts->eax);
	game::sub_58F740(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->ecx, ts->eax);
	game::sub_5829C0(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x34, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	add(&ts->eax, 0x1C4);
	push(mv, &ts->esp, ts->eax);
	game::sub_58B9A0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_58E3B0(ts, mv);
	mov(&ts->ebx, ts->eax);
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4D23F1;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	lea(mv, &ts->eax, x86::mem(ts->ebp + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_58E450(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4D23F1;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	lea(mv, &ts->edx, x86::mem(ts->ebp + 0x917, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->ebp + 0x910, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_58BA00(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4D23F1;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x34, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->ebp + 0x928, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_58E530(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4D23F1;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_58E6D0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4D23F1;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x330, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D23AC;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->ecx, 4));
	if (ts->eflags.zero) {
        goto loc_4D23E8;
    }

loc_4D23AC:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x4B5C9721);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x87F32B2A);
	push(mv, &ts->esp, 0x87F32B2A);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->edi);
	game::sub_558540(ts, mv);
	push(mv, &ts->esp, 0x87F32B2A);
	game::sub_4FF2E0(ts, mv);
	add(&ts->esp, 0x20);
	mov(&ts->ecx, ts->esi);
	game::sub_54E590(ts, mv);

loc_4D23E8:
	mov(mv, x86::mem(ts->ebp + 0x92C, 1), 0x1);
	goto loc_4D2408;

loc_4D23F1:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x49F8E0);
	push(mv, &ts->esp, ts->edx);
	game::sub_58B9A0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_58E210(ts, mv);

loc_4D2408:
	mov(mv, &ts->al, x86::mem(0x850098, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4D2419;
    }
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ecx);
	goto loc_4D241D;

loc_4D2419:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));

loc_4D241D:
	xor_(&ts->ebx, ts->ebx);
	mov(&ts->eax, 0x7F44BC);

loc_4D2424:
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4D2441;
    }
	cmp(mv, &ts->eflags, ts->ecx, x86::mem(ts->eax, 4));
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_4D242E;
    }
	mov(&ts->ebx, ts->eax);

loc_4D242E:
	add(&ts->eax, 0xC);
	cmp(&ts->eflags, ts->eax, 0x7F44EC);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4D2424;
    }
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4D2441;
    }
	mov(&ts->ebx, 0x7F44EC);

loc_4D2441:
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->edi);
	game::sub_51F2E0(ts, mv);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->edi);
	game::sub_52EA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x8, 4));
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x6C, 4));
	mov(mv, &ts->ebx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0x78F21C);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->edi + 0x2C, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x30, 4), ts->eax);
	game::sub_51EE80(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D2481;
    }
	add(&ts->eax, 0xFFFFFFFC);
	mov(mv, x86::mem(ts->esp + 0x6C, 4), ts->eax);
	goto loc_4D2489;

loc_4D2481:
	mov(mv, x86::mem(ts->esp + 0x6C, 4), 0x0);

loc_4D2489:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x11B0, 4));
	inc(&ts->eax);
	inc(&ts->edi);
	add(&ts->edx, 0x64);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4D2154;
    }

loc_4D24B4:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D2699;
    }
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x11B0, 4));
	cmp(mv, &ts->eflags, ts->ebx, x86::mem(ts->eax + 0x11C, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4D25C8;
    }
	lea(mv, &ts->ebp, x86::mem(ts->ebx + 0x1, 4));

loc_4D24D5:
	push(mv, &ts->esp, 0x930);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x6C, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x64, 4), 0x3);
	if (ts->eflags.zero) {
        goto loc_4D24FD;
    }
	mov(&ts->ecx, ts->eax);
	game::sub_4D1960(ts, mv);
	mov(&ts->edi, ts->eax);
	goto loc_4D24FF;

loc_4D24FD:
	xor_(&ts->edi, ts->edi);

loc_4D24FF:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xF636A00);
	mov(mv, x86::mem(ts->esp + 0x70, 4), 0xFFFFFFFF);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_4AEA60(ts, mv);
	push(mv, &ts->esp, 0xF636A00);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x918, 4));
	push(mv, &ts->esp, 0x10);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	game::sub_51F2E0(ts, mv);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	game::sub_52EA50(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FC44);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x78FEC8);
	game::sub_50B9C0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79053C);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x78FEBC);
	game::sub_50B9C0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F21C);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x79603C);
	game::sub_50B9C0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x24, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x11C, 4));
	add(&ts->esp, 0x10);
	inc(&ts->ebx);
	inc(&ts->ebp);
	cmp(&ts->eflags, ts->ebx, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4D24D5;
    }

loc_4D25C8:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x11C, 4));
	cmp(&ts->eflags, ts->eax, 0x6);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4D2699;
    }
	lea(mv, &ts->ebp, x86::mem(ts->eax + 0x1, 4));
	mov(&ts->edi, ts->edi);

loc_4D25E0:
	push(mv, &ts->esp, 0x930);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x6C, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x64, 4), 0x4);
	if (ts->eflags.zero) {
        goto loc_4D2608;
    }
	mov(&ts->ecx, ts->eax);
	game::sub_4D1960(ts, mv);
	mov(&ts->edi, ts->eax);
	goto loc_4D260A;

loc_4D2608:
	xor_(&ts->edi, ts->edi);

loc_4D260A:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x783FE5);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x70, 4), 0xFFFFFFFF);
	game::sub_4AEA60(ts, mv);
	push(mv, &ts->esp, 0x796074);
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x918, 4));
	push(mv, &ts->esp, 0x10);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	add(&ts->esp, 0xC);
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->ebx);
	game::sub_51F2E0(ts, mv);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->ebx);
	game::sub_5434D0(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FC44);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x78FEC8);
	game::sub_50B9C0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79053C);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x78FEBC);
	game::sub_50B9C0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	inc(&ts->ebp);
	cmp(&ts->eflags, ts->ebp, 0x7);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4D25E0;
    }

loc_4D2699:
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->edi);
	game::sub_543470(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x11BE, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4D26C0;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D26C0;
    }
	mov(mv, x86::mem(ts->esi + 0x11BE, 1), 0x1);
	goto loc_4D26E5;

loc_4D26C0:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x2C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4D26E5;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x38, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D26D1;
    }
	dec(&ts->eax);

loc_4D26D1:
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	game::sub_43BE60(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D26E3;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_4D26E5;

loc_4D26E3:
	xor_(&ts->eax, ts->eax);

loc_4D26E5:
	mov(&ts->ecx, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_538530(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x2C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4D2702;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, ts->edx);
	game::sub_51EE80(ts, mv);

loc_4D2702:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->edi);
	game::sub_538500(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esp + 0x70, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4D271C;
    }
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_4BBA20(ts, mv);

loc_4D271C:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1198, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4D2747;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FEA4);
	push(mv, &ts->esp, 0x796060);
	game::sub_50B9C0(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);

loc_4D2747:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x5C, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x58);
	retn(mv, &ts->esp, 0x8);

loc_774830:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79604C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x34, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774844:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79604C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x34, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774858:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79604C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x34, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_77486C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79604C);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774880:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79604C);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774894:
	mov(&ts->eax, 0x7E05B4);
	goto ___CxxFrameHandler;
}

void sub_4D2760(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	sub(&ts->esp, 0x60);
	cmp(&ts->eflags, ts->eax, 0x5);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4D2773;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	jmp(x86::mem(0x4D29CC, 4));

loc_4D277A:
	push(mv, &ts->esp, 0x4B5C9721);
	goto loc_4D2989;

loc_4D2784:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x78, 4));
	push(mv, &ts->esp, ts->ebp);
	game::sub_54E590(ts, mv);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x78, 4));
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x18);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x1BC, 4));
	xor_(&ts->ebx, ts->ebx);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4D27D0;
    }
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	lea(mv, &ts->esi, x86::mem(ts->ebp + 0x1C4, 4));

loc_4D27B5:
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	game::sub_43DBD0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x1BC, 4));
	add(&ts->esp, 0x8);
	inc(&ts->ebx);
	add(&ts->esi, 0x64);
	add(&ts->edi, 0x10);
	cmp(&ts->eflags, ts->ebx, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4D27B5;
    }

loc_4D27D0:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F0730(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x120, 4));
	cmp(mv, &ts->eflags, x86::mem(0x850088, 4), 0x8);
	mov(mv, x86::mem(0x89D00C, 4), ts->ecx);
	pop(mv, &ts->esp, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_4D2820;
    }
	mov(&ts->ecx, 0x83AAB4);
	game::sub_5028D0(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x850090, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x83AAB4);
	game::sub_502A20(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x850094, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x83AAB4);
	game::sub_502A30(ts, mv);

loc_4D2820:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x78, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x37C873AF);
	game::sub_51CE60(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x60);
	retn(mv, &ts->esp);

loc_4D283C:
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x74, 4));
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x78, 4));
	mov(&ts->ebx, 0x1);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_4D1EA0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x114, 4));
	test(&ts->eflags, ts->ah, 0x10);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1178, 1));
	if (ts->eflags.zero) {
        goto loc_4D291A;
    }
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4D2872;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_49F240(ts, mv);

loc_4D2872:
	cmp(mv, &ts->eflags, x86::mem(0x850084, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4D28C5;
    }
	push(mv, &ts->esp, 0x0);
	game::sub_58F740(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->ecx, ts->eax);
	game::sub_58D9F0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4D28C5;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x78FEB8);
	push(mv, &ts->esp, 0xBA9BA7E3);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x11A4, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x30, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x78F21C);
	push(mv, &ts->esp, ts->edx);
	game::sub_51EE80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x11A4, 4));
	game::sub_495890(ts, mv);

loc_4D28C5:
	mov(mv, &ts->eax, x86::mem(0x850084, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4D29C4;
    }
	push(mv, &ts->esp, 0x0);
	game::sub_58F740(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->ecx, ts->eax);
	game::sub_58D9F0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4D29C4;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x117C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4D29C4;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1170, 4));
	game::sub_582980(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4D29C4;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_4BB6E0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x60);
	retn(mv, &ts->esp);

loc_4D291A:
	cmp(&ts->eflags, ts->al, ts->bl);
	if (!ts->eflags.zero) {
        goto loc_4D29C4;
    }
	mov(mv, &ts->eax, x86::mem(0x850084, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D295B;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xEA6EA8DA);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xA6F52EE0);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x796084);
	push(mv, &ts->esp, 0xA6F52EE0);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x20);

loc_4D295B:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xA6F52EE0);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x117C, 4), 0xA);
	mov(mv, x86::mem(ts->esi + 0x1178, 1), 0x0);
	game::sub_4954E0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x60);
	retn(mv, &ts->esp);

loc_4D2984:
	push(mv, &ts->esp, 0x7D162708);

loc_4D2989:
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x7C, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x87F32B2A);
	push(mv, &ts->esp, 0x87F32B2A);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->edi);
	game::sub_558540(ts, mv);
	push(mv, &ts->esp, 0x87F32B2A);
	game::sub_4FF2E0(ts, mv);
	mov(&ts->ecx, ts->esi);
	add(&ts->esp, 0x20);
	game::sub_54E590(ts, mv);

loc_4D29C4:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);

def_4D2773:
	add(&ts->esp, 0x60);
	retn(mv, &ts->esp);
}

void sub_4D29F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1188, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D2A10;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x1188, 4), 0x0);

loc_4D2A10:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4D2A44;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xE7440760);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->esi);
	game::sub_558540(ts, mv);
	add(&ts->esp, 0x1C);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4D2A44:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x78, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4D2A59;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x30, 4));
	push(mv, &ts->esp, 0x78F21C);
	push(mv, &ts->esp, ts->edx);
	game::sub_51EE80(ts, mv);

loc_4D2A59:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_4D1EA0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4D2A70(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x7960B4);
	mov(&ts->esi, ts->ecx);
	game::sub_505450(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, 0x79609C);
	mov(mv, x86::mem(ts->esi, 4), ts->eax);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	add(&ts->esp, 0x18);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79608C);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	game::sub_542AC0(ts, mv);
	push(mv, &ts->esp, 0x4162454C);
	push(mv, &ts->esp, ts->edi);
	game::sub_537A10(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_51BD70(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x64, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x60, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x74, 4));
	mov(mv, x86::mem(ts->esi + 0x68, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x6C, 4), 0x0);
	mov(mv, x86::mem(ts->esi + 0x70, 4), 0x4);
	mov(mv, x86::mem(ts->esi + 0x74, 4), 0x0);
	mov(mv, x86::mem(ts->esi + 0x78, 1), 0x0);
	or_(mv, x86::mem(ts->eax + 0x1C, 4), 0x200);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x60, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x1C, 4));
	add(&ts->esp, 0xC);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x6C, 4), ts->eax);
	game::sub_4BC010(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4D2B20(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7748B3);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x7960CC);
	mov(mv, &ts->eax, x86::mem(0x7F44B4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xC);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x1);
	game::sub_55DDA0(ts, mv);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4C, 4));
	add(&ts->esp, 0x8);
	mov(&ts->ecx, ts->edi);
	game::sub_51F4E0(ts, mv);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x14, 1), 0x0);
	game::sub_4CBBA0(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0xFFFFFFFF);
	game::sub_510D40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

unknown_libname_57:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

loc_7748A8:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x4C);
	goto sub_4CBBA0;

SEH_4E5E60:
	mov(&ts->eax, 0x7E137C);
	goto ___CxxFrameHandler;
}

void sub_4D2BA0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x4C);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebp, ts->ecx);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x4, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 1), 0x0);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x7);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x19, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	push(mv, &ts->esp, 0x4D88D82);
	push(mv, &ts->esp, 0x78FFD8);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->esp + 0x13, 1), 0x0);
	lea(mv, &ts->ebx, x86::mem(ts->ebp + 0x4C, 4));
	goto loc_4D2BF0;

loc_4D2BF0:
	push(mv, &ts->esp, 0x34);
	game::j__malloc(ts, mv);
	xor_(&ts->edi, ts->edi);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4D2C31;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->eax, 4), 0x79B9D4);
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x28, 1), 0x1);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), 0x78F228);
	mov(mv, x86::mem(ts->eax + 0x30, 4), 0x78F21C);
	mov(&ts->edi, ts->eax);

loc_4D2C31:
	movzx(mv, &ts->esi, x86::mem(ts->esp + 0x13, 1));
	inc(&ts->esi);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x7960DC);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x40, 4));
	push(mv, &ts->esp, 0x24);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x4, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x48, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->ecx);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x78FFBC);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x3C, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x40, 4), ts->eax);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x4, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x44, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, 0x10);
	mov(mv, x86::mem(ts->edi + 0x14, 4), ts->eax);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x3C);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D2CB2;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->eax, 4), 0x790C2C);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ecx);
	add(&ts->eax, 0x4);
	goto loc_4D2CB4;

loc_4D2CB2:
	xor_(&ts->eax, ts->eax);

loc_4D2CB4:
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x10, 4));
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0xC, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	game::sub_52E770(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esp + 0x13, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4D2CDC;
    }
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->ebx);
	game::sub_538530(ts, mv);

loc_4D2CDC:
	mov(mv, &ts->al, x86::mem(ts->esp + 0x13, 1));
	inc(&ts->al);
	cmp(&ts->eflags, ts->al, 0x7);
	mov(mv, x86::mem(ts->esp + 0x13, 1), ts->al);
	if (ts->eflags.carry) {
        goto loc_4D2BF0;
    }
	mov(mv, &ts->eax, x86::mem(0x850088, 4));
	xor_(&ts->esi, ts->esi);
	cmp(&ts->eflags, ts->eax, 0x8);
	if (ts->eflags.zero) {
        goto loc_4D2D6F;
    }
	push(mv, &ts->esp, 0x18);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D2D1E;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->eax, 4), 0x795CB0);
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 1), 0x1);
	mov(&ts->edi, ts->eax);
	goto loc_4D2D20;

loc_4D2D1E:
	xor_(&ts->edi, ts->edi);

loc_4D2D20:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7A255162);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_4AEA60(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, 0x7A255162);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, 0xBD133F65);
	push(mv, &ts->esp, ts->esi);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x14);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->ebx);
	mov(&ts->esi, 0x1);
	game::sub_51F2E0(ts, mv);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->ebx);
	game::sub_52EA50(ts, mv);

loc_4D2D6F:
	push(mv, &ts->esp, 0x18);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D2D93;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->eax, 4), 0x795CB0);
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 1), 0x1);
	mov(&ts->edi, ts->eax);
	goto loc_4D2D95;

loc_4D2D93:
	xor_(&ts->edi, ts->edi);

loc_4D2D95:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xE2D5AD1E);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_4AEA60(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, 0xE2D5AD1E);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->edx);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	lea(mv, &ts->eax, x86::mem(ts->esi - 0x42ECC09B, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x14);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->ebx);
	inc(&ts->esi);
	game::sub_51F2E0(ts, mv);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->ebx);
	game::sub_52EA50(ts, mv);
	push(mv, &ts->esp, 0x18);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D2E0E;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->eax, 4), 0x795CB0);
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 1), 0x1);
	mov(&ts->edi, ts->eax);
	goto loc_4D2E10;

loc_4D2E0E:
	xor_(&ts->edi, ts->edi);

loc_4D2E10:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x69B36B15);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_4AEA60(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, 0x69B36B15);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ecx);
	game::sub_4FFA80(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	lea(mv, &ts->eax, x86::mem(ts->esi - 0x42ECC09B, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x14);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->ebx);
	inc(&ts->esi);
	game::sub_51F2E0(ts, mv);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->ebx);
	game::sub_52EA50(ts, mv);
	push(mv, &ts->esp, 0x18);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D2E89;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->eax, 4), 0x795CB0);
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 1), 0x1);
	mov(&ts->edi, ts->eax);
	goto loc_4D2E8B;

loc_4D2E89:
	xor_(&ts->edi, ts->edi);

loc_4D2E8B:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x35AAA91C);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_4AEA60(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, 0x35AAA91C);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	game::sub_4FFA80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	lea(mv, &ts->eax, x86::mem(ts->esi - 0x42ECC09B, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x14);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->ebx);
	inc(&ts->esi);
	game::sub_51F2E0(ts, mv);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->ebx);
	game::sub_52EA50(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x200);
	if (ts->eflags.zero) {
        goto loc_4D2F67;
    }
	push(mv, &ts->esp, 0x18);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D2F10;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->eax, 4), 0x795CB0);
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 1), 0x1);
	mov(&ts->edi, ts->eax);
	goto loc_4D2F12;

loc_4D2F10:
	xor_(&ts->edi, ts->edi);

loc_4D2F12:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x6353F07E);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_4AEA60(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, 0x6353F07E);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->edx);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	lea(mv, &ts->eax, x86::mem(ts->esi - 0x42ECC09B, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x14);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->ebx);
	inc(&ts->esi);
	game::sub_51F2E0(ts, mv);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->ebx);
	game::sub_52EA50(ts, mv);

loc_4D2F67:
	cmp(&ts->eflags, ts->esi, 0x7);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4D2F92;
    }
	add(&ts->esi, 0xBD133F65);

loc_4D2F72:
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, 0x7909A0);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x10);
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, 0xBD133F6C);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4D2F72;
    }

loc_4D2F92:
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x2C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4D2FA7;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, ts->edx);
	game::sub_51EE80(ts, mv);

loc_4D2FA7:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->ebx);
	game::sub_538500(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x24, 4));
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x68, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	game::sub_51F440(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->ebp + 0xF8, 4));
	game::sub_538080(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x4C);
	retn(mv, &ts->esp);
}

void sub_4D2FE0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7748B3);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x7960EC);
	mov(mv, &ts->eax, x86::mem(0x7F44B4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xC);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x1);
	game::sub_55DDA0(ts, mv);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4C, 4));
	add(&ts->esp, 0x8);
	mov(&ts->ecx, ts->edi);
	game::sub_51F4E0(ts, mv);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x14, 1), 0x0);
	game::sub_4CBBA0(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0xFFFFFFFF);
	game::sub_510D40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

unknown_libname_57:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

loc_7748A8:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x4C);
	goto sub_4CBBA0;

SEH_4E5E60:
	mov(&ts->eax, 0x7E137C);
	goto ___CxxFrameHandler;
}

void sub_4D3060(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x4C);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebp, ts->ecx);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x4, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 1), 0x0);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x7);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x19, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	push(mv, &ts->esp, 0x36422263);
	push(mv, &ts->esp, 0x78FFD8);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->esp + 0x13, 1), 0x0);
	lea(mv, &ts->ebx, x86::mem(ts->ebp + 0x4C, 4));
	goto loc_4D30B0;

loc_4D30B0:
	push(mv, &ts->esp, 0x34);
	game::j__malloc(ts, mv);
	xor_(&ts->esi, ts->esi);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4D30F1;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->eax, 4), 0x79B9D4);
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x28, 1), 0x1);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), 0x78F228);
	mov(mv, x86::mem(ts->eax + 0x30, 4), 0x78F21C);
	mov(&ts->esi, ts->eax);

loc_4D30F1:
	movzx(mv, &ts->edi, x86::mem(ts->esp + 0x13, 1));
	inc(&ts->edi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x7960FC);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x40, 4));
	push(mv, &ts->esp, 0x24);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x4, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x48, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->ecx);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	push(mv, &ts->esp, 0x10);
	mov(mv, x86::mem(ts->esp + 0x34, 4), ts->eax);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x20);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D3149;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->eax, 4), 0x790C2C);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ecx);
	add(&ts->eax, 0x4);
	goto loc_4D314B;

loc_4D3149:
	xor_(&ts->eax, ts->eax);

loc_4D314B:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x10, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	push(mv, &ts->esp, 0x78FFE8);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x4, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	add(&ts->esp, 0x1C);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->eax);
	game::sub_52E770(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esp + 0x13, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4D319F;
    }
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->ebx);
	game::sub_538530(ts, mv);

loc_4D319F:
	mov(mv, &ts->al, x86::mem(ts->esp + 0x13, 1));
	inc(&ts->al);
	cmp(&ts->eflags, ts->al, 0x7);
	mov(mv, x86::mem(ts->esp + 0x13, 1), ts->al);
	if (ts->eflags.carry) {
        goto loc_4D30B0;
    }
	mov(mv, &ts->eax, x86::mem(0x850088, 4));
	xor_(&ts->esi, ts->esi);
	cmp(&ts->eflags, ts->eax, 0x8);
	if (ts->eflags.zero) {
        goto loc_4D3232;
    }
	push(mv, &ts->esp, 0x18);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D31E1;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->eax, 4), 0x795CB0);
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 1), 0x1);
	mov(&ts->edi, ts->eax);
	goto loc_4D31E3;

loc_4D31E1:
	xor_(&ts->edi, ts->edi);

loc_4D31E3:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7A255162);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_4AEA60(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, 0x7A255162);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, 0x9EF01E6);
	push(mv, &ts->esp, ts->esi);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x14);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->ebx);
	mov(&ts->esi, 0x1);
	game::sub_51F2E0(ts, mv);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->ebx);
	game::sub_52EA50(ts, mv);

loc_4D3232:
	push(mv, &ts->esp, 0x18);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D3256;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->eax, 4), 0x795CB0);
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 1), 0x1);
	mov(&ts->edi, ts->eax);
	goto loc_4D3258;

loc_4D3256:
	xor_(&ts->edi, ts->edi);

loc_4D3258:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xE2D5AD1E);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_4AEA60(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, 0xE2D5AD1E);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ecx);
	game::sub_4FFA80(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x9EF01E6, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x14);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->ebx);
	inc(&ts->esi);
	game::sub_51F2E0(ts, mv);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->ebx);
	game::sub_52EA50(ts, mv);
	push(mv, &ts->esp, 0x18);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D32D1;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->eax, 4), 0x795CB0);
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 1), 0x1);
	mov(&ts->edi, ts->eax);
	goto loc_4D32D3;

loc_4D32D1:
	xor_(&ts->edi, ts->edi);

loc_4D32D3:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x69B36B15);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_4AEA60(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, 0x69B36B15);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	game::sub_4FFA80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x9EF01E6, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x14);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->ebx);
	inc(&ts->esi);
	game::sub_51F2E0(ts, mv);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->ebx);
	game::sub_52EA50(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x200);
	if (ts->eflags.zero) {
        goto loc_4D33AF;
    }
	push(mv, &ts->esp, 0x18);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D3358;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->eax, 4), 0x795CB0);
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 1), 0x1);
	mov(&ts->edi, ts->eax);
	goto loc_4D335A;

loc_4D3358:
	xor_(&ts->edi, ts->edi);

loc_4D335A:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x6353F07E);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_4AEA60(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, 0x6353F07E);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->edx);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x9EF01E6, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x14);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->ebx);
	inc(&ts->esi);
	game::sub_51F2E0(ts, mv);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->ebx);
	game::sub_52EA50(ts, mv);

loc_4D33AF:
	cmp(&ts->eflags, ts->esi, 0x7);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4D33E0;
    }
	add(&ts->esi, 0x9EF01E6);
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_4D33C0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, 0x7909A0);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x10);
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, 0x9EF01ED);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4D33C0;
    }

loc_4D33E0:
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x2C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4D33F5;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, ts->edx);
	game::sub_51EE80(ts, mv);

loc_4D33F5:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->ebx);
	game::sub_538500(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x24, 4));
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x68, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	game::sub_51F440(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->ebp + 0xF8, 4));
	game::sub_538080(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x4C);
	retn(mv, &ts->esp);
}

void sub_4D3430(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7748D4);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x58);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4D347B;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4BC300(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4D347B:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_7748C0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796110);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4D3430:
	mov(&ts->eax, 0x7E05D8);
	goto ___CxxFrameHandler;
}

void sub_4D3490(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77456B);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x14C);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	game::sub_4AE7F0(ts, mv);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, 0x4D3750);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x168, 4), 0x0);
	game::sub_58B9A0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_58E850(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4D3517;
    }
	push(mv, &ts->esp, 0x6CF6E689);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x911AB364);
	push(mv, &ts->esp, 0x911AB364);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->edi);
	game::sub_558540(ts, mv);
	add(&ts->esp, 0x1C);
	goto loc_4D3715;

loc_4D3517:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	game::sub_5851B0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, 0xBC790617);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x10);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	game::sub_583160(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, 0xBC790618);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x10);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	game::sub_5831A0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, 0xBC790619);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x10);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	game::sub_585230(ts, mv);
	sub(&ts->esp, 0x8);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 8));
	push(mv, &ts->esp, 0x794FE0);
	push(mv, &ts->esp, 0xBC79061A);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x14);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	game::sub_5852A0(ts, mv);
	sub(&ts->esp, 0x8);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 8));
	push(mv, &ts->esp, 0x794FE0);
	push(mv, &ts->esp, 0xBC79061B);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x14);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	game::sub_585320(ts, mv);
	sub(&ts->esp, 0x8);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 8));
	push(mv, &ts->esp, 0x794FE0);
	push(mv, &ts->esp, 0xBC79061C);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x5EB0ABE1);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x18);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	game::sub_5853A0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x794FD8);
	push(mv, &ts->esp, 0xBC79061E);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x5EB0ABE1);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x18);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	game::sub_5853F0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x794FD8);
	push(mv, &ts->esp, 0xBC79061F);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x3C, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, 0x4B99C928);
	push(mv, &ts->esp, ts->eax);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->al, x86::mem(0x83AA1A, 1));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x24);
	cmp(&ts->eflags, ts->al, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4D36AC;
    }
	push(mv, &ts->esp, 0xE74B7E13);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	game::sub_5831E0(ts, mv);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7904FC, 4));
	sub(&ts->esp, 0x8);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 8));
	push(mv, &ts->esp, 0x794FCC);
	push(mv, &ts->esp, 0xBC79061D);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x18);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	game::sub_583200(ts, mv);
	sub(&ts->esp, 0x8);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 8));
	push(mv, &ts->esp, 0x794FC4);
	goto loc_4D36F1;

loc_4D36AC:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	game::sub_5831E0(ts, mv);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78426C, 4));
	sub(&ts->esp, 0x8);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 8));
	push(mv, &ts->esp, 0x794FB8);
	push(mv, &ts->esp, 0xBC79061D);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x14);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	game::sub_583200(ts, mv);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x790AE4, 4));
	sub(&ts->esp, 0x8);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 8));
	push(mv, &ts->esp, 0x794FAC);

loc_4D36F1:
	push(mv, &ts->esp, 0x4B99C927);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x14);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x54, 4));
	push(mv, &ts->esp, 0x3F800000);
	mov(&ts->ecx, ts->edi);
	game::sub_4FF550(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));

loc_4D3715:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4C, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->esp + 0x15C, 4), 0xFFFFFFFF);
	game::sub_4CBAF0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x154, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_774560:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x158, 4));
	goto sub_4CBAF0;

SEH_4D3490:
	mov(&ts->eax, 0x7E0308);
	goto ___CxxFrameHandler;
}

void sub_4D3750(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x50, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D376C;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x50, 4), 0x0);

loc_4D376C:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, x86::mem(ts->esi + 0x4C, 4), 0xFFFFFFFF);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4D37AB;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x6CF6E689);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x911AB364);
	push(mv, &ts->esp, 0x911AB364);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->esi);
	game::sub_558540(ts, mv);
	add(&ts->esp, 0x1C);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4D37AB:
	mov(&ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	goto sub_4D3490;
}

void sub_4D37C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77490F);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x796128);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x3);
	if (ts->eflags.zero) {
        goto loc_4D3802;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), 0x0);

loc_4D3802:
	game::sub_58A0E0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_586950(ts, mv);
	game::sub_58F230(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_582510(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x1A4, 4));
	mov(mv, x86::mem(ts->esi + 0x380, 4), 0x78F544);
	mov(mv, x86::mem(ts->esp + 0x10, 1), 0x1);
	game::sub_4CBBA0(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x5C, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 1), 0x0);
	game::sub_4CBAF0(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	game::sub_510D40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_7748E0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

loc_7748E8:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x5C);
	goto sub_4CBAF0;

loc_7748F3:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x1A4);
	goto sub_4CBBA0;

loc_774901:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x380);
	goto sub_4957A0;

SEH_4D37C0:
	mov(&ts->eax, 0x7E0614);
	goto ___CxxFrameHandler;
}

void sub_4D3860(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0x5073EF13);
	if (ts->eflags.zero) {
        goto loc_4D3881;
    }
	cmp(&ts->eflags, ts->eax, 0xD9FEEC59);
	if (ts->eflags.zero) {
        goto loc_4D3879;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	retn(mv, &ts->esp, 0x14);

loc_4D3879:
	mov(&ts->eax, 0x5);
	retn(mv, &ts->esp, 0x14);

loc_4D3881:
	mov(&ts->eax, 0x4);
	retn(mv, &ts->esp, 0x14);
}

void sub_4D3890(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xC, 4));
	cmp(&ts->eflags, ts->esi, 0x1);
	mov(&ts->ebp, ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4D39A6;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	cmp(&ts->eflags, ts->eax, 0xA);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_4D39A6;
    }
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_4D39A6;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);

loc_4D38B8:
	push(mv, &ts->esp, 0x38);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D38DC;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 1), 0x1);
	mov(mv, x86::mem(ts->eax, 4), 0x795CB0);
	mov(&ts->edi, ts->eax);
	goto loc_4D38DE;

loc_4D38DC:
	xor_(&ts->edi, ts->edi);

loc_4D38DE:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x783FE5);
	mov(&ts->ecx, ts->edi);
	game::sub_4AEA60(ts, mv);
	lea(mv, &ts->ebx, x86::mem(ts->ebp + 0x1A4, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->ebx);
	game::sub_51F2E0(ts, mv);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->ebx);
	game::sub_5434D0(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, 0x7909A0);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x794E6C);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x4, 4));
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x7909A0);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x796148);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x4, 4));
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x7909A0);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x79012C);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0xC);
	mov(&ts->edi, 0x1);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_4D3970:
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, 0x7909A0);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x796138);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0xC);
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, 0x3);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4D3970;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4D38B8;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);

loc_4D39A6:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x8);
}

void sub_4D39B0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x50);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	game::sub_58F230(ts, mv);
	mov(&ts->ebx, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x1A4, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ebx);
	game::sub_51F4E0(ts, mv);
	xor_(&ts->edi, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x370, 4), ts->edi);
	game::sub_4A06D0(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	mov(&ts->edi, 0x1);
	goto loc_4D39F0;

loc_4D39F0:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x374, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	add(&ts->eax, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebx);
	game::sub_586C40(ts, mv);
	mov(&ts->ebp, ts->eax);
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_4D3B87;
    }
	push(mv, &ts->esp, 0x38);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D3A38;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 1), 0x1);
	mov(mv, x86::mem(ts->eax, 4), 0x795CB0);
	mov(&ts->ebx, ts->eax);
	goto loc_4D3A3A;

loc_4D3A38:
	xor_(&ts->ebx, ts->ebx);

loc_4D3A3A:
	xor_(&ts->eax, ts->eax);
	push(mv, &ts->esp, 0x794E68);
	push(mv, &ts->esp, 0x10);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x38, 4));
	mov(mv, x86::mem(ts->esp + 0x44, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x40, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x3C, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x38, 4), ts->eax);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->ebp + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_7425D0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x794E6C);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->ecx);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x10);
	lea(mv, &ts->eax, x86::mem(ts->ebp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x796148);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->eax);
	game::sub_50B990(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x28, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x79012C);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->eax);
	game::sub_50B990(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x28, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F744);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x58, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	add(&ts->esp, 0x20);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x48, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->ebx);
	game::sub_4AEA60(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	lea(mv, &ts->ecx, x86::mem(ts->ebx + 0x18, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x34, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_4A0540(ts, mv);
	lea(mv, &ts->ebp, x86::mem(ts->esi + 0x1A4, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->ebp);
	game::sub_51F2E0(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->ebp);
	game::sub_52EA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1A0, 4));
	inc(&ts->eax);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, 0x3);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x2A8, 4));
	game::sub_538080(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x370, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	inc(&ts->ebx);
	inc(&ts->edx);
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, 0xA);
	mov(mv, x86::mem(ts->esi + 0x370, 4), ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4D39F0;
    }

loc_4D3B87:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1A0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x2A8, 4));
	push(mv, &ts->esp, 0x0);
	if (!ts->eflags.zero) {
        goto loc_4D3B9D;
    }
	push(mv, &ts->esp, 0x1);
	goto loc_4D3B9F;

loc_4D3B9D:
	push(mv, &ts->esp, 0x2);

loc_4D3B9F:
	game::sub_50D820(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	inc(&ts->ecx);
	push(mv, &ts->esp, 0x9);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_4D3890(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x54, 4));
	xor_(&ts->ebp, ts->ebp);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->ebx);
	game::sub_586C40(ts, mv);
	mov(&ts->edi, ts->eax);
	cmp(&ts->eflags, ts->edi, ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebp);
	if (ts->eflags.zero) {
        goto loc_4D3D10;
    }
	push(mv, &ts->esp, 0x794E68);
	push(mv, &ts->esp, 0x10);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_7425D0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x4, 4));
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, 0x79016C);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x10);
	lea(mv, &ts->eax, x86::mem(ts->edi + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, 0x796194);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, 0x796184);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0xA);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_4A0540(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, 0x79016C);
	push(mv, &ts->esp, ts->eax);
	game::sub_5426C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x50, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_58CF60(ts, mv);
	add(&ts->esp, 0x18);
	cmp(&ts->eflags, ts->al, 0x9);
	if (!ts->eflags.zero) {
        goto loc_4D3CC1;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x380, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x380, 4));
	push(mv, &ts->esp, 0x0);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79617C);
	push(mv, &ts->esp, 0x79616C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_5426C0(ts, mv);
	add(&ts->esp, 0x10);
	goto loc_4D3DEF;

loc_4D3CC1:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x380, 4));
	lea(mv, &ts->ebp, x86::mem(ts->esi + 0x380, 4));
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->ebp);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FEEC);
	push(mv, &ts->esp, 0x79616C);
	push(mv, &ts->esp, ts->eax);
	game::sub_5426C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x50, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_58CF90(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	add(&ts->esp, 0x14);
	mov(&ts->ecx, ts->ebp);
	game::sub_4FF550(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp, 4));
	mov(&ts->ecx, ts->ebp);
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));
	goto loc_4D3DEF;

loc_4D3D10:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x794D44);
	push(mv, &ts->esp, 0x79016C);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0xC);
	mov(&ts->ecx, 0x850080);
	game::sub_5031F0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x796194);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, 0x796184);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0xA);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_4A0540(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, 0x79016C);
	push(mv, &ts->esp, ts->edx);
	game::sub_5426C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x380, 4));
	add(&ts->esp, 0x10);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x380, 4));
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FEEC);
	push(mv, &ts->esp, 0x79616C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_5426C0(ts, mv);
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x796158);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x20);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->edi);
	game::sub_4FF550(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));

loc_4D3DEF:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	game::sub_586CA0(ts, mv);
	mov(&ts->ebp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x370, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D3E46;
    }
	mov(mv, &ts->al, x86::mem(ts->esp + 0x64, 1));
	test(&ts->eflags, ts->al, ts->al);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x1A4, 4));
	if (ts->eflags.zero) {
        goto loc_4D3E26;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x378, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_538530(ts, mv);
	goto loc_4D3E2F;

loc_4D3E26:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->edi);
	game::sub_543470(ts, mv);

loc_4D3E2F:
	mov(mv, &ts->edi, x86::mem(ts->edi + 0x2C, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4D3E46;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x2C, 4));
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51EE80(ts, mv);

loc_4D3E46:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x37C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x250, 4));
	game::sub_538080(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x374, 4));
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x54, 4));
	add(&ts->ecx, ts->edi);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->ebx);
	game::sub_586C40(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D3E7F;
    }
	inc(mv, x86::mem(ts->esi + 0x370, 4));

loc_4D3E7F:
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x1A4, 4));
	game::sub_538500(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x37C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x300, 4));
	game::sub_538080(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x50);
	retn(mv, &ts->esp, 0x4);
}

void sub_4D3EB0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->esi + 0x4C, 4), 0x0);
	mov(mv, x86::mem(ts->esi + 0x58, 4), 0xFFFFFFFF);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xC, 4));
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4D3EE5;
    }
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_4D39B0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4D3EE5:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x6CF6E689);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x911AB364);
	push(mv, &ts->esp, 0x911AB364);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->esi);
	game::sub_558540(ts, mv);
	add(&ts->esp, 0x1C);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4D3F20(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x24);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x78FEEC);
	push(mv, &ts->esp, 0x79616C);
	push(mv, &ts->esp, ts->eax);
	game::sub_5426C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0xA1F55FBF);
	push(mv, &ts->esp, 0x69B86FF6);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->ebx, 0x1);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x9);
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_4D3F70:
	push(mv, &ts->esp, 0x34);
	game::j__malloc(ts, mv);
	xor_(&ts->edi, ts->edi);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4D3FB1;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->eax, 4), 0x79B9D4);
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x28, 1), 0x1);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), 0x78F228);
	mov(mv, x86::mem(ts->eax + 0x30, 4), 0x78F21C);
	mov(&ts->edi, ts->eax);

loc_4D3FB1:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x7961B8);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	game::sub_537A10(ts, mv);
	push(mv, &ts->esp, 0x10);
	mov(&ts->ebp, ts->eax);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x20);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D3FF5;
    }
	mov(mv, x86::mem(ts->eax, 4), 0x790C2C);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ebp);
	add(&ts->eax, 0x4);
	goto loc_4D3FF7;

loc_4D3FF5:
	xor_(&ts->eax, ts->eax);

loc_4D3FF7:
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x10, 4));
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0xC, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	push(mv, &ts->esp, 0x7961A4);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	game::sub_5379C0(ts, mv);
	add(&ts->esp, 0x1C);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x1A4, 4));
	mov(mv, x86::mem(ts->edi + 0x14, 4), ts->eax);
	game::sub_52E770(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	inc(&ts->ebx);
	dec(&ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4D3F70;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xCF6F0439);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A60(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x358, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xABA93D3F);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A60(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x35C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x444969FD);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A60(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x360, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x444969FE);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A60(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x364, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x7DDBCA44);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A60(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x368, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x7DDBCA45);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A60(ts, mv);
	add(&ts->esp, 0x30);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x36C, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x24);
	retn(mv, &ts->esp);
}

void sub_4D40E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x370, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D422C;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1D0, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x1A4, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51F440(ts, mv);
	mov(&ts->ebp, ts->eax);
	game::sub_58F230(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_586CA0(ts, mv);
	mov(&ts->ebx, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4D4189;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x37C, 4));
	dec(&ts->edx);
	mov(&ts->eax, 0x1);
	mov(&ts->ecx, ts->edx);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x37C, 4), ts->edx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4D414C;
    }
	mov(mv, x86::mem(ts->esi + 0x37C, 4), ts->eax);

loc_4D414C:
	dec(&ts->ebp);
	cmp(&ts->eflags, ts->ebp, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4D4180;
    }
	dec(mv, x86::mem(ts->esi + 0x374, 4));
	if (!ts->eflags.sign) {
        goto loc_4D4163;
    }
	mov(mv, x86::mem(ts->esi + 0x374, 4), 0x0);

loc_4D4163:
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_4D39B0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_538530(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);

loc_4D4180:
	mov(&ts->ecx, ts->edi);
	game::sub_54EB60(ts, mv);
	goto loc_4D41E1;

loc_4D4189:
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4D41E1;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x37C, 4));
	inc(&ts->ecx);
	mov(&ts->eax, ts->ecx);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x37C, 4), ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4D41A7;
    }
	lea(mv, &ts->eax, x86::mem(ts->ebx - 0x1, 4));
	mov(mv, x86::mem(ts->esi + 0x37C, 4), ts->eax);

loc_4D41A7:
	inc(&ts->ebp);
	cmp(&ts->eflags, ts->ebp, 0x9);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4D41DA;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x370, 4), 0x9);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4D41E1;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x374, 4));
	inc(&ts->edx);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x374, 4), ts->edx);
	game::sub_4D39B0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_538530(ts, mv);
	goto loc_4D41E1;

loc_4D41DA:
	mov(&ts->ecx, ts->edi);
	game::sub_54EB40(ts, mv);

loc_4D41E1:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x2C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4D41F6;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, ts->edx);
	game::sub_51EE80(ts, mv);

loc_4D41F6:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->edi);
	game::sub_538500(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x37C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x250, 4));
	game::sub_538080(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x37C, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x300, 4));
	game::sub_538080(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);

loc_4D422C:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);
}

void sub_4D4347(x86::thread_state* ts, x86::memory_view* mv) {
	inc(&ts->edx);
	mov(mv, x86::mem(ts->esi + 0x78, 4), 0xD95B07DB);
	game::sub_4A0920(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x42AA46C0);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A60(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x8C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x42AA46C1);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A60(ts, mv);
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x4BCC70);
	mov(mv, x86::mem(ts->esi + 0x90, 4), ts->eax);
	game::sub_58F230(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_58C990(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x88, 4), ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4D43C8;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x6CF6E689);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x911AB364);
	push(mv, &ts->esp, 0x911AB364);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->edi);
	game::sub_558540(ts, mv);
	add(&ts->esp, 0x1C);
	goto loc_4D441D;

loc_4D43C8:
	if (!ts->eflags.zero) {
        goto loc_4D43D3;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_4BCA10(ts, mv);
	goto loc_4D4400;

loc_4D43D3:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4D4400;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xEC3905C1);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xCA4CE1);
	push(mv, &ts->esp, 0x541389E5);
	push(mv, &ts->esp, 0x7902C8);
	push(mv, &ts->esp, ts->edi);
	game::sub_5585E0(ts, mv);
	add(&ts->esp, 0x18);
	mov(mv, x86::mem(ts->esi + 0x7C, 4), ts->eax);

loc_4D4400:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x7961C8);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x10);

loc_4D441D:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);
}

void sub_4D4440(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0x9120409E);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4D44B5;
    }
	if (ts->eflags.zero) {
        goto loc_4D44A0;
    }
	cmp(&ts->eflags, ts->eax, 0xCA4CE1);
	if (ts->eflags.zero) {
        goto loc_4D4479;
    }
	cmp(&ts->eflags, ts->eax, 0x911AB364);
	if (!ts->eflags.zero) {
        goto loc_4D454E;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x790070);
	push(mv, &ts->esp, ts->eax);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4D4479:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x7C, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_540A60(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x790070);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esi + 0x7C, 4), 0x0);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4D44A0:
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x84, 4), 0x3);
	game::sub_4BCA10(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4D44B5:
	cmp(&ts->eflags, ts->eax, 0x9803F6E2);
	if (ts->eflags.zero) {
        goto loc_4D44DC;
    }
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_4D454E;
    }
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x84, 4), 0x2);
	game::sub_4BCA10(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4D44DC:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_52D100(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4D4517;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x9120409E);
	game::sub_55DDA0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8C, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F568);
	push(mv, &ts->esp, ts->edx);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0x14);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4D4517:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x90, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_52D100(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4D454E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xB5971BF1);
	game::sub_55DDA0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x90, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F568);
	push(mv, &ts->esp, ts->edx);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0x14);

loc_4D454E:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);
}

void sub_4D4560(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77498C);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->esi);
	game::sub_552780(ts, mv);
	xor_(&ts->ebx, ts->ebx);
	push(mv, &ts->esp, 0x54);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi, 4), 0x796200);
	mov(mv, x86::mem(ts->esi + 0x14C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x150, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x154, 4), ts->ebx);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->edi);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x18, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4D45F5;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->edi, 4), 0x794E90);
	game::sub_4A0B80(ts, mv);
	goto loc_4D45F7;

loc_4D45F5:
	xor_(&ts->edi, ts->edi);

loc_4D45F7:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 1), ts->bl);
	game::sub_54F170(ts, mv);
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->edi);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x18, 1), 0x2);
	if (ts->eflags.zero) {
        goto loc_4D464B;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x791148);
	goto loc_4D464D;

loc_4D464B:
	xor_(&ts->edi, ts->edi);

loc_4D464D:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 1), ts->bl);
	game::sub_54F170(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x200);
	if (!ts->eflags.zero) {
        goto loc_4D466F;
    }
	mov(mv, x86::mem(0x850098, 1), ts->bl);
	goto loc_4D46CB;

loc_4D466F:
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->edi);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x18, 1), 0x3);
	if (ts->eflags.zero) {
        goto loc_4D46B5;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x791070);
	goto loc_4D46B7;

loc_4D46B5:
	xor_(&ts->edi, ts->edi);

loc_4D46B7:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 1), ts->bl);
	game::sub_54F170(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x154, 4), ts->eax);

loc_4D46CB:
	push(mv, &ts->esp, 0x54);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->edi);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x18, 1), 0x4);
	if (ts->eflags.zero) {
        goto loc_4D4711;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x791190);
	goto loc_4D4713;

loc_4D4711:
	xor_(&ts->edi, ts->edi);

loc_4D4713:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 1), ts->bl);
	game::sub_54F170(ts, mv);
	push(mv, &ts->esp, 0x54);
	mov(mv, x86::mem(ts->esi + 0x150, 4), ts->eax);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->edi);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x18, 1), 0x5);
	if (ts->eflags.zero) {
        goto loc_4D476D;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E230(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x791100);
	goto loc_4D476F;

loc_4D476D:
	xor_(&ts->edi, ts->edi);

loc_4D476F:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x20, 1), ts->bl);
	game::sub_54F170(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	game::sub_539650(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xB18A5DE4);
	push(mv, &ts->esp, 0x7961F0);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_774920:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto ??1strstreambuf@@UAE@XZ;

loc_774928:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7961DC);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_77493C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x791674);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774950:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7916C0);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774964:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x791660);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774978:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x791690);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4D4560:
	mov(&ts->eax, 0x7E0660);
	goto ___CxxFrameHandler;
}

void stdiobuf___stdiobuf_void_(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776E28);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x796200);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4D4808;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x14C, 4), 0x0);

loc_4D4808:
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	game::strstreambuf___strstreambuf_void_(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_776E20:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto ??1strstreambuf@@UAE@XZ;

SEH_4FBDC0:
	mov(&ts->eax, 0x7E02C0);
	goto ___CxxFrameHandler;
}

void std__ios_base___ios_base_void_(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x775E81);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x796248);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x2);
	game::sub_582B60(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xFC, 4));
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4D487F;
    }
	game::sub_582B60(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xF8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_73F0F0(ts, mv);
	add(&ts->esp, 0x4);

loc_4D487F:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D4896;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), 0x0);

loc_4D4896:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x8384E0);
	game::sub_51CE80(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x7F44B4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	game::sub_51CE80(ts, mv);
	push(mv, &ts->esp, 0x796230);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x14);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D48CF;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x796230);
	game::sub_51CE80(ts, mv);
	add(&ts->esp, 0x8);

loc_4D48CF:
	push(mv, &ts->esp, 0x796214);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D48EF;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x796214);
	game::sub_51CE80(ts, mv);
	add(&ts->esp, 0x8);

loc_4D48EF:
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	mov(mv, x86::mem(0x838520, 1), 0x0);
	mov(mv, x86::mem(0x838528, 1), 0x1);
	game::sub_54E6A0(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x128, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 1), 0x1);
	game::sub_4956A0(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x64, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 1), 0x0);
	game::sub_4CBBA0(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	game::sub_510D40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_775E60:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

loc_775E68:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x64);
	goto sub_4CBBA0;

loc_775E73:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x128);
	goto sub_4956A0;

SEH_4E65B0:
	mov(&ts->eax, 0x7E0694);
	goto ___CxxFrameHandler;
}

void sub_4D4952(x86::thread_state* ts, x86::memory_view* mv) {
	and_(&ts->al, 0x4);
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4D4991;
    }
	if (ts->eflags.zero) {
        goto loc_4D4989;
    }
	cmp(&ts->eflags, ts->eax, 0x5073EF13);
	if (ts->eflags.zero) {
        goto loc_4D497A;
    }
	cmp(&ts->eflags, ts->eax, 0x911AB364);
	if (ts->eflags.zero) {
        goto loc_4D4984;
    }
	cmp(&ts->eflags, ts->eax, 0x9120409E);
	if (!ts->eflags.zero) {
        goto loc_4D499F;
    }
	mov(&ts->eax, 0x4);
	retn(mv, &ts->esp, 0x14);

loc_4D497A:
	push(mv, &ts->esp, 0x8);
	game::sub_50D180(ts, mv);
	add(&ts->esp, 0x4);

loc_4D4984:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp, 0x14);

loc_4D4989:
	mov(&ts->eax, 0x5);
	retn(mv, &ts->esp, 0x14);

loc_4D4991:
	cmp(&ts->eflags, ts->eax, 0xC519BFC0);
	if (ts->eflags.zero) {
        goto loc_4D49BF;
    }
	cmp(&ts->eflags, ts->eax, 0xD9FEEC59);
	if (ts->eflags.zero) {
        goto loc_4D49B0;
    }

loc_4D499F:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_50D1D0(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp, 0x14);

loc_4D49B0:
	push(mv, &ts->esp, 0x9);
	game::sub_50D180(ts, mv);
	add(&ts->esp, 0x4);
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp, 0x14);

loc_4D49BF:
	mov(&ts->eax, 0x8);
	retn(mv, &ts->esp, 0x14);
}

void sub_4D49D0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x280);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebp, ts->ecx);
	game::sub_582B60(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xF8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_73EFF0(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esp + 0x298, 1));
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4D4A1D;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x90, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4D4A13;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x30, 4));
	push(mv, &ts->esp, 0x78F21C);
	push(mv, &ts->esp, ts->edx);
	game::sub_51EE80(ts, mv);

loc_4D4A13:
	mov(mv, x86::mem(ts->ebp + 0x120, 4), 0x0);

loc_4D4A1D:
	mov(&ts->ecx, ts->ebp);
	game::sub_4A1300(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->ebp + 0x64, 4));
	game::sub_51F4E0(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x120, 4));
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->esi, 0x64);
	mov(mv, x86::mem(ts->ebp + 0x11C, 4), ts->eax);
	mov(mv, x86::mem(ts->ebp + 0x118, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->esi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4D4B14;
    }
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_4D4A50:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebp);
	game::sub_4A10B0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x6C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D4B14;
    }
	push(mv, &ts->esp, 0x3C);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D4A93;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 1), 0x1);
	mov(mv, x86::mem(ts->eax, 4), 0x795CB0);
	mov(mv, x86::mem(ts->eax + 0x38, 4), 0xFFFFFFFF);
	mov(&ts->ebx, ts->eax);
	goto loc_4D4A95;

loc_4D4A93:
	xor_(&ts->ebx, ts->ebx);

loc_4D4A95:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x78, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebx);
	game::sub_4AEA60(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x70, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->ebx + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ebx + 0x38, 4), ts->esi);
	game::sub_43DBD0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x11C, 4));
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, 0xB);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4D4AE6;
    }
	sub(&ts->esp, 0x27C);
	mov(&ts->edi, ts->esp);
	mov(&ts->ecx, 0x9F);
	lea(mv, &ts->esi, x86::mem(ts->esp + 0x290, 4));
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebp);
	game::sub_4A1380(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x10, 4));

loc_4D4AE6:
	lea(mv, &ts->edi, x86::mem(ts->ebp + 0x64, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->edi);
	game::sub_51F2E0(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->edi);
	game::sub_52EA50(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x11C, 4));
	inc(&ts->edx);
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, 0x64);
	mov(mv, x86::mem(ts->ebp + 0x11C, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->esi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4D4A50;
    }

loc_4D4B14:
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x11C, 4));
	cmp(&ts->eflags, ts->edi, 0xB);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4D4BC8;
    }
	inc(&ts->edi);

loc_4D4B24:
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x78FEBC);
	game::sub_50B9C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	push(mv, &ts->esp, 0x3C);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x18);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D4B6A;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 1), 0x1);
	mov(mv, x86::mem(ts->eax, 4), 0x795CB0);
	mov(mv, x86::mem(ts->eax + 0x38, 4), 0xFFFFFFFF);
	mov(&ts->esi, ts->eax);
	goto loc_4D4B6C;

loc_4D4B6A:
	xor_(&ts->esi, ts->esi);

loc_4D4B6C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x783FE5);
	mov(&ts->ecx, ts->esi);
	game::sub_4AEA60(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x783FE5);
	mov(&ts->ecx, ts->esi);
	game::sub_4AEA60(ts, mv);
	lea(mv, &ts->ebx, x86::mem(ts->ebp + 0x64, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->ebx);
	game::sub_51F2E0(ts, mv);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->ebx);
	game::sub_5434D0(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x790258);
	game::sub_50B9C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FC44);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x18);
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, 0xC);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4D4B24;
    }

loc_4D4BC8:
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, 0x790B94);
	push(mv, &ts->esp, 0x79028C);
	push(mv, &ts->esp, ts->edx);
	game::sub_542600(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x11C, 4));
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D4C50;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x294, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_4D4C50;
    }
	lea(mv, &ts->esi, x86::mem(ts->ebp + 0x64, 4));
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_543470(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x2C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4D4C13;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, ts->eax);
	game::sub_51EE80(ts, mv);

loc_4D4C13:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x88, 4));
	add(&ts->eax, 0x18);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D4C50;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_582B60(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_582BB0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_49E870(ts, mv);
	sub(&ts->esp, 0x274);
	mov(&ts->esi, ts->eax);
	mov(&ts->edi, ts->esp);
	mov(&ts->ecx, 0x9F);
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->ebp);
	game::sub_4A15F0(ts, mv);

loc_4D4C50:
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->ebp + 0x64, 4));
	game::sub_538500(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->ebp + 0x110, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4D4CAE;
    }
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, 0x79024C);
	game::sub_50B9C0(ts, mv);
	push(mv, &ts->esp, 0x79627C);
	mov(&ts->edi, ts->eax);
	game::sub_50B9C0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_537A60(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C990(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, 0x79627C);
	game::sub_50B9C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0x18);

loc_4D4CAE:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x11C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D4CD6;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FFD0);
	push(mv, &ts->esp, 0x796268);
	push(mv, &ts->esp, ts->edx);
	game::sub_5426C0(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FFD0);
	goto loc_4D4D25;

loc_4D4CD6:
	xor_(&ts->eax, ts->eax);
	goto loc_4D4CE0;

loc_4D4CE0:
	lea(mv, &ts->esi, x86::mem(ts->eax + 0x1, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x790258);
	game::sub_50B9C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FC44);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	mov(&ts->eax, ts->esi);
	add(&ts->esp, 0x18);
	cmp(&ts->eflags, ts->eax, 0xB);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4D4CE0;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FC44);
	push(mv, &ts->esp, 0x796268);
	push(mv, &ts->esp, ts->edx);
	game::sub_5426C0(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FC44);

loc_4D4D25:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, 0x796258);
	push(mv, &ts->esp, ts->eax);
	game::sub_5426C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x54, 4));
	add(&ts->esp, 0x20);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x280);
	retn(mv, &ts->esp, 0x4);
}

void sub_4D4D50(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x24);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->edi, ts->edi);
	mov(&ts->esi, ts->ecx);
	xor_(&ts->ebx, ts->ebx);
	goto loc_4D4D61;

loc_4D4D5F:
	xor_(&ts->edi, ts->edi);

loc_4D4D61:
	push(mv, &ts->esp, 0x38);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4D4DA0;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x28, 1), 0x1);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), 0x78F228);
	mov(mv, x86::mem(ts->eax + 0x30, 4), 0x78F21C);
	mov(mv, x86::mem(ts->eax, 4), 0x79B9D4);
	mov(&ts->edi, ts->eax);

loc_4D4DA0:
	lea(mv, &ts->ebp, x86::mem(ts->ebx + 0x1, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x790200);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ecx);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	push(mv, &ts->esp, 0x10);
	mov(mv, x86::mem(ts->esp + 0x30, 4), ts->eax);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x20);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D4DF5;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->eax, 4), 0x790C2C);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ecx);
	add(&ts->eax, 0x4);
	goto loc_4D4DF7;

loc_4D4DF5:
	xor_(&ts->eax, ts->eax);

loc_4D4DF7:
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x10, 4));
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0xC, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	push(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	push(mv, &ts->esp, 0x796288);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->eax);
	game::sub_505450(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_5379C0(ts, mv);
	add(&ts->esp, 0x1C);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x64, 4));
	mov(mv, x86::mem(ts->edi + 0x14, 4), ts->eax);
	game::sub_52E770(ts, mv);
	mov(mv, x86::mem(ts->edi + 0x34, 4), ts->ebx);
	mov(&ts->ebx, ts->ebp);
	cmp(&ts->eflags, ts->ebx, 0xA);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4D4D5F;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xCF6F0439);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A60(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x1A8, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xABA93D3F);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A60(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x1AC, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xFA2CA290);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A60(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x1B0, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x69BA0836);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A60(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x1B4, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x69BA0837);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A60(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x1B8, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x69BA0838);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A60(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x1BC, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x444969FD);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A60(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x1A0, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x444969FE);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A60(ts, mv);
	add(&ts->esp, 0x40);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x1A4, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x24);
	retn(mv, &ts->esp);
}

void sub_4D4F00(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x27C);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x11C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4D4FA7;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x28C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4D4F2E;
    }
	lea(mv, &ts->ecx, x86::mem(ts->ebx + 0x64, 4));
	game::sub_54EB60(ts, mv);
	goto loc_4D4F38;

loc_4D4F2E:
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4D4F38;
    }
	lea(mv, &ts->ecx, x86::mem(ts->ebx + 0x64, 4));
	game::sub_54EB40(ts, mv);

loc_4D4F38:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x88, 4));
	add(&ts->eax, 0x18);
	push(mv, &ts->esp, ts->eax);
	game::sub_582B60(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_582BB0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_49E870(ts, mv);
	sub(&ts->esp, 0x274);
	mov(&ts->esi, ts->eax);
	mov(&ts->edi, ts->esp);
	mov(&ts->ecx, 0x9F);
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->ebx);
	game::sub_4A15F0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x90, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	lea(mv, &ts->esi, x86::mem(ts->ebx + 0x64, 4));
	if (ts->eflags.zero) {
        goto loc_4D4F8C;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, ts->edx);
	game::sub_51EE80(ts, mv);

loc_4D4F8C:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_538500(ts, mv);
	mov(&ts->ecx, ts->ebx);
	game::sub_4BCF00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_51F440(ts, mv);

loc_4D4FA7:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x27C);
	retn(mv, &ts->esp, 0x4);
}

void sub_4D4FC0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	sub(&ts->esp, 0x504);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x11C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4D5062;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x88, 4));
	add(&ts->eax, 0x18);
	push(mv, &ts->esp, ts->eax);
	game::sub_582B60(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_582BB0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x298, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_49E870(ts, mv);
	mov(&ts->esi, ts->eax);
	mov(&ts->ecx, 0x9F);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x18, 4));
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x70, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D5062;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x38, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D5031;
    }
	mov(&ts->ecx, ts->ebx);
	game::sub_4BCFF0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_4D5031:
	game::sub_582B60(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xF8, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x6C, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_73F050(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D505B;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_49E810(ts, mv);
	add(&ts->esp, 0x8);

loc_4D505B:
	mov(&ts->ecx, ts->ebx);
	game::sub_4BCF00(ts, mv);

loc_4D5062:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_4D5070(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7749B4);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x58);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4D50BB;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4BD310(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4D50BB:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_7749A0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796298);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4D5070:
	mov(&ts->eax, 0x7E06B8);
	goto ___CxxFrameHandler;
}

void sub_4D50D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7749D3);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x7962AC);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x1);
	mov(mv, x86::mem(ts->esi + 0x10E, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4D5119;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), 0x0);

loc_4D5119:
	game::sub_582B60(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0xFC, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_4D514A;
    }
	game::sub_582B60(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xF8, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4D514A;
    }
	game::sub_582B60(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xF8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_73EA00(ts, mv);
	add(&ts->esp, 0x4);

loc_4D514A:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x7902A0);
	game::sub_51CE80(ts, mv);
	add(&ts->esp, 0x8);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 1), 0x0);
	game::sub_4CBBA0(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	game::sub_510D40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_7749C0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

loc_7749C8:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x54);
	goto sub_4CBBA0;

SEH_4F2350:
	mov(&ts->eax, 0x7E1BA8);
	goto ___CxxFrameHandler;
}

void sub_4D5190(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	sub(&ts->esp, 0x208);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x78, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x18, 4));
	cmp(&ts->eflags, ts->eax, 0x5);
	push(mv, &ts->esp, ts->edi);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4D51AF;
    }
	jmp(x86::mem(0x4D5474, 4));

loc_4D51B6:
	test(mv, &ts->eflags, x86::mem(0x836008, 4), 0x400000);
	if (!ts->eflags.zero) {
        goto loc_4D51D8;
    }
	mov(mv, &ts->eax, x86::mem(0x835FBC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4D51D8;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_4BD730(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_4D51D8:
	mov(&ts->ecx, ts->esi);
	game::sub_4A1C70(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_4D51E5:
	mov(mv, &ts->eax, x86::mem(0x83A9C8, 4));
	mov(mv, &ts->ecx, x86::mem(0x8651AC, 4));
	sub(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ecx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7F942C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto def_4D51AF;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x7962E4);
	game::sub_555EB0(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_4D522F:
	mov(mv, &ts->eax, x86::mem(0x835FD0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D52BC;
    }
	game::sub_582B60(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x5A4, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_4D5288;
    }
	mov(mv, &ts->eax, x86::mem(0x7F44FC, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4D5288;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x713B9C46);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->esi);
	game::sub_558540(ts, mv);
	add(&ts->esp, 0x1C);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_4D5288:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xCD787311);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x5);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->esi);
	game::sub_558750(ts, mv);
	add(&ts->esp, 0x28);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_4D52BC:
	mov(mv, &ts->eax, x86::mem(0x835FD8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D52D2;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_4BD690(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_4D52D2:
	mov(mv, &ts->eax, x86::mem(0x835FD4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D52E8;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_4A1B50(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_4D52E8:
	mov(mv, &ts->eax, x86::mem(0x835FE8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto def_4D51AF;
    }
	push(mv, &ts->esp, 0x836014);
	mov(&ts->ecx, ts->esi);
	game::sub_4BD3F0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_4D5307:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x7962D0);
	game::sub_555EB0(ts, mv);
	add(&ts->esp, 0x10);
	mov(mv, x86::mem(ts->esi + 0x10D, 1), 0x1);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_4D532C:
	mov(mv, &ts->eax, x86::mem(0x835FE8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4D53C8;
    }
	mov(mv, &ts->eax, x86::mem(0x835FD4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D5382;
    }
	game::sub_582B60(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xF8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x4AE670);
	push(mv, &ts->esp, 0x3);
	push(mv, &ts->esp, 0x836014);
	push(mv, &ts->esp, ts->eax);
	game::sub_73FAD0(ts, mv);
	add(&ts->esp, 0x14);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4D5452;
    }
	push(mv, &ts->esp, 0x836014);
	push(mv, &ts->esp, 0x78300EBF);
	mov(&ts->ecx, ts->esi);
	game::sub_4A1700(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_4D5382:
	mov(mv, x86::mem(ts->esp + 0x10, 1), 0x0);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x7F);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x11, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	push(mv, &ts->esp, 0x836014);
	push(mv, &ts->esp, 0x8D0A8371);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, 0x200);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C960(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x8);
	goto loc_4D540C;

loc_4D53C8:
	mov(mv, x86::mem(ts->esp + 0x10, 1), 0x0);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x7F);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x11, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	push(mv, &ts->esp, 0x836014);
	push(mv, &ts->esp, 0x121F05D4);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, 0x200);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C960(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x9);

loc_4D540C:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->ecx);
	game::sub_558750(ts, mv);
	add(&ts->esp, 0x34);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_4D542D:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x7962BC);
	game::sub_555EB0(ts, mv);
	add(&ts->esp, 0x10);
	mov(mv, x86::mem(ts->esi + 0x10D, 1), 0x1);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_4D5452:
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x10E, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_4D5461;
    }
	cmp(&ts->eflags, ts->eax, 0xFFFFFF94);
	if (ts->eflags.zero) {
        goto def_4D51AF;
    }

loc_4D5461:
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_49E810(ts, mv);
	add(&ts->esp, 0x8);

def_4D51AF:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_4D5490(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x4C);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebp, ts->ecx);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x1C, 1), 0x0);
	mov(&ts->ecx, 0xF);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x1D, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	push(mv, &ts->esp, 0x7909A0);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, 0x40);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x80, 4));
	lea(mv, &ts->ebx, x86::mem(ts->ebp + 0x54, 4));
	xor_(&ts->esi, ts->esi);
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->ecx, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4D54DF;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x30, 4));
	push(mv, &ts->esp, 0x78F21C);
	push(mv, &ts->esp, ts->edx);
	game::sub_51EE80(ts, mv);

loc_4D54DF:
	mov(&ts->ecx, ts->ebx);
	game::sub_51F4E0(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->esi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->esi);
	mov(&ts->edi, ts->edi);

loc_4D54F0:
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x1, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x796328);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->eax);
	game::sub_50B9C0(ts, mv);
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->edi, 0x5);
	mov(&ts->esi, ts->eax);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4D5514;
    }
	jmp(x86::mem(0x4D5908, 4));

loc_4D551B:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebp);
	game::sub_4A1D00(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto def_4D5514;
    }

loc_4D552F:
	push(mv, &ts->esp, 0x1C);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D5810;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 1), 0x1);
	mov(mv, x86::mem(ts->eax, 4), 0x795CB0);
	mov(mv, x86::mem(ts->eax + 0x18, 4), 0xFFFFFFFF);
	mov(&ts->esi, ts->eax);
	goto loc_4D5812;

loc_4D5561:
	mov(mv, &ts->eax, x86::mem(0x835FE8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D5598;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, 0x79631C);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537B80(ts, mv);
	push(mv, &ts->esp, 0x7087CE45);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, 0x40);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C960(ts, mv);
	add(&ts->esp, 0x1C);
	goto def_4D5514;

loc_4D5598:
	mov(mv, &ts->eax, x86::mem(0x836000, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->eax, x86::mem(0x835FE0, 4));
	if (ts->eflags.zero) {
        goto loc_4D560F;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x4, 4));
	if (ts->eflags.zero) {
        goto loc_4D55DE;
    }
	push(mv, &ts->esp, 0x2C248265);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	push(mv, &ts->esp, 0x2C248265);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x34, 4));
	push(mv, &ts->esp, 0x40);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C960(ts, mv);
	add(&ts->esp, 0x20);
	goto loc_4D552F;

loc_4D55DE:
	push(mv, &ts->esp, 0x748BC8B9);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	push(mv, &ts->esp, 0x748BC8B9);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x34, 4));
	push(mv, &ts->esp, 0x40);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	add(&ts->esp, 0x20);
	goto loc_4D552F;

loc_4D560F:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D5641;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, 0x796308);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edx);
	game::sub_537B80(ts, mv);
	push(mv, &ts->esp, 0xB8ED90F3);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, 0x40);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C960(ts, mv);
	add(&ts->esp, 0x1C);
	goto loc_4D552F;

loc_4D5641:
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, 0x7962F8);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537B80(ts, mv);
	push(mv, &ts->esp, 0x12107FFE);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, 0x40);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C960(ts, mv);
	add(&ts->esp, 0x1C);
	goto loc_4D552F;

loc_4D566F:
	mov(mv, &ts->eax, x86::mem(0x835FE8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto def_4D5514;
    }
	mov(mv, &ts->eax, x86::mem(0x835FD0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x4, 4));
	if (ts->eflags.zero) {
        goto loc_4D56B9;
    }
	push(mv, &ts->esp, 0xAB6C5A1E);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	push(mv, &ts->esp, 0xAB6C5A1E);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x34, 4));
	push(mv, &ts->esp, 0x40);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C960(ts, mv);
	add(&ts->esp, 0x20);
	goto loc_4D552F;

loc_4D56B9:
	mov(mv, &ts->eax, x86::mem(0x835FD8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D56F3;
    }
	push(mv, &ts->esp, 0xE59BFB1E);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	push(mv, &ts->esp, 0xE59BFB1E);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x34, 4));
	push(mv, &ts->esp, 0x40);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	add(&ts->esp, 0x20);
	goto loc_4D552F;

loc_4D56F3:
	mov(mv, &ts->eax, x86::mem(0x835FD4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D5715;
    }
	push(mv, &ts->esp, 0xF8BCEE28);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	push(mv, &ts->esp, 0xF8BCEE28);
	goto loc_4D5788;

loc_4D5715:
	push(mv, &ts->esp, 0x333F7902);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	push(mv, &ts->esp, 0x333F7902);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x34, 4));
	push(mv, &ts->esp, 0x40);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C960(ts, mv);
	add(&ts->esp, 0x20);
	goto loc_4D552F;

loc_4D5746:
	push(mv, &ts->esp, 0x9633E6C2);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, 0x40);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	add(&ts->esp, 0x10);
	goto loc_4D552F;

loc_4D5765:
	mov(mv, &ts->eax, x86::mem(0x835FE8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x4, 4));
	if (ts->eflags.zero) {
        goto loc_4D57A2;
    }
	push(mv, &ts->esp, 0x452383E7);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	push(mv, &ts->esp, 0x452383E7);

loc_4D5788:
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x34, 4));
	push(mv, &ts->esp, 0x40);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C960(ts, mv);
	add(&ts->esp, 0x20);
	goto loc_4D552F;

loc_4D57A2:
	push(mv, &ts->esp, 0x308DB484);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	push(mv, &ts->esp, 0x308DB484);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x34, 4));
	push(mv, &ts->esp, 0x40);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C960(ts, mv);
	add(&ts->esp, 0x20);
	goto loc_4D552F;

loc_4D57D3:
	mov(mv, &ts->eax, x86::mem(0x835FD0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto def_4D5514;
    }
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, 0x6353F07E);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	push(mv, &ts->esp, 0x6353F07E);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x34, 4));
	push(mv, &ts->esp, 0x40);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	add(&ts->esp, 0x20);
	goto loc_4D552F;

loc_4D5810:
	xor_(&ts->esi, ts->esi);

loc_4D5812:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_4AEA60(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->eax);
	game::sub_51F2E0(ts, mv);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->ebx);
	game::sub_52EA50(ts, mv);
	inc(mv, x86::mem(ts->esp + 0x10, 4));

def_4D5514:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	cmp(&ts->eflags, ts->eax, 0x7);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4D54F0;
    }
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	mov(&ts->eax, ts->edi);
	cmp(&ts->eflags, ts->eax, 0x7);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4D58D7;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_4D5860:
	push(mv, &ts->esp, 0x1C);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D588B;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 1), 0x1);
	mov(mv, x86::mem(ts->eax, 4), 0x795CB0);
	mov(mv, x86::mem(ts->eax + 0x18, 4), 0xFFFFFFFF);
	mov(&ts->esi, ts->eax);
	goto loc_4D588D;

loc_4D588B:
	xor_(&ts->esi, ts->esi);

loc_4D588D:
	inc(&ts->edi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x796328);
	game::sub_50B9C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, 0x7909A0);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x14);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7909A0);
	mov(&ts->ecx, ts->esi);
	game::sub_4AEA60(ts, mv);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x18, 4), 0xFFFFFFFF);
	game::sub_51F2E0(ts, mv);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->ebx);
	game::sub_5434D0(ts, mv);
	cmp(&ts->eflags, ts->edi, 0x7);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4D5860;
    }

loc_4D58D7:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->ebx);
	game::sub_543470(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x2C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4D58F5;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, ts->edx);
	game::sub_51EE80(ts, mv);

loc_4D58F5:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->ebx);
	game::sub_538500(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x4C);
	retn(mv, &ts->esp);
}

void sub_4D5920(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7749F3);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x796334);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4D5962;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), 0x0);

loc_4D5962:
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x64, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 1), 0x0);
	game::sub_4CBBA0(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	game::sub_510D40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_7749E0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

loc_7749E8:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x64);
	goto sub_4CBBA0;

SEH_4E7E10:
	mov(&ts->eax, 0x7E1484);
	goto ___CxxFrameHandler;
}

void sub_4D5990(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x34);
	mov(&ts->ebp, ts->ecx);
	game::j__malloc(ts, mv);
	xor_(&ts->edi, ts->edi);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4D59D9;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->eax, 4), 0x79B9D4);
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x28, 1), 0x1);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), 0x78F228);
	mov(mv, x86::mem(ts->eax + 0x30, 4), 0x78F21C);
	mov(&ts->esi, ts->eax);
	goto loc_4D59DB;

loc_4D59D9:
	xor_(&ts->esi, ts->esi);

loc_4D59DB:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, 0x6D851451);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	push(mv, &ts->esp, 0x10);
	mov(&ts->ebx, ts->eax);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4D5A07;
    }
	mov(mv, x86::mem(ts->eax, 4), 0x790C2C);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ebx);
	add(&ts->eax, 0x4);
	goto loc_4D5A09;

loc_4D5A07:
	xor_(&ts->eax, ts->eax);

loc_4D5A09:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x10, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->ebp + 0x64, 4));
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	game::sub_52E770(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_4D5A30(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	sub(&ts->esp, 0x30C);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebp, ts->ecx);
	push(mv, &ts->esp, 0x8384E0);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D5A5E;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	game::sub_50CEE0(ts, mv);
	add(&ts->esp, 0x8);

loc_4D5A5E:
	push(mv, &ts->esp, 0x7902A0);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D5A7B;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	game::sub_50CEE0(ts, mv);
	add(&ts->esp, 0x8);

loc_4D5A7B:
	mov(mv, &ts->eax, x86::mem(0x836010, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x83637C, 4), 0x1);
	game::sub_73ED70(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D5BBB;
    }
	mov(mv, &ts->ecx, x86::mem(0x836010, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	game::sub_73ED10(ts, mv);
	mov(&ts->esi, ts->eax);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x24, 2), 0x20);
	mov(&ts->ecx, 0x3F);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x26, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	push(mv, &ts->esp, 0x836014);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x28, 4));
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43DDA0(ts, mv);
	push(mv, &ts->esp, 0x796358);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x34, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x38, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_43DDA0(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x13C, 2), 0x20);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x3F);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x13E, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	add(&ts->esp, 0x24);
	push(mv, &ts->esp, 0x79634C);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x14, 4));
	push(mv, &ts->esp, 0x100);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x120, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x796344);
	push(mv, &ts->esp, ts->ecx);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_742360(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x228, 4));
	add(&ts->esp, 0x10);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFF);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edx);
	xor_(&ts->eax, ts->eax);

loc_4D5B53:
	mov(mv, x86::mem(ts->esp + (ts->eax) + 0x218, 1), ts->al);
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0x100);
	if (ts->eflags.carry) {
        goto loc_4D5B53;
    }
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	lea(mv, &ts->edx, x86::mem(ts->eax + 0x1, 4));
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_4D5B70:
	mov(mv, &ts->cl, x86::mem(ts->eax, 1));
	inc(&ts->eax);
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_4D5B70;
    }
	sub(&ts->eax, ts->edx);
	mov(&ts->edx, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	lea(mv, &ts->esi, x86::mem(ts->eax + 0x1, 4));

loc_4D5B82:
	mov(mv, &ts->cl, x86::mem(ts->eax, 1));
	inc(&ts->eax);
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_4D5B82;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x120, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0xFF);
	sub(&ts->ecx, ts->edx);
	sub(&ts->eax, ts->esi);
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + (ts->eax) + 0x28, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_7434F0(ts, mv);
	add(&ts->esp, 0x14);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebp);
	game::sub_4BDD20(ts, mv);

loc_4D5BBB:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_4D5BD0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	sub(&ts->esp, 0x30C);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(0x836010, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_73ED10(ts, mv);
	mov(&ts->esi, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x24, 2), 0x20);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x3F);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x26, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	push(mv, &ts->esp, 0x836014);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, ts->edx);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	game::sub_43DDA0(ts, mv);
	push(mv, &ts->esp, 0x796358);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x34, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x38, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DDA0(ts, mv);
	add(&ts->esp, 0x24);
	mov(mv, x86::mem(ts->esp + 0x118, 2), 0x20);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x3F);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x11A, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	push(mv, &ts->esp, 0x79634C);
	push(mv, &ts->esp, 0x100);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x120, 4));
	push(mv, &ts->esp, ts->edx);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	push(mv, &ts->esp, 0x796344);
	push(mv, &ts->esp, ts->eax);
	game::sub_7414A0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_742360(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x228, 4));
	add(&ts->esp, 0x10);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFF);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ecx);
	xor_(&ts->eax, ts->eax);
	goto loc_4D5CA0;

loc_4D5CA0:
	mov(mv, x86::mem(ts->esp + (ts->eax) + 0x218, 1), ts->al);
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0x100);
	if (ts->eflags.carry) {
        goto loc_4D5CA0;
    }
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	lea(mv, &ts->edx, x86::mem(ts->eax + 0x1, 4));

loc_4D5CB6:
	mov(mv, &ts->cl, x86::mem(ts->eax, 1));
	inc(&ts->eax);
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_4D5CB6;
    }
	sub(&ts->eax, ts->edx);
	mov(&ts->edx, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	lea(mv, &ts->esi, x86::mem(ts->eax + 0x1, 4));

loc_4D5CC8:
	mov(mv, &ts->cl, x86::mem(ts->eax, 1));
	inc(&ts->eax);
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_4D5CC8;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x120, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0xFF);
	sub(&ts->ecx, ts->edx);
	sub(&ts->eax, ts->esi);
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + (ts->eax) + 0x28, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_7434F0(ts, mv);
	add(&ts->esp, 0x14);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebp);
	game::sub_4BDD20(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_4D5D10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776418);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x79635C);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x64, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	game::sub_4CBBA0(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	game::sub_510D40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_776410:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

SEH_4E3300:
	mov(&ts->eax, 0x7DEE70);
	goto ___CxxFrameHandler;
}

void sub_4D5D70(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x24);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebx, ts->ecx);
	mov(&ts->ebp, 0x1);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x8);

loc_4D5D86:
	push(mv, &ts->esp, 0x34);
	game::j__malloc(ts, mv);
	xor_(&ts->esi, ts->esi);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4D5DC7;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->eax, 4), 0x79B9D4);
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x28, 1), 0x1);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), 0x78F228);
	mov(mv, x86::mem(ts->eax + 0x30, 4), 0x78F21C);
	mov(&ts->esi, ts->eax);

loc_4D5DC7:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x796328);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->ebx + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537A10(ts, mv);
	push(mv, &ts->esp, 0x10);
	mov(&ts->edi, ts->eax);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x20);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D5E0B;
    }
	mov(mv, x86::mem(ts->eax, 4), 0x790C2C);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->edi);
	add(&ts->eax, 0x4);
	goto loc_4D5E0D;

loc_4D5E0B:
	xor_(&ts->eax, ts->eax);

loc_4D5E0D:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x10, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->ebx + 0x64, 4));
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	game::sub_52E770(ts, mv);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x79603C);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->ebx + 0x4, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x2C, 4));
	add(&ts->esp, 0x1C);
	inc(&ts->ebp);
	dec(&ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4D5D86;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x24);
	retn(mv, &ts->esp);
}

void sub_4D5E70(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x64, 4));
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edi);
	game::sub_51F4E0(ts, mv);
	xor_(&ts->ebp, ts->ebp);
	xor_(&ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x16C, 4), ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_4D5EA0:
	game::sub_582B60(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xF8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	game::sub_73EA30(ts, mv);
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_4D5EBC;
    }
	inc(&ts->ebx);
	goto loc_4D5EA0;

loc_4D5EBC:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x16C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x13, 1), 0x0);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4D5FD3;
    }

loc_4D5ED1:
	mov(mv, &ts->al, x86::mem(ts->esp + 0x13, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4D5FD3;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x168, 4));
	add(mv, &ts->edi, x86::mem(ts->esp + 0x18, 4));
	game::sub_582B60(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xF8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_73EA30(ts, mv);
	mov(&ts->ebp, ts->eax);
	xor_(&ts->edi, ts->edi);
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->ebp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4D5FBE;
    }
	mov(&ts->ecx, 0x850080);
	game::sub_5031F0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D5FB8;
    }
	push(mv, &ts->esp, 0x3C);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4D5F49;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x38, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x14, 1), 0x1);
	mov(mv, x86::mem(ts->eax, 4), 0x795CB0);
	mov(&ts->edi, ts->eax);

loc_4D5F49:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x16C, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x786E70);
	inc(&ts->eax);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x796328);
	game::sub_50B9C0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->edi);
	game::sub_4AEA60(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x16C, 4));
	lea(mv, &ts->edx, x86::mem(ts->edi + 0x18, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->edi + 0x38, 4), ts->ecx);
	game::sub_43DBD0(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x1C, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->ebx);
	game::sub_51F2E0(ts, mv);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->ebx);
	game::sub_52EA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x16C, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x1C, 4));
	inc(&ts->eax);
	mov(mv, x86::mem(ts->esi + 0x16C, 4), ts->eax);

loc_4D5FB8:
	inc(mv, x86::mem(ts->esp + 0x18, 4));
	goto loc_4D5FC3;

loc_4D5FBE:
	mov(mv, x86::mem(ts->esp + 0x13, 1), 0x1);

loc_4D5FC3:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x16C, 4), ts->ebx);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4D5ED1;
    }

loc_4D5FD3:
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x16C, 4));
	cmp(&ts->eflags, ts->ebp, 0x8);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4D6061;
    }
	inc(&ts->ebp);

loc_4D5FE3:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x78FEBC);
	game::sub_50B9C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	push(mv, &ts->esp, 0x3C);
	game::j__malloc(ts, mv);
	xor_(&ts->edi, ts->edi);
	add(&ts->esp, 0x18);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4D6025;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x38, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x14, 1), 0x1);
	mov(mv, x86::mem(ts->eax, 4), 0x795CB0);
	mov(&ts->edi, ts->eax);

loc_4D6025:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x783FE5);
	mov(&ts->ecx, ts->edi);
	game::sub_4AEA60(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x783FE5);
	mov(&ts->ecx, ts->edi);
	game::sub_4AEA60(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->ebx);
	game::sub_51F2E0(ts, mv);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->ebx);
	game::sub_5434D0(ts, mv);
	inc(&ts->ebp);
	cmp(&ts->eflags, ts->ebp, 0x9);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4D5FE3;
    }
	mov(&ts->edi, ts->ebx);

loc_4D6061:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x16C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D60A9;
    }
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->edi);
	game::sub_543470(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x2C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4D6089;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, ts->eax);
	game::sub_51EE80(ts, mv);

loc_4D6089:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51F440(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x16C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x110, 4));
	game::sub_538080(ts, mv);

loc_4D60A9:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->edi);
	game::sub_538500(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4D60C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0xC98356BA);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4D61E5;
    }
	if (ts->eflags.zero) {
        goto loc_4D614D;
    }
	cmp(&ts->eflags, ts->eax, 0x35F8620B);
	if (ts->eflags.zero) {
        goto loc_4D6120;
    }
	cmp(&ts->eflags, ts->eax, 0x911AB364);
	if (!ts->eflags.zero) {
        goto loc_4D620D;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537D40(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4D620D;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C60(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4D6120:
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x8B, 1), 0x1);
	game::sub_4BE1D0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x7F44FC, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FEF4);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4D614D:
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x5C, 4));
	game::sub_538760(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D61A4;
    }
	cmp(&ts->eflags, ts->eax, 0x7FFFFFFF);
	if (ts->eflags.zero) {
        goto loc_4D61A4;
    }
	mov(mv, &ts->edx, x86::mem(0x8651AC, 4));
	sub(&ts->edx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78758C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4D61AF;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x118, 4));
	game::sub_498600(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x14C, 4), 0x0);
	goto loc_4D61AF;

loc_4D61A4:
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x118, 4));
	game::sub_4CDD40(ts, mv);

loc_4D61AF:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x160, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4D61DA;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_5379A0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x160, 1), 0x0);
	mov(mv, &ts->edx, x86::mem(0x7F44FC, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0xA);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0xC);

loc_4D61DA:
	mov(&ts->ecx, ts->esi);
	game::sub_4BE1D0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4D61E5:
	cmp(&ts->eflags, ts->eax, 0xE1FDE1D1);
	if (!ts->eflags.zero) {
        goto loc_4D620D;
    }
	mov(mv, &ts->eax, x86::mem(0x7F44FC, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79031C);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x160, 1), 0x1);
	add(&ts->esp, 0x10);

loc_4D620D:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);
}

void sub_4D6220(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7749D3);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x79636C);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4D6262;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), 0x0);

loc_4D6262:
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 1), 0x0);
	game::sub_4CBBA0(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	game::sub_510D40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_7749C0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

loc_7749C8:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x54);
	goto sub_4CBBA0;

SEH_4F2350:
	mov(&ts->eax, 0x7E1BA8);
	goto ___CxxFrameHandler;
}

void sub_4D6290(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x50, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_4D62C4;
    }
	cmp(&ts->eflags, ts->eax, 0xC98356BA);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4D62B9;
    }
	if (ts->eflags.zero) {
        goto loc_4D62C4;
    }
	cmp(&ts->eflags, ts->eax, 0x34DC1BEC);
	if (ts->eflags.zero) {
        goto loc_4D62C4;
    }
	cmp(&ts->eflags, ts->eax, 0x35F8620B);
	if (ts->eflags.zero) {
        goto loc_4D62C4;
    }
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4D62B9:
	cmp(&ts->eflags, ts->eax, 0xE1FDE1D1);
	if (!ts->eflags.zero) {
        goto loc_4D64A1;
    }

loc_4D62C4:
	cmp(&ts->eflags, ts->eax, 0x911AB364);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4D63E3;
    }
	if (ts->eflags.zero) {
        goto loc_4D63C3;
    }
	cmp(&ts->eflags, ts->eax, 0x35F8620B);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4D638D;
    }
	if (ts->eflags.zero) {
        goto loc_4D6314;
    }
	cmp(&ts->eflags, ts->eax, 0xC407210);
	if (ts->eflags.zero) {
        goto loc_4D63AC;
    }
	cmp(&ts->eflags, ts->eax, 0x34DC1BEC);
	if (!ts->eflags.zero) {
        goto loc_4D64A1;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F5B8);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4D6314:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FEF4);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, 0x8384E0);
	game::sub_537C00(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FEF4);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, 0x7902A0);
	game::sub_537C00(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FEF4);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, 0x790210);
	game::sub_537C00(ts, mv);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0x8363A0);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x38);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D64A1;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FEF4);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, 0x8363A0);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4D638D:
	cmp(&ts->eflags, ts->eax, 0x406415E3);
	if (ts->eflags.zero) {
        goto loc_4D63AC;
    }
	cmp(&ts->eflags, ts->eax, 0x72619778);
	if (!ts->eflags.zero) {
        goto loc_4D64A1;
    }
	push(mv, &ts->esp, 0xFFFFFFFF);
	mov(&ts->ecx, ts->esi);
	game::sub_4A24C0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4D63AC:
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_4D64A1;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_4BE220(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x50, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4D63C3:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F5B8);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x50, 1), 0x1);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4D63E3:
	cmp(&ts->eflags, ts->eax, 0xC98356BA);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4D6493;
    }
	if (ts->eflags.zero) {
        goto loc_4D641A;
    }
	cmp(&ts->eflags, ts->eax, 0x911C0A4B);
	if (ts->eflags.zero) {
        goto loc_4D640D;
    }
	cmp(&ts->eflags, ts->eax, 0x9803F6E2);
	if (!ts->eflags.zero) {
        goto loc_4D64A1;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_4A25C0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4D640D:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_4A24C0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4D641A:
	game::sub_582B60(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_584F10(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x100, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4D64A1;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_5379A0(ts, mv);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0x8363A0);
	mov(mv, x86::mem(ts->esi + 0x100, 1), 0x0);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79031C);
	push(mv, &ts->esp, 0x47FF4E7C);
	if (ts->eflags.zero) {
        goto loc_4D6482;
    }
	push(mv, &ts->esp, 0x8363A0);
	game::sub_537C00(ts, mv);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0x8363A0);
	game::sub_43DBD0(ts, mv);
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4D6482:
	push(mv, &ts->esp, 0x790210);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4D6493:
	cmp(&ts->eflags, ts->eax, 0xE1FDE1D1);
	if (!ts->eflags.zero) {
        goto loc_4D64A1;
    }
	mov(mv, x86::mem(ts->esi + 0x100, 1), 0x1);

loc_4D64A1:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);
}

void sub_4D64B0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x28);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ebp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->esi, x86::mem(ts->ebp + 0x54, 4));
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x1);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x7);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_4D64D0:
	push(mv, &ts->esp, 0x34);
	game::j__malloc(ts, mv);
	xor_(&ts->edi, ts->edi);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4D6511;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->eax, 4), 0x79B9D4);
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x28, 1), 0x1);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), 0x78F228);
	mov(mv, x86::mem(ts->eax + 0x30, 4), 0x78F21C);
	mov(&ts->edi, ts->eax);

loc_4D6511:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7963DC);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x4, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537A10(ts, mv);
	push(mv, &ts->esp, 0x10);
	mov(&ts->ebx, ts->eax);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x20);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D6559;
    }
	mov(mv, x86::mem(ts->eax, 4), 0x790C2C);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ebx);
	add(&ts->eax, 0x4);
	goto loc_4D655B;

loc_4D6559:
	xor_(&ts->eax, ts->eax);

loc_4D655B:
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x10, 4));
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0xC, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x79603C);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x4, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_5379C0(ts, mv);
	add(&ts->esp, 0x1C);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->edi + 0x14, 4), ts->eax);
	game::sub_52E770(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	inc(&ts->ecx);
	dec(&ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4D64D0;
    }
	push(mv, &ts->esp, 0x18);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D65DF;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->eax, 4), 0x795CB0);
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 1), 0x1);
	mov(&ts->edi, ts->eax);
	goto loc_4D65E1;

loc_4D65DF:
	xor_(&ts->edi, ts->edi);

loc_4D65E1:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xC91D620F);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_4AEA60(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, 0xC91D620F);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7963CC);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_51F2E0(ts, mv);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_52EA50(ts, mv);
	push(mv, &ts->esp, 0x18);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D6656;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->eax, 4), 0x795CB0);
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 1), 0x1);
	mov(&ts->edi, ts->eax);
	goto loc_4D6658;

loc_4D6656:
	xor_(&ts->edi, ts->edi);

loc_4D6658:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xA5B53F2B);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_4AEA60(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, 0xA5B53F2B);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7963BC);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_51F2E0(ts, mv);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_52EA50(ts, mv);
	push(mv, &ts->esp, 0x18);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D66CD;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->eax, 4), 0x795CB0);
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 1), 0x1);
	mov(&ts->edi, ts->eax);
	goto loc_4D66CF;

loc_4D66CD:
	xor_(&ts->edi, ts->edi);

loc_4D66CF:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xA276384);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_4AEA60(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, 0xA276384);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7963AC);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_51F2E0(ts, mv);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_52EA50(ts, mv);
	push(mv, &ts->esp, 0x18);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D6744;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->eax, 4), 0x795CB0);
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 1), 0x1);
	mov(&ts->edi, ts->eax);
	goto loc_4D6746;

loc_4D6744:
	xor_(&ts->edi, ts->edi);

loc_4D6746:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xA0C5D893);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_4AEA60(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, 0xA0C5D893);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x79639C);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_51F2E0(ts, mv);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_52EA50(ts, mv);
	push(mv, &ts->esp, 0x18);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D67BB;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->eax, 4), 0x795CB0);
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 1), 0x1);
	mov(&ts->edi, ts->eax);
	goto loc_4D67BD;

loc_4D67BB:
	xor_(&ts->edi, ts->edi);

loc_4D67BD:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xDBFF7776);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_4AEA60(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, 0xDBFF7776);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, 0x79638C);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_51F2E0(ts, mv);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_52EA50(ts, mv);
	push(mv, &ts->esp, 0x18);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D6837;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->eax, 4), 0x795CB0);
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 1), 0x1);
	mov(&ts->edi, ts->eax);
	goto loc_4D6839;

loc_4D6837:
	xor_(&ts->edi, ts->edi);

loc_4D6839:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1C775494);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_4AEA60(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, 0x1C775494);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x79637C);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_51F2E0(ts, mv);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_52EA50(ts, mv);
	push(mv, &ts->esp, 0x18);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D68AE;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->eax, 4), 0x795CB0);
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 1), 0x1);
	mov(&ts->edi, ts->eax);
	goto loc_4D68B0;

loc_4D68AE:
	xor_(&ts->edi, ts->edi);

loc_4D68B0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x17B2522);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_4AEA60(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, 0x17B2522);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x79637C);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_51F2E0(ts, mv);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_52EA50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x2C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4D6918;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, ts->eax);
	game::sub_51EE80(ts, mv);

loc_4D6918:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_538500(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x7);
	push(mv, &ts->esp, 0x7);
	lea(mv, &ts->ecx, x86::mem(ts->ebp + 0x88, 4));
	game::sub_538080(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	add(&ts->esp, 0x28);
	retn(mv, &ts->esp);
}

void sub_4D6940(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x774A14);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x168);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4D698E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4BE2C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4D698E:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_774A00:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7963EC);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4D6940:
	mov(&ts->eax, 0x7E06DC);
	goto ___CxxFrameHandler;
}

void sub_4D69A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4BE3A0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4D69B8;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4D69B8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4D69C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x774A41);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->esi);
	game::sub_551DE0(ts, mv);
	xor_(&ts->ebx, ts->ebx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi, 4), 0x796410);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->ebx);
	game::sub_4FF430(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x98, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x94, 1), ts->bl);
	game::sub_4AE7F0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x1DC, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->esi + 0x1E0, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x1E1, 1), ts->bl);
	mov(mv, x86::mem(0x838528, 1), ts->bl);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x53D8734);
	mov(mv, x86::mem(ts->esp + 0x1C, 1), 0x2);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x42ADB44C);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x836014);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, 0x78F844);
	game::sub_50B9C0(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x10);
	mov(&ts->ecx, ts->esi);
	game::sub_4BE670(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4D6AA5;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xEC3905C1);
	push(mv, &ts->esp, 0x1FAB5998);
	push(mv, &ts->esp, 0x541389E5);
	push(mv, &ts->esp, 0x7902C8);
	push(mv, &ts->esp, ts->eax);
	game::sub_558610(ts, mv);
	add(&ts->esp, 0x14);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->eax);

loc_4D6AA5:
	mov(&ts->ecx, ts->esi);
	game::sub_4A2DB0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x6C, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_4D6AC4;
    }
	cmp(mv, &ts->eflags, x86::mem(0x8384DC, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_4D6AC4;
    }
	mov(&ts->ebx, 0x1);

loc_4D6AC4:
	mov(mv, x86::mem(ts->esi + 0x1E1, 1), ts->bl);
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	game::sub_54E6B0(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x796404);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537A60(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	add(&ts->esp, 0xC);
	mov(mv, x86::mem(ts->esi + 0x1E4, 4), ts->eax);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_774A20:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

loc_774A28:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x50);
	goto sub_4957A0;

loc_774A33:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x98);
	goto sub_4CBAF0;

SEH_4D69C0:
	mov(&ts->eax, 0x7E0710);
	goto ___CxxFrameHandler;
}

void sub_4D6B10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x774A41);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x796410);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x2);
	if (ts->eflags.zero) {
        goto loc_4D6B52;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), 0x0);

loc_4D6B52:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1DC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4D6B69;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_58B9A0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_58BC40(ts, mv);

loc_4D6B69:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1E1, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4D6B7E;
    }
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	game::sub_54E6A0(ts, mv);

loc_4D6B7E:
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x98, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 1), 0x1);
	game::sub_4CBAF0(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x50, 4), 0x78F544);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	game::sub_510D40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_774A20:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

loc_774A28:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x50);
	goto sub_4957A0;

loc_774A33:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x98);
	goto sub_4CBAF0;

SEH_4D69C0:
	mov(&ts->eax, 0x7E0710);
	goto ___CxxFrameHandler;
}

void sub_4D6BC0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x774A71);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	mov(mv, x86::mem(ts->edi, 4), 0x796420);
	lea(mv, &ts->ebx, x86::mem(ts->edi + 0x4C, 4));
	mov(&ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x2);
	game::sub_51F4E0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x904, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D6C0A;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);

loc_4D6C0A:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0xFC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D6C1D;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_743B30(ts, mv);
	add(&ts->esp, 0x4);

loc_4D6C1D:
	mov(mv, &ts->eax, x86::mem(0x8500D0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4D6C2B;
    }
	game::sub_5832B0(ts, mv);

loc_4D6C2B:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x908, 4));
	lea(mv, &ts->esi, x86::mem(ts->edi + 0x908, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x18, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4D6C59;
    }

loc_4D6C40:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	game::j__free(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_4D6C40;
    }

loc_4D6C59:
	mov(&ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x18, 1), 0x0);
	game::sub_4CBBA0(ts, mv);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0xFFFFFFFF);
	game::sub_510D40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_774A50:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

loc_774A58:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x4C);
	goto sub_4CBBA0;

loc_774A63:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x908);
	goto sub_4DEF30;

SEH_4FB4C0:
	mov(&ts->eax, 0x7E22D4);
	goto ___CxxFrameHandler;
}

void sub_4D6C90(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x774A94);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x58);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4D6CDB;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4BE960(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4D6CDB:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_774A80:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796430);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4D6C90:
	mov(&ts->eax, 0x7E0734);
	goto ___CxxFrameHandler;
}

void sub_4D6CF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x50);
	mov(&ts->edi, ts->ecx);
	game::j__malloc(ts, mv);
	mov(&ts->esi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, 0x1F);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DC00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x28, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x27, 1), 0x0);
	game::sub_43DBD0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x2C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x30, 4));
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x90, 4));
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x48, 4), ts->edx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->esi);
	add(&ts->esp, 0x18);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), ts->eax);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->ecx);
	mov(&ts->al, 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);
}

void sub_4D6D50(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x774AB3);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x24);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x34, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->esi);
	game::sub_551DE0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	xor_(&ts->ebp, ts->ebp);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x796484);
	push(mv, &ts->esp, 0x796484);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x58, 4), ts->ebp);
	mov(mv, x86::mem(ts->esi, 4), 0x796474);
	game::sub_542CA0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x44496A02);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x44, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0xF8, 4), ts->ebp);
	mov(mv, x86::mem(ts->esi + 0xEC, 1), 0x1);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x44496A03);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x836514, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	and_(&ts->cl, 0xF0);
	add(&ts->esp, 0x18);
	cmp(&ts->eflags, ts->cl, 0x20);
	if (ts->eflags.zero) {
        goto loc_4D6E00;
    }
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0x424D7A17);
	push(mv, &ts->esp, 0x1335F0);
	goto loc_4D6E0C;

loc_4D6E00:
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0x4754130E);
	push(mv, &ts->esp, 0x541389E5);

loc_4D6E0C:
	push(mv, &ts->esp, 0x1335F0);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x8);
	mov(&ts->ecx, 0x83A9E0);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xEB406FEC);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0xC);
	mov(&ts->ebx, 0x1);
	goto loc_4D6E48;

loc_4D6E46:
	xor_(&ts->ebp, ts->ebp);

loc_4D6E48:
	push(mv, &ts->esp, 0x34);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_4D6E87;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->eax, 4), 0x79B9D4);
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ebp);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->ebp);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->ebp);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->ebp);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->ebp);
	mov(mv, x86::mem(ts->eax + 0x28, 1), 0x1);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), 0x78F228);
	mov(mv, x86::mem(ts->eax + 0x30, 4), 0x78F21C);
	mov(&ts->ebp, ts->eax);

loc_4D6E87:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x7963DC);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537A10(ts, mv);
	push(mv, &ts->esp, 0x10);
	mov(&ts->edi, ts->eax);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x20);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D6ECB;
    }
	mov(mv, x86::mem(ts->eax, 4), 0x790C2C);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->edi);
	add(&ts->eax, 0x4);
	goto loc_4D6ECD;

loc_4D6ECB:
	xor_(&ts->eax, ts->eax);

loc_4D6ECD:
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x10, 4));
	lea(mv, &ts->edi, x86::mem(ts->ebp + 0xC, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x4, 4), ts->eax);
	push(mv, &ts->esp, 0x796464);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->edi);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x58, 4), ts->edx);
	game::sub_505450(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x58, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537A10(ts, mv);
	push(mv, &ts->esp, 0x10);
	mov(mv, x86::mem(ts->esp + 0x64, 4), ts->eax);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x20);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D6F2F;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x44, 4));
	mov(mv, x86::mem(ts->eax, 4), 0x790C2C);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->edx);
	add(&ts->eax, 0x4);
	goto loc_4D6F31;

loc_4D6F2F:
	xor_(&ts->eax, ts->eax);

loc_4D6F31:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x4, 4), ts->eax);
	push(mv, &ts->esp, 0x796450);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->edi);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	add(&ts->esp, 0x1C);
	mov(&ts->ecx, ts->ebp);
	mov(mv, x86::mem(ts->ebp + 0x14, 4), ts->eax);
	game::sub_51F220(ts, mv);
	push(mv, &ts->esp, ts->ebp);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	game::sub_52E770(ts, mv);
	inc(&ts->ebx);
	cmp(&ts->eflags, ts->ebx, 0x8);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4D6E46;
    }
	mov(mv, &ts->eax, x86::mem(0x836514, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	and_(&ts->eax, 0xF0);
	sub(&ts->al, 0x30);
	neg(&ts->al);
	sbb(&ts->eax, ts->eax);
	inc(&ts->eax);
	mov(mv, x86::mem(ts->esi + 0xFC, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x7F6CBC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x796440);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	mov(mv, &ts->ecx, x86::mem(0x7F6CBC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x426C7B4D);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x3C, 4));
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x30);
	retn(mv, &ts->esp, 0x4);

loc_774AA0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x30, 4));
	goto sub_510D40;

loc_774AA8:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x30, 4));
	add(&ts->ecx, 0x4C);
	goto sub_4CBBA0;

SEH_4D6D50:
	mov(&ts->eax, 0x7E0760);
	goto ___CxxFrameHandler;
}

void sub_4D7010(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776418);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x796474);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	game::sub_4CBBA0(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	game::sub_510D40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_776410:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

SEH_4E3300:
	mov(&ts->eax, 0x7DEE70);
	goto ___CxxFrameHandler;
}

void sub_4D7070(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x774AD4);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x108);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4D70B1;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4D6D50(ts, mv);
	goto loc_4D70B3;

loc_4D70B1:
	xor_(&ts->eax, ts->eax);

loc_4D70B3:
	mov(mv, &ts->edx, x86::mem(0x836498, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x64, 4));
	mov(mv, x86::mem(ts->ecx + 0x98, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_774AC0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796490);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4D7070:
	mov(&ts->eax, 0x7E0784);
	goto ___CxxFrameHandler;
}

void sub_4D70E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x24);
	mov(&ts->edi, ts->ecx);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D7108;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 1), 0x1);
	mov(mv, x86::mem(ts->eax, 4), 0x795CB0);
	mov(&ts->esi, ts->eax);
	goto loc_4D710A;

loc_4D7108:
	xor_(&ts->esi, ts->esi);

loc_4D710A:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->eax);
	game::sub_4AEA60(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_4AEA60(ts, mv);
	add(&ts->edi, 0x4C);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	game::sub_51F2E0(ts, mv);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	game::sub_52EA50(ts, mv);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->edi);
	game::sub_538500(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);
}

void sub_4D7160(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_4A3D50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, 0x1335F0);
	push(mv, &ts->esp, 0x1335F0);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x79AD657F);
	push(mv, &ts->esp, 0xB5074AB4);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x7964A4);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x18);
	mov(&ts->ecx, ts->esi);
	game::sub_4BEE10(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4C, 4));
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50B8A0(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->ebx + 0x20, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x10, 4));
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4D721A;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_555F10(ts, mv);
	add(&ts->esp, 0x10);

loc_4D721A:
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	game::sub_54E6A0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	game::sub_54E6E0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_4D7240(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x89E7A0, 4));
	cmp(&ts->eflags, ts->eax, 0x104E);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ebp, ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4D7279;
    }
	cmp(&ts->eflags, ts->eax, 0x1053);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_4D7279;
    }
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, 0x864630);
	game::sub_43BE80(ts, mv);
	mov(&ts->ecx, ts->ebp);
	mov(&ts->esi, ts->eax);
	game::sub_4BF140(ts, mv);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->ebp);
	push(mv, &ts->esp, 0x6);
	game::sub_4A41A0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_4D7279:
	mov(mv, &ts->eax, x86::mem(0x890118, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x24, 4));
	xor_(&ts->esi, ts->esi);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4D72C9;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ebx, x86::mem(ts->ebp + 0x4C, 4));
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_4D7290:
	mov(mv, &ts->edi, x86::mem(0x851044, 4));
	push(mv, &ts->esp, 0xC);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D72AA;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->edi);
	goto loc_4D72AC;

loc_4D72AA:
	xor_(&ts->eax, ts->eax);

loc_4D72AC:
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->ebx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->ebx);
	mov(mv, &ts->ecx, x86::mem(0x890118, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x24, 4));
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4D7290;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);

loc_4D72C9:
	mov(&ts->ecx, ts->ebp);
	game::sub_4BF290(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x890118, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebp);
	push(mv, &ts->esp, 0x6);
	game::sub_4A41A0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_4D72F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x774AF4);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x50);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4D733B;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4BF8E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4D733B:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_774AE0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7964B8);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4D72F0:
	mov(&ts->eax, 0x7E07A8);
	goto ___CxxFrameHandler;
}

void sub_4D7350(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0x406415E3);
	if (ts->eflags.zero) {
        goto loc_4D7393;
    }
	cmp(&ts->eflags, ts->eax, 0x911AB364);
	if (!ts->eflags.zero) {
        goto locret_4D739E;
    }
	mov(mv, &ts->edx, x86::mem(0x8363DC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x38, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->edx + 0x30, 4));
	lea(mv, &ts->eax, x86::mem(ts->edx + 0x38, 4));
	cmp(&ts->eflags, ts->esi, ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero) {
        goto locret_4D739E;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x4, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(&ts->eax, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp, 0x10);

loc_4D7393:
	mov(mv, &ts->ecx, x86::mem(0x8363DC, 4));
	game::sub_4BFF80(ts, mv);

locret_4D739E:
	retn(mv, &ts->esp, 0x10);
}

void sub_4D73B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x10, 4));
	cmp(&ts->eflags, ts->esi, ts->ebp);
	mov(&ts->ebx, ts->ecx);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_4D73F3;
    }
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->edi, x86::mem(0xC8, 4));
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_4D73D0:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x18C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + (ts->eax) - 0xAC, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + (ts->eax), 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->ebx);
	game::sub_4BFD40(ts, mv);
	inc(&ts->esi);
	add(&ts->edi, 0x4);
	cmp(&ts->eflags, ts->esi, ts->ebp);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4D73D0;
    }
	pop(mv, &ts->esp, ts->edi);

loc_4D73F3:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x8);
}

void sub_4D7400(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	sub(&ts->esp, 0x34);
	cmp(&ts->eflags, ts->eax, 0x4);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4D7566;
    }
	cmp(mv, &ts->eflags, x86::mem(0x83AAB4, 4), 0x8);
	if (!ts->eflags.zero) {
        goto loc_4D768F;
    }
	xor_(&ts->edi, ts->edi);
	mov(&ts->eax, 0x78DAA8);
	dec(&ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	mov(&ts->ebx, 0x85036C);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x2);
	goto loc_4D7446;

loc_4D7442:
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));

loc_4D7446:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_4C0300(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_4C03A0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(0x890080, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_5F0E30(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x790400);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ecx);
	game::sub_50B990(ts, mv);
	inc(&ts->edi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x790500);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->eax);
	game::sub_50B990(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x24, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->ecx, 0x83AAB4);
	game::sub_502780(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D74D1;
    }
	cmp(mv, &ts->eflags, x86::mem(0x83ABC4, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_4D74D1;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_4A48D0(ts, mv);
	goto loc_4D7515;

loc_4D74D1:
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0xC, 4));
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->edx);
	game::sub_577240(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x7904EC);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ecx);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x10);

loc_4D7515:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	movsx(mv, &ts->eax, x86::mem(ts->ecx + (ts->edi), 1));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x790544);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->edx);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	add(&ts->esp, 0x10);
	add(&ts->ebx, 0x224);
	dec(&ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4D7442;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x34);
	retn(mv, &ts->esp);

loc_4D7566:
	cmp(&ts->eflags, ts->eax, 0x200);
	if (ts->eflags.zero) {
        goto loc_4D7576;
    }
	cmp(&ts->eflags, ts->eax, 0x8);
	if (!ts->eflags.zero) {
        goto loc_4D768F;
    }

loc_4D7576:
	cmp(mv, &ts->eflags, x86::mem(0x850088, 4), 0x8);
	if (!ts->eflags.zero) {
        goto loc_4D768F;
    }
	mov(&ts->ecx, 0x89CF48);
	xor_(&ts->ebx, ts->ebx);
	game::sub_5F01E0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4D7791;
    }

loc_4D7597:
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	game::sub_43BE60(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	game::sub_4C0300(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	game::sub_4C03A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x890080, 4));
	game::sub_5F0E30(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x790400);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->edx);
	game::sub_50B990(ts, mv);
	inc(&ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x790500);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->eax);
	game::sub_50B990(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x2C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x28, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	movsx(mv, &ts->eax, x86::mem(ts->eax + 0x78DAA7, 1));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x790544);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->ecx);
	game::sub_50B990(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x2C, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x14, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->eax);
	game::sub_577240(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x7904EC);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x10);
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F01E0(ts, mv);
	cmp(&ts->eflags, ts->ebx, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4D7597;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x34);
	retn(mv, &ts->esp);

loc_4D768F:
	mov(mv, &ts->eax, x86::mem(0x85BAB4, 4));
	xor_(&ts->ebx, ts->ebx);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4D7791;
    }
	mov(&ts->edi, ts->edi);

loc_4D76A0:
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	game::sub_43BE60(ts, mv);
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	game::sub_4C0300(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	game::sub_4C03A0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(0x890080, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_5F0E30(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x790400);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ecx);
	game::sub_50B990(ts, mv);
	inc(&ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x790500);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->eax);
	game::sub_50B990(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x2C, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0xC, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->edx);
	game::sub_577240(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x7904EC);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->ecx);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x10, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x790544);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x85BAB4, 4));
	add(&ts->esp, 0x10);
	cmp(&ts->eflags, ts->ebx, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4D76A0;
    }

loc_4D7791:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x34);
	retn(mv, &ts->esp);
}

void sub_4D77A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	sub(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, 0x4);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4D7910;
    }
	cmp(mv, &ts->eflags, x86::mem(0x83AAB4, 4), 0x8);
	if (!ts->eflags.zero) {
        goto loc_4D79FE;
    }
	mov(&ts->edi, 0x1);
	goto loc_4D77D0;

loc_4D77D0:
	lea(mv, &ts->eax, x86::mem(ts->edi - 0x1, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x8C, 4));
	game::sub_43BE60(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x890080, 4));
	mov(&ts->ebx, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_5F0E30(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x14, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x4, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_4D784B;
    }
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x900, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_4D784B;
    }
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x4);
	if (!ts->eflags.zero) {
        goto loc_4D7818;
    }
	cmp(mv, &ts->eflags, x86::mem(0x83AAB4, 4), 0x8);
	if (ts->eflags.zero) {
        goto loc_4D784B;
    }

loc_4D7818:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x7905F8);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ecx);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x79051C);
	game::sub_50B990(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C60(ts, mv);
	add(&ts->esp, 0x10);

loc_4D784B:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x7845D4);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x79051C);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	game::sub_50B990(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x8, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->edi - 0x1, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_4C03A0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(0x890080, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_5F0E30(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x790400);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ecx);
	game::sub_50B990(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x790500);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	game::sub_50B990(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x14, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x790544);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x10);
	inc(&ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->edi - 0x1, 4));
	cmp(&ts->eflags, ts->ecx, 0x2);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4D77D0;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);

loc_4D7910:
	cmp(&ts->eflags, ts->eax, 0x200);
	if (ts->eflags.zero) {
        goto loc_4D7920;
    }
	cmp(&ts->eflags, ts->eax, 0x8);
	if (!ts->eflags.zero) {
        goto loc_4D79FE;
    }

loc_4D7920:
	cmp(mv, &ts->eflags, x86::mem(0x850088, 4), 0x8);
	if (!ts->eflags.zero) {
        goto loc_4D79FE;
    }
	mov(&ts->ecx, 0x89CF48);
	xor_(&ts->ebx, ts->ebx);
	game::sub_5F01E0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4D7ABF;
    }

loc_4D7941:
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x8C, 4));
	game::sub_43BE60(ts, mv);
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	game::sub_4C0A00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	game::sub_4C03A0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(0x890080, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_5F0E30(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x790400);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ecx);
	game::sub_50B990(ts, mv);
	inc(&ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x790500);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->eax);
	game::sub_50B990(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x14, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x790544);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x10);
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F01E0(ts, mv);
	cmp(&ts->eflags, ts->ebx, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4D7941;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);

loc_4D79FE:
	mov(mv, &ts->eax, x86::mem(0x85BAB4, 4));
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4D7ABF;
    }
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_4D7A10:
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x8C, 4));
	game::sub_43BE60(ts, mv);
	mov(&ts->ebx, ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x8, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_4C0A00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_4C03A0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(0x890080, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_5F0E30(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x790400);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ecx);
	game::sub_50B990(ts, mv);
	inc(&ts->edi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x790500);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->eax);
	game::sub_50B990(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x14, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x790544);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x85BAB4, 4));
	add(&ts->esp, 0x10);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4D7A10;
    }

loc_4D7ABF:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);
}

void sub_4D7AD0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x774B14);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x108);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4D7B1E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4C0AA0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4D7B1E:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_774B00:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7964D0);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4D7AD0:
	mov(&ts->eax, 0x7E07CC);
	goto ___CxxFrameHandler;
}

void sub_4D7B30(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_52D100(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4D7B4B;
    }
	mov(&ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	goto sub_4A4CA0;

loc_4D7B4B:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x5C, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_52D100(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4D7B63;
    }
	mov(&ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	goto sub_4A4FB0;

loc_4D7B63:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x60, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_52D100(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4D7B7B;
    }
	mov(&ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	goto sub_4A4DD0;

loc_4D7B7B:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x64, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_52D100(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4D7B93;
    }
	mov(&ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	goto sub_4A5090;

loc_4D7B93:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x68, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_52D100(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4D7BAB;
    }
	mov(&ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	goto sub_4C1220;

loc_4D7BAB:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x6C, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_52D100(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4D7BCA;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x50, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4D7BCA;
    }
	mov(&ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	goto sub_4A5200;

loc_4D7BCA:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4D7BD0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x2C);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x74, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4D7C38;
    }
	game::sub_50C600(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4D7BF0;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_4A5200(ts, mv);
	goto loc_4D7C57;

loc_4D7BF0:
	mov(mv, &ts->cl, x86::mem(0x8763F0, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	movzx(mv, &ts->eax, x86::mem(0x8763F2, 1));
	if (ts->eflags.zero) {
        goto loc_4D7C08;
    }
	movzx(mv, &ts->eax, x86::mem(0x8763F5, 1));

loc_4D7C08:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D7C1C;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x50, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4D7C57;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_4A5200(ts, mv);
	goto loc_4D7C57;

loc_4D7C1C:
	test(&ts->eflags, ts->cl, ts->cl);
	movzx(mv, &ts->eax, x86::mem(0x8763F3, 1));
	if (ts->eflags.zero) {
        goto loc_4D7C2E;
    }
	movzx(mv, &ts->eax, x86::mem(0x8763F6, 1));

loc_4D7C2E:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D7C57;
    }
	mov(mv, x86::mem(ts->esi + 0x50, 1), 0x1);
	goto loc_4D7C57;

loc_4D7C38:
	mov(mv, &ts->al, x86::mem(0x8763F0, 1));
	test(&ts->eflags, ts->al, ts->al);
	movzx(mv, &ts->eax, x86::mem(0x8763F3, 1));
	if (ts->eflags.zero) {
        goto loc_4D7C4F;
    }
	movzx(mv, &ts->eax, x86::mem(0x8763F6, 1));

loc_4D7C4F:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D7C57;
    }
	mov(mv, x86::mem(ts->esi + 0x50, 1), 0x0);

loc_4D7C57:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x38, 4));
	cmp(&ts->eflags, ts->eax, 0xB5AF2461);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4D7D31;
    }
	if (ts->eflags.zero) {
        goto loc_4D7D22;
    }
	cmp(&ts->eflags, ts->eax, 0x911AB364);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4D7CBF;
    }
	if (ts->eflags.zero) {
        goto loc_4D7CB0;
    }
	cmp(&ts->eflags, ts->eax, 0xC407210);
	if (ts->eflags.zero) {
        goto loc_4D7CA1;
    }
	cmp(&ts->eflags, ts->eax, 0x5073EF13);
	if (ts->eflags.zero) {
        goto loc_4D7C92;
    }
	cmp(&ts->eflags, ts->eax, 0x7C8D5450);
	if (ts->eflags.zero) {
        goto loc_4D7CD1;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x2C);
	retn(mv, &ts->esp, 0x10);

loc_4D7C92:
	mov(&ts->ecx, ts->esi);
	game::sub_4A4CA0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x2C);
	retn(mv, &ts->esp, 0x10);

loc_4D7CA1:
	mov(&ts->ecx, ts->esi);
	game::sub_4A4E80(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x2C);
	retn(mv, &ts->esp, 0x10);

loc_4D7CB0:
	mov(&ts->ecx, ts->esi);
	game::sub_4C1220(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x2C);
	retn(mv, &ts->esp, 0x10);

loc_4D7CBF:
	cmp(&ts->eflags, ts->eax, 0x9803F6E2);
	if (ts->eflags.zero) {
        goto loc_4D7D13;
    }
	cmp(&ts->eflags, ts->eax, 0xB4623F67);
	if (!ts->eflags.zero) {
        goto loc_4D8014;
    }

loc_4D7CD1:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F614);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->edi);
	game::sub_537C60(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x74, 1));
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4D7D07;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x75, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4D7D07;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_4A5200(ts, mv);

loc_4D7D07:
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x75, 1), 0x0);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x2C);
	retn(mv, &ts->esp, 0x10);

loc_4D7D13:
	mov(&ts->ecx, ts->esi);
	game::sub_4D7B30(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x2C);
	retn(mv, &ts->esp, 0x10);

loc_4D7D22:
	mov(&ts->ecx, ts->esi);
	game::sub_4A4FB0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x2C);
	retn(mv, &ts->esp, 0x10);

loc_4D7D31:
	cmp(&ts->eflags, ts->eax, 0xC98356BA);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4D7FC2;
    }
	if (ts->eflags.zero) {
        goto loc_4D7D63;
    }
	cmp(&ts->eflags, ts->eax, 0xC519BFBF);
	if (ts->eflags.zero) {
        goto loc_4D800D;
    }
	cmp(&ts->eflags, ts->eax, 0xC519BFC0);
	if (!ts->eflags.zero) {
        goto loc_4D8014;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_4A5090(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x2C);
	retn(mv, &ts->esp, 0x10);

loc_4D7D63:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x74, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4D7E39;
    }
	mov(mv, &ts->eax, x86::mem(0x8650B8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x14, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4D7E39;
    }
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4D7E39;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x79053C);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x790590);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537D40(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4D7DE3;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79053C);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x790590);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537C60(ts, mv);
	add(&ts->esp, 0x10);

loc_4D7DE3:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x7905F8);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x790584);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537D40(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4D7E39;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x7905F8);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x790584);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537C60(ts, mv);
	add(&ts->esp, 0x10);

loc_4D7E39:
	mov(mv, &ts->ecx, x86::mem(0x8384C4, 4));
	game::sub_52CDD0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xCC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D7E59;
    }
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x28, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	goto loc_4D7E5F;

loc_4D7E59:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7FB718, 4));

loc_4D7E5F:
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xD8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xF4, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xDC, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	game::sub_51D730(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xE0, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xF4, 4));
	add(&ts->esp, 0x8);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xE4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_495540(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xE0, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xF0, 4));
	add(&ts->esp, 0x4);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_495590(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xE4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xF0, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_495540(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8900B4, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(0x890118, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->eax);
	game::sub_5EEF60(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D7F03;
    }
	movsx(mv, &ts->edi, x86::mem(ts->eax + 0x9, 1));
	goto loc_4D7F08;

loc_4D7F03:
	mov(&ts->edi, 0xFFFFFFFE);

loc_4D7F08:
	mov(mv, &ts->ecx, x86::mem(0x890118, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0xBE8, 4));
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4D7F1B;
    }
	mov(&ts->edi, ts->eax);

loc_4D7F1B:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7909FC);
	push(mv, &ts->esp, ts->edx);
	game::sub_537BE0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xF8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xF8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x7909F8);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537BE0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xCC, 4));
	add(&ts->esp, 0x1C);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D7F63;
    }
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x28, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	goto loc_4D7F69;

loc_4D7F63:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7FB718, 4));

loc_4D7F69:
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0xD8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784264, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	game::__ftol2(ts, mv);
	push(mv, &ts->esp, 0x4);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	game::sub_577240(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x100, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537BE0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_52CEC0(ts, mv);
	add(&ts->esp, 0x14);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x2C);
	retn(mv, &ts->esp, 0x10);

loc_4D7FC2:
	cmp(&ts->eflags, ts->eax, 0xD97360E9);
	if (ts->eflags.zero) {
        goto loc_4D7FDF;
    }
	cmp(&ts->eflags, ts->eax, 0xD9FEEC59);
	if (!ts->eflags.zero) {
        goto loc_4D8014;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_4A4DD0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x2C);
	retn(mv, &ts->esp, 0x10);

loc_4D7FDF:
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x74, 1));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79053C);
	mov(mv, x86::mem(ts->esi + 0x75, 1), ts->cl);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->edi);
	game::sub_537C60(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x74, 1));
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4D8014;
    }

loc_4D800D:
	mov(&ts->ecx, ts->esi);
	game::sub_4A5200(ts, mv);

loc_4D8014:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x2C);
	retn(mv, &ts->esp, 0x10);
}

void sub_4D8030(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2CD0, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4D8059;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2CC4, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x8A3288);
	mov(mv, x86::mem(ts->esi + 0x2CD0, 4), ts->ebx);
	game::sub_63AE00(ts, mv);

loc_4D8059:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x2CD4, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4D8078;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x2CC8, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x8A3288);
	mov(mv, x86::mem(ts->esi + 0x2CD4, 4), ts->ebx);
	game::sub_63AE00(ts, mv);

loc_4D8078:
	mov(mv, &ts->eax, x86::mem(0x836408, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0xF, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_4D80AB;
    }
	cmp(mv, &ts->eflags, x86::mem(0x83640C, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_4D80A6;
    }
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x8A3288);
	game::sub_63AE00(ts, mv);
	mov(mv, x86::mem(0x836408, 4), ts->ebx);
	mov(mv, x86::mem(0x83640C, 1), ts->bl);
	goto loc_4D80AB;

loc_4D80A6:
	mov(mv, x86::mem(ts->esp + 0xF, 1), 0x1);

loc_4D80AB:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x2CCC, 4), ts->ebx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	if (!ts->eflags.zero) {
        goto loc_4D80C3;
    }
	mov(mv, x86::mem(ts->esi + 0x2CE0, 4), 0x1);
	goto loc_4D80D5;

loc_4D80C3:
	mov(mv, &ts->edi, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x10, 4));
	xor_(&ts->ecx, ts->ecx);
	cmp(&ts->eflags, ts->edx, ts->edi);
	setnz(ts->eflags, &ts->cl);
	mov(mv, x86::mem(ts->esi + 0x2CE0, 4), ts->ecx);

loc_4D80D5:
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0xF, 1), ts->bl);
	push(mv, &ts->esp, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D8105;
    }
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x23D0, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_413440(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->edi);
	game::sub_639CE0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x2CD8, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);

loc_4D8105:
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x900, 4));
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x2CD8, 1), ts->bl);
	game::sub_413440(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->edi);
	game::sub_639CE0(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x2CDC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x2CD0, 4), 0x1);
	mov(&ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4D8142;
    }
	mov(&ts->eax, 0x2);

loc_4D8142:
	cmp(mv, &ts->eflags, x86::mem(ts->esi, 4), 0x2);
	if (!ts->eflags.zero) {
        goto loc_4D814A;
    }
	add(&ts->eax, 0x2);

loc_4D814A:
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_61C280(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x8A3288);
	game::sub_63BC70(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, 0x8A3288);
	mov(mv, x86::mem(ts->esi + 0x2CC4, 4), ts->eax);
	game::sub_63BCD0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);
}

void sub_4D8180(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2CD0, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4D81EB;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2CC4, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x8A3288);
	game::sub_61CA10(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D81EB;
    }
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x900, 4));
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x11F0, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_413440(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->edi);
	game::sub_639CE0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x2CC4, 4));
	mov(mv, x86::mem(ts->esi + 0x2CC8, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x2CC4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x2CD0, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x2CD4, 4), 0x1);
	pop(mv, &ts->esp, ts->edi);

loc_4D81EB:
	mov(mv, &ts->eax, x86::mem(0x836408, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4D8213;
    }
	cmp(mv, &ts->eflags, x86::mem(0x83640C, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_4D8213;
    }
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x8A3288);
	game::sub_63AE00(ts, mv);
	mov(mv, x86::mem(0x836408, 4), ts->ebx);
	mov(mv, x86::mem(0x83640C, 1), ts->bl);

loc_4D8213:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_4D8220(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2CCC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4D8250;
    }
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x1AE0, 4));
	game::sub_413440(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x2CC0, 4));
	mov(mv, x86::mem(0x836408, 4), ts->ecx);
	mov(mv, x86::mem(0x83640C, 1), 0x0);

loc_4D8250:
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x11F0, 4));
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_413440(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->edi);
	game::sub_639CE0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2CC8, 4));
	mov(mv, x86::mem(ts->esi + 0x2CC0, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2CDC, 4));
	xor_(&ts->ecx, ts->ecx);
	test(&ts->eflags, ts->eax, ts->eax);
	setz(ts->eflags, &ts->cl);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x2CD4, 4), 0x0);
	mov(mv, x86::mem(ts->esi + 0x2CCC, 4), 0x1);
	mov(mv, x86::mem(ts->esi + 0x2CDC, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4D82B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::std__strstreambuf___strstreambuf_void_(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4D82C8;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4D82C8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4D82D0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x24);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x234, 4));
	push(mv, &ts->esp, ts->edi);
	game::sub_4D8180(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x13C, 4));
	xor_(&ts->ebx, ts->ebx);
	dec(&ts->eax);
	mov(mv, x86::mem(ts->esp + 0xF, 1), ts->bl);
	mov(mv, x86::mem(ts->esp + 0xE, 1), ts->bl);
	mov(&ts->edi, 0x1);
	if (ts->eflags.zero) {
        goto loc_4D85F8;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D843D;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4D86F0;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x162, 1), ts->bl);
	mov(&ts->ecx, 0x2);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_4D83A8;
    }
	mov(mv, x86::mem(ts->esi + 0x128, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x124, 4), 0x3F000000);
	mov(mv, &ts->eax, x86::mem(0x8363F0, 4));
	mov(mv, x86::mem(ts->esi + 0x150, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x148, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x14C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x13C, 4), ts->ecx);
	push(mv, &ts->esp, 0x17);
	if (!ts->eflags.zero) {
        goto loc_4D8369;
    }
	push(mv, &ts->esp, 0x5);
	goto loc_4D836B;

loc_4D8369:
	push(mv, &ts->esp, 0x4);

loc_4D836B:
	game::sub_51DE30(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x148, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x144, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	add(&ts->ecx, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + (ts->ecx*4) + 0x20, 4));
	add(&ts->esp, 0x8);
	xor_(&ts->eax, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x140, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x163, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x164, 1), ts->bl);
	mov(&ts->ecx, 0x2);

loc_4D83A8:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x161, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_4D86F0;
    }
	mov(mv, x86::mem(ts->esi + 0x128, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x124, 4), 0x3F000000);
	mov(mv, &ts->eax, x86::mem(0x8363F0, 4));
	mov(mv, x86::mem(ts->esi + 0x150, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x148, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x14C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x13C, 4), ts->ecx);
	push(mv, &ts->esp, 0x17);
	if (!ts->eflags.zero) {
        goto loc_4D83EB;
    }
	push(mv, &ts->esp, 0x5);
	goto loc_4D83ED;

loc_4D83EB:
	push(mv, &ts->esp, 0x4);

loc_4D83ED:
	game::sub_51DE30(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x148, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x144, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->eax*2), 4));
	add(&ts->ecx, ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->esp + (ts->ecx*4) + 0x20, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x68, 4));
	xor_(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x140, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x68, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + (ts->ecx*8) + 0x58, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x68, 4));
	mov(mv, x86::mem(ts->esi + (ts->edx*8) + 0x5C, 4), ts->edi);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	add(&ts->esp, 0x8);
	xor_(&ts->eax, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x164, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x163, 1), ts->bl);
	goto loc_4D86F0;

loc_4D843D:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865198, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x3F800000);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x128, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x124, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	mov(mv, x86::mem(ts->esi + 0x128, 4), ts->eax);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4D8496;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x124, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4D8496;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x124, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	goto loc_4D85C2;

loc_4D8496:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x140, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x234, 4));
	mov(mv, x86::mem(ts->esi + 0x144, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x2CD0, 4));
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	setz(ts->eflags, &ts->al);
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax) + 0x1, 4));
	mov(mv, x86::mem(ts->esi + 0x13C, 4), ts->eax);
	mov(mv, x86::mem(0x83640C, 1), 0x1);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	xor_(&ts->ecx, ts->edi);
	mov(mv, &ts->edx, x86::mem(ts->esi + (ts->ecx*4) + 0x4C, 4));
	mov(mv, x86::mem(ts->edx + 0xB64, 4), ts->ebx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x162, 1));
	cmp(&ts->eflags, ts->al, ts->bl);
	if (!ts->eflags.zero) {
        goto loc_4D8585;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x161, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto loc_4D8581;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + (ts->eax*4) + 0x4C, 4));
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(0x8A1CCC, 4));
	imul(&ts->edi, ts->edi, 0x890);
	mov(mv, &ts->al, x86::mem(ts->edi + (ts->ecx) + 0x88A, 1));
	add(&ts->edi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x154, 4));
	cmp(&ts->eflags, ts->al, ts->bl);
	setnz(ts->eflags, &ts->dl);
	movzx(&ts->eax, ts->dl);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x154, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D8560;
    }
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*2), 4));
	shl(&ts->eax, 0x4);
	add(&ts->eax, 0x7F6088);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x2C, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x28, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x24, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x1C, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x14, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x118, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_4533B0(ts, mv);

loc_4D8560:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x840, 4));
	xor_(&ts->ecx, ts->ecx);
	cmp(&ts->eflags, ts->eax, 0x8);
	setz(ts->eflags, &ts->cl);
	mov(mv, x86::mem(ts->esi + 0x5C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x64, 4), ts->ebx);
	mov(&ts->edi, 0x1);
	mov(mv, x86::mem(ts->esi + 0x158, 4), ts->ecx);
	goto loc_4D85A2;

loc_4D8581:
	cmp(&ts->eflags, ts->al, ts->bl);
	if (ts->eflags.zero) {
        goto loc_4D8593;
    }

loc_4D8585:
	mov(mv, x86::mem(ts->esi + 0x5C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x64, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x162, 1), ts->bl);
	goto loc_4D85A2;

loc_4D8593:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x68, 4));
	xor_(&ts->edx, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x161, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + (ts->edx*8) + 0x5C, 4), ts->ebx);

loc_4D85A2:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x234, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x2CD8, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_4D85C2;
    }
	lea(mv, &ts->eax, x86::mem(ts->ecx + 0x23D0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x13C, 4), ts->edi);
	game::sub_4D8030(ts, mv);

loc_4D85C2:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14C, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78AF80, 4));
	if (!ts->eflags.zero) {
        goto loc_4D85E7;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x150, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8363F0, 4));
	goto loc_4D86F0;

loc_4D85E7:
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x150, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8363F0, 4));
	goto loc_4D86F0;

loc_4D85F8:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x234, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x2CD4, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4D86F0;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x2CE0, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edx);
	game::sub_4D8220(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x14, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4D867B;
    }
	mov(mv, x86::mem(ts->esi + 0x128, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x124, 4), 0x3F000000);
	mov(mv, &ts->eax, x86::mem(0x8363F0, 4));
	mov(mv, x86::mem(ts->esi + 0x150, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x148, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x14C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x13C, 4), 0x2);
	push(mv, &ts->esp, 0x17);
	if (!ts->eflags.zero) {
        goto loc_4D866A;
    }
	push(mv, &ts->esp, 0x5);
	game::sub_51DE30(ts, mv);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->esp + 0xF, 1), 0x1);
	goto loc_4D86F0;

loc_4D866A:
	push(mv, &ts->esp, 0x4);
	game::sub_51DE30(ts, mv);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->esp + 0xF, 1), 0x1);
	goto loc_4D86F0;

loc_4D867B:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x164, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto loc_4D869E;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x163, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto loc_4D869E;
    }
	mov(mv, x86::mem(0x83640C, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x13C, 4), 0x3);
	goto loc_4D86EB;

loc_4D869E:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x148, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x128, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x124, 4), 0x3F000000);
	mov(mv, &ts->ecx, x86::mem(0x8363F0, 4));
	mov(mv, x86::mem(ts->esi + 0x150, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x14C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x13C, 4), 0x2);
	push(mv, &ts->esp, 0x17);
	if (!ts->eflags.zero) {
        goto loc_4D86DA;
    }
	push(mv, &ts->esp, 0x5);
	goto loc_4D86DC;

loc_4D86DA:
	push(mv, &ts->esp, 0x4);

loc_4D86DC:
	game::sub_51DE30(ts, mv);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(0x83640C, 1), 0x1);

loc_4D86EB:
	mov(mv, x86::mem(ts->esp + 0xE, 1), 0x1);

loc_4D86F0:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8363F0, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78450C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4D8715;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8363F0, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78450C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8363F0, 4));

loc_4D8715:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8363F0, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4D873A;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8363F0, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78450C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8363F0, 4));

loc_4D873A:
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0xF, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_4D87E5;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x234, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x2CCC, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4D87E5;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4D87E5;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x164, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto loc_4D8771;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x163, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_4D877D;
    }

loc_4D8771:
	mov(mv, x86::mem(ts->esi + 0x164, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x163, 1), ts->bl);

loc_4D877D:
	mov(&ts->eax, 0x2);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x148, 4));
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2), 4));
	add(mv, &ts->edx, x86::mem(ts->esi + 0x144, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->edi);
	mov(mv, &ts->eax, x86::mem(ts->esp + (ts->edx*4) + 0x18, 4));
	mov(mv, x86::mem(ts->esi + 0x140, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	xor_(&ts->eax, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + (ts->eax*4) + 0x4C, 4));
	game::sub_63A650(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + (ts->ecx*4) + 0x4C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x140, 4));
	mov(mv, x86::mem(ts->edx + 0xB78, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + (ts->ecx*4) + 0x4C, 4));
	mov(mv, x86::mem(ts->edx + 0xB64, 4), ts->edi);

loc_4D87E5:
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0xE, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_4D88C1;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x234, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x2CCC, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4D88C1;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4D88C1;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x164, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto loc_4D884B;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x163, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto loc_4D884B;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + (ts->eax*4) + 0x4C, 4));
	game::sub_63A650(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + (ts->ecx*4) + 0x4C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x144, 4));
	mov(mv, x86::mem(ts->edx + 0xB78, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + (ts->ecx*4) + 0x4C, 4));
	mov(mv, x86::mem(ts->edx + 0xB64, 4), ts->edi);
	goto loc_4D88C1;

loc_4D884B:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x144, 4));
	mov(&ts->eax, 0x2);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x148, 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*2), 4));
	add(&ts->eax, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->edi);
	mov(mv, &ts->edx, x86::mem(ts->esp + (ts->eax*4) + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	xor_(&ts->eax, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x164, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x163, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x140, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + (ts->eax*4) + 0x4C, 4));
	game::sub_63A650(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + (ts->eax*4) + 0x4C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x140, 4));
	mov(mv, x86::mem(ts->ecx + 0xB78, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + (ts->eax*4) + 0x4C, 4));
	mov(mv, x86::mem(ts->ecx + 0xB64, 4), ts->edi);

loc_4D88C1:
	mov(mv, &ts->eax, x86::mem(0x837AA0, 4));
	mov(mv, &ts->edx, x86::mem(0x8651AC, 4));
	sub(&ts->edx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->esp + 0xF, 1), 0x1);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7F45D4, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.zero) {
        goto loc_4D88F2;
    }
	mov(mv, x86::mem(ts->esp + 0xF, 1), ts->bl);

loc_4D88F2:
	game::sub_510C30(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D88FF;
    }
	xor_(&ts->al, ts->al);
	goto loc_4D8903;

loc_4D88FF:
	mov(mv, &ts->al, x86::mem(ts->esp + 0xF, 1));

loc_4D8903:
	mov(mv, &ts->cl, x86::mem(0x8363FC, 1));
	cmp(&ts->eflags, ts->cl, ts->bl);
	if (!ts->eflags.zero) {
        goto loc_4D8919;
    }
	cmp(&ts->eflags, ts->al, ts->bl);
	if (ts->eflags.zero) {
        goto loc_4D8919;
    }
	mov(&ts->cl, 0x1);
	mov(mv, x86::mem(0x8363FC, 1), ts->cl);

loc_4D8919:
	cmp(mv, &ts->eflags, x86::mem(0x8363F4, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto loc_4D89DA;
    }
	cmp(&ts->eflags, ts->cl, ts->bl);
	if (ts->eflags.zero) {
        goto loc_4D89DA;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x118, 4));
	game::sub_444DC0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, &ts->eax, x86::mem(0x7FB708, 4));
	if (!ts->eflags.zero) {
        goto loc_4D8946;
    }
	mov(mv, x86::mem(0x83592C, 4), ts->eax);

loc_4D8946:
	mov(mv, &ts->edi, x86::mem(0x83592C, 4));
	mov(mv, &ts->edx, x86::mem(0x7F45D0, 4));
	mov(&ts->ecx, ts->eax);
	sub(&ts->ecx, ts->edi);
	cmp(&ts->eflags, ts->ecx, ts->edx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4D89D4;
    }
	mov(mv, x86::mem(0x83592C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x836400, 4));
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0x31);
	mov(mv, x86::mem(0x836400, 4), ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4D8976;
    }
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x836400, 4), ts->eax);

loc_4D8976:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x154, 4));
	imul(&ts->edx, ts->edx, 0x31);
	add(&ts->edx, ts->eax);
	imul(&ts->edx, ts->edx, 0x3C);
	cmp(mv, &ts->eflags, x86::mem(ts->edx + 0x7F4608, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto loc_4D89B8;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_4D8990:
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0x31);
	mov(mv, x86::mem(0x836400, 4), ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4D89A2;
    }
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x836400, 4), ts->eax);

loc_4D89A2:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x154, 4));
	imul(&ts->ecx, ts->ecx, 0x31);
	add(&ts->ecx, ts->eax);
	imul(&ts->ecx, ts->ecx, 0x3C);
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x7F4608, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_4D8990;
    }

loc_4D89B8:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x154, 4));
	imul(&ts->edx, ts->edx, 0x31);
	add(&ts->edx, ts->eax);
	imul(&ts->edx, ts->edx, 0x3C);
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x7F4610, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_4A5BD0(ts, mv);

loc_4D89D4:
	mov(mv, x86::mem(ts->esi + 0x167, 1), ts->bl);

loc_4D89DA:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x167, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto loc_4D89FD;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x23C, 4));
	game::sub_4A5660(ts, mv);
	cmp(&ts->eflags, ts->al, ts->bl);
	mov(mv, x86::mem(ts->esi + 0x165, 1), ts->al);
	if (ts->eflags.zero) {
        goto loc_4D89FD;
    }
	mov(mv, x86::mem(ts->esi + 0x166, 1), ts->bl);

loc_4D89FD:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x165, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_4D8A2A;
    }
	cmp(mv, &ts->eflags, x86::mem(0x8363FC, 1), ts->bl);
	mov(mv, &ts->ecx, x86::mem(0x8651AC, 4));
	mov(mv, x86::mem(0x837AA0, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4D8A2A;
    }
	mov(mv, x86::mem(0x8363FC, 1), ts->bl);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x118, 4));
	game::sub_453380(ts, mv);

loc_4D8A2A:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x1C8, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4D8A4D;
    }
	mov(&ts->ecx, 0x8357E0);
	game::nullsub_1(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x865198, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x8357E0);
	game::sub_492E10(ts, mv);

loc_4D8A4D:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x118, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x30, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4D8A85;
    }
	cmp(mv, &ts->eflags, x86::mem(0x8363FC, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto loc_4D8A85;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x248, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865198, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787590, 4));
	fmulp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x274, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x274, 4));
	goto loc_4D8B2A;

loc_4D8A85:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865198, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x128, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x124, 4));
	mov(mv, x86::mem(ts->esi + 0x128, 4), ts->ecx);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4D8AD5;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x124, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4D8AD5;
    }
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x124, 4));

loc_4D8AD5:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x138, 1));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	cmp(&ts->eflags, ts->al, ts->bl);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x120, 4));
	if (!ts->eflags.zero) {
        goto loc_4D8AEF;
    }
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x11C, 4));
	goto loc_4D8AF5;

loc_4D8AEF:
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x11C, 4));

loc_4D8AF5:
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x274, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x130, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x12C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7F45A4, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4D8B2A;
    }
	cmp(mv, &ts->eflags, x86::mem(0x8363FC, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto loc_4D8B2A;
    }
	mov(mv, x86::mem(ts->esi + 0x167, 1), ts->bl);

loc_4D8B2A:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x274, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78450C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4D8B4F;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x274, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78450C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x274, 4));

loc_4D8B4F:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x274, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4D8B74;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x274, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78450C, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x274, 4));

loc_4D8B74:
	cmp(mv, &ts->eflags, x86::mem(0x8A1CD0, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4D8BB4;
    }
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x2);

loc_4D8B87:
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x10, 4));
	add(&ts->ecx, 0x10);
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_4D8BA0;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ebx);
	game::sub_639CE0(ts, mv);

loc_4D8BA0:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	add(&ts->edi, 0x4);
	dec(&ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4D8B87;
    }
	mov(mv, x86::mem(0x8A1CD0, 4), ts->ebx);

loc_4D8BB4:
	mov(&ts->ecx, ts->esi);
	game::sub_4A6030(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0xB78, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_4A6670(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x50, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xB78, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_4A6670(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_4C1BA0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x170, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x274, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto loc_4D8C3E;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x16C, 1), ts->bl);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x274, 4));
	mov(mv, x86::mem(ts->esi + 0x170, 4), ts->edx);
	if (!ts->eflags.zero) {
        goto loc_4D8C27;
    }
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	push(mv, &ts->esp, 0x49);
	game::sub_458520(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x16C, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x16D, 1), ts->bl);

loc_4D8C27:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x248, 4));
	pop(mv, &ts->esp, ts->edi);
	fabs(&ts->fp, x86::fp_index(0));
	pop(mv, &ts->esp, ts->esi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7EC858, 4));
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x24);
	retn(mv, &ts->esp, 0x4);

loc_4D8C3E:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x16D, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto loc_4D8C60;
    }
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	push(mv, &ts->esp, 0x49);
	game::sub_458560(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x16D, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x16C, 1), ts->bl);

loc_4D8C60:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x24);
	retn(mv, &ts->esp, 0x4);
}

void sub_4D8C70(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x20);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x2C, 4));
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x234, 4));
	push(mv, &ts->esp, ts->edi);
	game::sub_4D8030(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(mv, &ts->ecx, x86::mem(0x8A1CCC, 4));
	imul(&ts->eax, ts->eax, 0x890);
	add(&ts->eax, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x790400);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1B4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	add(&ts->esp, 0x1C);
	cmp(&ts->eflags, ts->eax, 0x1);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x13C45E);
	push(mv, &ts->esp, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4D8CE3;
    }
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	goto loc_4D8CEE;

loc_4D8CE3:
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);

loc_4D8CEE:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x3C, 4));
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_4A5F30(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x13C, 4), 0x3);
	if (!ts->eflags.zero) {
        goto loc_4D8D11;
    }
	mov(mv, x86::mem(ts->esi + 0x13C, 4), 0x1);

loc_4D8D11:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp, 0x8);
}

void sub_4D8D20(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0x32C72D8F);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4D8E03;
    }
	if (ts->eflags.zero) {
        goto loc_4D8DF1;
    }
	cmp(&ts->eflags, ts->eax, 0xC330D44);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4D8DA9;
    }
	if (ts->eflags.zero) {
        goto loc_4D8D8E;
    }
	cmp(&ts->eflags, ts->eax, 0xB7FC3E);
	if (ts->eflags.zero) {
        goto loc_4D8D80;
    }
	cmp(&ts->eflags, ts->eax, 0xA110B22);
	if (ts->eflags.zero) {
        goto loc_4D8D68;
    }
	cmp(&ts->eflags, ts->eax, 0xAD4BBDC);
	if (!ts->eflags.zero) {
        goto loc_4D8EB2;
    }
	mov(mv, x86::mem(ts->esi + 0x1C8, 4), 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4D8D68:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0xB64, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x50, 4));
	mov(mv, x86::mem(ts->edx + 0xB64, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4D8D80:
	mov(mv, x86::mem(ts->esi + 0x1D0, 4), 0x0);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4D8D8E:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	mov(&ts->eax, 0x1);
	mov(mv, x86::mem(ts->ecx + 0xB64, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x50, 4));
	mov(mv, x86::mem(ts->edx + 0xB64, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4D8DA9:
	cmp(&ts->eflags, ts->eax, 0xE550F66);
	if (ts->eflags.zero) {
        goto loc_4D8DE6;
    }
	cmp(&ts->eflags, ts->eax, 0x18883F75);
	if (ts->eflags.zero) {
        goto loc_4D8DD8;
    }
	cmp(&ts->eflags, ts->eax, 0x2401CD38);
	if (!ts->eflags.zero) {
        goto loc_4D8EB2;
    }
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x1CC, 4), 0x1);
	game::sub_4A77A0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4D8DD8:
	mov(mv, x86::mem(ts->esi + 0x1C8, 4), 0x0);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4D8DE6:
	mov(mv, x86::mem(ts->esi + 0x162, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4D8DF1:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x32C72D8F);
	mov(&ts->ecx, ts->esi);
	game::sub_4A7330(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4D8E03:
	cmp(&ts->eflags, ts->eax, 0x8EFAA777);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4D8E73;
    }
	if (ts->eflags.zero) {
        goto loc_4D8E65;
    }
	cmp(&ts->eflags, ts->eax, 0x56AA7E46);
	if (ts->eflags.zero) {
        goto loc_4D8E50;
    }
	cmp(&ts->eflags, ts->eax, 0x645E01DF);
	if (ts->eflags.zero) {
        goto loc_4D8E3B;
    }
	cmp(&ts->eflags, ts->eax, 0x6C6603DF);
	if (!ts->eflags.zero) {
        goto loc_4D8EB2;
    }
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x1CC, 4), 0x0);
	game::sub_4A77C0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4D8E3B:
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x1D4, 4), 0x1);
	game::sub_4A77F0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4D8E50:
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x1D4, 4), 0x0);
	game::sub_4A77F0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4D8E65:
	mov(mv, x86::mem(ts->esi + 0x1D0, 4), 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4D8E73:
	cmp(&ts->eflags, ts->eax, 0xC98356BA);
	if (ts->eflags.zero) {
        goto loc_4D8E8F;
    }
	cmp(&ts->eflags, ts->eax, 0xFC946BFA);
	if (!ts->eflags.zero) {
        goto loc_4D8EB2;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_4A7330(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4D8E8F:
	push(mv, &ts->esp, 0xC98356BA);
	mov(&ts->ecx, ts->esi);
	game::sub_4D82D0(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_4A5D90(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + (ts->eax*4) + 0x4C, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_4A79D0(ts, mv);
	add(&ts->esp, 0x4);

loc_4D8EB2:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);
}

void sub_4D8EC0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x10, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->esi);
	game::sub_4A7830(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->esi, 0x1);
	mov(&ts->edi, ts->eax);
	mov(&ts->esi, 0x836750);
	if (ts->eflags.zero) {
        goto loc_4D8EE2;
    }
	mov(&ts->esi, 0x8371B0);

loc_4D8EE2:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_413440(ts, mv);
	cmp(&ts->eflags, ts->esi, 0x8371B0);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xC, 4));
	if (!ts->eflags.zero) {
        goto loc_4D8EFF;
    }
	mov(mv, x86::mem(0x83623C, 4), ts->eax);
	goto loc_4D8F0C;

loc_4D8EFF:
	cmp(&ts->eflags, ts->esi, 0x836750);
	if (!ts->eflags.zero) {
        goto loc_4D8F0C;
    }
	mov(mv, x86::mem(0x836234, 4), ts->eax);

loc_4D8F0C:
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4D8F19;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	game::sub_4D8C70(ts, mv);

loc_4D8F19:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);
}

void sub_4D8F20(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x774B3E);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	game::sub_551DE0(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	xor_(&ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esi, 4), 0x7964F4);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->eax);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x7964E8);
	mov(mv, x86::mem(ts->esi + 0x5C, 4), ts->ebx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x7964DC);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x64, 4));
	mov(mv, x86::mem(ts->esp + 0x2C, 1), 0x1);
	game::sub_5435D0(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x14, 1), 0x2);
	mov(mv, x86::mem(ts->esi + 0xCC, 4), ts->ebx);
	game::sub_50D510(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D8F9F;
    }
	game::sub_4A8630(ts, mv);

loc_4D8F9F:
	mov(mv, x86::mem(ts->esi + 0xCC, 4), ts->ebx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(0x83A9D0, 4), 0x1);
	game::sub_4A7A50(ts, mv);
	push(mv, &ts->esp, 0x78FCD8);
	push(mv, &ts->esp, 0xC330D44);
	game::sub_55DDA0(ts, mv);
	push(mv, &ts->esp, 0x7906DC);
	push(mv, &ts->esp, 0xC330D44);
	game::sub_55DDA0(ts, mv);
	push(mv, &ts->esp, 0x78FCD8);
	push(mv, &ts->esp, 0x6C6603DF);
	mov(mv, x86::mem(ts->esi + 0x8, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0xD0, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0xD1, 1), ts->bl);
	game::sub_55DDA0(ts, mv);
	push(mv, &ts->esp, 0x78FCD8);
	push(mv, &ts->esp, 0x56AA7E46);
	game::sub_55DDA0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	add(&ts->esp, 0x20);
	push(mv, &ts->esp, ts->ebx);
	cmp(&ts->eflags, ts->eax, 0x8);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x5FD1F82F);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->esi + 0xDC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xE0, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x5C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->ebx);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_774B20:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

loc_774B28:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x4C);
	goto sub_479100;

loc_774B33:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x64);
	goto sub_52EA90;

SEH_4D8F20:
	mov(&ts->eax, 0x7E0800);
	goto ___CxxFrameHandler;
}

void sub_4D9050(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x774B3E);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x7964F4);
	push(mv, &ts->esp, 0x78FCD8);
	push(mv, &ts->esp, 0x645E01DF);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x2);
	game::sub_55DDA0(ts, mv);
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_5379A0(ts, mv);
	add(&ts->esp, 0xC);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x64, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 1), 0x1);
	game::sub_52EA90(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 1), 0x0);
	game::sub_479100(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	game::sub_510D40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_774B20:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

loc_774B28:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x4C);
	goto sub_479100;

loc_774B33:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x64);
	goto sub_52EA90;

SEH_4D8F20:
	mov(&ts->eax, 0x7E0800);
	goto ___CxxFrameHandler;
}

void sub_4D90D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77389B);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x8FC);
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x8, 4));
	cmp(&ts->eflags, ts->edx, 0x9120409E);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x54, 4));
	if (!ts->eflags.zero) {
        goto loc_4D9121;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D910F;
    }
	add(&ts->eax, 0xFFFFFFF0);
	goto loc_4D9111;

loc_4D910F:
	xor_(&ts->eax, ts->eax);

loc_4D9111:
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D914C;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x14, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D9147;
    }
	add(&ts->eax, 0xFFFFFFF0);
	goto loc_4D9149;

loc_4D9121:
	cmp(&ts->eflags, ts->edx, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_4D914C;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x50, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D9135;
    }
	add(&ts->eax, 0xFFFFFFF0);
	goto loc_4D9137;

loc_4D9135:
	xor_(&ts->eax, ts->eax);

loc_4D9137:
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D914C;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x10, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D9147;
    }
	add(&ts->eax, 0xFFFFFFF0);
	goto loc_4D9149;

loc_4D9147:
	xor_(&ts->eax, ts->eax);

loc_4D9149:
	mov(mv, x86::mem(ts->edi + 0x54, 4), ts->eax);

loc_4D914C:
	cmp(mv, &ts->eflags, ts->ecx, x86::mem(ts->edi + 0x54, 4));
	if (ts->eflags.zero) {
        goto loc_4D92DD;
    }
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x5);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, ts->edx);
	game::sub_50D260(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_51DE60(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x54, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x918, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x844, 4));
	add(&ts->esp, 0x14);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4D91E7;
    }
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x840, 4));
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4D91A5;
    }
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	goto loc_4D91CA;

loc_4D91A5:
	push(mv, &ts->esp, 0x7906DC);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4D91D6;
    }
	push(mv, &ts->esp, 0x7906DC);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D91D6;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4C, 4));

loc_4D91CA:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D91D6;
    }
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->eax);
	game::sub_4A5EE0(ts, mv);

loc_4D91D6:
	mov(mv, &ts->ecx, x86::mem(0x8651AC, 4));
	mov(mv, x86::mem(ts->edi + 0xCC, 4), ts->ecx);
	goto loc_4D92C4;

loc_4D91E7:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	game::sub_40C910(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x54, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x918, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x840, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, x86::mem(ts->esp + 0x91C, 4), 0x0);
	game::sub_610270(ts, mv);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	game::sub_61C280(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	game::sub_637190(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	game::sub_6371E0(ts, mv);
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4D9259;
    }
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->esi, ts->eax);
	goto loc_4D9282;

loc_4D9259:
	push(mv, &ts->esp, 0x7906DC);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4D9280;
    }
	push(mv, &ts->esp, 0x7906DC);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D9280;
    }
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x4C, 4));
	goto loc_4D9282;

loc_4D9280:
	xor_(&ts->esi, ts->esi);

loc_4D9282:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x8371B0);
	game::sub_413440(ts, mv);
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(0x83623C, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4D92AD;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x8371B0);
	mov(&ts->ecx, ts->esi);
	game::sub_4D8C70(ts, mv);

loc_4D92AD:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x394, 4));
	mov(mv, x86::mem(ts->esp + 0x90C, 4), 0xFFFFFFFF);
	game::nullsub_1(ts, mv);

loc_4D92C4:
	mov(&ts->ecx, ts->edi);
	game::sub_4A7A50(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x54, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x920, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x64, 4));
	game::sub_538700(ts, mv);

loc_4D92DD:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x904, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_773890:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x900, 4));
	goto sub_401800;

SEH_4D9800:
	mov(&ts->eax, 0x7DFA94);
	goto ___CxxFrameHandler;
}

void sub_4D9300(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x6C839FBE);
	push(mv, &ts->esp, 0x78FC4C);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x933DD695);
	push(mv, &ts->esp, 0x7955E4);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x8202C364);
	push(mv, &ts->esp, 0x7955D4);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x89E7B0, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(&ts->ecx, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_4D9386;
    }
	game::sub_4C2900(ts, mv);
	goto loc_4D938B;

loc_4D9386:
	game::sub_4C2BD0(ts, mv);

loc_4D938B:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_50B8C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4C, 4));
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50B8A0(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->ebx + 0x20, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	jmp(x86::mem(ts->eax + 0x10, 4));
}

void sub_4D93C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776E28);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	game::sub_552780(ts, mv);
	xor_(&ts->ebx, ts->ebx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi, 4), 0x796504);
	mov(mv, x86::mem(ts->esi + 0x150, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x154, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x158, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x14C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x134, 4), 0x8);
	game::sub_4C4BD0(ts, mv);
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4D9447;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_555F10(ts, mv);
	add(&ts->esp, 0x10);

loc_4D9447:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->esi + 0x15B, 1), ts->bl);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_776E20:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto ??1strstreambuf@@UAE@XZ;

SEH_4FBDC0:
	mov(&ts->eax, 0x7E02C0);
	goto ___CxxFrameHandler;
}

void sub_4D9470(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x796504);
	goto ??1strstreambuf@@UAE@XZ;
}

void sub_4D9480(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x774B62);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x836480, 4));
	mov(mv, x86::mem(ts->esp, 4), ts->ecx);
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D94B4;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_4C4C90(ts, mv);

loc_4D94B4:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_774B50:
	push(mv, &ts->esp, 0x796518);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::nullsub_1(ts, mv);
	add(&ts->esp, 0x8);
	retn(mv, &ts->esp);

SEH_4D9480:
	mov(&ts->eax, 0x7E0824);
	goto ___CxxFrameHandler;
}

void sub_4D94D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x790744);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D950C;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x58, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x8, 4));
	if (ts->eflags.zero) {
        goto loc_4D9501;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x4, 4));
	cmp(&ts->eflags, ts->ecx, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_4D9501;
    }
	mov(mv, x86::mem(ts->eax + 0x4C, 4), ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->eax);
	game::sub_4A8480(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4D9501:
	push(mv, &ts->esp, ts->esi);
	game::sub_490130(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4D950C:
	pop(mv, &ts->esp, ts->esi);
	goto sub_490130;
}

void sub_4D9520(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4D953B;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_490130(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), 0x0);

loc_4D953B:
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4D9576;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D9576;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xB08E7468);
	push(mv, &ts->esp, ts->esi);
	game::sub_537A60(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C990(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x4D94D0);
	push(mv, &ts->esp, ts->eax);
	game::sub_494D30(ts, mv);
	add(&ts->esp, 0x18);

loc_4D9576:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4D9580(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x774B7B);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->esi, x86::mem(ts->ebx + 0x4, 4));
	mov(mv, x86::mem(ts->ebx, 4), 0x796524);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi, 4), ts->esi);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x0);
	game::sub_570A30(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*4), 4));
	lea(mv, &ts->eax, x86::mem(0x7FA740, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D95CC;
    }
	mov(mv, &ts->al, x86::mem(ts->eax + 0x8, 1));
	goto loc_4D95D6;

loc_4D95CC:
	game::sub_570A30(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	setnz(ts->eflags, &ts->al);

loc_4D95D6:
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4D9621;
    }
	mov(&ts->edi, 0x7F6620);

loc_4D95E0:
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_4D9614;
    }
	push(mv, &ts->esp, 0x10);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D9605;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	mov(mv, x86::mem(ts->eax, 4), 0x795914);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ecx);
	add(&ts->eax, 0x4);
	goto loc_4D9607;

loc_4D9605:
	xor_(&ts->eax, ts->eax);

loc_4D9607:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);

loc_4D9614:
	add(&ts->edi, 0x4);
	cmp(&ts->eflags, ts->edi, 0x7F6654);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4D95E0;
    }
	goto loc_4D9691;

loc_4D9621:
	game::sub_570A30(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*4), 4));
	lea(mv, &ts->eax, x86::mem(0x7FA740, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D963E;
    }
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x8, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	setz(ts->eflags, &ts->al);
	goto loc_4D9649;

loc_4D963E:
	game::sub_570A30(ts, mv);
	neg(&ts->eax);
	sbb(&ts->al, ts->al);
	inc(&ts->al);

loc_4D9649:
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4D9691;
    }
	mov(&ts->edi, 0x7F65E8);

loc_4D9652:
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_4D9686;
    }
	push(mv, &ts->esp, 0x10);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D9677;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi, 4));
	mov(mv, x86::mem(ts->eax, 4), 0x795914);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ecx);
	add(&ts->eax, 0x4);
	goto loc_4D9679;

loc_4D9677:
	xor_(&ts->eax, ts->eax);

loc_4D9679:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);

loc_4D9686:
	add(&ts->edi, 0x4);
	cmp(&ts->eflags, ts->edi, 0x7F6620);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4D9652;
    }

loc_4D9691:
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	pop(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4D969D;
    }
	lea(mv, &ts->eax, x86::mem(ts->esi - 0x4, 4));
	goto loc_4D969F;

loc_4D969D:
	xor_(&ts->eax, ts->eax);

loc_4D969F:
	mov(mv, x86::mem(ts->ebx + 0xC, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x78EADC);
	game::sub_43DCC0(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4D96D0;
    }
	game::sub_5BF540(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D96CB;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_4D96CD;

loc_4D96CB:
	xor_(&ts->eax, ts->eax);

loc_4D96CD:
	mov(mv, x86::mem(ts->ebx + 0xC, 4), ts->eax);

loc_4D96D0:
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50C8D0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->eax, ts->ebx);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_774B70:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x4);
	goto sub_4358E0;

SEH_4D9580:
	mov(&ts->eax, 0x7E0848);
	goto ___CxxFrameHandler;
}

void sub_4D9700(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4D9720(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4D9718;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4D9718:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4D9720(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x796524);
	add(&ts->ecx, 0x4);
	goto sub_4358E0;
}

void sub_4D9730(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x774BA4);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x10);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4D977B;
    }
	mov(&ts->ecx, ts->eax);
	game::sub_4D9580(ts, mv);
	mov(mv, x86::mem(0x836488, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4D977B:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x836488, 4), ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_774B90:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796528);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4D9730:
	mov(&ts->eax, 0x7E086C);
	goto ___CxxFrameHandler;
}

void sub_4D97A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x774BC4);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x50);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4D97EB;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4C56C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4D97EB:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_774BB0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796538);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4D97A0:
	mov(&ts->eax, 0x7E0890);
	goto ___CxxFrameHandler;
}

void sub_4D9800(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77389B);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x8FC);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	game::sub_543D40(ts, mv);
	cmp(&ts->eflags, ts->esi, 0x251BF83E);
	if (ts->eflags.zero) {
        goto loc_4D98A8;
    }
	cmp(&ts->eflags, ts->esi, 0x3A2BE557);
	if (ts->eflags.zero) {
        goto loc_4D98AF;
    }
	cmp(&ts->eflags, ts->esi, 0x911AB364);
	if (!ts->eflags.zero) {
        goto loc_4D9970;
    }
	mov(mv, &ts->eax, x86::mem(0x836498, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D987E;
    }
	mov(mv, x86::mem(ts->eax + 0xB, 1), 0x0);
	mov(mv, &ts->cl, x86::mem(0x844AD9, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_4D987E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x5C, 4));
	push(mv, &ts->esp, 0x100);
	push(mv, &ts->esp, 0x1);
	game::sub_6FBFCC(ts, mv);

loc_4D987E:
	mov(mv, &ts->eax, x86::mem(0x7F42C0, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x904, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4D98A8:
	mov(&ts->ecx, ts->edi);
	game::sub_4A9360(ts, mv);

loc_4D98AF:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	game::sub_40C910(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x83AAB8, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x83AD90);
	mov(mv, x86::mem(ts->esp + 0x910, 4), 0x0);
	game::sub_503510(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4D9905;
    }
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->esi, ts->eax);
	goto loc_4D992E;

loc_4D9905:
	push(mv, &ts->esp, 0x7906DC);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4D992C;
    }
	push(mv, &ts->esp, 0x7906DC);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4D992C;
    }
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x4C, 4));
	goto loc_4D992E;

loc_4D992C:
	xor_(&ts->esi, ts->esi);

loc_4D992E:
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x8371B0);
	game::sub_413440(ts, mv);
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(0x83623C, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4D9959;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x8371B0);
	mov(&ts->ecx, ts->esi);
	game::sub_4D8C70(ts, mv);

loc_4D9959:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x394, 4));
	mov(mv, x86::mem(ts->esp + 0x90C, 4), 0xFFFFFFFF);
	game::nullsub_1(ts, mv);

loc_4D9970:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x904, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_773890:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x900, 4));
	goto sub_401800;

SEH_4D9800:
	mov(&ts->eax, 0x7DFA94);
	goto ___CxxFrameHandler;
}

void sub_4D9990(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0x6C);
	game::j__malloc(ts, mv);
	xor_(&ts->ecx, ts->ecx);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4D99C9;
    }
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x4, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0x60, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x5C, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x50, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x5, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0x6, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0x8, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x9, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0xA, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0xB, 1), ts->cl);
	mov(mv, x86::mem(ts->eax + 0xC, 1), ts->cl);
	goto loc_4D99CB;

loc_4D99C9:
	xor_(&ts->eax, ts->eax);

loc_4D99CB:
	push(mv, &ts->esp, 0x796564);
	push(mv, &ts->esp, 0x835F78);
	mov(mv, x86::mem(0x836498, 4), ts->eax);
	game::sub_43E000(ts, mv);
	push(mv, &ts->esp, 0x796558);
	push(mv, &ts->esp, 0x836288);
	game::sub_43E000(ts, mv);
	push(mv, &ts->esp, 0x796550);
	push(mv, &ts->esp, 0x8362E4);
	game::sub_43E000(ts, mv);
	push(mv, &ts->esp, 0x796548);
	push(mv, &ts->esp, 0x835BB8);
	game::sub_43E000(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x836498, 4));
	add(&ts->esp, 0x20);
	goto sub_4C5D80;
}

void sub_4D9A20(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x83A9E0);
	game::sub_52A440(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x68, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x783FE5);
	xor_(&ts->ebx, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	game::sub_4C65F0(ts, mv);
	push(mv, &ts->esp, 0x79656C);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->edi);
	game::sub_43DDA0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x68, 4));
	mov(&ts->eax, 0x1);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x4, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x20, 2), ts->bx);
	mov(mv, x86::mem(ts->esi + 0x7, 1), ts->bl);
	mov(mv, &ts->eax, x86::mem(0x8650D0, 4));
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4D9A9A;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x5C, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_6FBF08(ts, mv);

loc_4D9A9A:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4D9AB0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->al, x86::mem(0x844AD9, 1));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x83A9D0);
	mov(mv, x86::mem(ts->esp + 0x13, 1), ts->al);
	game::sub_52A440(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x836498, 4));
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x18, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4D9AF8;
    }
	mov(mv, x86::mem(ts->ecx + 0x14, 4), ts->edi);
	mov(mv, &ts->ecx, x86::mem(0x836498, 4));
	mov(mv, x86::mem(ts->ecx + 0x50, 4), ts->ebx);
	mov(mv, &ts->edx, x86::mem(0x836498, 4));
	mov(mv, x86::mem(ts->edx + 0x1C, 4), ts->ebx);
	mov(mv, &ts->ecx, x86::mem(0x836498, 4));
	mov(mv, x86::mem(ts->ecx + 0x54, 4), ts->eax);

loc_4D9AF8:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x68, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	game::sub_4C65F0(ts, mv);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ebp, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->ebp);
	game::sub_43DDA0(ts, mv);
	push(mv, &ts->esp, 0x10);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x835BB8);
	game::sub_43E030(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x5C, 4));
	add(&ts->esp, 0x18);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, 0x1);
	game::sub_6FBFCC(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x4, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x18, 4), 0x5);
	mov(mv, x86::mem(ts->esi + 0x20, 2), ts->bx);
	mov(mv, x86::mem(ts->esi + 0x7, 1), ts->bl);
	cmp(mv, &ts->eflags, x86::mem(0x8650D0, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4D9B71;
    }
	mov(mv, &ts->dl, x86::mem(ts->esp + 0x13, 1));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x68, 4));
	xor_(&ts->ecx, ts->ecx);
	cmp(&ts->eflags, ts->dl, ts->bl);
	mov(mv, &ts->edx, x86::mem(0x836498, 4));
	setnz(ts->eflags, &ts->cl);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x5C, 4));
	game::sub_6FBFC1(ts, mv);

loc_4D9B71:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);
}

void sub_4D9B80(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x83A9D0);
	game::sub_52A440(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x836498, 4));
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4D9BBD;
    }
	mov(mv, x86::mem(ts->ecx + 0x14, 4), ts->edi);
	mov(mv, &ts->ecx, x86::mem(0x836498, 4));
	mov(mv, x86::mem(ts->ecx + 0x50, 4), ts->ebx);
	mov(mv, &ts->edx, x86::mem(0x836498, 4));
	mov(mv, x86::mem(ts->edx + 0x1C, 4), ts->ebx);
	mov(mv, &ts->ecx, x86::mem(0x836498, 4));
	mov(mv, x86::mem(ts->ecx + 0x54, 4), ts->eax);

loc_4D9BBD:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x68, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x8, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4D9BE2;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x54, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	game::sub_4C65F0(ts, mv);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DDA0(ts, mv);
	add(&ts->esp, 0xC);

loc_4D9BE2:
	push(mv, &ts->esp, 0x10);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x835BB8);
	game::sub_43E030(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_440820(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	add(&ts->esp, 0x14);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x83A9D0);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->eax);
	game::sub_52A450(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x54, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x28, 4));
	mov(mv, x86::mem(ts->eax, 4), 0x10D);
	mov(mv, x86::mem(ts->esi + 0x2C, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x4, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x18, 4), 0x4);
	mov(mv, x86::mem(ts->esi + 0x20, 2), ts->bx);
	mov(mv, x86::mem(ts->esi + 0x7, 1), ts->bl);
	cmp(mv, &ts->eflags, x86::mem(0x8650D0, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4D9C55;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x68, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x5C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_6FBF13(ts, mv);

loc_4D9C55:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_4D9C60(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x50, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x68, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_4C65F0(ts, mv);
	mov(&ts->ecx, 0x83A9E0);
	mov(&ts->ebx, ts->eax);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x30, 4));
	game::Iostream_init__Iostream_init_void_(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_43DBD0(ts, mv);
	push(mv, &ts->esp, ts->edi);
	game::sub_43DBB0(ts, mv);
	mov(mv, x86::mem(ts->eax + (ts->esi) + 0x30, 1), 0x20);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x14, 4));
	push(mv, &ts->esp, 0x10);
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->esi) + 0x31, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_523CB0(ts, mv);
	push(mv, &ts->esp, 0x10);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x835BB8);
	game::sub_43E030(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x54, 4));
	xor_(&ts->ecx, ts->ecx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x28, 4));
	mov(mv, x86::mem(ts->eax, 4), 0x10D);
	mov(mv, x86::mem(ts->esi + 0x2C, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x4, 1), ts->cl);
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x18, 4), 0x4);
	mov(mv, x86::mem(ts->esi + 0x20, 2), ts->cx);
	mov(mv, x86::mem(ts->esi + 0x7, 1), ts->cl);
	mov(mv, &ts->edx, x86::mem(0x8650D0, 4));
	add(&ts->esp, 0x24);
	cmp(&ts->eflags, ts->edx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4D9CFB;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x5C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_6FBF13(ts, mv);

loc_4D9CFB:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_4D9D00(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x8650D4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4D9D1C;
    }
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, 0xA);
	game::sub_57D670(ts, mv);
	add(&ts->esp, 0xC);

loc_4D9D1C:
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	game::sub_4A9500(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(0x836498, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x50, 4));
	mov(mv, &ts->ebx, x86::mem(ts->edi + 0xC, 4));
	mov(&ts->esi, ts->eax);
	neg(&ts->esi);
	sbb(&ts->esi, ts->esi);
	and_(&ts->esi, 0x2);
	test(&ts->eflags, ts->edx, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_4D9D7C;
    }
	push(mv, &ts->esp, 0x783FE5);
	game::sub_43DBB0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(mv, &ts->ecx, x86::mem(0x836498, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x64, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->eax);
	game::sub_4D6CF0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x836498, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x24, 4));
	pop(mv, &ts->esp, ts->edi);
	inc(&ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->ecx);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

loc_4D9D7C:
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4D9DA5;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x24, 4));
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x1C, 4));
	push(mv, &ts->esp, 0x10);
	shl(&ts->eax, 0x4);
	push(mv, &ts->esp, ts->edx);
	add(&ts->eax, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DC00(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x836498, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x24, 4));
	add(&ts->esp, 0xC);
	inc(&ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->ecx);

loc_4D9DA5:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_4D9DB0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x58);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x400);
	game::j__malloc(ts, mv);
	mov(&ts->esi, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x338, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x36A, 4));
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x39C, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x3CE, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x64, 4));
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->edx);
	or_(&ts->edx, 0xFFFFFFFF);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	xor_(&ts->eax, ts->eax);
	dec(&ts->ecx);
	cmp(&ts->eflags, ts->ecx, 0x10);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x30, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x34, 1), ts->al);
	mov(mv, x86::mem(ts->esp + 0x35, 1), ts->al);
	mov(mv, x86::mem(ts->esp + 0x48, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x4C, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x50, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x3C, 4), 0x8);
	mov(mv, x86::mem(ts->esp + 0x40, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x44, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x55, 1), ts->al);
	mov(mv, x86::mem(ts->esp + 0x54, 1), ts->al);
	mov(mv, x86::mem(ts->esp + 0x59, 1), ts->al);
	mov(mv, x86::mem(ts->esp + 0x58, 1), ts->al);
	mov(mv, x86::mem(ts->esp + 0x57, 1), ts->al);
	mov(mv, x86::mem(ts->esp + 0x56, 1), ts->al);
	mov(mv, x86::mem(ts->esp + 0x8, 1), ts->al);
	mov(mv, x86::mem(ts->esp + 0x38, 4), ts->esi);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4D9E56;
    }
	jmp(x86::mem(0x4DA040, 4));

loc_4D9E5D:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x7F68C4);
	game::sub_4C6050(ts, mv);
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x58);
	retn(mv, &ts->esp);

loc_4D9E7C:
	mov(&ts->ecx, 0x7F68C4);
	game::sub_4A97D0(ts, mv);
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x58);
	retn(mv, &ts->esp);

loc_4D9E94:
	sub(&ts->esp, 0xC);
	mov(&ts->ecx, ts->esp);
	mov(mv, x86::mem(ts->ecx, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->eax);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x7F68C4);
	game::sub_4C61A0(ts, mv);
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x58);
	retn(mv, &ts->esp);

loc_4D9EBE:
	cmp(mv, &ts->eflags, x86::mem(0x8650D4, 4), ts->eax);
	if (ts->eflags.zero) {
        goto def_4D9E56;
    }
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, 0x4);
	game::sub_57D670(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x58);
	retn(mv, &ts->esp);

loc_4D9EE6:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x7F68C4);
	game::sub_4C6270(ts, mv);
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x58);
	retn(mv, &ts->esp);

loc_4D9EFF:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x7F68C4);
	game::sub_4A9830(ts, mv);
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x58);
	retn(mv, &ts->esp);

loc_4D9F18:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x7F68C4);
	game::sub_4A9850(ts, mv);
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x58);
	retn(mv, &ts->esp);

loc_4D9F31:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x7F68C4);
	game::sub_4C6330(ts, mv);
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x58);
	retn(mv, &ts->esp);

loc_4D9F4A:
	mov(&ts->ecx, 0x7F68C4);
	game::sub_4A9980(ts, mv);
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x58);
	retn(mv, &ts->esp);

loc_4D9F62:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x38, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x7F68C4);
	game::sub_4D9D00(ts, mv);
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x58);
	retn(mv, &ts->esp);

loc_4D9F7F:
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x7F68C4);
	game::sub_4A99A0(ts, mv);
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x58);
	retn(mv, &ts->esp);

loc_4D9F98:
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x7F68C4);
	game::sub_4A99F0(ts, mv);
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x58);
	retn(mv, &ts->esp);

loc_4D9FB1:
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x7F68C4);
	game::sub_4C63C0(ts, mv);
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x58);
	retn(mv, &ts->esp);

loc_4D9FCB:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x7F68C4);
	game::sub_4A9A20(ts, mv);
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x58);
	retn(mv, &ts->esp);

loc_4D9FE8:
	mov(&ts->ecx, 0x7F68C4);
	game::sub_4A9B50(ts, mv);
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x58);
	retn(mv, &ts->esp);

loc_4DA000:
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x7F68C4);
	game::sub_4C6500(ts, mv);
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x58);
	retn(mv, &ts->esp);

loc_4DA01B:
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x60, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x64, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x7F68C4);
	game::sub_4A9B80(ts, mv);

def_4D9E56:
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x58);
	retn(mv, &ts->esp);
}

void sub_4DA090(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x14, 4));
	and_(&ts->eax, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	and_(&ts->ecx, ts->edi);
	add(&ts->esp, 0x4);
	or_(&ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto def_4DA0FE;
    }
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->esi + 0x34, 4), 0x0);
	mov(mv, x86::mem(ts->esi + 0x30, 4), 0x0);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(0x890118, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_5EEF60(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DA139;
    }
	mov(mv, &ts->cl, x86::mem(ts->eax + 0xD, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_4DA0EB;
    }
	mov(mv, &ts->cl, x86::mem(ts->eax + 0xE, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_4DA139;
    }

loc_4DA0EB:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x10, 4));
	lea(mv, &ts->ecx, x86::mem(ts->ecx + (ts->ecx*4), 4));
	movzx(mv, &ts->ecx, x86::mem(0x83AA78, 1));
	cmp(&ts->eflags, ts->ecx, 0x3);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4DA0FE;
    }
	jmp(x86::mem(0x4DA180, 4));

loc_4DA105:
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_4C6CB0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4DA112:
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_4C6E00(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4DA11F:
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_4C6D50(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4DA12C:
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_4C6E50(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4DA139:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	mov(mv, &ts->edx, x86::mem(0x86518C, 4));
	sub(&ts->edx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787ADC, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto def_4DA0FE;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->esi + 0x28, 1), 0x0);

def_4DA0FE:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4DA190(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x20);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x14, 4));
	and_(&ts->eax, ts->ebx);
	and_(&ts->ecx, ts->edi);
	or_(&ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4DA558;
    }
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x30, 4));
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x6);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x158, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	game::sub_4C6F30(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(0x89E7B0, 4), 0x7);
	if (!ts->eflags.zero) {
        goto loc_4DA234;
    }
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	game::sub_4AA9F0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x890118, 4));
	mov(mv, &ts->ebx, x86::mem(ts->eax + 0x24, 4));
	cmp(mv, &ts->eflags, ts->ebx, x86::mem(ts->esi + 0x170, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4DA558;
    }
	lea(mv, &ts->edi, x86::mem(ts->esi + (ts->ebx*4) + 0x194, 4));

loc_4DA1F7:
	mov(mv, &ts->ecx, x86::mem(ts->edi - 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x170, 4));
	add(&ts->esp, 0x10);
	inc(&ts->ebx);
	add(&ts->edi, 0x4);
	cmp(&ts->eflags, ts->ebx, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4DA1F7;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp, 0x4);

loc_4DA234:
	cmp(mv, &ts->eflags, x86::mem(0x89E7C0, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_4DA38F;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1C0, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, &ts->ecx, x86::mem(0x86518C, 4));
	if (ts->eflags.zero) {
        goto loc_4DA2A9;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1BC, 4));
	mov(&ts->edx, ts->ecx);
	sub(&ts->edx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x30, 4), ts->edx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7844C0, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4DA283;
    }
	mov(mv, x86::mem(ts->esi + 0x1BC, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x1C0, 1), 0x0);

loc_4DA283:
	mov(mv, &ts->al, x86::mem(0x89E7D9, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4DA295;
    }
	mov(mv, &ts->eax, x86::mem(0x890104, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DA29F;
    }

loc_4DA295:
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	game::sub_4AADC0(ts, mv);
	goto loc_4DA2FF;

loc_4DA29F:
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	game::sub_4AA890(ts, mv);
	goto loc_4DA2FF;

loc_4DA2A9:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1BC, 4));
	mov(&ts->eax, ts->ecx);
	sub(&ts->eax, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x30, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x30, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784560, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4DA2DB;
    }
	mov(mv, x86::mem(ts->esi + 0x1BC, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x1C0, 1), 0x1);

loc_4DA2DB:
	mov(mv, &ts->al, x86::mem(0x89E7D9, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4DA2ED;
    }
	mov(mv, &ts->eax, x86::mem(0x890104, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DA2F7;
    }

loc_4DA2ED:
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	game::sub_4AAC50(ts, mv);
	goto loc_4DA2FF;

loc_4DA2F7:
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	game::sub_4AA9F0(ts, mv);

loc_4DA2FF:
	mov(mv, &ts->al, x86::mem(0x89E7D9, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4DA311;
    }
	mov(mv, &ts->eax, x86::mem(0x890104, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DA326;
    }

loc_4DA311:
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F00F0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4DA326;
    }
	mov(&ts->edi, 0x4);
	goto loc_4DA32F;

loc_4DA326:
	mov(mv, &ts->ecx, x86::mem(0x890118, 4));
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x24, 4));

loc_4DA32F:
	cmp(&ts->eflags, ts->edi, 0x1);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4DA34F;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x174, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x184, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x8);

loc_4DA34F:
	cmp(mv, &ts->eflags, ts->edi, x86::mem(ts->esi + 0x170, 4));
	mov(&ts->ebx, ts->edi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4DA558;
    }
	lea(mv, &ts->edi, x86::mem(ts->esi + (ts->edi*4) + 0x184, 4));

loc_4DA364:
	mov(mv, &ts->ecx, x86::mem(ts->edi - 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x170, 4));
	add(&ts->esp, 0x8);
	inc(&ts->ebx);
	add(&ts->edi, 0x4);
	cmp(&ts->eflags, ts->ebx, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4DA364;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp, 0x4);

loc_4DA38F:
	mov(mv, &ts->al, x86::mem(0x89E7D8, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4DA3A1;
    }
	mov(mv, &ts->eax, x86::mem(0x890108, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DA3C5;
    }

loc_4DA3A1:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x174, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1A4, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp, 0x4);

loc_4DA3C5:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x170, 4));
	push(mv, &ts->esp, ts->ebp);
	xor_(&ts->ebp, ts->ebp);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4DA414;
    }
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x194, 4));
	goto loc_4DA3E0;

loc_4DA3E0:
	mov(mv, &ts->edx, x86::mem(ts->edi - 0x20, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi - 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x170, 4));
	add(&ts->esp, 0x10);
	inc(&ts->ebp);
	add(&ts->edi, 0x4);
	cmp(&ts->eflags, ts->ebp, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4DA3E0;
    }

loc_4DA414:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x174, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1A4, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->al, x86::mem(0x89E7D9, 1));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4DA445;
    }
	mov(mv, &ts->eax, x86::mem(0x890104, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DA4DC;
    }

loc_4DA445:
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, 0x89E7A0);
	game::sub_5ED980(ts, mv);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, 0x89E7A0);
	mov(&ts->edi, ts->eax);
	game::sub_5ED980(ts, mv);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebp, ts->eax);
	game::sub_56DD50(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x10, 4));
	game::__ftol2(ts, mv);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->edi, ts->eax);
	game::sub_56DD50(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x10, 4));
	add(&ts->esp, 0x8);
	game::__ftol2(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x10, 4));
	xor_(&ts->edx, ts->edx);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4DA491;
    }
	sub(&ts->edi, ts->eax);
	mov(&ts->edx, ts->edi);
	goto loc_4DA49A;

loc_4DA491:
	cmp(&ts->eflags, ts->ecx, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4DA49E;
    }
	sub(&ts->eax, ts->edi);
	mov(&ts->edx, ts->eax);

loc_4DA49A:
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4DA4BD;
    }

loc_4DA49E:
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x174, 4));
	push(mv, &ts->esp, 0x790AAC);
	push(mv, &ts->esp, ts->edx);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp, 0x4);

loc_4DA4BD:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x174, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, ts->eax);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp, 0x4);

loc_4DA4DC:
	mov(mv, &ts->ecx, x86::mem(0x8900AC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x1C, 4));
	mov(mv, &ts->eax, x86::mem(0x8900B0, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x10, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->edx + 0x1C, 4));
	mov(mv, x86::mem(ts->esp + 0x34, 4), 0x0);
	if (!ts->eflags.zero) {
        goto loc_4DA50B;
    }
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x3C, 4));
	push(mv, &ts->esp, ts->eax);
	goto loc_4DA517;

loc_4DA50B:
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4DA52A;
    }
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x3C, 4));
	push(mv, &ts->esp, ts->ecx);

loc_4DA517:
	mov(mv, &ts->ecx, x86::mem(0x890118, 4));
	game::sub_5F82D0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x34, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4DA52E;
    }

loc_4DA52A:
	push(mv, &ts->esp, 0x2);
	goto loc_4DA530;

loc_4DA52E:
	push(mv, &ts->esp, 0x1);

loc_4DA530:
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x38, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_577240(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x174, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->ebp);

loc_4DA558:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp, 0x4);
}

void sub_4DA570(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x8, 4));
	and_(&ts->eax, 0x800000);
	xor_(&ts->ecx, ts->ecx);
	or_(&ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto locret_4DA58F;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x40, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_4C6EC0(ts, mv);

locret_4DA58F:
	retn(mv, &ts->esp);
}

void sub_4DA590(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x14, 4));
	and_(&ts->eax, ts->ebx);
	and_(&ts->ecx, ts->edi);
	or_(&ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4DA62D;
    }
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edi, x86::mem(ts->ebx + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x40, 4));
	game::sub_59FA10(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x42C, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x434, 4));
	push(mv, &ts->esp, ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->eax);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78424C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_4AB390(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x94, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4DA61F;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x1C, 4));
	mov(mv, &ts->edi, x86::mem(ts->edx + 0x1D8, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, &ts->al, x86::mem(ts->edi + 0x16, 1));
	xor_(&ts->ecx, ts->ecx);
	mov(mv, &ts->cl, x86::mem(ts->edi + 0x17, 1));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_4AB420(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x3C, 4));
	sub(&ts->esp, 0x8);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x18, 4));
	mov(&ts->ecx, ts->esi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->ebx);
	game::sub_4C7EA0(ts, mv);

loc_4DA61F:
	mov(&ts->ecx, ts->esi);
	game::sub_4AB2B0(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_4AB340(ts, mv);

loc_4DA62D:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_4DA640(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8364D4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4DA655;
    }
	game::sub_4CA840(ts, mv);

loc_4DA655:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x14, 4));
	and_(&ts->eax, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	and_(&ts->ecx, ts->edx);
	or_(&ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4DA6E2;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->al, x86::mem(0x8385B9, 1));
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4DA6A9;
    }
	mov(&ts->ecx, 0x85AD40);
	game::sub_500B60(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4DA6A9;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_4C8410(ts, mv);

loc_4DA6A9:
	mov(&ts->ecx, 0x85AD40);
	game::sub_500400(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DA6D6;
    }
	mov(&ts->ecx, 0x85AD40);
	game::sub_500B60(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4DA6D6;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_4DA6D6:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);

loc_4DA6E2:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_4DA6F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x8, 4));
	and_(&ts->eax, 0x20000);
	xor_(&ts->ecx, ts->ecx);
	or_(&ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto locret_4DA70F;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_4C88E0(ts, mv);

locret_4DA70F:
	retn(mv, &ts->esp);
}

void sub_4DA710(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x20, 4));
	lea(mv, &ts->ebx, x86::mem(ts->edi + 0x20, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4DA81E;
    }
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->eax);
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x8, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_4DA73D;
    }
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_4DA730:
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4DA741;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x8, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_4DA730;
    }

loc_4DA73D:
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4DA743;
    }

loc_4DA741:
	mov(&ts->esi, ts->eax);

loc_4DA743:
	mov(mv, &ts->al, x86::mem(0x89E7D9, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4DA755;
    }
	mov(mv, &ts->eax, x86::mem(0x890104, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DA75D;
    }

loc_4DA755:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x38, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	goto loc_4DA7A4;

loc_4DA75D:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x38, 4));
	push(mv, &ts->esp, 0x790AA4);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4DA7AC;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x48, 4));
	push(mv, &ts->esp, 0x796578);
	push(mv, &ts->esp, ts->edx);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4DA7AC;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x48, 4));
	push(mv, &ts->esp, 0x796570);
	push(mv, &ts->esp, ts->eax);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4DA7AC;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x34, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x38, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);

loc_4DA7A4:
	mov(&ts->ecx, ts->edi);
	push(mv, &ts->esp, ts->esi);
	game::sub_4AB780(ts, mv);

loc_4DA7AC:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(0x86518C, 4));
	sub(&ts->eax, ts->ecx);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	game::sub_43BE80(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4DA7D0;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78E074, 4));
	goto loc_4DA7D6;

loc_4DA7D0:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78E078, 4));

loc_4DA7D6:
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fcomp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.zero) {
        goto loc_4DA804;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x8, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4DA817;
    }
	mov(mv, &ts->al, x86::mem(0x89E7D9, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4DA804;
    }
	mov(mv, &ts->eax, x86::mem(0x890104, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DA817;
    }

loc_4DA804:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4DA817:
	mov(mv, x86::mem(ts->edi + 0x7A, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	goto loc_4DA85D;

loc_4DA81E:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x38, 4));
	push(mv, &ts->esp, 0x790A9C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4DA85D;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x38, 4));
	push(mv, &ts->esp, 0x790AA4);
	push(mv, &ts->esp, ts->edx);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4DA85D;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x34, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x38, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x8);

loc_4DA85D:
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x48, 4));
	push(mv, &ts->esp, 0x796578);
	push(mv, &ts->esp, ts->edx);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4DA8BF;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x48, 4));
	push(mv, &ts->esp, 0x796570);
	push(mv, &ts->esp, ts->eax);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4DA8BF;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x48, 4));
	push(mv, &ts->esp, 0x796578);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CAB0(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4DA8A3;
    }
	mov(mv, &ts->al, x86::mem(ts->edi + 0x7A, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4DA8BF;
    }

loc_4DA8A3:
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x48, 4));
	push(mv, &ts->esp, 0x796570);
	push(mv, &ts->esp, ts->edx);
	game::sub_50CAB0(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4DA8D4;
    }
	mov(mv, &ts->al, x86::mem(ts->edi + 0x7A, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4DA8D4;
    }

loc_4DA8BF:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x34, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x38, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x8);

loc_4DA8D4:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x6C, 4));
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*4), 4));
	mov(mv, &ts->al, x86::mem(0x83AA64, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4DA8F1;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x48, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);

loc_4DA8F1:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);
}

void sub_4DA900(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x14, 4));
	and_(&ts->eax, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	and_(&ts->ecx, ts->edx);
	or_(&ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4DA99C;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x79, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4DA92E;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);

loc_4DA92E:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, &ts->edx, x86::mem(0x8900AC, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x1C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x1D4, 4));
	push(mv, &ts->esp, 0x0);
	game::sub_56C7D0(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->al, x86::mem(0x89E7D9, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4DA960;
    }
	mov(mv, &ts->eax, x86::mem(0x890104, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DA980;
    }

loc_4DA960:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_4C85D0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x58, 4));
	game::__ftol2(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_4AB700(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4DA980:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_4DA710(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x58, 4));
	game::__ftol2(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_4AB700(ts, mv);

loc_4DA99C:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4DA9A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, 0xEA570722);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C990(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x34, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x38, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x3C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x28, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x14, 4));
	and_(&ts->eax, ts->ebx);
	and_(&ts->ecx, ts->edi);
	add(&ts->esp, 0x1C);
	or_(&ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4DAB6E;
    }
	push(mv, &ts->esp, ts->ebp);
	lea(mv, &ts->ebp, x86::mem(ts->esi + 0x60, 4));
	mov(&ts->edi, ts->ebp);
	mov(&ts->ebx, 0x8);

loc_4DAA06:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_4C9030(ts, mv);
	add(&ts->edi, 0x14);
	dec(&ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4DAA06;
    }
	mov(&ts->edx, ts->ebp);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebp);
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_4DAA20:
	mov(mv, &ts->cl, x86::mem(ts->edx, 1));
	cmp(&ts->eflags, ts->cl, 0x2);
	if (ts->eflags.zero) {
        goto loc_4DAA90;
    }
	cmp(&ts->eflags, ts->cl, 0x3);
	if (ts->eflags.zero) {
        goto loc_4DAA90;
    }
	inc(&ts->eax);
	add(&ts->edx, 0x14);
	cmp(&ts->eflags, ts->eax, 0x8);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4DAA20;
    }
	xor_(&ts->ebx, ts->ebx);

loc_4DAA37:
	mov(&ts->ecx, ts->esi);
	game::sub_4C90B0(ts, mv);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(&ts->edi, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4DAAD7;
    }
	test(&ts->eflags, ts->edi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_4DAA99;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, 0xEA570722);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C990(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x34, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x38, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x3C, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x28, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x1C);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

loc_4DAA90:
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->eax*4), 4));
	lea(mv, &ts->ebx, x86::mem(ts->esi + (ts->ecx*4) + 0x60, 4));
	goto loc_4DAA37;

loc_4DAA99:
	cmp(mv, &ts->eflags, x86::mem(ts->edi, 1), 0x4);
	if (ts->eflags.zero) {
        goto loc_4DAAC5;
    }
	mov(mv, x86::mem(ts->edi, 1), 0x2);
	mov(mv, &ts->edx, x86::mem(0x86518C, 4));
	mov(mv, x86::mem(ts->edi + 0x4, 4), ts->edx);
	mov(mv, &ts->al, x86::mem(ts->edi + 0x1, 1));
	cmp(&ts->eflags, ts->al, 0x14);
	if (ts->eflags.zero) {
        goto loc_4DAAC5;
    }
	cmp(&ts->eflags, ts->al, 0x13);
	if (!ts->eflags.zero) {
        goto loc_4DAAB9;
    }
	push(mv, &ts->esp, 0xF);
	goto loc_4DAABB;

loc_4DAAB9:
	push(mv, &ts->esp, 0xD);

loc_4DAABB:
	push(mv, &ts->esp, 0xB);
	game::sub_51DE30(ts, mv);
	add(&ts->esp, 0x8);

loc_4DAAC5:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_4C9030(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

loc_4DAAD7:
	cmp(mv, &ts->eflags, x86::mem(ts->ebx, 1), 0x0);
	if (!ts->eflags.zero) {
        goto loc_4DAAE0;
    }
	xor_(&ts->cl, ts->cl);
	goto loc_4DAAEF;

loc_4DAAE0:
	movsx(mv, &ts->ecx, x86::mem(ts->ebx + 0x1, 1));
	push(mv, &ts->esp, ts->ecx);
	game::sub_4ABF20(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->cl, ts->al);

loc_4DAAEF:
	cmp(mv, &ts->eflags, x86::mem(ts->edi, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_4DAB62;
    }
	movsx(mv, &ts->edx, x86::mem(ts->edi + 0x1, 1));
	push(mv, &ts->esp, ts->edx);
	game::sub_4ABF20(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->cl, ts->al);
	if (!ts->eflags.carry) {
        goto loc_4DAB62;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ebx + 0x1, 1), 0x13);
	mov(&ts->ecx, ts->ebx);
	push(mv, &ts->esp, 0x0);
	if (!ts->eflags.zero) {
        goto loc_4DAB19;
    }
	mov(mv, x86::mem(ts->ebx, 1), 0x4);
	game::sub_4C9030(ts, mv);
	goto loc_4DAB28;

loc_4DAB19:
	mov(mv, x86::mem(ts->ebx, 1), 0x6);
	game::sub_4C9030(ts, mv);
	mov(mv, x86::mem(ts->ebx, 1), 0x0);
	mov(mv, x86::mem(ts->ebx + 0x1, 1), 0x0);

loc_4DAB28:
	mov(mv, x86::mem(ts->edi, 1), 0x2);
	mov(mv, &ts->eax, x86::mem(0x86518C, 4));
	mov(mv, x86::mem(ts->edi + 0x4, 4), ts->eax);
	mov(mv, &ts->al, x86::mem(ts->edi + 0x1, 1));
	cmp(&ts->eflags, ts->al, 0x14);
	if (ts->eflags.zero) {
        goto loc_4DAB6E;
    }
	cmp(&ts->eflags, ts->al, 0x13);
	if (!ts->eflags.zero) {
        goto loc_4DAB50;
    }
	push(mv, &ts->esp, 0xF);
	push(mv, &ts->esp, 0xB);
	game::sub_51DE30(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

loc_4DAB50:
	push(mv, &ts->esp, 0xD);
	push(mv, &ts->esp, 0xB);
	game::sub_51DE30(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

loc_4DAB62:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebx);
	game::sub_4C9030(ts, mv);

loc_4DAB6E:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_4DAB80(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	movsx(mv, &ts->esi, x86::mem(ts->esp + 0x8, 1));
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->eax, ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->ecx + 0x61, 4));
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_4DAB90:
	movzx(mv, &ts->edi, x86::mem(ts->edx, 1));
	cmp(&ts->eflags, ts->edi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4DABA5;
    }
	inc(&ts->eax);
	add(&ts->edx, 0x14);
	cmp(&ts->eflags, ts->eax, 0x8);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4DAB90;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4DABA5:
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*4), 4));
	lea(mv, &ts->esi, x86::mem(ts->ecx + (ts->eax*4) + 0x60, 4));
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi, 1), 0x6);
	game::sub_4C9030(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi, 1), 0x0);
	mov(mv, x86::mem(ts->esi + 0x1, 1), 0x0);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4DABD0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	and_(&ts->eax, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	push(mv, &ts->esp, ts->edi);
	and_(mv, &ts->ecx, x86::mem(ts->esi + 0x14, 4));
	or_(&ts->eax, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4DAC14;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x38, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x790AE8);
	push(mv, &ts->esp, ts->eax);
	game::sub_51CF70(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x89E7B0, 4));
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->eax, 0x7);
	if (ts->eflags.zero) {
        goto loc_4DAEFD;
    }
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x44, 2), 0x0);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);

loc_4DAC14:
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_4C9780(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x1C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DAEFD;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_4C9450(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x4);
	if (!ts->eflags.zero) {
        goto loc_4DADFD;
    }
	cmp(mv, &ts->eflags, x86::mem(0x83AAB4, 4), 0x8);
	if (!ts->eflags.zero) {
        goto loc_4DADFD;
    }
	mov(mv, &ts->eax, x86::mem(0x890118, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), 0x4);
	if (ts->eflags.zero) {
        goto loc_4DADB2;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x24, 4), 0x1);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4DAC72;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xBD0, 4));
	goto loc_4DAC74;

loc_4DAC72:
	xor_(&ts->ecx, ts->ecx);

loc_4DAC74:
	game::sub_5EE3A0(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_4DADA8;
    }
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xC0F3C28F);

loc_4DAC89:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0x796588);
	push(mv, &ts->esp, ts->eax);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4DACB1;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x796588);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);

loc_4DACB1:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x28, 4));
	push(mv, &ts->esp, 0x796588);
	push(mv, &ts->esp, ts->edx);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4DACD7;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x28, 4));
	push(mv, &ts->esp, 0xFF30CF30);
	push(mv, &ts->esp, ts->eax);
	game::sub_51D7F0(ts, mv);
	add(&ts->esp, 0x8);

loc_4DACD7:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x24, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4DAD1C;
    }
	mov(mv, &ts->ecx, x86::mem(0x890118, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx, 4), 0x4);
	if (!ts->eflags.zero) {
        goto loc_4DAD1C;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0xBFD1936F);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x790968);
	push(mv, &ts->esp, ts->ecx);

loc_4DAD14:
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0x18);

loc_4DAD1C:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x8, 4), 0x0);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4DAD4F;
    }
	mov(mv, &ts->ecx, x86::mem(0x890118, 4));
	game::sub_5EEEA0(ts, mv);
	fdivr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));

loc_4DAD4F:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fchs(&ts->fp, x86::fp_index(0));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4DAD79;
    }
	mov(mv, &ts->ecx, x86::mem(0x890118, 4));
	game::sub_5EEEA0(ts, mv);
	fdivr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));

loc_4DAD79:
	mov(mv, &ts->al, x86::mem(0x83AA1A, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4DAEAA;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, 0x1578C3);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x790AE4, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x34, 4));
	push(mv, &ts->esp, ts->eax);
	goto loc_4DAEB9;

loc_4DADA8:
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x40F3C28F);
	goto loc_4DAE12;

loc_4DADB2:
	mov(mv, &ts->ax, x86::mem(ts->esi + 0x46, 2));
	cmp(&ts->eflags, ts->ax, 0xF);
	if (!ts->eflags.zero) {
        goto loc_4DADF8;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x1C, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0xA, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_4DADF2;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0xBFD1936F);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x790968);
	push(mv, &ts->esp, ts->eax);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0x18);

loc_4DADF2:
	inc(mv, x86::mem(ts->esi + 0x46, 2));
	goto loc_4DADFD;

loc_4DADF8:
	inc(&ts->eax);
	mov(mv, x86::mem(ts->esi + 0x46, 2), ts->ax);

loc_4DADFD:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4DAC89;
    }

loc_4DAE12:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0x796580);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4DAE3A;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x796580);
	push(mv, &ts->esp, ts->edx);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);

loc_4DAE3A:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x28, 4));
	push(mv, &ts->esp, 0x796580);
	push(mv, &ts->esp, ts->eax);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4DAE60;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x28, 4));
	push(mv, &ts->esp, 0xFF950000);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51D7F0(ts, mv);
	add(&ts->esp, 0x8);

loc_4DAE60:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x24, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4DAD1C;
    }
	mov(mv, &ts->edx, x86::mem(0x890118, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->edx, 4), 0x4);
	if (!ts->eflags.zero) {
        goto loc_4DAD1C;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0x9B2AF3C7);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x790968);
	push(mv, &ts->esp, ts->edx);
	goto loc_4DAD14;

loc_4DAEAA:
	push(mv, &ts->esp, 0x6BB2D6AF);
	game::sub_4FFA80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x34, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);

loc_4DAEB9:
	game::sub_537BE0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	add(&ts->esp, 0xC);
	game::__ftol2(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, ts->edx);
	game::sub_537BE0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x28, 4));
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x3F800000);
	push(mv, &ts->esp, 0x42C60000);
	push(mv, &ts->esp, 0x3F800000);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_4C67E0(ts, mv);

loc_4DAEFD:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);
}

void sub_4DAF10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x774BF8);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x1C);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ebp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x10, 4));
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->esi, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, 0x7121F270);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebp);
	game::sub_537A10(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4DAF69;
    }
	game::sub_440EC0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DAF5A;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebx);
	goto loc_4DAF5C;

loc_4DAF5A:
	xor_(&ts->eax, ts->eax);

loc_4DAF5C:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);

loc_4DAF69:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, 0xB470B80);
	push(mv, &ts->esp, ts->ecx);
	game::sub_5379C0(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4DAF9D;
    }
	game::sub_440EC0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DAF8E;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->edi);
	goto loc_4DAF90;

loc_4DAF8E:
	xor_(&ts->eax, ts->eax);

loc_4DAF90:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);

loc_4DAF9D:
	mov(mv, &ts->al, x86::mem(0x89E7D8, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4DAFB3;
    }
	mov(mv, &ts->eax, x86::mem(0x890108, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DB2F9;
    }

loc_4DAFB3:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, 0x72F68CC9);
	push(mv, &ts->esp, ts->edx);
	game::sub_537A10(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4DAFE7;
    }
	game::sub_440EC0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DAFD8;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->edi);
	goto loc_4DAFDA;

loc_4DAFD8:
	xor_(&ts->eax, ts->eax);

loc_4DAFDA:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);

loc_4DAFE7:
	mov(mv, x86::mem(ts->ebp + 0x38, 4), ts->edi);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, 0x29F91C7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4DB01E;
    }
	game::sub_440EC0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DB00F;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->edi);
	goto loc_4DB011;

loc_4DB00F:
	xor_(&ts->eax, ts->eax);

loc_4DB011:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);

loc_4DB01E:
	mov(mv, x86::mem(ts->ebp + 0x3C, 4), ts->edi);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, 0xD1B15E68);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537A10(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4DB055;
    }
	game::sub_440EC0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DB046;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->edi);
	goto loc_4DB048;

loc_4DB046:
	xor_(&ts->eax, ts->eax);

loc_4DB048:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);

loc_4DB055:
	push(mv, &ts->esp, 0x35102EDF);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->ebp + 0x34, 4), ts->edi);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->al, x86::mem(0x83AA1A, 1));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	cmp(&ts->eflags, ts->al, 0x1);
	push(mv, &ts->esp, 0xC8D50791);
	push(mv, &ts->esp, ts->edx);
	setz(mv, ts->eflags, x86::mem(ts->esp + 0x23, 1));
	game::sub_537A10(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4DB0A3;
    }
	game::sub_440EC0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DB094;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebx);
	goto loc_4DB096;

loc_4DB094:
	xor_(&ts->eax, ts->eax);

loc_4DB096:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);

loc_4DB0A3:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, 0xF3828848);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	mov(&ts->ebp, ts->eax);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_4DB0D7;
    }
	game::sub_440EC0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DB0C8;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebp);
	goto loc_4DB0CA;

loc_4DB0C8:
	xor_(&ts->eax, ts->eax);

loc_4DB0CA:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);

loc_4DB0D7:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, 0x32EEE5FB);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537A10(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4DB10B;
    }
	game::sub_440EC0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DB0FC;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->edi);
	goto loc_4DB0FE;

loc_4DB0FC:
	xor_(&ts->eax, ts->eax);

loc_4DB0FE:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);

loc_4DB10B:
	push(mv, &ts->esp, 0x18);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DB12D;
    }
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ebp);
	mov(mv, x86::mem(ts->eax, 4), 0x795B80);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->edi);
	add(&ts->eax, 0x4);
	goto loc_4DB12F;

loc_4DB12D:
	xor_(&ts->eax, ts->eax);

loc_4DB12F:
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x2C, 4));
	add(&ts->edi, 0x28);
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->edi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->edi);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, 0xC8D50792);
	push(mv, &ts->esp, ts->edx);
	game::sub_537A10(ts, mv);
	mov(&ts->ebp, ts->eax);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_4DB177;
    }
	game::sub_440EC0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DB168;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebp);
	goto loc_4DB16A;

loc_4DB168:
	xor_(&ts->eax, ts->eax);

loc_4DB16A:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);

loc_4DB177:
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->eax);
	mov(mv, &ts->al, x86::mem(ts->esp + 0x13, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4DB1AC;
    }
	push(mv, &ts->esp, 0xB8CF16FC);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	goto loc_4DB1C1;

loc_4DB1AC:
	push(mv, &ts->esp, 0xCCBC22B3);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->edx);

loc_4DB1C1:
	game::sub_4400D0(ts, mv);
	add(&ts->esp, 0x10);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, ts->ebp);
	game::sub_537BE0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, 0xF3828849);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537A10(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x14);
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4DB20D;
    }
	game::sub_440EC0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DB1FE;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebx);
	goto loc_4DB200;

loc_4DB1FE:
	xor_(&ts->eax, ts->eax);

loc_4DB200:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);

loc_4DB20D:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x10, 4));
	push(mv, &ts->esp, 0x32EEE5FC);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	push(mv, &ts->esp, 0x34);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DB244;
    }
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ebp);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax, 4), 0x795B70);
	add(&ts->eax, 0x4);
	goto loc_4DB246;

loc_4DB244:
	xor_(&ts->eax, ts->eax);

loc_4DB246:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->edi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->edi);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, 0xC8D50793);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	mov(&ts->ebp, ts->eax);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_4DB287;
    }
	game::sub_440EC0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DB278;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebp);
	goto loc_4DB27A;

loc_4DB278:
	xor_(&ts->eax, ts->eax);

loc_4DB27A:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);

loc_4DB287:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, 0xF382884A);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537A10(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4DB2BB;
    }
	game::sub_440EC0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DB2AC;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebx);
	goto loc_4DB2AE;

loc_4DB2AC:
	xor_(&ts->eax, ts->eax);

loc_4DB2AE:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);

loc_4DB2BB:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x10, 4));
	push(mv, &ts->esp, 0x32EEE5FD);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	push(mv, &ts->esp, 0x34);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DB7F3;
    }
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ebp);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax, 4), 0x795B78);
	add(&ts->eax, 0x4);
	goto loc_4DB7F5;

loc_4DB2F9:
	mov(mv, &ts->al, x86::mem(0x89E7D9, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4DB30F;
    }
	mov(mv, &ts->eax, x86::mem(0x890104, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DB57E;
    }

loc_4DB30F:
	push(mv, &ts->esp, 0xD7162CFA);
	push(mv, &ts->esp, ts->ebx);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, 0xC8D50791);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4DB34E;
    }
	game::sub_440EC0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DB33F;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebx);
	goto loc_4DB341;

loc_4DB33F:
	xor_(&ts->eax, ts->eax);

loc_4DB341:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);

loc_4DB34E:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, 0xF3828848);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537A10(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4DB382;
    }
	game::sub_440EC0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DB373;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->edi);
	goto loc_4DB375;

loc_4DB373:
	xor_(&ts->eax, ts->eax);

loc_4DB375:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);

loc_4DB382:
	push(mv, &ts->esp, 0x14);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DB3A1;
    }
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->edi);
	mov(mv, x86::mem(ts->eax, 4), 0x795B90);
	add(&ts->eax, 0x4);
	goto loc_4DB3A3;

loc_4DB3A1:
	xor_(&ts->eax, ts->eax);

loc_4DB3A3:
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x2C, 4));
	lea(mv, &ts->edi, x86::mem(ts->ebp + 0x28, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->edi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->edi);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, 0xC8D50792);
	push(mv, &ts->esp, ts->edx);
	game::sub_537A10(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4DB3E7;
    }
	game::sub_440EC0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DB3D8;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebx);
	goto loc_4DB3DA;

loc_4DB3D8:
	xor_(&ts->eax, ts->eax);

loc_4DB3DA:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);

loc_4DB3E7:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, 0xF3828849);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	mov(&ts->ebp, ts->eax);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_4DB41B;
    }
	game::sub_440EC0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DB40C;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebp);
	goto loc_4DB40E;

loc_4DB40C:
	xor_(&ts->eax, ts->eax);

loc_4DB40E:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);

loc_4DB41B:
	push(mv, &ts->esp, 0x14);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DB43A;
    }
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ebp);
	mov(mv, x86::mem(ts->eax, 4), 0x795B98);
	add(&ts->eax, 0x4);
	goto loc_4DB43C;

loc_4DB43A:
	xor_(&ts->eax, ts->eax);

loc_4DB43C:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->edi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->edi);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, 0xC8D50793);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537A10(ts, mv);
	mov(&ts->ebp, ts->eax);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_4DB47D;
    }
	game::sub_440EC0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DB46E;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebp);
	goto loc_4DB470;

loc_4DB46E:
	xor_(&ts->eax, ts->eax);

loc_4DB470:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);

loc_4DB47D:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, 0xF382884A);
	push(mv, &ts->esp, ts->edx);
	game::sub_537A10(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4DB4B1;
    }
	game::sub_440EC0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DB4A2;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebx);
	goto loc_4DB4A4;

loc_4DB4A2:
	xor_(&ts->eax, ts->eax);

loc_4DB4A4:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);

loc_4DB4B1:
	push(mv, &ts->esp, 0x14);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DB4D0;
    }
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ebp);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax, 4), 0x795BA0);
	add(&ts->eax, 0x4);
	goto loc_4DB4D2;

loc_4DB4D0:
	xor_(&ts->eax, ts->eax);

loc_4DB4D2:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->edi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->edi);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, 0x4635CA2C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	mov(&ts->ebp, ts->eax);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_4DB513;
    }
	game::sub_440EC0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DB504;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebp);
	goto loc_4DB506;

loc_4DB504:
	xor_(&ts->eax, ts->eax);

loc_4DB506:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);

loc_4DB513:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, 0xE1FA0DA7);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537A10(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4DB547;
    }
	game::sub_440EC0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DB538;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebx);
	goto loc_4DB53A;

loc_4DB538:
	xor_(&ts->eax, ts->eax);

loc_4DB53A:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);

loc_4DB547:
	push(mv, &ts->esp, 0x3C);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x34, 4), 0x0);

loc_4DB55D:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DB7F3;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->eax);
	game::sub_4C9970(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DB7F3;
    }
	add(&ts->eax, 0x4);
	goto loc_4DB7F5;

loc_4DB57E:
	xor_(&ts->edi, ts->edi);
	game::sub_5100A0(ts, mv);
	sub(&ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4DB59F;
    }
	sub(&ts->eax, 0x3);
	if (ts->eflags.zero) {
        goto loc_4DB598;
    }
	dec(&ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4DB5A4;
    }
	mov(&ts->edi, 0x75F903F4);
	goto loc_4DB5A4;

loc_4DB598:
	mov(&ts->edi, 0x30DA61E1);
	goto loc_4DB5A4;

loc_4DB59F:
	mov(&ts->edi, 0x93FDEE74);

loc_4DB5A4:
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, 0xC8D50791);
	push(mv, &ts->esp, ts->edx);
	game::sub_537A10(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4DB5DF;
    }
	game::sub_440EC0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DB5D0;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebx);
	goto loc_4DB5D2;

loc_4DB5D0:
	xor_(&ts->eax, ts->eax);

loc_4DB5D2:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);

loc_4DB5DF:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, 0xF3828848);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4DB613;
    }
	game::sub_440EC0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DB604;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->edi);
	goto loc_4DB606;

loc_4DB604:
	xor_(&ts->eax, ts->eax);

loc_4DB606:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);

loc_4DB613:
	push(mv, &ts->esp, 0x34);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DB632;
    }
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->edi);
	mov(mv, x86::mem(ts->eax, 4), 0x795B60);
	add(&ts->eax, 0x4);
	goto loc_4DB634;

loc_4DB632:
	xor_(&ts->eax, ts->eax);

loc_4DB634:
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x2C, 4));
	lea(mv, &ts->edi, x86::mem(ts->ebp + 0x28, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->edi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->edi);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, 0xC8D50792);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537A10(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4DB678;
    }
	game::sub_440EC0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DB669;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebx);
	goto loc_4DB66B;

loc_4DB669:
	xor_(&ts->eax, ts->eax);

loc_4DB66B:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);

loc_4DB678:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, 0xF3828849);
	push(mv, &ts->esp, ts->edx);
	game::sub_537A10(ts, mv);
	mov(&ts->ebp, ts->eax);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_4DB6AC;
    }
	game::sub_440EC0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DB69D;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebp);
	goto loc_4DB69F;

loc_4DB69D:
	xor_(&ts->eax, ts->eax);

loc_4DB69F:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);

loc_4DB6AC:
	push(mv, &ts->esp, 0x14);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DB6CB;
    }
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ebp);
	mov(mv, x86::mem(ts->eax, 4), 0x795B48);
	add(&ts->eax, 0x4);
	goto loc_4DB6CD;

loc_4DB6CB:
	xor_(&ts->eax, ts->eax);

loc_4DB6CD:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->edi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->edi);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, 0xC8D50793);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	mov(&ts->ebp, ts->eax);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_4DB70E;
    }
	game::sub_440EC0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DB6FF;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebp);
	goto loc_4DB701;

loc_4DB6FF:
	xor_(&ts->eax, ts->eax);

loc_4DB701:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);

loc_4DB70E:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, 0xF382884A);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537A10(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4DB742;
    }
	game::sub_440EC0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DB733;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebx);
	goto loc_4DB735;

loc_4DB733:
	xor_(&ts->eax, ts->eax);

loc_4DB735:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);

loc_4DB742:
	push(mv, &ts->esp, 0x14);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DB761;
    }
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ebp);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax, 4), 0x795B58);
	add(&ts->eax, 0x4);
	goto loc_4DB763;

loc_4DB761:
	xor_(&ts->eax, ts->eax);

loc_4DB763:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->edi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->edi);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, 0x4635CA2C);
	push(mv, &ts->esp, ts->edx);
	game::sub_537A10(ts, mv);
	mov(&ts->ebp, ts->eax);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_4DB7A4;
    }
	game::sub_440EC0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DB795;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebp);
	goto loc_4DB797;

loc_4DB795:
	xor_(&ts->eax, ts->eax);

loc_4DB797:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);

loc_4DB7A4:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, 0xE1FA0DA7);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4DB7D8;
    }
	game::sub_440EC0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DB7C9;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebx);
	goto loc_4DB7CB;

loc_4DB7C9:
	xor_(&ts->eax, ts->eax);

loc_4DB7CB:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);

loc_4DB7D8:
	push(mv, &ts->esp, 0x3C);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x34, 4), 0x1);
	goto loc_4DB55D;

loc_4DB7F3:
	xor_(&ts->eax, ts->eax);

loc_4DB7F5:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->edi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x2C, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x28);
	retn(mv, &ts->esp, 0x4);

loc_774BD0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796590);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774BE4:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796590);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4DAF10:
	mov(&ts->eax, 0x7E08BC);
	goto ___CxxFrameHandler;
}

void sub_4DB820(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(&ts->edx, ts->ecx);
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), 0x0);
	if (ts->eflags.zero) {
        goto locret_4DB889;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4DB843;
    }
	game::sub_4ABFE0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x58, 4));
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	goto sub_4DAB80;

loc_4DB843:
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4DB85B;
    }
	game::sub_4ABF70(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x58, 4));
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	goto sub_4DAB80;

loc_4DB85B:
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4DB872;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x58, 4));
	mov(mv, x86::mem(ts->esp + 0x4, 4), 0x11);
	goto sub_4DAB80;

loc_4DB872:
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto locret_4DB889;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x58, 4));
	mov(mv, x86::mem(ts->esp + 0x4, 4), 0x12);
	goto sub_4DAB80;

locret_4DB889:
	retn(mv, &ts->esp, 0x4);
}

void sub_4DB890(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x58, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto locret_4DB8A8;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DB8AB;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x9);
	game::sub_4C9170(ts, mv);

locret_4DB8A8:
	retn(mv, &ts->esp, 0x4);

loc_4DB8AB:
	mov(mv, x86::mem(ts->esp + 0x4, 4), 0x9);
	goto sub_4DAB80;
}

void sub_4DB8C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DB8FE;
    }
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, 0x860A60);
	game::sub_514D30(ts, mv);
	mov(&ts->edi, ts->eax);
	test(&ts->eflags, ts->edi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_4DB8EC;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x13);
	game::sub_4DAB80(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4DB8EC:
	cmp(mv, &ts->eflags, x86::mem(ts->esi, 4), ts->edi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4DB8FD;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x13);
	game::sub_4C9170(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), ts->edi);

loc_4DB8FD:
	pop(mv, &ts->esp, ts->edi);

loc_4DB8FE:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4DB900(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	xor_(&ts->edi, ts->edi);
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_4DB910:
	xor_(&ts->ebx, ts->ebx);

loc_4DB912:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x7F6828, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	game::sub_50B990(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	game::sub_5379C0(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4DB979;
    }
	mov(mv, &ts->ecx, x86::mem(0x8364B4, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43F8F0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DB951;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x7F682C, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(&ts->esi, ts->eax);
	goto loc_4DB953;

loc_4DB951:
	xor_(&ts->esi, ts->esi);

loc_4DB953:
	game::sub_440EC0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DB961;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->esi);
	goto loc_4DB963;

loc_4DB961:
	xor_(&ts->eax, ts->eax);

loc_4DB963:
	mov(mv, &ts->ecx, x86::mem(0x836564, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(0x836564, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), 0x836560);

loc_4DB979:
	inc(&ts->ebx);
	cmp(&ts->eflags, ts->ebx, 0x8);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4DB912;
    }
	add(&ts->edi, 0x8);
	cmp(&ts->eflags, ts->edi, 0x88);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4DB910;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_4DB990(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x1C, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4DB9B6;
    }
	push(mv, &ts->esp, ts->esi);
	game::sub_4CA690(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4DB9B6;
    }
	dec(mv, x86::mem(0x8364BC, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x836560);
	game::sub_4CBAB0(ts, mv);

loc_4DB9B6:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4DB9C0(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x4, 4), 0xC98356BA);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4DBA4A;
    }
	mov(mv, &ts->ecx, x86::mem(0x8651AC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4C, 4));
	mov(&ts->eax, ts->ecx);
	sub(&ts->eax, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78E09C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4DBA09;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x54, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4DBA09;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_4CB1D0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8651AC, 4));

loc_4DBA09:
	mov(mv, &ts->eax, x86::mem(0x8364DC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4DBA4A;
    }
	sub(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->ecx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8364DC, 4));
	fcompp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4DBA4A;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x54, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4DBA4A;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_4AC850(ts, mv);
	mov(mv, x86::mem(0x8364DC, 4), 0x0);

loc_4DBA4A:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);
}

void sub_4DBA50(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x775048);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xE4, 4));
	push(mv, &ts->esp, 0x5CF08EB7);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	push(mv, &ts->esp, 0x38);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0xC);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4DBABA;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x124, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7926E8);
	mov(&ts->ebp, ts->edi);
	goto loc_4DBABC;

loc_4DBABA:
	xor_(&ts->ebp, ts->ebp);

loc_4DBABC:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4DBAFF;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7926A8);
	goto loc_4DBB01;

loc_4DBAFF:
	xor_(&ts->edi, ts->edi);

loc_4DBB01:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x2);
	if (ts->eflags.zero) {
        goto loc_4DBB42;
    }
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	game::sub_51E090(ts, mv);
	mov(mv, x86::mem(ts->ebx, 4), 0x7930E8);
	goto loc_4DBB44;

loc_4DBB42:
	xor_(&ts->ebx, ts->ebx);

loc_4DBB44:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0xFFFFFFFF);
	game::sub_4CB4B0(ts, mv);
	push(mv, &ts->esp, 0x38);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x3);
	if (ts->eflags.zero) {
        goto loc_4DBB93;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x124, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7927A8);
	mov(&ts->ebp, ts->edi);
	goto loc_4DBB95;

loc_4DBB93:
	xor_(&ts->ebp, ts->ebp);

loc_4DBB95:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x4);
	if (ts->eflags.zero) {
        goto loc_4DBBD8;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebx);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->ebx, 4), 0x792768);
	goto loc_4DBBDA;

loc_4DBBD8:
	xor_(&ts->ebx, ts->ebx);

loc_4DBBDA:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x5);
	if (ts->eflags.zero) {
        goto loc_4DBC1B;
    }
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E090(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x792728);
	goto loc_4DBC1D;

loc_4DBC1B:
	xor_(&ts->edi, ts->edi);

loc_4DBC1D:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0xFFFFFFFF);
	game::sub_4CB4B0(ts, mv);
	push(mv, &ts->esp, 0x38);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x6);
	if (ts->eflags.zero) {
        goto loc_4DBC6C;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x124, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x792868);
	mov(&ts->ebp, ts->edi);
	goto loc_4DBC6E;

loc_4DBC6C:
	xor_(&ts->ebp, ts->ebp);

loc_4DBC6E:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x7);
	if (ts->eflags.zero) {
        goto loc_4DBCB1;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebx);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->ebx, 4), 0x792828);
	goto loc_4DBCB3;

loc_4DBCB1:
	xor_(&ts->ebx, ts->ebx);

loc_4DBCB3:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x8);
	if (ts->eflags.zero) {
        goto loc_4DBCF4;
    }
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E090(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7927E8);
	goto loc_4DBCF6;

loc_4DBCF4:
	xor_(&ts->edi, ts->edi);

loc_4DBCF6:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0xFFFFFFFF);
	game::sub_4CB4B0(ts, mv);
	push(mv, &ts->esp, 0x38);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x9);
	if (ts->eflags.zero) {
        goto loc_4DBD45;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x124, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x792928);
	mov(&ts->ebp, ts->edi);
	goto loc_4DBD47;

loc_4DBD45:
	xor_(&ts->ebp, ts->ebp);

loc_4DBD47:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xA);
	if (ts->eflags.zero) {
        goto loc_4DBD8A;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebx);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->ebx, 4), 0x7928E8);
	goto loc_4DBD8C;

loc_4DBD8A:
	xor_(&ts->ebx, ts->ebx);

loc_4DBD8C:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xB);
	if (ts->eflags.zero) {
        goto loc_4DBDCD;
    }
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E090(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7928A8);
	goto loc_4DBDCF;

loc_4DBDCD:
	xor_(&ts->edi, ts->edi);

loc_4DBDCF:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0xFFFFFFFF);
	game::sub_4CB4B0(ts, mv);
	push(mv, &ts->esp, 0x38);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xC);
	if (ts->eflags.zero) {
        goto loc_4DBE1E;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x124, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7929E8);
	mov(&ts->ebp, ts->edi);
	goto loc_4DBE20;

loc_4DBE1E:
	xor_(&ts->ebp, ts->ebp);

loc_4DBE20:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xD);
	if (ts->eflags.zero) {
        goto loc_4DBE63;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebx);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->ebx, 4), 0x7929A8);
	goto loc_4DBE65;

loc_4DBE63:
	xor_(&ts->ebx, ts->ebx);

loc_4DBE65:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xE);
	if (ts->eflags.zero) {
        goto loc_4DBEA6;
    }
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E090(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x792968);
	goto loc_4DBEA8;

loc_4DBEA6:
	xor_(&ts->edi, ts->edi);

loc_4DBEA8:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0xFFFFFFFF);
	game::sub_4CB4B0(ts, mv);
	push(mv, &ts->esp, 0x38);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xF);
	if (ts->eflags.zero) {
        goto loc_4DBEF7;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x124, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x792A68);
	mov(&ts->ebp, ts->edi);
	goto loc_4DBEF9;

loc_4DBEF7:
	xor_(&ts->ebp, ts->ebp);

loc_4DBEF9:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x10);
	if (ts->eflags.zero) {
        goto loc_4DBF3C;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebx);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->ebx, 4), 0x792A28);
	goto loc_4DBF3E;

loc_4DBF3C:
	xor_(&ts->ebx, ts->ebx);

loc_4DBF3E:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x11);
	if (ts->eflags.zero) {
        goto loc_4DBF7F;
    }
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E090(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7933A8);
	goto loc_4DBF81;

loc_4DBF7F:
	xor_(&ts->edi, ts->edi);

loc_4DBF81:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0xFFFFFFFF);
	game::sub_4CB4B0(ts, mv);
	push(mv, &ts->esp, 0x38);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x12);
	if (ts->eflags.zero) {
        goto loc_4DBFD0;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x124, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x792AE8);
	mov(&ts->ebp, ts->edi);
	goto loc_4DBFD2;

loc_4DBFD0:
	xor_(&ts->ebp, ts->ebp);

loc_4DBFD2:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x13);
	if (ts->eflags.zero) {
        goto loc_4DC015;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebx);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->ebx, 4), 0x792AA8);
	goto loc_4DC017;

loc_4DC015:
	xor_(&ts->ebx, ts->ebx);

loc_4DC017:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x14);
	if (ts->eflags.zero) {
        goto loc_4DC058;
    }
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E090(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x793468);
	goto loc_4DC05A;

loc_4DC058:
	xor_(&ts->edi, ts->edi);

loc_4DC05A:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0xFFFFFFFF);
	game::sub_4CB4B0(ts, mv);
	push(mv, &ts->esp, 0x38);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x15);
	if (ts->eflags.zero) {
        goto loc_4DC0A9;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x124, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x792B68);
	mov(&ts->ebp, ts->edi);
	goto loc_4DC0AB;

loc_4DC0A9:
	xor_(&ts->ebp, ts->ebp);

loc_4DC0AB:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x16);
	if (ts->eflags.zero) {
        goto loc_4DC0EE;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebx);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->ebx, 4), 0x792B28);
	goto loc_4DC0F0;

loc_4DC0EE:
	xor_(&ts->ebx, ts->ebx);

loc_4DC0F0:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x17);
	if (ts->eflags.zero) {
        goto loc_4DC131;
    }
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E090(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x793528);
	goto loc_4DC133;

loc_4DC131:
	xor_(&ts->edi, ts->edi);

loc_4DC133:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0xFFFFFFFF);
	game::sub_4CB4B0(ts, mv);
	push(mv, &ts->esp, 0x38);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x18);
	if (ts->eflags.zero) {
        goto loc_4DC182;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x124, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x792BE8);
	mov(&ts->ebp, ts->edi);
	goto loc_4DC184;

loc_4DC182:
	xor_(&ts->ebp, ts->ebp);

loc_4DC184:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x19);
	if (ts->eflags.zero) {
        goto loc_4DC1C7;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebx);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->ebx, 4), 0x792BA8);
	goto loc_4DC1C9;

loc_4DC1C7:
	xor_(&ts->ebx, ts->ebx);

loc_4DC1C9:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x1A);
	if (ts->eflags.zero) {
        goto loc_4DC20A;
    }
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E090(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7935E8);
	goto loc_4DC20C;

loc_4DC20A:
	xor_(&ts->edi, ts->edi);

loc_4DC20C:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0xFFFFFFFF);
	game::sub_4CB4B0(ts, mv);
	push(mv, &ts->esp, 0x38);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x1B);
	if (ts->eflags.zero) {
        goto loc_4DC25B;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x124, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x792C68);
	mov(&ts->ebp, ts->edi);
	goto loc_4DC25D;

loc_4DC25B:
	xor_(&ts->ebp, ts->ebp);

loc_4DC25D:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x1C);
	if (ts->eflags.zero) {
        goto loc_4DC2A0;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebx);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->ebx, 4), 0x792C28);
	goto loc_4DC2A2;

loc_4DC2A0:
	xor_(&ts->ebx, ts->ebx);

loc_4DC2A2:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x1D);
	if (ts->eflags.zero) {
        goto loc_4DC2E3;
    }
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E090(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7936A8);
	goto loc_4DC2E5;

loc_4DC2E3:
	xor_(&ts->edi, ts->edi);

loc_4DC2E5:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0xFFFFFFFF);
	game::sub_4CB4B0(ts, mv);
	push(mv, &ts->esp, 0x38);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x1E);
	if (ts->eflags.zero) {
        goto loc_4DC334;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x124, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x792CE8);
	mov(&ts->ebp, ts->edi);
	goto loc_4DC336;

loc_4DC334:
	xor_(&ts->ebp, ts->ebp);

loc_4DC336:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x1F);
	if (ts->eflags.zero) {
        goto loc_4DC379;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebx);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->ebx, 4), 0x792CA8);
	goto loc_4DC37B;

loc_4DC379:
	xor_(&ts->ebx, ts->ebx);

loc_4DC37B:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x20);
	if (ts->eflags.zero) {
        goto loc_4DC3BC;
    }
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E090(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x793768);
	goto loc_4DC3BE;

loc_4DC3BC:
	xor_(&ts->edi, ts->edi);

loc_4DC3BE:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0xFFFFFFFF);
	game::sub_4CB4B0(ts, mv);
	push(mv, &ts->esp, 0x38);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x21);
	if (ts->eflags.zero) {
        goto loc_4DC40D;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x124, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x792DE8);
	mov(&ts->ebp, ts->edi);
	goto loc_4DC40F;

loc_4DC40D:
	xor_(&ts->ebp, ts->ebp);

loc_4DC40F:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x22);
	if (ts->eflags.zero) {
        goto loc_4DC452;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebx);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->ebx, 4), 0x792DA8);
	goto loc_4DC454;

loc_4DC452:
	xor_(&ts->ebx, ts->ebx);

loc_4DC454:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x23);
	if (ts->eflags.zero) {
        goto loc_4DC495;
    }
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E090(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7938E8);
	goto loc_4DC497;

loc_4DC495:
	xor_(&ts->edi, ts->edi);

loc_4DC497:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0xFFFFFFFF);
	game::sub_4CB4B0(ts, mv);
	push(mv, &ts->esp, 0x38);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x24);
	if (ts->eflags.zero) {
        goto loc_4DC4E6;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x124, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x792E68);
	mov(&ts->ebp, ts->edi);
	goto loc_4DC4E8;

loc_4DC4E6:
	xor_(&ts->ebp, ts->ebp);

loc_4DC4E8:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x25);
	if (ts->eflags.zero) {
        goto loc_4DC52B;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebx);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->ebx, 4), 0x792E28);
	goto loc_4DC52D;

loc_4DC52B:
	xor_(&ts->ebx, ts->ebx);

loc_4DC52D:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x26);
	if (ts->eflags.zero) {
        goto loc_4DC56E;
    }
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E090(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7939A8);
	goto loc_4DC570;

loc_4DC56E:
	xor_(&ts->edi, ts->edi);

loc_4DC570:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0xFFFFFFFF);
	game::sub_4CB4B0(ts, mv);
	push(mv, &ts->esp, 0x38);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x27);
	if (ts->eflags.zero) {
        goto loc_4DC5BF;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x124, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x792D68);
	mov(&ts->ebp, ts->edi);
	goto loc_4DC5C1;

loc_4DC5BF:
	xor_(&ts->ebp, ts->ebp);

loc_4DC5C1:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x28);
	if (ts->eflags.zero) {
        goto loc_4DC604;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebx);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->ebx, 4), 0x792D28);
	goto loc_4DC606;

loc_4DC604:
	xor_(&ts->ebx, ts->ebx);

loc_4DC606:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x29);
	if (ts->eflags.zero) {
        goto loc_4DC647;
    }
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E090(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x793828);
	goto loc_4DC649;

loc_4DC647:
	xor_(&ts->edi, ts->edi);

loc_4DC649:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0xFFFFFFFF);
	game::sub_4CB4B0(ts, mv);
	push(mv, &ts->esp, 0x38);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x2A);
	if (ts->eflags.zero) {
        goto loc_4DC698;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x124, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x792EE8);
	mov(&ts->ebp, ts->edi);
	goto loc_4DC69A;

loc_4DC698:
	xor_(&ts->ebp, ts->ebp);

loc_4DC69A:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x2B);
	if (ts->eflags.zero) {
        goto loc_4DC6DD;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebx);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->ebx, 4), 0x792EA8);
	goto loc_4DC6DF;

loc_4DC6DD:
	xor_(&ts->ebx, ts->ebx);

loc_4DC6DF:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x2C);
	if (ts->eflags.zero) {
        goto loc_4DC720;
    }
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E090(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x793A68);
	goto loc_4DC722;

loc_4DC720:
	xor_(&ts->edi, ts->edi);

loc_4DC722:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0xFFFFFFFF);
	game::sub_4CB4B0(ts, mv);
	push(mv, &ts->esp, 0x38);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x2D);
	if (ts->eflags.zero) {
        goto loc_4DC771;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x124, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x792F68);
	mov(&ts->ebp, ts->edi);
	goto loc_4DC773;

loc_4DC771:
	xor_(&ts->ebp, ts->ebp);

loc_4DC773:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x2E);
	if (ts->eflags.zero) {
        goto loc_4DC7B6;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebx);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->ebx, 4), 0x792F28);
	goto loc_4DC7B8;

loc_4DC7B6:
	xor_(&ts->ebx, ts->ebx);

loc_4DC7B8:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x2F);
	if (ts->eflags.zero) {
        goto loc_4DC7F9;
    }
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E090(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x793B28);
	goto loc_4DC7FB;

loc_4DC7F9:
	xor_(&ts->edi, ts->edi);

loc_4DC7FB:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0xFFFFFFFF);
	game::sub_4CB4B0(ts, mv);
	push(mv, &ts->esp, 0x38);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x30);
	if (ts->eflags.zero) {
        goto loc_4DC84A;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x124, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x792FE8);
	mov(&ts->ebp, ts->edi);
	goto loc_4DC84C;

loc_4DC84A:
	xor_(&ts->ebp, ts->ebp);

loc_4DC84C:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x31);
	if (ts->eflags.zero) {
        goto loc_4DC88F;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebx);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->ebx, 4), 0x792FA8);
	goto loc_4DC891;

loc_4DC88F:
	xor_(&ts->ebx, ts->ebx);

loc_4DC891:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x32);
	if (ts->eflags.zero) {
        goto loc_4DC8D2;
    }
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E090(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x793BE8);
	goto loc_4DC8D4;

loc_4DC8D2:
	xor_(&ts->edi, ts->edi);

loc_4DC8D4:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0xFFFFFFFF);
	game::sub_4CB4B0(ts, mv);
	push(mv, &ts->esp, 0x38);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x33);
	if (ts->eflags.zero) {
        goto loc_4DC923;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x124, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x793068);
	mov(&ts->ebp, ts->edi);
	goto loc_4DC925;

loc_4DC923:
	xor_(&ts->ebp, ts->ebp);

loc_4DC925:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x34);
	if (ts->eflags.zero) {
        goto loc_4DC968;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebx);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->ebx, 4), 0x793028);
	goto loc_4DC96A;

loc_4DC968:
	xor_(&ts->ebx, ts->ebx);

loc_4DC96A:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x35);
	if (ts->eflags.zero) {
        goto loc_4DC9AB;
    }
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E090(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x793CA8);
	goto loc_4DC9AD;

loc_4DC9AB:
	xor_(&ts->edi, ts->edi);

loc_4DC9AD:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0xFFFFFFFF);
	game::sub_4CB4B0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x64, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4DC9D2;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_4DC9D4;

loc_4DC9D2:
	xor_(&ts->eax, ts->eax);

loc_4DC9D4:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x68, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_774C10:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796A20);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774C24:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796A08);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774C38:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7969F4);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774C4C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7969DC);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774C60:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7969C4);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774C74:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7969B0);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774C88:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796998);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774C9C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796984);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774CB0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796970);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774CC4:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79695C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774CD8:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79694C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774CEC:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79693C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774D00:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796924);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774D14:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796910);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774D28:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7968FC);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774D3C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7968E4);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774D50:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7968CC);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774D64:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7968B8);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774D78:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7968A4);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774D8C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796890);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774DA0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796880);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774DB4:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79686C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774DC8:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79685C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774DDC:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79684C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774DF0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796838);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774E04:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796824);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774E18:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796814);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774E2C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7967FC);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774E40:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7967E8);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774E54:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7967D4);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774E68:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7967C0);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774E7C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7967AC);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774E90:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79679C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774EA4:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796784);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774EB8:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796770);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774ECC:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79675C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774EE0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796744);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774EF4:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796730);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774F08:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79671C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774F1C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796700);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774F30:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7966E8);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774F44:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7966D0);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774F58:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7966BC);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774F6C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7966A8);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774F80:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796698);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774F94:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796674);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774FA8:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796654);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774FBC:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796634);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774FD0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796614);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774FE4:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7965F8);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_774FF8:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7965DC);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_77500C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7965C8);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_775020:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7965B4);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_775034:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7965A4);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4DBA50:
	mov(&ts->eax, 0x7E0A88);
	goto ___CxxFrameHandler;
}

void sub_4DC9F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x775498);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xE4, 4));
	push(mv, &ts->esp, 0xF91FBA4D);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	push(mv, &ts->esp, 0x3C);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0xC);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	xor_(&ts->ebp, ts->ebp);
	cmp(&ts->eflags, ts->edi, ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebp);
	if (ts->eflags.zero) {
        goto loc_4DCA68;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->ebx, x86::mem(0x835938, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x124, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x793168);
	mov(mv, x86::mem(ts->edi + 0x38, 4), ts->ebx);
	mov(&ts->ebp, ts->edi);

loc_4DCA68:
	push(mv, &ts->esp, 0x3C);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4DCABD;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->ebx, x86::mem(0x835938, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x793128);
	mov(mv, x86::mem(ts->edi + 0x38, 4), ts->ebx);
	goto loc_4DCABF;

loc_4DCABD:
	xor_(&ts->edi, ts->edi);

loc_4DCABF:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x2);
	if (ts->eflags.zero) {
        goto loc_4DCB00;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->ebx);
	game::sub_51E090(ts, mv);
	mov(mv, x86::mem(ts->ebx, 4), 0x7930E8);
	goto loc_4DCB02;

loc_4DCB00:
	xor_(&ts->ebx, ts->ebx);

loc_4DCB02:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0xFFFFFFFF);
	game::sub_4CB4B0(ts, mv);
	push(mv, &ts->esp, 0x3C);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x3);
	if (ts->eflags.zero) {
        goto loc_4DCB63;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x124, 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->ebx, x86::mem(0x835938, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7931E8);
	mov(mv, x86::mem(ts->edi + 0x38, 4), ts->ebx);
	mov(&ts->ebp, ts->edi);
	goto loc_4DCB65;

loc_4DCB63:
	xor_(&ts->ebp, ts->ebp);

loc_4DCB65:
	push(mv, &ts->esp, 0x3C);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x4);
	if (ts->eflags.zero) {
        goto loc_4DCBBA;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x11C, 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->edi, x86::mem(0x835938, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->ebx);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->ebx, 4), 0x7931A8);
	mov(mv, x86::mem(ts->ebx + 0x38, 4), ts->edi);
	goto loc_4DCBBC;

loc_4DCBBA:
	xor_(&ts->ebx, ts->ebx);

loc_4DCBBC:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x5);
	if (ts->eflags.zero) {
        goto loc_4DCBFD;
    }
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E090(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x792728);
	goto loc_4DCBFF;

loc_4DCBFD:
	xor_(&ts->edi, ts->edi);

loc_4DCBFF:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0xFFFFFFFF);
	game::sub_4CB4B0(ts, mv);
	push(mv, &ts->esp, 0x3C);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x6);
	if (ts->eflags.zero) {
        goto loc_4DCC60;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->ebx, x86::mem(0x835938, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x124, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x793268);
	mov(mv, x86::mem(ts->edi + 0x38, 4), ts->ebx);
	mov(&ts->ebp, ts->edi);
	goto loc_4DCC62;

loc_4DCC60:
	xor_(&ts->ebp, ts->ebp);

loc_4DCC62:
	push(mv, &ts->esp, 0x3C);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x7);
	if (ts->eflags.zero) {
        goto loc_4DCCB7;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->edi, x86::mem(0x835938, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebx);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->ebx, 4), 0x793228);
	mov(mv, x86::mem(ts->ebx + 0x38, 4), ts->edi);
	goto loc_4DCCB9;

loc_4DCCB7:
	xor_(&ts->ebx, ts->ebx);

loc_4DCCB9:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x8);
	if (ts->eflags.zero) {
        goto loc_4DCCFA;
    }
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E090(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7927E8);
	goto loc_4DCCFC;

loc_4DCCFA:
	xor_(&ts->edi, ts->edi);

loc_4DCCFC:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0xFFFFFFFF);
	game::sub_4CB4B0(ts, mv);
	push(mv, &ts->esp, 0x3C);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x9);
	if (ts->eflags.zero) {
        goto loc_4DCD5D;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->ebx, x86::mem(0x835938, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x124, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7932E8);
	mov(mv, x86::mem(ts->edi + 0x38, 4), ts->ebx);
	mov(&ts->ebp, ts->edi);
	goto loc_4DCD5F;

loc_4DCD5D:
	xor_(&ts->ebp, ts->ebp);

loc_4DCD5F:
	push(mv, &ts->esp, 0x3C);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xA);
	if (ts->eflags.zero) {
        goto loc_4DCDB4;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->edi, x86::mem(0x835938, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->ebx, 4), 0x7932A8);
	mov(mv, x86::mem(ts->ebx + 0x38, 4), ts->edi);
	goto loc_4DCDB6;

loc_4DCDB4:
	xor_(&ts->ebx, ts->ebx);

loc_4DCDB6:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xB);
	if (ts->eflags.zero) {
        goto loc_4DCDF7;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E090(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7928A8);
	goto loc_4DCDF9;

loc_4DCDF7:
	xor_(&ts->edi, ts->edi);

loc_4DCDF9:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0xFFFFFFFF);
	game::sub_4CB4B0(ts, mv);
	push(mv, &ts->esp, 0x3C);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xC);
	if (ts->eflags.zero) {
        goto loc_4DCE5A;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x124, 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->ebx, x86::mem(0x835938, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x793368);
	mov(mv, x86::mem(ts->edi + 0x38, 4), ts->ebx);
	mov(&ts->ebp, ts->edi);
	goto loc_4DCE5C;

loc_4DCE5A:
	xor_(&ts->ebp, ts->ebp);

loc_4DCE5C:
	push(mv, &ts->esp, 0x3C);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xD);
	if (ts->eflags.zero) {
        goto loc_4DCEB1;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x11C, 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->edi, x86::mem(0x835938, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->ebx);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->ebx, 4), 0x793328);
	mov(mv, x86::mem(ts->ebx + 0x38, 4), ts->edi);
	goto loc_4DCEB3;

loc_4DCEB1:
	xor_(&ts->ebx, ts->ebx);

loc_4DCEB3:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xE);
	if (ts->eflags.zero) {
        goto loc_4DCEF4;
    }
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E090(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x792968);
	goto loc_4DCEF6;

loc_4DCEF4:
	xor_(&ts->edi, ts->edi);

loc_4DCEF6:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0xFFFFFFFF);
	game::sub_4CB4B0(ts, mv);
	push(mv, &ts->esp, 0x3C);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xF);
	if (ts->eflags.zero) {
        goto loc_4DCF57;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->ebx, x86::mem(0x835938, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x124, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x793428);
	mov(mv, x86::mem(ts->edi + 0x38, 4), ts->ebx);
	mov(&ts->ebp, ts->edi);
	goto loc_4DCF59;

loc_4DCF57:
	xor_(&ts->ebp, ts->ebp);

loc_4DCF59:
	push(mv, &ts->esp, 0x3C);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x10);
	if (ts->eflags.zero) {
        goto loc_4DCFAE;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->edi, x86::mem(0x835938, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebx);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->ebx, 4), 0x7933E8);
	mov(mv, x86::mem(ts->ebx + 0x38, 4), ts->edi);
	goto loc_4DCFB0;

loc_4DCFAE:
	xor_(&ts->ebx, ts->ebx);

loc_4DCFB0:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x11);
	if (ts->eflags.zero) {
        goto loc_4DCFF1;
    }
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E090(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7933A8);
	goto loc_4DCFF3;

loc_4DCFF1:
	xor_(&ts->edi, ts->edi);

loc_4DCFF3:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0xFFFFFFFF);
	game::sub_4CB4B0(ts, mv);
	push(mv, &ts->esp, 0x3C);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x12);
	if (ts->eflags.zero) {
        goto loc_4DD054;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->ebx, x86::mem(0x835938, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x124, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7934E8);
	mov(mv, x86::mem(ts->edi + 0x38, 4), ts->ebx);
	mov(&ts->ebp, ts->edi);
	goto loc_4DD056;

loc_4DD054:
	xor_(&ts->ebp, ts->ebp);

loc_4DD056:
	push(mv, &ts->esp, 0x3C);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x13);
	if (ts->eflags.zero) {
        goto loc_4DD0AB;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->edi, x86::mem(0x835938, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->ebx, 4), 0x7934A8);
	mov(mv, x86::mem(ts->ebx + 0x38, 4), ts->edi);
	goto loc_4DD0AD;

loc_4DD0AB:
	xor_(&ts->ebx, ts->ebx);

loc_4DD0AD:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x14);
	if (ts->eflags.zero) {
        goto loc_4DD0EE;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E090(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x793468);
	goto loc_4DD0F0;

loc_4DD0EE:
	xor_(&ts->edi, ts->edi);

loc_4DD0F0:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0xFFFFFFFF);
	game::sub_4CB4B0(ts, mv);
	push(mv, &ts->esp, 0x3C);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x15);
	if (ts->eflags.zero) {
        goto loc_4DD151;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x124, 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->ebx, x86::mem(0x835938, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7935A8);
	mov(mv, x86::mem(ts->edi + 0x38, 4), ts->ebx);
	mov(&ts->ebp, ts->edi);
	goto loc_4DD153;

loc_4DD151:
	xor_(&ts->ebp, ts->ebp);

loc_4DD153:
	push(mv, &ts->esp, 0x3C);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x16);
	if (ts->eflags.zero) {
        goto loc_4DD1A8;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x11C, 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->edi, x86::mem(0x835938, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->ebx);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->ebx, 4), 0x793568);
	mov(mv, x86::mem(ts->ebx + 0x38, 4), ts->edi);
	goto loc_4DD1AA;

loc_4DD1A8:
	xor_(&ts->ebx, ts->ebx);

loc_4DD1AA:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x17);
	if (ts->eflags.zero) {
        goto loc_4DD1EB;
    }
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E090(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x793528);
	goto loc_4DD1ED;

loc_4DD1EB:
	xor_(&ts->edi, ts->edi);

loc_4DD1ED:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0xFFFFFFFF);
	game::sub_4CB4B0(ts, mv);
	push(mv, &ts->esp, 0x3C);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x18);
	if (ts->eflags.zero) {
        goto loc_4DD24E;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->ebx, x86::mem(0x835938, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x124, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x793668);
	mov(mv, x86::mem(ts->edi + 0x38, 4), ts->ebx);
	mov(&ts->ebp, ts->edi);
	goto loc_4DD250;

loc_4DD24E:
	xor_(&ts->ebp, ts->ebp);

loc_4DD250:
	push(mv, &ts->esp, 0x3C);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x19);
	if (ts->eflags.zero) {
        goto loc_4DD2A5;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->edi, x86::mem(0x835938, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebx);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->ebx, 4), 0x793628);
	mov(mv, x86::mem(ts->ebx + 0x38, 4), ts->edi);
	goto loc_4DD2A7;

loc_4DD2A5:
	xor_(&ts->ebx, ts->ebx);

loc_4DD2A7:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x1A);
	if (ts->eflags.zero) {
        goto loc_4DD2E8;
    }
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E090(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7935E8);
	goto loc_4DD2EA;

loc_4DD2E8:
	xor_(&ts->edi, ts->edi);

loc_4DD2EA:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0xFFFFFFFF);
	game::sub_4CB4B0(ts, mv);
	push(mv, &ts->esp, 0x3C);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x1B);
	if (ts->eflags.zero) {
        goto loc_4DD34B;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->ebx, x86::mem(0x835938, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x124, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x793728);
	mov(mv, x86::mem(ts->edi + 0x38, 4), ts->ebx);
	mov(&ts->ebp, ts->edi);
	goto loc_4DD34D;

loc_4DD34B:
	xor_(&ts->ebp, ts->ebp);

loc_4DD34D:
	push(mv, &ts->esp, 0x3C);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x1C);
	if (ts->eflags.zero) {
        goto loc_4DD3A2;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->edi, x86::mem(0x835938, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->ebx, 4), 0x7936E8);
	mov(mv, x86::mem(ts->ebx + 0x38, 4), ts->edi);
	goto loc_4DD3A4;

loc_4DD3A2:
	xor_(&ts->ebx, ts->ebx);

loc_4DD3A4:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x1D);
	if (ts->eflags.zero) {
        goto loc_4DD3E5;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E090(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7936A8);
	goto loc_4DD3E7;

loc_4DD3E5:
	xor_(&ts->edi, ts->edi);

loc_4DD3E7:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0xFFFFFFFF);
	game::sub_4CB4B0(ts, mv);
	push(mv, &ts->esp, 0x3C);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x1E);
	if (ts->eflags.zero) {
        goto loc_4DD448;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x124, 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->ebx, x86::mem(0x835938, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7937E8);
	mov(mv, x86::mem(ts->edi + 0x38, 4), ts->ebx);
	mov(&ts->ebp, ts->edi);
	goto loc_4DD44A;

loc_4DD448:
	xor_(&ts->ebp, ts->ebp);

loc_4DD44A:
	push(mv, &ts->esp, 0x3C);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x1F);
	if (ts->eflags.zero) {
        goto loc_4DD49F;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x11C, 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->edi, x86::mem(0x835938, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->ebx);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->ebx, 4), 0x7937A8);
	mov(mv, x86::mem(ts->ebx + 0x38, 4), ts->edi);
	goto loc_4DD4A1;

loc_4DD49F:
	xor_(&ts->ebx, ts->ebx);

loc_4DD4A1:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x20);
	if (ts->eflags.zero) {
        goto loc_4DD4E2;
    }
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E090(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x793768);
	goto loc_4DD4E4;

loc_4DD4E2:
	xor_(&ts->edi, ts->edi);

loc_4DD4E4:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0xFFFFFFFF);
	game::sub_4CB4B0(ts, mv);
	push(mv, &ts->esp, 0x3C);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x21);
	if (ts->eflags.zero) {
        goto loc_4DD545;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->ebx, x86::mem(0x835938, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x124, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x793968);
	mov(mv, x86::mem(ts->edi + 0x38, 4), ts->ebx);
	mov(&ts->ebp, ts->edi);
	goto loc_4DD547;

loc_4DD545:
	xor_(&ts->ebp, ts->ebp);

loc_4DD547:
	push(mv, &ts->esp, 0x3C);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x22);
	if (ts->eflags.zero) {
        goto loc_4DD59C;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->edi, x86::mem(0x835938, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebx);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->ebx, 4), 0x793928);
	mov(mv, x86::mem(ts->ebx + 0x38, 4), ts->edi);
	goto loc_4DD59E;

loc_4DD59C:
	xor_(&ts->ebx, ts->ebx);

loc_4DD59E:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x23);
	if (ts->eflags.zero) {
        goto loc_4DD5DF;
    }
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E090(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7938E8);
	goto loc_4DD5E1;

loc_4DD5DF:
	xor_(&ts->edi, ts->edi);

loc_4DD5E1:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0xFFFFFFFF);
	game::sub_4CB4B0(ts, mv);
	push(mv, &ts->esp, 0x3C);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x24);
	if (ts->eflags.zero) {
        goto loc_4DD642;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->ebx, x86::mem(0x835938, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x124, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x793A28);
	mov(mv, x86::mem(ts->edi + 0x38, 4), ts->ebx);
	mov(&ts->ebp, ts->edi);
	goto loc_4DD644;

loc_4DD642:
	xor_(&ts->ebp, ts->ebp);

loc_4DD644:
	push(mv, &ts->esp, 0x3C);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x25);
	if (ts->eflags.zero) {
        goto loc_4DD699;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->edi, x86::mem(0x835938, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->ebx, 4), 0x7939E8);
	mov(mv, x86::mem(ts->ebx + 0x38, 4), ts->edi);
	goto loc_4DD69B;

loc_4DD699:
	xor_(&ts->ebx, ts->ebx);

loc_4DD69B:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x26);
	if (ts->eflags.zero) {
        goto loc_4DD6DC;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E090(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7939A8);
	goto loc_4DD6DE;

loc_4DD6DC:
	xor_(&ts->edi, ts->edi);

loc_4DD6DE:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0xFFFFFFFF);
	game::sub_4CB4B0(ts, mv);
	push(mv, &ts->esp, 0x3C);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x27);
	if (ts->eflags.zero) {
        goto loc_4DD73F;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x124, 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->ebx, x86::mem(0x835938, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7938A8);
	mov(mv, x86::mem(ts->edi + 0x38, 4), ts->ebx);
	mov(&ts->ebp, ts->edi);
	goto loc_4DD741;

loc_4DD73F:
	xor_(&ts->ebp, ts->ebp);

loc_4DD741:
	push(mv, &ts->esp, 0x3C);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x28);
	if (ts->eflags.zero) {
        goto loc_4DD796;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x11C, 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->edi, x86::mem(0x835938, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->ebx);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->ebx, 4), 0x793868);
	mov(mv, x86::mem(ts->ebx + 0x38, 4), ts->edi);
	goto loc_4DD798;

loc_4DD796:
	xor_(&ts->ebx, ts->ebx);

loc_4DD798:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x29);
	if (ts->eflags.zero) {
        goto loc_4DD7D9;
    }
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E090(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x793828);
	goto loc_4DD7DB;

loc_4DD7D9:
	xor_(&ts->edi, ts->edi);

loc_4DD7DB:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0xFFFFFFFF);
	game::sub_4CB4B0(ts, mv);
	push(mv, &ts->esp, 0x3C);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x2A);
	if (ts->eflags.zero) {
        goto loc_4DD83C;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->ebx, x86::mem(0x835938, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x124, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x793AE8);
	mov(mv, x86::mem(ts->edi + 0x38, 4), ts->ebx);
	mov(&ts->ebp, ts->edi);
	goto loc_4DD83E;

loc_4DD83C:
	xor_(&ts->ebp, ts->ebp);

loc_4DD83E:
	push(mv, &ts->esp, 0x3C);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x2B);
	if (ts->eflags.zero) {
        goto loc_4DD893;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->edi, x86::mem(0x835938, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebx);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->ebx, 4), 0x793AA8);
	mov(mv, x86::mem(ts->ebx + 0x38, 4), ts->edi);
	goto loc_4DD895;

loc_4DD893:
	xor_(&ts->ebx, ts->ebx);

loc_4DD895:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x2C);
	if (ts->eflags.zero) {
        goto loc_4DD8D6;
    }
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E090(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x793A68);
	goto loc_4DD8D8;

loc_4DD8D6:
	xor_(&ts->edi, ts->edi);

loc_4DD8D8:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0xFFFFFFFF);
	game::sub_4CB4B0(ts, mv);
	push(mv, &ts->esp, 0x3C);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x2D);
	if (ts->eflags.zero) {
        goto loc_4DD939;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->ebx, x86::mem(0x835938, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x124, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x793BA8);
	mov(mv, x86::mem(ts->edi + 0x38, 4), ts->ebx);
	mov(&ts->ebp, ts->edi);
	goto loc_4DD93B;

loc_4DD939:
	xor_(&ts->ebp, ts->ebp);

loc_4DD93B:
	push(mv, &ts->esp, 0x3C);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x2E);
	if (ts->eflags.zero) {
        goto loc_4DD990;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->edi, x86::mem(0x835938, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->ebx, 4), 0x793B68);
	mov(mv, x86::mem(ts->ebx + 0x38, 4), ts->edi);
	goto loc_4DD992;

loc_4DD990:
	xor_(&ts->ebx, ts->ebx);

loc_4DD992:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x2F);
	if (ts->eflags.zero) {
        goto loc_4DD9D3;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E090(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x793B28);
	goto loc_4DD9D5;

loc_4DD9D3:
	xor_(&ts->edi, ts->edi);

loc_4DD9D5:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0xFFFFFFFF);
	game::sub_4CB4B0(ts, mv);
	push(mv, &ts->esp, 0x3C);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x30);
	if (ts->eflags.zero) {
        goto loc_4DDA36;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x124, 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->ebx, x86::mem(0x835938, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x793C68);
	mov(mv, x86::mem(ts->edi + 0x38, 4), ts->ebx);
	mov(&ts->ebp, ts->edi);
	goto loc_4DDA38;

loc_4DDA36:
	xor_(&ts->ebp, ts->ebp);

loc_4DDA38:
	push(mv, &ts->esp, 0x3C);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x31);
	if (ts->eflags.zero) {
        goto loc_4DDA8D;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x11C, 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->edi, x86::mem(0x835938, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->ebx);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->ebx, 4), 0x793C28);
	mov(mv, x86::mem(ts->ebx + 0x38, 4), ts->edi);
	goto loc_4DDA8F;

loc_4DDA8D:
	xor_(&ts->ebx, ts->ebx);

loc_4DDA8F:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x32);
	if (ts->eflags.zero) {
        goto loc_4DDAD0;
    }
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E090(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x793BE8);
	goto loc_4DDAD2;

loc_4DDAD0:
	xor_(&ts->edi, ts->edi);

loc_4DDAD2:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0xFFFFFFFF);
	game::sub_4CB4B0(ts, mv);
	push(mv, &ts->esp, 0x3C);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x33);
	if (ts->eflags.zero) {
        goto loc_4DDB33;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->ebx, x86::mem(0x835938, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x124, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x793D28);
	mov(mv, x86::mem(ts->edi + 0x38, 4), ts->ebx);
	mov(&ts->ebp, ts->edi);
	goto loc_4DDB35;

loc_4DDB33:
	xor_(&ts->ebp, ts->ebp);

loc_4DDB35:
	push(mv, &ts->esp, 0x3C);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x34);
	if (ts->eflags.zero) {
        goto loc_4DDB8A;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->edi, x86::mem(0x835938, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebx);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->ebx, 4), 0x793CE8);
	mov(mv, x86::mem(ts->ebx + 0x38, 4), ts->edi);
	goto loc_4DDB8C;

loc_4DDB8A:
	xor_(&ts->ebx, ts->ebx);

loc_4DDB8C:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x35);
	if (ts->eflags.zero) {
        goto loc_4DDBCD;
    }
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E090(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x793CA8);
	goto loc_4DDBCF;

loc_4DDBCD:
	xor_(&ts->edi, ts->edi);

loc_4DDBCF:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0xFFFFFFFF);
	game::sub_4CB4B0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x64, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4DDBF4;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_4DDBF6;

loc_4DDBF4:
	xor_(&ts->eax, ts->eax);

loc_4DDBF6:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x68, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_775060:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796FD4);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_775074:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796FB8);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_775088:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796F9C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_77509C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796F7C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7750B0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796F60);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7750C4:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796F44);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7750D8:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796F28);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7750EC:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796F0C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_775100:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796EF4);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_775114:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796EDC);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_775128:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796EC4);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_77513C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796EB0);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_775150:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796E94);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_775164:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796E78);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_775178:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796E60);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_77518C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796E40);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7751A0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796E24);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7751B4:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796E08);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7751C8:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796DEC);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7751DC:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796DD4);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7751F0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796DBC);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_775204:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796DA4);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_775218:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796D8C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_77522C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796D78);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_775240:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796D5C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_775254:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796D44);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_775268:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796D2C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_77527C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796D10);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_775290:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796CF4);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7752A4:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796CDC);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7752B8:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796CC0);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7752CC:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796CA8);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7752E0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796C90);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7752F4:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796C74);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_775308:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796C58);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_77531C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796C40);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_775330:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796C24);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_775344:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796C08);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_775358:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796BF0);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_77536C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796BD0);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_775380:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796BB0);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_775394:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796B94);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7753A8:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796B78);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7753BC:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796B60);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7753D0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796698);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7753E4:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796B38);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7753F8:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796B10);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_77540C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796AEC);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_775420:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796AC8);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_775434:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796AA4);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_775448:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796A84);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_77545C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796A68);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_775470:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796A50);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_775484:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796A38);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4DC9F0:
	mov(&ts->eax, 0x7E0C54);
	goto ___CxxFrameHandler;
}

void sub_4DDC10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x775870);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xE4, 4));
	push(mv, &ts->esp, 0x14D4BD3B);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	push(mv, &ts->esp, 0x3C);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0xC);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	xor_(&ts->ebp, ts->ebp);
	cmp(&ts->eflags, ts->edi, ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebp);
	if (ts->eflags.zero) {
        goto loc_4DDC88;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->ebx, x86::mem(0x835938, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x124, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x793268);
	mov(mv, x86::mem(ts->edi + 0x38, 4), ts->ebx);
	mov(&ts->ebp, ts->edi);

loc_4DDC88:
	push(mv, &ts->esp, 0x3C);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4DDCDD;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->ebx, x86::mem(0x835938, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x793228);
	mov(mv, x86::mem(ts->edi + 0x38, 4), ts->ebx);
	goto loc_4DDCDF;

loc_4DDCDD:
	xor_(&ts->edi, ts->edi);

loc_4DDCDF:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x2);
	if (ts->eflags.zero) {
        goto loc_4DDD20;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->ebx);
	game::sub_51E090(ts, mv);
	mov(mv, x86::mem(ts->ebx, 4), 0x7927E8);
	goto loc_4DDD22;

loc_4DDD20:
	xor_(&ts->ebx, ts->ebx);

loc_4DDD22:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0xFFFFFFFF);
	game::sub_4CB4B0(ts, mv);
	push(mv, &ts->esp, 0x3C);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x3);
	if (ts->eflags.zero) {
        goto loc_4DDD83;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x124, 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->ebx, x86::mem(0x835938, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7932E8);
	mov(mv, x86::mem(ts->edi + 0x38, 4), ts->ebx);
	mov(&ts->ebp, ts->edi);
	goto loc_4DDD85;

loc_4DDD83:
	xor_(&ts->ebp, ts->ebp);

loc_4DDD85:
	push(mv, &ts->esp, 0x3C);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x4);
	if (ts->eflags.zero) {
        goto loc_4DDDDA;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x11C, 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->edi, x86::mem(0x835938, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->ebx);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->ebx, 4), 0x7932A8);
	mov(mv, x86::mem(ts->ebx + 0x38, 4), ts->edi);
	goto loc_4DDDDC;

loc_4DDDDA:
	xor_(&ts->ebx, ts->ebx);

loc_4DDDDC:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x5);
	if (ts->eflags.zero) {
        goto loc_4DDE1D;
    }
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E090(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7928A8);
	goto loc_4DDE1F;

loc_4DDE1D:
	xor_(&ts->edi, ts->edi);

loc_4DDE1F:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0xFFFFFFFF);
	game::sub_4CB4B0(ts, mv);
	push(mv, &ts->esp, 0x3C);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x6);
	if (ts->eflags.zero) {
        goto loc_4DDE80;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->ebx, x86::mem(0x835938, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x124, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x793368);
	mov(mv, x86::mem(ts->edi + 0x38, 4), ts->ebx);
	mov(&ts->ebp, ts->edi);
	goto loc_4DDE82;

loc_4DDE80:
	xor_(&ts->ebp, ts->ebp);

loc_4DDE82:
	push(mv, &ts->esp, 0x3C);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x7);
	if (ts->eflags.zero) {
        goto loc_4DDED7;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->edi, x86::mem(0x835938, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebx);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->ebx, 4), 0x793328);
	mov(mv, x86::mem(ts->ebx + 0x38, 4), ts->edi);
	goto loc_4DDED9;

loc_4DDED7:
	xor_(&ts->ebx, ts->ebx);

loc_4DDED9:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x8);
	if (ts->eflags.zero) {
        goto loc_4DDF1A;
    }
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E090(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x792968);
	goto loc_4DDF1C;

loc_4DDF1A:
	xor_(&ts->edi, ts->edi);

loc_4DDF1C:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0xFFFFFFFF);
	game::sub_4CB4B0(ts, mv);
	push(mv, &ts->esp, 0x3C);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x9);
	if (ts->eflags.zero) {
        goto loc_4DDF7D;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->ebx, x86::mem(0x835938, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x124, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x793428);
	mov(mv, x86::mem(ts->edi + 0x38, 4), ts->ebx);
	mov(&ts->ebp, ts->edi);
	goto loc_4DDF7F;

loc_4DDF7D:
	xor_(&ts->ebp, ts->ebp);

loc_4DDF7F:
	push(mv, &ts->esp, 0x3C);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xA);
	if (ts->eflags.zero) {
        goto loc_4DDFD4;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->edi, x86::mem(0x835938, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->ebx, 4), 0x7933E8);
	mov(mv, x86::mem(ts->ebx + 0x38, 4), ts->edi);
	goto loc_4DDFD6;

loc_4DDFD4:
	xor_(&ts->ebx, ts->ebx);

loc_4DDFD6:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xB);
	if (ts->eflags.zero) {
        goto loc_4DE017;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E090(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7933A8);
	goto loc_4DE019;

loc_4DE017:
	xor_(&ts->edi, ts->edi);

loc_4DE019:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0xFFFFFFFF);
	game::sub_4CB4B0(ts, mv);
	push(mv, &ts->esp, 0x3C);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xC);
	if (ts->eflags.zero) {
        goto loc_4DE07A;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x124, 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->ebx, x86::mem(0x835938, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7934E8);
	mov(mv, x86::mem(ts->edi + 0x38, 4), ts->ebx);
	mov(&ts->ebp, ts->edi);
	goto loc_4DE07C;

loc_4DE07A:
	xor_(&ts->ebp, ts->ebp);

loc_4DE07C:
	push(mv, &ts->esp, 0x3C);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xD);
	if (ts->eflags.zero) {
        goto loc_4DE0D1;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x11C, 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->edi, x86::mem(0x835938, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->ebx);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->ebx, 4), 0x7934A8);
	mov(mv, x86::mem(ts->ebx + 0x38, 4), ts->edi);
	goto loc_4DE0D3;

loc_4DE0D1:
	xor_(&ts->ebx, ts->ebx);

loc_4DE0D3:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xE);
	if (ts->eflags.zero) {
        goto loc_4DE114;
    }
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E090(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x793468);
	goto loc_4DE116;

loc_4DE114:
	xor_(&ts->edi, ts->edi);

loc_4DE116:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0xFFFFFFFF);
	game::sub_4CB4B0(ts, mv);
	push(mv, &ts->esp, 0x3C);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xF);
	if (ts->eflags.zero) {
        goto loc_4DE177;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->ebx, x86::mem(0x835938, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x124, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7935A8);
	mov(mv, x86::mem(ts->edi + 0x38, 4), ts->ebx);
	mov(&ts->ebp, ts->edi);
	goto loc_4DE179;

loc_4DE177:
	xor_(&ts->ebp, ts->ebp);

loc_4DE179:
	push(mv, &ts->esp, 0x3C);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x10);
	if (ts->eflags.zero) {
        goto loc_4DE1CE;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->edi, x86::mem(0x835938, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebx);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->ebx, 4), 0x793568);
	mov(mv, x86::mem(ts->ebx + 0x38, 4), ts->edi);
	goto loc_4DE1D0;

loc_4DE1CE:
	xor_(&ts->ebx, ts->ebx);

loc_4DE1D0:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x11);
	if (ts->eflags.zero) {
        goto loc_4DE211;
    }
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E090(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x793528);
	goto loc_4DE213;

loc_4DE211:
	xor_(&ts->edi, ts->edi);

loc_4DE213:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0xFFFFFFFF);
	game::sub_4CB4B0(ts, mv);
	push(mv, &ts->esp, 0x3C);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x12);
	if (ts->eflags.zero) {
        goto loc_4DE274;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->ebx, x86::mem(0x835938, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x124, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x793668);
	mov(mv, x86::mem(ts->edi + 0x38, 4), ts->ebx);
	mov(&ts->ebp, ts->edi);
	goto loc_4DE276;

loc_4DE274:
	xor_(&ts->ebp, ts->ebp);

loc_4DE276:
	push(mv, &ts->esp, 0x3C);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x13);
	if (ts->eflags.zero) {
        goto loc_4DE2CB;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->edi, x86::mem(0x835938, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->ebx, 4), 0x793628);
	mov(mv, x86::mem(ts->ebx + 0x38, 4), ts->edi);
	goto loc_4DE2CD;

loc_4DE2CB:
	xor_(&ts->ebx, ts->ebx);

loc_4DE2CD:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x14);
	if (ts->eflags.zero) {
        goto loc_4DE30E;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E090(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7935E8);
	goto loc_4DE310;

loc_4DE30E:
	xor_(&ts->edi, ts->edi);

loc_4DE310:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0xFFFFFFFF);
	game::sub_4CB4B0(ts, mv);
	push(mv, &ts->esp, 0x3C);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x15);
	if (ts->eflags.zero) {
        goto loc_4DE371;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x124, 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->ebx, x86::mem(0x835938, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x793728);
	mov(mv, x86::mem(ts->edi + 0x38, 4), ts->ebx);
	mov(&ts->ebp, ts->edi);
	goto loc_4DE373;

loc_4DE371:
	xor_(&ts->ebp, ts->ebp);

loc_4DE373:
	push(mv, &ts->esp, 0x3C);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x16);
	if (ts->eflags.zero) {
        goto loc_4DE3C8;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x11C, 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->edi, x86::mem(0x835938, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->ebx);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->ebx, 4), 0x7936E8);
	mov(mv, x86::mem(ts->ebx + 0x38, 4), ts->edi);
	goto loc_4DE3CA;

loc_4DE3C8:
	xor_(&ts->ebx, ts->ebx);

loc_4DE3CA:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x17);
	if (ts->eflags.zero) {
        goto loc_4DE40B;
    }
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E090(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7936A8);
	goto loc_4DE40D;

loc_4DE40B:
	xor_(&ts->edi, ts->edi);

loc_4DE40D:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0xFFFFFFFF);
	game::sub_4CB4B0(ts, mv);
	push(mv, &ts->esp, 0x3C);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x18);
	if (ts->eflags.zero) {
        goto loc_4DE46E;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->ebx, x86::mem(0x835938, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x124, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7937E8);
	mov(mv, x86::mem(ts->edi + 0x38, 4), ts->ebx);
	mov(&ts->ebp, ts->edi);
	goto loc_4DE470;

loc_4DE46E:
	xor_(&ts->ebp, ts->ebp);

loc_4DE470:
	push(mv, &ts->esp, 0x3C);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x19);
	if (ts->eflags.zero) {
        goto loc_4DE4C5;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->edi, x86::mem(0x835938, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebx);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->ebx, 4), 0x7937A8);
	mov(mv, x86::mem(ts->ebx + 0x38, 4), ts->edi);
	goto loc_4DE4C7;

loc_4DE4C5:
	xor_(&ts->ebx, ts->ebx);

loc_4DE4C7:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x1A);
	if (ts->eflags.zero) {
        goto loc_4DE508;
    }
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E090(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x793768);
	goto loc_4DE50A;

loc_4DE508:
	xor_(&ts->edi, ts->edi);

loc_4DE50A:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0xFFFFFFFF);
	game::sub_4CB4B0(ts, mv);
	push(mv, &ts->esp, 0x3C);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x1B);
	if (ts->eflags.zero) {
        goto loc_4DE56B;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->ebx, x86::mem(0x835938, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x124, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x793968);
	mov(mv, x86::mem(ts->edi + 0x38, 4), ts->ebx);
	mov(&ts->ebp, ts->edi);
	goto loc_4DE56D;

loc_4DE56B:
	xor_(&ts->ebp, ts->ebp);

loc_4DE56D:
	push(mv, &ts->esp, 0x3C);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x1C);
	if (ts->eflags.zero) {
        goto loc_4DE5C2;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->edi, x86::mem(0x835938, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->ebx, 4), 0x793928);
	mov(mv, x86::mem(ts->ebx + 0x38, 4), ts->edi);
	goto loc_4DE5C4;

loc_4DE5C2:
	xor_(&ts->ebx, ts->ebx);

loc_4DE5C4:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x1D);
	if (ts->eflags.zero) {
        goto loc_4DE605;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E090(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7938E8);
	goto loc_4DE607;

loc_4DE605:
	xor_(&ts->edi, ts->edi);

loc_4DE607:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0xFFFFFFFF);
	game::sub_4CB4B0(ts, mv);
	push(mv, &ts->esp, 0x3C);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x1E);
	if (ts->eflags.zero) {
        goto loc_4DE668;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x124, 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->ebx, x86::mem(0x835938, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x793A28);
	mov(mv, x86::mem(ts->edi + 0x38, 4), ts->ebx);
	mov(&ts->ebp, ts->edi);
	goto loc_4DE66A;

loc_4DE668:
	xor_(&ts->ebp, ts->ebp);

loc_4DE66A:
	push(mv, &ts->esp, 0x3C);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x1F);
	if (ts->eflags.zero) {
        goto loc_4DE6BF;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x11C, 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->edi, x86::mem(0x835938, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->ebx);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->ebx, 4), 0x7939E8);
	mov(mv, x86::mem(ts->ebx + 0x38, 4), ts->edi);
	goto loc_4DE6C1;

loc_4DE6BF:
	xor_(&ts->ebx, ts->ebx);

loc_4DE6C1:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x20);
	if (ts->eflags.zero) {
        goto loc_4DE702;
    }
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E090(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7939A8);
	goto loc_4DE704;

loc_4DE702:
	xor_(&ts->edi, ts->edi);

loc_4DE704:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0xFFFFFFFF);
	game::sub_4CB4B0(ts, mv);
	push(mv, &ts->esp, 0x3C);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x21);
	if (ts->eflags.zero) {
        goto loc_4DE765;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->ebx, x86::mem(0x835938, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x124, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7930A8);
	mov(mv, x86::mem(ts->edi + 0x38, 4), ts->ebx);
	mov(&ts->ebp, ts->edi);
	goto loc_4DE767;

loc_4DE765:
	xor_(&ts->ebp, ts->ebp);

loc_4DE767:
	push(mv, &ts->esp, 0x3C);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x22);
	if (ts->eflags.zero) {
        goto loc_4DE7BC;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->edi, x86::mem(0x835938, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebx);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->ebx, 4), 0x793868);
	mov(mv, x86::mem(ts->ebx + 0x38, 4), ts->edi);
	goto loc_4DE7BE;

loc_4DE7BC:
	xor_(&ts->ebx, ts->ebx);

loc_4DE7BE:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x23);
	if (ts->eflags.zero) {
        goto loc_4DE7FF;
    }
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E090(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x793828);
	goto loc_4DE801;

loc_4DE7FF:
	xor_(&ts->edi, ts->edi);

loc_4DE801:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0xFFFFFFFF);
	game::sub_4CB4B0(ts, mv);
	push(mv, &ts->esp, 0x3C);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x24);
	if (ts->eflags.zero) {
        goto loc_4DE862;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->ebx, x86::mem(0x835938, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x124, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x793AE8);
	mov(mv, x86::mem(ts->edi + 0x38, 4), ts->ebx);
	mov(&ts->ebp, ts->edi);
	goto loc_4DE864;

loc_4DE862:
	xor_(&ts->ebp, ts->ebp);

loc_4DE864:
	push(mv, &ts->esp, 0x3C);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x25);
	if (ts->eflags.zero) {
        goto loc_4DE8B9;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->edi, x86::mem(0x835938, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->ebx, 4), 0x793AA8);
	mov(mv, x86::mem(ts->ebx + 0x38, 4), ts->edi);
	goto loc_4DE8BB;

loc_4DE8B9:
	xor_(&ts->ebx, ts->ebx);

loc_4DE8BB:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x26);
	if (ts->eflags.zero) {
        goto loc_4DE8FC;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E090(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x793A68);
	goto loc_4DE8FE;

loc_4DE8FC:
	xor_(&ts->edi, ts->edi);

loc_4DE8FE:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0xFFFFFFFF);
	game::sub_4CB4B0(ts, mv);
	push(mv, &ts->esp, 0x3C);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x27);
	if (ts->eflags.zero) {
        goto loc_4DE95F;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x124, 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->ebx, x86::mem(0x835938, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x793BA8);
	mov(mv, x86::mem(ts->edi + 0x38, 4), ts->ebx);
	mov(&ts->ebp, ts->edi);
	goto loc_4DE961;

loc_4DE95F:
	xor_(&ts->ebp, ts->ebp);

loc_4DE961:
	push(mv, &ts->esp, 0x3C);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x28);
	if (ts->eflags.zero) {
        goto loc_4DE9B6;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x11C, 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->edi, x86::mem(0x835938, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->ebx);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->ebx, 4), 0x793B68);
	mov(mv, x86::mem(ts->ebx + 0x38, 4), ts->edi);
	goto loc_4DE9B8;

loc_4DE9B6:
	xor_(&ts->ebx, ts->ebx);

loc_4DE9B8:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x29);
	if (ts->eflags.zero) {
        goto loc_4DE9F9;
    }
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E090(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x793B28);
	goto loc_4DE9FB;

loc_4DE9F9:
	xor_(&ts->edi, ts->edi);

loc_4DE9FB:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0xFFFFFFFF);
	game::sub_4CB4B0(ts, mv);
	push(mv, &ts->esp, 0x3C);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x2A);
	if (ts->eflags.zero) {
        goto loc_4DEA5C;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->ebx, x86::mem(0x835938, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x124, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x793C68);
	mov(mv, x86::mem(ts->edi + 0x38, 4), ts->ebx);
	mov(&ts->ebp, ts->edi);
	goto loc_4DEA5E;

loc_4DEA5C:
	xor_(&ts->ebp, ts->ebp);

loc_4DEA5E:
	push(mv, &ts->esp, 0x3C);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x2B);
	if (ts->eflags.zero) {
        goto loc_4DEAB3;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->edi, x86::mem(0x835938, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebx);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->ebx, 4), 0x793C28);
	mov(mv, x86::mem(ts->ebx + 0x38, 4), ts->edi);
	goto loc_4DEAB5;

loc_4DEAB3:
	xor_(&ts->ebx, ts->ebx);

loc_4DEAB5:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x2C);
	if (ts->eflags.zero) {
        goto loc_4DEAF6;
    }
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E090(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x793BE8);
	goto loc_4DEAF8;

loc_4DEAF6:
	xor_(&ts->edi, ts->edi);

loc_4DEAF8:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0xFFFFFFFF);
	game::sub_4CB4B0(ts, mv);
	push(mv, &ts->esp, 0x3C);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x2D);
	if (ts->eflags.zero) {
        goto loc_4DEB59;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->ebx, x86::mem(0x835938, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x124, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x793D28);
	mov(mv, x86::mem(ts->edi + 0x38, 4), ts->ebx);
	mov(&ts->ebp, ts->edi);
	goto loc_4DEB5B;

loc_4DEB59:
	xor_(&ts->ebp, ts->ebp);

loc_4DEB5B:
	push(mv, &ts->esp, 0x3C);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x2E);
	if (ts->eflags.zero) {
        goto loc_4DEBB0;
    }
	mov(mv, &ts->eax, x86::mem(0x8364EC, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->eax*2), 4));
	mov(mv, &ts->edi, x86::mem(0x835938, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	game::sub_51DFC0(ts, mv);
	mov(mv, x86::mem(ts->ebx, 4), 0x793CE8);
	mov(mv, x86::mem(ts->ebx + 0x38, 4), ts->edi);
	goto loc_4DEBB2;

loc_4DEBB0:
	xor_(&ts->ebx, ts->ebx);

loc_4DEBB2:
	push(mv, &ts->esp, 0x38);
	mov(mv, x86::mem(ts->esp + 0x20, 4), 0xFFFFFFFF);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x2F);
	if (ts->eflags.zero) {
        goto loc_4DEBF3;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E090(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x793CA8);
	goto loc_4DEBF5;

loc_4DEBF3:
	xor_(&ts->edi, ts->edi);

loc_4DEBF5:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x28, 4), 0xFFFFFFFF);
	game::sub_4CB4B0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x64, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4DEC1A;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_4DEC1C;

loc_4DEC1A:
	xor_(&ts->eax, ts->eax);

loc_4DEC1C:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x68, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_7754B0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7974B8);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7754C4:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79749C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7754D8:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x797484);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7754EC:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79746C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_775500:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x797454);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_775514:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x797440);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_775528:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x797424);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_77553C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79740C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_775550:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7973F4);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_775564:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7973D8);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_775578:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7973BC);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_77558C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7973A4);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7755A0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x797388);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7755B4:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x797370);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7755C8:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x797358);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7755DC:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x797340);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7755F0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79732C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_775604:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x797318);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_775618:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7972FC);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_77562C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7972E4);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_775640:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7972CC);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_775654:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7972B0);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_775668:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x797294);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_77567C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79727C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_775690:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x797260);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7756A4:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x797248);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7756B8:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x797230);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7756CC:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x797214);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7756E0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7971F8);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7756F4:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7971E0);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_775708:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7971C4);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_77571C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7971AC);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_775730:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x797194);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_775744:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x797174);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_775758:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x797158);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_77576C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79713C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_775780:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x797124);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_775794:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79710C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7757A8:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796698);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7757BC:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7970E4);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7757D0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7970C0);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7757E4:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79709C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7757F8:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x797078);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_77580C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x797058);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_775820:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x797038);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_775834:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x797020);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_775848:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x797008);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_77585C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796FF4);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4DDC10:
	mov(&ts->eax, 0x7E0DF0);
	goto ___CxxFrameHandler;
}

void sub_4DEC40(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x64, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	cmp(&ts->eflags, ts->ecx, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4DECC3;
    }
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4DEC78;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->eax + 0x28, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x64, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_4CB970(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_4CB660(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DEC8E;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	mov(&ts->ecx, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x28, 4));
	goto loc_4DEC8E;

loc_4DEC78:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xE4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F21C);
	push(mv, &ts->esp, ts->eax);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);

loc_4DEC8E:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->esi + 0x64, 4), ts->edi);
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x24, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x64, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_4CB970(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_4CB660(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DECC3;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->ecx);
	mov(&ts->ecx, ts->eax);
	jmp(x86::mem(ts->edx + 0x24, 4));

loc_4DECC3:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4DECD0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ebp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x68, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x1);
	game::sub_4CB970(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x5C, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0xF8, 4));
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4DED08;
    }
	add(&ts->edi, 0xFFFFFFFC);
	goto loc_4DED0A;

loc_4DED08:
	xor_(&ts->edi, ts->edi);

loc_4DED0A:
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x4C, 4));
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4DED16;
    }
	add(&ts->ebx, 0xFFFFFFFC);
	goto loc_4DED18;

loc_4DED16:
	xor_(&ts->ebx, ts->ebx);

loc_4DED18:
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x54, 4));

loc_4DED1B:
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4DED24;
    }
	add(&ts->esi, 0xFFFFFFFC);
	goto loc_4DED26;

loc_4DED24:
	xor_(&ts->esi, ts->esi);

loc_4DED26:
	lea(mv, &ts->eax, x86::mem(ts->ebp + 0x54, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DED32;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_4DED34;

loc_4DED32:
	xor_(&ts->eax, ts->eax);

loc_4DED34:
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DEE3D;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.carry) {
        goto loc_4DEDB8;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x13C, 4));
	add(&ts->edx, ts->ecx);
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (!ts->eflags.carry) {
        goto loc_4DEDB8;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x14, 4));
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x34, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x10, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4DED88;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x34, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x10, 4));

loc_4DED88:
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4DEDA2;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx, 4));
	mov(&ts->ecx, ts->ebx);
	call(ts, mv, x86::mem(ts->eax + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebx, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->ebx);
	call(ts, mv, x86::mem(ts->edx + 0x34, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx, 4));
	mov(&ts->ecx, ts->ebx);
	call(ts, mv, x86::mem(ts->eax + 0x10, 4));

loc_4DEDA2:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x108, 4));
	mov(&ts->ebp, ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	goto loc_4DEDF9;

loc_4DEDB8:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x45D9C800);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x34, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4DEDE2;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, 0x45D9C800);
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x34, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));

loc_4DEDE2:
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4DEDF9;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebx, 4));
	push(mv, &ts->esp, 0x45D9C800);
	mov(&ts->ecx, ts->ebx);
	call(ts, mv, x86::mem(ts->edx + 0x34, 4));
	mov(mv, &ts->eax, x86::mem(ts->ebx, 4));
	mov(&ts->ecx, ts->ebx);
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));

loc_4DEDF9:
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4DEE0B;
    }
	mov(mv, &ts->edi, x86::mem(ts->edi + 0x4, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4DEE09;
    }
	add(&ts->edi, 0xFFFFFFFC);
	goto loc_4DEE0B;

loc_4DEE09:
	xor_(&ts->edi, ts->edi);

loc_4DEE0B:
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4DEE2C;
    }
	mov(mv, &ts->ebx, x86::mem(ts->ebx + 0x4, 4));
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4DEE2A;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->ebx, 0xFFFFFFFC);
	inc(&ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ecx);
	goto loc_4DED1B;

loc_4DEE2A:
	xor_(&ts->ebx, ts->ebx);

loc_4DEE2C:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	inc(&ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ecx);
	goto loc_4DED1B;

loc_4DEE3D:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);
}

void sub_4DEE90(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x54, 4));
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x54, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DEF2A;
    }
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->edi + 0x64, 4));
	test(&ts->eflags, ts->ebp, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_4DEEB9;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x7C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4DEEB9;
    }
	pop(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->edi);
	pop(mv, &ts->esp, ts->edi);
	goto loc_4DEE50;

loc_4DEEB9:
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->edi + 0x13C, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x134, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi - 0x1, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_4DEEF4;
    }
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->edi);
	game::sub_4CB970(ts, mv);
	mov(&ts->ecx, ts->esi);
	sub(&ts->ecx, ts->ebx);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4DEEF4;
    }
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->edi + 0x68, 4), ts->ebp);
	game::sub_4DECD0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	pop(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(ts->edi + 0x14D, 1), 0x0);
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp);

loc_4DEEF4:
	sub(&ts->esi, ts->ebx);
	dec(&ts->esi);
	mov(&ts->eax, 0x0);
	sets(ts->eflags, &ts->al);
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x54, 4));
	dec(&ts->eax);
	and_(&ts->eax, ts->esi);
	push(mv, &ts->esp, ts->eax);
	game::sub_43BE60(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DEF14;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_4DEF16;

loc_4DEF14:
	xor_(&ts->eax, ts->eax);

loc_4DEF16:
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->edi + 0x68, 4), ts->eax);
	game::sub_4DECD0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x14D, 1), 0x0);
	pop(mv, &ts->esp, ts->ebp);

loc_4DEF2A:
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp);

loc_4DEE50:
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x54, 4));
	lea(mv, &ts->eax, x86::mem(ts->ecx + 0x54, 4));
	cmp(&ts->eflags, ts->edx, ts->eax);
	if (ts->eflags.zero) {
        goto locret_4DEE82;
    }
	mov(&ts->eax, ts->edx);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DEE72;
    }
	add(&ts->eax, 0xFFFFFFFC);
	mov(mv, x86::mem(ts->ecx + 0x68, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x14D, 1), 0x0);
	goto sub_4DECD0;

loc_4DEE72:
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x68, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x14D, 1), ts->al);
	goto sub_4DECD0;

locret_4DEE82:
	retn(mv, &ts->esp);
}

void sub_4DEF30(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4DEF59;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_4DEF40:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	game::j__free(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_4DEF40;
    }

loc_4DEF59:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4DEF60(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_4D29F0(ts, mv);
	retn(mv, &ts->esp);
}

void std__strstreambuf___strstreambuf_void_(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776418);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x7974D4);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), 0x795CBC);
	game::sub_4358E0(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	game::sub_510D40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_776410:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

SEH_4E3300:
	mov(&ts->eax, 0x7DEE70);
	goto ___CxxFrameHandler;
}

void sub_4DF010(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::std__strstreambuf___strstreambuf_void_(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4DF028;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4DF028:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void std__locale___Locimp____Locimp_void_(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77589E);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edi);
	mov(mv, x86::mem(ts->edi, 4), 0x7974F0);
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x118, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x2);
	game::sub_4985A0(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x5C, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 1), 0x1);
	game::sub_52EA90(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4C, 4));
	lea(mv, &ts->esi, x86::mem(ts->edi + 0x4C, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x14, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_4DF09C;
    }

loc_4DF083:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	game::j__free(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_4DF083;
    }

loc_4DF09C:
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0xFFFFFFFF);
	game::sub_510D40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_775880:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

loc_775888:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x4C);
	goto sub_4DEF30;

loc_775893:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x5C);
	goto sub_52EA90;

??1_Locimp@locale@std@@UAE@XZ_9_SEH:
	mov(&ts->eax, 0x7E0E24);
	goto ___CxxFrameHandler;
}

void sub_4DF0C0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0xC407210);
	if (!ts->eflags.zero) {
        goto loc_4DF0DD;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x54, 4));
	mov(mv, &ts->dl, x86::mem(ts->ecx + 0x8, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.zero) {
        goto loc_4DF105;
    }
	mov(&ts->eax, 0x13);
	retn(mv, &ts->esp, 0x14);

loc_4DF0DD:
	cmp(&ts->eflags, ts->eax, 0x9120409E);
	if (!ts->eflags.zero) {
        goto loc_4DF0F1;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x54, 4));
	cmp(mv, &ts->eflags, ts->edx, x86::mem(ts->ecx + 0x4C, 4));
	if (!ts->eflags.zero) {
        goto loc_4DF105;
    }
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp, 0x14);

loc_4DF0F1:
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_4DF105;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x54, 4));
	cmp(mv, &ts->eflags, ts->edx, x86::mem(ts->ecx + 0x50, 4));
	if (!ts->eflags.zero) {
        goto loc_4DF105;
    }
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp, 0x14);

loc_4DF105:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_50D1A0(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp, 0x14);
}

void sub_4DF120(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::std__locale___Locimp____Locimp_void_(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4DF138;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4DF138:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4DF140(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7758D1);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x8FC);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->esi);
	game::sub_552330(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x797510);
	mov(mv, &ts->ecx, x86::mem(0x836370, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x90C, 4), 0x0);
	mov(mv, x86::mem(0x850078, 4), 0x2);
	if (ts->eflags.zero) {
        goto loc_4DF19D;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->edx, 4));

loc_4DF19D:
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(0x836370, 4), 0x0);
	game::sub_4AEE30(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_50DA50(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	game::sub_5AC6E0(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFFFFFFFF);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, x86::mem(ts->esp + 0x91C, 1), 0x1);
	game::sub_610270(ts, mv);
	mov(mv, &ts->al, x86::mem(0x86347D, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, x86::mem(ts->esp + 0x90C, 1), 0x2);
	if (ts->eflags.zero) {
        goto loc_4DF1FD;
    }
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, 0x83A9D0);
	game::sub_515D00(ts, mv);
	goto loc_4DF214;

loc_4DF1FD:
	push(mv, &ts->esp, 0x797500);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	game::sub_637270(ts, mv);

loc_4DF214:
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4DF236;
    }
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->edi, ts->eax);
	goto loc_4DF25F;

loc_4DF236:
	push(mv, &ts->esp, 0x7906DC);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4DF25D;
    }
	push(mv, &ts->esp, 0x7906DC);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DF25D;
    }
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x4C, 4));
	goto loc_4DF25F;

loc_4DF25D:
	xor_(&ts->edi, ts->edi);

loc_4DF25F:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x8371B0);
	game::sub_413440(ts, mv);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(0x83623C, 4), 0x2);
	if (ts->eflags.zero) {
        goto loc_4DF28A;
    }
	push(mv, &ts->esp, 0x2);
	push(mv, &ts->esp, 0x8371B0);
	mov(&ts->ecx, ts->edi);
	game::sub_4D8C70(ts, mv);

loc_4DF28A:
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4DF2B0;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78FCD8);
	push(mv, &ts->esp, 0x0);
	game::sub_555F50(ts, mv);
	add(&ts->esp, 0x14);

loc_4DF2B0:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, 0x83AAB4);
	game::sub_502930(ts, mv);
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4DF2E7;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_555F10(ts, mv);
	add(&ts->esp, 0x10);

loc_4DF2E7:
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	game::sub_54E6A0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	game::sub_54E6E0(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x394, 4));
	mov(mv, x86::mem(ts->esp + 0x90C, 1), 0x0);
	game::nullsub_1(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x904, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_4017F0:
	add(&ts->ecx, 0x374);
	goto nullsub_1;

loc_7758B0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x904, 4));
	goto ??1strstreambuf@std@@UAE@XZ_5;

loc_7758BB:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x8F0, 4));
	goto loc_4017F0;

loc_7758C6:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x900, 4));
	goto sub_401800;

SEH_4DF570:
	mov(&ts->eax, 0x7E0E58);
	goto ___CxxFrameHandler;
}

void sub_4DF340(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4DF360(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4DF358;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4DF358:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4DF360(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x797510);
	goto ??1strstreambuf@std@@UAE@XZ_5;
}

void sub_4DF370(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4DF390(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4DF388;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4DF388:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4DF390(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x79752C);
	goto ??1strstreambuf@std@@UAE@XZ_5;
}

void sub_4DF3A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7758D1);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x8FC);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->esi);
	game::sub_552330(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x90C, 4), 0x0);
	mov(mv, x86::mem(ts->esi, 4), 0x797548);
	game::sub_4AF820(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	game::sub_5AC6E0(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFFFFFFFF);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, x86::mem(ts->esp + 0x91C, 1), 0x1);
	game::sub_610270(ts, mv);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, 0x83A9D0);
	mov(mv, x86::mem(ts->esp + 0x918, 1), 0x2);
	game::sub_515D00(ts, mv);
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4DF449;
    }
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->edi, ts->eax);
	goto loc_4DF472;

loc_4DF449:
	push(mv, &ts->esp, 0x7906DC);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4DF470;
    }
	push(mv, &ts->esp, 0x7906DC);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DF470;
    }
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x4C, 4));
	goto loc_4DF472;

loc_4DF470:
	xor_(&ts->edi, ts->edi);

loc_4DF472:
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x8371B0);
	game::sub_413440(ts, mv);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(0x83623C, 4), 0x2);
	if (ts->eflags.zero) {
        goto loc_4DF49D;
    }
	push(mv, &ts->esp, 0x2);
	push(mv, &ts->esp, 0x8371B0);
	mov(&ts->ecx, ts->edi);
	game::sub_4D8C70(ts, mv);

loc_4DF49D:
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4DF4C3;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78FCD8);
	push(mv, &ts->esp, 0x0);
	game::sub_555F50(ts, mv);
	add(&ts->esp, 0x14);

loc_4DF4C3:
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4DF4EE;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_555F10(ts, mv);
	add(&ts->esp, 0x10);

loc_4DF4EE:
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	game::sub_54E6A0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	game::sub_54E6E0(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x394, 4));
	mov(mv, x86::mem(ts->esp + 0x90C, 1), 0x0);
	game::nullsub_1(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x904, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_7758B0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x904, 4));
	goto ??1strstreambuf@std@@UAE@XZ_5;

loc_7758BB:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x8F0, 4));
	goto loc_4017F0;

loc_7758C6:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x900, 4));
	goto sub_401800;

SEH_4DF570:
	mov(&ts->eax, 0x7E0E58);
	goto ___CxxFrameHandler;

loc_4017F0:
}

void sub_4DF540(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4DF560(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4DF558;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4DF558:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4DF560(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x797548);
	goto ??1strstreambuf@std@@UAE@XZ_5;
}

void sub_4DF570(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7758D1);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x8FC);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	game::sub_552330(ts, mv);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x90C, 4), 0x0);
	mov(mv, x86::mem(ts->edi, 4), 0x797564);
	game::sub_4AFB70(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	game::sub_5AC6E0(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFFFFFFFF);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, x86::mem(ts->esp + 0x91C, 1), 0x1);
	game::sub_610270(ts, mv);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, 0x83A9D0);
	mov(mv, x86::mem(ts->esp + 0x918, 1), 0x2);
	game::sub_515D00(ts, mv);
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4DF619;
    }
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->esi, ts->eax);
	goto loc_4DF642;

loc_4DF619:
	push(mv, &ts->esp, 0x7906DC);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4DF640;
    }
	push(mv, &ts->esp, 0x7906DC);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DF640;
    }
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x4C, 4));
	goto loc_4DF642;

loc_4DF640:
	xor_(&ts->esi, ts->esi);

loc_4DF642:
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x8371B0);
	game::sub_413440(ts, mv);
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(0x83623C, 4), 0x2);
	if (ts->eflags.zero) {
        goto loc_4DF66D;
    }
	push(mv, &ts->esp, 0x2);
	push(mv, &ts->esp, 0x8371B0);
	mov(&ts->ecx, ts->esi);
	game::sub_4D8C70(ts, mv);

loc_4DF66D:
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4DF693;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78FCD8);
	push(mv, &ts->esp, 0x0);
	game::sub_555F50(ts, mv);
	add(&ts->esp, 0x14);

loc_4DF693:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x394, 4));
	mov(mv, x86::mem(ts->esp + 0x90C, 1), 0x0);
	game::nullsub_1(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x904, 4));
	mov(&ts->eax, ts->edi);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_7758B0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x904, 4));
	goto ??1strstreambuf@std@@UAE@XZ_5;

loc_7758BB:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x8F0, 4));
	goto loc_4017F0;

loc_7758C6:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x900, 4));
	goto sub_401800;

SEH_4DF570:
	mov(&ts->eax, 0x7E0E58);
	goto ___CxxFrameHandler;

loc_4017F0:
}

void sub_4DF6C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4DF6E0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4DF6D8;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4DF6D8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4DF6E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x797564);
	goto ??1strstreambuf@std@@UAE@XZ_5;
}

void sub_4DF6F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x775912);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x908);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->esi);
	game::sub_552330(ts, mv);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x150, 4));
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x91C, 4), 0x0);
	mov(mv, x86::mem(ts->esi, 4), 0x7975AC);
	game::sub_50DB40(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x7975A0);
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0x1A4, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x930, 1), 0x1);
	game::sub_542AC0(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x200, 4), 0x0);
	game::sub_4AFD00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x797598);
	mov(mv, x86::mem(ts->esi + 0x1FC, 4), ts->edx);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	game::sub_505450(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0xC00);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	game::sub_50DB80(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_51BD70(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x74, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x79758C);
	push(mv, &ts->esp, 0xA);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	game::sub_50DBB0(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x797580);
	mov(mv, x86::mem(ts->esi + 0x158, 4), ts->ebx);
	game::sub_43DB50(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x78FC3C);
	game::sub_43DB50(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x20);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x30, 4));
	game::sub_5AC6E0(ts, mv);
	mov(&ts->ebx, 0x2);
	mov(mv, x86::mem(ts->esp + 0x91C, 1), ts->bl);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFFFFFFFF);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x30, 4));
	game::sub_610270(ts, mv);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, 0x83A9D0);
	mov(mv, x86::mem(ts->esp + 0x928, 1), 0x3);
	game::sub_515D00(ts, mv);
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4DF879;
    }
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->edi, ts->eax);
	goto loc_4DF8A2;

loc_4DF879:
	push(mv, &ts->esp, 0x7906DC);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4DF8A0;
    }
	push(mv, &ts->esp, 0x7906DC);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DF8A0;
    }
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x4C, 4));
	goto loc_4DF8A2;

loc_4DF8A0:
	xor_(&ts->edi, ts->edi);

loc_4DF8A2:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x8371B0);
	game::sub_413440(ts, mv);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(0x83623C, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4DF8C8;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x8371B0);
	mov(&ts->ecx, ts->edi);
	game::sub_4D8C70(ts, mv);

loc_4DF8C8:
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4DF8EE;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78FCD8);
	push(mv, &ts->esp, 0x0);
	game::sub_555F50(ts, mv);
	add(&ts->esp, 0x14);

loc_4DF8EE:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x3A4, 4));
	mov(mv, x86::mem(ts->esp + 0x91C, 1), 0x1);
	game::nullsub_1(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x914, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_4017F0:
	add(&ts->ecx, 0x374);
	goto nullsub_1;

loc_7758E0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x904, 4));
	goto ??1strstreambuf@std@@UAE@XZ_5;

loc_7758EB:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x904, 4));
	add(&ts->ecx, 0x150);
	goto sub_50DB70;

loc_7758FC:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x8F0, 4));
	goto loc_4017F0;

loc_775907:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x900, 4));
	goto sub_401800;

SEH_4DF6F0:
	mov(&ts->eax, 0x7E0E94);
	goto ___CxxFrameHandler;
}

void sub_4DF920(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4DF940(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4DF938;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4DF938:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4DF940(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776178);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x7975AC);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x150, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	game::sub_50DB70(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	game::std__strstreambuf___strstreambuf_void_(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_776170:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto ??1strstreambuf@std@@UAE@XZ_5;

SEH_4EB7A0:
	mov(&ts->eax, 0x7E0EB8);
	goto ___CxxFrameHandler;
}

void sub_4DF9A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4CBCB0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4DF9B8;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4DF9B8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4DF9C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77593C);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x14);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0xEC, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4DFA01;
    }
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4DFA01;
    }
	imul(&ts->eax, ts->eax, 0xAB4C);
	add(&ts->eax, 0x83AD90);
	mov(mv, x86::mem(ts->ebp - 0x10, 4), ts->eax);
	goto loc_4DFA04;

loc_4DFA01:
	mov(mv, x86::mem(ts->ebp - 0x10, 4), ts->ebx);

loc_4DFA04:
	lea(mv, &ts->eax, x86::mem(ts->ebp - 0x20, 4));
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x20, 4));
	mov(mv, x86::mem(ts->ebp - 0x20, 4), ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x1C, 4), ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->ebp - 0x20, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x85AD40);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), ts->ebx);
	game::sub_513C50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->edi + 0x80, 4), ts->ebx);
	game::sub_5162D0(ts, mv);
	mov(&ts->esi, ts->eax);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4DFB49;
    }
	mov(&ts->edi, ts->edi);

loc_4DFA40:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	imul(&ts->eax, ts->eax, 0x890);
	add(mv, &ts->eax, x86::mem(0x8A1CCC, 4));
	mov(&ts->ecx, 0x85AD40);
	mov(&ts->ebx, ts->eax);
	game::sub_513910(ts, mv);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->ebp - 0x14, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_4DFB30;
    }
	xor_(&ts->eax, ts->eax);
	mov(mv, &ts->al, x86::mem(ts->ebx + 0xDA, 1));
	shr(&ts->eax, 0x1);
	test(&ts->eflags, ts->al, 0x1);
	if (ts->eflags.zero) {
        goto loc_4DFB30;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x840, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_5022C0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4DFB30;
    }
	mov(&ts->ecx, ts->ebx);
	game::sub_610180(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4DFB30;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x14, 4));
	lea(mv, &ts->edx, x86::mem(ts->ebp - 0x20, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_4AFF40(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4DFB30;
    }
	push(mv, &ts->esp, 0x930);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->ebp - 0x14, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x4, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4DFAF1;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(ts->ebp - 0x18, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0xEC, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->eax);
	game::sub_511DB0(ts, mv);
	mov(&ts->ebx, ts->eax);
	goto loc_4DFAF3;

loc_4DFAF1:
	xor_(&ts->ebx, ts->ebx);

loc_4DFAF3:
	mov(&ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->ebp - 0x4, 1), 0x0);
	game::sub_511E00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0xEC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4DFB18;
    }
	lea(mv, &ts->eax, x86::mem(ts->ebx + 0x10, 4));
	goto loc_4DFB1A;

loc_4DFB18:
	xor_(&ts->eax, ts->eax);

loc_4DFB1A:
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x54, 4));
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x50, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	inc(mv, x86::mem(ts->edi + 0x80, 4));

loc_4DFB30:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	game::sub_5162D0(ts, mv);
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_4DFA40;
    }
	xor_(&ts->ebx, ts->ebx);

loc_4DFB49:
	lea(mv, &ts->esi, x86::mem(ts->edi + 0x50, 4));
	push(mv, &ts->esp, 0x40CB20);
	mov(&ts->ecx, ts->esi);
	game::sub_43E650(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4DFB63;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esi - 0x10, 4));
	goto loc_4DFB65;

loc_4DFB63:
	xor_(&ts->ecx, ts->ecx);

loc_4DFB65:
	mov(mv, x86::mem(ts->edi + 0x58, 4), ts->ecx);
	game::sub_511E00(ts, mv);
	push(mv, &ts->esp, 0x78FCD8);
	mov(&ts->edi, ts->eax);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4DFB91;
    }
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->esi, ts->eax);
	goto loc_4DFBBA;

loc_4DFB91:
	push(mv, &ts->esp, 0x7906DC);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4DFBB8;
    }
	push(mv, &ts->esp, 0x7906DC);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4DFBB8;
    }
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x4C, 4));
	goto loc_4DFBBA;

loc_4DFBB8:
	xor_(&ts->esi, ts->esi);

loc_4DFBBA:
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x8371B0);
	game::sub_413440(ts, mv);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	mov(mv, x86::mem(0x83623C, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4DFBE1;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x8371B0);
	mov(&ts->ecx, ts->esi);
	game::sub_4D8C70(ts, mv);

loc_4DFBE1:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x20, 4));
	pop(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x20, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), 0xFFFFFFFF);
	pop(mv, &ts->esp, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4DFC14;
    }

loc_4DFBF5:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(&ts->edx, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	game::j__free(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x20, 4));
	lea(mv, &ts->edx, x86::mem(ts->ebp - 0x20, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_4DFBF5;
    }

loc_4DFC14:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_775920:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x20, 4));
	goto sub_4DEF30;

loc_775928:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7975C8);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4DF9C0:
	mov(&ts->eax, 0x7E0EE4);
	goto ___CxxFrameHandler;
}

void sub_4DFC30(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4CBD20(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4DFC48;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4DFC48:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4DFC50(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0x9120409E);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4DFF16;
    }
	if (ts->eflags.zero) {
        goto loc_4DFEFA;
    }
	cmp(&ts->eflags, ts->eax, 0x34DC1BEC);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4DFD17;
    }
	if (ts->eflags.zero) {
        goto loc_4DFC95;
    }
	cmp(&ts->eflags, ts->eax, 0xC407210);
	if (ts->eflags.zero) {
        goto loc_4DFD96;
    }
	cmp(&ts->eflags, ts->eax, 0x2101DCC5);
	if (ts->eflags.zero) {
        goto loc_4DFCB3;
    }
	cmp(&ts->eflags, ts->eax, 0x34DC1BCF);
	if (!ts->eflags.zero) {
        goto def_4DFF6E;
    }

loc_4DFC95:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79031C);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4DFCB3:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x26F1F64C);
	push(mv, &ts->esp, ts->eax);
	game::sub_495520(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDF422345);
	push(mv, &ts->esp, ts->ecx);
	game::sub_495520(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F758);
	push(mv, &ts->esp, 0x26F1F64C);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x790EB0);
	push(mv, &ts->esp, 0xDF422345);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79031C);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x40);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4DFD17:
	cmp(&ts->eflags, ts->eax, 0x406415E3);
	if (ts->eflags.zero) {
        goto loc_4DFD96;
    }
	cmp(&ts->eflags, ts->eax, 0x911AB364);
	if (!ts->eflags.zero) {
        goto def_4DFF6E;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x78F5B8);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537CC0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4DFD7E;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x911AB364);
	mov(&ts->ecx, ts->esi);
	game::sub_4961E0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_50B8C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F5B8);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x18);

loc_4DFD7E:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0xA);
	push(mv, &ts->esp, ts->eax);
	game::sub_50D150(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4DFD96:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x194, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto def_4DFF6E;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x930, 1));
	sub(&ts->cl, 0x0);
	if (ts->eflags.zero) {
        goto loc_4DFDF8;
    }
	dec(&ts->cl);
	if (!ts->eflags.zero) {
        goto def_4DFF6E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x918, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x840, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_5120B0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x2415BE66);
	push(mv, &ts->esp, 0x34DC1BEC);
	push(mv, &ts->esp, 0x34DC1BEC);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->esi);
	game::sub_558570(ts, mv);
	add(&ts->esp, 0x20);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4DFDF8:
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x931, 1));
	sub(&ts->cl, 0x0);
	if (ts->eflags.zero) {
        goto loc_4DFE49;
    }
	dec(&ts->cl);
	if (!ts->eflags.zero) {
        goto def_4DFF6E;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x918, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x840, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_5120B0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xCF3B2D70);
	push(mv, &ts->esp, 0x34DC1BEC);
	push(mv, &ts->esp, 0x34DC1BEC);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->esi);
	game::sub_558570(ts, mv);
	add(&ts->esp, 0x20);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4DFE49:
	mov(&ts->ecx, 0x85AD40);
	game::sub_513C30(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x920, 4));
	cmp(mv, &ts->eflags, ts->edx, x86::mem(ts->eax + 0x8, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	if (!ts->eflags.zero) {
        goto loc_4DFE9F;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x918, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_5120B0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7EE84E4E);
	push(mv, &ts->esp, 0x34DC1BEC);
	push(mv, &ts->esp, 0x34DC1BEC);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->esi);
	game::sub_558570(ts, mv);
	add(&ts->esp, 0x20);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4DFE9F:
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x918, 4));
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x840, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	mov(&ts->ecx, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_5120B0(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5120B0(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1231C38F);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x34DC1BCF);
	push(mv, &ts->esp, 0x34DC1BCF);
	push(mv, &ts->esp, 0xD05FC3A3);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->esi);
	game::sub_558790(ts, mv);
	add(&ts->esp, 0x2C);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4DFEFA:
	mov(mv, x86::mem(ts->esi + 0x1A8, 4), 0x9120409E);

loc_4DFF04:
	push(mv, &ts->esp, 0x9120409E);
	mov(&ts->ecx, ts->esi);
	game::sub_4B04C0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4DFF16:
	cmp(&ts->eflags, ts->eax, 0xC98356BA);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4E00B1;
    }
	if (ts->eflags.zero) {
        goto loc_4DFFEC;
    }
	cmp(&ts->eflags, ts->eax, 0x9803F6E2);
	if (ts->eflags.zero) {
        goto loc_4DFF4D;
    }
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto def_4DFF6E;
    }
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x1A8, 4), ts->eax);
	game::sub_4B04C0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4DFF4D:
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x60, 4));
	game::sub_538130(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x9C, 4));
	add(&ts->eax, 0xA);
	cmp(&ts->eflags, ts->eax, 0x14);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4DFF6E;
    }
	movzx(mv, &ts->eax, x86::mem(ts->eax + 0x4E013C, 1));
	jmp(x86::mem(0x4E0128, 4));

loc_4DFF75:
	push(mv, &ts->esp, 0xB5971BF1);
	mov(&ts->ecx, ts->esi);
	game::sub_4B04C0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4DFF87:
	mov(mv, &ts->eax, x86::mem(0x7FA1A8, 4));
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto def_4DFF6E;
    }
	goto loc_4DFFA0;

loc_4DFFA0:
	push(mv, &ts->esp, 0xB5971BF1);
	mov(&ts->ecx, ts->esi);
	game::sub_4B04C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x7FA1A8, 4));
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4DFFA0;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4DFFBC:
	mov(mv, &ts->eax, x86::mem(0x7FA1A8, 4));
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto def_4DFF6E;
    }
	goto loc_4DFFD0;

loc_4DFFD0:
	push(mv, &ts->esp, 0x9120409E);
	mov(&ts->ecx, ts->esi);
	game::sub_4B04C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x7FA1A8, 4));
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4DFFD0;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4DFFEC:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xB8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto def_4DFF6E;
    }
	cmp(&ts->eflags, ts->eax, 0x7FFFFFFF);
	if (ts->eflags.zero) {
        goto def_4DFF6E;
    }
	mov(mv, &ts->ecx, x86::mem(0x8651AC, 4));
	sub(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->ebp + 0x8, 4), ts->ecx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78758C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (!ts->eflags.zero) {
        goto def_4DFF6E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x930, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E0056;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1A8, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_4A7930(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0xB8, 4), 0x0);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E0056:
	mov(mv, &ts->al, x86::mem(ts->ecx + 0x931, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4E0092;
    }
	game::sub_511E00(ts, mv);
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1A8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	game::sub_4A7900(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	game::sub_4D8EC0(ts, mv);
	add(&ts->esp, 0x14);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0xB8, 4), 0x0);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E0092:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1A8, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_4A7960(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0xB8, 4), 0x0);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E00B1:
	cmp(&ts->eflags, ts->eax, 0xD05FC3A3);
	if (ts->eflags.zero) {
        goto loc_4E00D8;
    }
	cmp(&ts->eflags, ts->eax, 0xE1FDE1D1);
	if (!ts->eflags.zero) {
        goto def_4DFF6E;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78F5A4);
	push(mv, &ts->esp, ts->edx);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E00D8:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x920, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x85AD40);
	game::sub_500BD0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0xA);
	push(mv, &ts->esp, ts->eax);
	game::sub_50D150(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F5B8);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->esi);
	game::sub_537C60(ts, mv);
	add(&ts->esp, 0x10);

def_4DFF6E:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);
}

void sub_4E0160(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x775997);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x18);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC4, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4E01A3;
    }
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4E01A3;
    }
	imul(&ts->eax, ts->eax, 0xAB4C);
	add(&ts->eax, 0x83AD90);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	goto loc_4E01A7;

loc_4E01A3:
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ebx);

loc_4E01A7:
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, x86::mem(ts->esi + 0x58, 4), ts->ebx);
	game::sub_479100(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x4);
	game::sub_5162D0(ts, mv);
	mov(&ts->edi, ts->eax);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4E0398;
    }

loc_4E01C8:
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	imul(&ts->eax, ts->eax, 0x890);
	add(mv, &ts->eax, x86::mem(0x8A1CCC, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E02B0;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0x7F4, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto loc_4E02B0;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0x7F5, 1), ts->bl);
	push(mv, &ts->esp, 0x940);
	if (ts->eflags.zero) {
        goto loc_4E025A;
    }
	game::j__malloc(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->esi);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4E0253;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x8, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0xC4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_511DB0(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x790EAC);
	mov(mv, x86::mem(ts->esi + 0x931, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x930, 1), ts->bl);
	goto loc_4E0331;

loc_4E0253:
	xor_(&ts->esi, ts->esi);
	goto loc_4E0331;

loc_4E025A:
	game::j__malloc(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->esi);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4E02AC;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	mov(mv, x86::mem(ts->esi, 4), 0x790EAC);
	game::sub_40C910(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esi, 4), 0x790EAC);
	mov(mv, x86::mem(ts->esi + 0x91C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x918, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x920, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x930, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x931, 1), ts->bl);
	goto loc_4E032A;

loc_4E02AC:
	xor_(&ts->esi, ts->esi);
	goto loc_4E032A;

loc_4E02B0:
	push(mv, &ts->esp, 0x940);
	game::j__malloc(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->esi);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), 0x2);
	if (ts->eflags.zero) {
        goto loc_4E0321;
    }
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	mov(mv, x86::mem(ts->esi, 4), 0x790EAC);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	game::sub_5AC6E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0xFFFFFFFF);
	mov(mv, x86::mem(ts->esp + 0x3C, 1), 0x3);
	game::sub_610270(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esi, 4), 0x790EAC);
	mov(mv, x86::mem(ts->esi + 0x91C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x918, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x920, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x930, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x931, 1), ts->bl);
	goto loc_4E0323;

loc_4E0321:
	xor_(&ts->esi, ts->esi);

loc_4E0323:
	mov(mv, x86::mem(ts->esi + 0x930, 1), 0x1);

loc_4E032A:
	mov(mv, x86::mem(ts->esi + 0x931, 1), 0x1);

loc_4E0331:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x931, 1), ts->bl);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_4E0364;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x930, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto loc_4E0364;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_511E00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xC4, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));

loc_4E0364:
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x50, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	push(mv, &ts->esp, ts->edi);
	inc(&ts->eax);
	push(mv, &ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x58, 4), ts->eax);
	game::sub_5162D0(ts, mv);
	mov(&ts->edi, ts->eax);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4E01C8;
    }

loc_4E0398:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4E03A4;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax - 0x10, 4));
	goto loc_4E03A6;

loc_4E03A4:
	xor_(&ts->ecx, ts->ecx);

loc_4E03A6:
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->ecx);
	game::sub_511E00(ts, mv);
	push(mv, &ts->esp, 0x78FCD8);
	mov(&ts->edi, ts->eax);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E03D2;
    }
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->esi, ts->eax);
	goto loc_4E03FB;

loc_4E03D2:
	push(mv, &ts->esp, 0x7906DC);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E03F9;
    }
	push(mv, &ts->esp, 0x7906DC);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4E03F9;
    }
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x4C, 4));
	goto loc_4E03FB;

loc_4E03F9:
	xor_(&ts->esi, ts->esi);

loc_4E03FB:
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x8371B0);
	game::sub_413440(ts, mv);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	mov(mv, x86::mem(0x83623C, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4E0422;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x8371B0);
	mov(&ts->ecx, ts->esi);
	game::sub_4D8C70(ts, mv);

loc_4E0422:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x24);
	retn(mv, &ts->esp);

loc_4017F0:
	add(&ts->ecx, 0x374);
	goto nullsub_1;

loc_775950:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7975D8);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_775964:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7975D8);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_775978:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7975D8);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_77598C:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x14, 4));
	add(&ts->ecx, 0x10);
	goto loc_4017F0;

SEH_4E0160:
	mov(&ts->eax, 0x7E0F20);
	goto ___CxxFrameHandler;
}

void sub_4E0440(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x775A02);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->esi, 4), 0x7975FC);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->ebp - 0x14, 4), ts->esi);
	mov(mv, x86::mem(ts->ebx, 4), ts->ebx);
	mov(mv, x86::mem(ts->ebx + 0x4, 4), ts->ebx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	mov(mv, x86::mem(ts->ebp - 0x4, 4), 0x0);
	mov(mv, x86::mem(ts->eax, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, x86::mem(ts->esi + 0x28, 4), ts->eax);
	mov(&ts->eax, 0x1);
	mov(&ts->ecx, 0xF);
	mov(&ts->edi, 0x835F38);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(0x89E7A0, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->ebp - 0x4, 1), 0x1);
	game::sub_5D3E40(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, 0x90FE80F3);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->eax);
	game::sub_537A60(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x20, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x89E7A0, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x791858);
	game::sub_50B990(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C990(ts, mv);
	push(mv, &ts->esp, 0xE2848973);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x18, 4), 0x0);
	game::sub_5379C0(ts, mv);
	add(&ts->esp, 0x24);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, 0x85AD40);
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->eax);
	game::sub_500EE0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x10, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E0600;
    }
	goto loc_4E0510;

loc_4E0506:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_4E0510:
	mov(&ts->ecx, ts->eax);
	game::sub_533110(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4E052D;
    }
	mov(&ts->ecx, 0x85B940);
	game::sub_501690(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E05E7;
    }

loc_4E052D:
	push(mv, &ts->esp, 0x2C);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->ebp - 0x18, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x4, 1), 0x2);
	if (ts->eflags.zero) {
        goto loc_4E0552;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->eax);
	game::sub_4B0670(ts, mv);
	mov(&ts->esi, ts->eax);
	goto loc_4E0554;

loc_4E0552:
	xor_(&ts->esi, ts->esi);

loc_4E0554:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x4, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	mov(mv, x86::mem(ts->ebx + 0x4, 4), ts->esi);
	push(mv, &ts->esp, 0x24);
	mov(mv, x86::mem(ts->ebp - 0x4, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi, 4), ts->ebx);
	game::j__malloc(ts, mv);
	xor_(&ts->ecx, ts->ecx);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4E0594;
    }
	lea(mv, &ts->edi, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->edi, 4), ts->ecx);
	mov(mv, x86::mem(ts->edi + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->edi + 0x8, 4), ts->ecx);
	mov(mv, x86::mem(ts->edi + 0xC, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ebp - 0x10, 4));
	mov(&ts->ecx, 0x6);
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));
	mov(&ts->esi, ts->eax);
	goto loc_4E0596;

loc_4E0594:
	xor_(&ts->esi, ts->esi);

loc_4E0596:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	add(&ts->eax, 0xC);
	mov(mv, x86::mem(ts->ecx, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->esi);
	push(mv, &ts->esp, 0x14);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi, 4), ts->eax);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E05CC;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0xC, 4));
	mov(mv, x86::mem(ts->eax + 0x8, 4), 0x0);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->esi);
	goto loc_4E05CE;

loc_4E05CC:
	xor_(&ts->eax, ts->eax);

loc_4E05CE:
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x8, 4));
	mov(mv, &ts->esi, x86::mem(ts->ebp - 0x14, 4));
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x8, 4));
	add(&ts->ecx, 0x4);
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);

loc_4E05E7:
	mov(mv, &ts->edx, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x85AD40);
	game::sub_500EE0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x10, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4E0506;
    }

loc_4E0600:
	mov(mv, &ts->eax, x86::mem(0x890080, 4));
	xor_(&ts->ecx, ts->ecx);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4E0703;
    }
	mov(mv, x86::mem(0x835F70, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x18, 4));
	mov(mv, x86::mem(ts->ebp + 0xC, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x14, 4));
	sub(&ts->edx, ts->ecx);
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4E0688;
    }

loc_4E0624:
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0xC, 4));
	add(&ts->ecx, ts->edx);
	mov(mv, &ts->edi, x86::mem(ts->eax + (ts->ecx*4) + 0x1C, 4));
	mov(mv, &ts->cl, x86::mem(ts->edi + 0x550, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_4E0672;
    }
	push(mv, &ts->esp, 0x2C);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->ebp - 0x18, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x4, 1), 0x3);
	if (ts->eflags.zero) {
        goto loc_4E065A;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4B0740(ts, mv);
	goto loc_4E065C;

loc_4E065A:
	xor_(&ts->eax, ts->eax);

loc_4E065C:
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->ebx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->ebx);
	mov(mv, &ts->eax, x86::mem(0x890080, 4));
	mov(mv, x86::mem(ts->ebp - 0x4, 1), 0x1);

loc_4E0672:
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x18, 4));
	inc(&ts->ecx);
	mov(mv, x86::mem(ts->ebp + 0xC, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x14, 4));
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0xC, 4));
	sub(&ts->edx, ts->ecx);
	cmp(&ts->eflags, ts->edi, ts->edx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4E0624;
    }

loc_4E0688:
	push(mv, &ts->esp, 0x2C);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->ebp - 0x18, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->ebp - 0x4, 1), 0x4);
	if (ts->eflags.zero) {
        goto loc_4E06F0;
    }
	mov(mv, &ts->eax, x86::mem(0x8900AC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, 0xDD9EF5FF);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->ebp + 0xC, 4), ts->eax);
	mov(mv, x86::mem(ts->edi + 0x8, 4), 0x10);
	game::sub_5379C0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0xC, 4));
	mov(mv, x86::mem(ts->edi + 0xC, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x64, 4));
	add(&ts->esp, 0x8);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x60, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x10, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x14, 4));
	movzx(mv, &ts->eax, x86::mem(ts->eax + 0x40C, 2));
	mov(mv, x86::mem(ts->ebp + 0x8, 4), ts->eax);
	mov(mv, x86::mem(ts->edi + 0x28, 1), 0x0);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784240, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x18, 4));
	goto loc_4E06F2;

loc_4E06F0:
	xor_(&ts->edi, ts->edi);

loc_4E06F2:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x4, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->edi);
	mov(mv, x86::mem(ts->ebx + 0x4, 4), ts->edi);
	mov(mv, x86::mem(ts->ebp - 0x4, 1), 0x1);
	mov(mv, x86::mem(ts->edi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->edi, 4), ts->ebx);

loc_4E0703:
	mov(&ts->ecx, ts->esi);
	game::sub_4B09E0(ts, mv);
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0xC, 4));
	mov(mv, x86::mem(ts->esi + 0x14, 4), 0x0);
	cmp(mv, &ts->eflags, x86::mem(ts->ebx, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4E07E5;
    }
	mov(&ts->ecx, 0x838590);
	game::sub_501100(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E07A3;
    }
	mov(&ts->ecx, 0x838590);
	game::sub_501100(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.zero) {
        goto loc_4E07A3;
    }
	mov(&ts->ecx, 0x838590);
	game::sub_501100(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_4E07A3;
    }
	mov(&ts->ecx, 0x838590);
	game::sub_501100(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.zero) {
        goto loc_4E07A3;
    }
	mov(mv, &ts->ebx, x86::mem(ts->ebx, 4));
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4E0795;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x20, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x1C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_51D4D0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x24, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F6BC);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0x1C);
	goto loc_4E07E5;

loc_4E0795:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x24, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);
	goto loc_4E07E5;

loc_4E07A3:
	mov(mv, &ts->edi, x86::mem(ts->ebx, 4));
	cmp(&ts->eflags, ts->edi, ts->ebx);
	mov(mv, &ts->eax, x86::mem(0x838590, 4));
	mov(mv, x86::mem(ts->ebp + 0x8, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E07E5;
    }

loc_4E07B1:
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0xC, 4));
	game::sub_514160(ts, mv);
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->ebp + 0x8, 4));
	if (ts->eflags.zero) {
        goto loc_4E07C6;
    }
	mov(mv, &ts->edi, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4E07B1;
    }
	goto loc_4E07E5;

loc_4E07C6:
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4E07E5;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_4964D0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4E07E5;
    }
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_4967F0(ts, mv);

loc_4E07E5:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x28, 4));
	shl(&ts->eax, 0x4);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x7F42D4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x42FAAD5A);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x8);

loc_7759B0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x14, 4));
	add(&ts->ecx, 0x4);
	goto sub_4DEF30;

loc_7759BB:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x14, 4));
	add(&ts->ecx, 0xC);
	goto sub_4DEF30;

loc_7759C6:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7975EC);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7759DA:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7975EC);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7759EE:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7975EC);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4E0440:
	mov(&ts->eax, 0x7E0F64);
	goto ___CxxFrameHandler;
}

void sub_4E0830(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::std__locale___Locimp____Locimp_void_(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4E0848;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4E0848:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void std__locale___Locimp____Locimp_void_(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x775A1B);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edi);
	mov(mv, x86::mem(ts->edi, 4), 0x7975FC);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0xC, 4));
	lea(mv, &ts->esi, x86::mem(ts->edi + 0xC, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4E089F;
    }

loc_4E0886:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	game::j__free(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_4E0886;
    }

loc_4E089F:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	lea(mv, &ts->esi, x86::mem(ts->edi + 0x4, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_4E08CA;
    }

loc_4E08B1:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	game::j__free(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_4E08B1;
    }

loc_4E08CA:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_775A10:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x4);
	goto sub_4DEF30;

SEH_4E0850:
	mov(&ts->eax, 0x7E0F88);
	goto ___CxxFrameHandler;
}

void sub_4E08E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0x9120409E);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4E0A36;
    }
	if (ts->eflags.zero) {
        goto loc_4E0A07;
    }
	cmp(&ts->eflags, ts->eax, 0x51123592);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4E0985;
    }
	if (ts->eflags.zero) {
        goto loc_4E0964;
    }
	cmp(&ts->eflags, ts->eax, 0xC407210);
	if (ts->eflags.zero) {
        goto loc_4E0946;
    }
	cmp(&ts->eflags, ts->eax, 0x34DC1BEC);
	if (ts->eflags.zero) {
        goto loc_4E092F;
    }
	cmp(&ts->eflags, ts->eax, 0x5073EF13);
	if (!ts->eflags.zero) {
        goto loc_4E0B17;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, 0x3);
	game::sub_4CBDA0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E092F:
	mov(&ts->ecx, ts->esi);
	game::sub_496CE0(ts, mv);

loc_4E0936:
	mov(&ts->ecx, ts->esi);
	game::sub_4B0FE0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x61, 1), 0x0);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E0946:
	mov(&ts->ecx, ts->esi);
	game::sub_4B0EF0(ts, mv);

loc_4E094D:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50D150(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E0964:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x14, 4));
	add(&ts->eax, 0xC);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x838590);
	game::sub_529480(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x60, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x61, 1), 0x0);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E0985:
	cmp(&ts->eflags, ts->eax, 0x72619778);
	if (ts->eflags.zero) {
        goto loc_4E09F9;
    }
	cmp(&ts->eflags, ts->eax, 0x911AB364);
	if (ts->eflags.zero) {
        goto loc_4E09DE;
    }
	cmp(&ts->eflags, ts->eax, 0x911C0A4B);
	if (!ts->eflags.zero) {
        goto loc_4E0B17;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x5C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_4E09B7;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x54, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_4B0E70(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E09B7:
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4E09C4;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));

loc_4E09C4:
	push(mv, &ts->esp, 0x3);
	mov(&ts->edi, ts->eax);
	game::sub_50D180(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_4B0E70(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E09DE:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xA);
	push(mv, &ts->esp, ts->edx);
	game::sub_50D150(ts, mv);
	add(&ts->esp, 0xC);
	mov(mv, x86::mem(ts->esi + 0x60, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E09F9:
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_4B1060(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E0A07:
	mov(&ts->ecx, 0x838590);
	game::sub_4AE930(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E0B17;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x5C, 4));
	or_(&ts->ecx, 0xFFFFFFFF);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E0A26;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x20, 4));

loc_4E0A26:
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, 0x3);
	game::sub_4B0850(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E0A36:
	cmp(&ts->eflags, ts->eax, 0xC519BFC0);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4E0AB0;
    }
	if (ts->eflags.zero) {
        goto loc_4E0AA4;
    }
	cmp(&ts->eflags, ts->eax, 0x9803F6E2);
	if (ts->eflags.zero) {
        goto loc_4E0A8B;
    }
	cmp(&ts->eflags, ts->eax, 0xB4623F67);
	if (ts->eflags.zero) {
        goto loc_4E0936;
    }
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_4E0B17;
    }
	mov(&ts->ecx, 0x838590);
	game::sub_4AE930(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E0B17;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x5C, 4));
	or_(&ts->ecx, 0xFFFFFFFF);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E0A7B;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x20, 4));

loc_4E0A7B:
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, 0x2);
	game::sub_4B0850(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E0A8B:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x61, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4E0B17;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	push(mv, &ts->esp, ts->esi);
	game::sub_4CBEE0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E0AA4:
	mov(&ts->ecx, ts->esi);
	game::sub_4B10C0(ts, mv);
	goto loc_4E094D;

loc_4E0AB0:
	cmp(&ts->eflags, ts->eax, 0xC98356BA);
	if (ts->eflags.zero) {
        goto loc_4E0ACD;
    }
	cmp(&ts->eflags, ts->eax, 0xD9FEEC59);
	if (!ts->eflags.zero) {
        goto loc_4E0B17;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, 0x2);
	game::sub_4CBDA0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E0ACD:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x60, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E0B0F;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_5379A0(ts, mv);
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E0AFD;
    }
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379A0(ts, mv);
	add(&ts->esp, 0x4);

loc_4E0AFD:
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	push(mv, &ts->esp, 0x1);
	game::sub_5F4240(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E0B0F:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	game::sub_4B09E0(ts, mv);

loc_4E0B17:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);
}

void sub_4E0B20(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi, 4), 0x790EFC);
	if (ts->eflags.zero) {
        goto loc_4E0B39;
    }
	push(mv, &ts->esp, ts->eax);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4E0B39:
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4E0B49;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4E0B49:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4E0B50(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x775A38);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	xor_(&ts->ebx, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edi);
	game::sub_4B1200(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x2C, 4));
	lea(mv, &ts->esi, x86::mem(ts->eax + (ts->eax*4), 4));
	mov(mv, x86::mem(ts->edi, 4), 0x797600);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7F438C, 4));
	mov(mv, &ts->eax, x86::mem(0x7F4388, 4));
	mov(mv, &ts->ebp, x86::mem(0x7F4394, 4));
	lea(mv, &ts->esi, x86::mem(0x7F4388, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, 0x30);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4E0BEB;
    }
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x10, 1));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x18, 4));
	mov(mv, x86::mem(ts->eax + 0x1C, 1), ts->cl);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, x86::mem(ts->eax + 0x8, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ebp);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->edx);
	mov(mv, x86::mem(ts->eax + 0x28, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), ts->ebx);
	goto loc_4E0BED;

loc_4E0BEB:
	xor_(&ts->eax, ts->eax);

loc_4E0BED:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, x86::mem(ts->edi + 0x30, 4), ts->eax);
	mov(mv, x86::mem(ts->edi + 0x1C, 4), ts->ebp);
	mov(&ts->eax, ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x18);
	retn(mv, &ts->esp, 0x4);

loc_775A30:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x18, 4));
	goto sub_4EE670;

SEH_4E0B50:
	mov(&ts->eax, 0x7E0FAC);
	goto ___CxxFrameHandler;
}

void sub_4E0C10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4CC0C0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4E0C28;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4E0C28:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4E0C30(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x775A64);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x38);
	mov(&ts->edi, ts->ecx);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4E0C77;
    }
	movzx(mv, &ts->ecx, x86::mem(ts->edi + 0x224, 1));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4E0B50(ts, mv);
	mov(&ts->esi, ts->eax);
	goto loc_4E0C79;

loc_4E0C77:
	xor_(&ts->esi, ts->esi);

loc_4E0C79:
	movzx(mv, &ts->edx, x86::mem(ts->edi + 0x224, 1));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x797618);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xFFFFFFFF);
	game::sub_50B990(ts, mv);
	push(mv, &ts->esp, 0x10);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->eax);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E0CB2;
    }
	mov(mv, x86::mem(ts->eax, 4), 0x790F04);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->esi);
	add(&ts->eax, 0x4);
	goto loc_4E0CB4;

loc_4E0CB2:
	xor_(&ts->eax, ts->eax);

loc_4E0CB4:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_775A50:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x797608);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4E0C30:
	mov(&ts->eax, 0x7E0FD0);
	goto ___CxxFrameHandler;
}

void sub_4E0CE0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x775A78);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x14);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	game::sub_4B1520(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	xor_(&ts->ebx, ts->ebx);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x30, 4), ts->ebx);
	game::sub_4E0C30(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_4B1360(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4E0D44;
    }
	lea(mv, &ts->esi, x86::mem(ts->eax - 0x4, 4));
	goto loc_4E0D46;

loc_4E0D44:
	xor_(&ts->esi, ts->esi);

loc_4E0D46:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	game::sub_431780(ts, mv);
	cmp(&ts->eflags, ts->esi, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E0DD5;
    }

loc_4E0D57:
	push(mv, &ts->esp, 0x30);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4E0D8C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x20, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x21, 1), 0x1);
	mov(mv, x86::mem(ts->eax + 0x22, 1), ts->bl);
	mov(mv, x86::mem(ts->eax + 0x23, 1), ts->bl);
	mov(mv, x86::mem(ts->eax, 4), 0x79AFDC);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), ts->ecx);
	goto loc_4E0D8E;

loc_4E0D8C:
	xor_(&ts->eax, ts->eax);

loc_4E0D8E:
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x138, 4));
	game::sub_52ED80(ts, mv);
	push(mv, &ts->esp, 0x797634);
	mov(&ts->ebp, ts->eax);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	game::sub_50C990(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x228, 4));
	add(&ts->esp, 0xC);
	inc(&ts->ecx);
	mov(mv, x86::mem(ts->edi + 0x228, 4), ts->ecx);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	cmp(&ts->eflags, ts->esi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4E0DCD;
    }
	add(&ts->esi, 0xFFFFFFFC);
	goto loc_4E0DCF;

loc_4E0DCD:
	xor_(&ts->esi, ts->esi);

loc_4E0DCF:
	cmp(mv, &ts->eflags, ts->esi, x86::mem(ts->esp + 0x14, 4));
	if (!ts->eflags.zero) {
        goto loc_4E0D57;
    }

loc_4E0DD5:
	lea(mv, &ts->esi, x86::mem(ts->edi + 0x138, 4));
	mov(&ts->ecx, ts->esi);
	game::sub_538740(ts, mv);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_52EB90(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_538760(ts, mv);
	mov(&ts->ecx, ts->edi);
	game::sub_4B1590(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x2C, 4), 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_4E0E35;
    }
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_4E0E10:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(&ts->edx, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->edx - 0x4, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4E0E29;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->edx, 4));

loc_4E0E29:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4E0E10;
    }

loc_4E0E35:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_775A70:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x18, 4));
	goto sub_4358E0;

SEH_4E0CE0:
	mov(&ts->eax, 0x7E0FF4);
	goto ___CxxFrameHandler;
}

void sub_4E0E50(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->cl, x86::mem(ts->esp + 0xC, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x224, 1));
	push(mv, &ts->esp, ts->edi);
	movzx(&ts->ebx, ts->al);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x8C, 4));
	if (ts->eflags.zero) {
        goto loc_4E0E9C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x14, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4E0E78;
    }
	add(&ts->ecx, 0xFFFFFFFC);
	goto loc_4E0E7A;

loc_4E0E78:
	xor_(&ts->ecx, ts->ecx);

loc_4E0E7A:
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0x24, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4E0F5A;
    }
	inc(&ts->al);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x224, 1), ts->al);
	game::sub_54EB40(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x7);
	push(mv, &ts->esp, 0x5);
	push(mv, &ts->esp, ts->eax);
	goto loc_4E0ECA;

loc_4E0E9C:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x10, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4E0EA8;
    }
	add(&ts->ecx, 0xFFFFFFFC);
	goto loc_4E0EAA;

loc_4E0EA8:
	xor_(&ts->ecx, ts->ecx);

loc_4E0EAA:
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0x24, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4E0F5A;
    }
	dec(&ts->al);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x224, 1), ts->al);
	game::sub_54EB60(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x7);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, ts->ecx);

loc_4E0ECA:
	game::sub_50D150(ts, mv);
	movzx(mv, &ts->edx, x86::mem(ts->esi + 0x224, 1));
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->ebx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_4E0F09;
    }
	mov(mv, &ts->eax, x86::mem(0x8651AC, 4));
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x22C, 4), ts->eax);
	game::sub_4E0CE0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x144, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E0F09;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x78, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x64, 4));
	push(mv, &ts->esp, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));

loc_4E0F09:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->edi);
	game::sub_538500(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_4B1590(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x144, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x34, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4E0F42;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	game::sub_54E6E0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

loc_4E0F42:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	push(mv, &ts->esp, ts->edx);
	or_(&ts->eax, 0x2000000);
	push(mv, &ts->esp, ts->eax);
	game::sub_54E6E0(ts, mv);

loc_4E0F5A:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_4E0F60(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0x911C0A4B);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4E10E7;
    }
	if (ts->eflags.zero) {
        goto loc_4E10D8;
    }
	cmp(&ts->eflags, ts->eax, 0x51123592);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4E107E;
    }
	if (ts->eflags.zero) {
        goto loc_4E104E;
    }
	cmp(&ts->eflags, ts->eax, 0xC407210);
	if (ts->eflags.zero) {
        goto loc_4E0FA9;
    }
	cmp(&ts->eflags, ts->eax, 0x35F8620B);
	if (ts->eflags.zero) {
        goto loc_4E1041;
    }
	cmp(&ts->eflags, ts->eax, 0x406415E3);
	if (!ts->eflags.zero) {
        goto loc_4E135F;
    }

loc_4E0FA9:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(0x8651AC, 4));
	if (ts->eflags.zero) {
        goto loc_4E135F;
    }
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x138, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_51F7E0(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.zero) {
        goto loc_4E135F;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->edx);
	game::sub_50D150(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xEC9488BB);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xB4623F67);
	push(mv, &ts->esp, 0xB4623F67);
	push(mv, &ts->esp, 0x51123592);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->eax);
	game::sub_558790(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50D2A0(ts, mv);
	add(&ts->esp, 0x34);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(0x83A9D8, 4), ts->eax);
	game::sub_5388F0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x9E99);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C60(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E1041:
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x167, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E104E:
	mov(mv, x86::mem(0x837B6D, 1), 0x1);

loc_4E1055:
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x138, 4));
	game::sub_538900(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x3D8EABC);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C60(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E107E:
	cmp(&ts->eflags, ts->eax, 0x72619778);
	if (ts->eflags.zero) {
        goto loc_4E10C9;
    }
	cmp(&ts->eflags, ts->eax, 0x911AB364);
	if (!ts->eflags.zero) {
        goto loc_4E135F;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(0x8651AC, 4));
	if (ts->eflags.zero) {
        goto loc_4E135F;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xA);
	push(mv, &ts->esp, ts->edx);
	game::sub_50D150(ts, mv);
	add(&ts->esp, 0xC);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x138, 4));
	mov(mv, x86::mem(0x837B6C, 1), 0x1);
	game::sub_5388F0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E10C9:
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_4CC140(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E10D8:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_4CC140(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E10E7:
	cmp(&ts->eflags, ts->eax, 0xB4623F67);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4E122D;
    }
	if (ts->eflags.zero) {
        goto loc_4E1055;
    }
	cmp(&ts->eflags, ts->eax, 0x9120409E);
	if (ts->eflags.zero) {
        goto loc_4E121E;
    }
	cmp(&ts->eflags, ts->eax, 0x9803F6E2);
	if (!ts->eflags.zero) {
        goto loc_4E135F;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x50, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_52D100(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E1122;
    }
	push(mv, &ts->esp, 0x0);
	goto loc_4E1134;

loc_4E1122:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_52D100(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E113B;
    }
	push(mv, &ts->esp, 0x1);

loc_4E1134:
	mov(&ts->ecx, ts->esi);
	game::sub_4E0E50(ts, mv);

loc_4E113B:
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x19C, 4));
	game::sub_538130(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x1D8, 4));
	lea(mv, &ts->edx, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CDA0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	add(&ts->esp, 0x4);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4E116F;
    }
	mov(&ts->edi, 0x1);
	goto loc_4E1182;

loc_4E116F:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x8, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4E1182;
    }
	or_(&ts->edi, 0xFFFFFFFF);

loc_4E1182:
	lea(mv, &ts->eax, x86::mem(ts->edi + 0xA, 4));
	cmp(&ts->eflags, ts->eax, 0x14);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4E1191;
    }
	movzx(mv, &ts->eax, x86::mem(ts->eax + 0x4E137C, 1));
	jmp(x86::mem(0x4E1368, 4));

loc_4E1198:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_4CC140(ts, mv);
	goto def_4E1191;

loc_4E11A3:
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_4CC140(ts, mv);
	goto def_4E1191;

loc_4E11AE:
	mov(mv, &ts->eax, x86::mem(0x7FA1A8, 4));
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto def_4E1191;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_4E11C0:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_4CC140(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x7FA1A8, 4));
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4E11C0;
    }
	goto def_4E1191;

loc_4E11D5:
	mov(mv, &ts->eax, x86::mem(0x7FA1A8, 4));
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto def_4E1191;
    }

loc_4E11E0:
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_4CC140(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x7FA1A8, 4));
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4E11E0;
    }

def_4E1191:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x60, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_52D090(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E135F;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0xC407210);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E121E:
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_4E0E50(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E122D:
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	if (ts->eflags.zero) {
        goto loc_4E1356;
    }
	cmp(&ts->eflags, ts->eax, 0xC98356BA);
	if (!ts->eflags.zero) {
        goto loc_4E135F;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x8C, 4));
	game::sub_538500(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x138, 4));
	game::sub_538760(ts, mv);
	mov(mv, &ts->al, x86::mem(0x837B6D, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E12B6;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x144, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0xC, 4));
	mov(mv, &ts->esi, x86::mem(ts->edx + 0x34, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4E12A9;
    }
	mov(&ts->ecx, 0x83A9D0);
	game::sub_5032C0(ts, mv);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x85AD40);
	game::sub_541160(ts, mv);
	push(mv, &ts->esp, ts->esi);
	game::sub_5325E0(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->ecx, 0x865480);
	game::sub_578320(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(0x837B6D, 1), 0x0);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E12A9:
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(0x837B6C, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E12B6:
	mov(mv, &ts->al, x86::mem(0x837B6C, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E12DF;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78F5A4);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x837B6C, 1), 0x0);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E12DF:
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x22C, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_401820(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E133E;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(mv, &ts->ecx, x86::mem(0x8651AC, 4));
	sub(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->ebp + 0x8, 4), ts->ecx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78758C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4E1349;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x144, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x30, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x1F4, 4));
	game::sub_498600(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->edi, 4), 0x0);
	game::sub_4B1590(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E133E:
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x1F4, 4));
	game::sub_4CDD40(ts, mv);

loc_4E1349:
	mov(&ts->ecx, ts->esi);
	game::sub_4B1590(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E1356:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_4E0E50(ts, mv);

loc_4E135F:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);
}

void sub_4E13A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4CC240(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4E13B8;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4E13B8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4E13C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x775AA7);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x90);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8, 4), 0xA148528A);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x7);
	push(mv, &ts->esp, ts->ebx);

loc_4E13F7:
	push(mv, &ts->esp, 0x34);
	game::j__malloc(ts, mv);
	xor_(&ts->ebx, ts->ebx);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4E1438;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x28, 1), 0x1);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), 0x78F228);
	mov(mv, x86::mem(ts->eax + 0x30, 4), 0x78F21C);
	mov(mv, x86::mem(ts->eax, 4), 0x795D30);
	mov(&ts->ebx, ts->eax);

loc_4E1438:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	add(&ts->ecx, 0xB523A4FF);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, 0x10);
	mov(&ts->edi, ts->eax);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E146A;
    }
	mov(mv, x86::mem(ts->eax, 4), 0x790C2C);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->edi);
	add(&ts->eax, 0x4);
	goto loc_4E146C;

loc_4E146A:
	xor_(&ts->eax, ts->eax);

loc_4E146C:
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	lea(mv, &ts->edi, x86::mem(ts->ebx + 0xC, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->edi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->edi);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, 0x10);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E14AE;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->eax, 4), 0x790C2C);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ecx);
	add(&ts->eax, 0x4);
	goto loc_4E14B0;

loc_4E14AE:
	xor_(&ts->eax, ts->eax);

loc_4E14B0:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->edi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax, 4), ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	lea(mv, &ts->edx, x86::mem(ts->edi - 0x78BFE074, 4));
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->ebx + 0x14, 4), ts->eax);
	game::sub_52E770(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	inc(&ts->edi);
	dec(&ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4E13F7;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	game::sub_51F4E0(ts, mv);
	mov(mv, &ts->al, x86::mem(0x86347D, 1));
	xor_(&ts->ebx, ts->ebx);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E1526;
    }
	mov(&ts->ecx, 0x85AD40);
	game::sub_513C30(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E1526;
    }
	add(&ts->eax, 0x434);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E1526;
    }
	mov(mv, &ts->ebx, x86::mem(ts->eax + 0x3BC, 4));

loc_4E1526:
	mov(mv, &ts->eax, x86::mem(0x8900AC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E1544;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x8637D0);
	game::sub_53D870(ts, mv);

loc_4E1544:
	push(mv, &ts->esp, 0x92260F04);
	mov(&ts->ecx, ts->esi);
	game::sub_4CC4A0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x835C68, 4));
	push(mv, &ts->esp, 0x18);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E157D;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 1), 0x1);
	mov(mv, x86::mem(ts->eax, 4), 0x795CB0);
	mov(&ts->edi, ts->eax);
	goto loc_4E157F;

loc_4E157D:
	xor_(&ts->edi, ts->edi);

loc_4E157F:
	push(mv, &ts->esp, 0x797668);
	push(mv, &ts->esp, 0xABBA6482);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_4B1AE0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_4B1710(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->edi);
	game::sub_51F2E0(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x835C00, 4));
	push(mv, &ts->esp, 0x797668);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x13B49408);
	mov(&ts->ecx, ts->esi);
	game::sub_4CC250(ts, mv);
	push(mv, &ts->esp, 0x797668);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x3B10CB47);
	mov(&ts->ecx, ts->esi);
	game::sub_4CC250(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x835C04, 4));
	push(mv, &ts->esp, 0x797668);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xC967AEE0);
	mov(&ts->ecx, ts->esi);
	game::sub_4CC250(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x835C08, 4));
	push(mv, &ts->esp, 0x797668);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x241BE921);
	mov(&ts->ecx, ts->esi);
	game::sub_4CC250(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x835C0C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784258, 4));
	push(mv, &ts->esp, 0x797668);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, 0xD817A4A);
	game::sub_4CC410(ts, mv);
	push(mv, &ts->esp, 0xC3755F6D);
	mov(&ts->ecx, ts->esi);
	game::sub_4CC4A0(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x835C10, 4));
	push(mv, &ts->esp, 0x797668);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x151C443F);
	mov(&ts->ecx, ts->esi);
	game::sub_4CC250(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x835C14, 4));
	push(mv, &ts->esp, 0x797668);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x22A144EC);
	mov(&ts->ecx, ts->esi);
	game::sub_4CC250(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x835C1C, 4));
	push(mv, &ts->esp, 0x797668);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x8EAB27C5);
	mov(&ts->ecx, ts->esi);
	game::sub_4CC250(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x835C18, 4));
	push(mv, &ts->esp, 0x797668);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x8090B36A);
	mov(&ts->ecx, ts->esi);
	game::sub_4CC250(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x835C20, 4));
	push(mv, &ts->esp, 0x797668);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xEF317ADA);
	mov(&ts->ecx, ts->esi);
	game::sub_4CC250(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x835C24, 4));
	push(mv, &ts->esp, 0x797668);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xE6E0BC3F);
	mov(&ts->ecx, ts->esi);
	game::sub_4CC250(ts, mv);
	push(mv, &ts->esp, 0x11F7AC44);
	mov(&ts->ecx, ts->esi);
	game::sub_4CC4A0(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x835C2C, 4));
	mov(mv, &ts->eax, x86::mem(0x835C28, 4));
	push(mv, &ts->esp, 0x797668);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xC35DD09E);
	mov(&ts->ecx, ts->esi);
	game::sub_4CC2E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x835C8C, 4));
	mov(mv, &ts->edx, x86::mem(0x835C88, 4));
	push(mv, &ts->esp, 0x797668);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x678144AE);
	mov(&ts->ecx, ts->esi);
	game::sub_4CC2E0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x835C30, 4));
	push(mv, &ts->esp, 0x797668);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x5F77BB60);
	mov(&ts->ecx, ts->esi);
	game::sub_4CC250(ts, mv);
	push(mv, &ts->esp, 0xA49003BA);
	mov(&ts->ecx, ts->esi);
	game::sub_4CC4A0(ts, mv);
	mov(&ts->edi, 0x1);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x8B84E940);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x797668);
	push(mv, &ts->esp, 0x797660);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x78, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x835DE0, 4));
	add(&ts->esp, 0x24);
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x60, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_4CC380(ts, mv);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x85AD40);
	game::sub_500C00(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E17E9;
    }

loc_4E1787:
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, 0x5);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_4E17E9;
    }
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x8B84E940);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C960(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x797668);
	push(mv, &ts->esp, 0x797660);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x78, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x835DDC, 4));
	add(&ts->esp, 0x24);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x60, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_4CC380(ts, mv);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x85AD40);
	game::sub_500C00(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4E1787;
    }

loc_4E17E9:
	push(mv, &ts->esp, 0xA63A4AF1);
	mov(&ts->ecx, ts->esi);
	game::sub_4CC4A0(ts, mv);
	mov(&ts->edi, 0x1);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x8B84E940);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x44, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C960(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x797668);
	push(mv, &ts->esp, 0x797660);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x98, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x835E00, 4));
	add(&ts->esp, 0x24);
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x80, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_4CC380(ts, mv);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x85AD40);
	game::sub_500C00(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E18C8;
    }
	goto loc_4E1860;

loc_4E1860:
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, 0x5);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_4E18C8;
    }
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x8B84E940);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x44, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x4C, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x797668);
	push(mv, &ts->esp, 0x797660);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x98, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x835DFC, 4));
	add(&ts->esp, 0x24);
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x80, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_4CC380(ts, mv);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x85AD40);
	game::sub_500C00(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4E1860;
    }

loc_4E18C8:
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, 0x85AD40);
	game::sub_500C00(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E1953;
    }
	push(mv, &ts->esp, 0x2E8D7E4B);
	mov(&ts->ecx, ts->esi);
	game::sub_4CC4A0(ts, mv);
	mov(&ts->edi, 0x1);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x86221C);

loc_4E18F1:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4E1953;
    }
	movsx(mv, &ts->ecx, x86::mem(0x835C36, 2));
	movsx(mv, &ts->ebx, x86::mem(0x835C34, 2));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x797644);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ecx);
	game::sub_50B990(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x797668);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_4CC2E0(ts, mv);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x85AD40);
	game::sub_500C00(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E1953;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	add(&ts->eax, 0x104);
	inc(&ts->edi);
	cmp(&ts->eflags, ts->eax, 0x862730);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4E18F1;
    }

loc_4E1953:
	push(mv, &ts->esp, 0xEA33E5B6);
	mov(&ts->ecx, ts->esi);
	game::sub_4CC4A0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x835C54, 4));
	push(mv, &ts->esp, 0x18);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4E198D;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 1), 0x1);
	mov(mv, x86::mem(ts->eax, 4), 0x795CB0);
	mov(&ts->edi, ts->eax);
	goto loc_4E198F;

loc_4E198D:
	xor_(&ts->edi, ts->edi);

loc_4E198F:
	push(mv, &ts->esp, 0x797668);
	push(mv, &ts->esp, 0xE0AF0D6A);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_4B1AE0(ts, mv);
	push(mv, &ts->esp, 0x98);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xA0, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4E19CF;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4B1680(ts, mv);
	goto loc_4E19D1;

loc_4E19CF:
	xor_(&ts->eax, ts->eax);

loc_4E19D1:
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xA0, 4), 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_4E19E5;
    }
	add(&ts->eax, 0x4);
	goto loc_4E19E7;

loc_4E19E5:
	xor_(&ts->eax, ts->eax);

loc_4E19E7:
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x10, 4));
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x10, 4));
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0xC, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	game::sub_51F2E0(ts, mv);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_538500(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x98, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x9C);
	retn(mv, &ts->esp);

loc_775A90:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x790F3C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x90, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4E13C0:
	mov(&ts->eax, 0x7E1018);
	goto ___CxxFrameHandler;
}

void sub_4E1A30(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7748B3);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->ebp - 0x10, 4), ts->esi);
	game::sub_551DE0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	xor_(&ts->edi, ts->edi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x796484);
	push(mv, &ts->esp, 0x797670);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, x86::mem(ts->ebp - 0x4, 4), ts->edi);
	mov(mv, x86::mem(ts->esi, 4), 0x795D38);
	game::sub_542CA0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x100, 4), ts->edi);
	mov(mv, x86::mem(ts->ebp - 0x4, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x104, 1), 0x0);
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4E1ABB;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_555F10(ts, mv);
	add(&ts->esp, 0x10);

loc_4E1ABB:
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	game::sub_54E6A0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	game::sub_54E6E0(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x83A9D8, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50D2D0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537950(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x444969FD);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A60(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xF8, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x444969FE);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A60(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xFC, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x8651AC, 4));
	mov(mv, x86::mem(ts->esi + 0x100, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x1C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(0x7F4428, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x4);
	game::sub_555F50(ts, mv);
	add(&ts->esp, 0x30);
	mov(&ts->ecx, ts->esi);
	game::sub_4CC5C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

unknown_libname_57:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

loc_7748A8:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x4C);
	goto sub_4CBBA0;

SEH_4E5E60:
	mov(&ts->eax, 0x7E137C);
	goto ___CxxFrameHandler;
}

void sub_4E1B60(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4CC530(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4E1B78;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4E1B78:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4E1B80(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x775AD4);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x835C00);
	mov(&ts->ecx, 0x85AD40);
	game::sub_528A60(ts, mv);
	push(mv, &ts->esp, 0x108);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->ebp - 0x10, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4E1BDC;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4E1A30(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_4E1BDC:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_775AC0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79767C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4E1B80:
	mov(&ts->eax, 0x7E103C);
	goto ___CxxFrameHandler;
}

void sub_4E1BF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x775B1D);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0xC);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x18, 4), ts->esi);
	game::sub_551DE0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	xor_(&ts->edi, ts->edi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F814);
	mov(mv, x86::mem(ts->esi, 4), 0x795D48);
	mov(mv, &ts->ecx, x86::mem(0x8651AC, 4));
	push(mv, &ts->esp, 0x7976D4);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->ecx);
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0x50, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), ts->edi);
	game::sub_542CA0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x796484);
	push(mv, &ts->esp, 0x7976C8);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x4, 1), 0x1);
	game::sub_542CA0(ts, mv);
	mov(mv, x86::mem(ts->ebp - 0x4, 1), 0x2);
	mov(mv, x86::mem(ts->esi + 0x1A8, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x1AC, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x1B0, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x1B4, 4), ts->edi);
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4E1CB8;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_555F10(ts, mv);
	add(&ts->esp, 0x10);

loc_4E1CB8:
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	game::sub_54E6A0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	game::sub_54E6E0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x83A9D8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x10, 4), ts->edx);
	game::sub_50D2D0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537950(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x7976BC);
	mov(mv, x86::mem(ts->ebp - 0x10, 4), ts->edx);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x7976B0);
	mov(mv, x86::mem(ts->esi + 0x1B0, 4), ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x10, 4), ts->ecx);
	game::sub_505450(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_5379C0(ts, mv);
	add(&ts->esp, 0x24);
	mov(&ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1B4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xF4, 4), 0xC407210);
	mov(mv, x86::mem(ts->esi + 0xF8, 1), 0x1);
	game::sub_51F4E0(ts, mv);
	mov(&ts->ebx, 0x1);
	mov(mv, x86::mem(ts->ebp - 0x10, 4), 0xA);
	goto loc_4E1D60;

loc_4E1D5A:
	xor_(&ts->edi, ts->edi);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_4E1D60:
	push(mv, &ts->esp, 0x34);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4E1D9F;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->eax, 4), 0x79B9D4);
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x28, 1), 0x1);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), 0x78F228);
	mov(mv, x86::mem(ts->eax + 0x30, 4), 0x78F21C);
	mov(&ts->edi, ts->eax);

loc_4E1D9F:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x7976A0);
	mov(mv, x86::mem(ts->ebp - 0x14, 4), ts->eax);
	game::sub_50B990(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537A10(ts, mv);
	push(mv, &ts->esp, 0x10);
	mov(mv, x86::mem(ts->ebp - 0x14, 4), ts->eax);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x14);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E1DDC;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebp - 0x14, 4));
	mov(mv, x86::mem(ts->eax, 4), 0x790C2C);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->edx);
	add(&ts->eax, 0x4);
	goto loc_4E1DDE;

loc_4E1DDC:
	xor_(&ts->eax, ts->eax);

loc_4E1DDE:
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x10, 4));
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0xC, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x796288);
	mov(mv, x86::mem(ts->ebp - 0x14, 4), ts->eax);
	game::sub_50B990(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_5379C0(ts, mv);
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	mov(mv, x86::mem(ts->edi + 0x14, 4), ts->eax);
	game::sub_52E770(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	inc(&ts->ebx);
	dec(&ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x10, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4E1D5A;
    }
	push(mv, &ts->esp, 0x34);
	game::j__malloc(ts, mv);
	xor_(&ts->edi, ts->edi);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4E1E67;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->eax, 4), 0x79B9D4);
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->edi);
	mov(mv, x86::mem(ts->eax + 0x28, 1), 0x1);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), 0x78F228);
	mov(mv, x86::mem(ts->eax + 0x30, 4), 0x78F21C);
	mov(&ts->edi, ts->eax);

loc_4E1E67:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x980822B3);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	push(mv, &ts->esp, 0x10);
	mov(&ts->ebx, ts->eax);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E1E93;
    }
	mov(mv, x86::mem(ts->eax, 4), 0x790C2C);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ebx);
	add(&ts->eax, 0x4);
	goto loc_4E1E95;

loc_4E1E93:
	xor_(&ts->eax, ts->eax);

loc_4E1E95:
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x10, 4));
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0xC, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	game::sub_52E770(ts, mv);
	mov(&ts->ebx, 0x7F4438);

loc_4E1EB6:
	push(mv, &ts->esp, 0x1C);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->ebp - 0x14, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4E1F33;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebx, 4));
	lea(mv, &ts->eax, x86::mem(ts->edi + 0xC, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->edi + 0x14, 1), 0x1);
	cmp(&ts->eflags, ts->ecx, 0x5);
	mov(mv, x86::mem(ts->ebp - 0x4, 1), 0x4);
	mov(mv, x86::mem(ts->edi, 4), 0x795CB0);
	mov(mv, x86::mem(ts->edi + 0x18, 4), ts->ecx);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4E1EE9;
    }
	jmp(x86::mem(0x4E2018, 4));

loc_4E1EF0:
	mov(&ts->eax, 0xC06E138A);
	goto loc_4E1F1C;

loc_4E1EF7:
	mov(&ts->eax, 0xB0819356);
	goto loc_4E1F1C;

loc_4E1EFE:
	mov(&ts->eax, 0xF8CB19A3);
	goto loc_4E1F1C;

loc_4E1F05:
	mov(&ts->eax, 0x6F8E5BF);
	goto loc_4E1F1C;

loc_4E1F0C:
	mov(&ts->eax, 0xE2442059);
	goto loc_4E1F1C;

loc_4E1F13:
	mov(&ts->eax, 0xEA33E5B6);
	goto loc_4E1F1C;

def_4E1EE9:
	xor_(&ts->eax, ts->eax);

loc_4E1F1C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_4AEA60(ts, mv);
	goto loc_4E1F35;

loc_4E1F33:
	xor_(&ts->edi, ts->edi);

loc_4E1F35:
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	mov(mv, x86::mem(ts->ebp - 0x4, 1), 0x2);
	game::sub_51F2E0(ts, mv);
	add(&ts->ebx, 0x4);
	cmp(&ts->eflags, ts->ebx, 0x7F444C);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4E1EB6;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E1F63;
    }
	lea(mv, &ts->ebx, x86::mem(ts->eax - 0x4, 4));
	goto loc_4E1F65;

loc_4E1F63:
	xor_(&ts->ebx, ts->ebx);

loc_4E1F65:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x110, 4));
	mov(mv, &ts->edx, x86::mem(0x7F4434, 4));

loc_4E1F71:
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4E1F7A;
    }
	lea(mv, &ts->eax, x86::mem(ts->ecx - 0x4, 4));
	goto loc_4E1F7C;

loc_4E1F7A:
	xor_(&ts->eax, ts->eax);

loc_4E1F7C:
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E1F88;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_4E1F8A;

loc_4E1F88:
	xor_(&ts->eax, ts->eax);

loc_4E1F8A:
	cmp(&ts->eflags, ts->ebx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E1FA3;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ebx + 0x18, 4), ts->edx);
	if (ts->eflags.zero) {
        goto loc_4E1FA3;
    }
	mov(mv, &ts->ebx, x86::mem(ts->ebx + 0x4, 4));
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4E1F9F;
    }
	add(&ts->ebx, 0xFFFFFFFC);
	goto loc_4E1F71;

loc_4E1F9F:
	xor_(&ts->ebx, ts->ebx);
	goto loc_4E1F71;

loc_4E1FA3:
	lea(mv, &ts->edi, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->edi);
	game::sub_543470(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->edi);
	game::sub_51F440(ts, mv);
	dec(&ts->eax);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_54EDD0(ts, mv);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->edi);
	game::sub_538500(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->edi + 0x2C, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4E1FE3;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x2C, 4));
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51EE80(ts, mv);

loc_4E1FE3:
	mov(&ts->ecx, ts->esi);
	game::sub_4CC900(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->ecx + 0xAE, 1), 0x0);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	game::sub_504820(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_775AE0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x18, 4));
	goto sub_510D40;

loc_775AE8:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x18, 4));
	add(&ts->ecx, 0x50);
	goto sub_4CBBA0;

loc_775AF3:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x18, 4));
	add(&ts->ecx, 0xFC);
	goto sub_4CBBA0;

loc_775B01:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x797690);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_775B15:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x14, 4));
	goto sub_531610;

SEH_4E1BF0:
	mov(&ts->eax, 0x7E1080);
	goto ___CxxFrameHandler;
}

void sub_4E2030(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::std__strstreambuf___strstreambuf_void_(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4E2048;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4E2048:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4E2050(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x775B44);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x1B8);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4E209E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4E1BF0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4E209E:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_775B30:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7976E8);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4E2050:
	mov(&ts->eax, 0x7E10A4);
	goto ___CxxFrameHandler;
}

void sub_4E20B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x775BA7);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x8FC);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x79770C);
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x8);
	mov(mv, x86::mem(ts->esp + 0x90C, 4), 0x4);
	if (!ts->eflags.zero) {
        goto loc_4E2108;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x7976FC);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4E2131;
    }

loc_4E2108:
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x200);
	if (!ts->eflags.zero) {
        goto loc_4E222A;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x78F354);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E222A;
    }

loc_4E2131:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	game::sub_40C910(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1A8, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x83AD90);
	mov(mv, x86::mem(ts->esp + 0x910, 1), 0x5);
	game::sub_503510(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1A8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x83AAB4);
	game::sub_502A40(ts, mv);
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E2198;
    }
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->edi, ts->eax);
	goto loc_4E21C1;

loc_4E2198:
	push(mv, &ts->esp, 0x7906DC);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E21BF;
    }
	push(mv, &ts->esp, 0x7906DC);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E21BF;
    }
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x4C, 4));
	goto loc_4E21C1;

loc_4E21BF:
	xor_(&ts->edi, ts->edi);

loc_4E21C1:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x8371B0);
	game::sub_413440(ts, mv);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(0x83623C, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4E21EC;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x8371B0);
	mov(&ts->ecx, ts->edi);
	game::sub_4D8C70(ts, mv);

loc_4E21EC:
	mov(mv, &ts->al, x86::mem(0x8500CC, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4E2216;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_58B9A0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_587630(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	game::sub_58B9A0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_58E080(ts, mv);

loc_4E2216:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x394, 4));
	mov(mv, x86::mem(ts->esp + 0x90C, 1), 0x4);
	game::nullsub_1(ts, mv);

loc_4E222A:
	mov(&ts->eax, 0x78F544);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	mov(mv, x86::mem(ts->esi + 0x160, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x11C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0xD8, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x90C, 1), 0x0);
	game::sub_479100(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x90C, 4), 0xFFFFFFFF);
	game::sub_510D40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x904, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_775B50:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x904, 4));
	goto sub_510D40;

loc_775B5B:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x904, 4));
	add(&ts->ecx, 0x50);
	goto sub_479100;

loc_775B69:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x904, 4));
	add(&ts->ecx, 0xD8);
	goto sub_4957A0;

loc_775B7A:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x904, 4));
	add(&ts->ecx, 0x11C);
	goto sub_4957A0;

loc_775B8B:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x904, 4));
	add(&ts->ecx, 0x160);
	goto sub_4957A0;

loc_775B9C:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x900, 4));
	goto sub_401800;

SEH_4E20B0:
	mov(&ts->eax, 0x7E10F0);
	goto ___CxxFrameHandler;
}

void sub_4E2280(x86::thread_state* ts, x86::memory_view* mv) {
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x4);
	if (!ts->eflags.zero) {
        goto loc_4E2295;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x5C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4E22B0;
    }

loc_4E2295:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0x5073EF13);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4E22BD;
    }
	if (ts->eflags.zero) {
        goto loc_4E22B5;
    }
	cmp(&ts->eflags, ts->eax, 0xC407210);
	if (ts->eflags.zero) {
        goto loc_4E22B0;
    }
	cmp(&ts->eflags, ts->eax, 0x406415E3);
	if (!ts->eflags.zero) {
        goto loc_4E22C4;
    }

loc_4E22B0:
	xor_(&ts->eax, ts->eax);
	retn(mv, &ts->esp, 0x14);

loc_4E22B5:
	mov(&ts->eax, 0x6);
	retn(mv, &ts->esp, 0x14);

loc_4E22BD:
	cmp(&ts->eflags, ts->eax, 0xD9FEEC59);
	if (ts->eflags.zero) {
        goto loc_4E22D7;
    }

loc_4E22C4:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_50D1A0(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp, 0x14);

loc_4E22D7:
	mov(&ts->eax, 0x7);
	retn(mv, &ts->esp, 0x14);
}

void sub_4E22E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x775BD4);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x14);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x5C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4E231C;
    }
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4E231C;
    }
	imul(&ts->eax, ts->eax, 0xAB4C);
	add(&ts->eax, 0x83AD90);
	mov(mv, x86::mem(ts->ebp - 0x10, 4), ts->eax);
	goto loc_4E2323;

loc_4E231C:
	mov(mv, x86::mem(ts->ebp - 0x10, 4), 0x0);

loc_4E2323:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_5162D0(ts, mv);
	mov(&ts->ecx, ts->edi);
	mov(&ts->esi, ts->eax);
	game::sub_497DA0(ts, mv);
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->ebp - 0x18, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E2442;
    }

loc_4E2345:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_4E242B;
    }
	mov(mv, &ts->ecx, x86::mem(0x8A1CCC, 4));
	imul(&ts->eax, ts->eax, 0x890);
	add(&ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->ebp - 0x14, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E23A8;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x840, 4));
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_4E23A8;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_5022C0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E23A8;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x14, 4));
	game::sub_610180(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E23A8;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x5C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp - 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_534180(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E23A8;
    }
	mov(&ts->bl, 0x1);
	goto loc_4E23AA;

loc_4E23A8:
	xor_(&ts->bl, ts->bl);

loc_4E23AA:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_516340(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E23C4;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x7F5, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E242B;
    }

loc_4E23C4:
	test(&ts->eflags, ts->bl, ts->bl);
	if (ts->eflags.zero) {
        goto loc_4E242B;
    }
	push(mv, &ts->esp, 0x930);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->ebp - 0x20, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4E2404;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, x86::mem(ts->ebp - 0x1C, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x5C, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x14, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->ebp - 0x1C, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_511DB0(ts, mv);
	goto loc_4E2406;

loc_4E2404:
	xor_(&ts->eax, ts->eax);

loc_4E2406:
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_4E2416;
    }
	add(&ts->eax, 0x10);
	goto loc_4E2418;

loc_4E2416:
	xor_(&ts->eax, ts->eax);

loc_4E2418:
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x54, 4));
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x50, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	inc(mv, x86::mem(ts->edi + 0x60, 4));

loc_4E242B:
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edx);
	game::sub_5162D0(ts, mv);
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_4E2345;
    }

loc_4E2442:
	lea(mv, &ts->esi, x86::mem(ts->edi + 0x50, 4));
	push(mv, &ts->esp, 0x40CB20);
	mov(&ts->ecx, ts->esi);
	game::sub_43E650(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x5C, 4));
	mov(mv, &ts->ecx, x86::mem(0x83AAB8, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4E247E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4E246A;
    }
	add(&ts->ecx, 0xFFFFFFF0);
	goto loc_4E246C;

loc_4E246A:
	xor_(&ts->ecx, ts->ecx);

loc_4E246C:
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x920, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x83AAB4);
	game::sub_502A40(ts, mv);

loc_4E247E:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_4E2489;
    }
	lea(mv, &ts->eax, x86::mem(ts->edx - 0x10, 4));
	goto loc_4E248B;

loc_4E2489:
	xor_(&ts->eax, ts->eax);

loc_4E248B:
	test(&ts->eflags, ts->edx, ts->edx);
	mov(mv, &ts->ebx, x86::mem(ts->edi + 0x5C, 4));
	mov(mv, x86::mem(ts->edi + 0x58, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(0x83AAB8, 4));
	mov(mv, x86::mem(ts->ebp + 0x8, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4E24A4;
    }
	lea(mv, &ts->eax, x86::mem(ts->edx - 0x10, 4));
	goto loc_4E24A6;

loc_4E24A4:
	xor_(&ts->eax, ts->eax);

loc_4E24A6:
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4E24AF;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esi - 0x10, 4));
	goto loc_4E24B1;

loc_4E24AF:
	xor_(&ts->ecx, ts->ecx);

loc_4E24B1:
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4E24D2;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x920, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4E24CF;
    }
	inc(mv, x86::mem(ts->edi + 0x64, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x10, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E24A4;
    }
	add(&ts->eax, 0xFFFFFFF0);
	goto loc_4E24A6;

loc_4E24CF:
	mov(mv, x86::mem(ts->edi + 0x58, 4), ts->eax);

loc_4E24D2:
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_4E24DB;
    }
	lea(mv, &ts->ecx, x86::mem(ts->edx - 0x10, 4));
	goto loc_4E24DD;

loc_4E24DB:
	xor_(&ts->ecx, ts->ecx);

loc_4E24DD:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x58, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4E24EB;
    }
	mov(mv, x86::mem(ts->edi + 0x64, 4), 0x1);

loc_4E24EB:
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x920, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x83AAB4);
	game::sub_502A40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x58, 4));
	game::sub_511E00(ts, mv);
	push(mv, &ts->esp, 0x78FCD8);
	mov(&ts->edi, ts->eax);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E2529;
    }
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->esi, ts->eax);
	goto loc_4E2552;

loc_4E2529:
	push(mv, &ts->esp, 0x7906DC);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E2550;
    }
	push(mv, &ts->esp, 0x7906DC);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E2550;
    }
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x4C, 4));
	goto loc_4E2552;

loc_4E2550:
	xor_(&ts->esi, ts->esi);

loc_4E2552:
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x8371B0);
	game::sub_413440(ts, mv);
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(0x83623C, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4E2579;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x8371B0);
	mov(&ts->ecx, ts->esi);
	game::sub_4D8C70(ts, mv);

loc_4E2579:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_775BC0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7975C8);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4E22E0:
	mov(&ts->eax, 0x7E1114);
	goto ___CxxFrameHandler;
}

void sub_4E2590(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77389B);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x8FC);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	cmp(&ts->eflags, ts->ecx, 0x9120409E);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4E2699;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4E25D5;
    }
	add(&ts->ecx, 0xFFFFFFF0);
	goto loc_4E25D7;

loc_4E25D5:
	xor_(&ts->ecx, ts->ecx);

loc_4E25D7:
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4E2756;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F568);
	push(mv, &ts->esp, 0x790E98);
	push(mv, &ts->esp, ts->eax);
	game::sub_5426C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x14, 4));
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E2606;
    }
	add(&ts->eax, 0xFFFFFFF0);
	goto loc_4E2608;

loc_4E2606:
	xor_(&ts->eax, ts->eax);

loc_4E2608:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x5C, 4));
	mov(mv, x86::mem(ts->esi + 0x58, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x920, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x83AAB4);
	game::sub_502A40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x64, 4));
	dec(&ts->ecx);
	push(mv, &ts->esp, 0x78FCD8);
	mov(mv, x86::mem(ts->esi + 0x64, 4), ts->ecx);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E2654;
    }
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->eax + 0x148, 4), 0x1);
	goto loc_4E2756;

loc_4E2654:
	push(mv, &ts->esp, 0x7906DC);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E2688;
    }
	push(mv, &ts->esp, 0x7906DC);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E2688;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4C, 4));
	mov(mv, x86::mem(ts->eax + 0x148, 4), 0x1);
	goto loc_4E2756;

loc_4E2688:
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->eax + 0x148, 4), 0x1);
	goto loc_4E2756;

loc_4E2699:
	cmp(&ts->eflags, ts->ecx, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_4E2756;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4E26B1;
    }
	add(&ts->ecx, 0xFFFFFFF0);
	goto loc_4E26B3;

loc_4E26B1:
	xor_(&ts->ecx, ts->ecx);

loc_4E26B3:
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4E2756;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F568);
	push(mv, &ts->esp, 0x790E84);
	push(mv, &ts->esp, ts->eax);
	game::sub_5426C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x10, 4));
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E26E2;
    }
	add(&ts->eax, 0xFFFFFFF0);
	goto loc_4E26E4;

loc_4E26E2:
	xor_(&ts->eax, ts->eax);

loc_4E26E4:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x5C, 4));
	mov(mv, x86::mem(ts->esi + 0x58, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x920, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x83AAB4);
	game::sub_502A40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x64, 4));
	inc(&ts->ecx);
	push(mv, &ts->esp, 0x78FCD8);
	mov(mv, x86::mem(ts->esi + 0x64, 4), ts->ecx);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E2723;
    }
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	goto loc_4E274C;

loc_4E2723:
	push(mv, &ts->esp, 0x7906DC);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E274A;
    }
	push(mv, &ts->esp, 0x7906DC);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E274A;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4C, 4));
	goto loc_4E274C;

loc_4E274A:
	xor_(&ts->eax, ts->eax);

loc_4E274C:
	mov(mv, x86::mem(ts->eax + 0x148, 4), 0x0);

loc_4E2756:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4E28E8;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x918, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x844, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_4E2804;
    }
	mov(&ts->edx, ts->ecx);
	mov(mv, &ts->edi, x86::mem(ts->edx + 0x840, 4));
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E279D;
    }
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	goto loc_4E27C2;

loc_4E279D:
	push(mv, &ts->esp, 0x7906DC);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E27CE;
    }
	push(mv, &ts->esp, 0x7906DC);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E27CE;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4C, 4));

loc_4E27C2:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E27CE;
    }
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->eax);
	game::sub_4A5EE0(ts, mv);

loc_4E27CE:
	cmp(mv, &ts->eflags, x86::mem(0x7F444C, 4), 0x10);
	if (!ts->eflags.zero) {
        goto loc_4E27F3;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x920, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x83AD90);
	game::sub_503510(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_497F20(ts, mv);

loc_4E27F3:
	mov(mv, &ts->ecx, x86::mem(0x8651AC, 4));
	mov(mv, x86::mem(ts->esi + 0xC4, 4), ts->ecx);
	goto loc_4E28E1;

loc_4E2804:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	game::sub_40C910(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x918, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x840, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, x86::mem(ts->esp + 0x91C, 4), 0x0);
	game::sub_610270(ts, mv);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	game::sub_61C280(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	game::sub_637190(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	game::sub_6371E0(ts, mv);
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E2876;
    }
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->edi, ts->eax);
	goto loc_4E289F;

loc_4E2876:
	push(mv, &ts->esp, 0x7906DC);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E289D;
    }
	push(mv, &ts->esp, 0x7906DC);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E289D;
    }
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x4C, 4));
	goto loc_4E289F;

loc_4E289D:
	xor_(&ts->edi, ts->edi);

loc_4E289F:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x8371B0);
	game::sub_413440(ts, mv);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(0x83623C, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4E28CA;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x8371B0);
	mov(&ts->ecx, ts->edi);
	game::sub_4D8C70(ts, mv);

loc_4E28CA:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x394, 4));
	mov(mv, x86::mem(ts->esp + 0x90C, 4), 0xFFFFFFFF);
	game::nullsub_1(ts, mv);

loc_4E28E1:
	mov(&ts->ecx, ts->esi);
	game::sub_4B2310(ts, mv);

loc_4E28E8:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x904, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_773890:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x900, 4));
	goto sub_401800;

SEH_4D9800:
	mov(&ts->eax, 0x7DFA94);
	goto ___CxxFrameHandler;
}

void sub_4E2900(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x775A1B);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	lea(mv, &ts->esi, x86::mem(ts->edi + 0x4, 4));
	mov(mv, x86::mem(ts->edi, 4), 0x79771C);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	mov(mv, x86::mem(ts->esi, 4), ts->esi);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->esi);
	mov(mv, &ts->eax, x86::mem(0x7F445C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x0);
	mov(&ts->ebx, ts->eax);
	game::sub_4B2960(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4E2976;
    }
	push(mv, &ts->esp, 0x14);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E2967;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0xC, 4), 0x4B2A80);
	mov(mv, x86::mem(ts->eax + 0x10, 4), 0x498290);
	goto loc_4E2969;

loc_4E2967:
	xor_(&ts->eax, ts->eax);

loc_4E2969:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);

loc_4E2976:
	mov(mv, &ts->eax, x86::mem(0x7F4460, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	mov(&ts->ebx, ts->eax);
	game::sub_4B2960(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4E29B9;
    }
	push(mv, &ts->esp, 0x14);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E29AA;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0xC, 4), 0x498220);
	mov(mv, x86::mem(ts->eax + 0x10, 4), 0x4B2AF0);
	goto loc_4E29AC;

loc_4E29AA:
	xor_(&ts->eax, ts->eax);

loc_4E29AC:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);

loc_4E29B9:
	mov(mv, &ts->eax, x86::mem(0x7F4464, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	mov(&ts->ebx, ts->eax);
	game::sub_4B2960(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4E29FC;
    }
	push(mv, &ts->esp, 0x14);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E29ED;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0xC, 4), 0x498240);
	mov(mv, x86::mem(ts->eax + 0x10, 4), 0x4982B0);
	goto loc_4E29EF;

loc_4E29ED:
	xor_(&ts->eax, ts->eax);

loc_4E29EF:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);

loc_4E29FC:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	mov(mv, x86::mem(ts->edi + 0x10, 4), ts->eax);
	mov(mv, x86::mem(ts->edi + 0x14, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(&ts->eax, ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x8);

loc_775A10:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x4);
	goto sub_4DEF30;

SEH_4E0850:
	mov(&ts->eax, 0x7E0F88);
	goto ___CxxFrameHandler;
}

void sub_4E2A20(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->esi, x86::mem(ts->ecx + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), 0x79771C);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4E2A49;
    }

loc_4E2A30:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	game::j__free(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_4E2A30;
    }

loc_4E2A49:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4E2A50(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776178);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	game::sub_552330(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	mov(mv, x86::mem(ts->esi, 4), 0x797734);
	game::sub_4B2D60(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_50DA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	cmp(&ts->eflags, ts->eax, 0x8);
	if (ts->eflags.zero) {
        goto loc_4E2B6C;
    }
	cmp(&ts->eflags, ts->eax, 0x200);
	if (ts->eflags.zero) {
        goto loc_4E2B6C;
    }
	cmp(&ts->eflags, ts->eax, 0x4);
	if (!ts->eflags.zero) {
        goto loc_4E2B10;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FC44);
	push(mv, &ts->esp, 0x2BAC0CEE);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x4FD28546);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x1C);
	push(mv, &ts->esp, 0xEF9F780D);
	push(mv, &ts->esp, 0x42ADB44C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_4E2B10:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x5416105);
	push(mv, &ts->esp, 0x42ADB44C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FC44);
	push(mv, &ts->esp, 0x2BAC0CEE);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x4FD28546);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x24);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_4E2B6C:
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0x36BEC45F);
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x200);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	if (!ts->eflags.zero) {
        goto loc_4E2B89;
    }
	push(mv, &ts->esp, 0x47B276EF);
	goto loc_4E2B8E;

loc_4E2B89:
	push(mv, &ts->esp, 0xB6068C57);

loc_4E2B8E:
	push(mv, &ts->esp, 0x42ADB44C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, 0x8);
	if (!ts->eflags.zero) {
        goto loc_4E2BC7;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FFD0);
	push(mv, &ts->esp, 0x797720);
	push(mv, &ts->esp, ts->eax);
	game::sub_5426C0(ts, mv);
	add(&ts->esp, 0x10);

loc_4E2BC7:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FFD0);
	push(mv, &ts->esp, 0x2BAC0CEE);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x4FD28546);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xEB406FEC);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	add(&ts->esp, 0x28);
	push(mv, &ts->esp, ts->edx);
	or_(&ts->eax, 0x4000);
	push(mv, &ts->esp, ts->eax);
	game::sub_54E6E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_776170:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto ??1strstreambuf@std@@UAE@XZ_5;

SEH_4EB7A0:
	mov(&ts->eax, 0x7E0EB8);
	goto ___CxxFrameHandler;
}

void sub_4E2C40(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4E2C60(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4E2C58;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4E2C58:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4E2C60(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x797734);
	goto ??1strstreambuf@std@@UAE@XZ_5;
}

void sub_4E2C70(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	cmp(&ts->eflags, ts->eax, 0x8);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4E2D31;
    }
	cmp(&ts->eflags, ts->eax, 0x200);
	if (ts->eflags.zero) {
        goto loc_4E2D31;
    }
	mov(mv, &ts->eax, x86::mem(0x83AAB4, 4));
	cmp(&ts->eflags, ts->eax, 0xA);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4E2C9A;
    }
	jmp(x86::mem(0x4E2D68, 4));

loc_4E2CA1:
	mov(&ts->ecx, ts->esi);
	game::sub_4CCF60(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_539650(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4E2CB3:
	mov(&ts->ecx, ts->esi);
	game::sub_4CD2D0(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_539650(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4E2CC5:
	mov(&ts->ecx, ts->esi);
	game::sub_4CD530(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_539650(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4E2CD7:
	mov(&ts->ecx, ts->esi);
	game::sub_4CD7A0(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_539650(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4E2CE9:
	mov(&ts->ecx, ts->esi);
	game::sub_4B47B0(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_539650(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4E2CFB:
	mov(&ts->ecx, ts->esi);
	game::sub_4CDB40(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_539650(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4E2D0D:
	mov(&ts->ecx, ts->esi);
	game::sub_4B47B0(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_539650(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4E2D1F:
	mov(&ts->ecx, ts->esi);
	game::sub_4B4A10(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_539650(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4E2D31:
	mov(mv, &ts->eax, x86::mem(0x850088, 4));
	cmp(&ts->eflags, ts->eax, 0xA);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4E2C9A;
    }
	jmp(x86::mem(0x4E2D94, 4));

loc_4E2D42:
	mov(&ts->ecx, ts->esi);
	game::sub_4B47B0(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_539650(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4E2D54:
	mov(&ts->ecx, ts->esi);
	game::sub_4CDA20(ts, mv);

def_4E2C9A:
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_539650(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4E2DC0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77389B);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x900);
	cmp(mv, &ts->eflags, x86::mem(0x850088, 4), 0x8);
	push(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4E2F13;
    }
	mov(mv, &ts->al, x86::mem(0x850098, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E2F13;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x10);
	mov(&ts->ecx, 0x83AD90);
	game::sub_5162D0(ts, mv);
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4E2E31;
    }

loc_4E2E10:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x434, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(0x850088, 4));
	if (ts->eflags.zero) {
        goto loc_4E2E31;
    }
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x10);
	mov(&ts->ecx, 0x83AD90);
	game::sub_5162D0(ts, mv);
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_4E2E10;
    }

loc_4E2E31:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	game::sub_40C910(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x918, 4), 0x0);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x83AAB4);
	game::sub_502A40(ts, mv);
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E2E87;
    }
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->esi, ts->eax);
	goto loc_4E2EB0;

loc_4E2E87:
	push(mv, &ts->esp, 0x7906DC);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E2EAE;
    }
	push(mv, &ts->esp, 0x7906DC);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E2EAE;
    }
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x4C, 4));
	goto loc_4E2EB0;

loc_4E2EAE:
	xor_(&ts->esi, ts->esi);

loc_4E2EB0:
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x8371B0);
	game::sub_413440(ts, mv);
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(0x83623C, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4E2EDB;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x8371B0);
	mov(&ts->ecx, ts->esi);
	game::sub_4D8C70(ts, mv);

loc_4E2EDB:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_58B9A0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_587630(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	game::sub_58B9A0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_58E080(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x394, 4));
	mov(mv, x86::mem(ts->esp + 0x90C, 4), 0xFFFFFFFF);
	game::nullsub_1(ts, mv);

loc_4E2F13:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x904, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_773890:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x900, 4));
	goto sub_401800;

SEH_4D9800:
	mov(&ts->eax, 0x7DFA94);
	goto ___CxxFrameHandler;
}

void sub_4E2F30(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x775C0C);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->esi);
	game::sub_551DE0(ts, mv);
	lea(mv, &ts->ebp, x86::mem(ts->esi + 0x4C, 4));
	xor_(&ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esi, 4), 0x7974F0);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	mov(mv, x86::mem(ts->ebp, 4), ts->ebp);
	mov(mv, x86::mem(ts->ebp + 0x4, 4), ts->ebp);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79775C);
	push(mv, &ts->esp, 0x797750);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x5C, 4));
	mov(mv, x86::mem(ts->esp + 0x34, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x58, 1), ts->bl);
	game::sub_5435D0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x796484);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xC0, 4));
	mov(mv, x86::mem(ts->esp + 0x30, 1), 0x2);
	game::sub_542AC0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x90FE80F3);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A60(ts, mv);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x118, 4));
	mov(mv, x86::mem(ts->edi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->edi, 4), 0x78F8C8);
	mov(mv, x86::mem(ts->edi + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x28, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x2C, 1), ts->bl);
	mov(mv, x86::mem(0x836344, 4), ts->edi);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA00(ts, mv);
	mov(mv, x86::mem(ts->edi + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x14, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x18, 1), ts->bl);
	mov(mv, x86::mem(ts->edi + 0x1C, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x20, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x24, 4), ts->ebx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x90FE80F3);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x30, 1), 0x3);
	game::sub_537A60(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x148, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x14C, 4), ts->ebx);
	add(&ts->esp, 0x14);
	mov(&ts->ecx, 0x83AAB4);
	mov(mv, x86::mem(ts->esi + 0x150, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x154, 4), ts->ebx);
	game::sub_502910(ts, mv);
	mov(mv, x86::mem(ts->eax + 0x8, 1), ts->bl);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0xBC, 4), 0x42200000);
	game::sub_4CDED0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	cmp(&ts->eflags, ts->eax, 0x8);
	if (ts->eflags.zero) {
        goto loc_4E3103;
    }
	cmp(&ts->eflags, ts->eax, 0x200);
	if (ts->eflags.zero) {
        goto loc_4E3103;
    }
	cmp(&ts->eflags, ts->eax, 0x4);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	if (!ts->eflags.zero) {
        goto loc_4E30B9;
    }
	push(mv, &ts->esp, 0x1BF733BD);
	push(mv, &ts->esp, 0x42ADB44C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FC44);
	push(mv, &ts->esp, 0x2BAC0CEE);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x4FD28546);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x24);
	goto loc_4E31C9;

loc_4E30B9:
	push(mv, &ts->esp, 0xE5D63BB5);
	push(mv, &ts->esp, 0x42ADB44C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FC44);
	push(mv, &ts->esp, 0x2BAC0CEE);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x4FD28546);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x24);
	goto loc_4E31C9;

loc_4E3103:
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0x27329D35);
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x200);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	if (!ts->eflags.zero) {
        goto loc_4E3120;
    }
	push(mv, &ts->esp, 0x766A0EDF);
	goto loc_4E3125;

loc_4E3120:
	push(mv, &ts->esp, 0x3BC6066D);

loc_4E3125:
	push(mv, &ts->esp, 0x42ADB44C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, 0x8);
	if (!ts->eflags.zero) {
        goto loc_4E315E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FFD0);
	push(mv, &ts->esp, 0x797720);
	push(mv, &ts->esp, ts->ecx);
	game::sub_5426C0(ts, mv);
	add(&ts->esp, 0x10);

loc_4E315E:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FFD0);
	push(mv, &ts->esp, 0x2BAC0CEE);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x4FD28546);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xEB406FEC);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x78F8D0);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x30);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E31C9;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	or_(&ts->ecx, 0x4000);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	game::sub_54E6E0(ts, mv);

loc_4E31C9:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->ebp, 4));
	if (!ts->eflags.zero) {
        goto loc_4E31ED;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x444969FD);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x158, 1), ts->bl);
	goto loc_4E320C;

loc_4E31ED:
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esi + 0x50, 4));
	if (!ts->eflags.zero) {
        goto loc_4E320F;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x444969FE);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x159, 1), ts->bl);

loc_4E320C:
	add(&ts->esp, 0xC);

loc_4E320F:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x36227EE9);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x15C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4E3246;
    }
	mov(mv, x86::mem(ts->edi + 0x8, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x2C, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4E323C;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x14, 4));
	goto loc_4E3243;

loc_4E323C:
	movsx(mv, &ts->eax, x86::mem(ts->ecx + 0x8A, 2));

loc_4E3243:
	mov(mv, x86::mem(ts->edi + 0xC, 4), ts->eax);

loc_4E3246:
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x14C, 4), ts->ebx);
	game::sub_4CE170(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_775BE0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

loc_775BE8:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x4C);
	goto sub_4DEF30;

loc_775BF3:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x5C);
	goto sub_52EA90;

loc_775BFE:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x118);
	goto sub_4985A0;

SEH_4E2F30:
	mov(&ts->eax, 0x7E1150);
	goto ___CxxFrameHandler;
}

void sub_4E3270(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	cmp(&ts->eflags, ts->ecx, 0xFFFFFFFF);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	if (!ts->eflags.zero) {
        goto loc_4E3289;
    }
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esi + 0x4C, 4));
	if (ts->eflags.zero) {
        goto loc_4E3295;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	goto loc_4E3295;

loc_4E3289:
	cmp(&ts->eflags, ts->ecx, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4E3295;
    }
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esi + 0x50, 4));
	if (ts->eflags.zero) {
        goto loc_4E3295;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));

loc_4E3295:
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esi + 0x54, 4));
	if (ts->eflags.zero) {
        goto loc_4E32EE;
    }
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x2C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4E32A9;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x14, 4));
	goto loc_4E32B0;

loc_4E32A9:
	movsx(mv, &ts->ecx, x86::mem(ts->ecx + 0x8A, 2));

loc_4E32B0:
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_498740(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x2C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4E32CB;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x14, 4));
	goto loc_4E32D2;

loc_4E32CB:
	movsx(mv, &ts->eax, x86::mem(ts->ecx + 0x8A, 2));

loc_4E32D2:
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x5C, 4));
	game::sub_52EE40(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_4CE170(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8651AC, 4));
	mov(mv, x86::mem(ts->esi + 0x14C, 4), ts->ecx);

loc_4E32EE:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4E3300(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776418);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x1C, 4));
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	game::sub_551DE0(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x78F8E4);
	mov(mv, &ts->eax, x86::mem(0x8651AC, 4));
	mov(mv, x86::mem(0x83A9C8, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	mov(mv, x86::mem(ts->esi + 0x20C, 4), ts->ecx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x0);
	game::sub_4B4CC0(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_4CE500(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x7F44FC, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(0x838528, 1), 0x0);
	game::sub_51CE80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_776410:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

SEH_4E3300:
	mov(&ts->eax, 0x7DEE70);
	goto ___CxxFrameHandler;
}

void sub_4E3390(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x5C, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E33DC;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x208, 4));
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x5C, 1), 0x0);
	game::sub_43DC00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x208, 4));
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x60, 4));
	add(&ts->ecx, 0x64);
	game::sub_532670(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x208, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_43DBB0(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->eax);

loc_4E33DC:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x208, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43DBB0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->bl, x86::mem(ts->esp + 0x10, 1));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4E345A;
    }
	test(&ts->eflags, ts->bl, ts->bl);
	if (ts->eflags.zero) {
        goto loc_4E345A;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	mov(&ts->eax, 0xFE);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4E3426;
    }
	goto loc_4E3410;

loc_4E3410:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x208, 4));
	mov(mv, &ts->dl, x86::mem(ts->ecx + (ts->eax) - 0x1, 1));
	add(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->ecx, 1), ts->dl);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	dec(&ts->eax);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_4E3410;
    }

loc_4E3426:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x208, 4));
	mov(mv, x86::mem(ts->eax + (ts->ecx), 1), ts->bl);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	inc(&ts->eax);
	mov(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4E3445;
    }
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->eax);

loc_4E3445:
	mov(&ts->ecx, ts->esi);
	game::sub_4B5100(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x18);
	push(mv, &ts->esp, ts->edx);
	game::sub_51DE60(ts, mv);
	add(&ts->esp, 0x8);

loc_4E345A:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x5D, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E348D;
    }
	cmp(&ts->eflags, ts->bl, 0x20);
	if (ts->eflags.zero) {
        goto loc_4E348D;
    }
	xor_(&ts->al, 0x1);
	mov(mv, x86::mem(ts->esi + 0x5D, 1), ts->al);
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x218, 4), 0x3);
	if (!ts->eflags.zero) {
        goto loc_4E3478;
    }
	mov(mv, x86::mem(ts->esi + 0x5D, 1), 0x0);

loc_4E3478:
	mov(&ts->ecx, ts->esi);
	game::sub_4CE500(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x18);
	push(mv, &ts->esp, ts->eax);
	game::sub_51DE60(ts, mv);
	add(&ts->esp, 0x8);

loc_4E348D:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_4E34A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x775C34);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x5C);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4E34EB;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4CE710(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4E34EB:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_775C20:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x797768);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4E34A0:
	mov(&ts->eax, 0x7E1174);
	goto ___CxxFrameHandler;
}

void sub_4E3500(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x775C54);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xEC);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4E354E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4CE770(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4E354E:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_775C40:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79777C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4E3500:
	mov(&ts->eax, 0x7E1198);
	goto ___CxxFrameHandler;
}

void sub_4E3560(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776178);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	game::sub_552330(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x797794);
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x8);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	if (!ts->eflags.zero) {
        goto loc_4E3607;
    }
	push(mv, &ts->esp, 0xEB406FEC);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0xC5AC0F31);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FFD0);
	push(mv, &ts->esp, 0x2BAC0CEE);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x1C);
	push(mv, &ts->esp, 0xB0FCF98E);
	push(mv, &ts->esp, 0xC90DC4AB);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FFD0);
	push(mv, &ts->esp, 0x797720);
	push(mv, &ts->esp, ts->edx);
	game::sub_5426C0(ts, mv);
	add(&ts->esp, 0x18);
	goto loc_4E3637;

loc_4E3607:
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x10CBA23);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x795E14);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x1C);
	pop(mv, &ts->esp, ts->edi);

loc_4E3637:
	push(mv, &ts->esp, 0x0);
	game::sub_49C5F0(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->ecx, ts->esi);
	game::sub_4B6230(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x8);
	if (!ts->eflags.zero) {
        goto loc_4E366A;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	or_(&ts->ecx, 0x4000);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	game::sub_54E6E0(ts, mv);

loc_4E366A:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_776170:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto ??1strstreambuf@std@@UAE@XZ_5;

SEH_4EB7A0:
	mov(&ts->eax, 0x7E0EB8);
	goto ___CxxFrameHandler;
}

void sub_4E3680(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4E36A0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4E3698;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4E3698:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4E36A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x797794);
	goto ??1strstreambuf@std@@UAE@XZ_5;
}

void sub_4E36B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x775C74);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x14C);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4E36FE;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4CF660(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4E36FE:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_775C60:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7977B0);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4E36B0:
	mov(&ts->eax, 0x7E11BC);
	goto ___CxxFrameHandler;
}

void sub_4E3710(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x775C94);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x164);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4E375E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4CF750(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4E375E:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_775C80:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7977CC);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4E3710:
	mov(&ts->eax, 0x7E11E0);
	goto ___CxxFrameHandler;
}

void sub_4E3770(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x775CB4);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x154);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4E37BE;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4CFBA0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4E37BE:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_775CA0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7977DC);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4E3770:
	mov(&ts->eax, 0x7E1204);
	goto ___CxxFrameHandler;
}

void sub_4E37D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77389B);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x8F8);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0xD, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4E3947;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x4, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, &ts->ebx, x86::mem(0x8500D0, 4));
	if (!ts->eflags.zero) {
        goto loc_4E386C;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	cmp(&ts->eflags, ts->ebx, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4E386C;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_4CFEE0(ts, mv);
	mov(&ts->edi, ts->eax);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4E386C;
    }
	cmp(&ts->eflags, ts->edi, 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_4E384A;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_49D870(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x4, 1), 0x1);
	mov(&ts->eax, ts->edi);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x904, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_4E384A:
	cmp(&ts->eflags, ts->edi, 0xFFFFFFFE);
	if (!ts->eflags.zero) {
        goto loc_4E3853;
    }
	mov(mv, x86::mem(ts->esi + 0x4, 1), 0x1);

loc_4E3853:
	mov(&ts->eax, ts->edi);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x904, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_4E386C:
	mov(&ts->eax, ts->ebx);
	sub(&ts->eax, 0xE);
	if (ts->eflags.zero) {
        goto loc_4E3886;
    }
	sub(&ts->eax, 0x2);
	if (!ts->eflags.zero) {
        goto loc_4E38F7;
    }
	push(mv, &ts->esp, 0x11);
	mov(&ts->ecx, 0x850080);
	game::sub_5031B0(ts, mv);
	goto loc_4E38F7;

loc_4E3886:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	game::sub_40C910(ts, mv);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, 0x83A9D0);
	mov(mv, x86::mem(ts->esp + 0x918, 4), 0x0);
	game::sub_515D00(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_58B9A0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_587630(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x4D0350);
	game::sub_58B9A0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_58E080(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4E38E0;
    }
	push(mv, &ts->esp, 0xF);
	mov(&ts->ecx, 0x850080);
	game::sub_5031B0(ts, mv);

loc_4E38E0:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x394, 4));
	mov(mv, x86::mem(ts->esp + 0x90C, 4), 0xFFFFFFFF);
	game::nullsub_1(ts, mv);

loc_4E38F7:
	cmp(mv, &ts->eflags, ts->ebx, x86::mem(ts->ebp + 0x8, 4));
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4E3947;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0xF, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E3916;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x10BB17EC);
	game::sub_55DDE0(ts, mv);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->esi + 0xF, 1), 0x0);

loc_4E3916:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E392B;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi, 4), 0x0);

loc_4E392B:
	mov(&ts->eax, 0x1);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x904, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_4E3947:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x904, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_773890:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x900, 4));
	goto sub_401800;

SEH_4D9800:
	mov(&ts->eax, 0x7DFA94);
	goto ___CxxFrameHandler;
}

void sub_4E3960(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x775CCE);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	lea(mv, &ts->esi, x86::mem(ts->edi + 0x138, 4));
	mov(mv, x86::mem(ts->edi, 4), 0x7977F0);
	mov(mv, x86::mem(ts->edi + 0x4, 4), 0x1);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edi);
	mov(mv, x86::mem(ts->esi, 4), ts->esi);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->esi);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x2C, 4));
	xor_(&ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x148, 4), ts->ecx);
	mov(mv, x86::mem(ts->edi + 0x144, 4), ts->eax);
	mov(mv, x86::mem(ts->edi + 0x150, 1), ts->bl);
	mov(mv, x86::mem(ts->edi + 0x14C, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x151, 1), ts->bl);
	mov(mv, &ts->eax, x86::mem(0x7F4490, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ebx);
	mov(&ts->ebp, ts->eax);
	game::sub_4B9650(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4E3A07;
    }
	push(mv, &ts->esp, 0x14);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4E39F8;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebp);
	mov(mv, x86::mem(ts->eax + 0xC, 4), 0x49DE00);
	mov(mv, x86::mem(ts->eax + 0x10, 4), 0x49DDE0);
	goto loc_4E39FA;

loc_4E39F8:
	xor_(&ts->eax, ts->eax);

loc_4E39FA:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);

loc_4E3A07:
	mov(mv, &ts->eax, x86::mem(0x7F4498, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	mov(&ts->ebp, ts->eax);
	game::sub_4B9650(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4E3A4A;
    }
	push(mv, &ts->esp, 0x14);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4E3A3B;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebp);
	mov(mv, x86::mem(ts->eax + 0xC, 4), 0x49DD30);
	mov(mv, x86::mem(ts->eax + 0x10, 4), 0x49DDF0);
	goto loc_4E3A3D;

loc_4E3A3B:
	xor_(&ts->eax, ts->eax);

loc_4E3A3D:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);

loc_4E3A4A:
	mov(mv, &ts->eax, x86::mem(0x7F449C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	mov(&ts->ebp, ts->eax);
	game::sub_4B9650(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4E3A8D;
    }
	push(mv, &ts->esp, 0x14);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4E3A7E;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebp);
	mov(mv, x86::mem(ts->eax + 0xC, 4), 0x49DD70);
	mov(mv, x86::mem(ts->eax + 0x10, 4), 0x49DE00);
	goto loc_4E3A80;

loc_4E3A7E:
	xor_(&ts->eax, ts->eax);

loc_4E3A80:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);

loc_4E3A8D:
	mov(mv, &ts->eax, x86::mem(0x7F44A0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	mov(&ts->ebp, ts->eax);
	game::sub_4B9650(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4E3AD0;
    }
	push(mv, &ts->esp, 0x14);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4E3AC1;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebp);
	mov(mv, x86::mem(ts->eax + 0xC, 4), 0x49DDA0);
	mov(mv, x86::mem(ts->eax + 0x10, 4), 0x49DE00);
	goto loc_4E3AC3;

loc_4E3AC1:
	xor_(&ts->eax, ts->eax);

loc_4E3AC3:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);

loc_4E3AD0:
	mov(mv, &ts->eax, x86::mem(0x7F44A4, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	mov(&ts->ebp, ts->eax);
	game::sub_4B9650(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4E3B13;
    }
	push(mv, &ts->esp, 0x14);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4E3B04;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebp);
	mov(mv, x86::mem(ts->eax + 0xC, 4), 0x49DDB0);
	mov(mv, x86::mem(ts->eax + 0x10, 4), 0x49DE00);
	goto loc_4E3B06;

loc_4E3B04:
	xor_(&ts->eax, ts->eax);

loc_4E3B06:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);

loc_4E3B13:
	mov(mv, &ts->eax, x86::mem(0x7F44A8, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	mov(&ts->ebp, ts->eax);
	game::sub_4B9650(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4E3B56;
    }
	push(mv, &ts->esp, 0x14);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4E3B47;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->ebp);
	mov(mv, x86::mem(ts->eax + 0xC, 4), 0x49DDC0);
	mov(mv, x86::mem(ts->eax + 0x10, 4), 0x49DE00);
	goto loc_4E3B49;

loc_4E3B47:
	xor_(&ts->eax, ts->eax);

loc_4E3B49:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);

loc_4E3B56:
	mov(mv, &ts->edx, x86::mem(0x7F4490, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_4B9650(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	mov(mv, x86::mem(ts->edi + 0x140, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537980(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	add(&ts->esp, 0xC);
	mov(&ts->eax, ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0xC);

loc_775CC0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x138);
	goto sub_4DEF30;

SEH_4E3960:
	mov(&ts->eax, 0x7E1228);
	goto ___CxxFrameHandler;
}

void sub_4E3BA0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->esi, x86::mem(ts->ecx + 0x138, 4));
	mov(mv, x86::mem(ts->ecx, 4), 0x7977F0);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4E3BCC;
    }

loc_4E3BB3:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	game::j__free(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_4E3BB3;
    }

loc_4E3BCC:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4E3BD0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x775CF4);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x190);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4E3C1E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4D0500(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4E3C1E:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_775CE0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7977F4);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4E3BD0:
	mov(&ts->eax, 0x7E124C);
	goto ___CxxFrameHandler;
}

void sub_4E3C30(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::stdiobuf___stdiobuf_void_(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4E3C48;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4E3C48:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4E3C50(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x775D14);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x170);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4E3C9E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4D0690(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4E3C9E:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_775D00:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79780C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4E3C50:
	mov(&ts->eax, 0x7E1270);
	goto ___CxxFrameHandler;
}

void sub_4E3CB0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::stdiobuf___stdiobuf_void_(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4E3CC8;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4E3CC8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4E3CD0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x775D34);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x170);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4E3D1E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4D0860(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4E3D1E:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_775D20:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x797818);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4E3CD0:
	mov(&ts->eax, 0x7E1294);
	goto ___CxxFrameHandler;
}

void sub_4E3D30(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::stdiobuf___stdiobuf_void_(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4E3D48;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4E3D48:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4E3D50(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x775D54);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x1A4);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4E3D9E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4D09A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4E3D9E:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_775D40:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x797828);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4E3D50:
	mov(&ts->eax, 0x7E12B8);
	goto ___CxxFrameHandler;
}

void sub_4E3DB0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4D0FF0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4E3DC8;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4E3DC8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4E3DD0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x775D74);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x150);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4E3E1E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4D1080(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4E3E1E:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_775D60:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79783C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4E3DD0:
	mov(&ts->eax, 0x7E12DC);
	goto ___CxxFrameHandler;
}

void sub_4E3E30(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x775D94);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x1A0);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4E3E7E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4D1100(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4E3E7E:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_775D80:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79784C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4E3E30:
	mov(&ts->eax, 0x7E1300);
	goto ___CxxFrameHandler;
}

void sub_4E3E90(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4D1250(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4E3EA8;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4E3EA8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4E3EB0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4D12C0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4E3EC8;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4E3EC8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4E3ED0(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x2C);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebp, ts->ecx);
	mov(&ts->edi, 0x1);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0xF);

loc_4E3EE6:
	push(mv, &ts->esp, 0x34);
	game::j__malloc(ts, mv);
	xor_(&ts->ebx, ts->ebx);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4E3F2B;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->eax, 4), 0x79B9D4);
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x28, 1), 0x1);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), 0x78F228);
	mov(mv, x86::mem(ts->eax + 0x30, 4), 0x78F21C);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	goto loc_4E3F2F;

loc_4E3F2B:
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);

loc_4E3F2F:
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x7978A4);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, 0x24);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_537A10(ts, mv);
	push(mv, &ts->esp, 0x10);
	mov(&ts->esi, ts->eax);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x20);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4E3F73;
    }
	mov(mv, x86::mem(ts->eax, 4), 0x790C2C);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->esi);
	add(&ts->eax, 0x4);
	goto loc_4E3F75;

loc_4E3F73:
	xor_(&ts->eax, ts->eax);

loc_4E3F75:
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	push(mv, &ts->esp, ts->edi);
	add(&ts->esi, 0xC);
	push(mv, &ts->esp, 0x797894);
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	push(mv, &ts->esp, 0x24);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x4, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537A10(ts, mv);
	push(mv, &ts->esp, 0x10);
	mov(&ts->ebx, ts->eax);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x20);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E3FCD;
    }
	mov(mv, x86::mem(ts->eax, 4), 0x790C2C);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ebx);
	add(&ts->eax, 0x4);
	goto loc_4E3FCF;

loc_4E3FCD:
	xor_(&ts->eax, ts->eax);

loc_4E3FCF:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	push(mv, &ts->esp, 0x797880);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, 0x24);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x4, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537A10(ts, mv);
	push(mv, &ts->esp, 0x10);
	mov(&ts->ebx, ts->eax);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x20);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E4020;
    }
	mov(mv, x86::mem(ts->eax, 4), 0x790C2C);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ebx);
	add(&ts->eax, 0x4);
	goto loc_4E4022;

loc_4E4020:
	xor_(&ts->eax, ts->eax);

loc_4E4022:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	push(mv, &ts->esp, 0x797870);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, 0x24);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537A10(ts, mv);
	push(mv, &ts->esp, 0x10);
	mov(&ts->ebx, ts->eax);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x20);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E4073;
    }
	mov(mv, x86::mem(ts->eax, 4), 0x790C2C);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ebx);
	add(&ts->eax, 0x4);
	goto loc_4E4075;

loc_4E4073:
	xor_(&ts->eax, ts->eax);

loc_4E4075:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x79785C);
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	push(mv, &ts->esp, 0x24);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->ebp + 0x4, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537A10(ts, mv);
	push(mv, &ts->esp, 0x10);
	mov(&ts->ebx, ts->eax);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x20);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E40C6;
    }
	mov(mv, x86::mem(ts->eax, 4), 0x790C2C);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->ebx);
	add(&ts->eax, 0x4);
	goto loc_4E40C8;

loc_4E40C6:
	xor_(&ts->eax, ts->eax);

loc_4E40C8:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	push(mv, &ts->esp, 0x79603C);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, 0x24);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x4, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_5379C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x2C, 4));
	add(&ts->esp, 0x1C);
	mov(mv, x86::mem(ts->ecx + 0x14, 4), ts->eax);
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->ebp + 0x4C, 4));
	game::sub_52E770(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	inc(&ts->edi);
	dec(&ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4E3EE6;
    }
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->ebp);
	game::sub_4D1380(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x2C);
	retn(mv, &ts->esp);
}

void sub_4E4130(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77389B);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x8FC);
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x114, 4));
	test(mv, &ts->eflags, x86::mem(ts->eax + 0x114, 4), 0x40000);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4E429D;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	game::sub_58F740(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->ecx, ts->eax);
	game::sub_5829C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_582290(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x10);
	mov(&ts->ecx, 0x83AD90);
	mov(&ts->edi, ts->eax);
	game::sub_5162D0(ts, mv);
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4E41BB;
    }
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_4E41A0:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x434, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_4E41BB;
    }
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x10);
	mov(&ts->ecx, 0x83AD90);
	game::sub_5162D0(ts, mv);
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_4E41A0;
    }

loc_4E41BB:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	game::sub_40C910(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x918, 4), 0x0);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x83AAB4);
	game::sub_502A40(ts, mv);
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E4211;
    }
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->esi, ts->eax);
	goto loc_4E423A;

loc_4E4211:
	push(mv, &ts->esp, 0x7906DC);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E4238;
    }
	push(mv, &ts->esp, 0x7906DC);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E4238;
    }
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x4C, 4));
	goto loc_4E423A;

loc_4E4238:
	xor_(&ts->esi, ts->esi);

loc_4E423A:
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x8371B0);
	game::sub_413440(ts, mv);
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(0x83623C, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4E4265;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x8371B0);
	mov(&ts->ecx, ts->esi);
	game::sub_4D8C70(ts, mv);

loc_4E4265:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_58B9A0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_587630(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	game::sub_58B9A0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_58E080(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x394, 4));
	mov(mv, x86::mem(ts->esp + 0x90C, 4), 0xFFFFFFFF);
	game::nullsub_1(ts, mv);

loc_4E429D:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x904, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_773890:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x900, 4));
	goto sub_401800;

SEH_4D9800:
	mov(&ts->eax, 0x7DFA94);
	goto ___CxxFrameHandler;
}

void sub_4E42C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x775DB4);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x164);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4E430E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4D1810(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4E430E:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_775DA0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7978B4);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4E42C0:
	mov(&ts->eax, 0x7E1324);
	goto ___CxxFrameHandler;
}

void sub_4E4320(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x775DD3);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x88);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x14, 4), ts->esi);
	game::sub_551DE0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	xor_(&ts->ebx, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x7978E0);
	push(mv, &ts->esp, 0x7976C8);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, x86::mem(ts->ebp - 0x4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi, 4), 0x79602C);
	game::sub_542CA0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xF8, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->ebp - 0x4, 1), 0x1);
	game::sub_4D2A70(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	game::sub_58F740(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x1170, 4), ts->eax);
	game::sub_58F6D0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x1174, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x1178, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x117C, 4), 0xA);
	mov(mv, x86::mem(ts->esi + 0x1180, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x1181, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x1188, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1198, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x1199, 1), ts->bl);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8651AC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784264, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x119C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xA6F52EE0);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x11A0, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x11A1, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x11A4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x11A8, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x11AC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x11B0, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x11B4, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x11B8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x11BC, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x11BD, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x11BE, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x11BF, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x11C0, 1), ts->bl);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->al, x86::mem(0x8500C8, 1));
	add(&ts->esp, 0x10);
	mov(mv, x86::mem(ts->esi + 0x11A8, 1), ts->al);
	mov(mv, x86::mem(ts->ebp - 0x10, 4), ts->ebx);

loc_4E4465:
	push(mv, &ts->esp, 0x20);
	game::j__malloc(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	mov(&ts->edi, ts->eax);
	mov(mv, x86::mem(0x8358F4, 4), ts->edi);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x8);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	mov(mv, x86::mem(ts->eax + 0x83590C, 1), ts->bl);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->eax + 0x835912, 1), ts->bl);
	inc(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0x6);
	mov(mv, x86::mem(ts->ebp - 0x10, 4), ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4E4465;
    }
	mov(mv, &ts->edi, x86::mem(0x8358F4, 4));
	mov(&ts->ecx, 0x850080);
	mov(mv, x86::mem(0x835912, 1), 0x1);
	mov(mv, x86::mem(0x8358F0, 4), 0x1);
	game::sub_5031F0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_43DBD0(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x83AAB8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x759898CB);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x1190, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x118C, 4), 0x8371B0);
	game::sub_5379C0(ts, mv);
	add(&ts->esp, 0x10);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x1184, 4), ts->eax);
	game::sub_4D1CE0(ts, mv);
	xor_(&ts->eax, ts->eax);
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_4E4500:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edi, x86::mem(ts->eax + 0x1, 4));
	push(mv, &ts->esp, 0x79053C);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x78FEBC);
	mov(mv, x86::mem(ts->ebp - 0x10, 4), ts->ecx);
	game::sub_50B9C0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C00(ts, mv);
	mov(&ts->eax, ts->edi);
	add(&ts->esp, 0x10);
	cmp(&ts->eflags, ts->eax, 0x6);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4E4500;
    }
	mov(mv, &ts->eax, x86::mem(0x850088, 4));
	cmp(&ts->eflags, ts->eax, 0xA);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4E4540;
    }
	jmp(x86::mem(0x4E49D8, 4));

loc_4E4547:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x93FDEE74);
	push(mv, &ts->esp, 0x23EAE8B9);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	goto loc_4E464D;

loc_4E456B:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x613D3106);
	push(mv, &ts->esp, 0x23EAE8B9);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	goto loc_4E464D;

loc_4E458F:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDCB9F861);
	push(mv, &ts->esp, 0x23EAE8B9);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	goto loc_4E464D;

loc_4E45B3:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x35102EDF);
	push(mv, &ts->esp, 0x23EAE8B9);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	goto loc_4E464D;

loc_4E45D4:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xD7162CFA);
	push(mv, &ts->esp, 0x23EAE8B9);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	goto loc_4E464D;

loc_4E45F5:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x30DA61E1);
	push(mv, &ts->esp, 0x23EAE8B9);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	goto loc_4E464D;

loc_4E4616:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x75F903F4);
	push(mv, &ts->esp, 0x23EAE8B9);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	goto loc_4E464D;

def_4E4540:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0x23EAE8B9);
	push(mv, &ts->esp, ts->eax);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0xC);

loc_4E464D:
	movzx(mv, &ts->ecx, x86::mem(0x8500B8, 2));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ecx);
	game::sub_516280(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x566BF78A);
	push(mv, &ts->esp, ts->edi);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8500BC, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4E468C;
    }
	push(mv, &ts->esp, 0x9E4C4648);
	goto loc_4E4691;

loc_4E468C:
	push(mv, &ts->esp, 0x22F254AF);

loc_4E4691:
	push(mv, &ts->esp, 0x7978D0);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x850088, 4));
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_4E46E7;
    }
	cmp(&ts->eflags, ts->eax, 0x9);
	if (ts->eflags.zero) {
        goto loc_4E46E7;
    }
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.zero) {
        goto loc_4E46E7;
    }
	cmp(&ts->eflags, ts->eax, 0x8);
	if (ts->eflags.zero) {
        goto loc_4E46E7;
    }
	movzx(mv, &ts->edx, x86::mem(0x8500BA, 2));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x78F744);
	push(mv, &ts->esp, 0x566BF78B);
	push(mv, &ts->esp, ts->eax);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x10);
	goto loc_4E4706;

loc_4E46E7:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x7F2F7AD6);
	push(mv, &ts->esp, 0x566BF78B);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);

loc_4E4706:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xBA9BA7E3);
	push(mv, &ts->esp, ts->ecx);
	game::sub_52CEA0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	game::sub_4D1EA0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1170, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x4D2760);
	game::sub_58A790(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(0x850084, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4E47FB;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xCC6C959F);
	mov(mv, x86::mem(ts->esi + 0x1180, 1), ts->bl);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->edi);
	game::sub_558310(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x1188, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x118C, 4));
	add(&ts->esp, 0x10);
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	game::sub_5B5330(ts, mv);
	mov(&ts->dl, 0x3);
	sub(&ts->dl, ts->al);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->ebp - 0x10, 1), ts->dl);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, 0x49F780);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x850080);
	mov(&ts->ecx, 0x850080);
	game::sub_5031F0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1170, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_58D340(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4E47B7;
    }
	push(mv, &ts->esp, 0x12);
	mov(&ts->ecx, 0x850080);
	game::sub_5031B0(ts, mv);
	push(mv, &ts->esp, 0x9A9F1336);
	goto loc_4E4807;

loc_4E47B7:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1188, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_540A60(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xAB13CAE4);
	mov(mv, x86::mem(ts->esi + 0x1188, 4), ts->ebx);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x87F32B2A);
	push(mv, &ts->esp, 0x87F32B2A);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->edi);
	game::sub_558540(ts, mv);
	add(&ts->esp, 0x20);
	push(mv, &ts->esp, 0x9A9F1336);
	goto loc_4E4807;

loc_4E47FB:
	mov(mv, x86::mem(ts->esi + 0x1180, 1), 0x1);
	push(mv, &ts->esp, 0xFC00D963);

loc_4E4807:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xBA9BA7E3);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1174, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x4BC110);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xF8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_582860(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0x4162454C);
	push(mv, &ts->esp, ts->edx);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	game::sub_49EFE0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, ts->eax);
	game::sub_537950(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x11A8, 1));
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->al, ts->bl);
	if (ts->eflags.zero) {
        goto loc_4E48AC;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FFD0);
	mov(mv, x86::mem(0x836384, 4), 0x1);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x794D58);
	push(mv, &ts->esp, ts->ecx);
	game::sub_5426C0(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x7F44B8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FC44);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5426C0(ts, mv);
	add(&ts->esp, 0x20);
	goto loc_4E48B2;

loc_4E48AC:
	mov(mv, x86::mem(0x836384, 4), ts->ebx);

loc_4E48B2:
	game::sub_58F6D0(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	game::sub_43BE80(ts, mv);
	mov(&ts->edi, ts->eax);
	dec(&ts->edi);
	if (ts->eflags.sign) {
        goto loc_4E48EB;
    }

loc_4E48C5:
	push(mv, &ts->esp, ts->edi);
	game::sub_58F6D0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_5847F0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ecx);
	add(&ts->eax, 0xC);
	push(mv, &ts->esp, ts->eax);
	game::sub_58F6D0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_58D150(ts, mv);
	dec(&ts->edi);
	if (!ts->eflags.sign) {
        goto loc_4E48C5;
    }

loc_4E48EB:
	cmp(mv, &ts->eflags, x86::mem(0x836378, 4), 0x2);
	if (!ts->eflags.zero) {
        goto loc_4E4918;
    }
	push(mv, &ts->esp, ts->ebx);
	game::sub_582B60(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_502770(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_73E380(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x2);
	game::sub_50CEE0(ts, mv);
	add(&ts->esp, 0x10);
	mov(mv, x86::mem(0x836378, 4), ts->ebx);

loc_4E4918:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x1);
	game::sub_50CEE0(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x9757A0C0);
	game::sub_55DDE0(ts, mv);
	mov(mv, x86::mem(ts->ebp - 0x94, 1), ts->bl);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x1F);
	lea(mv, &ts->edi, x86::mem(ts->ebp - 0x93, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	add(&ts->esp, 0x10);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	push(mv, &ts->esp, 0x794D2C);
	push(mv, &ts->esp, 0x679FD4E9);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->ebp - 0x94, 4));
	push(mv, &ts->esp, 0x80);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C960(ts, mv);
	game::sub_582B60(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0xF8, 4));
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x94, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x2);
	push(mv, &ts->esp, ts->edx);
	game::sub_73F180(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	add(&ts->esp, 0x24);
	push(mv, &ts->esp, ts->ebx);
	game::sub_504820(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	mov(mv, x86::mem(ts->eax + 0xAE, 1), ts->bl);
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, 0x790000);
	mov(mv, x86::mem(ts->esi + 0xF0, 4), 0xC407210);
	mov(mv, x86::mem(ts->esi + 0xF4, 1), 0x1);
	game::sub_537950(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_775DC0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x14, 4));
	goto sub_510D40;

loc_775DC8:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x14, 4));
	add(&ts->ecx, 0x4C);
	goto sub_4CBBA0;

SEH_4E4320:
	mov(&ts->eax, 0x7E1350);
	goto ___CxxFrameHandler;
}

void sub_4E4A10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4D1A60(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4E4A28;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4E4A28:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4E4A30(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	sub(&ts->esp, 0x10C);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x8, 4));
	cmp(&ts->eflags, ts->edi, 0x87F32B2A);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4E4B54;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_52CEF0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_537DA0(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x11A8, 1));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E4AA7;
    }
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x200);
	if (ts->eflags.zero) {
        goto loc_4E4AA7;
    }
	game::sub_582B60(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xF8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_73FC10(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x1);
	game::sub_582B60(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_502770(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_73E300(ts, mv);
	add(&ts->esp, 0x8);

loc_4E4AA7:
	push(mv, &ts->esp, 0x0);
	game::sub_58F740(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->ecx, ts->eax);
	game::sub_582930(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E4ACC;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_4BB930(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E4ACC:
	mov(mv, x86::mem(ts->esp + 0x18, 1), 0x0);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x1F);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x19, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	push(mv, &ts->esp, 0x794D2C);
	push(mv, &ts->esp, 0x679FD4E9);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, 0x80);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	game::sub_582B60(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xF8, 4));
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	game::sub_73F180(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8500D0, 4));
	add(&ts->esp, 0x24);
	cmp(&ts->eflags, ts->eax, 0x3);
	if (!ts->eflags.zero) {
        goto loc_4E4B38;
    }
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, 0x89CF48);
	game::sub_5FE2B0(ts, mv);

loc_4E4B38:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78F240);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E4B54:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1198, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E4C5B;
    }
	cmp(&ts->eflags, ts->edi, 0x97C1B72F);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4E4BCE;
    }
	if (ts->eflags.zero) {
        goto loc_4E4C28;
    }
	cmp(&ts->eflags, ts->edi, 0x37C873AF);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4E4BB5;
    }
	if (ts->eflags.zero) {
        goto loc_4E5280;
    }
	cmp(&ts->eflags, ts->edi, 0xC);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4E4BA4;
    }
	if (ts->eflags.zero) {
        goto loc_4E4C28;
    }
	cmp(&ts->eflags, ts->edi, 0x9);
	if (ts->eflags.carry) {
        goto def_4E4C79;
    }
	cmp(&ts->eflags, ts->edi, 0xA);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_4E4C28;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E4BA4:
	cmp(&ts->eflags, ts->edi, 0x153E234);
	if (ts->eflags.zero) {
        goto loc_4E4C28;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E4BB5:
	cmp(&ts->eflags, ts->edi, 0x427304A6);
	if (ts->eflags.zero) {
        goto loc_4E4C28;
    }
	cmp(&ts->eflags, ts->edi, 0x67BFA959);
	if (ts->eflags.zero) {
        goto loc_4E4C28;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E4BCE:
	cmp(&ts->eflags, ts->edi, 0xDA5B8712);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4E4C14;
    }
	if (ts->eflags.zero) {
        goto loc_4E4C28;
    }
	cmp(&ts->eflags, ts->edi, 0xC98356BA);
	if (ts->eflags.zero) {
        goto loc_4E4BF1;
    }
	cmp(&ts->eflags, ts->edi, 0xC9D30688);
	if (ts->eflags.zero) {
        goto loc_4E4C28;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E4BF1:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1199, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E58CF;
    }
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_49EFE0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x1199, 1), 0x0);
	goto loc_4E58CF;

loc_4E4C14:
	cmp(&ts->eflags, ts->edi, 0xF9E94D58);
	if (ts->eflags.zero) {
        goto loc_4E4C28;
    }
	cmp(&ts->eflags, ts->edi, 0xFA94652C);
	if (!ts->eflags.zero) {
        goto def_4E4C79;
    }

loc_4E4C28:
	push(mv, &ts->esp, 0x0);
	game::sub_58F740(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->ecx, ts->eax);
	game::sub_582930(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4E4C50;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x87F32B2A);
	game::sub_51CE60(ts, mv);
	add(&ts->esp, 0x8);
	goto loc_4E4C5B;

loc_4E4C50:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_4D1EA0(ts, mv);

loc_4E4C5B:
	cmp(&ts->eflags, ts->edi, 0x153E234);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4E5170;
    }
	if (ts->eflags.zero) {
        goto loc_4E501A;
    }
	add(&ts->edi, 0xFFFFFFFE);
	cmp(&ts->eflags, ts->edi, 0xA);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4E4C79;
    }
	jmp(x86::mem(0x4E5CE4, 4));

loc_4E4C80:
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0x5EB035D1);
	mov(mv, x86::mem(ts->esi + 0x1199, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x1198, 1), 0x1);
	game::sub_4958B0(ts, mv);
	mov(mv, x86::mem(0x838528, 1), 0x0);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_537950(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x78F8D0);
	game::sub_555EB0(ts, mv);
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E4CD0:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, ts->edx);
	game::sub_537950(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79031C);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0xCCD1A5D8);
	mov(mv, x86::mem(ts->esi + 0x1198, 1), 0x0);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x18);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_4D1EA0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xB);
	game::sub_55DDA0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	mov(mv, x86::mem(0x838528, 1), 0x1);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_54E6E0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E4D40:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x70, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x92C, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_4E4D5E;
    }
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_49EF50(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E4D5E:
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	game::sub_4958B0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1188, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E4D79;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);

loc_4E4D79:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xB419C854);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1CA4CE1);
	push(mv, &ts->esp, 0x541389E5);
	push(mv, &ts->esp, 0x7902C8);
	push(mv, &ts->esp, ts->edi);
	game::sub_5585E0(ts, mv);
	add(&ts->esp, 0x18);
	mov(mv, x86::mem(ts->esi + 0x1188, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x11B4, 1), 0x1);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E4DB5:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537950(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1190, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x83AD90);
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0xCCD1A5D8);
	game::sub_503510(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x118C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x1194, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1190, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x83AAB4);
	game::sub_502A40(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x118C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	game::sub_4D8EC0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79031C);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x1198, 1), 0x0);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x1C);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_4D1EA0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0xB);
	game::sub_55DDA0(ts, mv);
	mov(mv, x86::mem(0x838528, 1), 0x1);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	game::sub_54E6E0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E4E74:
	mov(mv, &ts->eax, x86::mem(0x83A9C8, 4));
	mov(mv, &ts->edx, x86::mem(0x8651AC, 4));
	sub(&ts->edx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->edx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7F942C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto def_4E4C79;
    }
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x11A1, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x1199, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x1198, 1), 0x1);
	game::sub_4BBA20(ts, mv);
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, 0xA0);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x759898CB);
	mov(&ts->ecx, ts->esi);
	game::sub_555F80(ts, mv);
	mov(mv, x86::mem(0x838528, 1), 0x0);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E4EF0:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x70, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1170, 4));
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->ebx, x86::mem(ts->eax + 0x918, 4));
	push(mv, &ts->esp, 0x4DEF60);
	push(mv, &ts->esp, ts->ebx);
	game::sub_58AC50(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4E4F41;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x35EC190E);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->esi);
	game::sub_558540(ts, mv);
	add(&ts->esp, 0x1C);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E4F41:
	mov(mv, x86::mem(ts->esp + 0x1C, 1), 0x0);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0xF);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x1D, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	push(mv, &ts->esp, 0x7D1D448D);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_4400D0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->eax);
	game::sub_558310(ts, mv);
	add(&ts->esp, 0x18);
	mov(mv, x86::mem(ts->esi + 0x1188, 4), ts->eax);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E4F93:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xD152ED92);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1FAB5998);
	push(mv, &ts->esp, 0x1FAB5998);
	push(mv, &ts->esp, 0xD05FC3A3);
	push(mv, &ts->esp, 0x541389E5);
	push(mv, &ts->esp, 0x77FEEC35);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->edx);
	game::sub_558790(ts, mv);
	add(&ts->esp, 0x24);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E4FCD:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FFD0);
	push(mv, &ts->esp, 0xFC8C5406);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x11BC, 1), 0x0);
	mov(mv, x86::mem(ts->esi + 0x11BD, 1), 0x0);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FFD0);
	push(mv, &ts->esp, 0xCD3F1D2F);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x20);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_4BBA20(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E501A:
	mov(mv, &ts->al, x86::mem(0x838520, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto def_4E4C79;
    }
	push(mv, &ts->esp, 0x78F8D0);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto def_4E4C79;
    }
	push(mv, &ts->esp, 0x78FE90);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto def_4E4C79;
    }
	mov(mv, x86::mem(ts->esi + 0x1198, 1), ts->al);
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	game::sub_54E6A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1170, 4));
	game::sub_582930(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E5079;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x1BC, 4));
	goto loc_4E507B;

loc_4E5079:
	xor_(&ts->ecx, ts->ecx);

loc_4E507B:
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x11B0, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4E510F;
    }
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4E50EE;
    }
	add(&ts->eax, 0x1FC);
	mov(&ts->edi, 0x1);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	goto loc_4E50A0;

loc_4E50A0:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	test(mv, &ts->eflags, x86::mem(ts->edx, 4), 0x8000000);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	if (ts->eflags.zero) {
        goto loc_4E50B8;
    }
	push(mv, &ts->esp, 0x78FEA4);
	goto loc_4E50BD;

loc_4E50B8:
	push(mv, &ts->esp, 0x796078);

loc_4E50BD:
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x78FEC8);
	game::sub_50B9C0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x11B0, 4));
	add(&ts->ebx, 0x64);
	add(&ts->esp, 0x10);
	inc(&ts->edi);
	lea(mv, &ts->eax, x86::mem(ts->edi - 0x1, 4));
	cmp(&ts->eflags, ts->eax, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4E50A0;
    }

loc_4E50EE:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FEA4);
	push(mv, &ts->esp, 0x796060);
	game::sub_50B9C0(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);

loc_4E510F:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x11BC, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4E5137;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x11BD, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4E5137;
    }
	mov(mv, &ts->ecx, x86::mem(0x7F44B8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FFD0);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	goto loc_4E5148;

loc_4E5137:
	mov(mv, &ts->eax, x86::mem(0x7F44B8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FC44);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);

loc_4E5148:
	game::sub_5426C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8500D0, 4));
	add(&ts->esp, 0x10);
	cmp(&ts->eflags, ts->eax, 0x3);
	if (ts->eflags.zero) {
        goto def_4E4C79;
    }
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_4BBA20(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E5170:
	cmp(&ts->eflags, ts->edi, 0x911C0A4B);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4E5624;
    }
	if (ts->eflags.zero) {
        goto loc_4E55E4;
    }
	cmp(&ts->eflags, ts->edi, 0x37C873AF);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4E5348;
    }
	if (ts->eflags.zero) {
        goto loc_4E5280;
    }
	cmp(&ts->eflags, ts->edi, 0x2C03FBA3);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4E522F;
    }
	if (ts->eflags.zero) {
        goto loc_4E5213;
    }
	cmp(&ts->eflags, ts->edi, 0x1CA4CE1);
	if (ts->eflags.zero) {
        goto loc_4E51EA;
    }
	cmp(&ts->eflags, ts->edi, 0xC407210);
	if (!ts->eflags.zero) {
        goto def_4E4C79;
    }

loc_4E51B6:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x70, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x70, 4));
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51F440(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4E5386;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xC6F311C6);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E51EA:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1188, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x1188, 4), 0x0);
	mov(mv, x86::mem(ts->esi + 0x11B4, 1), 0x0);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E5213:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78F240);
	push(mv, &ts->esp, ts->eax);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E522F:
	cmp(&ts->eflags, ts->edi, 0x2C0E485A);
	if (ts->eflags.zero) {
        goto loc_4E526B;
    }
	cmp(&ts->eflags, ts->edi, 0x35F8620B);
	if (!ts->eflags.zero) {
        goto def_4E4C79;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_542720(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F21C);
	push(mv, &ts->esp, 0x7978EC);
	push(mv, &ts->esp, ts->ecx);
	game::sub_5426C0(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E526B:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_4A0140(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E5280:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1170, 4));
	game::sub_582930(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E52A2;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1170, 4));
	game::sub_582930(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x1BC, 4));
	goto loc_4E52A4;

loc_4E52A2:
	xor_(&ts->eax, ts->eax);

loc_4E52A4:
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x89CF48);
	game::sub_5EFEA0(ts, mv);
	xor_(&ts->edi, ts->edi);
	push(mv, &ts->esp, ts->edi);
	game::sub_58FD50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, 0x3);
	mov(&ts->ecx, 0x850080);
	mov(mv, x86::mem(ts->esi + 0x1181, 1), 0x0);
	game::sub_5031B0(ts, mv);
	mov(&ts->ecx, 0x89CF48);
	game::sub_601C80(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(0x850084, 4), ts->edi);
	if (ts->eflags.zero) {
        goto def_4E4C79;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1188, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4E52FC;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x1188, 4), ts->edi);

loc_4E52FC:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x9C6E60A4);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x1188, 4), ts->edi);
	game::sub_558330(ts, mv);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8651AC, 4));
	add(&ts->esp, 0x8);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x119C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7850D8, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_401840(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x11A0, 1), 0x1);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E5348:
	cmp(&ts->eflags, ts->edi, 0x72619778);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4E554B;
    }
	if (ts->eflags.zero) {
        goto loc_4E5513;
    }
	cmp(&ts->eflags, ts->edi, 0x406415E3);
	if (ts->eflags.zero) {
        goto loc_4E51B6;
    }
	cmp(&ts->eflags, ts->edi, 0x5073EF13);
	if (!ts->eflags.zero) {
        goto def_4E4C79;
    }

loc_4E5372:
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xF8, 4));
	game::sub_4BC120(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E5386:
	push(mv, &ts->esp, 0xF636A00);
	add(&ts->ebx, 0x918);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto def_4E4C79;
    }
	mov(&ts->ecx, 0x850080);
	game::sub_5031F0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E549D;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51F440(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_4E549D;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51F440(ts, mv);
	mov(&ts->edi, ts->eax);
	push(mv, &ts->esp, 0x0);
	sub(&ts->edi, 0x2);
	game::sub_58F740(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->ecx, ts->eax);
	game::sub_582930(ts, mv);
	imul(&ts->edi, ts->edi, 0x64);
	lea(mv, &ts->edx, x86::mem(ts->eax + (ts->edi) + 0x1C4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x835918);
	game::sub_43DBD0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x850084, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFF);
	if (!ts->eflags.zero) {
        goto loc_4E5438;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x796230);
	game::sub_555EB0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x11BC, 1), 0x1);
	goto loc_4E544D;

loc_4E5438:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x796214);
	game::sub_555EB0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x11BD, 1), 0x1);

loc_4E544D:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FC44);
	push(mv, &ts->esp, 0xFC8C5406);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FC44);
	push(mv, &ts->esp, 0xCD3F1D2F);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x7F44B8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FC44);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_5426C0(ts, mv);
	add(&ts->esp, 0x30);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E549D:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_51CD60(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->ecx, 0x759898CB);
	if (!ts->eflags.zero) {
        goto def_4E4C79;
    }
	mov(mv, &ts->eax, x86::mem(0x8651AC, 4));
	sub(mv, &ts->eax, x86::mem(0x83A9C8, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7F942C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto def_4E4C79;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0xC, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xA0);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0x783FE5);
	mov(mv, x86::mem(0x838528, 1), 0x0);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x10, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_555F80(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E5513:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1170, 4));
	game::sub_58D9F0(ts, mv);
	cmp(&ts->eflags, ts->al, 0x1);
	if (ts->eflags.zero) {
        goto def_4E4C79;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x70, 4));
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51F440(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.zero) {
        goto def_4E4C79;
    }
	mov(&ts->ecx, ts->edi);
	game::sub_4958B0(ts, mv);
	push(mv, &ts->esp, 0xFFFFFFFF);
	goto loc_4E5603;

loc_4E554B:
	cmp(&ts->eflags, ts->edi, 0x911AB364);
	if (!ts->eflags.zero) {
        goto def_4E4C79;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1170, 4));
	game::sub_58D9F0(ts, mv);
	cmp(&ts->eflags, ts->al, 0x1);
	if (ts->eflags.zero) {
        goto def_4E4C79;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x11BF, 1), 0x1);
	if (ts->eflags.zero) {
        goto def_4E4C79;
    }
	mov(mv, &ts->eax, x86::mem(0x850084, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4E55B2;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xC304FA53);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x87F32B2A);
	push(mv, &ts->esp, 0x541389E5);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->eax);
	game::sub_558860(ts, mv);
	add(&ts->esp, 0x20);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E55B2:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xA632EEAD);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x87F32B2A);
	push(mv, &ts->esp, 0x541389E5);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->ecx);
	game::sub_558860(ts, mv);
	add(&ts->esp, 0x20);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E55E4:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1170, 4));
	game::sub_58D9F0(ts, mv);
	cmp(&ts->eflags, ts->al, 0x1);
	if (ts->eflags.zero) {
        goto def_4E4C79;
    }
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4C, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_4958B0(ts, mv);
	push(mv, &ts->esp, 0x1);

loc_4E5603:
	mov(&ts->ecx, ts->esi);
	game::sub_4BBA20(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51F440(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x11B8, 4), ts->eax);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E5624:
	cmp(&ts->eflags, ts->edi, 0xC9D30688);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4E5B56;
    }
	if (ts->eflags.zero) {
        goto loc_4E5AC9;
    }
	cmp(&ts->eflags, ts->edi, 0xC519BFC1);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4E58B7;
    }
	if (ts->eflags.zero) {
        goto loc_4E585A;
    }
	cmp(&ts->eflags, ts->edi, 0x9803F6E2);
	if (ts->eflags.zero) {
        goto loc_4E56B0;
    }
	cmp(&ts->eflags, ts->edi, 0xC519BFC0);
	if (!ts->eflags.zero) {
        goto def_4E4C79;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FC44);
	push(mv, &ts->esp, 0x794D58);
	push(mv, &ts->esp, ts->edx);
	game::sub_5426C0(ts, mv);
	mov(mv, &ts->al, x86::mem(0x838528, 1));
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto def_4E4C79;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FEF4);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x1199, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x1198, 1), 0x1);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E56B0:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1170, 4));
	game::sub_58D9F0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4E56EE;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x70, 4));
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51F440(ts, mv);
	mov(&ts->ecx, ts->edi);
	mov(&ts->ebx, ts->eax);
	game::sub_54EB80(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51F440(ts, mv);
	cmp(&ts->eflags, ts->ebx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E56EE;
    }
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_4BBA20(ts, mv);

loc_4E56EE:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xB1000CC7);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_52D100(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E571A;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xC6F311C6);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);

loc_4E571A:
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x100, 4));
	game::sub_538130(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1184, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_52D100(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E578A;
    }
	mov(mv, &ts->eax, x86::mem(0x8651AC, 4));
	sub(mv, &ts->eax, x86::mem(0x83A9C8, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7F942C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto def_4E4C79;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xA0);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x759898CB);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(0x838528, 1), 0x0);
	game::sub_555F80(ts, mv);
	goto loc_4E57C6;

loc_4E578A:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xF8, 4));
	lea(mv, &ts->edi, x86::mem(ts->esi + 0xF8, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_52D100(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E57AC;
    }
	mov(&ts->ecx, ts->edi);
	game::sub_4BC120(ts, mv);
	goto loc_4E57C6;

loc_4E57AC:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_52D100(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E57C6;
    }
	mov(&ts->ecx, ts->edi);
	game::sub_4BC150(ts, mv);

loc_4E57C6:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x13C, 4));
	add(&ts->eax, 0xA);
	cmp(&ts->eflags, ts->eax, 0x14);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4E57DB;
    }
	movzx(mv, &ts->eax, x86::mem(ts->eax + 0x4E5D1C, 1));
	jmp(x86::mem(0x4E5D10, 4));

loc_4E57E2:
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xF8, 4));
	game::sub_4BC150(ts, mv);
	goto def_4E57DB;

loc_4E57EF:
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xF8, 4));
	game::sub_4BC120(ts, mv);

def_4E57DB:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CDA0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	add(&ts->esp, 0x4);
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x44);
	if (!ts->eflags.parity) {
        goto def_4E4C79;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.zero) {
        goto loc_4E5372;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto def_4E4C79;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xF8, 4));
	game::sub_4BC150(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E585A:
	mov(mv, &ts->eax, x86::mem(0x83A9C8, 4));
	mov(mv, &ts->edx, x86::mem(0x8651AC, 4));
	sub(&ts->edx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7F942C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto def_4E4C79;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xA0);
	push(mv, &ts->esp, 0x53F9FD5C);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x759898CB);
	mov(&ts->ecx, ts->esi);
	game::sub_555F80(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E58B7:
	cmp(&ts->eflags, ts->edi, 0xC6F311C6);
	if (ts->eflags.zero) {
        goto loc_4E5AB5;
    }
	cmp(&ts->eflags, ts->edi, 0xC98356BA);
	if (!ts->eflags.zero) {
        goto def_4E4C79;
    }

loc_4E58CF:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x70, 4));
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51F440(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.zero) {
        goto loc_4E5910;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1170, 4));
	game::sub_58D9F0(ts, mv);
	cmp(&ts->eflags, ts->al, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4E5910;
    }
	mov(&ts->ecx, ts->edi);
	game::sub_4958B0(ts, mv);
	mov(&ts->ecx, ts->edi);
	game::sub_54EB60(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51F440(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x11B8, 4), ts->eax);

loc_4E5910:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x11B4, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E594F;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x70, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E5935;
    }
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x92C, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_4E594F;
    }
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_49EF50(ts, mv);
	goto loc_4E593C;

loc_4E5935:
	mov(mv, x86::mem(ts->esi + 0x11B4, 1), 0x0);

loc_4E593C:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1188, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E594F;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);

loc_4E594F:
	mov(&ts->ecx, ts->esi);
	game::sub_4BB5D0(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1178, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E5A0A;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x796084);
	push(mv, &ts->esp, 0xA6F52EE0);
	push(mv, &ts->esp, ts->eax);
	game::sub_537CC0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4E5A0A;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x117C, 4));
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4E59C9;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0xA6F52EE0);
	push(mv, &ts->esp, ts->eax);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x117C, 4));
	add(&ts->esp, 0xC);
	dec(&ts->ecx);
	mov(&ts->eax, ts->ecx);
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	mov(mv, x86::mem(ts->esi + 0x117C, 4), ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4E59F2;
    }
	mov(mv, &ts->eax, x86::mem(0x850084, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4E59F2;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_4BB6E0(ts, mv);
	goto loc_4E59F2;

loc_4E59C9:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->eax - 0x1, 4));
	push(mv, &ts->esp, 0x9B8C9D7A);
	mov(mv, x86::mem(ts->esi + 0x117C, 4), ts->ecx);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xA6F52EE0);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x10);

loc_4E59F2:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x796084);
	push(mv, &ts->esp, 0xA6F52EE0);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);

loc_4E5A0A:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x11A0, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto def_4E4C79;
    }
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x119C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8651AC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fcompp(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto def_4E4C79;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1188, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x11A0, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_4E5A61;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x1188, 4), 0x0);

loc_4E5A61:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F0120(ts, mv);
	neg(&ts->al);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0xE562831F);
	add(&ts->eax, 0xB62E143C);
	push(mv, &ts->esp, ts->eax);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x2C03FBA3);
	push(mv, &ts->esp, 0x2C03FBA3);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->esi);
	game::sub_558540(ts, mv);
	add(&ts->esp, 0x1C);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, 0x89CF48);
	game::sub_5FE2B0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E5AB5:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_4D1BD0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E5AC9:
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x200);
	if (ts->eflags.zero) {
        goto loc_4E5AEB;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1170, 4));
	game::sub_58D9F0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, x86::mem(0x838528, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4E5AF2;
    }

loc_4E5AEB:
	mov(mv, x86::mem(0x838528, 1), 0x0);

loc_4E5AF2:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79031C);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x11A1, 1), 0x0);
	mov(mv, x86::mem(ts->esi + 0x1198, 1), 0x0);
	mov(mv, x86::mem(ts->esi + 0x11BD, 1), 0x0);
	mov(mv, x86::mem(ts->esi + 0x11BC, 1), 0x0);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x7D485221);
	push(mv, &ts->esp, 0x759898CB);
	push(mv, &ts->esp, ts->edx);
	game::sub_495460(ts, mv);
	add(&ts->esp, 0x1C);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_4D1EA0(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_4BBA20(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E5B56:
	cmp(&ts->eflags, ts->edi, 0xDA5B8712);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4E5CC8;
    }
	if (ts->eflags.zero) {
        goto loc_4E5BCF;
    }
	cmp(&ts->eflags, ts->edi, 0xD05FC3A3);
	if (ts->eflags.zero) {
        goto loc_4E5B8C;
    }
	cmp(&ts->eflags, ts->edi, 0xD9FEEC59);
	if (!ts->eflags.zero) {
        goto def_4E4C79;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xF8, 4));
	game::sub_4BC150(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E5B8C:
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x4AE640);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x170, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x835918);
	game::sub_58B9A0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_58BC60(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xFF12B5C5);
	push(mv, &ts->esp, 0x7902C8);
	push(mv, &ts->esp, ts->eax);
	game::sub_558330(ts, mv);
	add(&ts->esp, 0xC);
	mov(mv, x86::mem(ts->esi + 0x1188, 4), ts->eax);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E5BCF:
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x200);
	if (ts->eflags.zero) {
        goto loc_4E5BF1;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1170, 4));
	game::sub_58D9F0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, x86::mem(0x838528, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4E5BF8;
    }

loc_4E5BF1:
	mov(mv, x86::mem(0x838528, 1), 0x0);

loc_4E5BF8:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79031C);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x1198, 1), 0x0);
	mov(mv, x86::mem(ts->esi + 0x11BD, 1), 0x0);
	mov(mv, x86::mem(ts->esi + 0x11BC, 1), 0x0);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x11A1, 1));
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x70, 4));
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E5C76;
    }
	mov(mv, x86::mem(ts->esp + 0x18, 1), 0x0);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x3F);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x19, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	mov(&ts->ecx, ts->esi);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	game::sub_50CED0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, 0x100);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C960(ts, mv);
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x0);
	add(&ts->ebx, 0x918);
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	goto loc_4E5C82;

loc_4E5C76:
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_50CED0(ts, mv);

loc_4E5C82:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1174, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_58A4E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x7D485221);
	push(mv, &ts->esp, 0x759898CB);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x11A1, 1), 0x0);
	game::sub_495460(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_4D1EA0(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_4BBA20(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E5CC8:
	cmp(&ts->eflags, ts->edi, 0xFA94652C);
	if (!ts->eflags.zero) {
        goto def_4E4C79;
    }
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_49EE40(ts, mv);

def_4E4C79:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);
}

void sub_4E5D40(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7748B3);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x1C, 4));
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	game::sub_551DE0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, x86::mem(ts->esp + 0x30, 4), 0x0);
	mov(mv, x86::mem(ts->esi, 4), 0x7960CC);
	game::sub_542CA0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x796484);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xF8, 4));
	mov(mv, x86::mem(ts->esp + 0x28, 1), 0x1);
	game::sub_542AC0(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_4D2BA0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	game::sub_504820(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x444969FD);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x444969FE);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x3FBB7A4E);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x688A1551);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x9C7C3C73);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x48, 4));
	add(&ts->esp, 0x3C);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

unknown_libname_57:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

loc_7748A8:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x4C);
	goto sub_4CBBA0;

SEH_4E5E60:
	mov(&ts->eax, 0x7E137C);
	goto ___CxxFrameHandler;
}

void sub_4E5E40(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4D2B20(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4E5E58;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4E5E58:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4E5E60(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7748B3);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x1C, 4));
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	game::sub_551DE0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, x86::mem(ts->esp + 0x30, 4), 0x0);
	mov(mv, x86::mem(ts->esi, 4), 0x7960EC);
	game::sub_542CA0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x796484);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xF8, 4));
	mov(mv, x86::mem(ts->esp + 0x28, 1), 0x1);
	game::sub_542AC0(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_4D3060(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	game::sub_504820(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x444969FD);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x444969FE);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x3FBB7A4E);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x688A1551);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x9C7C3C73);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x48, 4));
	add(&ts->esp, 0x3C);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

unknown_libname_57:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

loc_7748A8:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x4C);
	goto sub_4CBBA0;

SEH_4E5E60:
	mov(&ts->eax, 0x7E137C);
	goto ___CxxFrameHandler;
}

void sub_4E5F60(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4D2FE0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4E5F78;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4E5F78:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4E5F80(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x775E12);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x908);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->edi);
	game::sub_552330(ts, mv);
	xor_(&ts->ebx, ts->ebx);
	lea(mv, &ts->esi, x86::mem(ts->edi + 0x150, 4));
	mov(mv, x86::mem(ts->edi, 4), 0x797908);
	mov(mv, x86::mem(ts->esp + 0x91C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x4, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xC, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0xD, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0xE, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0xF, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x10, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->ebx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x7909A0);
	push(mv, &ts->esp, 0x7978FC);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x928, 1), 0x1);
	mov(mv, x86::mem(ts->edi + 0x16C, 1), ts->bl);
	game::sub_542600(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0xCA38D55F);
	push(mv, &ts->esp, 0x78FC4C);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->ecx);
	game::sub_505450(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->al, x86::mem(0x83636C, 1));
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->al, ts->bl);
	if (!ts->eflags.zero) {
        goto loc_4E6055;
    }
	cmp(mv, &ts->eflags, x86::mem(0x8500D0, 4), 0xC);
	mov(&ts->ecx, ts->esi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4E604D;
    }
	push(mv, &ts->esp, ts->ebx);
	goto loc_4E604F;

loc_4E604D:
	push(mv, &ts->esp, 0x1);

loc_4E604F:
	push(mv, &ts->esp, ts->edi);
	game::sub_4CFD80(ts, mv);

loc_4E6055:
	cmp(mv, &ts->eflags, x86::mem(0x89CF48, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4E6068;
    }
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F0150(ts, mv);

loc_4E6068:
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x200);
	setnz(ts->eflags, &ts->al);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x30, 4));
	mov(mv, x86::mem(0x838528, 1), ts->al);
	game::sub_5AC6E0(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0xFFFFFFFF);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x30, 4));
	mov(mv, x86::mem(ts->esp + 0x92C, 1), 0x2);
	game::sub_610270(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, 0x83A9D0);
	mov(mv, x86::mem(ts->esp + 0x928, 1), 0x3);
	game::sub_515D00(ts, mv);
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E60D4;
    }
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->esi, ts->eax);
	goto loc_4E60FD;

loc_4E60D4:
	push(mv, &ts->esp, 0x7906DC);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E60FB;
    }
	push(mv, &ts->esp, 0x7906DC);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4E60FB;
    }
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x4C, 4));
	goto loc_4E60FD;

loc_4E60FB:
	xor_(&ts->esi, ts->esi);

loc_4E60FD:
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x8371B0);
	game::sub_413440(ts, mv);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	mov(mv, x86::mem(0x83623C, 4), 0x2);
	if (ts->eflags.zero) {
        goto loc_4E6128;
    }
	push(mv, &ts->esp, 0x2);
	push(mv, &ts->esp, 0x8371B0);
	mov(&ts->ecx, ts->esi);
	game::sub_4D8C70(ts, mv);

loc_4E6128:
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4E614A;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x78FCD8);
	push(mv, &ts->esp, ts->ebx);
	game::sub_555F50(ts, mv);
	add(&ts->esp, 0x14);

loc_4E614A:
	mov(&ts->ecx, ts->edi);
	game::sub_4BC7B0(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x3A4, 4));
	mov(mv, x86::mem(ts->esp + 0x91C, 1), 0x1);
	game::nullsub_1(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x914, 4));
	mov(&ts->eax, ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_4017F0:
	add(&ts->ecx, 0x374);
	goto nullsub_1;

loc_775DE0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x904, 4));
	goto ??1strstreambuf@std@@UAE@XZ_5;

loc_775DEB:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x904, 4));
	add(&ts->ecx, 0x150);
	goto sub_49D870;

loc_775DFC:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x8F0, 4));
	goto loc_4017F0;

loc_775E07:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x900, 4));
	goto sub_401800;

SEH_4E5F80:
	mov(&ts->eax, 0x7E13B8);
	goto ___CxxFrameHandler;
}

void sub_4E6180(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::filebuf___filebuf_void_(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4E6198;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4E6198:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void filebuf___filebuf_void_(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776178);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x797908);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x150, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4E61E8;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x150, 4), 0x0);

loc_4E61E8:
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	game::std__strstreambuf___strstreambuf_void_(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_776170:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto ??1strstreambuf@std@@UAE@XZ_5;

SEH_4EB7A0:
	mov(&ts->eax, 0x7E0EB8);
	goto ___CxxFrameHandler;
}

void sub_4E6210(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7729F3);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	game::sub_551DE0(ts, mv);
	xor_(&ts->eax, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	mov(mv, x86::mem(ts->esi, 4), 0x790060);
	mov(mv, x86::mem(ts->esi + 0x50, 4), ts->eax);
	game::sub_4FF430(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x3BFE592C);
	push(mv, &ts->esp, 0x42ADB44C);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x20, 1), 0x1);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x8);
	mov(&ts->ecx, 0x850080);
	game::sub_5031F0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, 0x78F844);
	game::sub_50B9C0(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x10);
	mov(&ts->ecx, ts->esi);
	game::sub_4D3490(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4E62D1;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xEC3905C1);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xCA4CE1);
	push(mv, &ts->esp, 0x541389E5);
	push(mv, &ts->esp, 0x7902C8);
	push(mv, &ts->esp, ts->edi);
	game::sub_5585E0(ts, mv);
	add(&ts->esp, 0x18);
	mov(mv, x86::mem(ts->esi + 0x50, 4), ts->eax);

loc_4E62D1:
	mov(&ts->ecx, ts->esi);
	game::sub_4A04D0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_7729E0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

loc_7729E8:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x54);
	goto sub_4957A0;

SEH_4E6210:
	mov(&ts->eax, 0x7E13E4);
	goto ___CxxFrameHandler;
}

void sub_4E62F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4D37C0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4E6308;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4E6308:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4E6310(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	game::sub_58F230(ts, mv);
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x50, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + (ts->eax*4) + 0x23, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + (ts->ecx*4), 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_58CE30(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->eax);
	game::sub_5825E0(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_4A0790(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x79795C);
	push(mv, &ts->esp, 0x79794C);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x14);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x4D3EB0);
	game::sub_58A0E0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_584270(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x4D3EB0);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_58C700(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x58, 4), ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4E63B9;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x6CF6E689);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x911AB364);
	push(mv, &ts->esp, 0x911AB364);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->edi);
	game::sub_558540(ts, mv);
	add(&ts->esp, 0x1C);
	goto loc_4E63EF;

loc_4E63B9:
	if (!ts->eflags.zero) {
        goto loc_4E63C6;
    }
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_4D39B0(ts, mv);
	goto loc_4E63EF;

loc_4E63C6:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x12DF9F4F);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xCA4CE1);
	push(mv, &ts->esp, 0x541389E5);
	push(mv, &ts->esp, 0x7902C8);
	push(mv, &ts->esp, ts->edi);
	game::sub_5585E0(ts, mv);
	add(&ts->esp, 0x18);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->eax);

loc_4E63EF:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x50, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x797938);
	if (!ts->eflags.zero) {
        goto loc_4E6412;
    }
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	goto loc_4E6424;

loc_4E6412:
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);

loc_4E6424:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x50, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x10);
	cmp(&ts->eflags, ts->eax, 0x5);
	push(mv, &ts->esp, 0x797924);
	if (!ts->eflags.zero) {
        goto loc_4E6450;
    }
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_4E6450:
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_4E6470(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4E64AD;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x4, 4));
	push(mv, &ts->esp, 0x6CF6E689);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x911AB364);
	push(mv, &ts->esp, 0x911AB364);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->esi);
	game::sub_558540(ts, mv);
	add(&ts->esp, 0x1C);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4E64AD:
	mov(mv, &ts->esi, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x5C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	game::sub_58B9A0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_58E850(ts, mv);
	mov(&ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	goto sub_4E6310;
}

void sub_4E64D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x775E34);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x94);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4E651E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	call(ts, mv, 0x4D4240);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4E651E:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_775E20:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x797964);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4E64D0:
	mov(&ts->eax, 0x7E1408);
	goto ___CxxFrameHandler;
}

void sub_4E6530(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x775E54);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x158);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4E657E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4D4560(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4E657E:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_775E40:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x79797C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4E6530:
	mov(&ts->eax, 0x7E142C);
	goto ___CxxFrameHandler;
}

void sub_4E6590(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::stdiobuf___stdiobuf_void_(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4E65A8;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4E65A8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4E65B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x775E81);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x20, 4));
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->esi);
	game::sub_551DE0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	xor_(&ts->ebx, ts->ebx);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x796484);
	push(mv, &ts->esp, 0x796484);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x64, 4));
	mov(mv, x86::mem(ts->esp + 0x34, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi, 4), 0x796248);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x50, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x51, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x5C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x60, 1), ts->bl);
	game::sub_542CA0(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x128, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x110, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x114, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x118, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x11C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x120, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x124, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x125, 1), ts->bl);
	game::sub_495630(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x1C0, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x1C4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1C8, 4), ts->ebx);
	mov(mv, &ts->eax, x86::mem(0x8651AC, 4));
	mov(mv, x86::mem(0x8637C8, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x1C, 1), 0x2);
	game::sub_504820(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xB7F74A4C);
	push(mv, &ts->esp, 0x64AFF8D3);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x7F44B4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FEF4);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x7905F8);
	push(mv, &ts->esp, 0x79798C);
	push(mv, &ts->esp, ts->edx);
	game::sub_5426C0(ts, mv);
	add(&ts->esp, 0x28);
	mov(&ts->ecx, ts->esi);
	game::sub_4A0E90(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_4BCE60(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_4D4D50(ts, mv);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_4D49D0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8651AC, 4));
	mov(mv, x86::mem(ts->esi + 0x1C4, 4), ts->eax);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x8384E0);
	game::sub_51CE80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x7F44B4, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E671A;
    }
	mov(mv, &ts->edx, x86::mem(0x7F44B4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edx);
	game::sub_51CE80(ts, mv);
	add(&ts->esp, 0x8);

loc_4E671A:
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	game::sub_54E6B0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x108, 4), 0xC407210);
	mov(mv, x86::mem(ts->esi + 0x10C, 1), 0x1);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_775E60:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

loc_775E68:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x64);
	goto sub_4CBBA0;

loc_775E73:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x128);
	goto sub_4956A0;

SEH_4E65B0:
	mov(&ts->eax, 0x7E0694);
	goto ___CxxFrameHandler;
}

void sub_4E6750(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::std__ios_base___ios_base_void_(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4E6768;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4E6768:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4E6770(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0xD15C04EC);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4E678E;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_5379A0(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4E678E:
	mov(mv, &ts->cl, x86::mem(0x838521, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_4E67B8;
    }
	cmp(&ts->eflags, ts->eax, 0xC98356BA);
	if (ts->eflags.zero) {
        goto loc_4E67B8;
    }
	cmp(&ts->eflags, ts->eax, 0x153E234);
	if (ts->eflags.zero) {
        goto loc_4E67B8;
    }
	cmp(&ts->eflags, ts->eax, 0xE1FDE1D1);
	if (ts->eflags.zero) {
        goto loc_4E67B8;
    }
	cmp(&ts->eflags, ts->eax, 0x4FBEE42A);
	if (!ts->eflags.zero) {
        goto loc_4E6C02;
    }

loc_4E67B8:
	cmp(&ts->eflags, ts->eax, 0x911AB364);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4E6962;
    }
	if (ts->eflags.zero) {
        goto loc_4E690E;
    }
	cmp(&ts->eflags, ts->eax, 0x35F8620B);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4E688C;
    }
	if (ts->eflags.zero) {
        goto loc_4E6847;
    }
	cmp(&ts->eflags, ts->eax, 0xC407210);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4E6828;
    }
	if (ts->eflags.zero) {
        goto loc_4E68B6;
    }
	cmp(&ts->eflags, ts->eax, 0x64);
	if (ts->eflags.zero) {
        goto loc_4E681B;
    }
	cmp(&ts->eflags, ts->eax, 0x153E234);
	if (!ts->eflags.zero) {
        goto loc_4E6C02;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x11C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E6C02;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x74, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x74, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E6C02;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x64, 4));
	game::sub_4958D0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4E681B:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_4A0F90(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4E6828:
	cmp(&ts->eflags, ts->eax, 0x1C6D9C35);
	if (!ts->eflags.zero) {
        goto loc_4E6C02;
    }
	push(mv, &ts->esp, 0x836390);
	mov(&ts->ecx, ts->esi);
	game::sub_4BCDB0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x60, 1), 0x0);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4E6847:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FEF4);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, 0x8384E0);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x7F44B4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FEF4);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x20);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_4D49D0(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_542720(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4E688C:
	cmp(&ts->eflags, ts->eax, 0x5073EF13);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4E68F6;
    }
	if (ts->eflags.zero) {
        goto loc_4E68D7;
    }
	cmp(&ts->eflags, ts->eax, 0x406415E3);
	if (ts->eflags.zero) {
        goto loc_4E68B6;
    }
	cmp(&ts->eflags, ts->eax, 0x4FBEE42A);
	if (!ts->eflags.zero) {
        goto loc_4E6C02;
    }
	mov(mv, x86::mem(ts->esi + 0x124, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x51, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4E68B6:
	push(mv, &ts->esp, 0x790210);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4E6C02;
    }
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_4A0F90(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4E68D7:
	dec(mv, x86::mem(ts->esi + 0x114, 4));
	if (!ts->eflags.sign) {
        goto loc_4E68E9;
    }
	mov(mv, x86::mem(ts->esi + 0x114, 4), 0x4);

loc_4E68E9:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_4D49D0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4E68F6:
	cmp(&ts->eflags, ts->eax, 0x72619778);
	if (!ts->eflags.zero) {
        goto loc_4E6C02;
    }
	push(mv, &ts->esp, 0xFFFFFFFF);
	mov(&ts->ecx, ts->esi);
	game::sub_4D4F00(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4E690E:
	push(mv, &ts->esp, 0x4B);
	game::sub_50D180(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F5B8);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x7F44B4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79031C);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79031C);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, 0x8384E0);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x34);
	mov(mv, x86::mem(ts->esi + 0x51, 1), 0x1);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4E6962:
	cmp(&ts->eflags, ts->eax, 0xC519BFC0);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4E6A19;
    }
	if (ts->eflags.zero) {
        goto loc_4E69C3;
    }
	cmp(&ts->eflags, ts->eax, 0x9803F6E2);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4E69AD;
    }
	if (ts->eflags.zero) {
        goto loc_4E69A2;
    }
	cmp(&ts->eflags, ts->eax, 0x911C0A4B);
	if (ts->eflags.zero) {
        goto loc_4E6995;
    }
	cmp(&ts->eflags, ts->eax, 0x9120409E);
	if (!ts->eflags.zero) {
        goto loc_4E6C02;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_4BCFF0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4E6995:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_4D4F00(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4E69A2:
	mov(&ts->ecx, ts->esi);
	game::sub_4BD090(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4E69AD:
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_4E6C02;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_4D4FC0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4E69C3:
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8651AC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x83A9C8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7F942C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_4E6C02;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x60, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4E6C02;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x79799C);
	mov(mv, x86::mem(ts->esi + 0x60, 1), 0x1);
	game::sub_555EB0(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4E6A19:
	cmp(&ts->eflags, ts->eax, 0xD9FEEC59);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4E6BC5;
    }
	if (ts->eflags.zero) {
        goto loc_4E6B9A;
    }
	cmp(&ts->eflags, ts->eax, 0xC98356BA);
	if (ts->eflags.zero) {
        goto loc_4E6A5C;
    }
	cmp(&ts->eflags, ts->eax, 0xC9D30688);
	if (!ts->eflags.zero) {
        goto loc_4E6C02;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79031C);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	mov(mv, x86::mem(ts->esi + 0x60, 1), 0x0);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4E6A5C:
	game::sub_582B60(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_584F10(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_4BCE60(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8651AC, 4));
	sub(mv, &ts->eax, x86::mem(ts->esi + 0x1C4, 4));
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78DFB8, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4E6AB6;
    }
	game::sub_582B60(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0xFC, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_4E6AB6;
    }
	mov(mv, &ts->ecx, x86::mem(0x8651AC, 4));
	mov(mv, x86::mem(ts->esi + 0x1C4, 4), ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_4BCF00(ts, mv);

loc_4E6AB6:
	mov(mv, &ts->edx, x86::mem(0x7F44B4, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E6AD9;
    }
	mov(mv, &ts->eax, x86::mem(0x7F44B4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_51CE80(ts, mv);
	add(&ts->esp, 0x8);

loc_4E6AD9:
	push(mv, &ts->esp, 0x796230);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E6AF9;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796230);
	game::sub_51CE80(ts, mv);
	add(&ts->esp, 0x8);

loc_4E6AF9:
	push(mv, &ts->esp, 0x796214);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E6B19;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x796214);
	game::sub_51CE80(ts, mv);
	add(&ts->esp, 0x8);

loc_4E6B19:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1C0, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E6B34;
    }
	mov(mv, x86::mem(0x83637C, 4), 0x0);
	mov(mv, x86::mem(ts->esi + 0x1C0, 1), 0x0);

loc_4E6B34:
	mov(mv, &ts->eax, x86::mem(0x83637C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E6B4D;
    }
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_4D49D0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x1C0, 1), 0x1);

loc_4E6B4D:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x51, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E6C02;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_5379A0(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x124, 1));
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, x86::mem(ts->esi + 0x51, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_4E6B84;
    }
	push(mv, &ts->esp, 0x8384E0);
	push(mv, &ts->esp, 0xF764CBE7);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);

loc_4E6B84:
	push(mv, &ts->esp, 0x8384E0);
	push(mv, &ts->esp, 0x5D1A570F);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4E6B9A:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	inc(&ts->ecx);
	mov(&ts->eax, ts->ecx);
	cmp(&ts->eflags, ts->eax, 0x4);
	mov(mv, x86::mem(ts->esi + 0x114, 4), ts->ecx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4E6BB8;
    }
	mov(mv, x86::mem(ts->esi + 0x114, 4), 0x0);

loc_4E6BB8:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_4D49D0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4E6BC5:
	cmp(&ts->eflags, ts->eax, 0xDA5B8712);
	if (!ts->eflags.zero) {
        goto loc_4E6C02;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79031C);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	mov(&ts->ecx, ts->esi);
	game::sub_4A15D0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E6BFE;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_50CED0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_4BCDB0(ts, mv);

loc_4E6BFE:
	mov(mv, x86::mem(ts->esi + 0x60, 1), 0x0);

loc_4E6C02:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);
}

void sub_4E6C10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4D50D0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4E6C28;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4E6C28:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4E6C30(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	sub(&ts->esp, 0x6FC);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x8, 4));
	cmp(&ts->eflags, ts->esi, 0xD15C04EC);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4E6C61;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_5379A0(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E6C61:
	mov(mv, &ts->al, x86::mem(0x838521, 1));
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E6C73;
    }
	mov(mv, x86::mem(ts->ebx + 0x10D, 1), 0x1);

loc_4E6C73:
	cmp(&ts->eflags, ts->esi, 0xC98356BA);
	if (ts->eflags.zero) {
        goto loc_4E6CA1;
    }
	cmp(&ts->eflags, ts->esi, 0x153E234);
	if (ts->eflags.zero) {
        goto loc_4E6CA1;
    }
	cmp(&ts->eflags, ts->esi, 0xE1FDE1D1);
	if (ts->eflags.zero) {
        goto loc_4E6CA1;
    }
	cmp(&ts->eflags, ts->esi, 0x4FBEE42A);
	if (ts->eflags.zero) {
        goto loc_4E6CA1;
    }
	mov(mv, &ts->al, x86::mem(ts->ebx + 0x10D, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto def_4E6D29;
    }

loc_4E6CA1:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_4A0000(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E6D0B;
    }
	cmp(&ts->eflags, ts->esi, 0xC407210);
	if (ts->eflags.zero) {
        goto def_4E6D29;
    }
	cmp(&ts->eflags, ts->esi, 0x406415E3);
	if (ts->eflags.zero) {
        goto def_4E6D29;
    }
	cmp(&ts->eflags, ts->esi, 0x911AB364);
	if (ts->eflags.zero) {
        goto def_4E6D29;
    }
	cmp(&ts->eflags, ts->esi, 0x72619778);
	if (ts->eflags.zero) {
        goto def_4E6D29;
    }
	cmp(&ts->eflags, ts->esi, 0x911C0A4B);
	if (ts->eflags.zero) {
        goto def_4E6D29;
    }
	cmp(&ts->eflags, ts->esi, 0x9120409E);
	if (ts->eflags.zero) {
        goto def_4E6D29;
    }
	cmp(&ts->eflags, ts->esi, 0xB5971BF1);
	if (ts->eflags.zero) {
        goto def_4E6D29;
    }

loc_4E6D0B:
	cmp(&ts->eflags, ts->esi, 0x153E234);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4E7026;
    }
	if (ts->eflags.zero) {
        goto loc_4E6F9A;
    }
	lea(mv, &ts->eax, x86::mem(ts->esi - 0x2, 4));
	cmp(&ts->eflags, ts->eax, 0x9);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4E6D29;
    }
	jmp(x86::mem(0x4E7400, 4));

loc_4E6D30:
	mov(mv, x86::mem(ts->esp + 0x10, 1), 0x0);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x7F);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x11, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	push(mv, &ts->esp, 0x836014);
	push(mv, &ts->esp, 0x8D0A8371);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, 0x200);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x4, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->eax);
	game::sub_558750(ts, mv);
	add(&ts->esp, 0x34);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E6D98:
	mov(mv, &ts->edx, x86::mem(0x836378, 4));
	xor_(&ts->ecx, ts->ecx);
	cmp(&ts->eflags, ts->edx, ts->edi);
	setnz(ts->eflags, &ts->cl);
	inc(&ts->ecx);
	mov(mv, x86::mem(0x836378, 4), ts->ecx);

loc_4E6DAC:
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x7979B0);
	game::sub_555EB0(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E6DCC:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x4C, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto def_4E6D29;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->ebx + 0x4C, 4), ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E6DEC:
	cmp(mv, &ts->eflags, x86::mem(0x835FD4, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_4E6ED4;
    }
	game::sub_582B60(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xF8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x4AE670);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x836014);
	push(mv, &ts->esp, ts->eax);
	game::sub_73FAD0(ts, mv);
	add(&ts->esp, 0x14);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto def_4E6D29;
    }
	push(mv, &ts->esp, 0x836014);
	push(mv, &ts->esp, 0x91070FF2);
	mov(&ts->ecx, ts->ebx);
	game::sub_4A1700(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E6E3A:
	cmp(mv, &ts->eflags, x86::mem(0x835FD4, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_4E6ED4;
    }
	game::sub_582B60(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xF8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x4AE670);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x836014);
	push(mv, &ts->esp, ts->eax);
	game::sub_73FAD0(ts, mv);
	add(&ts->esp, 0x14);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto def_4E6D29;
    }
	push(mv, &ts->esp, 0x836014);
	push(mv, &ts->esp, 0xC744B7AB);
	mov(&ts->ecx, ts->ebx);
	game::sub_4A1700(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E6E89:
	cmp(mv, &ts->eflags, x86::mem(0x835FD4, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_4E6ED4;
    }
	game::sub_582B60(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xF8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x4AE690);
	push(mv, &ts->esp, 0x3);
	push(mv, &ts->esp, 0x836014);
	push(mv, &ts->esp, ts->eax);
	game::sub_73FAD0(ts, mv);
	add(&ts->esp, 0x14);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto def_4E6D29;
    }
	push(mv, &ts->esp, 0x836014);
	push(mv, &ts->esp, 0x7F1025E7);
	mov(&ts->ecx, ts->ebx);
	game::sub_4A1700(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E6ED4:
	mov(mv, &ts->ebx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0x2106E2FE);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x34DC1BEC);
	push(mv, &ts->esp, 0x34DC1BEC);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->ebx);
	game::sub_558540(ts, mv);
	add(&ts->esp, 0x1C);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E6F08:
	mov(&ts->ecx, ts->ebx);
	game::sub_4BD490(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E6F18:
	game::sub_582B60(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xF8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x4AE690);
	push(mv, &ts->esp, 0x836014);
	push(mv, &ts->esp, ts->eax);
	game::sub_7406E0(ts, mv);
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto def_4E6D29;
    }
	push(mv, &ts->esp, 0x836014);
	push(mv, &ts->esp, 0x78300EBF);
	mov(&ts->ecx, ts->ebx);
	game::sub_4A1700(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E6F59:
	game::sub_582B60(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xF8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x4AE6B0);
	push(mv, &ts->esp, 0x836014);
	push(mv, &ts->esp, ts->eax);
	game::sub_73F990(ts, mv);
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto def_4E6D29;
    }
	push(mv, &ts->esp, 0x836014);
	push(mv, &ts->esp, 0xA33AA702);
	mov(&ts->ecx, ts->ebx);
	game::sub_4A1700(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E6F9A:
	mov(mv, &ts->al, x86::mem(ts->ebx + 0x10D, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E6FBC;
    }
	lea(mv, &ts->ecx, x86::mem(ts->ebx + 0x54, 4));
	mov(mv, x86::mem(ts->ebx + 0x10D, 1), 0x0);
	game::sub_4958D0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E6FBC:
	push(mv, &ts->esp, 0x836014);
	game::sub_582B60(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_582BB0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E7005;
    }
	mov(mv, &ts->eax, x86::mem(0x836010, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_73ED70(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4E6FED;
    }
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edi);
	game::sub_50CEE0(ts, mv);
	add(&ts->esp, 0x8);

loc_4E6FED:
	mov(&ts->ecx, ts->ebx);
	game::sub_4D5490(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->ebx + 0x54, 4));
	game::sub_4958D0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E7005:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F5B8);

loc_4E700C:
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E7026:
	cmp(&ts->eflags, ts->esi, 0x911AB364);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4E71A4;
    }
	if (ts->eflags.zero) {
        goto loc_4E717F;
    }
	cmp(&ts->eflags, ts->esi, 0x35F8620B);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4E7100;
    }
	if (ts->eflags.zero) {
        goto loc_4E70E9;
    }
	cmp(&ts->eflags, ts->esi, 0xC407210);
	if (ts->eflags.zero) {
        goto loc_4E716F;
    }
	cmp(&ts->eflags, ts->esi, 0x1CAD26E2);
	if (ts->eflags.zero) {
        goto loc_4E708B;
    }
	cmp(&ts->eflags, ts->esi, 0x34DC1BEC);
	if (!ts->eflags.zero) {
        goto def_4E6D29;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F5B8);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E708B:
	mov(mv, &ts->al, x86::mem(ts->ebx + 0x110, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto def_4E6D29;
    }
	mov(mv, &ts->al, x86::mem(ts->ebx + 0x111, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto def_4E6D29;
    }
	mov(mv, &ts->al, x86::mem(ts->ebx + 0x112, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto def_4E6D29;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x4C, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4E70C8;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->ebx + 0x4C, 4), ts->edi);

loc_4E70C8:
	push(mv, &ts->esp, 0x836014);
	mov(mv, x86::mem(ts->ebx + 0x110, 1), 0x0);
	game::sub_582B60(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_5830B0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E70E9:
	mov(&ts->ecx, ts->ebx);
	game::sub_4D5490(ts, mv);
	mov(&ts->ecx, ts->ebx);
	game::sub_542720(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E7100:
	cmp(&ts->eflags, ts->esi, 0x406415E3);
	if (ts->eflags.zero) {
        goto loc_4E716F;
    }
	cmp(&ts->eflags, ts->esi, 0x4FBEE42A);
	if (ts->eflags.zero) {
        goto loc_4E712E;
    }
	cmp(&ts->eflags, ts->esi, 0x72619778);
	if (!ts->eflags.zero) {
        goto def_4E6D29;
    }
	push(mv, &ts->esp, 0xFFFFFFFF);
	mov(&ts->ecx, ts->ebx);
	game::sub_4A17B0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E712E:
	xor_(&ts->esi, ts->esi);

loc_4E7130:
	push(mv, &ts->esp, ts->esi);
	game::sub_58F6D0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_5847F0(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4E7158;
    }
	add(&ts->eax, 0xC);
	push(mv, &ts->esp, 0x836014);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	inc(&ts->esi);
	cmp(&ts->eflags, ts->esi, 0x5);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4E7130;
    }

loc_4E7158:
	mov(mv, x86::mem(ts->ebx + 0x100, 1), 0x1);
	mov(mv, x86::mem(ts->ebx + 0x10C, 1), 0x1);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E716F:
	mov(&ts->ecx, ts->ebx);
	game::sub_4D5190(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E717F:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F5B8);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ebx + 0x11, 1), 0x1);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E71A4:
	cmp(&ts->eflags, ts->esi, 0xC98356BA);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4E73A0;
    }
	if (ts->eflags.zero) {
        goto loc_4E7282;
    }
	cmp(&ts->eflags, ts->esi, 0x911C0A4B);
	if (ts->eflags.zero) {
        goto loc_4E7251;
    }
	cmp(&ts->eflags, ts->esi, 0x97C1B72F);
	if (ts->eflags.zero) {
        goto loc_4E720F;
    }
	cmp(&ts->eflags, ts->esi, 0x9803F6E2);
	if (!ts->eflags.zero) {
        goto def_4E6D29;
    }
	lea(mv, &ts->ecx, x86::mem(ts->ebx + 0x54, 4));
	game::sub_54EB80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_52D100(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto def_4E6D29;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x911AB364);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E720F:
	mov(mv, x86::mem(ts->ebx + 0x112, 1), 0x1);
	game::sub_582B60(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xF8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x836014);
	push(mv, &ts->esp, ts->eax);
	game::sub_73FB50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F5B8);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x24);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E7251:
	add(&ts->ebx, 0x54);
	mov(&ts->ecx, ts->ebx);
	game::sub_54EB40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x2C, 4));
	cmp(&ts->eflags, ts->ecx, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4E7270;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, ts->edx);
	game::sub_51EE80(ts, mv);

loc_4E7270:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->ebx);
	game::sub_538500(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E7282:
	game::sub_582B60(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_584F10(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(0x83637C, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_4E7316;
    }
	push(mv, &ts->esp, 0x836014);
	game::sub_582B60(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_582BB0(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4E72BA;
    }
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x214, 4));
	push(mv, &ts->esp, ts->eax);
	goto loc_4E72F9;

loc_4E72BA:
	mov(mv, &ts->al, x86::mem(ts->ebx + 0x10F, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4E730F;
    }
	game::sub_582B60(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xF8, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x836014);
	push(mv, &ts->esp, ts->ecx);
	game::sub_740790(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x836014);
	game::sub_582B60(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_582BB0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x490, 4));
	push(mv, &ts->esp, ts->edx);

loc_4E72F9:
	game::sub_49E870(ts, mv);
	mov(&ts->esi, ts->eax);
	mov(&ts->edi, 0x835FB8);
	mov(&ts->ecx, 0x9F);
	add(&ts->esp, 0x8);
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));

loc_4E730F:
	mov(&ts->ecx, ts->ebx);
	game::sub_4D5490(ts, mv);

loc_4E7316:
	mov(mv, &ts->al, x86::mem(ts->ebx + 0x100, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E7377;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_5379A0(ts, mv);
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, 0x7902A0);
	mov(mv, x86::mem(ts->ebx + 0x100, 1), 0x0);
	game::sub_537950(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->ebx + 0x10C, 1));
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto def_4E6D29;
    }
	push(mv, &ts->esp, 0x7902A0);
	push(mv, &ts->esp, 0x4FBEE42A);
	game::sub_55DDA0(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x8384E0);
	game::sub_537950(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E7377:
	push(mv, &ts->esp, 0x7902A0);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto def_4E6D29;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x7902A0);
	game::sub_51CE80(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E73A0:
	cmp(&ts->eflags, ts->esi, 0xCA4CB0DD);
	if (ts->eflags.zero) {
        goto loc_4E73ED;
    }
	cmp(&ts->eflags, ts->esi, 0xDA5B8712);
	if (ts->eflags.zero) {
        goto loc_4E73E1;
    }
	cmp(&ts->eflags, ts->esi, 0xE1FDE1D1);
	if (!ts->eflags.zero) {
        goto def_4E6D29;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79031C);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, 0x7902A0);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	mov(mv, x86::mem(ts->ebx + 0x100, 1), 0x1);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E73E1:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79031C);
	goto loc_4E700C;

loc_4E73ED:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->ebx);
	game::sub_4A1750(ts, mv);

def_4E6D29:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);
}

void sub_4E7430(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x24);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebx, ts->ecx);
	mov(&ts->ebp, 0x1);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x7);

loc_4E7446:
	push(mv, &ts->esp, 0x34);
	game::j__malloc(ts, mv);
	xor_(&ts->esi, ts->esi);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4E7487;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->eax, 4), 0x79B9D4);
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x24, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x20, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x1C, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x18, 4), ts->esi);
	mov(mv, x86::mem(ts->eax + 0x28, 1), 0x1);
	mov(mv, x86::mem(ts->eax + 0x2C, 4), 0x78F228);
	mov(mv, x86::mem(ts->eax + 0x30, 4), 0x78F21C);
	mov(&ts->esi, ts->eax);

loc_4E7487:
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x796328);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->ebx + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537A10(ts, mv);
	push(mv, &ts->esp, 0x10);
	mov(&ts->edi, ts->eax);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x20);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E74CB;
    }
	mov(mv, x86::mem(ts->eax, 4), 0x790C2C);
	mov(mv, x86::mem(ts->eax + 0xC, 4), ts->edi);
	add(&ts->eax, 0x4);
	goto loc_4E74CD;

loc_4E74CB:
	xor_(&ts->eax, ts->eax);

loc_4E74CD:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x10, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->ebx + 0x54, 4));
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	game::sub_52E770(ts, mv);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x796288);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->ebx + 0x4, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x2C, 4));
	add(&ts->esp, 0x1C);
	inc(&ts->ebp);
	dec(&ts->eax);
	mov(mv, x86::mem(ts->esi + 0x20, 4), 0x438C8000);
	mov(mv, x86::mem(ts->esi + 0x24, 4), 0x41C80000);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4E7446;
    }
	mov(&ts->ecx, ts->ebx);
	game::sub_4D5490(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x24);
	retn(mv, &ts->esp);
}

void sub_4E7540(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x775EA9);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x280);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x290, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ebp);
	game::sub_551DE0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	xor_(&ts->ebx, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x7979D0);
	push(mv, &ts->esp, 0x7976C8);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->ebp + 0x64, 4));
	mov(mv, x86::mem(ts->esp + 0x2B4, 4), ts->ebx);
	mov(mv, x86::mem(ts->ebp, 4), 0x796334);
	mov(mv, x86::mem(ts->ebp + 0x4C, 4), ts->ebx);
	mov(mv, x86::mem(ts->ebp + 0x50, 1), ts->bl);
	mov(mv, x86::mem(ts->ebp + 0x51, 1), ts->bl);
	mov(mv, x86::mem(ts->ebp + 0x60, 1), ts->bl);
	game::sub_542CA0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x7978E0);
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->ebp + 0x110, 4));
	mov(mv, x86::mem(ts->esp + 0x2AC, 1), 0x1);
	game::sub_542AC0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, 0x6D851451);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	mov(mv, x86::mem(ts->ebp + 0x1168, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x24, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_51BD70(ts, mv);
	mov(mv, x86::mem(ts->ebp + 0x116C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x1168, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x74, 4));
	push(mv, &ts->esp, 0x1);
	mov(mv, x86::mem(ts->ebp + 0x1170, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x1C, 4));
	push(mv, &ts->esp, 0x78FEF4);
	xor_(&ts->eax, ts->eax);
	push(mv, &ts->esp, 0x47FF4E7C);
	mov(mv, x86::mem(ts->ebp + 0x1174, 4), ts->edx);
	mov(mv, x86::mem(ts->ebp + 0x1178, 4), 0xC);
	mov(mv, x86::mem(ts->ebp + 0x117C, 4), ts->ebx);
	mov(mv, x86::mem(ts->ebp + 0x1380, 1), ts->bl);
	mov(&ts->ecx, 0x400);
	lea(mv, &ts->edi, x86::mem(ts->ebp + 0x168, 4));
	push(mv, &ts->esp, 0x790210);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x1C);
	mov(&ts->ecx, ts->ebp);
	game::sub_4D5990(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, 0xB8A7C6CE);
	push(mv, &ts->esp, ts->eax);
	game::sub_52CEA0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x836014);
	game::sub_582B60(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_582BB0(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4E7679;
    }
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ecx);
	goto loc_4E76AB;

loc_4E7679:
	game::sub_582B60(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0xF8, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x836014);
	push(mv, &ts->esp, ts->edx);
	game::sub_740790(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x836014);
	game::sub_582B60(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_582BB0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);

loc_4E76AB:
	game::sub_49E870(ts, mv);
	mov(&ts->esi, ts->eax);
	mov(&ts->edi, 0x835FB8);
	mov(&ts->ecx, 0x9F);
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(0x836010, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->ecx);
	game::sub_73ED70(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E76DD;
    }
	mov(&ts->ecx, ts->ebp);
	game::sub_4D5A30(ts, mv);
	goto loc_4E7707;

loc_4E76DD:
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, 0xEC);
	push(mv, &ts->esp, 0x9A2E5F7B);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x6D851451);
	mov(&ts->ecx, ts->ebp);
	game::sub_555F80(ts, mv);

loc_4E7707:
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, 0x53F9FD5C);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x7979C8);
	push(mv, &ts->esp, ts->esi);
	game::sub_542600(ts, mv);
	add(&ts->esp, 0x10);
	xor_(&ts->eax, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->ebp + 0x1180, 4));
	goto loc_4E7730;

loc_4E7730:
	mov(mv, x86::mem(ts->ecx, 2), ts->ax);
	inc(&ts->eax);
	add(&ts->ecx, 0x2);
	cmp(&ts->eflags, ts->eax, 0x100);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4E7730;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x8384E0);
	game::sub_537950(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x7902A0);
	game::sub_537950(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x2A0, 4));
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->eax, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x28C);
	retn(mv, &ts->esp, 0x4);

loc_775E90:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x28C, 4));
	goto sub_510D40;

loc_775E9B:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x28C, 4));
	add(&ts->ecx, 0x64);
	goto sub_4CBBA0;

SEH_4E7540:
	mov(&ts->eax, 0x7E1458);
	goto ___CxxFrameHandler;
}

void sub_4E7780(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4D5920(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4E7798;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4E7798:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4E77A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF8);
	sub(&ts->esp, 0x384);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0x9120409E);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebx, ts->ecx);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4E7A37;
    }
	if (ts->eflags.zero) {
        goto loc_4E79AB;
    }
	cmp(&ts->eflags, ts->eax, 0x72619778);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4E7943;
    }
	if (ts->eflags.zero) {
        goto loc_4E791E;
    }
	cmp(&ts->eflags, ts->eax, 0x153E234);
	if (ts->eflags.zero) {
        goto loc_4E77EF;
    }
	cmp(&ts->eflags, ts->eax, 0xC407210);
	if (ts->eflags.zero) {
        goto loc_4E781F;
    }
	cmp(&ts->eflags, ts->eax, 0x35F8620B);
	if (!ts->eflags.zero) {
        goto def_4E7B8C;
    }

loc_4E77EF:
	mov(&ts->ecx, ts->ebx);
	game::sub_4BDC30(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_51CD60(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x14);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E781F:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto def_4E7B8C;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x10, 4));
	cmp(&ts->eflags, ts->eax, 0xB8A7C6CC);
	if (ts->eflags.zero) {
        goto loc_4E78C0;
    }
	cmp(&ts->eflags, ts->eax, 0xB8A7C6CD);
	if (ts->eflags.zero) {
        goto loc_4E7890;
    }
	cmp(&ts->eflags, ts->eax, 0xB8A7C6CE);
	if (!ts->eflags.zero) {
        goto def_4E7B8C;
    }
	mov(mv, &ts->al, x86::mem(ts->ebx + 0x1380, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E786F;
    }
	game::sub_582B60(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xF8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_73EA00(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->ebx + 0x1380, 1), 0x0);

loc_4E786F:
	push(mv, &ts->esp, 0x1);

loc_4E7871:
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0x78F5B8);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E7890:
	push(mv, &ts->esp, 0x7962E4);
	push(mv, &ts->esp, 0x8363A0);
	game::sub_43DBD0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x7962BC);
	game::sub_555EB0(ts, mv);
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E78C0:
	mov(mv, &ts->eax, x86::mem(0x8651AC, 4));
	sub(mv, &ts->eax, x86::mem(0x83A9C8, 4));
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7F942C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto def_4E7B8C;
    }
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, 0xEC);
	push(mv, &ts->esp, 0x9A2E5F7B);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x6D851451);
	mov(&ts->ecx, ts->ebx);
	game::sub_555F80(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E791E:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x1178, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->ebx + 0x117C, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4E7933;
    }
	inc(&ts->eax);
	mov(mv, x86::mem(ts->ebx + 0x1178, 4), ts->eax);

loc_4E7933:
	mov(&ts->ecx, ts->ebx);
	game::sub_4BDC30(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E7943:
	cmp(&ts->eflags, ts->eax, 0x911AB364);
	if (ts->eflags.zero) {
        goto loc_4E7965;
    }
	cmp(&ts->eflags, ts->eax, 0x911C0A4B);
	if (!ts->eflags.zero) {
        goto def_4E7B8C;
    }
	mov(&ts->ecx, ts->ebx);
	game::sub_4BDD90(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E7965:
	mov(mv, &ts->al, x86::mem(ts->ebx + 0x1380, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E798A;
    }
	game::sub_582B60(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xF8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_73EA00(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->ebx + 0x1380, 1), 0x0);

loc_4E798A:
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F5B8);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E79AB:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto def_4E7B8C;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x10, 4));
	cmp(&ts->eflags, ts->eax, 0xB8A7C6CE);
	if (!ts->eflags.zero) {
        goto loc_4E79F6;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, 0xB8A7C6CD);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F21C);
	push(mv, &ts->esp, 0xB8A7C6CE);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x20);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E79F6:
	cmp(&ts->eflags, ts->eax, 0xB8A7C6CD);
	if (!ts->eflags.zero) {
        goto def_4E7B8C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, 0xB8A7C6CC);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F21C);
	push(mv, &ts->esp, 0xB8A7C6CD);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x20);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E7A37:
	cmp(&ts->eflags, ts->eax, 0xC9D30688);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4E7BE2;
    }
	if (ts->eflags.zero) {
        goto loc_4E7BB3;
    }
	cmp(&ts->eflags, ts->eax, 0x9803F6E2);
	if (ts->eflags.zero) {
        goto loc_4E7B60;
    }
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	if (ts->eflags.zero) {
        goto loc_4E7AD4;
    }
	cmp(&ts->eflags, ts->eax, 0xC98356BA);
	if (!ts->eflags.zero) {
        goto def_4E7B8C;
    }
	game::sub_582B60(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_584F10(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->ebx + 0x51, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E7A88;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_5379A0(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->ebx + 0x51, 1), 0x0);

loc_4E7A88:
	game::sub_582B60(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0xFC, 4), 0x1);
	if (!ts->eflags.zero) {
        goto def_4E7B8C;
    }
	push(mv, &ts->esp, 0x836014);
	game::sub_582B60(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_582BB0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto def_4E7B8C;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_73ED70(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto def_4E7B8C;
    }
	mov(&ts->ecx, ts->ebx);
	game::sub_4D5BD0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E7AD4:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto def_4E7B8C;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x10, 4));
	cmp(&ts->eflags, ts->eax, 0xB8A7C6CC);
	if (!ts->eflags.zero) {
        goto loc_4E7B1F;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, 0xB8A7C6CD);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F21C);
	push(mv, &ts->esp, 0xB8A7C6CC);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x20);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E7B1F:
	cmp(&ts->eflags, ts->eax, 0xB8A7C6CD);
	if (!ts->eflags.zero) {
        goto def_4E7B8C;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, 0xB8A7C6CE);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F21C);
	push(mv, &ts->esp, 0xB8A7C6CD);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x20);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E7B60:
	lea(mv, &ts->ecx, x86::mem(ts->ebx + 0x64, 4));
	game::sub_54EB80(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->ebx + 0x110, 4));
	game::sub_538130(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x14C, 4));
	add(&ts->eax, 0xA);
	cmp(&ts->eflags, ts->eax, 0x14);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4E7B8C;
    }
	movzx(mv, &ts->edx, x86::mem(ts->eax + 0x4E7D78, 1));
	jmp(x86::mem(0x4E7D6C, 4));

loc_4E7B93:
	mov(&ts->ecx, ts->ebx);
	game::sub_4BDD90(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E7BA3:
	mov(&ts->ecx, ts->ebx);
	game::sub_4BDD70(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E7BB3:
	mov(mv, &ts->al, x86::mem(ts->ebx + 0x168, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, 0x1);
	if (ts->eflags.zero) {
        goto loc_4E7871;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0x79031C);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E7BE2:
	cmp(&ts->eflags, ts->eax, 0xDA5B8712);
	if (ts->eflags.zero) {
        goto loc_4E7CA5;
    }
	cmp(&ts->eflags, ts->eax, 0xE1FDE1D1);
	if (!ts->eflags.zero) {
        goto def_4E7B8C;
    }
	game::sub_582B60(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0xFC, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_4E7C69;
    }
	push(mv, &ts->esp, 0x836014);
	game::sub_582B60(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_582BB0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E7C3A;
    }
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x118, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_49E870(ts, mv);
	mov(&ts->ecx, 0x9F);
	mov(&ts->esi, ts->eax);
	mov(&ts->edi, 0x835FB8);
	add(&ts->esp, 0x8);
	movs(mv, x86::mem(ts->edi, 4), x86::mem(ts->esi, 4));

loc_4E7C3A:
	mov(mv, &ts->eax, x86::mem(0x836010, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	game::sub_73EE20(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	game::sub_50CEE0(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x9757A0C0);
	game::sub_55DDE0(ts, mv);
	add(&ts->esp, 0x18);
	mov(mv, x86::mem(0x83637C, 4), 0x1);

loc_4E7C69:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79031C);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, 0x8384E0);
	game::sub_537C00(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79031C);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, 0x790210);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x20);
	mov(mv, x86::mem(ts->ebx + 0x51, 1), 0x1);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4E7CA5:
	mov(mv, x86::mem(ts->esp + 0x10, 1), 0x0);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x3F);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x11, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	mov(&ts->ecx, ts->ebx);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	game::sub_50CED0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_43DDA0(ts, mv);
	push(mv, &ts->esp, 0x1);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0x40);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, 0x79031C);
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x1C);
	mov(&ts->ecx, 0x850080);
	game::sub_5031F0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_43DDA0(ts, mv);
	push(mv, &ts->esp, 0x796358);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DDA0(ts, mv);
	add(&ts->esp, 0x18);
	mov(&ts->ecx, ts->ebx);
	game::sub_50CED0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43DDA0(ts, mv);
	add(&ts->esp, 0xC);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebx);
	game::sub_4BDD20(ts, mv);
	mov(&ts->ecx, ts->ebx);
	game::sub_50CED0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	game::sub_4BDA20(ts, mv);
	mov(mv, x86::mem(ts->ebx + 0x60, 1), 0x0);

def_4E7B8C:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);
}

void sub_4E7D90(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776178);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	game::sub_552330(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	mov(mv, x86::mem(ts->esi, 4), 0x7979D8);
	game::sub_4BDE40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_776170:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto ??1strstreambuf@std@@UAE@XZ_5;

SEH_4EB7A0:
	mov(&ts->eax, 0x7E0EB8);
	goto ___CxxFrameHandler;
}

void sub_4E7DE0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4E7E00(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4E7DF8;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4E7DF8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4E7E00(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x7979D8);
	goto ??1strstreambuf@std@@UAE@XZ_5;
}

void sub_4E7E10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7749F3);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x20, 4));
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->esi);
	game::sub_551DE0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	xor_(&ts->ebx, ts->ebx);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x64, 4));
	mov(mv, x86::mem(ts->esp + 0x34, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi, 4), 0x79635C);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x50, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x51, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x60, 1), ts->bl);
	game::sub_542CA0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x796484);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x110, 4));
	mov(mv, x86::mem(ts->esp + 0x2C, 1), 0x1);
	game::sub_542AC0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x168, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x16C, 4), ts->ebx);
	mov(mv, x86::mem(0x835BF8, 4), ts->ebx);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	game::sub_504820(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x81AB4717);
	push(mv, &ts->esp, 0xB2980BA8);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x7902A0);
	game::sub_537950(ts, mv);
	add(&ts->esp, 0x10);
	mov(&ts->ecx, ts->esi);
	game::sub_4D5D70(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_4D5E70(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x444969FD);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A60(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x170, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x444969FE);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A60(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	add(&ts->esp, 0x10);
	mov(mv, x86::mem(ts->esi + 0x174, 4), ts->eax);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x108, 4), 0xC407210);
	mov(mv, x86::mem(ts->esi + 0x10C, 1), 0x1);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_7749E0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

loc_7749E8:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x64);
	goto sub_4CBBA0;

SEH_4E7E10:
	mov(&ts->eax, 0x7E1484);
	goto ___CxxFrameHandler;
}

void sub_4E7F30(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4D5D10(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4E7F48;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4E7F48:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4E7F50(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x797A00);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537A60(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x7979F4);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->eax);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537A60(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x124, 4));
	push(mv, &ts->esp, 0x78FCD8);
	mov(mv, x86::mem(ts->esi + 0x50, 4), ts->eax);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x1C);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E7FAB;
    }
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->edi, ts->eax);
	goto loc_4E7FD4;

loc_4E7FAB:
	push(mv, &ts->esp, 0x7906DC);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E7FD2;
    }
	push(mv, &ts->esp, 0x7906DC);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E7FD2;
    }
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x4C, 4));
	goto loc_4E7FD4;

loc_4E7FD2:
	xor_(&ts->edi, ts->edi);

loc_4E7FD4:
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, 0x8371B0);
	game::sub_413440(ts, mv);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(0x83623C, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4E7FFB;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x8371B0);
	mov(&ts->ecx, ts->edi);
	game::sub_4D8C70(ts, mv);

loc_4E7FFB:
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	goto loc_4A23F0;

loc_4A2370:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x124, 4));
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x54, 4));
	game::sub_5B53A0(ts, mv);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_4FF550(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x124, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x98, 4));
	game::sub_5B6A20(ts, mv);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_4FF550(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0x18, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x124, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	add(&ts->esi, 0xDC);
	game::sub_5B5490(ts, mv);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_4FF550(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	jmp(x86::mem(ts->eax + 0x18, 4));

loc_4A23F0:
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x790338);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x42ADB44C);
	push(mv, &ts->esp, ts->edi);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x124, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ecx);
	game::sub_511E60(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(&ts->edi, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	game::sub_4901D0(ts, mv);
	add(&ts->esp, 0x1C);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A244B;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C990(ts, mv);
	add(&ts->esp, 0x8);
	goto loc_4A2462;

loc_4A244B:
	push(mv, &ts->esp, 0x790324);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50C990(ts, mv);
	add(&ts->esp, 0xC);

loc_4A2462:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x124, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edx);
	game::sub_511E60(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(&ts->edi, ts->eax);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->edi);
	game::sub_4901D0(ts, mv);
	add(&ts->esp, 0x14);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4A249B;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x50, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C990(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	goto loc_4A2370;

loc_4A249B:
	push(mv, &ts->esp, 0x790324);
	game::sub_505450(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C990(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	goto loc_4A2370;
}

void sub_4E8010(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4C, 4));
	lea(mv, &ts->esi, x86::mem(ts->edi + 0x4C, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4E8039;
    }
	mov(&ts->edi, ts->edi);

loc_4E8020:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	game::j__free(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_4E8020;
    }

loc_4E8039:
	movzx(mv, &ts->eax, x86::mem(0x8500B8, 2));
	push(mv, &ts->esp, ts->eax);
	game::sub_5D3E40(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_4B4C10(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->edi + 0x54, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_4E8086;
    }
	mov(mv, x86::mem(ts->edi + 0x120, 4), ts->esi);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4E8079;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x14, 4));
	mov(mv, x86::mem(ts->edi + 0x124, 4), ts->esi);
	mov(&ts->ecx, ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	goto sub_4CE170;

loc_4E8079:
	movsx(mv, &ts->esi, x86::mem(ts->eax + 0x8A, 2));
	mov(mv, x86::mem(ts->edi + 0x124, 4), ts->esi);

loc_4E8086:
	mov(&ts->ecx, ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	goto sub_4CE170;
}

void sub_4E8090(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7749D3);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->esi);
	game::sub_551DE0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	xor_(&ts->ebx, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x796484);
	push(mv, &ts->esp, 0x796484);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x54, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x38, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi, 4), 0x79636C);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x50, 1), ts->bl);
	game::sub_542CA0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x100, 1), ts->bl);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x20, 1), 0x1);
	game::sub_504820(ts, mv);
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x3E10EAB2);
	push(mv, &ts->esp, 0x797A20);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->ecx, ts->esi);
	game::sub_4D64B0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x836014);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, 0x797A14);
	push(mv, &ts->esp, ts->eax);
	game::sub_542600(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x24, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51F440(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	mov(&ts->ebp, ts->eax);
	mov(mv, &ts->ecx, x86::mem(0x7F4524, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x790348);
	game::sub_50B9C0(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x2C, 4));
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4E8192;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, ts->edx);
	game::sub_51EE80(ts, mv);

loc_4E8192:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->edi);
	game::sub_538500(ts, mv);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x7);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x88, 4));
	push(mv, &ts->esp, 0x7);
	mov(&ts->ecx, ts->edi);
	game::sub_538080(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->edi);
	game::sub_50D820(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x2);
	mov(&ts->ecx, ts->edi);
	game::sub_50D820(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x796404);
	mov(mv, x86::mem(ts->esi + 0xF8, 4), 0xC407210);
	mov(mv, x86::mem(ts->esi + 0xFC, 1), 0x1);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537A60(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	add(&ts->esp, 0xC);
	mov(mv, x86::mem(ts->esi + 0x104, 4), ts->eax);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_7749C0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

loc_7749C8:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x54);
	goto sub_4CBBA0;

SEH_4F2350:
	mov(&ts->eax, 0x7E1BA8);
	goto ___CxxFrameHandler;
}

void sub_4E8210(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4D6220(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4E8228;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4E8228:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4E8230(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77389B);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x8FC);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0x5C, 4), 0x8);
	if (ts->eflags.zero) {
        goto loc_4E8380;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x60, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E8380;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x10);
	mov(&ts->ecx, 0x83AD90);
	game::sub_5162D0(ts, mv);
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4E829E;
    }
	mov(&ts->edi, ts->edi);

loc_4E8280:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x434, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->edi + 0x5C, 4));
	if (ts->eflags.zero) {
        goto loc_4E829E;
    }
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x10);
	mov(&ts->ecx, 0x83AD90);
	game::sub_5162D0(ts, mv);
	mov(&ts->esi, ts->eax);
	test(&ts->eflags, ts->esi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_4E8280;
    }

loc_4E829E:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	game::sub_40C910(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x918, 4), 0x0);
	call(ts, mv, x86::mem(ts->eax + 0xC, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x83AAB4);
	game::sub_502A40(ts, mv);
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E82F4;
    }
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->esi, ts->eax);
	goto loc_4E831D;

loc_4E82F4:
	push(mv, &ts->esp, 0x7906DC);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E831B;
    }
	push(mv, &ts->esp, 0x7906DC);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E831B;
    }
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x4C, 4));
	goto loc_4E831D;

loc_4E831B:
	xor_(&ts->esi, ts->esi);

loc_4E831D:
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x8371B0);
	game::sub_413440(ts, mv);
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(0x83623C, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4E8348;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x8371B0);
	mov(&ts->ecx, ts->esi);
	game::sub_4D8C70(ts, mv);

loc_4E8348:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_58B9A0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_587630(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	game::sub_58B9A0(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_58E080(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x394, 4));
	mov(mv, x86::mem(ts->esp + 0x90C, 4), 0xFFFFFFFF);
	game::nullsub_1(ts, mv);

loc_4E8380:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x904, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_773890:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x900, 4));
	goto sub_401800;

SEH_4D9800:
	mov(&ts->eax, 0x7DFA94);
	goto ___CxxFrameHandler;
}

void sub_4E83A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x775ED6);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x8F8);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x797A30);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1A8, 4));
	xor_(&ts->edi, ts->edi);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x83AD90);
	mov(mv, x86::mem(ts->esp + 0x90C, 4), ts->edi);
	game::sub_503510(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1B8, 4));
	cmp(&ts->eflags, ts->ecx, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4E84FE;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x8, 4));
	cmp(mv, &ts->eflags, ts->edx, x86::mem(ts->esi + 0x1A8, 4));
	if (ts->eflags.zero) {
        goto loc_4E8416;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_516B90(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1B8, 4));
	mov(mv, x86::mem(ts->eax + 0x14, 4), 0x10);

loc_4E8416:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	game::sub_40C910(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1B8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x914, 1), 0x1);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1B8, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x83AAB4);
	game::sub_502A40(ts, mv);
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E8470;
    }
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->edi, ts->eax);
	goto loc_4E8495;

loc_4E8470:
	push(mv, &ts->esp, 0x7906DC);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E8495;
    }
	push(mv, &ts->esp, 0x7906DC);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4E8495;
    }
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x4C, 4));

loc_4E8495:
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x8371B0);
	game::sub_413440(ts, mv);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(0x83623C, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4E84C0;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x8371B0);
	mov(&ts->ecx, ts->edi);
	game::sub_4D8C70(ts, mv);

loc_4E84C0:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1B8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(ts->esi + 0x1A8, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, 0x838980);
	mov(mv, x86::mem(0x836338, 4), ts->eax);
	game::sub_50E8B0(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x390, 4));
	mov(mv, x86::mem(0x7F4450, 1), 0x1);
	mov(mv, x86::mem(ts->esp + 0x908, 1), 0x0);
	game::nullsub_1(ts, mv);

loc_4E84FE:
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x908, 4), 0xFFFFFFFF);
	game::sub_4E20B0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x900, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_775EC0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x904, 4));
	goto sub_4E20B0;

loc_775ECB:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x900, 4));
	goto sub_401800;

SEH_4E83A0:
	mov(&ts->eax, 0x7E14B0);
	goto ___CxxFrameHandler;
}

void sub_4E8530(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77389B);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x8FC);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0x9120409E);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x58, 4));
	if (!ts->eflags.zero) {
        goto loc_4E8636;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x50, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E8572;
    }
	add(&ts->eax, 0xFFFFFFF0);
	goto loc_4E8574;

loc_4E8572:
	xor_(&ts->eax, ts->eax);

loc_4E8574:
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E86F2;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F568);
	push(mv, &ts->esp, 0x790E98);
	push(mv, &ts->esp, ts->eax);
	game::sub_5426C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x14, 4));
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E85A3;
    }
	add(&ts->eax, 0xFFFFFFF0);
	goto loc_4E85A5;

loc_4E85A3:
	xor_(&ts->eax, ts->eax);

loc_4E85A5:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x5C, 4));
	mov(mv, x86::mem(ts->esi + 0x58, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x920, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x83AAB4);
	game::sub_502A40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x64, 4));
	dec(&ts->ecx);
	push(mv, &ts->esp, 0x78FCD8);
	mov(mv, x86::mem(ts->esi + 0x64, 4), ts->ecx);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E85F1;
    }
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->eax + 0x148, 4), 0x1);
	goto loc_4E86F2;

loc_4E85F1:
	push(mv, &ts->esp, 0x7906DC);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E8625;
    }
	push(mv, &ts->esp, 0x7906DC);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E8625;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4C, 4));
	mov(mv, x86::mem(ts->eax + 0x148, 4), 0x1);
	goto loc_4E86F2;

loc_4E8625:
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->eax + 0x148, 4), 0x1);
	goto loc_4E86F2;

loc_4E8636:
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_4E86F2;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E864D;
    }
	add(&ts->eax, 0xFFFFFFF0);
	goto loc_4E864F;

loc_4E864D:
	xor_(&ts->eax, ts->eax);

loc_4E864F:
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E86F2;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F568);
	push(mv, &ts->esp, 0x790E84);
	push(mv, &ts->esp, ts->eax);
	game::sub_5426C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x10, 4));
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E867E;
    }
	add(&ts->eax, 0xFFFFFFF0);
	goto loc_4E8680;

loc_4E867E:
	xor_(&ts->eax, ts->eax);

loc_4E8680:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x5C, 4));
	mov(mv, x86::mem(ts->esi + 0x58, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x920, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x83AAB4);
	game::sub_502A40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x64, 4));
	inc(&ts->ecx);
	push(mv, &ts->esp, 0x78FCD8);
	mov(mv, x86::mem(ts->esi + 0x64, 4), ts->ecx);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E86BF;
    }
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	goto loc_4E86E8;

loc_4E86BF:
	push(mv, &ts->esp, 0x7906DC);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E86E6;
    }
	push(mv, &ts->esp, 0x7906DC);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E86E6;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4C, 4));
	goto loc_4E86E8;

loc_4E86E6:
	xor_(&ts->eax, ts->eax);

loc_4E86E8:
	mov(mv, x86::mem(ts->eax + 0x148, 4), 0x0);

loc_4E86F2:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x58, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_4E889F;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x5);
	push(mv, &ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_50D260(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_51DE60(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x918, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x844, 4));
	add(&ts->esp, 0x14);
	test(&ts->eflags, ts->edx, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_4E87BB;
    }
	mov(&ts->edx, ts->ecx);
	mov(mv, &ts->edi, x86::mem(ts->edx + 0x840, 4));
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E8754;
    }
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	goto loc_4E8779;

loc_4E8754:
	push(mv, &ts->esp, 0x7906DC);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E8785;
    }
	push(mv, &ts->esp, 0x7906DC);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E8785;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4C, 4));

loc_4E8779:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E8785;
    }
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->eax);
	game::sub_4A5EE0(ts, mv);

loc_4E8785:
	cmp(mv, &ts->eflags, x86::mem(0x7F444C, 4), 0x10);
	if (!ts->eflags.zero) {
        goto loc_4E87AA;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x920, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x83AD90);
	game::sub_503510(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_497F20(ts, mv);

loc_4E87AA:
	mov(mv, &ts->ecx, x86::mem(0x8651AC, 4));
	mov(mv, x86::mem(ts->esi + 0xC4, 4), ts->ecx);
	goto loc_4E8898;

loc_4E87BB:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	game::sub_40C910(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x918, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x840, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, x86::mem(ts->esp + 0x91C, 4), 0x0);
	game::sub_610270(ts, mv);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	game::sub_61C280(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	game::sub_637190(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	game::sub_6371E0(ts, mv);
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E882D;
    }
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->edi, ts->eax);
	goto loc_4E8856;

loc_4E882D:
	push(mv, &ts->esp, 0x7906DC);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E8854;
    }
	push(mv, &ts->esp, 0x7906DC);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E8854;
    }
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x4C, 4));
	goto loc_4E8856;

loc_4E8854:
	xor_(&ts->edi, ts->edi);

loc_4E8856:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x8371B0);
	game::sub_413440(ts, mv);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(0x83623C, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4E8881;
    }
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x8371B0);
	mov(&ts->ecx, ts->edi);
	game::sub_4D8C70(ts, mv);

loc_4E8881:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x394, 4));
	mov(mv, x86::mem(ts->esp + 0x90C, 4), 0xFFFFFFFF);
	game::nullsub_1(ts, mv);

loc_4E8898:
	mov(&ts->ecx, ts->esi);
	game::sub_4BE440(ts, mv);

loc_4E889F:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x904, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_773890:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x900, 4));
	goto sub_401800;

SEH_4D9800:
	mov(&ts->eax, 0x7DFA94);
	goto ___CxxFrameHandler;
}

void sub_4E88C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x775EF4);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x1E8);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4E890E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4D69C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4E890E:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_775EE0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x797A40);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4E88C0:
	mov(&ts->eax, 0x7E14D4);
	goto ___CxxFrameHandler;
}

void sub_4E8920(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4D6B10(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4E8938;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4E8938:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4E8940(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4D6BC0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4E8958;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4E8958:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4E8960(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1C);
	mov(&ts->ebx, ts->ecx);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E898C;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 1), 0x1);
	mov(mv, x86::mem(ts->eax, 4), 0x795CB0);
	mov(&ts->esi, ts->eax);
	goto loc_4E898E;

loc_4E898C:
	xor_(&ts->esi, ts->esi);

loc_4E898E:
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->edi);
	game::sub_4AEA60(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x20, 4));
	xor_(&ts->ecx, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0xD, 4), ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->esp + 0x15, 4), ts->ecx);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->esp + 0x19, 2), ts->cx);
	push(mv, &ts->esp, 0x7845D4);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 1), 0x0);
	mov(mv, x86::mem(ts->esp + 0x23, 1), ts->cl);
	game::sub_4400D0(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_4AEA60(ts, mv);
	lea(mv, &ts->edi, x86::mem(ts->ebx + 0x4C, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	game::sub_51F2E0(ts, mv);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	game::sub_52EA50(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp, 0x4);
}

void sub_4E8A00(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x44);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebx, ts->ecx);
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 1), 0x0);
	mov(&ts->ecx, 0xF);
	lea(mv, &ts->edi, x86::mem(ts->esp + 0x11, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	stos(mv, x86::mem(ts->edi, 2), ts->ax);
	stos(mv, x86::mem(ts->edi, 1), ts->al);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x914, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.carry || ts->eflags.zero) {
        goto loc_4E8A54;
    }
	lea(mv, &ts->esi, x86::mem(ts->ebx + 0x4C, 4));
	mov(&ts->ecx, ts->esi);
	game::sub_51F530(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43DBD0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x2C, 4));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4E8A54;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x30, 4));
	push(mv, &ts->esp, 0x78F21C);
	push(mv, &ts->esp, ts->edx);
	game::sub_51EE80(ts, mv);

loc_4E8A54:
	lea(mv, &ts->edi, x86::mem(ts->ebx + 0x4C, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->edi);
	game::sub_51F4E0(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->ebx + 0x908, 4));
	lea(mv, &ts->ebp, x86::mem(ts->ebx + 0x908, 4));
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->esi, ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E8A9A;
    }

loc_4E8A75:
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51F350(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4E8A90;
    }
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->ebx);
	game::sub_4E8960(ts, mv);
	inc(mv, x86::mem(ts->esp + 0x10, 4));

loc_4E8A90:
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_4E8A75;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));

loc_4E8A9A:
	cmp(&ts->eflags, ts->eax, 0xF);
	mov(&ts->ebx, 0x1);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4E8B0C;
    }
	mov(&ts->ebp, 0xF);
	sub(&ts->ebp, ts->eax);
	goto loc_4E8AB0;

loc_4E8AB0:
	push(mv, &ts->esp, 0x1C);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E8AD3;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x14, 1), ts->bl);
	mov(mv, x86::mem(ts->eax, 4), 0x795CB0);
	mov(&ts->esi, ts->eax);
	goto loc_4E8AD5;

loc_4E8AD3:
	xor_(&ts->esi, ts->esi);

loc_4E8AD5:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x783FE5);
	mov(&ts->ecx, ts->esi);
	game::sub_4AEA60(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x783FE5);
	mov(&ts->ecx, ts->esi);
	game::sub_4AEA60(ts, mv);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	game::sub_51F2E0(ts, mv);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	game::sub_5434D0(ts, mv);
	dec(&ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_4E8AB0;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));

loc_4E8B0C:
	test(&ts->eflags, ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_4E8B22;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x2C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4E8B5C;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x30, 4));
	push(mv, &ts->esp, 0x78F21C);
	goto loc_4E8B56;

loc_4E8B22:
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51F350(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(&ts->ecx, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4E8B40;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_51F440(ts, mv);
	dec(&ts->eax);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	goto loc_4E8B42;

loc_4E8B40:
	push(mv, &ts->esp, 0x0);

loc_4E8B42:
	game::sub_54EDD0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x2C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4E8B5C;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x78F228);

loc_4E8B56:
	push(mv, &ts->esp, ts->edx);
	game::sub_51EE80(ts, mv);

loc_4E8B5C:
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->edi);
	game::sub_538500(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x44);
	retn(mv, &ts->esp);
}

void sub_4E8B70(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x775F16);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	game::sub_552A90(ts, mv);
	xor_(&ts->ecx, ts->ecx);
	mov(&ts->edx, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x90, 4));
	mov(mv, x86::mem(ts->esi, 4), 0x797A54);
	mov(mv, x86::mem(ts->esi + 0x5C, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x64, 1), ts->cl);
	mov(mv, x86::mem(ts->esi + 0x68, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x8C, 4), ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 1), ts->dl);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->ecx, ts->eax);
	game::sub_5047E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_775F00:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_495930;

loc_775F08:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x90);
	goto sub_4DEF30;

SEH_4E8B70:
	mov(&ts->eax, 0x7E1500);
	goto ___CxxFrameHandler;
}

void sub_4E8BF0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x775F16);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edi);
	mov(mv, x86::mem(ts->edi, 4), 0x797A54);
	xor_(&ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x50, 4), ts->ebx);
	mov(mv, &ts->eax, x86::mem(0x836498, 4));
	mov(mv, x86::mem(ts->eax + 0x64, 4), ts->ebx);
	mov(mv, &ts->eax, x86::mem(0x836514, 4));
	test(&ts->eflags, ts->ah, 0x20);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4E8C85;
    }
	mov(mv, &ts->eax, x86::mem(0x836524, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, &ts->esi, x86::mem(0x83652C, 4));
	if (ts->eflags.zero) {
        goto loc_4E8C4F;
    }
	mov(mv, &ts->ecx, x86::mem(0x836528, 4));
	push(mv, &ts->esp, ts->ecx);
	call(ts, mv, ts->eax);
	add(&ts->esp, 0x4);

loc_4E8C4F:
	mov(mv, x86::mem(0x836514, 4), ts->ebx);
	mov(mv, x86::mem(0x836520, 4), ts->ebx);
	mov(mv, x86::mem(0x83651C, 4), ts->ebx);
	mov(mv, x86::mem(0x836518, 4), ts->ebx);
	mov(mv, x86::mem(0x836524, 4), ts->ebx);
	mov(mv, x86::mem(0x836528, 4), ts->ebx);
	mov(mv, x86::mem(0x836530, 4), ts->ebx);
	mov(mv, x86::mem(0x836534, 4), ts->ebx);
	mov(mv, x86::mem(0x83652C, 4), ts->esi);

loc_4E8C85:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x90, 4));
	lea(mv, &ts->esi, x86::mem(ts->edi + 0x90, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x18, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_4E8CB9;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_4E8CA0:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	game::j__free(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_4E8CA0;
    }

loc_4E8CB9:
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(ts->edi, 4), 0x78F578);
	game::sub_510D40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_775F00:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_495930;

loc_775F08:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x90);
	goto sub_4DEF30;

SEH_4E8B70:
	mov(&ts->eax, 0x7E1500);
	goto ___CxxFrameHandler;
}

void sub_4E8CE0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x90, 4));
	lea(mv, &ts->esi, x86::mem(ts->edi + 0x90, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4E8D0D;
    }

loc_4E8CF4:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	game::j__free(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_4E8CF4;
    }

loc_4E8D0D:
	mov(&ts->ecx, ts->edi);
	game::sub_4A3C80(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x836498, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->eax + 0x14, 4), 0x0);
	mov(mv, x86::mem(ts->eax + 0x10, 4), 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4E8D30(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4E8D40;
    }
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->eax);
	goto loc_4E8D55;

loc_4E8D40:
	mov(&ts->ecx, 0x83A9E0);
	game::sub_502FE0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4E8D55;
    }
	mov(mv, x86::mem(ts->esi + 0x60, 4), 0x2);

loc_4E8D55:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x60, 4), 0x2);
	if (!ts->eflags.zero) {
        goto loc_4E8D70;
    }
	mov(&ts->ecx, 0x83A9E0);
	game::sub_502FE0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E8D70;
    }
	mov(mv, x86::mem(ts->esi + 0x60, 4), 0x4);

loc_4E8D70:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x60, 4), 0x4);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, 0x6);
	mov(&ts->eax, 0x5);
	if (!ts->eflags.zero) {
        goto loc_4E8DCE;
    }
	mov(mv, &ts->edx, x86::mem(0x836514, 4));
	test(&ts->eflags, ts->dh, 0x40);
	if (ts->eflags.zero) {
        goto loc_4E8D91;
    }
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->eax);
	goto loc_4E8DCE;

loc_4E8D91:
	mov(mv, &ts->edx, x86::mem(0x836498, 4));
	mov(mv, &ts->bl, x86::mem(ts->edx + 0x6, 1));
	test(&ts->eflags, ts->bl, ts->bl);
	if (ts->eflags.zero) {
        goto loc_4E8DBE;
    }
	mov(mv, &ts->bl, x86::mem(ts->edx + 0x8, 1));
	test(&ts->eflags, ts->bl, ts->bl);
	if (ts->eflags.zero) {
        goto loc_4E8DBE;
    }
	mov(mv, &ts->dl, x86::mem(0x844AD9, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	if (!ts->eflags.zero) {
        goto loc_4E8DB2;
    }
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->ecx);

loc_4E8DB2:
	or_(mv, x86::mem(0x836514, 4), 0x100000);
	goto loc_4E8DCE;

loc_4E8DBE:
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->eax);
	mov(mv, &ts->dl, x86::mem(0x844AD9, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	if (ts->eflags.zero) {
        goto loc_4E8DCE;
    }
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->ecx);

loc_4E8DCE:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x60, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4E8DE9;
    }
	mov(mv, &ts->eax, x86::mem(0x836514, 4));
	test(&ts->eflags, ts->ah, 0x2);
	if (!ts->eflags.zero) {
        goto loc_4E8DE9;
    }
	mov(mv, &ts->al, x86::mem(0x844AD9, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E8DE9;
    }
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->ecx);

loc_4E8DE9:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x60, 4), ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4E8E1D;
    }
	mov(mv, &ts->eax, x86::mem(0x836514, 4));
	test(&ts->eflags, ts->ah, 0x40);
	if (!ts->eflags.zero) {
        goto loc_4E8E16;
    }
	test(&ts->eflags, ts->eax, 0x100000);
	if (!ts->eflags.zero) {
        goto loc_4E8E1D;
    }
	mov(mv, &ts->eax, x86::mem(0x836498, 4));
	mov(mv, &ts->dl, x86::mem(ts->eax + 0xC, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	if (!ts->eflags.zero) {
        goto loc_4E8E1D;
    }
	mov(mv, &ts->dl, x86::mem(0x844AD9, 1));
	cmp(mv, &ts->eflags, ts->dl, x86::mem(ts->eax + 0x6, 1));
	if (!ts->eflags.zero) {
        goto loc_4E8E1D;
    }

loc_4E8E16:
	mov(mv, x86::mem(ts->esi + 0x60, 4), 0x7);

loc_4E8E1D:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x60, 4));
	cmp(&ts->eflags, ts->eax, 0x7000000);
	pop(mv, &ts->esp, ts->ebx);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto def_4E8E3B;
    }
	if (ts->eflags.zero) {
        goto loc_4E8F5B;
    }
	dec(&ts->eax);
	cmp(&ts->eflags, ts->eax, ts->ecx);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4E8E3B;
    }
	jmp(x86::mem(0x4E8F78, 4));

loc_4E8E42:
	push(mv, &ts->esp, 0x5000000);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0xD36620FE);
	mov(&ts->ecx, ts->esi);
	game::sub_4A3890(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4E8E61:
	mov(mv, &ts->eax, x86::mem(0x836514, 4));
	push(mv, &ts->esp, 0x1000000);
	or_(&ts->eax, 0x200000);
	test(&ts->eflags, ts->eax, 0x10000);
	push(mv, &ts->esp, 0x61C);
	mov(mv, x86::mem(0x836514, 4), ts->eax);
	mov(&ts->ecx, ts->esi);
	push(mv, &ts->esp, 0xF770);
	if (ts->eflags.zero) {
        goto loc_4E8E96;
    }
	push(mv, &ts->esp, 0x7D90C187);
	game::sub_4A3890(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4E8E96:
	push(mv, &ts->esp, 0x2B641C0);
	game::sub_4A3890(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4E8EA4:
	mov(&ts->ecx, ts->esi);
	game::sub_556490(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	game::sub_4A3460(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_4A3460(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4E8EC9:
	mov(&ts->ecx, ts->esi);
	game::sub_4A3C10(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4E8ED4:
	mov(mv, x86::mem(ts->esi + 0x64, 1), 0x0);
	mov(mv, &ts->al, x86::mem(0x844AD9, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E8EF7;
    }
	mov(mv, &ts->eax, x86::mem(0x836498, 4));
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x6, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_4E8EF7;
    }
	or_(mv, x86::mem(0x836514, 4), 0x100000);

loc_4E8EF7:
	push(mv, &ts->esp, 0x1);
	add(&ts->esi, 0x6C);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x83A9E0);
	game::sub_502F40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x836498, 4));
	push(mv, &ts->esp, ts->esi);
	game::sub_4D9AB0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4E8F17:
	test(mv, &ts->eflags, x86::mem(0x836514, 4), 0x100000);
	if (ts->eflags.zero) {
        goto loc_4E8F3B;
    }
	mov(mv, &ts->eax, x86::mem(0x836498, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E8F3B;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x5C, 4));
	push(mv, &ts->esp, 0x100);
	push(mv, &ts->esp, 0x0);
	game::sub_6FBFCC(ts, mv);

loc_4E8F3B:
	push(mv, &ts->esp, 0x1);
	add(&ts->esi, 0x6C);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x83A9E0);
	game::sub_502F40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x836498, 4));
	push(mv, &ts->esp, ts->esi);
	game::sub_4D9B80(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4E8F5B:
	push(mv, &ts->esp, 0x3000000);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0xB786AF76);
	mov(&ts->ecx, ts->esi);
	game::sub_4A39C0(ts, mv);

def_4E8E3B:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4E8FA0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4D7010(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4E8FB8;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4E8FB8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4E8FC0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0x911AB364);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4E9095;
    }
	if (ts->eflags.zero) {
        goto loc_4E906D;
    }
	cmp(&ts->eflags, ts->eax, 0x35F8620B);
	if (ts->eflags.zero) {
        goto loc_4E9025;
    }
	cmp(&ts->eflags, ts->eax, 0x406415E3);
	if (ts->eflags.zero) {
        goto loc_4E9006;
    }
	cmp(&ts->eflags, ts->eax, 0x72619778);
	if (!ts->eflags.zero) {
        goto loc_4E9175;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x4C, 4));
	mov(mv, x86::mem(0x836538, 4), ts->eax);
	game::sub_54EB60(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp, 0x10);

loc_4E9006:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(0x836538, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x70, 4));
	push(mv, &ts->esp, 0x406415E3);
	push(mv, &ts->esp, ts->edx);
	game::sub_4BE9F0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp, 0x10);

loc_4E9025:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x54, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E9031;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax - 0x4, 4));
	goto loc_4E9033;

loc_4E9031:
	xor_(&ts->ecx, ts->ecx);

loc_4E9033:
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x2C, 4));
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, ts->eax);
	game::sub_51EE80(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, ts->eax);
	game::sub_52CEF0(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->ecx, ts->eax);
	game::sub_5047E0(ts, mv);
	inc(mv, x86::mem(ts->edi + 0xF8, 4));
	mov(mv, x86::mem(ts->edi + 0x100, 4), 0x0);
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp, 0x10);

loc_4E906D:
	mov(mv, &ts->ecx, x86::mem(0x836498, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x64, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x8867412D);
	game::sub_55DDA0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(0x836538, 4), ts->ecx);
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp, 0x10);

loc_4E9095:
	cmp(&ts->eflags, ts->eax, 0x911C0A4B);
	if (ts->eflags.zero) {
        goto loc_4E9163;
    }
	cmp(&ts->eflags, ts->eax, 0x9803F6E2);
	if (ts->eflags.zero) {
        goto loc_4E9157;
    }
	cmp(&ts->eflags, ts->eax, 0xC98356BA);
	if (!ts->eflags.zero) {
        goto loc_4E9175;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0xF8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4E9175;
    }
	mov(mv, x86::mem(ts->edi + 0xF8, 4), 0x1);
	mov(mv, x86::mem(ts->edi + 0x100, 4), 0xFFF0BDC0);
	mov(mv, &ts->edx, x86::mem(0x836498, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x64, 4));
	push(mv, &ts->esp, ts->ebp);
	lea(mv, &ts->ebp, x86::mem(ts->eax + 0x90, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ebp, 4));
	cmp(&ts->eflags, ts->esi, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_4E9137;
    }
	push(mv, &ts->esp, ts->ebx);

loc_4E90F1:
	push(mv, &ts->esp, 0x783FE5);
	game::sub_43DBB0(ts, mv);
	lea(mv, &ts->ebx, x86::mem(ts->eax + (ts->esi) + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	game::sub_43DBB0(ts, mv);
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, 0x8);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4E9130;
    }
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ebx);
	game::sub_43DDF0(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4E9130;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x48, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x28, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->edi);
	game::sub_4D70E0(ts, mv);

loc_4E9130:
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_4E90F1;
    }
	pop(mv, &ts->esp, ts->ebx);

loc_4E9137:
	mov(mv, &ts->eax, x86::mem(0x7F4564, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FAB8);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp, 0x10);

loc_4E9157:
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x4C, 4));
	game::sub_54EB80(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp, 0x10);

loc_4E9163:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(0x836538, 4), ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x4C, 4));
	game::sub_54EB40(ts, mv);

loc_4E9175:
	pop(mv, &ts->esp, ts->edi);
	retn(mv, &ts->esp, 0x10);
}

void sub_4E9180(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x775F2B);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->ecx);
	xor_(&ts->eax, ts->eax);
	lea(mv, &ts->esi, x86::mem(ts->ecx + 0x10, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0xC, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x8, 4), ts->eax);
	cmp(mv, &ts->eflags, x86::mem(ts->esi, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_4E91D6;
    }
	mov(&ts->edi, ts->edi);

loc_4E91B0:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::j__free(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	game::sub_440EF0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_4E91B0;
    }

loc_4E91D6:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_4E91FD;
    }

loc_4E91E4:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	game::sub_440EF0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_4E91E4;
    }

loc_4E91FD:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_775F20:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x10);
	goto sub_4835C0;

SEH_4E9180:
	mov(&ts->eax, 0x7E1524);
	goto ___CxxFrameHandler;
}

void sub_4E9210(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4E945B;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x20, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4E9444;
    }
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F00F0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E9444;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0xC, 4));
	if (ts->eflags.zero) {
        goto loc_4E925E;
    }
	cmp(&ts->eflags, ts->eax, 0x7FFFFFFF);
	if (ts->eflags.zero) {
        goto loc_4E925E;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	game::sub_577310(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4E92B1;
    }

loc_4E925E:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4E92B6;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_542600(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784264, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	game::__ftol2(ts, mv);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->ebx, 4), ts->eax);
	game::j__free(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	game::sub_440EF0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	add(&ts->esp, 0x14);
	dec(&ts->eax);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->eax);

loc_4E92B1:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	test(&ts->eflags, ts->eax, ts->eax);

loc_4E92B6:
	if (!ts->eflags.zero) {
        goto loc_4E9427;
    }
	mov(mv, &ts->ebx, x86::mem(ts->ebx, 4));
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4E92CE;
    }
	cmp(&ts->eflags, ts->ebx, 0x7FFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_4E9427;
    }

loc_4E92CE:
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x24, 4));
	mov(&ts->ecx, ts->edi);
	game::sub_401820(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E9363;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x28, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4E9363;
    }
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x18, 4));
	push(mv, &ts->esp, 0x1);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(0x8651AC, 4));
	push(mv, &ts->esp, 0x78FFD0);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fsubp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	game::sub_5426C0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	add(&ts->esp, 0x10);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4E9342;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	game::__ftol2(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x90599828);
	game::sub_4FFA80(ts, mv);
	goto loc_4E93F0;

loc_4E9342:
	push(mv, &ts->esp, 0x30CBDCB6);
	game::sub_4FFA80(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_542600(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

loc_4E9363:
	mov(&ts->ecx, 0x83A9D0);
	game::sub_4AE8D0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E937F;
    }
	mov(&ts->ecx, 0x89CF48);
	game::sub_5FE4C0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4E939B;
    }

loc_4E937F:
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F0120(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4E940A;
    }
	mov(&ts->ecx, 0x89CF48);
	game::sub_5FE530(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E940A;
    }

loc_4E939B:
	mov(mv, &ts->eax, x86::mem(0x89D05C, 4));
	sub(mv, &ts->eax, x86::mem(0x8651AC, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784250, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4E940A;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x18, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FFD0);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_5426C0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	add(&ts->esp, 0x10);
	game::__ftol2(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xFA14812C);
	game::sub_4FFA80(ts, mv);

loc_4E93F0:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x18, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_542600(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

loc_4E940A:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FC44);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5426C0(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

loc_4E9427:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x18, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FFD0);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_5426C0(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

loc_4E9444:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x18, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FC44);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_5426C0(ts, mv);
	add(&ts->esp, 0x10);

loc_4E945B:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_4E9470(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_4E948D;
    }
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0xC, 4), 0x0);
	game::sub_4E9210(ts, mv);

loc_4E948D:
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ebx);
	game::sub_43DBB0(ts, mv);
	inc(&ts->eax);
	push(mv, &ts->esp, ts->eax);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	game::sub_43DBD0(ts, mv);
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10, 4));
	game::sub_479130(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	inc(&ts->eax);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_4E94C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776178);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	game::sub_552330(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	mov(mv, x86::mem(ts->esi, 4), 0x797A70);
	mov(mv, x86::mem(ts->esi + 0x150, 1), ts->al);
	game::sub_4D7160(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_776170:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto ??1strstreambuf@std@@UAE@XZ_5;

SEH_4EB7A0:
	mov(&ts->eax, 0x7E0EB8);
	goto ___CxxFrameHandler;
}

void sub_4E9520(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::std__strstreambuf___strstreambuf_void_(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4E9538;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4E9538:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void std__strstreambuf___strstreambuf_void_(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776178);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x797A70);
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	push(mv, &ts->esp, 0x3);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x0);
	game::sub_481210(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	game::std__strstreambuf___strstreambuf_void_(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_776170:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto ??1strstreambuf@std@@UAE@XZ_5;

SEH_4EB7A0:
	mov(&ts->eax, 0x7E0EB8);
	goto ___CxxFrameHandler;
}

void sub_4E95A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7767C3);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edi);
	mov(mv, x86::mem(ts->edi, 4), 0x797A8C);
	mov(mv, &ts->esi, x86::mem(0x8363DC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	add(&ts->esi, 0x1C);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4E95EF;
    }
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4E95EF;
    }
	mov(mv, x86::mem(ts->esi, 4), ts->eax);

loc_4E95EF:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4C, 4));
	lea(mv, &ts->esi, x86::mem(ts->edi + 0x4C, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x14, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_4E9619;
    }
	mov(&ts->edi, ts->edi);

loc_4E9600:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	game::j__free(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_4E9600;
    }

loc_4E9619:
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0xFFFFFFFF);
	game::sub_510D40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

unknown_libname_59:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

loc_7767B8:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x4C);
	goto sub_4DEF30;

SEH_4F3BE0:
	mov(&ts->eax, 0x7E1CF4);
	goto ___CxxFrameHandler;
}

void sub_4E9640(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(0x8363DC, 4));
	mov(mv, x86::mem(ts->ecx + 0x1C, 4), ts->eax);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_4A3D50(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->ecx, ts->esi);
	game::sub_4A3F30(ts, mv);
	mov(mv, &ts->al, x86::mem(0x89E7E6, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E9694;
    }
	mov(mv, &ts->al, x86::mem(0x89E7D8, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4E967D;
    }
	mov(mv, &ts->eax, x86::mem(0x890108, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E9694;
    }

loc_4E967D:
	mov(&ts->ecx, ts->esi);
	game::sub_4BF4D0(ts, mv);
	push(mv, &ts->esp, 0x5);
	push(mv, &ts->esp, 0x6);
	mov(&ts->ecx, ts->esi);
	game::sub_4A41A0(ts, mv);
	goto loc_4E9750;

loc_4E9694:
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_4D7240(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	cmp(&ts->eflags, ts->eax, 0x8);
	if (ts->eflags.zero) {
        goto loc_4E971E;
    }
	cmp(&ts->eflags, ts->eax, 0x200);
	if (ts->eflags.zero) {
        goto loc_4E971E;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xF82DF37E);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, 0x797A9C);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F614);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xAD685CB8);
	push(mv, &ts->esp, ts->edi);
	game::sub_537C60(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79053C);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x9B8C9D7A);
	push(mv, &ts->esp, ts->edi);
	game::sub_537C60(ts, mv);
	add(&ts->esp, 0x10);
	goto loc_4E974F;

loc_4E971E:
	cmp(mv, &ts->eflags, x86::mem(0x850088, 4), 0x8);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	if (!ts->eflags.zero) {
        goto loc_4E9731;
    }
	push(mv, &ts->esp, 0x93447EE3);
	goto loc_4E9736;

loc_4E9731:
	push(mv, &ts->esp, 0xFE4B4CFA);

loc_4E9736:
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, 0x19DE3E);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x14);

loc_4E974F:
	pop(mv, &ts->esp, ts->edi);

loc_4E9750:
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4E977B;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_555F10(ts, mv);
	add(&ts->esp, 0x10);

loc_4E977B:
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	game::sub_54E6A0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	cmp(&ts->eflags, ts->eax, 0x8);
	if (ts->eflags.zero) {
        goto loc_4E9797;
    }
	cmp(&ts->eflags, ts->eax, 0x200);
	if (!ts->eflags.zero) {
        goto loc_4E97C0;
    }

loc_4E9797:
	mov(&ts->ecx, 0x89CF48);
	game::sub_5FE500(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E97C0;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	or_(&ts->ecx, 0x1000000);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	game::sub_54E6E0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4E97C0:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_54E6E0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4E97E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->al, x86::mem(ts->esi + 0x5C, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4E9852;
    }
	mov(mv, &ts->eax, x86::mem(0x8363DC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x20, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x1C, 4));
	add(&ts->eax, 0x4);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FC44);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(mv, x86::mem(ts->eax + 0x20, 1), 0x1);
	game::sub_5426C0(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79053C);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x797AA4);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537C60(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E9848;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);

loc_4E9848:
	mov(mv, x86::mem(ts->esi + 0x58, 4), 0x0);

loc_4E984F:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4E9852:
	mov(&ts->ecx, 0x89CF48);
	game::sub_5FE500(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E9870;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	or_(&ts->ecx, 0x1000000);
	push(mv, &ts->esp, ts->ecx);
	goto loc_4E9878;

loc_4E9870:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);

loc_4E9878:
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	game::sub_54E6E0(ts, mv);
	mov(&ts->ecx, 0x89CF48);
	game::sub_5FE500(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	if (ts->eflags.zero) {
        goto loc_4E98CA;
    }
	push(mv, &ts->esp, 0x80833FC2);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, 0x797A9C);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F614);
	goto loc_4E98D1;

loc_4E98CA:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79053C);

loc_4E98D1:
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x797AA4);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537C60(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x865198, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8363DC, 4));
	add(&ts->ecx, 0x4);
	game::sub_4E9210(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	cmp(&ts->eflags, ts->eax, 0x200);
	if (ts->eflags.zero) {
        goto loc_4E9917;
    }
	cmp(&ts->eflags, ts->eax, 0x8);
	if (!ts->eflags.zero) {
        goto loc_4E994C;
    }

loc_4E9917:
	cmp(mv, &ts->eflags, x86::mem(0x850088, 4), 0x8);
	if (!ts->eflags.zero) {
        goto loc_4E994C;
    }
	mov(&ts->ecx, 0x89CF48);
	game::sub_5FE4C0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E994C;
    }
	mov(mv, &ts->eax, x86::mem(0x89D05C, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(0x8651AC, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4E984F;
    }
	mov(mv, &ts->ecx, x86::mem(0x8363DC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	goto sub_4BFF80;

loc_4E994C:
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F00F0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E984F;
    }
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F0120(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4E984F;
    }
	mov(&ts->ecx, 0x89CF48);
	game::sub_5FE530(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E9A12;
    }
	mov(&ts->ecx, 0x89CF48);
	game::sub_5FE530(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E99EE;
    }
	mov(&ts->ecx, 0x89CF48);
	game::sub_5FE4C0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4E99EE;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4E99EE;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x78F970);
	push(mv, &ts->esp, 0x8D7E0C53);
	push(mv, &ts->esp, ts->eax);
	game::sub_537CC0(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4E99EE;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x7AFAF0EF);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1FAB5998);
	push(mv, &ts->esp, 0x34DC1BEC);
	push(mv, &ts->esp, 0x541389E5);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->eax);
	game::sub_558860(ts, mv);
	add(&ts->esp, 0x20);
	mov(mv, x86::mem(ts->esi + 0x58, 4), ts->eax);

loc_4E99EE:
	mov(mv, &ts->eax, x86::mem(0x89D05C, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(0x8651AC, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4E984F;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_4A3EE0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x89CF48);
	pop(mv, &ts->esp, ts->esi);
	goto sub_609750;

loc_4E9A12:
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	goto sub_4A3EE0;
}

void sub_4E9A20(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0xC519BFC0);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4E9B25;
    }
	if (ts->eflags.zero) {
        goto loc_4E9ACB;
    }
	cmp(&ts->eflags, ts->eax, 0x1FAB5998);
	if (ts->eflags.zero) {
        goto loc_4E9AA6;
    }
	cmp(&ts->eflags, ts->eax, 0x34DC1BEC);
	if (ts->eflags.zero) {
        goto loc_4E9A9D;
    }
	cmp(&ts->eflags, ts->eax, 0x406415E3);
	if (!ts->eflags.zero) {
        goto loc_4E9BED;
    }
	mov(mv, &ts->al, x86::mem(0x89E7E6, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E9A87;
    }
	mov(&ts->ecx, 0x89E7A0);
	game::sub_4018F0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E9A87;
    }
	game::sub_5100B0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x9);
	game::sub_5F41E0(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_4A3EE0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4E9A87:
	mov(mv, &ts->ecx, x86::mem(0x8363DC, 4));
	game::sub_4BFF80(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_4A3EE0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4E9A9D:
	mov(&ts->ecx, ts->esi);
	game::sub_4A3EE0(ts, mv);
	goto loc_4E9B0C;

loc_4E9AA6:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E9AB6;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);

loc_4E9AB6:
	mov(&ts->ecx, 0x89CF48);
	mov(mv, x86::mem(ts->esi + 0x58, 4), 0x0);
	game::sub_609750(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4E9ACB:
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	cmp(&ts->eflags, ts->eax, 0x8);
	if (ts->eflags.zero) {
        goto loc_4E9AFA;
    }
	cmp(&ts->eflags, ts->eax, 0x200);
	if (ts->eflags.zero) {
        goto loc_4E9AFA;
    }
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(0x7F45A1, 1), 0x0);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x78F0E8);
	push(mv, &ts->esp, ts->eax);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4E9AFA:
	mov(&ts->ecx, 0x89CF48);
	game::sub_5FE500(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4E9BED;
    }

loc_4E9B0C:
	mov(&ts->ecx, 0x89CF48);
	game::sub_601D00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8363DC, 4));
	game::sub_4BFF80(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4E9B25:
	cmp(&ts->eflags, ts->eax, 0xC98356BA);
	if (ts->eflags.zero) {
        goto loc_4E9B5F;
    }
	cmp(&ts->eflags, ts->eax, 0xEAACFEED);
	if (!ts->eflags.zero) {
        goto loc_4E9BED;
    }
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, 0x83A9D0);
	game::sub_502FF0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C8D0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x15);
	game::sub_5F41E0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4E9B5F:
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	cmp(&ts->eflags, ts->eax, 0x8);
	if (ts->eflags.zero) {
        goto loc_4E9BE6;
    }
	cmp(&ts->eflags, ts->eax, 0x200);
	if (ts->eflags.zero) {
        goto loc_4E9BE6;
    }
	mov(mv, &ts->al, x86::mem(0x89E7D9, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4E9BED;
    }
	mov(mv, &ts->eax, x86::mem(0x890104, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4E9BED;
    }
	mov(mv, &ts->al, x86::mem(0x89E7E6, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4E9BED;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x70, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x74, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4E9BD6;
    }
	mov(mv, &ts->dl, x86::mem(ts->esi + 0x68, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	setz(ts->eflags, &ts->al);
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, x86::mem(ts->esi + 0x70, 4), 0x0);
	mov(mv, x86::mem(ts->esi + 0x68, 1), ts->al);
	if (ts->eflags.zero) {
        goto loc_4E9BC2;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78DFEC, 4));
	mov(&ts->ecx, ts->esi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x74, 4));
	game::sub_4BF0A0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4E9BC2:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78DFF0, 4));
	mov(&ts->ecx, ts->esi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x74, 4));
	game::sub_4BF0A0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4E9BD6:
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865154, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x70, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x70, 4));
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4E9BE6:
	mov(&ts->ecx, ts->esi);
	game::sub_4E97E0(ts, mv);

loc_4E9BED:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);
}

void sub_4E9C00(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776030);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(0x851044, 4));
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x18C, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x890080, 4));
	game::sub_5F0E30(ts, mv);
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x14, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x4, 4), 0x1);
	lea(mv, &ts->ebp, x86::mem(ts->eax + 0x90C, 4));
	if (!ts->eflags.zero) {
        goto loc_4E9C60;
    }
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x900, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_4E9C60;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x18, 4));
	game::sub_5F41B0(ts, mv);
	mov(&ts->ebp, ts->eax);

loc_4E9C60:
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_5120B0(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x797B6C);
	push(mv, &ts->esp, 0x797B60);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->al, x86::mem(0x89E7D8, 1));
	add(&ts->esp, 0x18);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4E9CE9;
    }
	mov(mv, &ts->eax, x86::mem(0x890108, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4E9CE9;
    }
	mov(mv, &ts->eax, x86::mem(0x89E7B4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4E9CE9;
    }
	mov(mv, &ts->eax, x86::mem(0x89E7BC, 4));
	cmp(&ts->eflags, ts->eax, 0xA);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_4E9CC9;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_4D73B0(ts, mv);
	goto loc_4E9D20;

loc_4E9CC9:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x188, 1), 0x1);
	mov(&ts->ecx, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_4E9CDE;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xB);
	game::sub_4D73B0(ts, mv);
	goto loc_4E9D20;

loc_4E9CDE:
	push(mv, &ts->esp, 0xA);
	push(mv, &ts->esp, 0x1);
	game::sub_4D73B0(ts, mv);
	goto loc_4E9D20;

loc_4E9CE9:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x797B54);
	game::sub_43DB50(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x797B48);
	game::sub_43DB50(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x20);

loc_4E9D20:
	mov(mv, &ts->al, x86::mem(0x89E7D9, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4E9D36;
    }
	mov(mv, &ts->eax, x86::mem(0x890104, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4E9F17;
    }

loc_4E9D36:
	push(mv, &ts->esp, 0x50);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4E9D88;
    }
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x18C, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E1B0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x795388);
	mov(mv, x86::mem(ts->edi + 0x4C, 4), ts->ebp);
	goto loc_4E9D8A;

loc_4E9D88:
	xor_(&ts->edi, ts->edi);

loc_4E9D8A:
	or_(&ts->ebx, 0xFFFFFFFF);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	game::sub_54F820(ts, mv);
	push(mv, &ts->esp, 0x50);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4E9DEB;
    }
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x18C, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E1B0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x795308);
	mov(mv, x86::mem(ts->edi + 0x4C, 4), ts->ebp);
	goto loc_4E9DED;

loc_4E9DEB:
	xor_(&ts->edi, ts->edi);

loc_4E9DED:
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	game::sub_54F820(ts, mv);
	push(mv, &ts->esp, 0x50);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x2);
	if (ts->eflags.zero) {
        goto loc_4E9E4B;
    }
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x18C, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E1B0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x795348);
	mov(mv, x86::mem(ts->edi + 0x4C, 4), ts->ebp);
	goto loc_4E9E4D;

loc_4E9E4B:
	xor_(&ts->edi, ts->edi);

loc_4E9E4D:
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	game::sub_54F820(ts, mv);
	push(mv, &ts->esp, 0x50);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x3);
	if (ts->eflags.zero) {
        goto loc_4E9EAB;
    }
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x18C, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E1B0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7951B0);
	mov(mv, x86::mem(ts->edi + 0x4C, 4), ts->ebp);
	goto loc_4E9EAD;

loc_4E9EAB:
	xor_(&ts->edi, ts->edi);

loc_4E9EAD:
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	game::sub_54F820(ts, mv);
	push(mv, &ts->esp, 0x50);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x4);
	if (ts->eflags.zero) {
        goto loc_4E9F0F;
    }
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x18C, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E1B0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x795200);
	mov(mv, x86::mem(ts->edi + 0x4C, 4), ts->ebp);
	push(mv, &ts->esp, ts->edi);
	goto loc_4EA1D4;

loc_4E9F0F:
	xor_(&ts->edi, ts->edi);
	push(mv, &ts->esp, ts->edi);
	goto loc_4EA1D4;

loc_4E9F17:
	push(mv, &ts->esp, 0x50);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x5);
	if (ts->eflags.zero) {
        goto loc_4E9F69;
    }
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x18C, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E1B0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x795130);
	mov(mv, x86::mem(ts->edi + 0x4C, 4), ts->ebp);
	goto loc_4E9F6B;

loc_4E9F69:
	xor_(&ts->edi, ts->edi);

loc_4E9F6B:
	or_(&ts->ebx, 0xFFFFFFFF);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	game::sub_54F820(ts, mv);
	push(mv, &ts->esp, 0x50);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x6);
	if (ts->eflags.zero) {
        goto loc_4E9FCC;
    }
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x18C, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E1B0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x795170);
	mov(mv, x86::mem(ts->edi + 0x4C, 4), ts->ebp);
	goto loc_4E9FCE;

loc_4E9FCC:
	xor_(&ts->edi, ts->edi);

loc_4E9FCE:
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	game::sub_54F820(ts, mv);
	push(mv, &ts->esp, 0x50);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x7);
	if (ts->eflags.zero) {
        goto loc_4EA02C;
    }
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x18C, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_51E1B0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x7951B0);
	mov(mv, x86::mem(ts->edi + 0x4C, 4), ts->ebp);
	goto loc_4EA02E;

loc_4EA02C:
	xor_(&ts->edi, ts->edi);

loc_4EA02E:
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	game::sub_54F820(ts, mv);
	push(mv, &ts->esp, 0x50);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x8);
	if (ts->eflags.zero) {
        goto loc_4EA08C;
    }
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x18C, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E1B0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x795200);
	mov(mv, x86::mem(ts->edi + 0x4C, 4), ts->ebp);
	goto loc_4EA08E;

loc_4EA08C:
	xor_(&ts->edi, ts->edi);

loc_4EA08E:
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	game::sub_54F820(ts, mv);
	mov(mv, &ts->al, x86::mem(0x89E7D8, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4EA0AC;
    }
	mov(mv, &ts->eax, x86::mem(0x890108, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4EA126;
    }

loc_4EA0AC:
	push(mv, &ts->esp, 0x50);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->edi);
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x9);
	if (ts->eflags.zero) {
        goto loc_4EA0FE;
    }
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x18C, 4));
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_51E1B0(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), 0x795240);
	mov(mv, x86::mem(ts->edi + 0x4C, 4), ts->ebp);
	goto loc_4EA100;

loc_4EA0FE:
	xor_(&ts->edi, ts->edi);

loc_4EA100:
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	game::sub_54F820(ts, mv);
	mov(mv, &ts->al, x86::mem(0x89E7D8, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4EA1DF;
    }
	mov(mv, &ts->eax, x86::mem(0x890108, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4EA1DF;
    }

loc_4EA126:
	mov(mv, &ts->eax, x86::mem(0x89E7B4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4EA1DF;
    }
	push(mv, &ts->esp, 0x50);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0xA);
	if (ts->eflags.zero) {
        goto loc_4EA17B;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x18C, 4));
	lea(mv, &ts->edx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4BFB50(ts, mv);
	goto loc_4EA17D;

loc_4EA17B:
	xor_(&ts->eax, ts->eax);

loc_4EA17D:
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	game::sub_54F820(ts, mv);
	push(mv, &ts->esp, 0x50);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x20, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0xB);
	if (ts->eflags.zero) {
        goto loc_4EA1D1;
    }
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x11C, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x114, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x10C, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x18C, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xFC, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->eax);
	game::sub_4BFBE0(ts, mv);
	goto loc_4EA1D3;

loc_4EA1D1:
	xor_(&ts->eax, ts->eax);

loc_4EA1D3:
	push(mv, &ts->esp, ts->eax);

loc_4EA1D4:
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	game::sub_54F820(ts, mv);

loc_4EA1DF:
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4EA20A;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_555F10(ts, mv);
	add(&ts->esp, 0x10);

loc_4EA20A:
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	game::sub_54E6A0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	game::sub_54E6E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp, 0x4);

loc_775F40:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x797B40);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_775F54:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x797B2C);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_775F68:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x797B1C);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_775F7C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x797B10);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_775F90:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x797B00);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_775FA4:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x797AF0);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_775FB8:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x797AE0);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_775FCC:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x797B10);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_775FE0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x797B00);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_775FF4:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x797AD0);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_776008:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x797AC0);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_77601C:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x797AB4);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4E9C00:
	mov(&ts->eax, 0x7E15A0);
	goto ___CxxFrameHandler;
}

void sub_4EA240(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x34, 4));
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->ebx, x86::mem(ts->ecx + 0x30, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4EA289;
    }
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_4EA250:
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	cmp(mv, &ts->eflags, ts->ecx, x86::mem(0x7F4584, 4));
	mov(mv, &ts->esi, x86::mem(ts->eax, 4));
	mov(mv, &ts->edi, x86::mem(ts->eax + 0x4, 4));
	if (ts->eflags.zero) {
        goto loc_4EA268;
    }
	cmp(mv, &ts->eflags, ts->ecx, x86::mem(0x7F4588, 4));
	if (!ts->eflags.zero) {
        goto loc_4EA281;
    }

loc_4EA268:
	mov(mv, x86::mem(ts->edi, 4), ts->esi);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->edi);
	game::sub_440EF0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x8, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	game::sub_479130(ts, mv);

loc_4EA281:
	cmp(&ts->eflags, ts->edi, ts->ebx);
	mov(&ts->eax, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_4EA250;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);

loc_4EA289:
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_4EA290(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7767E6);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->ebp);
	mov(mv, x86::mem(ts->ebp, 4), 0x797B7C);
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x30, 4));
	lea(mv, &ts->esi, x86::mem(ts->ebp + 0x30, 4));
	cmp(&ts->eflags, ts->edi, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4EA2EB;
    }
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_4EA2D0:
	mov(mv, &ts->ebx, x86::mem(ts->edi + 0x8, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ebx);
	game::sub_51CD10(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	game::sub_5379A0(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->edi, 4));
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->edi, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_4EA2D0;
    }
	pop(mv, &ts->esp, ts->ebx);

loc_4EA2EB:
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4EA30B;
    }
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379A0(ts, mv);
	add(&ts->esp, 0x4);

loc_4EA30B:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x18, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_4EA32F;
    }

loc_4EA316:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	game::sub_440EF0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_4EA316;
    }

loc_4EA32F:
	lea(mv, &ts->ecx, x86::mem(ts->ebp + 0x4, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0xFFFFFFFF);
	game::sub_4E9180(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_7767D0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x4);
	goto sub_4E9180;

loc_7767DB:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x30);
	goto sub_4835C0;

SEH_4EA290:
	mov(&ts->eax, 0x7E1D20);
	goto ___CxxFrameHandler;
}

void sub_4EA360(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77605E);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x797B80);
	mov(mv, &ts->eax, x86::mem(0x8500D0, 4));
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->eax, 0x3);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x2);
	if (ts->eflags.zero) {
        goto loc_4EA3B3;
    }
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4EA3B3;
    }
	push(mv, &ts->esp, 0x3);
	mov(&ts->ecx, 0x850080);
	game::sub_5031B0(ts, mv);
	push(mv, &ts->esp, 0x1);
	game::sub_58FD50(ts, mv);
	add(&ts->esp, 0x4);

loc_4EA3B3:
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F00F0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4EA402;
    }
	cmp(mv, &ts->eflags, x86::mem(0x850098, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_4EA402;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	game::sub_58F740(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->ecx, ts->eax);
	game::sub_582910(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4EA3EF;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->ebx);

loc_4EA3EF:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4EA402;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x58, 4), ts->ebx);

loc_4EA402:
	mov(mv, &ts->edi, x86::mem(0x8363DC, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x1C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	add(&ts->edi, 0x1C);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4EA425;
    }
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4EA425;
    }
	mov(mv, x86::mem(ts->edi, 4), ts->ebx);

loc_4EA425:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x70, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x18, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4EA43D;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x70, 4), ts->ebx);

loc_4EA43D:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x4C, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x18, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_4EA469;
    }
	goto loc_4EA450;

loc_4EA450:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	game::j__free(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_4EA450;
    }

loc_4EA469:
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0xFFFFFFFF);
	game::sub_510D40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_776040:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

loc_776048:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x4C);
	goto sub_4DEF30;

loc_776053:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x70);
	goto sub_49D870;

SEH_4F41F0:
	mov(&ts->eax, 0x7E1D78);
	goto ___CxxFrameHandler;
}

void sub_4EA490(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4C0270(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_4C0110(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_4D7400(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	cmp(&ts->eflags, ts->eax, 0x4);
	if (!ts->eflags.zero) {
        goto loc_4EA50E;
    }
	cmp(mv, &ts->eflags, x86::mem(0x83AAB4, 4), 0x8);
	if (!ts->eflags.zero) {
        goto loc_4EA55E;
    }
	push(mv, &ts->esp, 0x2);
	push(mv, &ts->esp, 0x6);
	mov(&ts->ecx, ts->esi);
	game::sub_4A4770(ts, mv);
	mov(&ts->ecx, 0x83AAB4);
	game::sub_502780(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4EA56D;
    }
	cmp(mv, &ts->eflags, x86::mem(0x83ABC4, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_4EA56D;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xA40518E9);
	push(mv, &ts->esp, 0x797B90);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4EA50E:
	cmp(&ts->eflags, ts->eax, 0x200);
	if (ts->eflags.zero) {
        goto loc_4EA51A;
    }
	cmp(&ts->eflags, ts->eax, 0x8);
	if (!ts->eflags.zero) {
        goto loc_4EA55E;
    }

loc_4EA51A:
	cmp(mv, &ts->eflags, x86::mem(0x850088, 4), 0x8);
	if (!ts->eflags.zero) {
        goto loc_4EA55E;
    }
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F01E0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x6);
	mov(&ts->ecx, ts->esi);
	game::sub_4A4770(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xA40518E9);
	push(mv, &ts->esp, 0x797B90);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4EA55E:
	mov(mv, &ts->eax, x86::mem(0x85BAB4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x6);
	mov(&ts->ecx, ts->esi);
	game::sub_4A4770(ts, mv);

loc_4EA56D:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4EA570(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	game::sub_4C07A0(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_4D77A0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	cmp(&ts->eflags, ts->eax, 0x200);
	mov(&ts->edi, 0x8);
	if (ts->eflags.zero) {
        goto loc_4EA595;
    }
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_4EA59D;
    }

loc_4EA595:
	cmp(mv, &ts->eflags, x86::mem(0x850088, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_4EA5AA;
    }

loc_4EA59D:
	cmp(&ts->eflags, ts->eax, 0x4);
	if (!ts->eflags.zero) {
        goto loc_4EA5D0;
    }
	cmp(mv, &ts->eflags, x86::mem(0x83AAB4, 4), ts->edi);
	if (!ts->eflags.zero) {
        goto loc_4EA5D0;
    }

loc_4EA5AA:
	mov(&ts->ecx, 0x83AAB4);
	game::sub_502840(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4EA5D0;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FFD0);
	push(mv, &ts->esp, 0x797BA8);
	push(mv, &ts->esp, ts->eax);
	game::sub_5426C0(ts, mv);
	add(&ts->esp, 0x10);

loc_4EA5D0:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(0x8363DC, 4));
	mov(mv, x86::mem(ts->edx + 0x1C, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	cmp(&ts->eflags, ts->eax, 0x4);
	if (!ts->eflags.zero) {
        goto loc_4EA5F2;
    }
	cmp(mv, &ts->eflags, x86::mem(0x83AAB4, 4), ts->edi);
	if (!ts->eflags.zero) {
        goto loc_4EA612;
    }
	push(mv, &ts->esp, 0x2);
	goto loc_4EA61B;

loc_4EA5F2:
	cmp(&ts->eflags, ts->eax, 0x200);
	if (ts->eflags.zero) {
        goto loc_4EA5FD;
    }
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_4EA612;
    }

loc_4EA5FD:
	cmp(mv, &ts->eflags, x86::mem(0x850088, 4), ts->edi);
	if (!ts->eflags.zero) {
        goto loc_4EA612;
    }
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F01E0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	goto loc_4EA61B;

loc_4EA612:
	mov(mv, &ts->eax, x86::mem(0x890118, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);

loc_4EA61B:
	mov(&ts->ecx, ts->esi);
	push(mv, &ts->esp, 0x6);
	game::sub_4A4770(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	cmp(&ts->eflags, ts->eax, 0x200);
	if (ts->eflags.zero) {
        goto loc_4EA634;
    }
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_4EA654;
    }

loc_4EA634:
	cmp(mv, &ts->eflags, x86::mem(0x850088, 4), ts->edi);
	if (!ts->eflags.zero) {
        goto loc_4EA654;
    }
	mov(&ts->ecx, 0x89CF48);
	game::sub_5FE4C0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	if (!ts->eflags.zero) {
        goto loc_4EA67D;
    }
	push(mv, &ts->esp, 0x224936F4);
	goto loc_4EA682;

loc_4EA654:
	mov(&ts->ecx, 0x83AAB4);
	game::sub_5027B0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4EA66C;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x224936F4);
	goto loc_4EA682;

loc_4EA66C:
	mov(&ts->ecx, 0x83A9D0);
	game::sub_503080(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4EA696;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));

loc_4EA67D:
	push(mv, &ts->esp, 0x23F359B8);

loc_4EA682:
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x797BA0);
	push(mv, &ts->esp, ts->esi);
	game::sub_542600(ts, mv);
	add(&ts->esp, 0x10);

loc_4EA696:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4EA6A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0xC98356BA);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4EA758;
    }
	if (ts->eflags.zero) {
        goto loc_4EA6D9;
    }
	cmp(&ts->eflags, ts->eax, 0x406415E3);
	if (ts->eflags.zero) {
        goto loc_4EA749;
    }
	cmp(&ts->eflags, ts->eax, 0x911AB364);
	if (!ts->eflags.zero) {
        goto loc_4EA783;
    }
	mov(mv, &ts->ecx, x86::mem(0x8363DC, 4));
	game::sub_4C0020(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4EA6D9:
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F00F0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4EA700;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x64, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4EA700;
    }
	mov(mv, &ts->ecx, x86::mem(0x8363DC, 4));
	add(&ts->ecx, 0x4);
	game::sub_4A3DA0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4EA700:
	mov(mv, &ts->eax, x86::mem(0x865198, 4));
	mov(mv, &ts->ecx, x86::mem(0x8363DC, 4));
	push(mv, &ts->esp, ts->eax);
	add(&ts->ecx, 0x4);
	game::sub_4E9210(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	cmp(&ts->eflags, ts->eax, 0x200);
	if (ts->eflags.zero) {
        goto loc_4EA725;
    }
	cmp(&ts->eflags, ts->eax, 0x8);
	if (!ts->eflags.zero) {
        goto loc_4EA783;
    }

loc_4EA725:
	cmp(mv, &ts->eflags, x86::mem(0x850088, 4), 0x8);
	if (!ts->eflags.zero) {
        goto loc_4EA783;
    }
	mov(&ts->ecx, 0x89CF48);
	game::sub_5FE4C0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4EA783;
    }
	mov(mv, &ts->eax, x86::mem(0x89D05C, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(0x8651AC, 4));
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4EA783;
    }

loc_4EA749:
	mov(mv, &ts->ecx, x86::mem(0x8363DC, 4));
	game::sub_4BFF80(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4EA758:
	cmp(&ts->eflags, ts->eax, 0xEAACFEED);
	if (!ts->eflags.zero) {
        goto loc_4EA783;
    }
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, 0x83A9D0);
	game::sub_502FF0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C8D0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x15);
	game::sub_5F41E0(ts, mv);

loc_4EA783:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);
}

void sub_4EA790(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776086);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->esi);
	game::sub_552330(ts, mv);
	xor_(&ts->eax, ts->eax);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x160, 4));
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi, 4), 0x797BB4);
	mov(mv, x86::mem(ts->esi + 0x158, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x15C, 4), ts->eax);
	game::sub_50DB40(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x7975A0);
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0x1B4, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x30, 1), 0x1);
	game::sub_542AC0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x210, 4), 0x0);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x10, 4));
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x797598);
	mov(mv, x86::mem(ts->esi + 0x20C, 4), ts->ecx);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebp);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0xC00);
	mov(&ts->ecx, ts->edi);
	mov(&ts->ebp, ts->eax);
	game::sub_50DB80(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x24, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_51BD70(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x74, 4));
	push(mv, &ts->esp, 0x79758C);
	push(mv, &ts->esp, 0xA);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	game::sub_50DBB0(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x168, 4), ts->ebx);
	game::sub_4C1530(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_776070:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto ??1strstreambuf@std@@UAE@XZ_5;

loc_776078:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x160);
	goto sub_50DB70;

SEH_4EA790:
	mov(&ts->eax, 0x7E15CC);
	goto ___CxxFrameHandler;
}

void sub_4EA880(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4EA8A0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4EA898;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4EA898:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4EA8A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776178);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x797BB4);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x160, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	game::sub_50DB70(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	game::std__strstreambuf___strstreambuf_void_(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_776170:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto ??1strstreambuf@std@@UAE@XZ_5;

SEH_4EB7A0:
	mov(&ts->eax, 0x7E0EB8);
	goto ___CxxFrameHandler;
}

void sub_4EA900(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776101);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x24);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x10, 4), ts->esi);
	game::sub_551DE0(ts, mv);
	xor_(&ts->ebx, ts->ebx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x6C, 4));
	mov(mv, x86::mem(ts->ebp - 0x4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi, 4), 0x7954C0);
	game::sub_4C1960(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0xC, 4));
	mov(mv, x86::mem(ts->esi + 0x134, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x138, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x1C8, 4), ts->ebx);
	mov(&ts->eax, 0x1);
	mov(mv, x86::mem(ts->esi + 0x1CC, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x1D0, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x1D4, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x1E0, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1E4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1D8, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x1E8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1DC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1EC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1F8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1FC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1F0, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x200, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x1F4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x204, 4), ts->ebx);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x1D8, 4));
	mov(mv, x86::mem(ts->esi + 0x210, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x214, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x208, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x218, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x20C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x21C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x238, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x18, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x23C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x4, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x220, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x230, 4), ts->ebx);
	game::sub_4C16C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x14, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->ebp - 0x4, 1), 0x2);
	mov(mv, x86::mem(ts->esi + 0x224, 4), 0x18);
	mov(mv, x86::mem(ts->esi + 0x228, 4), 0x19);
	mov(mv, x86::mem(ts->esi + 0x22C, 4), 0x1A);
	if (!ts->eflags.zero) {
        goto loc_4EAB4C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x797C5C);
	mov(mv, x86::mem(ts->ebp + 0x14, 4), ts->ecx);
	game::sub_505450(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_537A10(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x1B4, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x797C4C);
	mov(mv, x86::mem(ts->ebp + 0x14, 4), ts->eax);
	game::sub_505450(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537A10(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x797C40);
	mov(mv, x86::mem(ts->esi + 0x1B8, 4), ts->eax);
	mov(mv, x86::mem(ts->ebp + 0x14, 4), ts->edx);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x24);
	mov(&ts->ecx, 0x83A9E0);
	mov(mv, x86::mem(ts->esi + 0x1BC, 4), ts->eax);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1B8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537BE0(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x83AC34, 4));
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ebx);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1BC, 4));
	push(mv, &ts->esp, 0x790980);
	push(mv, &ts->esp, ts->eax);
	game::sub_537BE0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x19598EF7);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ebp + 0x14, 4), ts->eax);
	game::sub_5379C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x14, 4));
	add(&ts->esp, 0x18);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xCD20936B);
	push(mv, &ts->esp, ts->ecx);
	game::sub_5379C0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_4A58C0(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xE3507743);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xC34FD0D6);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x1F0, 4));
	game::sub_4A58C0(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x595086E4);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xD178B58);
	goto loc_4EAC69;

loc_4EAB4C:
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4EAC7E;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x797C34);
	mov(mv, x86::mem(ts->ebp + 0x14, 4), ts->edx);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x797C24);
	mov(mv, x86::mem(ts->esi + 0x1B4, 4), ts->eax);
	mov(mv, x86::mem(ts->ebp + 0x14, 4), ts->ecx);
	game::sub_505450(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_537A10(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x1B8, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x797C18);
	mov(mv, x86::mem(ts->ebp + 0x14, 4), ts->eax);
	game::sub_505450(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x24);
	mov(&ts->ecx, 0x84552C);
	mov(mv, x86::mem(ts->esi + 0x1BC, 4), ts->eax);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x1B8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, ts->edx);
	game::sub_537BE0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x845780, 4));
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	game::sub_4FFA80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1BC, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x790980);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537BE0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x19598EF8);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ebp + 0x14, 4), ts->eax);
	game::sub_5379C0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x14, 4));
	add(&ts->esp, 0x18);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xCD20936C);
	push(mv, &ts->esp, ts->edx);
	game::sub_5379C0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_4A58C0(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xE3507744);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xC34FD0D7);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x1F0, 4));
	game::sub_4A58C0(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x595086E5);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xD178B59);

loc_4EAC69:
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	add(&ts->esp, 0x8);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x208, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_4A58C0(ts, mv);

loc_4EAC7E:
	push(mv, &ts->esp, 0x2CF0);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->ebp + 0x14, 4), ts->eax);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->ebp - 0x4, 1), 0x3);
	if (ts->eflags.zero) {
        goto loc_4EACA6;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x220, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4C1730(ts, mv);
	goto loc_4EACA8;

loc_4EACA6:
	xor_(&ts->eax, ts->eax);

loc_4EACA8:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x238, 4));
	mov(mv, x86::mem(ts->esi + 0x234, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->ebp - 0x4, 1), 0x2);
	game::sub_4D8C70(ts, mv);
	mov(&ts->eax, 0x1);
	mov(mv, x86::mem(ts->esi + 0x13C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x150, 4), ts->ebx);
	mov(mv, x86::mem(0x8363F0, 4), 0x0);
	mov(&ts->edi, 0x2);
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x140, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x144, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x148, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x154, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x158, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x174, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x180, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x178, 4), 0x41200000);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x194, 4));
	mov(&ts->ecx, 0x4);

loc_4EAD26:
	mov(mv, x86::mem(ts->eax - 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax + 0x10, 4), ts->ebx);
	add(&ts->eax, 0x4);
	dec(&ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4EAD26;
    }
	push(mv, &ts->esp, 0xB80);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->ebp + 0x14, 4), ts->eax);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->ebp - 0x4, 1), 0x4);
	if (ts->eflags.zero) {
        goto loc_4EAD5D;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x220, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->eax);
	game::sub_63B850(ts, mv);
	goto loc_4EAD5F;

loc_4EAD5D:
	xor_(&ts->eax, ts->eax);

loc_4EAD5F:
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->eax);
	push(mv, &ts->esp, 0xB80);
	mov(mv, x86::mem(ts->ebp - 0x4, 1), 0x2);
	mov(mv, x86::mem(ts->eax + 0xB78, 4), ts->edi);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->ebp + 0x14, 4), ts->eax);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->ebp - 0x4, 1), 0x5);
	if (ts->eflags.zero) {
        goto loc_4EAD95;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x220, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->eax);
	game::sub_63B850(ts, mv);
	goto loc_4EAD97;

loc_4EAD95:
	xor_(&ts->eax, ts->eax);

loc_4EAD97:
	mov(mv, x86::mem(ts->esi + 0x50, 4), ts->eax);
	mov(&ts->edi, 0x1);
	mov(mv, x86::mem(ts->ebp - 0x4, 1), 0x2);
	mov(mv, x86::mem(ts->eax + 0xB78, 4), ts->edi);
	game::sub_510C30(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4EAE1E;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x234, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x2CD4, 4), ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4EADDE;
    }

loc_4EADC0:
	game::sub_57EF60(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x234, 4));
	game::sub_4D8180(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x234, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x2CD4, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4EADC0;
    }

loc_4EADDE:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x234, 4));
	game::sub_4D8220(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x234, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x2CCC, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4EADFC;
    }
	add(&ts->eax, 0x10);
	goto loc_4EADFE;

loc_4EADFC:
	xor_(&ts->eax, ts->eax);

loc_4EADFE:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + (ts->edx*4) + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_63A650(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + (ts->eax*4) + 0x4C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x144, 4));
	mov(mv, x86::mem(ts->ecx + 0xB78, 4), ts->edx);

loc_4EAE1E:
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), ts->edi);
	if (!ts->eflags.zero) {
        goto loc_4EAE72;
    }
	cmp(mv, &ts->eflags, x86::mem(0x863444, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4EAE6B;
    }
	mov(mv, &ts->eax, x86::mem(0x86344C, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4EAE6B;
    }
	add(&ts->eax, 0x40);
	mov(mv, x86::mem(ts->ebp + 0x14, 4), ts->eax);
	movsx(mv, &ts->eax, x86::mem(ts->eax, 1));
	or_(&ts->edi, 0xFFFFFFFF);
	cmp(&ts->eflags, ts->al, ts->bl);
	if (ts->eflags.zero) {
        goto loc_4EAE81;
    }

loc_4EAE47:
	cmp(&ts->eflags, ts->al, 0x2E);
	if (ts->eflags.zero) {
        goto loc_4EAE81;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_505300(ts, mv);
	imul(&ts->edi, ts->edi, 0x21);
	movzx(&ts->eax, ts->al);
	add(&ts->edi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x14, 4));
	add(&ts->esp, 0x4);
	inc(&ts->eax);
	mov(mv, x86::mem(ts->ebp + 0x14, 4), ts->eax);
	mov(mv, &ts->al, x86::mem(ts->eax, 1));
	cmp(&ts->eflags, ts->al, ts->bl);
	if (!ts->eflags.zero) {
        goto loc_4EAE47;
    }
	goto loc_4EAE81;

loc_4EAE6B:
	push(mv, &ts->esp, 0x789DE8);
	goto loc_4EAE77;

loc_4EAE72:
	push(mv, &ts->esp, 0x78EAFC);

loc_4EAE77:
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->edi, ts->eax);

loc_4EAE81:
	push(mv, &ts->esp, ts->edi);
	game::sub_48A2D0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4EAE97;
    }
	mov(mv, x86::mem(ts->ecx + 0x904, 4), ts->eax);

loc_4EAE97:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	cmp(&ts->eflags, ts->ecx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4EAEA4;
    }
	mov(mv, x86::mem(ts->ecx + 0x904, 4), ts->eax);

loc_4EAEA4:
	push(mv, &ts->esp, 0x160);
	mov(mv, x86::mem(ts->esi + 0x6C, 4), ts->eax);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->ebp + 0x14, 4), ts->eax);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, x86::mem(ts->ebp - 0x4, 1), 0x6);
	if (ts->eflags.zero) {
        goto loc_4EAECF;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x220, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_44CC30(ts, mv);
	goto loc_4EAED1;

loc_4EAECF:
	xor_(&ts->eax, ts->eax);

loc_4EAED1:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x154, 4));
	mov(mv, x86::mem(ts->esi + 0x118, 4), ts->eax);
	lea(mv, &ts->edi, x86::mem(ts->edi + (ts->edi*2), 4));
	shl(&ts->edi, 0x4);
	add(&ts->edi, 0x7F6088);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x2C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x28, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x24, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x20, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x18, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x4, 1), 0x2);
	game::sub_445500(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	mov(mv, x86::mem(ts->esi + 0x274, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x8, 4));
	mov(mv, x86::mem(0x7F45A4, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x118, 4));
	mov(&ts->edi, 0x1);
	push(mv, &ts->esp, 0x7906B0);
	mov(mv, x86::mem(ts->esi + 0x23C, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x240, 4), ts->edi);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x70, 4));
	game::sub_493600(ts, mv);
	push(mv, &ts->esp, 0x7906A4);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x88, 4));
	game::sub_493600(ts, mv);
	push(mv, &ts->esp, 0x79069C);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xA0, 4));
	game::sub_493600(ts, mv);
	push(mv, &ts->esp, 0x790694);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xB8, 4));
	game::sub_493600(ts, mv);
	push(mv, &ts->esp, 0x79068C);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xD0, 4));
	game::sub_493600(ts, mv);
	push(mv, &ts->esp, 0x797C10);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xE8, 4));
	game::sub_493600(ts, mv);
	push(mv, &ts->esp, 0x79067C);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x100, 4));
	game::sub_493600(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x58, 4), 0x2);
	mov(mv, x86::mem(ts->esi + 0x5C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->edi);
	mov(mv, x86::mem(ts->esi + 0x64, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x68, 4), ts->ebx);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(0x8A1CCC, 4));
	imul(&ts->ecx, ts->ecx, 0x890);
	add(&ts->ecx, ts->edx);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x790400);
	lea(mv, &ts->edx, x86::mem(ts->ebp - 0x30, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C960(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->ebp - 0x30, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_505450(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1B4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x220, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x3F800000);
	push(mv, &ts->esp, ts->edx);
	game::nullsub_1(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x278, 4), ts->ebx);
	mov(mv, x86::mem(0x8363FC, 1), ts->bl);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x3B7F8AE);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1D4, 4));
	add(&ts->esp, 0x34);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xF80DBCAE);
	push(mv, &ts->esp, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4EB08F;
    }
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	goto loc_4EB09A;

loc_4EB08F:
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);

loc_4EB09A:
	mov(mv, &ts->eax, x86::mem(0x8651AC, 4));
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(0x83592C, 4), ts->ebx);
	mov(mv, x86::mem(0x837AA0, 4), ts->eax);
	game::sub_4D82D0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x274, 4));
	or_(&ts->eax, 0xFFFFFFFF);
	mov(mv, x86::mem(ts->esi + 0x15C, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x168, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x160, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x161, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x162, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x164, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x163, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x165, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x166, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x167, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x16C, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x170, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x16D, 1), 0x1);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x14);

loc_776090:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

loc_776098:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x6C);
	goto sub_4C19E0;

loc_7760A3:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x23C);
	goto sub_4C1720;

loc_7760B1:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x797C00);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7760C5:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x797BE8);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7760D9:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x797BE8);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_7760ED:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x797BD0);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4EA900:
	mov(&ts->eax, 0x7E1620);
	goto ___CxxFrameHandler;
}

void sub_4EB130(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776124);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x280);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->ebp - 0x10, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4EB188;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, 0xFFFFFFFE);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x8371B0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4EA900(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_4EB188:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_776110:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x797C68);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4EB130:
	mov(&ts->eax, 0x7E1644);
	goto ___CxxFrameHandler;
}

void sub_4EB1A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776144);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xE4);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4EB1EE;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4D8F20(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4EB1EE:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_776130:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x797C7C);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4EB1A0:
	mov(&ts->eax, 0x7E1668);
	goto ___CxxFrameHandler;
}

void sub_4EB200(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4D9050(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4EB218;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4EB218:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4EB220(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0x9120409E);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4EB34E;
    }
	if (ts->eflags.zero) {
        goto loc_4EB371;
    }
	cmp(&ts->eflags, ts->eax, 0x43211243);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4EB2F0;
    }
	if (ts->eflags.zero) {
        goto loc_4EB2D5;
    }
	cmp(&ts->eflags, ts->eax, 0x12345678);
	if (ts->eflags.zero) {
        goto loc_4EB2A3;
    }
	cmp(&ts->eflags, ts->eax, 0x1A2826E1);
	if (!ts->eflags.zero) {
        goto loc_4EB403;
    }
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	push(mv, &ts->esp, 0x56);
	game::sub_458520(ts, mv);
	mov(mv, x86::mem(0x83AA79, 1), 0x0);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, ts->eax);
	game::sub_537950(ts, mv);
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4EB403;
    }
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_5379A0(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4EB2A3:
	cmp(mv, &ts->eflags, x86::mem(0x850078, 4), 0x8);
	if (!ts->eflags.zero) {
        goto loc_4EB403;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537950(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x797C9C);
	push(mv, &ts->esp, ts->edx);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0x14);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4EB2D5:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x28EA5749);
	push(mv, &ts->esp, ts->esi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4EB2F0:
	cmp(&ts->eflags, ts->eax, 0x5F5E3886);
	if (ts->eflags.zero) {
        goto loc_4EB325;
    }
	cmp(&ts->eflags, ts->eax, 0x911AB364);
	if (!ts->eflags.zero) {
        goto loc_4EB403;
    }
	game::sub_50D510(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4EB403;
    }
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x797C90);
	push(mv, &ts->esp, ts->eax);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4EB325:
	mov(mv, &ts->ecx, x86::mem(0x82B884, 4));
	push(mv, &ts->esp, 0x56);
	game::sub_458520(ts, mv);
	mov(mv, x86::mem(0x83AA79, 1), 0x1);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537950(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4EB34E:
	cmp(&ts->eflags, ts->eax, 0xBBCCAADD);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4EB37D;
    }
	if (ts->eflags.zero) {
        goto loc_4EB403;
    }
	cmp(&ts->eflags, ts->eax, 0xAACCDDBB);
	if (ts->eflags.zero) {
        goto loc_4EB403;
    }
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto loc_4EB403;
    }

loc_4EB371:
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_4D90D0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4EB37D:
	cmp(&ts->eflags, ts->eax, 0xC98356BA);
	if (ts->eflags.zero) {
        goto loc_4EB3A5;
    }
	cmp(&ts->eflags, ts->eax, 0xED5A2448);
	if (!ts->eflags.zero) {
        goto loc_4EB403;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, ts->edx);
	game::sub_537950(ts, mv);
	add(&ts->esp, 0x8);
	game::sub_53FEB0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4EB3A5:
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x64, 4));
	game::sub_538760(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xCC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4EB403;
    }
	cmp(&ts->eflags, ts->eax, 0x7FFFFFFF);
	if (ts->eflags.zero) {
        goto loc_4EB403;
    }
	mov(mv, &ts->eax, x86::mem(0x8651AC, 4));
	sub(mv, &ts->eax, x86::mem(ts->esi + 0xCC, 4));
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7F63DC, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4EB403;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	game::sub_511E00(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	game::sub_4D8EC0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xCC, 4), 0x0);
	add(&ts->esp, 0xC);

loc_4EB403:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);
}

void sub_4EB410(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776178);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	game::sub_552330(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x797CB0);
	mov(mv, x86::mem(ts->esi + 0x150, 4), 0x0);
	mov(mv, &ts->ecx, x86::mem(0x8651AC, 4));
	mov(mv, x86::mem(ts->esi + 0x150, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(0x8900D8, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x20, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0x0);
	game::sub_50D2D0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537950(ts, mv);
	add(&ts->esp, 0xC);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(0x83AA04, 4), 0x0);
	game::sub_4D9300(ts, mv);
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4EB4D2;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_555F10(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	add(&ts->esp, 0x10);
	game::sub_54E6A0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	game::sub_54E6E0(ts, mv);

loc_4EB4D2:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_776170:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto ??1strstreambuf@std@@UAE@XZ_5;

SEH_4EB7A0:
	mov(&ts->eax, 0x7E0EB8);
	goto ___CxxFrameHandler;
}

void sub_4EB4F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4EB510(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4EB508;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4EB508:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4EB510(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776178);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x797CB0);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4EB55B;
    }
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379A0(ts, mv);
	add(&ts->esp, 0x4);

loc_4EB55B:
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	game::std__strstreambuf___strstreambuf_void_(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_776170:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto ??1strstreambuf@std@@UAE@XZ_5;

SEH_4EB7A0:
	mov(&ts->eax, 0x7E0EB8);
	goto ___CxxFrameHandler;
}

void sub_4EB580(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776178);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	game::sub_552330(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	mov(mv, x86::mem(ts->esi, 4), 0x797CCC);
	mov(mv, x86::mem(ts->esi + 0x150, 1), 0x0);
	game::sub_4C3000(ts, mv);
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4EB5EE;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_555F10(ts, mv);
	add(&ts->esp, 0x10);

loc_4EB5EE:
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	game::sub_54E6A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_54E6E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_776170:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto ??1strstreambuf@std@@UAE@XZ_5;

SEH_4EB7A0:
	mov(&ts->eax, 0x7E0EB8);
	goto ___CxxFrameHandler;
}

void sub_4EB620(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4EB640(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4EB638;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4EB638:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4EB640(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x797CCC);
	goto ??1strstreambuf@std@@UAE@XZ_5;
}

void sub_4EB650(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776164);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x15C);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4EB69E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4D93C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4EB69E:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_776150:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x797CE8);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4EB650:
	mov(&ts->eax, 0x7E168C);
	goto ___CxxFrameHandler;
}

void sub_4EB6B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4D9470(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4EB6C8;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4EB6C8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4EB6D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4EB6F0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4EB6E8;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4EB6E8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4EB6F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x797CF8);
	goto ??1strstreambuf@std@@UAE@XZ_5;
}

void sub_4EB700(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776178);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	game::sub_552330(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x0);
	mov(mv, x86::mem(ts->esi, 4), 0x797D14);
	game::sub_4C58B0(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xBCB18F38);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x42ADB44C);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_776170:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto ??1strstreambuf@std@@UAE@XZ_5;

SEH_4EB7A0:
	mov(&ts->eax, 0x7E0EB8);
	goto ___CxxFrameHandler;
}

void sub_4EB770(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4EB790(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4EB788;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4EB788:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4EB790(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x797D14);
	goto ??1strstreambuf@std@@UAE@XZ_5;
}

void sub_4EB7A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776178);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	game::sub_552330(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x0);
	mov(mv, x86::mem(ts->esi, 4), 0x797D30);
	game::sub_4C5A40(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x4AF2E79E);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x42ADB44C);
	push(mv, &ts->esp, ts->edi);
	game::sub_537B80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_776170:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto ??1strstreambuf@std@@UAE@XZ_5;

SEH_4EB7A0:
	mov(&ts->eax, 0x7E0EB8);
	goto ___CxxFrameHandler;
}

void sub_4EB810(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4EB830(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4EB828;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4EB828:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4EB830(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x797D30);
	goto ??1strstreambuf@std@@UAE@XZ_5;
}

void sub_4EB840(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x836498, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4EB86D;
    }
	mov(mv, x86::mem(ts->eax + 0x14, 4), ts->ebx);
	mov(mv, &ts->eax, x86::mem(0x836498, 4));
	mov(mv, x86::mem(ts->eax + 0x50, 4), ts->ebx);
	mov(mv, &ts->ecx, x86::mem(0x836498, 4));
	mov(mv, x86::mem(ts->ecx + 0x1C, 4), ts->ebx);
	mov(mv, &ts->edx, x86::mem(0x836498, 4));
	mov(mv, x86::mem(ts->edx + 0x54, 4), ts->ebx);

loc_4EB86D:
	push(mv, &ts->esp, 0x79656C);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->ebx);
	game::sub_43DDA0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x4, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x18, 4), 0x8);
	mov(mv, x86::mem(ts->esi + 0x20, 2), ts->bx);
	mov(mv, x86::mem(ts->esi + 0x7, 1), ts->bl);
	mov(mv, &ts->eax, x86::mem(0x8650D0, 4));
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4EB8B4;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x5C, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	game::sub_6FBF76(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_4EB8B4:
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0x4);
	game::sub_57E3B0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_4D9DB0(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_4EB8D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, 0x783FE5);
	xor_(&ts->ebx, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->ebx);
	game::sub_43DDA0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x4, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x18, 4), 0x8);
	mov(mv, x86::mem(ts->esi + 0x20, 2), ts->bx);
	mov(mv, x86::mem(ts->esi + 0x7, 1), ts->bl);
	mov(mv, &ts->eax, x86::mem(0x8650D0, 4));
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4EB91D;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x5C, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	game::sub_6FBF76(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);

loc_4EB91D:
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, 0x4);
	game::sub_57E3B0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_4D9DB0(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_4EB940(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77619B);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x0);
	game::sub_50CA00(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x10, 4), 0x0);
	mov(mv, x86::mem(ts->esi + 0xC, 4), 0x0);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	add(&ts->esi, 0x14);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4EB9AE;
    }

loc_4EB988:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::j__free(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	game::sub_440EF0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_4EB988;
    }

loc_4EB9AE:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_4EB9D9;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_4EB9C0:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	game::sub_440EF0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_4EB9C0;
    }

loc_4EB9D9:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_776190:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x14);
	goto sub_4835C0;

SEH_4EB940:
	mov(&ts->eax, 0x7E16B0);
	goto ___CxxFrameHandler;
}

void sub_4EB9F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	lea(mv, &ts->ebx, x86::mem(ts->esi + 0x10, 4));
	if (ts->eflags.zero) {
        goto loc_4EBA15;
    }
	cmp(&ts->eflags, ts->eax, 0x7FFFFFFF);
	if (ts->eflags.zero) {
        goto loc_4EBA15;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->ebx);
	game::sub_577310(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4EBA66;
    }

loc_4EBA15:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4EBA66;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edx);
	game::sub_537BE0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esi + 0x4, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784264, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	game::__ftol2(ts, mv);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->ebx, 4), ts->eax);
	game::j__free(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	game::sub_440EF0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	add(&ts->esp, 0x10);
	dec(&ts->eax);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->eax);
	pop(mv, &ts->esp, ts->edi);

loc_4EBA66:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4EBA8C;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x10, 4), 0xC18C12FD);
	if (!ts->eflags.zero) {
        goto loc_4EBA8C;
    }
	mov(mv, &ts->ecx, x86::mem(0x8900D8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ecx, 4));
	cmp(&ts->eflags, ts->ecx, 0x7);
	if (ts->eflags.zero) {
        goto loc_4EBAA1;
    }
	cmp(&ts->eflags, ts->ecx, 0x2);
	if (ts->eflags.zero) {
        goto loc_4EBAA1;
    }
	cmp(&ts->eflags, ts->ecx, 0x3);
	if (ts->eflags.zero) {
        goto loc_4EBAA1;
    }

loc_4EBA8C:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4EBAAF;
    }
	mov(mv, &ts->ebx, x86::mem(ts->ebx, 4));
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4EBAA1;
    }
	cmp(&ts->eflags, ts->ebx, 0x7FFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_4EBAAF;
    }

loc_4EBAA1:
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);

loc_4EBAAF:
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_4EBAC0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esi + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_4EBADD;
    }
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x10, 4), 0x0);
	game::sub_4EB9F0(ts, mv);

loc_4EBADD:
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ebx);
	game::sub_43DBB0(ts, mv);
	inc(&ts->eax);
	push(mv, &ts->esp, ts->eax);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->edi);
	game::sub_43DBD0(ts, mv);
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x14, 4));
	game::sub_479130(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	inc(&ts->eax);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x4);
}

void sub_4EBB10(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x28);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x10, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x14, 4));
	and_(&ts->eax, ts->ebx);
	and_(&ts->ecx, ts->edi);
	or_(&ts->eax, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4EBDA3;
    }
	mov(mv, &ts->al, x86::mem(0x89E7D9, 1));
	test(&ts->eflags, ts->al, ts->al);
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x3C, 4));
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x4, 4));
	if (!ts->eflags.zero) {
        goto loc_4EBB4E;
    }
	mov(mv, &ts->eax, x86::mem(0x890104, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4EBC9C;
    }

loc_4EBB4E:
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, 0x864630);
	game::sub_43BE80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	movzx(&ts->eax, ts->al);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x797D4C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537BE0(ts, mv);
	movsx(mv, &ts->edx, x86::mem(ts->edi + 0xA, 2));
	push(mv, &ts->esp, ts->edx);
	game::sub_56DD90(ts, mv);
	mov(&ts->edi, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_4FFAA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, ts->eax);
	game::sub_537BE0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x28, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x7845D4);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0x2C);
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F00F0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4EBD93;
    }
	mov(mv, &ts->ecx, x86::mem(0x890118, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x20, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4EBC8B;
    }
	mov(mv, &ts->edx, x86::mem(0x86518C, 4));
	mov(mv, &ts->edi, x86::mem(ts->ecx + 0x1C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	sub(&ts->edx, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x3C, 4), ts->edx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	push(mv, &ts->esp, ts->eax);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x20, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	game::sub_50CA50(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x40, 4));
	add(&ts->esp, 0x4);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784264, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	game::__ftol2(ts, mv);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	game::sub_577240(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x44, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, ts->eax);
	game::sub_537BE0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	add(&ts->esp, 0xC);
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	and_(&ts->eax, 0x80000001);
	if (!ts->eflags.sign) {
        goto loc_4EBC4F;
    }
	dec(&ts->eax);
	or_(&ts->eax, 0xFFFFFFFE);
	inc(&ts->eax);

loc_4EBC4F:
	if (!ts->eflags.zero) {
        goto loc_4EBD93;
    }
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fabs(&ts->fp, x86::fp_index(0));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865154, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4EBD93;
    }
	push(mv, &ts->esp, 0x862A0519);
	game::sub_4FFA80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x48, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_4EBAC0(ts, mv);
	goto loc_4EBD93;

loc_4EBC8B:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x44, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);
	goto loc_4EBD93;

loc_4EBC9C:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x44, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->edi + 0x1C, 4));
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4EBDA2;
    }
	mov(mv, &ts->eax, x86::mem(0x890118, 4));
	mov(mv, &ts->ebx, x86::mem(ts->eax + 0x24, 4));
	cmp(mv, &ts->eflags, x86::mem(0x89E7B0, 4), 0x7);
	if (!ts->eflags.zero) {
        goto loc_4EBCCF;
    }
	mov(&ts->ecx, ts->edi);
	game::sub_5EE250(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4EBCD8;
    }

loc_4EBCCF:
	cmp(mv, &ts->eflags, x86::mem(0x89E7B0, 4), 0x3);
	if (!ts->eflags.zero) {
        goto loc_4EBCE3;
    }

loc_4EBCD8:
	mov(mv, &ts->eax, x86::mem(0x890118, 4));
	mov(mv, &ts->ebx, x86::mem(ts->eax + 0x24, 4));
	sub(mv, &ts->ebx, x86::mem(ts->eax + 0x28, 4));

loc_4EBCE3:
	movsx(mv, &ts->edi, x86::mem(ts->edi + 0xA, 1));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x28, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x7845D4);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537BE0(ts, mv);
	push(mv, &ts->esp, ts->edi);
	game::sub_4FFAA0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, ts->edx);
	game::sub_537BE0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x30, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x797D4C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537BE0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x24, 4));
	add(&ts->esp, 0x28);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4EBD27;
    }
	mov(mv, x86::mem(ts->esi + 0x24, 4), ts->edi);

loc_4EBD27:
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x1C, 4));
	mov(mv, &ts->al, x86::mem(ts->edx + 0xD, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4EBD3C;
    }
	mov(mv, &ts->eax, x86::mem(0x86518C, 4));
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->eax);

loc_4EBD3C:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, &ts->ecx, x86::mem(0x86518C, 4));
	sub(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x3C, 4), ts->ecx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x3C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x787ADC, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4EBD6E;
    }
	mov(mv, &ts->edx, x86::mem(0x890118, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x14, 4));
	mov(mv, x86::mem(ts->esi + 0x50, 4), ts->eax);

loc_4EBD6E:
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	game::sub_577240(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x38, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, ts->eax);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0xC);

loc_4EBD93:
	mov(mv, &ts->ecx, x86::mem(0x865198, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x48, 4));
	game::sub_4EB9F0(ts, mv);

loc_4EBDA2:
	pop(mv, &ts->esp, ts->ebp);

loc_4EBDA3:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x28);
	retn(mv, &ts->esp, 0x4);
}

void sub_4EBDB0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776918);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->edi);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x20, 4));
	lea(mv, &ts->esi, x86::mem(ts->edi + 0x20, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4EBDF9;
    }

loc_4EBDE0:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	game::j__free(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_4EBDE0;
    }

loc_4EBDF9:
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->eax, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_4EBE20;
    }

loc_4EBE07:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	game::sub_440EF0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_4EBE07;
    }

loc_4EBE20:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_776910:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_4835C0;

SEH_4FBFC0:
	mov(&ts->eax, 0x7E16D4);
	goto ___CxxFrameHandler;
}

void sub_4EBE40(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776918);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x50, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4EBE7D;
    }
	mov(&ts->ecx, ts->edi);
	game::sub_4EB940(ts, mv);
	push(mv, &ts->esp, ts->edi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4EBE7D:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->eax, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_4EBEA9;
    }
	goto loc_4EBE90;

loc_4EBE90:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	game::sub_440EF0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_4EBE90;
    }

loc_4EBEA9:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_776910:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_4835C0;

SEH_4FBFC0:
	mov(&ts->eax, 0x7E16D4);
	goto ___CxxFrameHandler;
}

void sub_4EBEC0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	sub(&ts->esp, 0xE4);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ebx, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x34, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x38, 4), ts->ebx);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->al, x86::mem(ts->ebx + 0x20, 1));
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, &ts->eax, x86::mem(0x8900D8, 4));
	if (ts->eflags.zero) {
        goto loc_4EBF17;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), 0x6);
	if (!ts->eflags.zero) {
        goto loc_4EBF17;
    }

loc_4EBEF2:
	push(mv, &ts->esp, 0x4A8764A8);
	game::sub_4FFA80(ts, mv);

loc_4EBEFC:
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x28, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537BE0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x28, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0x10);
	goto loc_4EBFA4;

loc_4EBF17:
	cmp(mv, &ts->eflags, x86::mem(0x89CF48, 4), 0x6);
	if (!ts->eflags.zero) {
        goto loc_4EBF98;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), 0x6);
	if (!ts->eflags.zero) {
        goto loc_4EBF98;
    }
	mov(&ts->ecx, 0x89CF48);
	game::sub_5FE530(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4EBF41;
    }
	mov(&ts->ecx, 0x89CF48);
	game::sub_5FE4C0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4EBF98;
    }

loc_4EBF41:
	mov(mv, &ts->eax, x86::mem(0x89D05C, 4));
	sub(mv, &ts->eax, x86::mem(0x8651AC, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fcom(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4EBF83;
    }
	game::__ftol2(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4EBF98;
    }
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xFA14812C);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	goto loc_4EBEFC;

loc_4EBF83:
	mov(&ts->ecx, 0x89CF48);
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	mov(mv, x86::mem(ts->ebx + 0x20, 1), 0x1);
	game::sub_609750(ts, mv);
	goto loc_4EBEF2;

loc_4EBF98:
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x28, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);

loc_4EBFA4:
	mov(mv, &ts->esi, x86::mem(0x89CF4C, 4));
	mov(&ts->ecx, ts->esi);
	game::sub_5EFAB0(ts, mv);
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4EC098;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->eax, 0x4);
	if (ts->eflags.zero) {
        goto loc_4EC098;
    }
	cmp(&ts->eflags, ts->eax, 0x6);
	if (ts->eflags.zero) {
        goto loc_4EC098;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4EC098;
    }
	cmp(&ts->eflags, ts->eax, 0x5);
	if (ts->eflags.zero) {
        goto loc_4EC098;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_5EFAB0(ts, mv);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x30, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA50(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784264, 4));
	add(&ts->esp, 0x4);
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	game::__ftol2(ts, mv);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xC4, 4));
	push(mv, &ts->esp, ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	game::sub_577240(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x30, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC0, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537BE0(ts, mv);
	add(&ts->esp, 0xC);
	mov(&ts->ecx, ts->esi);
	game::sub_5EFA00(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4EC0A4;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	game::__ftol2(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->eax);
	and_(&ts->eax, 0x80000001);
	if (!ts->eflags.sign) {
        goto loc_4EC067;
    }
	dec(&ts->eax);
	or_(&ts->eax, 0xFFFFFFFE);
	inc(&ts->eax);

loc_4EC067:
	if (!ts->eflags.zero) {
        goto loc_4EC0A4;
    }
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fsubr(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fabs(&ts->fp, x86::fp_index(0));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x865154, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4EC0A4;
    }
	push(mv, &ts->esp, 0x862A0519);
	game::sub_4FFA80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x50, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_4EBAC0(ts, mv);
	goto loc_4EC0A4;

loc_4EC098:
	mov(mv, &ts->edx, x86::mem(ts->ebx + 0x30, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x4);

loc_4EC0A4:
	mov(mv, &ts->al, x86::mem(0x8500C9, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4EC0CB;
    }
	mov(mv, &ts->eax, x86::mem(0x89CF48, 4));
	cmp(&ts->eflags, ts->eax, 0x4);
	if (ts->eflags.zero) {
        goto loc_4EC0CB;
    }
	cmp(&ts->eflags, ts->eax, 0x6);
	if (ts->eflags.zero) {
        goto loc_4EC0CB;
    }
	mov(mv, &ts->eax, x86::mem(0x8900D8, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), 0x6);
	mov(mv, x86::mem(ts->esp + 0x17, 1), 0x0);
	if (!ts->eflags.zero) {
        goto loc_4EC0D0;
    }

loc_4EC0CB:
	mov(mv, x86::mem(ts->esp + 0x17, 1), 0x1);

loc_4EC0D0:
	xor_(&ts->esi, ts->esi);
	add(&ts->ebx, 0x38);

loc_4EC0D5:
	push(mv, &ts->esp, 0x1);
	game::sub_48B1E0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x890080, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->eax);
	game::sub_5F0E30(ts, mv);
	mov(&ts->edi, ts->eax);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4EC466;
    }
	mov(&ts->ecx, ts->edi);
	game::sub_5EC060(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4EC466;
    }
	mov(mv, &ts->al, x86::mem(ts->esp + 0x17, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4EC466;
    }
	mov(mv, &ts->eax, x86::mem(0x89CF50, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4EC466;
    }
	cmp(mv, &ts->eflags, x86::mem(0x89CF48, 4), 0x4);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4EC15C;
    }
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F0220(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	cmp(&ts->eflags, ts->eax, 0x4);
	if (ts->eflags.zero) {
        goto loc_4EC466;
    }
	cmp(&ts->eflags, ts->eax, 0x6);
	if (ts->eflags.zero) {
        goto loc_4EC466;
    }
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4EC466;
    }
	cmp(&ts->eflags, ts->eax, 0x5);
	if (ts->eflags.zero) {
        goto loc_4EC466;
    }

loc_4EC15C:
	mov(mv, &ts->ecx, x86::mem(0x89CF4C, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F0220(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x10, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_4EC466;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->edi + 0x60, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x40, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x40, 4));
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x60, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x4, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x44, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ecx + 0x8, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x48, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x58, 4));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x54, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->eax + 0x50, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (!ts->eflags.parity) {
        goto loc_4EC45B;
    }
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(2));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fld(&ts->fp, x86::fp_index(0), x86::fp_index(3));
	fmul(&ts->fp, x86::fp_index(0), x86::fp_index(4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4EC461;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784500, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x5);
	if (ts->eflags.parity) {
        goto loc_4EC461;
    }
	push(mv, &ts->esp, ts->ecx);
	add(&ts->edi, 0x90);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x74, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	game::sub_401340(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x7C, 4));
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x24, 4));
	add(&ts->esp, 0xC);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x60, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	push(mv, &ts->esp, ts->edx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x94, 4));
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x797D5C, 4));
	push(mv, &ts->esp, ts->eax);
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xA8, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x8C, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x7C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x9C, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x797D5C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xAC, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x90, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x80, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xA0, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x797D5C, 4));
	faddp(&ts->fp, x86::fp_index(1), x86::fp_index(0));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xB0, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC0, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC0, 4));
	fxch(&ts->fp, x86::fp_index(0), x86::fp_index(1));
	mov(mv, x86::mem(ts->esp + 0x70, 4), ts->ecx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x68, 4));
	mov(&ts->ecx, ts->edi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x6C, 4));
	game::sub_5BC4A0(ts, mv);
	mov(&ts->ecx, ts->edi);
	game::sub_5BC1F0(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	mov(&ts->ecx, ts->edi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	game::sub_5BC200(ts, mv);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->eax);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (!ts->eflags.zero) {
        goto loc_4EC461;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4EC461;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x18, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.parity) {
        goto loc_4EC461;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x7D7D3C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4EC461;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x10, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x41);
	if (ts->eflags.parity) {
        goto loc_4EC461;
    }
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->esi);
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	mov(&ts->ecx, 0x89CF48);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x797D58, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x24, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	fdiv(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x14, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x797D54, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	game::sub_5F0220(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_5FE290(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4EC3BC;
    }
	push(mv, &ts->esp, 0x7F68E0);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xE4, 4));
	game::sub_440FD0(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xE0, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_4A9DF0(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC4, 4));
	game::sub_5054A0(ts, mv);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0xC4, 4));
	push(mv, &ts->esp, ts->edx);
	goto loc_4EC3D8;

loc_4EC3BC:
	mov(&ts->eax, 0xFF);
	mov(mv, x86::mem(ts->esp + 0x50, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x54, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x58, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x5C, 4), ts->eax);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x54, 4));
	push(mv, &ts->esp, ts->eax);

loc_4EC3D8:
	mov(mv, &ts->ecx, x86::mem(ts->ebx, 4));
	game::sub_517E20(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x20, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x797D50, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x48, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	mov(mv, x86::mem(ts->esp + 0x50, 4), ts->ecx);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x28, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebx, 4));
	fsub(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78DA30, 4));
	push(mv, &ts->esp, ts->edx);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x50, 4));
	game::sub_517C10(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x1C, 4));
	fsqrt(&ts->fp, x86::fp_index(0));
	push(mv, &ts->esp, 0x3F800000);
	push(mv, &ts->esp, 0x3F000000);
	push(mv, &ts->esp, ts->ecx);
	fdivr(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78B018, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	game::sub_401090(ts, mv);
	fst(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x44, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebx, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x48, 4));
	add(&ts->esp, 0xC);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x3C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x48, 4), 0x3F800000);
	game::sub_517DB0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebx, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA50(ts, mv);
	goto loc_4EC46E;

loc_4EC45B:
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));
	fstp(&ts->fp, x86::fp_index(0), x86::fp_index(0));

loc_4EC461:
	mov(mv, &ts->edx, x86::mem(ts->ebx, 4));
	push(mv, &ts->esp, ts->edx);
	goto loc_4EC469;

loc_4EC466:
	mov(mv, &ts->eax, x86::mem(ts->ebx, 4));
	push(mv, &ts->esp, ts->eax);

loc_4EC469:
	game::sub_50CA00(ts, mv);

loc_4EC46E:
	add(&ts->esp, 0x4);
	inc(&ts->esi);
	add(&ts->ebx, 0x4);
	cmp(&ts->eflags, ts->esi, 0x6);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4EC0D5;
    }
	mov(mv, &ts->ecx, x86::mem(0x865198, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x34, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x50, 4));
	game::sub_4EB9F0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_4EC4A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x8900AC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x9A4, 4));
	sub(&ts->esp, 0x100);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x50, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4EC55E;
    }
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x108, 4));
	add(&ts->edx, 0x12);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x44ABAC78);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, 0x100);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C960(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x89CF48, 4));
	add(&ts->esp, 0x10);
	cmp(&ts->eflags, ts->eax, 0x6);
	if (ts->eflags.zero) {
        goto loc_4EC548;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x50, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xC, 4));
	cmp(mv, &ts->eflags, ts->ecx, x86::mem(ts->esi + 0x8, 4));
	if (!ts->eflags.zero) {
        goto loc_4EC50D;
    }
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x10, 4), 0x0);
	game::sub_4EB9F0(ts, mv);

loc_4EC50D:
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edx);
	game::sub_43DBB0(ts, mv);
	inc(&ts->eax);
	push(mv, &ts->esp, ts->eax);
	game::j__malloc(ts, mv);
	mov(&ts->edi, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_43DBD0(ts, mv);
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x14, 4));
	game::sub_479130(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC, 4));
	inc(&ts->eax);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x100);
	retn(mv, &ts->esp);

loc_4EC548:
	mov(mv, &ts->eax, x86::mem(0x8363DC, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4EC55E;
    }
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	game::sub_4E9470(ts, mv);

loc_4EC55E:
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x100);
	retn(mv, &ts->esp);
}

void sub_4EC570(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x8900AC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x9A4, 4));
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ecx + 0x50, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4EC599;
    }
	push(mv, &ts->esp, 0xA2DA0CCD);
	game::sub_4FFA80(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	game::sub_4EBAC0(ts, mv);

loc_4EC599:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4EC5A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x18, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	if (ts->eflags.zero) {
        goto loc_4EC5B5;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_4C68D0(ts, mv);

loc_4EC5B5:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x1C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4EC5C2;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_4C6B80(ts, mv);

loc_4EC5C2:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x34, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4EC5CF;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_4C7090(ts, mv);

loc_4EC5CF:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4EC5DC;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_4EBB10(ts, mv);

loc_4EC5DC:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x28, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4EC5E9;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_4C7B20(ts, mv);

loc_4EC5E9:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x24, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4EC5F6;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_4C7AA0(ts, mv);

loc_4EC5F6:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x2C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4EC603;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_4DA590(ts, mv);

loc_4EC603:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4EC610;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_4C7F00(ts, mv);

loc_4EC610:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x3C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4EC61D;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_4AA1B0(ts, mv);

loc_4EC61D:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x40, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4EC62A;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_4DA190(ts, mv);

loc_4EC62A:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x44, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4EC637;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_4AAFC0(ts, mv);

loc_4EC637:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x48, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4EC644;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_4DA090(ts, mv);

loc_4EC644:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4EC651;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_4DA900(ts, mv);

loc_4EC651:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4EC65E;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_4EBEC0(ts, mv);

loc_4EC65E:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4EC66B;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_4AB5B0(ts, mv);

loc_4EC66B:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4EC678;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_4DA9A0(ts, mv);

loc_4EC678:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x5C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4EC685;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_4DA640(ts, mv);

loc_4EC685:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x64, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4EC692;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_4C9210(ts, mv);

loc_4EC692:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x6C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4EC69F;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_4DABD0(ts, mv);

loc_4EC69F:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x70, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4EC6AC;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_4C9CE0(ts, mv);

loc_4EC6AC:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x74, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4EC6B9;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_4A9E70(ts, mv);

loc_4EC6B9:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x78, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4EC6C6;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_4A9FF0(ts, mv);

loc_4EC6C6:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x7C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4EC6D2;
    }
	game::sub_4DB8C0(ts, mv);

loc_4EC6D2:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x80, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4EC6E2;
    }
	push(mv, &ts->esp, ts->edi);
	game::sub_4A9EF0(ts, mv);

loc_4EC6E2:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x8);
}

void sub_4EC6F0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x836560, 4));
	cmp(&ts->eflags, ts->eax, 0x836560);
	if (ts->eflags.zero) {
        goto locret_4EC72F;
    }
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_4EC700:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x8, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	game::sub_440EF0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8364B4, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	game::sub_43F920(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x836560, 4));
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->eax, 0x836560);
	if (!ts->eflags.zero) {
        goto loc_4EC700;
    }
	pop(mv, &ts->esp, ts->esi);

locret_4EC72F:
	retn(mv, &ts->esp);
}

void sub_4EC730(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(0x836560, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x836560);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4EC75E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_4EC750:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->edx + 0x4, 4), ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4EC763;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4EC750;
    }

loc_4EC75E:
	pop(mv, &ts->esp, ts->edi);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_4EC763:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x8, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	push(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	game::sub_440EF0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8364BC, 4));
	add(&ts->esp, 0x4);
	inc(&ts->eax);
	mov(mv, x86::mem(0x8364BC, 4), ts->eax);
	mov(&ts->eax, ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4EC790(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7761BB);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(0x8364B8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->edi, ts->ecx);
	game::sub_43F8F0(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	xor_(&ts->ebx, ts->ebx);
	cmp(&ts->eflags, ts->esi, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4EC7F0;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_4EC730(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x28, 4));
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->ebx);
	mov(&ts->eax, ts->esi);
	goto loc_4EC7F2;

loc_4EC7F0:
	xor_(&ts->eax, ts->eax);

loc_4EC7F2:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->edi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax, 4), ts->edi);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x8);

unknown_libname_58:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_4AC290(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

SEH_4EC820:
	mov(&ts->eax, 0x7E16F8);
	goto ___CxxFrameHandler;
}

void sub_4EC820(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7761BB);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(0x8364B8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->edi, ts->ecx);
	game::sub_43F8F0(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->esi);
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4EC891;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_4EC730(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x24, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x2C, 4));
	mov(mv, x86::mem(ts->esi + 0x1C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x28, 4));
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x30, 4));
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->edx);
	mov(mv, x86::mem(ts->esi + 0x18, 4), 0x0);
	mov(&ts->eax, ts->esi);
	goto loc_4EC893;

loc_4EC891:
	xor_(&ts->eax, ts->eax);

loc_4EC893:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->edi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x14);

unknown_libname_58:
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_4AC290(ts, mv);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp);

SEH_4EC820:
	mov(&ts->eax, 0x7E16F8);
	goto ___CxxFrameHandler;
}

void sub_4EC8C0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	sub(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x8, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->esi, 4), 0x0);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4EC8E8;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4EC8E8;
    }
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x85AD40);
	game::sub_532C20(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4EC947;
    }

loc_4EC8E8:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x20, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x24, 4));
	mov(mv, x86::mem(ts->ebp - 0x10, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x28, 4));
	mov(mv, x86::mem(ts->ebp - 0xC, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x2C, 4));
	mov(mv, x86::mem(ts->ebp - 0x8, 4), ts->ecx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), ts->edx);
	game::sub_500DE0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_4AC1E0(ts, mv);
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x4, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0xC, 4));
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, 0x0);
	sub(&ts->esp, 0x8);
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	mov(&ts->ecx, ts->edi);
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0x4, 4));
	fld(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x8, 4));
	fadd(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp - 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784260, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	game::sub_4EC820(ts, mv);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->eax);
	game::sub_4AC620(ts, mv);

loc_4EC947:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);
}

void sub_4EC950(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7761D8);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->ebp - 0x10, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), ts->esi);
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->esi);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, x86::mem(ts->esi + 0x18, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(0x89E7A0, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), 0x0);
	game::sub_5D3E40(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x4);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x14, 4), ts->eax);
	game::sub_4EC790(ts, mv);
	mov(&ts->ebx, 0x1);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x4);
	mov(&ts->ecx, ts->esi);
	game::sub_4EC790(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	push(mv, &ts->esp, 0x90FE80F3);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A60(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	push(mv, &ts->esp, 0x40CDC515);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A60(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x18, 4));
	push(mv, &ts->esp, 0xF2A54430);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A60(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x89E7B0, 4));
	add(&ts->esp, 0x18);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4ECA9A;
    }
	mov(mv, &ts->al, x86::mem(0x89E7D9, 1));
	test(&ts->eflags, ts->al, ts->al);
	mov(mv, &ts->edi, x86::mem(0x883DAC, 4));
	if (!ts->eflags.zero) {
        goto loc_4ECA9A;
    }
	mov(mv, &ts->eax, x86::mem(0x890104, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4ECA9A;
    }
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4ECA53;
    }
	movzx(mv, &ts->edx, x86::mem(ts->edi + 0xBA, 2));
	mov(mv, &ts->eax, x86::mem(0x890118, 4));
	mov(mv, x86::mem(ts->ebp + 0x8, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0xC14, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0xC10, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784248, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x12345678);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	game::sub_4EC820(ts, mv);
	or_(mv, x86::mem(ts->eax + 0x18, 4), ts->ebx);

loc_4ECA53:
	mov(mv, &ts->eax, x86::mem(0x89E7B4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4ECA9A;
    }
	movzx(mv, &ts->ecx, x86::mem(ts->edi + 0xBC, 2));
	mov(mv, &ts->eax, x86::mem(0x890118, 4));
	mov(mv, x86::mem(ts->ebp + 0x8, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xC24, 4));
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x8, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784248, 4));
	fstp(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0xC20, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x12345678);
	push(mv, &ts->esp, 0x2);
	mov(&ts->ecx, ts->esi);
	game::sub_4EC820(ts, mv);
	or_(mv, x86::mem(ts->eax + 0x18, 4), ts->ebx);

loc_4ECA9A:
	mov(mv, &ts->eax, x86::mem(0x890080, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x18, 4));
	sub(&ts->edx, ts->ecx);
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4ECAD6;
    }
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_4ECAB0:
	add(&ts->ecx, ts->edi);
	mov(mv, &ts->eax, x86::mem(ts->eax + (ts->ecx*4) + 0x1C, 4));
	movsx(mv, &ts->ecx, x86::mem(ts->eax + 0xA, 2));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x3);
	mov(&ts->ecx, ts->esi);
	game::sub_4EC790(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x890080, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x14, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x18, 4));
	inc(&ts->edi);
	sub(&ts->edx, ts->ecx);
	cmp(&ts->eflags, ts->edi, ts->edx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4ECAB0;
    }

loc_4ECAD6:
	mov(&ts->ecx, 0x89CF48);
	game::sub_5F00F0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4ECB34;
    }
	mov(mv, &ts->edx, x86::mem(0x890080, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x14, 4));
	xor_(&ts->ebx, ts->ebx);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4ECB34;
    }
	mov(&ts->edi, 0x1C);
	goto loc_4ECB00;

loc_4ECB00:
	mov(mv, &ts->eax, x86::mem(ts->edi + (ts->edx), 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x14, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x4, 4), 0x1);
	if (!ts->eflags.zero) {
        goto loc_4ECB15;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x900, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_4ECB29;
    }

loc_4ECB15:
	movsx(mv, &ts->eax, x86::mem(ts->eax + 0xA, 2));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x3);
	mov(&ts->ecx, ts->esi);
	game::sub_4EC790(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x890080, 4));

loc_4ECB29:
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x14, 4));
	inc(&ts->ebx);
	add(&ts->edi, 0x4);
	cmp(&ts->eflags, ts->ebx, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4ECB00;
    }

loc_4ECB34:
	mov(mv, &ts->eax, x86::mem(0x89E7B0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4ECB69;
    }
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, 0x85AD40);
	game::sub_500EE0(ts, mv);
	mov(&ts->edi, ts->eax);
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4ECB69;
    }
	nop();

loc_4ECB50:
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_4EC8C0(ts, mv);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x85AD40);
	game::sub_500EE0(ts, mv);
	mov(&ts->edi, ts->eax);
	test(&ts->eflags, ts->edi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_4ECB50;
    }

loc_4ECB69:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_4DEF70:
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->esi, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4DEFA6;
    }
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_4DEF80:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_4DB990(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8364B8, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	game::sub_43F920(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->edi, 4));
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_4DEF80;
    }

loc_4DEFA6:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);

loc_7761D0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto loc_4DEF70;

SEH_4ECB80:
	mov(&ts->eax, 0x7E171C);
	goto ___CxxFrameHandler;
}

void sub_4ECB80(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7761D8);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ebp, ts->ecx);
	push(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), ts->ebp);
	mov(mv, &ts->esi, x86::mem(ts->ebp, 4));
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0x0);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	mov(&ts->edi, ts->eax);
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4ECBD9;
    }

loc_4ECBB6:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x1C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4ECBC1;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax, 4));
	goto loc_4ECBC3;

loc_4ECBC1:
	xor_(&ts->eax, ts->eax);

loc_4ECBC3:
	push(mv, &ts->esp, 0x44000000);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_51D4D0(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	add(&ts->esp, 0xC);
	cmp(&ts->eflags, ts->esi, ts->edi);
	if (!ts->eflags.zero) {
        goto loc_4ECBB6;
    }

loc_4ECBD9:
	mov(mv, &ts->ebx, x86::mem(ts->ebp, 4));
	cmp(&ts->eflags, ts->ebx, ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), 0xFFFFFFFF);
	if (ts->eflags.zero) {
        goto loc_4ECC5E;
    }

loc_4ECBE8:
	mov(mv, &ts->eax, x86::mem(ts->ebx, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, &ts->edi, x86::mem(ts->ebx + 0x1C, 4));
	test(&ts->eflags, ts->edi, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4ECC48;
    }
	mov(mv, &ts->esi, x86::mem(0x836560, 4));
	mov(&ts->ecx, 0x836560);
	game::Iostream_init__Iostream_init_void_(ts, mv);
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4ECC1B;
    }
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_4ECC10:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x8, 4), ts->edi);
	if (ts->eflags.zero) {
        goto loc_4ECC48;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi, 4));
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4ECC10;
    }

loc_4ECC1B:
	dec(mv, x86::mem(0x8364BC, 4));
	game::sub_440EC0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4ECC2F;
    }
	mov(mv, x86::mem(ts->eax + 0x8, 4), ts->edi);
	goto loc_4ECC31;

loc_4ECC2F:
	xor_(&ts->eax, ts->eax);

loc_4ECC31:
	mov(mv, &ts->ecx, x86::mem(0x836560, 4));
	mov(mv, x86::mem(0x836560, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), 0x836560);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);

loc_4ECC48:
	mov(mv, &ts->eax, x86::mem(0x8364B8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	game::sub_43F920(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->ebp, 4));
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->ebx, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_4ECBE8;
    }

loc_4ECC5E:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_7761D0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto loc_4DEF70;

SEH_4ECB80:
	mov(&ts->eax, 0x7E171C);
	goto ___CxxFrameHandler;

loc_4DEF70:
}

void sub_4ECC80(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776204);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->al, x86::mem(0x89E7D8, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4ECCDF;
    }
	mov(mv, &ts->eax, x86::mem(0x890108, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4ECCDF;
    }
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->esi);
	game::sub_4DB900(ts, mv);
	push(mv, &ts->esp, 0x1C);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4ECCD7;
    }
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->eax);
	game::sub_4EC950(ts, mv);
	goto loc_4ECCD9;

loc_4ECCD7:
	xor_(&ts->eax, ts->eax);

loc_4ECCD9:
	mov(mv, x86::mem(0x8364D4, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);

loc_4ECCDF:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_7761F0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x797D60);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4ECC80:
	mov(&ts->eax, 0x7E1740);
	goto ___CxxFrameHandler;
}

void sub_4ECCF0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->ecx, x86::mem(0x8364D4, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto locret_4ECD04;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_4EC8C0(ts, mv);

locret_4ECD04:
	retn(mv, &ts->esp);
}

void sub_4ECD10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776239);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->esi);
	game::sub_551DE0(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	xor_(&ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->esi, 4), 0x797DE4);
	mov(mv, x86::mem(ts->esp + 0x1C, 4), ts->ebx);
	mov(mv, x86::mem(ts->eax, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->eax);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x54, 4));
	mov(mv, x86::mem(ts->edi, 4), ts->edi);
	mov(mv, x86::mem(ts->edi + 0x4, 4), ts->edi);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x5C, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x7978E0);
	lea(mv, &ts->ebp, x86::mem(ts->esi + 0x80, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->ebp);
	mov(mv, x86::mem(ts->esp + 0x30, 1), 0x3);
	mov(mv, x86::mem(ts->esi + 0x64, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x68, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x6C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x70, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x74, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x78, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x7C, 4), ts->ebx);
	game::sub_542AC0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xD8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xE8, 4), 0x797DD4);
	mov(mv, x86::mem(ts->esi + 0xEC, 4), 0x797DC4);
	mov(mv, x86::mem(ts->esi + 0xF0, 4), 0x797DB4);
	mov(mv, x86::mem(ts->esi + 0xF4, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xF8, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0xFC, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x100, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x104, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x108, 4), ts->ebx);
	mov(&ts->ecx, 0x432F0000);
	mov(mv, x86::mem(ts->esi + 0x10C, 4), ts->ecx);
	mov(&ts->eax, 0x41C00000);
	mov(mv, x86::mem(ts->esi + 0x110, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x118, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x114, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x11C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x120, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x124, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x128, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x12C, 4), 0x40800000);
	mov(mv, x86::mem(ts->esi + 0x130, 4), ts->ebx);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	mov(&ts->eax, 0x1);
	push(mv, &ts->esp, 0x797DA4);
	mov(mv, x86::mem(ts->esi + 0x134, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x138, 4), ts->eax);
	mov(mv, x86::mem(ts->esi + 0x13C, 4), 0x7);
	mov(mv, x86::mem(ts->esi + 0x140, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x144, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x148, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x14C, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x14D, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x14E, 1), ts->al);
	mov(mv, x86::mem(ts->esi + 0x14F, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x150, 1), ts->bl);
	mov(mv, x86::mem(ts->esp + 0x28, 4), ts->edx);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x2C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x797D98);
	mov(mv, x86::mem(ts->esi + 0x6C, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x34, 4), ts->ecx);
	game::sub_505450(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x34, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_5379C0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x70, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x797D88);
	mov(mv, x86::mem(ts->esp + 0x40, 4), ts->eax);
	game::sub_505450(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x40, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_5379C0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x797D7C);
	mov(mv, x86::mem(ts->esi + 0x74, 4), ts->eax);
	mov(mv, x86::mem(ts->esp + 0x4C, 4), ts->edx);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x50, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x7C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x6C, 4));
	add(&ts->esp, 0x30);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4ED094;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x70, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4ED094;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x74, 4), ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4ED094;
    }
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->ebp);
	game::sub_538080(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_4ACCF0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1B15F53C);
	push(mv, &ts->esp, 0x666593C4);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x2C, 1), ts->bl);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x37E740E0);
	push(mv, &ts->esp, 0x59ABA1E8);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x797D68);
	mov(mv, x86::mem(ts->esp + 0x30, 4), ts->ecx);
	game::sub_505450(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_537A10(ts, mv);
	push(mv, &ts->esp, 0x8BAB66EF);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0xD8, 4), ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xD1CDA594);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A60(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xDC, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x9345E4A7);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A60(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xE0, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x4E11CF90);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F21C);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0xE4, 4), ts->eax);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0x40);
	mov(&ts->ecx, ts->esi);
	game::sub_4ACE00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x4DC6DB5);
	push(mv, &ts->esp, 0x42ADB44C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->ecx, ts->esi);
	game::sub_4DBA50(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_4DEE90(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_4CB910(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->edi, 4));
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4ED019;
    }
	lea(mv, &ts->ecx, x86::mem(ts->edi - 0x4, 4));
	goto loc_4ED01B;

loc_4ED019:
	xor_(&ts->ecx, ts->ecx);

loc_4ED01B:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, x86::mem(ts->esi + 0x64, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x68, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->edx);
	call(ts, mv, x86::mem(ts->eax + 0x24, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x64, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_4CB970(ts, mv);
	mov(&ts->edi, ts->eax);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_4CB660(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4ED04E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x24, 4));

loc_4ED04E:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x92B703B5);
	game::sub_55DDA0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, 0x8);
	if (!ts->eflags.zero) {
        goto loc_4ED07C;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	game::sub_54E6E0(ts, mv);

loc_4ED07C:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x134, 4));
	push(mv, &ts->esp, ts->edi);
	dec(&ts->edx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->ebp);
	game::sub_538080(ts, mv);
	mov(mv, x86::mem(0x838528, 1), ts->bl);

loc_4ED094:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_776210:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

loc_776218:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x4C);
	goto sub_4358E0;

loc_776223:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x54);
	goto sub_4358E0;

loc_77622E:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x5C);
	goto sub_4358E0;

SEH_4ECD10:
	mov(&ts->eax, 0x7E177C);
	goto ___CxxFrameHandler;
}

void sub_4ED0B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4ED0D0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4ED0C8;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4ED0C8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4ED0D0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x77626E);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), 0x797DE4);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x5C, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x2);
	game::sub_4358E0(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x54, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 1), 0x1);
	game::sub_4358E0(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 1), 0x0);
	game::sub_4358E0(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	game::sub_510D40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_776250:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

loc_776258:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x4C);
	goto sub_4358E0;

loc_776263:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x54);
	goto sub_4358E0;

SEH_4ED0D0:
	mov(&ts->eax, 0x7E17B0);
	goto ___CxxFrameHandler;
}

void sub_4ED140(x86::thread_state* ts, x86::memory_view* mv) {
	sub(&ts->esp, 0x18);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CD70(ts, mv);
	mov(mv, &ts->al, x86::mem(0x8763F0, 1));
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	movzx(mv, &ts->eax, x86::mem(0x8763F2, 1));
	if (ts->eflags.zero) {
        goto loc_4ED16F;
    }
	movzx(mv, &ts->eax, x86::mem(0x8763F5, 1));

loc_4ED16F:
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4ED270;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x64, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4ED210;
    }
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x28, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_4ED210;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->edx);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x10, 4));
	mov(mv, x86::mem(ts->esp + 0x18, 4), ts->ecx);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x14, 4));
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x18, 4));
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CD00(ts, mv);
	add(&ts->esp, 0x10);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4ED210;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x64, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xC407210);
	mov(mv, x86::mem(ts->esi + 0x150, 1), 0x1);
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537950(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, 0x0);
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_537950(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xD8, 4));
	push(mv, &ts->esp, 0x23CF49AA);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C900(ts, mv);
	add(&ts->esp, 0x10);

loc_4ED210:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xDC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_52D020(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4ED23E;
    }
	push(mv, &ts->esp, 0x9120409E);
	mov(&ts->ecx, ts->esi);
	game::sub_4ACAA0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x18);
	retn(mv, &ts->esp);

loc_4ED23E:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xE0, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	game::sub_52D020(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4ED37A;
    }
	push(mv, &ts->esp, 0xB5971BF1);
	mov(&ts->ecx, ts->esi);
	game::sub_4ACAA0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x18);
	retn(mv, &ts->esp);

loc_4ED270:
	mov(mv, &ts->eax, x86::mem(0x8763E4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4ED286;
    }
	mov(mv, &ts->eax, x86::mem(0x8763E8, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4ED37A;
    }

loc_4ED286:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_4CB6B0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4ED2BC;
    }
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esi + 0x64, 4));
	if (ts->eflags.zero) {
        goto loc_4ED37A;
    }
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x28, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_4ED37A;
    }
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_4DEC40(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x18);
	retn(mv, &ts->esp);

loc_4ED2BC:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x7C, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_52D020(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4ED2FE;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x64, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4ED2E9;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->edx + 0x28, 4));
	mov(mv, x86::mem(ts->esi + 0x64, 4), 0x0);

loc_4ED2E9:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x7C, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_52CEC0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x18);
	retn(mv, &ts->esp);

loc_4ED2FE:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xE4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_52D020(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4ED37A;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x64, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4ED34C;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->edx + 0x28, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x64, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_4CB970(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_4CB660(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4ED345;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	mov(&ts->ecx, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x28, 4));

loc_4ED345:
	mov(mv, x86::mem(ts->esi + 0x64, 4), 0x0);

loc_4ED34C:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xE4, 4));
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, ts->eax);
	game::sub_51D040(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4ED37A;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xE4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, ts->ecx);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);

loc_4ED37A:
	pop(mv, &ts->esp, ts->esi);
	add(&ts->esp, 0x18);
	retn(mv, &ts->esp);
}

void sub_4ED380(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x54, 4));
	lea(mv, &ts->ebp, x86::mem(ts->edi + 0x54, 4));
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (ts->eflags.zero) {
        goto loc_4ED670;
    }
	mov(mv, &ts->al, x86::mem(ts->edi + 0x14D, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4ED3A8;
    }
	game::sub_4DEE90(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);

loc_4ED3A8:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x68, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	cmp(mv, &ts->eflags, x86::mem(ts->esp + 0x14, 4), 0x1);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x64, 4));
	mov(&ts->ecx, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_4ED4E0;
    }
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4ED3F2;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x58, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4ED3D1;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_4ED3D3;

loc_4ED3D1:
	xor_(&ts->eax, ts->eax);

loc_4ED3D3:
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4ED3F2;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x7C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4ED3F2;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	xor_(&ts->esi, ts->esi);
	game::sub_52CEC0(ts, mv);
	add(&ts->esp, 0x8);
	goto loc_4ED5DD;

loc_4ED3F2:
	mov(mv, &ts->ebx, x86::mem(ts->edi + 0x58, 4));
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4ED3FE;
    }
	lea(mv, &ts->eax, x86::mem(ts->ebx - 0x4, 4));
	goto loc_4ED400;

loc_4ED3FE:
	xor_(&ts->eax, ts->eax);

loc_4ED400:
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4ED46A;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x60, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_4ED410;
    }
	lea(mv, &ts->eax, x86::mem(ts->edx - 0x4, 4));
	goto loc_4ED412;

loc_4ED410:
	xor_(&ts->eax, ts->eax);

loc_4ED412:
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4ED46A;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x134, 4));
	dec(&ts->ecx);
	lea(mv, &ts->ecx, x86::mem(ts->ecx, 4));

loc_4ED420:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4ED42C;
    }
	add(&ts->esi, 0xFFFFFFFC);
	goto loc_4ED42E;

loc_4ED42C:
	xor_(&ts->esi, ts->esi);

loc_4ED42E:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x138, 4));
	inc(&ts->eax);
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4ED43B;
    }
	mov(&ts->eax, ts->ecx);

loc_4ED43B:
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->edi + 0x138, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_4ED46A;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x28, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4ED4A3;
    }
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4ED455;
    }
	lea(mv, &ts->eax, x86::mem(ts->ebx - 0x4, 4));
	goto loc_4ED457;

loc_4ED455:
	xor_(&ts->eax, ts->eax);

loc_4ED457:
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4ED46A;
    }
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_4ED464;
    }
	lea(mv, &ts->eax, x86::mem(ts->edx - 0x4, 4));
	goto loc_4ED466;

loc_4ED464:
	xor_(&ts->eax, ts->eax);

loc_4ED466:
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4ED420;
    }

loc_4ED46A:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x28, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4ED4A3;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4ED47D;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_4ED47F;

loc_4ED47D:
	xor_(&ts->eax, ts->eax);

loc_4ED47F:
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4ED4A3;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x5C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4ED48F;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_4ED491;

loc_4ED48F:
	xor_(&ts->eax, ts->eax);

loc_4ED491:
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4ED4A3;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x8, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4ED4A1;
    }
	add(&ts->esi, 0xFFFFFFFC);
	goto loc_4ED4A3;

loc_4ED4A1:
	xor_(&ts->esi, ts->esi);

loc_4ED4A3:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->edi);
	game::sub_4CB970(ts, mv);
	mov(mv, &ts->ebp, x86::mem(ts->edi + 0x13C, 4));
	mov(&ts->ebx, ts->eax);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	add(&ts->ebx, ts->ebp);
	game::sub_4CB970(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.carry) {
        goto loc_4ED5DD;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4ED5D8;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_4ED5DA;

loc_4ED4E0:
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4ED4FA;
    }
	mov(mv, &ts->esi, x86::mem(ts->edi + 0x58, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4ED4F3;
    }
	add(&ts->esi, 0xFFFFFFFC);
	goto loc_4ED5DD;

loc_4ED4F3:
	xor_(&ts->esi, ts->esi);
	goto loc_4ED5DD;

loc_4ED4FA:
	mov(mv, &ts->ebx, x86::mem(ts->ebp, 4));
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4ED506;
    }
	lea(mv, &ts->eax, x86::mem(ts->ebx - 0x4, 4));
	goto loc_4ED508;

loc_4ED506:
	xor_(&ts->eax, ts->eax);

loc_4ED508:
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4ED56E;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x5C, 4));
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_4ED518;
    }
	lea(mv, &ts->eax, x86::mem(ts->edx - 0x4, 4));
	goto loc_4ED51A;

loc_4ED518:
	xor_(&ts->eax, ts->eax);

loc_4ED51A:
	cmp(&ts->eflags, ts->ecx, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4ED56E;
    }
	mov(&ts->edi, ts->edi);

loc_4ED520:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x8, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4ED52C;
    }
	add(&ts->esi, 0xFFFFFFFC);
	goto loc_4ED52E;

loc_4ED52C:
	xor_(&ts->esi, ts->esi);

loc_4ED52E:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x138, 4));
	dec(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4ED53F;
    }
	mov(&ts->eax, 0x1);

loc_4ED53F:
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->edi + 0x138, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_4ED56E;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x28, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4ED5A7;
    }
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4ED559;
    }
	lea(mv, &ts->eax, x86::mem(ts->ebx - 0x4, 4));
	goto loc_4ED55B;

loc_4ED559:
	xor_(&ts->eax, ts->eax);

loc_4ED55B:
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4ED56E;
    }
	test(&ts->eflags, ts->edx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_4ED568;
    }
	lea(mv, &ts->eax, x86::mem(ts->edx - 0x4, 4));
	goto loc_4ED56A;

loc_4ED568:
	xor_(&ts->eax, ts->eax);

loc_4ED56A:
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4ED520;
    }

loc_4ED56E:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x28, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4ED5A7;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x58, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4ED581;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_4ED583;

loc_4ED581:
	xor_(&ts->eax, ts->eax);

loc_4ED583:
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4ED5A7;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x60, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4ED593;
    }
	add(&ts->eax, 0xFFFFFFFC);
	goto loc_4ED595;

loc_4ED593:
	xor_(&ts->eax, ts->eax);

loc_4ED595:
	cmp(&ts->eflags, ts->esi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4ED5A7;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4ED5A5;
    }
	add(&ts->esi, 0xFFFFFFFC);
	goto loc_4ED5A7;

loc_4ED5A5:
	xor_(&ts->esi, ts->esi);

loc_4ED5A7:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->ebx, x86::mem(ts->ecx + 0x8, 4));
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4ED5B7;
    }
	lea(mv, &ts->eax, x86::mem(ts->ebx - 0x4, 4));
	goto loc_4ED5B9;

loc_4ED5B7:
	xor_(&ts->eax, ts->eax);

loc_4ED5B9:
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_4CB970(ts, mv);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	mov(&ts->ebp, ts->eax);
	game::sub_4CB970(ts, mv);
	cmp(&ts->eflags, ts->eax, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_4ED5DD;
    }
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4ED5D8;
    }
	lea(mv, &ts->eax, x86::mem(ts->ebx - 0x4, 4));
	goto loc_4ED5DA;

loc_4ED5D8:
	xor_(&ts->eax, ts->eax);

loc_4ED5DA:
	mov(mv, x86::mem(ts->edi + 0x68, 4), ts->eax);

loc_4ED5DD:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x10, 4));
	cmp(mv, &ts->eflags, ts->edx, x86::mem(ts->edi + 0x68, 4));
	if (ts->eflags.zero) {
        goto loc_4ED5ED;
    }
	mov(&ts->ecx, ts->edi);
	game::sub_4DECD0(ts, mv);

loc_4ED5ED:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x64, 4));
	cmp(&ts->eflags, ts->ecx, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4ED66E;
    }
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4ED61B;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->eax + 0x28, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x64, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	game::sub_4CB970(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_4CB660(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4ED61B;
    }
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	mov(&ts->ecx, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x28, 4));

loc_4ED61B:
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4ED649;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	call(ts, mv, x86::mem(ts->eax + 0x24, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	game::sub_4CB970(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_4CB660(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4ED649;
    }
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x24, 4));

loc_4ED649:
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->edi + 0x64, 4), ts->esi);
	if (ts->eflags.zero) {
        goto loc_4ED66E;
    }
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, ts->edi);
	game::sub_4CB970(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x134, 4));
	push(mv, &ts->esp, ts->eax);
	dec(&ts->edx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x1);
	lea(mv, &ts->ecx, x86::mem(ts->edi + 0x80, 4));
	game::sub_538080(ts, mv);

loc_4ED66E:
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);

loc_4ED670:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ecx);
	retn(mv, &ts->esp, 0x4);
}

void sub_4ED680(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4ED6A0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4ED698;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4ED698:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4ED6A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x797DF4);
	goto sub_4E8BF0;
}

void sub_4ED6B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776294);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x150);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4ED6FE;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4DF140(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4ED6FE:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_776280:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x797E10);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4ED6B0:
	mov(&ts->eax, 0x7E17D4);
	goto ___CxxFrameHandler;
}

void sub_4ED710(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7762B4);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x154);
	game::j__malloc(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4ED75A;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_552330(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x79752C);
	goto loc_4ED75C;

loc_4ED75A:
	xor_(&ts->esi, ts->esi);

loc_4ED75C:
	mov(mv, &ts->edx, x86::mem(ts->esi, 4));
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	call(ts, mv, x86::mem(ts->edx + 0x14, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_7762A0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x797E18);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4ED710:
	mov(&ts->eax, 0x7E17F8);
	goto ___CxxFrameHandler;
}

void sub_4ED780(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7762D4);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x150);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4ED7CE;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4DF3A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4ED7CE:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_7762C0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x797E28);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4ED780:
	mov(&ts->eax, 0x7E181C);
	goto ___CxxFrameHandler;
}

void sub_4ED7E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7762F4);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x150);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4ED82E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4DF570(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4ED82E:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_7762E0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x797E38);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4ED7E0:
	mov(&ts->eax, 0x7E1840);
	goto ___CxxFrameHandler;
}

void sub_4ED840(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776314);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x204);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4ED88E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4DF6F0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4ED88E:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_776300:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x797E50);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4ED840:
	mov(&ts->eax, 0x7E1864);
	goto ___CxxFrameHandler;
}

void sub_4ED8A0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->eax);
	dec(&ts->eax);
	cmp(&ts->eflags, ts->eax, 0x5);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4ED8B4;
    }
	jmp(x86::mem(0x4ED988, 4));

loc_4ED8BB:
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x797E68);
	game::sub_43DB50(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4ED8DC:
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x797E68);
	game::sub_43DB50(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x8D0DAFEC);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x14);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x786E70);
	push(mv, &ts->esp, 0x797E68);
	game::sub_43DB50(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_537B80(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4ED929:
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	game::sub_479100(ts, mv);
	push(mv, &ts->esp, 0x4);
	mov(&ts->ecx, ts->esi);
	game::sub_4DF9C0(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_4AFE00(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4ED945:
	mov(&ts->ecx, 0x83A9D0);
	game::sub_52A4C0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4ED971;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x141);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->esi);
	game::sub_4A3100(ts, mv);
	add(&ts->esp, 0x1C);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4ED971:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x9A3B571D);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);

def_4ED8B4:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4ED9A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x4C, 4), 0x5);
	if (!ts->eflags.zero) {
        goto loc_4ED9DB;
    }
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x797E68);
	game::sub_43DB50(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_495F00(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_4ED8A0(ts, mv);
	pop(mv, &ts->esp, ts->edi);

loc_4ED9DB:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4ED9E0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	cmp(&ts->eflags, ts->eax, 0x75D1E35E);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4EDE00;
    }
	if (ts->eflags.zero) {
        goto loc_4EDDBC;
    }
	cmp(&ts->eflags, ts->eax, 0x35F8620B);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4EDAE9;
    }
	if (ts->eflags.zero) {
        goto loc_4EDACB;
    }
	cmp(&ts->eflags, ts->eax, 0x251BF83E);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4EDAB1;
    }
	if (ts->eflags.zero) {
        goto loc_4EDA93;
    }
	cmp(&ts->eflags, ts->eax, 0xC407210);
	if (ts->eflags.zero) {
        goto loc_4EDB2B;
    }
	cmp(&ts->eflags, ts->eax, 0x2101DCC5);
	if (!ts->eflags.zero) {
        goto def_4EDF4D;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x26F1F64C);
	push(mv, &ts->esp, ts->eax);
	game::sub_495520(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDF422345);
	push(mv, &ts->esp, ts->ecx);
	game::sub_495520(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F758);
	push(mv, &ts->esp, 0x26F1F64C);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x790EB0);
	push(mv, &ts->esp, 0xDF422345);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79031C);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x40);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4EDA93:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79031C);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4EDAB1:
	sub(&ts->eax, 0x34DC1BCF);
	if (ts->eflags.zero) {
        goto loc_4EE130;
    }
	sub(&ts->eax, 0x1D);
	if (ts->eflags.zero) {
        goto loc_4EE130;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4EDACB:
	push(mv, &ts->esp, 0x4);
	mov(&ts->ecx, 0x8635BC);
	game::sub_5243D0(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, 0x83A9D0);
	game::sub_52A460(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4EDAE9:
	cmp(&ts->eflags, ts->eax, 0x51123592);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4EDD26;
    }
	if (ts->eflags.zero) {
        goto loc_4EDCE9;
    }
	cmp(&ts->eflags, ts->eax, 0x406415E3);
	if (ts->eflags.zero) {
        goto loc_4EDB2B;
    }
	cmp(&ts->eflags, ts->eax, 0x461A18EE);
	if (!ts->eflags.zero) {
        goto def_4EDF4D;
    }

loc_4EDB0C:
	mov(mv, &ts->edx, x86::mem(0x836538, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_50D2A0(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(0x83A9D8, 4), ts->eax);

loc_4EDB20:
	game::sub_5404A0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4EDB2B:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1BC, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto def_4EDF4D;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50D2A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xEC, 4));
	mov(mv, x86::mem(0x83A9D8, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	add(&ts->eax, 0xFFFFFFFE);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x3);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4EDB62;
    }
	push(mv, &ts->esp, ts->ebx);
	jmp(x86::mem(0x4EE15C, 4));

loc_4EDB69:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x918, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x840, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_5120B0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xDA8F3E96);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x34DC1BCF);
	push(mv, &ts->esp, 0x34DC1BCF);
	push(mv, &ts->esp, 0xD05FC3A3);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->edi);
	goto loc_4EDCAC;

loc_4EDBAD:
	mov(&ts->ecx, 0x85AD40);
	game::sub_513C30(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x918, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_5120B0(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	goto loc_4EDC7D;

loc_4EDBE2:
	mov(&ts->ecx, 0x85AD40);
	game::sub_513C30(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x918, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	mov(&ts->edi, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x840, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_5120B0(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_5120B0(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x3192F5D1);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x75D1E35E);
	push(mv, &ts->esp, 0x75D1E35E);
	push(mv, &ts->esp, 0x526ADEFC);
	push(mv, &ts->esp, 0x2699CF8E);
	push(mv, &ts->esp, 0xFB75E78F);
	goto loc_4EDCA6;

loc_4EDC3D:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x64, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0xEC, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x83A9D0);
	game::sub_495240(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_503510(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x918, 4));
	mov(mv, &ts->edi, x86::mem(ts->edx + 0x840, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax, 4));
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	mov(&ts->ecx, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_5120B0(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);

loc_4EDC7D:
	game::sub_5120B0(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x85215BC6);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x34DC1BCF);
	push(mv, &ts->esp, 0x34DC1BCF);
	push(mv, &ts->esp, 0xD05FC3A3);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);

loc_4EDCA6:
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->ebx);

loc_4EDCAC:
	game::sub_558790(ts, mv);
	add(&ts->esp, 0x2C);
	mov(mv, x86::mem(ts->esi + 0x1BF, 1), 0x0);
	pop(mv, &ts->esp, ts->ebx);

def_4EDB62:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FEF4);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->edx);
	game::sub_50D150(ts, mv);
	add(&ts->esp, 0x1C);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4EDCE9:
	mov(&ts->ecx, 0x83A9D0);
	game::sub_5032C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50D2A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xEC, 4));
	mov(mv, x86::mem(0x83A9D8, 4), ts->eax);
	game::sub_5404A0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x30, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0xA);
	push(mv, &ts->esp, ts->eax);
	game::sub_50D150(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4EDD26:
	cmp(&ts->eflags, ts->eax, 0x526ADEFC);
	if (!ts->eflags.zero) {
        goto def_4EDF4D;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79031C);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	mov(&ts->ecx, 0x85AD40);
	game::sub_513C30(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x920, 4));
	mov(&ts->ecx, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x5C, 4), ts->eax);
	game::sub_496050(ts, mv);
	mov(&ts->ecx, 0x83A9D0);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), 0x6);
	game::sub_52A4C0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4EDDA5;
    }
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x141);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->esi);
	game::sub_4A3100(ts, mv);
	add(&ts->esp, 0x1C);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4EDDA5:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0x9A3B571D);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4EDDBC:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79031C);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x1BF, 1), 0x1);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x920, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x64, 4), ts->edx);
	game::sub_495F00(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_4ED8A0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4EDE00:
	cmp(&ts->eflags, ts->eax, 0x9803F6E2);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4EDFDC;
    }
	if (ts->eflags.zero) {
        goto loc_4EDF29;
    }
	cmp(&ts->eflags, ts->eax, 0x9120409E);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4EDF00;
    }
	if (ts->eflags.zero) {
        goto loc_4EDFFF;
    }
	cmp(&ts->eflags, ts->eax, 0x8867412D);
	if (ts->eflags.zero) {
        goto loc_4EDB0C;
    }
	cmp(&ts->eflags, ts->eax, 0x911AB364);
	if (!ts->eflags.zero) {
        goto def_4EDF4D;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1BF, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto def_4EDF4D;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x1BC, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto def_4EDF4D;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0xEC, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x83A9D0);
	game::sub_495240(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x797E74);
	mov(&ts->edi, ts->eax);
	game::sub_50B990(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_503680(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x7F5, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_4EDEBF;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xD76E0B5A);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1FAB5998);
	push(mv, &ts->esp, 0x1FAB5998);
	push(mv, &ts->esp, 0x51123592);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->edx);
	game::sub_558790(ts, mv);
	add(&ts->esp, 0x24);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4EDEBF:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x918, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x840, 4));
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_5120B0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x272EBEBA);
	push(mv, &ts->esp, 0x34DC1BEC);
	push(mv, &ts->esp, 0x34DC1BEC);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->esi);
	game::sub_558570(ts, mv);
	add(&ts->esp, 0x20);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4EDF00:
	cmp(&ts->eflags, ts->eax, 0x96DDA9E6);
	if (!ts->eflags.zero) {
        goto def_4EDF4D;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FEF4);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4EDF29:
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x88, 4));
	game::sub_538130(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xC4, 4));
	add(&ts->eax, 0xA);
	cmp(&ts->eflags, ts->eax, 0x14);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4EDF4D;
    }
	movzx(mv, &ts->ecx, x86::mem(ts->eax + 0x4EE180, 1));
	jmp(x86::mem(0x4EE16C, 4));

loc_4EDF54:
	push(mv, &ts->esp, 0xB5971BF1);
	mov(&ts->ecx, ts->esi);
	game::sub_4AFFA0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4EDF66:
	push(mv, &ts->esp, 0x9120409E);
	mov(&ts->ecx, ts->esi);
	game::sub_4AFFA0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4EDF78:
	mov(mv, &ts->eax, x86::mem(0x7FA1A8, 4));
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto def_4EDF4D;
    }
	goto loc_4EDF90;

loc_4EDF90:
	push(mv, &ts->esp, 0xB5971BF1);
	mov(&ts->ecx, ts->esi);
	game::sub_4AFFA0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x7FA1A8, 4));
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4EDF90;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4EDFAC:
	mov(mv, &ts->eax, x86::mem(0x7FA1A8, 4));
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto def_4EDF4D;
    }
	goto loc_4EDFC0;

loc_4EDFC0:
	push(mv, &ts->esp, 0x9120409E);
	mov(&ts->ecx, ts->esi);
	game::sub_4AFFA0(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x7FA1A8, 4));
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4EDFC0;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4EDFDC:
	cmp(&ts->eflags, ts->eax, 0xC98356BA);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4EE070;
    }
	if (ts->eflags.zero) {
        goto loc_4EE00D;
    }
	cmp(&ts->eflags, ts->eax, 0x9A3B571D);
	if (ts->eflags.zero) {
        goto loc_4EDB20;
    }
	cmp(&ts->eflags, ts->eax, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto def_4EDF4D;
    }

loc_4EDFFF:
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_4AFFA0(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4EE00D:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xE0, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto def_4EDF4D;
    }
	cmp(&ts->eflags, ts->eax, 0x7FFFFFFF);
	if (ts->eflags.zero) {
        goto def_4EDF4D;
    }
	mov(mv, &ts->edx, x86::mem(0x8651AC, 4));
	sub(&ts->edx, ts->eax);
	mov(mv, x86::mem(ts->ebp + 0x10, 4), ts->edx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->ebp + 0x10, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78758C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (!ts->eflags.zero) {
        goto def_4EDF4D;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	game::sub_511E00(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	game::sub_4D8EC0(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0xE0, 4), 0x0);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);

loc_4EE070:
	cmp(&ts->eflags, ts->eax, 0xD05FC3A3);
	if (!ts->eflags.zero) {
        goto def_4EDF4D;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_50D2A0(ts, mv);
	mov(mv, x86::mem(0x83A9D8, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	add(&ts->esp, 0x4);
	sub(&ts->eax, 0x2);
	if (ts->eflags.zero) {
        goto loc_4EE0FA;
    }
	dec(&ts->eax);
	if (ts->eflags.zero) {
        goto loc_4EE0CD;
    }
	sub(&ts->eax, 0x2);
	if (!ts->eflags.zero) {
        goto loc_4EE130;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x920, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x64, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x5C, 4), ts->eax);
	mov(&ts->eax, ts->edx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->edx);
	game::sub_496050(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_4ED9A0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x1BF, 1), 0x1);
	goto loc_4EE130;

loc_4EE0CD:
	mov(&ts->ecx, 0x85AD40);
	game::sub_513C30(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x8, 4));
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x58, 4));
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x920, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x5C, 4), ts->eax);
	mov(&ts->eax, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_496050(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->ecx);
	goto loc_4EE11A;

loc_4EE0FA:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->edi, x86::mem(ts->edx + 0x920, 4));
	mov(&ts->ecx, ts->esi);
	game::sub_495FD0(ts, mv);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x85AD40);
	game::sub_541540(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);

loc_4EE11A:
	mov(&ts->ecx, ts->esi);
	game::sub_495F00(ts, mv);
	mov(&ts->ecx, ts->esi);
	push(mv, &ts->esp, ts->eax);
	game::sub_4ED8A0(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x1BF, 1), 0x0);

loc_4EE130:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x4C, 4), 0x6);
	mov(mv, x86::mem(ts->esi + 0x1BF, 1), 0x1);
	if (ts->eflags.zero) {
        goto def_4EDF4D;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79031C);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);

def_4EDF4D:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x10);
}

void sub_4EE1A0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1);
	mov(&ts->esi, ts->ecx);
	game::sub_4DF9C0(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_495F70(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x797A00);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537A60(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x7979F4);
	mov(mv, x86::mem(ts->esi + 0xE4, 4), ts->eax);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537A60(ts, mv);
	add(&ts->esp, 0x18);
	mov(&ts->ecx, 0x83AAB4);
	mov(mv, x86::mem(ts->esi + 0xE8, 4), ts->eax);
	game::sub_5026F0(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x2);
	if (!ts->eflags.zero) {
        goto loc_4EE206;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	game::sub_537950(ts, mv);
	add(&ts->esp, 0x8);

loc_4EE206:
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	goto sub_4AFE00;
}

void sub_4EE210(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	game::sub_4E0160(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x797EBC);
	game::sub_43DB50(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x797EBC);
	game::sub_43DB50(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537A60(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x790EDC);
	mov(mv, x86::mem(ts->esi + 0xBC, 4), ts->eax);
	game::sub_43DB50(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537A60(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x797E68);
	mov(mv, x86::mem(ts->esi + 0xC0, 4), ts->eax);
	game::sub_43DB50(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x797EB0);
	game::sub_43DB50(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	add(&ts->esp, 0x44);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x797EA0);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x797E90);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x797E84);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x34);
	mov(&ts->ecx, 0x83AAB4);
	game::sub_5026F0(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x2);
	if (!ts->eflags.zero) {
        goto loc_4EE30C;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	game::sub_537950(ts, mv);
	add(&ts->esp, 0x8);

loc_4EE30C:
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	goto sub_4B0140;
}

void sub_4EE320(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776397);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x14);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->edi);
	mov(&ts->edi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x1C, 4), ts->edi);
	game::sub_551DE0(ts, mv);
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x54, 4));
	mov(mv, x86::mem(ts->edi, 4), 0x797F20);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), 0x0);
	mov(mv, x86::mem(ts->eax, 4), ts->eax);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->eax);
	push(mv, &ts->esp, 0xC);
	mov(mv, x86::mem(ts->ebp - 0x4, 1), 0x1);
	mov(mv, x86::mem(ts->edi + 0x60, 1), 0x0);
	mov(mv, x86::mem(ts->edi + 0x61, 1), 0x0);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4EE389;
    }
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->ecx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax, 4), 0x0);
	goto loc_4EE38B;

loc_4EE389:
	xor_(&ts->eax, ts->eax);

loc_4EE38B:
	push(mv, &ts->esp, 0x2C);
	mov(mv, x86::mem(ts->edi + 0x50, 4), ts->eax);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->ebp + 0x8, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x4, 1), 0x2);
	if (ts->eflags.zero) {
        goto loc_4EE3B4;
    }
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x50, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4E0440(ts, mv);
	goto loc_4EE3B6;

loc_4EE3B4:
	xor_(&ts->eax, ts->eax);

loc_4EE3B6:
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x14);
	mov(mv, x86::mem(ts->ebp - 0x4, 1), 0x1);
	mov(mv, x86::mem(ts->edi + 0x4C, 4), ts->eax);
	game::j__malloc(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->ebp + 0x8, 4), ts->esi);
	test(&ts->eflags, ts->esi, ts->esi);
	mov(&ts->ebx, 0x3);
	mov(mv, x86::mem(ts->ebp - 0x4, 1), ts->bl);
	if (ts->eflags.zero) {
        goto loc_4EE3FC;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0xCF6F0439);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A60(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->eax);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->esi + 0x8, 4), 0x2);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ebx);
	mov(&ts->eax, ts->esi);
	goto loc_4EE3FE;

loc_4EE3FC:
	xor_(&ts->eax, ts->eax);

loc_4EE3FE:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x50, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x8, 4));
	add(&ts->ecx, 0x4);
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	push(mv, &ts->esp, 0x14);
	mov(mv, x86::mem(ts->ebp - 0x4, 1), 0x1);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	game::j__malloc(ts, mv);
	mov(&ts->esi, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->ebp + 0x8, 4), ts->esi);
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->ebp - 0x4, 1), 0x4);
	if (ts->eflags.zero) {
        goto loc_4EE44F;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0xABA93D3F);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A60(ts, mv);
	mov(&ts->ecx, 0x2);
	mov(mv, x86::mem(ts->esi + 0xC, 4), ts->eax);
	add(&ts->esp, 0x8);
	mov(mv, x86::mem(ts->esi + 0x8, 4), ts->ecx);
	mov(mv, x86::mem(ts->esi + 0x10, 4), ts->ecx);
	mov(&ts->eax, ts->esi);
	goto loc_4EE451;

loc_4EE44F:
	xor_(&ts->eax, ts->eax);

loc_4EE451:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x50, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x8, 4));
	add(&ts->ecx, 0x4);
	mov(mv, x86::mem(ts->edx, 4), ts->eax);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->eax, 4), ts->ecx);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, 0x85AD40);
	mov(mv, x86::mem(ts->ebp - 0x4, 1), 0x1);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->edx);
	game::sub_500EE0(ts, mv);
	mov(&ts->esi, ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x10, 4), ts->esi);
	mov(&ts->ebx, 0x1);
	mov(&ts->edi, ts->edi);

loc_4EE480:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->eax);
	game::sub_496870(ts, mv);
	add(&ts->esp, 0x8);
	inc(&ts->ebx);
	cmp(&ts->eflags, ts->ebx, 0xE);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4EE480;
    }
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(ts->ebp + 0x8, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4EE5BC;
    }
	goto loc_4EE4A7;

loc_4EE4A4:
	mov(mv, &ts->esi, x86::mem(ts->ebp - 0x10, 4));

loc_4EE4A7:
	mov(&ts->ecx, ts->esi);
	game::sub_533110(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4EE4C4;
    }
	mov(&ts->ecx, 0x85B940);
	game::sub_501690(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4EE5A6;
    }

loc_4EE4C4:
	mov(&ts->ecx, ts->esi);
	game::sub_500DE0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_4965F0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x54, 4));
	lea(mv, &ts->edx, x86::mem(ts->edi + 0x54, 4));
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->ecx, ts->edx);
	if (ts->eflags.zero) {
        goto loc_4EE4EF;
    }
	mov(&ts->edi, ts->edi);

loc_4EE4E0:
	cmp(mv, &ts->eflags, x86::mem(ts->ecx + 0x20, 4), ts->eax);
	if (ts->eflags.zero) {
        goto loc_4EE5A0;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ecx, 4));
	cmp(&ts->eflags, ts->ecx, ts->edx);
	if (!ts->eflags.zero) {
        goto loc_4EE4E0;
    }

loc_4EE4EF:
	push(mv, &ts->esp, 0x2C);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->ebp - 0x18, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x4, 1), 0x5);
	if (ts->eflags.zero) {
        goto loc_4EE518;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4B0D50(ts, mv);
	mov(&ts->esi, ts->eax);
	goto loc_4EE51A;

loc_4EE518:
	xor_(&ts->esi, ts->esi);

loc_4EE51A:
	push(mv, &ts->esp, 0x14);
	mov(mv, x86::mem(ts->ebp - 0x4, 1), 0x1);
	mov(mv, x86::mem(ts->ebp - 0x18, 4), ts->esi);
	game::j__malloc(ts, mv);
	mov(&ts->ebx, ts->eax);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->ebp - 0x20, 4), ts->ebx);
	test(&ts->eflags, ts->ebx, ts->ebx);
	mov(mv, x86::mem(ts->ebp - 0x4, 1), 0x6);
	if (ts->eflags.zero) {
        goto loc_4EE56A;
    }
	mov(mv, &ts->ecx, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x797F10);
	mov(mv, x86::mem(ts->ebp - 0x14, 4), ts->eax);
	game::sub_50B990(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->ebp - 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edx);
	game::sub_5379C0(ts, mv);
	add(&ts->esp, 0x10);
	mov(mv, x86::mem(ts->ebx + 0x8, 4), 0x1);
	mov(mv, x86::mem(ts->ebx + 0xC, 4), ts->eax);
	mov(mv, x86::mem(ts->ebx + 0x10, 4), ts->esi);
	mov(&ts->ecx, ts->ebx);
	goto loc_4EE56C;

loc_4EE56A:
	xor_(&ts->ecx, ts->ecx);

loc_4EE56C:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x50, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x8, 4));
	add(&ts->eax, 0x4);
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	mov(mv, x86::mem(ts->eax + 0x4, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x54, 4));
	inc(&ts->eax);
	mov(mv, x86::mem(ts->ebp + 0x8, 4), ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x54, 4));
	mov(mv, x86::mem(ts->eax, 4), ts->esi);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->esi);
	mov(mv, x86::mem(ts->esi, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x18, 4));
	mov(mv, x86::mem(ts->esi + 0x4, 4), ts->eax);
	mov(mv, &ts->esi, x86::mem(ts->ebp - 0x10, 4));
	mov(mv, x86::mem(ts->ebp - 0x4, 1), 0x1);

loc_4EE5A0:
	push(mv, &ts->esp, ts->esi);
	game::sub_496A40(ts, mv);

loc_4EE5A6:
	push(mv, &ts->esp, ts->esi);
	mov(&ts->ecx, 0x85AD40);
	game::sub_500EE0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x10, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4EE4A4;
    }

loc_4EE5BC:
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x54, 4));
	mov(mv, x86::mem(ts->edi + 0x5C, 4), 0x0);
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4EE5D7;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x58, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_4B0E70(ts, mv);

loc_4EE5D7:
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4EE602;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CEA0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_555F10(ts, mv);
	add(&ts->esp, 0x10);

loc_4EE602:
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	game::sub_54E6A0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x20, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_54E6E0(ts, mv);
	mov(&ts->ecx, ts->edi);
	game::sub_4B0FE0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, ts->eax);
	game::sub_52CEC0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	add(&ts->esp, 0x8);
	mov(&ts->eax, ts->edi);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_776320:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x1C, 4));
	goto sub_510D40;

loc_776328:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x1C, 4));
	add(&ts->ecx, 0x54);
	goto sub_4DEF30;

loc_776333:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x797F04);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_776347:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x797EF4);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_77635B:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x797EF4);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_77636F:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x797EE4);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

loc_776383:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x797ED0);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4EE320:
	mov(&ts->eax, 0x7E18B8);
	goto ___CxxFrameHandler;
}

void sub_4EE650(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4EE670(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4EE668;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4EE668:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4EE670(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x790EFC);
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x30, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto locret_4EE684;
    }
	push(mv, &ts->esp, ts->ecx);
	game::j__free(ts, mv);
	pop(mv, &ts->esp, ts->ecx);

locret_4EE684:
	retn(mv, &ts->esp);
}

void sub_4EE690(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7763E2);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->esi);
	game::sub_551DE0(ts, mv);
	push(mv, &ts->esp, 0x1);
	xor_(&ts->ebx, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x796484);
	mov(mv, x86::mem(ts->esi, 4), 0x795D10);
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->ebx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x795420);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x8C, 4));
	mov(mv, x86::mem(ts->esp + 0x38, 4), ts->ebx);
	game::sub_542CA0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x797F3C);
	push(mv, &ts->esp, 0x797F30);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x138, 4));
	mov(mv, x86::mem(ts->esp + 0x34, 1), 0x1);
	game::sub_5435D0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F814);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x19C, 4));
	mov(mv, x86::mem(ts->esp + 0x30, 1), 0x2);
	game::sub_542AC0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x90FE80F3);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A60(ts, mv);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x1F4, 4));
	mov(mv, x86::mem(ts->edi + 0x4, 4), ts->eax);
	mov(mv, x86::mem(ts->edi, 4), 0x78F8C8);
	mov(mv, x86::mem(ts->edi + 0x8, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0xC, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x28, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x2C, 1), ts->bl);
	mov(mv, x86::mem(0x836344, 4), ts->edi);
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_50CA00(ts, mv);
	mov(mv, x86::mem(ts->edi + 0x10, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x14, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x18, 1), ts->bl);
	mov(mv, x86::mem(ts->edi + 0x1C, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x20, 4), ts->ebx);
	mov(mv, x86::mem(ts->edi + 0x24, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x224, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x228, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x22C, 4), ts->ebx);
	mov(mv, &ts->edx, x86::mem(0x8651AC, 4));
	mov(mv, x86::mem(ts->esi + 0x4C, 4), ts->edx);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x640F0F22);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x30, 1), 0x3);
	game::sub_537A60(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x5C, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x640F0F23);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A60(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x58, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x444969FD);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A60(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x50, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x444969FE);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A60(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x38E39AD7);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A60(ts, mv);
	add(&ts->esp, 0x34);
	mov(mv, x86::mem(ts->esi + 0x60, 4), ts->eax);
	mov(&ts->ebp, 0x23EAE8B9);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x78, 4));
	mov(mv, x86::mem(ts->esp + 0x24, 4), 0x5);

loc_4EE802:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	lea(mv, &ts->ecx, x86::mem(ts->ebp + 0x294473A8, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	mov(mv, x86::mem(ts->edi - 0x14, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	mov(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x34, 4));
	add(&ts->esp, 0x10);
	add(&ts->edi, 0x4);
	inc(&ts->ebp);
	dec(&ts->eax);
	mov(mv, x86::mem(ts->esp + 0x24, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4EE802;
    }
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x164, 1), 0x1);
	mov(mv, x86::mem(ts->esi + 0x168, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x18C, 4), 0x43888000);
	mov(mv, x86::mem(ts->esi + 0x198, 4), 0x41A00000);
	game::sub_4CBF80(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_4E0CE0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x144, 4));
	cmp(&ts->eflags, ts->eax, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4EE87C;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0xC, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x78, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x64, 4));
	push(mv, &ts->esp, ts->eax);
	call(ts, mv, x86::mem(ts->edx + 0x4, 4));

loc_4EE87C:
	mov(&ts->ecx, ts->esi);
	game::sub_4B1590(ts, mv);
	mov(mv, x86::mem(ts->esi + 0x22C, 4), ts->ebx);
	mov(mv, &ts->ecx, x86::mem(0x8651AC, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x22C, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_7763B0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

loc_7763B8:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x8C);
	goto sub_4CBBA0;

loc_7763C6:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x138);
	goto sub_52EA90;

loc_7763D4:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->ecx, 0x1F4);
	goto sub_4985A0;

SEH_4EE690:
	mov(&ts->eax, 0x7E18F4);
	goto ___CxxFrameHandler;
}

void sub_4EE8B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776403);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0xD8);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ebx, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x14, 4), ts->ebx);
	game::sub_551DE0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x1);
	xor_(&ts->edi, ts->edi);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F814);
	push(mv, &ts->esp, 0x797FB0);
	lea(mv, &ts->esi, x86::mem(ts->ebx + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->ebp - 0x4, 4), ts->edi);
	mov(mv, x86::mem(ts->ebx, 4), 0x797FA0);
	game::sub_542CA0(ts, mv);
	mov(mv, x86::mem(ts->esi, 4), 0x795D20);
	mov(mv, x86::mem(ts->ebx + 0xF8, 4), ts->edi);
	mov(mv, x86::mem(ts->ebx + 0xFC, 4), ts->edi);
	mov(mv, &ts->ecx, x86::mem(0x83A9D8, 4));
	mov(mv, &ts->esi, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, x86::mem(ts->ebp - 0x4, 1), 0x1);
	game::sub_50D2D0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	game::sub_537950(ts, mv);
	add(&ts->esp, 0xC);
	mov(&ts->esi, 0x1);
	mov(mv, x86::mem(ts->ebp + 0x8, 4), 0x836568);
	mov(mv, x86::mem(ts->ebp - 0x10, 4), 0x7);
	goto loc_4EE950;

loc_4EE950:
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x797F90);
	lea(mv, &ts->edx, x86::mem(ts->ebp - 0xE4, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C960(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x797F80);
	lea(mv, &ts->eax, x86::mem(ts->ebp - 0x64, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C960(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x797F70);
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0xC4, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->ecx);
	game::sub_50C960(ts, mv);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x797F5C);
	lea(mv, &ts->edx, x86::mem(ts->ebp - 0x84, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->edx);
	game::sub_50C960(ts, mv);
	add(&ts->esp, 0x40);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x797F48);
	lea(mv, &ts->eax, x86::mem(ts->ebp - 0xA4, 4));
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C960(ts, mv);
	xor_(&ts->eax, ts->eax);
	mov(&ts->ecx, 0xC);
	lea(mv, &ts->edi, x86::mem(ts->ebp - 0x44, 4));
	stos(mv, x86::mem(ts->edi, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->ebx + 0x4, 4));
	mov(mv, &ts->edi, x86::mem(ts->ebp + 0x8, 4));
	mov(mv, x86::mem(ts->ebp - 0x44, 4), ts->ecx);
	add(&ts->esp, 0x10);
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0xC4, 4));
	mov(mv, x86::mem(ts->ebp - 0x2C, 4), ts->ecx);
	lea(mv, &ts->edx, x86::mem(ts->ebp - 0xE4, 4));
	lea(mv, &ts->eax, x86::mem(ts->ebp - 0x64, 4));
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x44, 4));
	mov(mv, x86::mem(ts->ebp - 0x40, 4), ts->edx);
	mov(mv, x86::mem(ts->ebp - 0x30, 4), ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->ebp - 0x84, 4));
	lea(mv, &ts->eax, x86::mem(ts->ebp - 0xA4, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->edi);
	mov(mv, x86::mem(ts->ebp - 0x34, 4), ts->edx);
	mov(mv, x86::mem(ts->ebp - 0x3C, 4), ts->eax);
	mov(mv, x86::mem(ts->ebp - 0x24, 4), 0x3F800000);
	mov(mv, x86::mem(ts->ebp - 0x28, 4), 0x0);
	mov(mv, x86::mem(ts->ebp - 0x20, 4), 0x0);
	mov(mv, x86::mem(ts->ebp - 0x18, 4), 0x42380000);
	game::sub_540C10(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->edi);
	game::sub_512240(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	add(&ts->edi, 0x44);
	inc(&ts->esi);
	dec(&ts->eax);
	mov(mv, x86::mem(ts->ebp + 0x8, 4), ts->edi);
	mov(mv, x86::mem(ts->ebp - 0x10, 4), ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4EE950;
    }
	mov(&ts->ecx, ts->ebx);
	game::sub_4E13C0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0x640F0F22);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A60(ts, mv);
	mov(mv, x86::mem(ts->ebx + 0x104, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->ebx + 0x4, 4));
	push(mv, &ts->esp, 0x640F0F23);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A60(ts, mv);
	add(&ts->esp, 0x10);
	mov(&ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->ebx + 0x100, 4), ts->eax);
	game::sub_496F50(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x8651AC, 4));
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->ebx + 0xFC, 4), ts->edx);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->eax, ts->ebx);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp, 0x4);

loc_7763F0:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x14, 4));
	goto sub_510D40;

loc_7763F8:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x14, 4));
	add(&ts->ecx, 0x4C);
	goto sub_4CC240;

SEH_4EE8B0:
	mov(&ts->eax, 0x7E1920);
	goto ___CxxFrameHandler;
}

void sub_4EEAA0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4EEAC0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4EEAB8;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4EEAB8:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4EEAC0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776418);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, x86::mem(ts->esp + 0x4, 4), ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0x0);
	game::sub_4CBBA0(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x10, 4), 0xFFFFFFFF);
	game::sub_510D40(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_776410:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto sub_510D40;

SEH_4E3300:
	mov(&ts->eax, 0x7DEE70);
	goto ___CxxFrameHandler;
}

void sub_4EEB10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776444);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x108);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4EEB5E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4EE8B0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4EEB5E:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_776430:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x797FBC);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4EEB10:
	mov(&ts->eax, 0x7E1944);
	goto ___CxxFrameHandler;
}

void sub_4EEB70(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4E20B0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4EEB88;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4EEB88:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4EEB90(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_497DA0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x5C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4EEBB2;
    }
	cmp(&ts->eflags, ts->ecx, 0x2);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4EEBB2;
    }
	imul(&ts->ecx, ts->ecx, 0xAB4C);
	add(&ts->ecx, 0x83AD90);
	goto loc_4EEBB4;

loc_4EEBB2:
	xor_(&ts->ecx, ts->ecx);

loc_4EEBB4:
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(0x7F444C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_534850(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4EEBE0;
    }
	mov(mv, &ts->ecx, x86::mem(0x85AD28, 4));
	imul(&ts->ecx, ts->ecx, 0xAB4C);
	mov(&ts->eax, 0x3);
	mov(mv, x86::mem(ts->ecx + 0x83AAC0, 4), ts->eax);
	mov(mv, x86::mem(0x7F444C, 4), ts->eax);

loc_4EEBE0:
	mov(mv, &ts->edx, x86::mem(0x7F444C, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_4E22E0(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x797A00);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537A60(ts, mv);
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x7979F4);
	mov(mv, x86::mem(ts->esi + 0xC8, 4), ts->eax);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_537A60(ts, mv);
	mov(mv, x86::mem(ts->esi + 0xCC, 4), ts->eax);
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	add(&ts->esp, 0x18);
	cmp(&ts->eflags, ts->eax, 0x20);
	pop(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4EEC53;
    }
	cmp(&ts->eflags, ts->eax, 0x100);
	if (ts->eflags.zero) {
        goto loc_4EEC53;
    }
	cmp(&ts->eflags, ts->eax, 0x4);
	if (!ts->eflags.zero) {
        goto loc_4EEC7E;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, ts->eax);
	game::sub_537950(ts, mv);
	add(&ts->esp, 0x8);
	mov(&ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	goto sub_4B2310;

loc_4EEC53:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x39B2B1C6);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xE8CA2E25);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x18);

loc_4EEC7E:
	mov(&ts->ecx, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	goto sub_4B2310;
}

void sub_4EEC90(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4B2860(ts, mv);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0x60, 4), 0x0);
	mov(mv, x86::mem(ts->esi + 0x64, 4), 0x1);
	game::sub_497DA0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x5C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4EECC7;
    }
	cmp(&ts->eflags, ts->ecx, 0x2);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4EECC7;
    }
	imul(&ts->ecx, ts->ecx, 0xAB4C);
	add(&ts->ecx, 0x83AD90);
	goto loc_4EECC9;

loc_4EECC7:
	xor_(&ts->ecx, ts->ecx);

loc_4EECC9:
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(0x7F444C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_534850(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4EECF5;
    }
	mov(mv, &ts->ecx, x86::mem(0x85AD28, 4));
	imul(&ts->ecx, ts->ecx, 0xAB4C);
	mov(&ts->eax, 0x3);
	mov(mv, x86::mem(ts->ecx + 0x83AAC0, 4), ts->eax);
	mov(mv, x86::mem(0x7F444C, 4), ts->eax);

loc_4EECF5:
	mov(mv, &ts->edx, x86::mem(0x7F444C, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_4E22E0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp);
}

void sub_4EED10(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(0x7F444C, 4));
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x850078, 4));
	cmp(&ts->eflags, ts->ecx, 0x8);
	if (ts->eflags.zero && (ts->eflags.sign == ts->eflags.overflow)) {
        goto loc_4EEE20;
    }
	if (ts->eflags.zero) {
        goto loc_4EEE35;
    }
	sub(&ts->ecx, 0x2);
	if (ts->eflags.zero) {
        goto loc_4EED3B;
    }
	sub(&ts->ecx, 0x2);
	if (!ts->eflags.zero) {
        goto loc_4EEF77;
    }

loc_4EED3B:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	cmp(&ts->eflags, ts->ecx, 0x5073EF13);
	if (!ts->eflags.zero) {
        goto loc_4EEDA8;
    }
	cmp(&ts->eflags, ts->eax, 0x3);
	if (!ts->eflags.zero) {
        goto loc_4EED63;
    }
	push(mv, &ts->esp, 0x8);
	mov(&ts->ecx, ts->esi);
	game::sub_497EE0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4EED8D;
    }
	mov(&ts->eax, 0x8);
	goto loc_4EEF77;

loc_4EED63:
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.zero) {
        goto loc_4EEF72;
    }
	cmp(&ts->eflags, ts->eax, 0x2);
	if (!ts->eflags.zero) {
        goto loc_4EED7B;
    }
	mov(&ts->eax, 0x1);
	goto loc_4EEF77;

loc_4EED7B:
	cmp(&ts->eflags, ts->eax, 0x4);
	if (ts->eflags.zero) {
        goto loc_4EEE7B;
    }
	cmp(&ts->eflags, ts->eax, 0x8);
	if (!ts->eflags.zero) {
        goto loc_4EEF77;
    }

loc_4EED8D:
	push(mv, &ts->esp, 0x4);
	mov(&ts->ecx, ts->esi);
	game::sub_497EE0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4EEF1C;
    }
	mov(&ts->eax, 0x4);
	goto loc_4EEF77;

loc_4EEDA8:
	cmp(&ts->eflags, ts->ecx, 0xD9FEEC59);
	if (!ts->eflags.zero) {
        goto loc_4EEF77;
    }
	cmp(&ts->eflags, ts->eax, 0x3);
	if (!ts->eflags.zero) {
        goto loc_4EEDC3;
    }
	mov(&ts->eax, 0x1);
	goto loc_4EEF77;

loc_4EEDC3:
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4EEDDF;
    }
	push(mv, &ts->esp, 0x2);
	mov(&ts->ecx, ts->esi);
	game::sub_497EE0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4EEDE4;
    }
	mov(&ts->eax, 0x2);
	goto loc_4EEF77;

loc_4EEDDF:
	cmp(&ts->eflags, ts->eax, 0x2);
	if (!ts->eflags.zero) {
        goto loc_4EEDFB;
    }

loc_4EEDE4:
	push(mv, &ts->esp, 0x4);
	mov(&ts->ecx, ts->esi);
	game::sub_497EE0(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4EEE00;
    }
	mov(&ts->eax, 0x4);
	goto loc_4EEF77;

loc_4EEDFB:
	cmp(&ts->eflags, ts->eax, 0x4);
	if (!ts->eflags.zero) {
        goto loc_4EEE18;
    }

loc_4EEE00:
	push(mv, &ts->esp, 0x8);
	mov(&ts->ecx, ts->esi);
	game::sub_497EE0(ts, mv);
	neg(&ts->eax);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0x5);
	add(&ts->eax, 0x3);
	goto loc_4EEF77;

loc_4EEE18:
	cmp(&ts->eflags, ts->eax, 0x8);
	goto loc_4EEF70;

loc_4EEE20:
	cmp(&ts->eflags, ts->ecx, 0x20);
	if (ts->eflags.zero) {
        goto loc_4EEF0B;
    }
	cmp(&ts->eflags, ts->ecx, 0x200);
	if (!ts->eflags.zero) {
        goto loc_4EEF77;
    }

loc_4EEE35:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	cmp(&ts->eflags, ts->ecx, 0x5073EF13);
	if (!ts->eflags.zero) {
        goto loc_4EEEA6;
    }
	cmp(&ts->eflags, ts->eax, 0x3);
	if (!ts->eflags.zero) {
        goto loc_4EEE5E;
    }
	push(mv, &ts->esp, 0x4);
	mov(&ts->ecx, ts->esi);
	game::sub_497EE0(ts, mv);
	neg(&ts->eax);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0xFFFFFFF4);
	add(&ts->eax, 0x10);
	goto loc_4EEF77;

loc_4EEE5E:
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.zero) {
        goto loc_4EEF72;
    }
	cmp(&ts->eflags, ts->eax, 0x2);
	if (!ts->eflags.zero) {
        goto loc_4EEE76;
    }
	mov(&ts->eax, 0x1);
	goto loc_4EEF77;

loc_4EEE76:
	cmp(&ts->eflags, ts->eax, 0x10);
	if (!ts->eflags.zero) {
        goto loc_4EEE93;
    }

loc_4EEE7B:
	push(mv, &ts->esp, 0x2);
	mov(&ts->ecx, ts->esi);
	game::sub_497EE0(ts, mv);
	xor_(&ts->edx, ts->edx);
	test(&ts->eflags, ts->eax, ts->eax);
	setnz(ts->eflags, &ts->dl);
	inc(&ts->edx);
	mov(&ts->eax, ts->edx);
	goto loc_4EEF77;

loc_4EEE93:
	cmp(&ts->eflags, ts->eax, 0x4);
	if (!ts->eflags.zero) {
        goto loc_4EEF77;
    }
	mov(&ts->eax, 0x10);
	goto loc_4EEF77;

loc_4EEEA6:
	cmp(&ts->eflags, ts->ecx, 0xD9FEEC59);
	if (!ts->eflags.zero) {
        goto loc_4EEF77;
    }
	cmp(&ts->eflags, ts->eax, 0x3);
	if (!ts->eflags.zero) {
        goto loc_4EEEC1;
    }
	mov(&ts->eax, 0x1);
	goto loc_4EEF77;

loc_4EEEC1:
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4EEEDE;
    }
	push(mv, &ts->esp, 0x2);
	mov(&ts->ecx, ts->esi);
	game::sub_497EE0(ts, mv);
	neg(&ts->eax);
	sbb(&ts->eax, ts->eax);
	and_(&ts->eax, 0xFFFFFFF2);
	add(&ts->eax, 0x10);
	goto loc_4EEF77;

loc_4EEEDE:
	cmp(&ts->eflags, ts->eax, 0x2);
	if (!ts->eflags.zero) {
        goto loc_4EEEED;
    }
	mov(&ts->eax, 0x10);
	goto loc_4EEF77;

loc_4EEEED:
	cmp(&ts->eflags, ts->eax, 0x10);
	if (!ts->eflags.zero) {
        goto loc_4EEF06;
    }
	push(mv, &ts->esp, 0x4);
	mov(&ts->ecx, ts->esi);
	game::sub_497EE0(ts, mv);
	neg(&ts->eax);
	sbb(&ts->eax, ts->eax);
	neg(&ts->eax);
	add(&ts->eax, 0x3);
	goto loc_4EEF77;

loc_4EEF06:
	cmp(&ts->eflags, ts->eax, 0x4);
	goto loc_4EEF70;

loc_4EEF0B:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x8, 4));
	cmp(&ts->eflags, ts->ecx, 0x5073EF13);
	if (!ts->eflags.zero) {
        goto loc_4EEF42;
    }
	cmp(&ts->eflags, ts->eax, 0x3);
	if (!ts->eflags.zero) {
        goto loc_4EEF31;
    }

loc_4EEF1C:
	push(mv, &ts->esp, 0x2);
	mov(&ts->ecx, ts->esi);
	game::sub_497EE0(ts, mv);
	xor_(&ts->ecx, ts->ecx);
	test(&ts->eflags, ts->eax, ts->eax);
	setnz(ts->eflags, &ts->cl);
	inc(&ts->ecx);
	mov(&ts->eax, ts->ecx);
	goto loc_4EEF77;

loc_4EEF31:
	cmp(&ts->eflags, ts->eax, 0x1);
	if (ts->eflags.zero) {
        goto loc_4EEF72;
    }
	cmp(&ts->eflags, ts->eax, 0x2);
	if (!ts->eflags.zero) {
        goto loc_4EEF77;
    }
	mov(&ts->eax, 0x1);
	goto loc_4EEF77;

loc_4EEF42:
	cmp(&ts->eflags, ts->ecx, 0xD9FEEC59);
	if (!ts->eflags.zero) {
        goto loc_4EEF77;
    }
	cmp(&ts->eflags, ts->eax, 0x3);
	if (!ts->eflags.zero) {
        goto loc_4EEF56;
    }
	mov(&ts->eax, 0x1);
	goto loc_4EEF77;

loc_4EEF56:
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4EEF6D;
    }
	push(mv, &ts->esp, 0x2);
	mov(&ts->ecx, ts->esi);
	game::sub_497EE0(ts, mv);
	neg(&ts->eax);
	sbb(&ts->eax, ts->eax);
	add(&ts->eax, 0x3);
	goto loc_4EEF77;

loc_4EEF6D:
	cmp(&ts->eflags, ts->eax, 0x2);

loc_4EEF70:
	if (!ts->eflags.zero) {
        goto loc_4EEF77;
    }

loc_4EEF72:
	mov(&ts->eax, 0x3);

loc_4EEF77:
	cmp(mv, &ts->eflags, ts->eax, x86::mem(0x7F444C, 4));
	if (ts->eflags.zero) {
        goto loc_4EF08B;
    }
	mov(mv, &ts->edx, x86::mem(0x85AD28, 4));
	imul(&ts->edx, ts->edx, 0xAB4C);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->edx + 0x83AAC0, 4), ts->eax);
	mov(mv, x86::mem(0x7F444C, 4), ts->eax);
	game::sub_4EEC90(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_4B2310(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(0x7F444C, 4), 0x10);
	if (ts->eflags.zero) {
        goto loc_4EEFE6;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x7976FC);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4EEFE6;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x797FD4);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x10);
	goto loc_4EF01F;

loc_4EEFE6:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x797FD4);
	game::sub_505450(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x58, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x920, 4));
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, 0x83AD90);
	game::sub_503510(ts, mv);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_497F20(ts, mv);

loc_4EF01F:
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	cmp(&ts->eflags, ts->eax, 0x8);
	pop(mv, &ts->esp, ts->edi);
	if (ts->eflags.zero) {
        goto loc_4EF031;
    }
	cmp(&ts->eflags, ts->eax, 0x100);
	if (!ts->eflags.zero) {
        goto loc_4EF08B;
    }

loc_4EF031:
	cmp(mv, &ts->eflags, x86::mem(0x7F444C, 4), 0x4);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xA936C3A2);
	push(mv, &ts->esp, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4EF069;
    }
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x89782734);
	push(mv, &ts->esp, ts->esi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x18);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);

loc_4EF069:
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->esi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x89782734);
	push(mv, &ts->esp, ts->esi);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	add(&ts->esp, 0x18);

loc_4EF08B:
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4EF090(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x5C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->edi);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4EF0B0;
    }
	cmp(&ts->eflags, ts->eax, 0x2);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4EF0B0;
    }
	imul(&ts->eax, ts->eax, 0xAB4C);
	add(&ts->eax, 0x83AD90);
	mov(&ts->edi, ts->eax);
	goto loc_4EF0B2;

loc_4EF0B0:
	xor_(&ts->edi, ts->edi);

loc_4EF0B2:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x58, 4));
	mov(mv, &ts->ebx, x86::mem(ts->eax + 0x920, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->edi);
	game::sub_5163A0(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4EF19E;
    }
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->edi);
	game::sub_516340(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4EF19E;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ebp + 0x60, 4), 0x1);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(ts->ebp + 0x58, 4));
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4EF146;
    }
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x54, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4EF0F1;
    }
	add(&ts->eax, 0xFFFFFFF0);
	goto loc_4EF0F3;

loc_4EF0F1:
	xor_(&ts->eax, ts->eax);

loc_4EF0F3:
	cmp(&ts->eflags, ts->eax, ts->esi);
	mov(&ts->ecx, ts->ebp);
	if (!ts->eflags.zero) {
        goto loc_4EF100;
    }
	push(mv, &ts->esp, 0x9120409E);
	goto loc_4EF105;

loc_4EF100:
	push(mv, &ts->esp, 0xB5971BF1);

loc_4EF105:
	game::sub_4E2590(ts, mv);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->edi);
	game::sub_52A6C0(ts, mv);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4EF11B;
    }
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	goto loc_4EF11D;

loc_4EF11B:
	xor_(&ts->eax, ts->eax);

loc_4EF11D:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->eax - 0x10, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4EF134;
    }
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->edx, 4));

loc_4EF134:
	mov(mv, &ts->eax, x86::mem(ts->ebp + 0x60, 4));
	pop(mv, &ts->esp, ts->esi);
	dec(&ts->eax);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->ebp + 0x60, 4), ts->eax);
	mov(&ts->ecx, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	goto sub_4B2310;

loc_4EF146:
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->edi);
	game::sub_52A6C0(ts, mv);
	test(&ts->eflags, ts->esi, ts->esi);
	if (ts->eflags.zero) {
        goto loc_4EF157;
    }
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x10, 4));
	goto loc_4EF159;

loc_4EF157:
	xor_(&ts->eax, ts->eax);

loc_4EF159:
	mov(mv, &ts->ecx, x86::mem(ts->eax, 4));
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x4, 4));
	mov(mv, x86::mem(ts->edx, 4), ts->ecx);
	mov(mv, x86::mem(ts->ecx + 0x4, 4), ts->edx);
	lea(mv, &ts->ecx, x86::mem(ts->eax - 0x10, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4EF170;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax, 4));

loc_4EF170:
	mov(mv, &ts->ecx, x86::mem(0x85AD28, 4));
	imul(&ts->ecx, ts->ecx, 0xAB4C);
	mov(&ts->eax, 0x3);
	mov(mv, x86::mem(ts->ecx + 0x83AAC0, 4), ts->eax);
	mov(&ts->ecx, ts->ebp);
	mov(mv, x86::mem(0x7F444C, 4), ts->eax);
	game::sub_4EEC90(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	goto sub_4B2310;

loc_4EF19E:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp);
}

void sub_4EF1B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776464);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(0x836340, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4EF247;
    }
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	cmp(&ts->eflags, ts->eax, 0x8);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(0x7F446C, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(0x7F4468, 4));
	if (ts->eflags.zero) {
        goto loc_4EF1EE;
    }
	cmp(&ts->eflags, ts->eax, 0x200);
	if (!ts->eflags.zero) {
        goto loc_4EF1FA;
    }

loc_4EF1EE:
	mov(mv, &ts->esi, x86::mem(0x7F4470, 4));
	mov(mv, &ts->edi, x86::mem(0x7F4478, 4));

loc_4EF1FA:
	push(mv, &ts->esp, 0x18);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4EF21F;
    }
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->eax);
	game::sub_4E2900(ts, mv);
	goto loc_4EF221;

loc_4EF21F:
	xor_(&ts->eax, ts->eax);

loc_4EF221:
	mov(mv, &ts->ecx, x86::mem(0x7F445C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x18, 4), 0xFFFFFFFF);
	mov(mv, x86::mem(0x836340, 4), ts->eax);
	game::sub_4B2960(ts, mv);
	mov(mv, &ts->edx, x86::mem(0x836340, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->edx + 0xC, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);

loc_4EF247:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_776450:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x797FE8);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4EF1B0:
	mov(&ts->eax, 0x7E1968);
	goto ___CxxFrameHandler;
}

void sub_4EF260(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4E2A20(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4EF278;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4EF278:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4EF280(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ebp, ts->esp);
	and_(&ts->esp, 0xFFFFFFF0);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776492);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	sub(&ts->esp, 0x900);
	mov(mv, &ts->eax, x86::mem(0x836340, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	push(mv, &ts->esp, ts->esi);
	if (!ts->eflags.zero) {
        goto loc_4EF38E;
    }
	game::sub_4EF1B0(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	game::sub_40C910(ts, mv);
	push(mv, &ts->esp, 0x0);
	lea(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, 0x83A9D0);
	mov(mv, x86::mem(ts->esp + 0x918, 4), 0x0);
	game::sub_515D00(ts, mv);
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4EF2FD;
    }
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->esi, ts->eax);
	goto loc_4EF326;

loc_4EF2FD:
	push(mv, &ts->esp, 0x7906DC);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4EF324;
    }
	push(mv, &ts->esp, 0x7906DC);
	game::sub_51BD10(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4EF324;
    }
	mov(mv, &ts->esi, x86::mem(ts->eax + 0x4C, 4));
	goto loc_4EF326;

loc_4EF324:
	xor_(&ts->esi, ts->esi);

loc_4EF326:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x8371B0);
	game::sub_413440(ts, mv);
	test(&ts->eflags, ts->esi, ts->esi);
	mov(mv, x86::mem(0x83623C, 4), 0x2);
	if (ts->eflags.zero) {
        goto loc_4EF351;
    }
	push(mv, &ts->esp, 0x2);
	push(mv, &ts->esp, 0x8371B0);
	mov(&ts->ecx, ts->esi);
	game::sub_4D8C70(ts, mv);

loc_4EF351:
	push(mv, &ts->esp, 0x78FCD8);
	game::sub_52CF60(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4EF377;
    }
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78FCD8);
	push(mv, &ts->esp, 0x0);
	game::sub_555F50(ts, mv);
	add(&ts->esp, 0x14);

loc_4EF377:
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x394, 4));
	mov(mv, x86::mem(ts->esp + 0x90C, 4), 0xFFFFFFFF);
	game::nullsub_1(ts, mv);

loc_4EF38E:
	push(mv, &ts->esp, 0x150);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x90C, 4), 0x1);
	if (ts->eflags.zero) {
        goto loc_4EF3CC;
    }
	mov(mv, &ts->edx, x86::mem(ts->ebp + 0x8, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->eax);
	game::sub_4E2A50(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x904, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_4EF3CC:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x904, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	pop(mv, &ts->esp, ts->esi);
	mov(&ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebp);
	retn(mv, &ts->esp);

loc_776470:
	lea(mv, &ts->ecx, x86::mem(ts->ebp - 0x900, 4));
	goto sub_401800;

loc_77647B:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x798004);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x904, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4EF280:
	mov(&ts->eax, 0x7E1994);
	goto ___CxxFrameHandler;
}

void sub_4EF3F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776E28);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->esi);
	game::sub_552780(ts, mv);
	xor_(&ts->ebx, ts->ebx);
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esp + 0x14, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi, 4), 0x798014);
	mov(mv, x86::mem(ts->esi + 0x14C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x150, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x154, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x158, 1), ts->bl);
	mov(mv, x86::mem(ts->esi + 0x15C, 4), ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x160, 4), ts->ebx);
	game::sub_4E2C70(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	cmp(&ts->eflags, ts->eax, 0x8);
	if (ts->eflags.zero) {
        goto loc_4EF517;
    }
	cmp(&ts->eflags, ts->eax, 0x200);
	if (ts->eflags.zero) {
        goto loc_4EF517;
    }
	cmp(&ts->eflags, ts->eax, 0x4);
	if (!ts->eflags.zero) {
        goto loc_4EF4CA;
    }
	cmp(mv, &ts->eflags, x86::mem(0x83AAB4, 4), 0x3);
	if (!ts->eflags.zero) {
        goto loc_4EF47D;
    }
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0xD3F5F29);

loc_4EF47D:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x7D7A6E0E);
	push(mv, &ts->esp, 0x42ADB44C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FC44);
	push(mv, &ts->esp, 0x2BAC0CEE);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x4FD28546);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x24);
	goto loc_4EF5D0;

loc_4EF4CA:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x47597606);
	push(mv, &ts->esp, 0x42ADB44C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FC44);
	push(mv, &ts->esp, 0x2BAC0CEE);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x4FD28546);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	add(&ts->esp, 0x24);
	goto loc_4EF5D0;

loc_4EF517:
	mov(mv, x86::mem(ts->esi + 0x28, 4), 0xF4EA444B);
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	mov(mv, x86::mem(0x8500C8, 1), ts->bl);
	cmp(&ts->eflags, ts->eax, 0x200);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	if (!ts->eflags.zero) {
        goto loc_4EF53A;
    }
	push(mv, &ts->esp, 0x245448DB);
	goto loc_4EF53F;

loc_4EF53A:
	push(mv, &ts->esp, 0x5D2B0B43);

loc_4EF53F:
	push(mv, &ts->esp, 0x42ADB44C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537A10(ts, mv);
	add(&ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_50C900(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->eax, 0x8);
	if (!ts->eflags.zero) {
        goto loc_4EF578;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FFD0);
	push(mv, &ts->esp, 0x797720);
	push(mv, &ts->esp, ts->eax);
	game::sub_5426C0(ts, mv);
	add(&ts->esp, 0x10);

loc_4EF578:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78FFD0);
	push(mv, &ts->esp, 0x2BAC0CEE);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x4FD28546);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA50(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xEB406FEC);
	push(mv, &ts->esp, ts->eax);
	game::sub_5379C0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_50CA00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x20, 4));
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	add(&ts->esp, 0x28);
	push(mv, &ts->esp, ts->edx);
	or_(&ts->eax, 0x4000);
	push(mv, &ts->esp, ts->eax);
	game::sub_54E6E0(ts, mv);

loc_4EF5D0:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp, 0x4);

loc_776E20:
	mov(mv, &ts->ecx, x86::mem(ts->ebp - 0x10, 4));
	goto ??1strstreambuf@@UAE@XZ;

SEH_4FBDC0:
	mov(&ts->eax, 0x7E02C0);
	goto ___CxxFrameHandler;
}

void sub_4EF5F0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4EF610(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4EF608;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4EF608:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4EF610(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, x86::mem(ts->ecx, 4), 0x798014);
	goto ??1strstreambuf@@UAE@XZ;
}

void sub_4EF620(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0x10, 4));
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, ts->esi);
	game::sub_556020(ts, mv);
	cmp(&ts->eflags, ts->edi, 0x911AB364);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4EF812;
    }
	if (ts->eflags.zero) {
        goto loc_4EF7CC;
    }
	cmp(&ts->eflags, ts->edi, 0x2C0E485A);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4EF797;
    }
	if (ts->eflags.zero) {
        goto loc_4EF785;
    }
	cmp(&ts->eflags, ts->edi, 0x153E234);
	if (ts->eflags.zero) {
        goto loc_4EF8BB;
    }
	cmp(&ts->eflags, ts->edi, 0xC407210);
	if (!ts->eflags.zero) {
        goto loc_4EF9A5;
    }
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	cmp(&ts->eflags, ts->eax, 0x8);
	if (ts->eflags.zero) {
        goto loc_4EF6B5;
    }
	cmp(&ts->eflags, ts->eax, 0x200);
	if (ts->eflags.zero) {
        goto loc_4EF6B5;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(&ts->ebx, 0x1);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, 0x78F5B8);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x158, 1), ts->bl);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_4EF6B5:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x150, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x54, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_51FE70(ts, mv);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4EF9A5;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x14C, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x54, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, ts->esi);
	game::sub_51FE70(ts, mv);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4EF9A5;
    }
	push(mv, &ts->esp, 0x85009C);
	game::sub_43DBB0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0x3);
	mov(&ts->ebx, 0x1);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4EF710;
    }
	push(mv, &ts->esp, 0x85009C);
	game::sub_43DBB0(ts, mv);
	add(&ts->esp, 0x4);
	cmp(&ts->eflags, ts->eax, 0xC);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4EF738;
    }

loc_4EF710:
	cmp(mv, &ts->eflags, x86::mem(0x85009B, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto loc_4EF738;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xC);
	push(mv, &ts->esp, 0x3);
	push(mv, &ts->esp, 0xD29A1A18);
	push(mv, &ts->esp, 0x78FD7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_558430(ts, mv);
	add(&ts->esp, 0x14);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_4EF738:
	push(mv, &ts->esp, 0x85009C);
	push(mv, &ts->esp, 0x8500A9);
	game::sub_43DC30(ts, mv);
	add(&ts->esp, 0x8);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4EF778;
    }
	cmp(mv, &ts->eflags, x86::mem(0x85009B, 1), ts->bl);
	if (!ts->eflags.zero) {
        goto loc_4EF778;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xFF99D845);
	push(mv, &ts->esp, 0x78FD7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_558430(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x15C, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_4EF778:
	mov(&ts->ecx, ts->esi);
	game::sub_498440(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_4EF785:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_4A0140(ts, mv);
	add(&ts->esp, 0x4);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_4EF797:
	cmp(&ts->eflags, ts->edi, 0x34DC1BEC);
	if (ts->eflags.zero) {
        goto loc_4EF8C8;
    }
	cmp(&ts->eflags, ts->edi, 0x59337816);
	if (!ts->eflags.zero) {
        goto loc_4EF9A5;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_4E2DC0(ts, mv);
	mov(&ts->ebx, 0x1);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, x86::mem(ts->esi + 0x158, 1), ts->bl);
	push(mv, &ts->esp, 0x78F5B8);
	goto loc_4EF954;

loc_4EF7CC:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x138, 4), 0x911AB364);
	game::sub_537D40(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4EF9A5;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C60(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_4EF812:
	cmp(&ts->eflags, ts->edi, 0xDA5B8712);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4EF93D;
    }
	if (ts->eflags.zero) {
        goto loc_4EF8E7;
    }
	cmp(&ts->eflags, ts->edi, 0xB4EDEB6D);
	if (ts->eflags.zero) {
        goto loc_4EF8C8;
    }
	cmp(&ts->eflags, ts->edi, 0xC98356BA);
	if (!ts->eflags.zero) {
        goto loc_4EF9A5;
    }
	mov(mv, &ts->eax, x86::mem(0x850078, 4));
	cmp(&ts->eflags, ts->eax, 0x8);
	if (ts->eflags.zero) {
        goto loc_4EF84D;
    }
	cmp(&ts->eflags, ts->eax, 0x200);
	if (!ts->eflags.zero) {
        goto loc_4EF860;
    }

loc_4EF84D:
	mov(&ts->ecx, ts->esi);
	game::sub_4982C0(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_51FF40(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x850078, 4));

loc_4EF860:
	cmp(&ts->eflags, ts->eax, 0x8);
	if (!ts->eflags.zero) {
        goto loc_4EF9A5;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x160, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4EF9A5;
    }
	cmp(mv, &ts->eflags, x86::mem(0x850098, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_4EF9A5;
    }
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_51FE70(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_498400(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(0x8500BA, 2), ts->ax);
	if (!ts->eflags.carry) {
        goto loc_4EF9A5;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x160, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_51FE70(ts, mv);
	mov(&ts->ecx, ts->eax);
	game::sub_498400(ts, mv);
	mov(mv, x86::mem(0x8500BA, 2), ts->ax);

loc_4EF8BB:
	mov(&ts->ecx, ts->esi);
	game::sub_51FF40(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_4EF8C8:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x15C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4EF94D;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi + 0x15C, 4), 0x0);
	goto loc_4EF94D;

loc_4EF8E7:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x150, 4));
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x54, 4));
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_51FE70(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x14C, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	mov(&ts->ebx, ts->eax);
	game::sub_51FE70(ts, mv);
	cmp(&ts->eflags, ts->edi, ts->ebx);
	if (!ts->eflags.zero) {
        goto loc_4EF925;
    }
	push(mv, &ts->esp, 0xC);
	add(&ts->edi, 0x4C);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x85009C);
	game::sub_43DC00(ts, mv);
	add(&ts->esp, 0xC);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_4EF925:
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4EF9A5;
    }
	add(&ts->edi, 0x4C);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x850080);
	game::sub_495220(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_4EF93D:
	cmp(&ts->eflags, ts->edi, 0xE1FDE1D1);
	if (ts->eflags.zero) {
        goto loc_4EF96B;
    }
	cmp(&ts->eflags, ts->edi, 0xFAF20A02);
	if (!ts->eflags.zero) {
        goto loc_4EF9A5;
    }

loc_4EF94D:
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x79031C);

loc_4EF954:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_4EF96B:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x138, 4));
	cmp(&ts->eflags, ts->eax, 0xC407210);
	if (ts->eflags.zero) {
        goto loc_4EF990;
    }
	cmp(&ts->eflags, ts->eax, 0x911AB364);
	if (!ts->eflags.zero) {
        goto loc_4EF9A5;
    }
	mov(mv, &ts->ecx, x86::mem(0x836340, 4));
	game::sub_4B2A00(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_4EF990:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x158, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4EF9A5;
    }
	mov(mv, &ts->ecx, x86::mem(0x836340, 4));
	game::sub_4B29A0(ts, mv);

loc_4EF9A5:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);
}

void sub_4EF9B0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7764B4);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x160);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4EF9FE;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4E2F30(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4EF9FE:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_7764A0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x798028);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4EF9B0:
	mov(&ts->eax, 0x7E19B8);
	goto ___CxxFrameHandler;
}

void sub_4EFA10(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	cmp(&ts->eflags, ts->edi, 0x9120409E);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4EFB63;
    }
	if (ts->eflags.zero) {
        goto loc_4EFAF7;
    }
	cmp(&ts->eflags, ts->edi, 0x406415E3);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4EFAE6;
    }
	if (ts->eflags.zero) {
        goto loc_4EFA86;
    }
	cmp(&ts->eflags, ts->edi, 0xC407210);
	if (ts->eflags.zero) {
        goto loc_4EFA7C;
    }
	cmp(&ts->eflags, ts->edi, 0x35F8620B);
	if (!ts->eflags.zero) {
        goto def_4EFBBB;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esi + 0x4C, 4));
	mov(mv, x86::mem(ts->esi + 0x8B, 1), 0x1);
	if (!ts->eflags.zero) {
        goto def_4EFBBB;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x444969FD);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4954E0(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x158, 1), 0x0);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4EFA7C:
	push(mv, &ts->esp, 0x4);
	game::sub_50D180(ts, mv);
	add(&ts->esp, 0x4);

loc_4EFA86:
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->ebx);
	game::sub_50D2A0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4EFAA6;
    }
	push(mv, &ts->esp, ts->ebx);
	game::sub_50D2A0(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(0x83A9D8, 4), ts->eax);

loc_4EFAA6:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4C, 4));
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x4C, 4));
	cmp(&ts->eflags, ts->ecx, ts->eax);
	pop(mv, &ts->esp, ts->ebx);
	if (ts->eflags.zero) {
        goto def_4EFBBB;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->al, x86::mem(ts->edx + 0x8, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto def_4EFBBB;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F5B8);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	mov(mv, x86::mem(ts->esi + 0x154, 4), ts->edi);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4EFAE6:
	cmp(&ts->eflags, ts->edi, 0x911AB364);
	if (ts->eflags.zero) {
        goto loc_4EFCD1;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4EFAF7:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esi + 0x4C, 4));
	if (ts->eflags.zero) {
        goto loc_4EFB02;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));

loc_4EFB02:
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esi + 0x54, 4));
	if (ts->eflags.zero) {
        goto def_4EFBBB;
    }
	mov(mv, x86::mem(ts->esi + 0x54, 4), ts->eax);
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x2C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4EFB1A;
    }
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x14, 4));
	goto loc_4EFB21;

loc_4EFB1A:
	movsx(mv, &ts->ecx, x86::mem(ts->ecx + 0x8A, 2));

loc_4EFB21:
	mov(mv, &ts->edx, x86::mem(ts->eax + 0x10, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->esi);
	game::sub_498740(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	mov(mv, &ts->ecx, x86::mem(ts->eax + 0x2C, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (!ts->eflags.zero) {
        goto loc_4EFB3C;
    }
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x14, 4));
	goto loc_4EFB43;

loc_4EFB3C:
	movsx(mv, &ts->eax, x86::mem(ts->ecx + 0x8A, 2));

loc_4EFB43:
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x5C, 4));
	game::sub_52EE40(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_4CE170(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x8651AC, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x14C, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4EFB63:
	cmp(&ts->eflags, ts->edi, 0xC98356BA);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4EFC96;
    }
	if (ts->eflags.zero) {
        goto loc_4EFC28;
    }
	cmp(&ts->eflags, ts->edi, 0x9803F6E2);
	if (ts->eflags.zero) {
        goto loc_4EFB97;
    }
	cmp(&ts->eflags, ts->edi, 0xB5971BF1);
	if (!ts->eflags.zero) {
        goto def_4EFBBB;
    }
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_4E3270(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4EFB97:
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0xC0, 4));
	game::sub_538130(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0xFC, 4));
	lea(mv, &ts->ecx, x86::mem(ts->eax + 0xA, 4));
	cmp(&ts->eflags, ts->ecx, 0x14);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto def_4EFBBB;
    }
	movzx(mv, &ts->ecx, x86::mem(ts->ecx + 0x4EFD28, 1));
	jmp(x86::mem(0x4EFD18, 4));

loc_4EFBC2:
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->esi);
	game::sub_4E3270(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_4CE170(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4EFBD6:
	mov(mv, &ts->eax, x86::mem(0x7FA1A8, 4));
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto def_4EFBBB;
    }

loc_4EFBE5:
	push(mv, &ts->esp, 0x1);
	mov(&ts->ecx, ts->esi);
	game::sub_4E3270(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x7FA1A8, 4));
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4EFBE5;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4EFBFD:
	mov(mv, &ts->eax, x86::mem(0x7FA1A8, 4));
	xor_(&ts->edi, ts->edi);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto def_4EFBBB;
    }
	lea(mv, &ts->esp, x86::mem(ts->esp, 4));

loc_4EFC10:
	push(mv, &ts->esp, 0xFFFFFFFF);
	mov(&ts->ecx, ts->esi);
	game::sub_4E3270(ts, mv);
	mov(mv, &ts->eax, x86::mem(0x7FA1A8, 4));
	inc(&ts->edi);
	cmp(&ts->eflags, ts->edi, ts->eax);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4EFC10;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4EFC28:
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x5C, 4));
	game::sub_538760(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14C, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4EFC86;
    }
	cmp(&ts->eflags, ts->eax, 0x7FFFFFFF);
	if (ts->eflags.zero) {
        goto loc_4EFC86;
    }
	mov(mv, &ts->edx, x86::mem(0x8651AC, 4));
	sub(&ts->edx, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), ts->edx);
	fild(mv, &ts->fp, x86::fp_index(0), x86::mem(ts->esp + 0xC, 4));
	fmul(mv, &ts->fp, x86::fp_index(0), x86::mem(0x784268, 4));
	fcomp(mv, &ts->fp, x86::fp_index(0), x86::mem(0x78758C, 4));
	fnstsw(&ts->fp, ts->ax);
	test(&ts->eflags, ts->ah, 0x1);
	if (!ts->eflags.zero) {
        goto def_4EFBBB;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x118, 4));
	game::sub_498600(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi + 0x14C, 4), 0x0);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4EFC86:
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x118, 4));
	game::sub_4CDD40(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);

loc_4EFC96:
	cmp(&ts->eflags, ts->edi, 0xE1FDE1D1);
	if (!ts->eflags.zero) {
        goto def_4EFBBB;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x154, 4));
	cmp(&ts->eflags, ts->eax, 0xC407210);
	if (ts->eflags.zero) {
        goto loc_4EFCC6;
    }
	cmp(&ts->eflags, ts->eax, 0x406415E3);
	if (ts->eflags.zero) {
        goto loc_4EFCC6;
    }
	cmp(&ts->eflags, ts->eax, 0x911AB364);
	if (!ts->eflags.zero) {
        goto loc_4EFCD1;
    }
	mov(mv, &ts->ecx, x86::mem(0x836340, 4));
	game::sub_4B2A00(ts, mv);
	goto loc_4EFCD1;

loc_4EFCC6:
	mov(mv, &ts->ecx, x86::mem(0x836340, 4));
	game::sub_4B29A0(ts, mv);

loc_4EFCD1:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(ts->esi + 0x154, 4), ts->edi);
	game::sub_537D40(ts, mv);
	add(&ts->esp, 0xC);
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto def_4EFBBB;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xDE6EFF34);
	push(mv, &ts->esp, 0x47FF4E7C);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C60(ts, mv);
	push(mv, &ts->esp, 0x5);
	game::sub_50D180(ts, mv);
	add(&ts->esp, 0x14);

def_4EFBBB:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);
}

void sub_4EFD40(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7764D4);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x21C);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4EFD8E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4E3300(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4EFD8E:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_7764C0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x798038);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4EFD40:
	mov(&ts->eax, 0x7E19DC);
	goto ___CxxFrameHandler;
}

void sub_4EFDA0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->esi, ts->ecx);
	game::sub_498BF0(ts, mv);
	mov(&ts->ecx, ts->esi);
	push(mv, &ts->esp, ts->eax);
	game::sub_4E3390(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4EFDC0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x218, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto locret_4EFDD1;
    }
	push(mv, &ts->esp, 0x20);
	game::sub_4E3390(ts, mv);

locret_4EFDD1:
	retn(mv, &ts->esp);
}

void sub_4EFDE0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x7764F4);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0x150);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0xC, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4EFE2E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4E3560(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_4EFE2E:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x4, 4));
	xor_(&ts->eax, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_7764E0:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x798044);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4EFDE0:
	mov(&ts->eax, 0x7E1A00);
	goto ___CxxFrameHandler;
}

void sub_4EFE40(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x4, 4));
	cmp(&ts->eflags, ts->eax, 0xCA4C311B);
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4EFEE9;
    }
	if (ts->eflags.zero) {
        goto loc_4EFED1;
    }
	cmp(&ts->eflags, ts->eax, 0x6E57AA10);
	if (ts->eflags.zero) {
        goto loc_4EFEA8;
    }
	cmp(&ts->eflags, ts->eax, 0x73C044EC);
	if (ts->eflags.zero) {
        goto loc_4EFE86;
    }
	cmp(&ts->eflags, ts->eax, 0xC98356BA);
	if (!ts->eflags.zero) {
        goto loc_4EFF45;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0xE, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4EFF45;
    }
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x18, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_4E37D0(ts, mv);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x14);

loc_4EFE86:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4EFE9B;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi, 4), 0x0);

loc_4EFE9B:
	mov(&ts->ecx, ts->esi);
	game::sub_4CFE10(ts, mv);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x14);

loc_4EFEA8:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4EFEBD;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi, 4), 0x0);

loc_4EFEBD:
	mov(&ts->ecx, ts->esi);
	game::sub_4CFE10(ts, mv);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x10, 4));
	mov(mv, x86::mem(ts->ecx, 1), 0x1);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x14);

loc_4EFED1:
	mov(mv, &ts->al, x86::mem(ts->esi + 0xE, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4EFF45;
    }
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(ts->esi + 0xE, 1), 0x1);
	game::sub_4B8F40(ts, mv);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x14);

loc_4EFEE9:
	cmp(&ts->eflags, ts->eax, 0xCA4C3140);
	if (ts->eflags.zero) {
        goto loc_4EFF01;
    }
	cmp(&ts->eflags, ts->eax, 0xCEA5EA10);
	if (!ts->eflags.zero) {
        goto loc_4EFF45;
    }
	mov(mv, x86::mem(ts->esi + 0xD, 1), 0x0);
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x14);

loc_4EFF01:
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esi + 0xE, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_4EFF1A;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi, 4), 0x0);

loc_4EFF1A:
	push(mv, &ts->esp, 0x23E142);
	game::sub_4FFA80(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->ecx, x86::mem(ts->edx + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xCA4C311B);
	push(mv, &ts->esp, 0x541389E5);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->ecx);
	game::sub_5585E0(ts, mv);
	add(&ts->esp, 0x18);
	mov(mv, x86::mem(ts->esi, 4), ts->eax);

loc_4EFF45:
	xor_(&ts->eax, ts->eax);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x14);
}

void sub_4EFF50(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(ts->esp + 0xC, 4));
	cmp(&ts->eflags, ts->edi, 0x6E57AA10);
	mov(&ts->esi, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4EFFC5;
    }
	cmp(&ts->eflags, ts->edi, 0xC98356BA);
	if (!ts->eflags.zero) {
        goto loc_4EFF98;
    }
	mov(mv, &ts->al, x86::mem(ts->esi + 0x4D, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4EFF89;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_5379A0(ts, mv);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xD25504EC);
	game::sub_55DDE0(ts, mv);
	add(&ts->esp, 0xC);
	goto loc_4EFF98;

loc_4EFF89:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0xD15C0666);
	game::sub_55DDE0(ts, mv);
	add(&ts->esp, 0x8);

loc_4EFF98:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x4C, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4EFFC5;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x18, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x14, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, 0x11);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x50, 4));
	game::sub_4EFE40(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x1);
	if (!ts->eflags.zero) {
        goto loc_4EFFC5;
    }
	mov(mv, x86::mem(ts->esi + 0x4C, 1), 0x0);
	mov(mv, x86::mem(ts->esi + 0x4D, 1), ts->al);

loc_4EFFC5:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x10);
}

void sub_4EFFD0(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x776514);
	mov(mv, &ts->eax, x86::mem(0x0, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, x86::mem(0x0, 4), ts->esp);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->esi);
	mov(mv, &ts->esi, x86::mem(0x7F44B0, 4));
	push(mv, &ts->esp, ts->edi);
	mov(mv, &ts->edi, x86::mem(0x7F44AC, 4));
	push(mv, &ts->esp, 0x154);
	game::j__malloc(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esp + 0x8, 4), ts->eax);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(mv, x86::mem(ts->esp + 0x14, 4), 0x0);
	if (ts->eflags.zero) {
        goto loc_4F0021;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, ts->eax);
	game::sub_4E3960(ts, mv);
	goto loc_4F0023;

loc_4F0021:
	xor_(&ts->eax, ts->eax);

loc_4F0023:
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0xC, 4));
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(0x836370, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	mov(mv, x86::mem(0x0, 4), ts->ecx);
	add(&ts->esp, 0x10);
	retn(mv, &ts->esp);

loc_776500:
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x798054);
	mov(mv, &ts->eax, x86::mem(ts->ebp - 0x10, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_6D7120(ts, mv);
	add(&ts->esp, 0xC);
	retn(mv, &ts->esp);

SEH_4EFFD0:
	mov(&ts->eax, 0x7E1A24);
	goto ___CxxFrameHandler;
}

void sub_4F0040(x86::thread_state* ts, x86::memory_view* mv) {
	push(mv, &ts->esp, ts->esi);
	mov(&ts->esi, ts->ecx);
	game::sub_4E3BA0(ts, mv);
	test(mv, &ts->eflags, x86::mem(ts->esp + 0x8, 1), 0x1);
	if (ts->eflags.zero) {
        goto loc_4F0058;
    }
	push(mv, &ts->esp, ts->esi);
	game::j__free(ts, mv);
	add(&ts->esp, 0x4);

loc_4F0058:
	mov(&ts->eax, ts->esi);
	pop(mv, &ts->esp, ts->esi);
	retn(mv, &ts->esp, 0x4);
}

void sub_4F0060(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x8, 4));
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->esi);
	game::sub_556020(ts, mv);
	cmp(&ts->eflags, ts->ebp, 0xA8DE4CD2);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4F01B9;
    }
	if (ts->eflags.zero) {
        goto loc_4F0164;
    }
	cmp(&ts->eflags, ts->ebp, 0x72619778);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4F00FF;
    }
	if (ts->eflags.zero) {
        goto loc_4F00E2;
    }
	cmp(&ts->eflags, ts->ebp, 0xC407210);
	if (ts->eflags.zero) {
        goto loc_4F00C2;
    }
	cmp(&ts->eflags, ts->ebp, 0x2C0E485A);
	if (!ts->eflags.zero) {
        goto loc_4F024E;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_4A0140(ts, mv);
	add(&ts->esp, 0x4);
	goto loc_4F024E;

loc_4F00C2:
	push(mv, &ts->esp, 0x144849C1);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x154, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4CFCB0(ts, mv);
	add(&ts->esp, 0x10);
	goto loc_4F024E;

loc_4F00E2:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F568);
	push(mv, &ts->esp, 0x444969FD);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	goto loc_4F024E;

loc_4F00FF:
	cmp(&ts->eflags, ts->ebp, 0x911AB364);
	if (ts->eflags.zero) {
        goto loc_4F0130;
    }
	cmp(&ts->eflags, ts->ebp, 0x911C0A4B);
	if (!ts->eflags.zero) {
        goto loc_4F024E;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F568);
	push(mv, &ts->esp, 0x444969FE);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	goto loc_4F024E;

loc_4F0130:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xAFFF7C7A);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x2C0E485A);

loc_4F0147:
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->edi);
	game::sub_558820(ts, mv);
	add(&ts->esp, 0x24);
	goto loc_4F024E;

loc_4F0164:
	game::sub_5B7C40(ts, mv);
	cmp(&ts->eflags, ts->eax, 0x20);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4F017D;
    }
	mov(mv, x86::mem(0x864F4C, 4), 0x1);
	goto loc_4F024E;

loc_4F017D:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x10073C4F);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x2C0E485A);
	push(mv, &ts->esp, 0x2C0E485A);
	push(mv, &ts->esp, 0xA8DE4CD2);
	push(mv, &ts->esp, 0x541389E5);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->edi);
	game::sub_558750(ts, mv);
	add(&ts->esp, 0x28);
	goto loc_4F024E;

loc_4F01B9:
	cmp(&ts->eflags, ts->ebp, 0xF6734AAF);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4F0229;
    }
	if (ts->eflags.zero) {
        goto loc_4F020A;
    }
	cmp(&ts->eflags, ts->ebp, 0xC98356BA);
	if (ts->eflags.zero) {
        goto loc_4F01F2;
    }
	cmp(&ts->eflags, ts->ebp, 0xF6734AA2);
	if (!ts->eflags.zero) {
        goto loc_4F024E;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xC5C25C87);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x2C0E485A);
	push(mv, &ts->esp, 0xF6734AAF);
	goto loc_4F0147;

loc_4F01F2:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x151, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4F024E;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	game::sub_4A0140(ts, mv);
	add(&ts->esp, 0x4);
	goto loc_4F024E;

loc_4F020A:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x82EC12C8);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x2C0E485A);
	push(mv, &ts->esp, 0xF6734AD3);
	goto loc_4F0147;

loc_4F0229:
	cmp(&ts->eflags, ts->ebp, 0xF6734AD3);
	if (!ts->eflags.zero) {
        goto loc_4F024E;
    }
	game::sub_58A0E0(ts, mv);
	mov(mv, x86::mem(ts->eax + 0xC4, 1), 0x1);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0xC407210);
	game::sub_51CE60(ts, mv);
	add(&ts->esp, 0x8);

loc_4F024E:
	mov(mv, &ts->ebx, x86::mem(0x836370, 4));
	test(&ts->eflags, ts->ebx, ts->ebx);
	if (ts->eflags.zero) {
        goto loc_4F0369;
    }
	mov(mv, &ts->edi, x86::mem(ts->ebx + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x18, 4));
	xor_(&ts->eax, ts->eax);
	cmp(&ts->eflags, ts->edi, 0x2);
	setz(ts->eflags, &ts->al);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x154, 4));
	lea(mv, &ts->eax, x86::mem(ts->eax + (ts->eax) + 0x6, 4));
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->edi);
	game::sub_4EFE40(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4F02AB;
    }
	mov(mv, &ts->al, x86::mem(0x837B6E, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4F029D;
    }
	mov(&ts->ecx, ts->ebx);
	game::sub_4B9690(ts, mv);

loc_4F029D:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(0x837B6E, 1), 0x1);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_4F02AB:
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_4F02FD;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4F02C5;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->edi, 4), 0x0);

loc_4F02C5:
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->eax + 0x4, 4));
	push(mv, &ts->esp, 0x5A6F817F);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x2C0E485A);
	push(mv, &ts->esp, 0x73C044EC);
	push(mv, &ts->esp, 0x541389E5);
	push(mv, &ts->esp, 0x39DF715);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->eax);
	game::sub_558860(ts, mv);
	add(&ts->esp, 0x20);
	mov(mv, x86::mem(ts->edi, 4), ts->eax);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_4F02FD:
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFE);
	if (!ts->eflags.zero) {
        goto loc_4F0360;
    }
	mov(mv, &ts->cl, x86::mem(ts->ebx + 0x150, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x14, 4));
	mov(mv, &ts->edi, x86::mem(ts->edi + 0x18, 4));
	if (ts->eflags.zero) {
        goto loc_4F032A;
    }
	mov(&ts->ecx, ts->ebx);
	mov(mv, x86::mem(ts->ebx + 0x14C, 4), 0x3);
	game::sub_4B9690(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_4F032A:
	cmp(&ts->eflags, ts->eax, 0x61757468);
	if (!ts->eflags.zero) {
        goto loc_4F0369;
    }
	cmp(&ts->eflags, ts->edi, 0x696B6579);
	if (!ts->eflags.zero) {
        goto loc_4F0369;
    }
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0xC4, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_4F0369;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xF6734AA2);
	game::sub_51CE60(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_4F0360:
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4F0369;
    }
	mov(mv, x86::mem(0x837B6E, 1), ts->al);

loc_4F0369:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);
}

void sub_4F0370(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	sub(&ts->esp, 0x20);
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x28, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0x30, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x3C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	game::sub_556020(ts, mv);
	cmp(&ts->eflags, ts->ebx, 0x911AB364);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4F05E7;
    }
	if (ts->eflags.zero) {
        goto loc_4F0655;
    }
	cmp(&ts->eflags, ts->ebx, 0x34DC1BEC);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4F04AD;
    }
	if (ts->eflags.zero) {
        goto loc_4F041B;
    }
	cmp(&ts->eflags, ts->ebx, 0xC407210);
	if (ts->eflags.zero) {
        goto loc_4F04EA;
    }
	cmp(&ts->eflags, ts->ebx, 0x2C0E485B);
	if (ts->eflags.zero) {
        goto loc_4F040A;
    }
	cmp(&ts->eflags, ts->ebx, 0x347820BA);
	if (!ts->eflags.zero) {
        goto loc_4F07DE;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x10A27A02);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x34DC1BEC);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->edi);
	game::sub_558750(ts, mv);
	add(&ts->esp, 0x28);
	goto loc_4F07DE;

loc_4F040A:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	game::sub_4A0140(ts, mv);
	add(&ts->esp, 0x4);
	goto loc_4F07DE;

loc_4F041B:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x54, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0x254, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_4F07DE;
    }
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x49E150);
	add(&ts->edi, 0x4C);
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(ts->esi + 0x16C, 1), 0x0);
	game::sub_58B940(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->ecx, ts->eax);
	game::sub_587450(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4F0482;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x167BCF0B);
	mov(mv, x86::mem(ts->esi + 0x16C, 1), 0x1);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->edi);
	game::sub_558540(ts, mv);
	add(&ts->esp, 0x1C);
	goto loc_4F07DE;

loc_4F0482:
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0xB709ACA9);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->ebp);
	game::sub_558310(ts, mv);
	add(&ts->esp, 0x10);
	mov(mv, x86::mem(ts->esi + 0x14C, 4), ts->eax);
	goto loc_4F07DE;

loc_4F04AD:
	cmp(&ts->eflags, ts->ebx, 0x35F8620B);
	if (ts->eflags.zero) {
        goto loc_4F0580;
    }
	cmp(&ts->eflags, ts->ebx, 0x406415E3);
	if (ts->eflags.zero) {
        goto loc_4F04EA;
    }
	cmp(&ts->eflags, ts->ebx, 0x72619778);
	if (!ts->eflags.zero) {
        goto loc_4F07DE;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F568);
	push(mv, &ts->esp, 0x444969FD);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	goto loc_4F07DE;

loc_4F04EA:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4F07DE;
    }
	mov(mv, &ts->cl, x86::mem(ts->eax + 0x254, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (ts->eflags.zero) {
        goto loc_4F07DE;
    }
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x16C, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_4F053F;
    }
	lea(mv, &ts->edi, x86::mem(ts->eax + 0x4C, 4));
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x1CB0C3FC);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x150, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4CFCB0(ts, mv);
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x850080);
	game::sub_503260(ts, mv);
	goto loc_4F07DE;

loc_4F053F:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x46527FD0);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x347820BA);
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->edi);
	game::sub_558750(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->edx);
	game::sub_51DE60(ts, mv);
	add(&ts->esp, 0x30);
	goto loc_4F07DE;

loc_4F0580:
	mov(mv, &ts->eax, x86::mem(0x836370, 4));
	cmp(mv, &ts->eflags, x86::mem(ts->eax + 0x4, 4), 0x2);
	if (ts->eflags.zero) {
        goto loc_4F05A5;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x12141);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->eax);
	game::sub_4A3100(ts, mv);
	add(&ts->esp, 0x1C);

loc_4F05A5:
	mov(&ts->eax, 0x1);
	lea(mv, &ts->ebx, x86::mem(ts->ebx, 4));

loc_4F05B0:
	lea(mv, &ts->edi, x86::mem(ts->eax + 0x1, 4));
	push(mv, &ts->esp, ts->edi);
	lea(mv, &ts->ecx, x86::mem(ts->esp + 0x14, 4));
	push(mv, &ts->esp, 0x796450);
	push(mv, &ts->esp, ts->ecx);
	game::sub_4400D0(ts, mv);
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F21C);
	lea(mv, &ts->edx, x86::mem(ts->esp + 0x24, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	game::sub_5426C0(ts, mv);
	mov(&ts->eax, ts->edi);
	add(&ts->esp, 0x1C);
	cmp(&ts->eflags, ts->eax, 0x4);
	if (ts->eflags.sign != ts->eflags.overflow) {
        goto loc_4F05B0;
    }
	goto loc_4F07DE;

loc_4F05E7:
	cmp(&ts->eflags, ts->ebx, 0xC98356BA);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4F06F8;
    }
	if (ts->eflags.zero) {
        goto loc_4F06B5;
    }
	cmp(&ts->eflags, ts->ebx, 0x911C0A4B);
	if (ts->eflags.zero) {
        goto loc_4F0698;
    }
	cmp(&ts->eflags, ts->ebx, 0xAA54BF29);
	if (ts->eflags.zero) {
        goto loc_4F0655;
    }
	cmp(&ts->eflags, ts->ebx, 0xC519BFC0);
	if (!ts->eflags.zero) {
        goto loc_4F07DE;
    }
	game::sub_58A0E0(ts, mv);
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->eax);
	game::sub_5822E0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DBB0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4F07DE;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, 0xAF0BBD92);
	mov(mv, x86::mem(ts->esi + 0x16C, 1), 0x1);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);
	goto loc_4F07DE;

loc_4F0655:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x16C, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4F067C;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0xAF0BBD92);
	mov(mv, x86::mem(ts->esi + 0x16C, 1), 0x0);
	game::sub_55DDA0(ts, mv);
	add(&ts->esp, 0x8);
	goto loc_4F07DE;

loc_4F067C:
	push(mv, &ts->esp, 0x8);
	mov(&ts->ecx, 0x850080);
	game::sub_5031B0(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x836370, 4));
	game::sub_4B96F0(ts, mv);
	goto loc_4F07DE;

loc_4F0698:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F568);
	push(mv, &ts->esp, 0x444969FE);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	goto loc_4F07DE;

loc_4F06B5:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x20, 4));
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->esi + 0x16C, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_4F06DD;
    }
	push(mv, &ts->esp, 0x0);
	mov(&ts->ecx, ts->eax);
	game::sub_5822E0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DBB0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4F06E3;
    }

loc_4F06DD:
	and_(&ts->edi, 0xFFFFDFFF);

loc_4F06E3:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	push(mv, &ts->esp, ts->edi);
	game::sub_54E6E0(ts, mv);
	goto loc_4F07DE;

loc_4F06F8:
	cmp(&ts->eflags, ts->ebx, 0xC9D30688);
	if (ts->eflags.zero) {
        goto loc_4F0840;
    }
	cmp(&ts->eflags, ts->ebx, 0xDA5B8712);
	if (!ts->eflags.zero) {
        goto loc_4F07DE;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x54, 4));
	lea(mv, &ts->ebp, x86::mem(ts->edi + 0x4C, 4));
	push(mv, &ts->esp, ts->ebp);
	game::sub_43DBB0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4F0744;
    }
	push(mv, &ts->esp, 0x9700A5AD);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_4957D0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	goto loc_4F07DE;

loc_4F0744:
	mov(mv, &ts->ebx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x17828BEA);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->ebx);
	game::sub_558310(ts, mv);
	add(&ts->esp, 0x10);
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, 0x49E060);
	push(mv, &ts->esp, ts->ebp);
	push(mv, &ts->esp, 0x0);
	mov(mv, x86::mem(ts->esi + 0x14C, 4), ts->eax);
	game::sub_58B940(ts, mv);
	add(&ts->esp, 0x4);
	mov(&ts->ecx, ts->eax);
	game::sub_587310(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.sign == ts->eflags.overflow) {
        goto loc_4F07DA;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x14C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	mov(mv, &ts->ebp, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x150DFD4C);
	mov(mv, x86::mem(ts->esi + 0x14C, 4), 0x0);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->ebp);
	game::sub_558540(ts, mv);
	push(mv, &ts->esp, 0x9700A5AD);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x24);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_4957D0(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));

loc_4F07DA:
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x34, 4));

loc_4F07DE:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x40, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x3C, 4));
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x38, 4));
	push(mv, &ts->esp, 0xC);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->edx);
	add(&ts->esi, 0x150);
	push(mv, &ts->esp, ts->ebx);
	mov(&ts->ecx, ts->esi);
	game::sub_4EFE40(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4F087B;
    }
	mov(mv, &ts->al, x86::mem(0x837B6F, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4F082F;
    }
	mov(mv, &ts->ecx, x86::mem(0x836370, 4));
	game::sub_4B9690(ts, mv);
	mov(mv, &ts->ecx, x86::mem(0x836370, 4));
	test(&ts->eflags, ts->ecx, ts->ecx);
	if (ts->eflags.zero) {
        goto loc_4F0825;
    }
	mov(mv, &ts->eax, x86::mem(ts->ecx, 4));
	push(mv, &ts->esp, 0x1);
	call(ts, mv, x86::mem(ts->eax, 4));

loc_4F0825:
	mov(mv, x86::mem(0x836370, 4), 0x0);

loc_4F082F:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(0x837B6F, 1), 0x1);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp, 0x10);

loc_4F0840:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x54, 4));
	push(mv, &ts->esp, 0x9700A5AD);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, 0xFF);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->eax, x86::mem(ts->edi + 0x4C, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_43DC00(ts, mv);
	mov(mv, &ts->edx, x86::mem(ts->edi, 4));
	add(&ts->esp, 0x10);
	mov(&ts->ecx, ts->edi);
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F228);
	push(mv, &ts->esp, ts->ebp);
	game::sub_51CF70(ts, mv);
	add(&ts->esp, 0xC);
	goto loc_4F07DE;

loc_4F087B:
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_4F08C1;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4F0895;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->esi, 4), 0x0);

loc_4F0895:
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	push(mv, &ts->esp, 0xB368B7A5);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->eax);
	game::sub_558610(ts, mv);
	add(&ts->esp, 0x14);
	pop(mv, &ts->esp, ts->edi);
	mov(mv, x86::mem(ts->esi, 4), ts->eax);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp, 0x10);

loc_4F08C1:
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4F08CA;
    }
	mov(mv, x86::mem(0x837B6F, 1), ts->al);

loc_4F08CA:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	add(&ts->esp, 0x20);
	retn(mv, &ts->esp, 0x10);
}

void sub_4F08E0(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->esi);
	game::sub_556020(ts, mv);
	cmp(&ts->eflags, ts->ebp, 0xB34A760F);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4F0A8B;
    }
	if (ts->eflags.zero) {
        goto loc_4F0A49;
    }
	cmp(&ts->eflags, ts->ebp, 0x904ACA43);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4F09CA;
    }
	if (ts->eflags.zero) {
        goto loc_4F09BA;
    }
	cmp(&ts->eflags, ts->ebp, 0xC407210);
	if (ts->eflags.zero) {
        goto loc_4F0952;
    }
	cmp(&ts->eflags, ts->ebp, 0x3098BF25);
	if (ts->eflags.zero) {
        goto loc_4F0946;
    }
	cmp(&ts->eflags, ts->ebp, 0x72619778);
	if (ts->eflags.zero) {
        goto loc_4F0A0A;
    }
	goto loc_4F0CA2;

loc_4F0946:
	mov(mv, x86::mem(ts->esi + 0x180, 1), 0x0);
	goto loc_4F0CA2;

loc_4F0952:
	mov(mv, &ts->al, x86::mem(ts->esi + 0x180, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4F0CA2;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->ebx + 0x10, 4), 0xD79B07A0);
	if (!ts->eflags.zero) {
        goto loc_4F0CA2;
    }
	mov(mv, &ts->ecx, x86::mem(0x836370, 4));
	add(&ts->ecx, 0x8);
	game::sub_495960(ts, mv);
	test(&ts->eflags, ts->al, ts->al);
	if (ts->eflags.zero) {
        goto loc_4F0992;
    }
	mov(&ts->ecx, ts->esi);
	mov(mv, x86::mem(0x836376, 1), 0x0);
	game::sub_49E3B0(ts, mv);
	goto loc_4F0CA2;

loc_4F0992:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xA5CF4291);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->edi);
	game::sub_5585E0(ts, mv);
	add(&ts->esp, 0x18);
	goto loc_4F0CA2;

loc_4F09BA:
	mov(mv, &ts->ecx, x86::mem(0x836370, 4));
	game::sub_4B96F0(ts, mv);
	goto loc_4F0CA2;

loc_4F09CA:
	cmp(&ts->eflags, ts->ebp, 0x911AB364);
	if (ts->eflags.zero) {
        goto loc_4F09BA;
    }
	cmp(&ts->eflags, ts->ebp, 0x911C0A4B);
	if (ts->eflags.zero) {
        goto loc_4F09F2;
    }
	cmp(&ts->eflags, ts->ebp, 0xA365B3D5);
	if (!ts->eflags.zero) {
        goto loc_4F0CA2;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_4BA840(ts, mv);
	goto loc_4F0CA2;

loc_4F09F2:
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F568);
	push(mv, &ts->esp, 0x444969FE);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);

loc_4F0A0A:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	game::sub_51CD60(ts, mv);
	push(mv, &ts->esp, 0x798070);
	game::sub_50B9C0(ts, mv);
	add(&ts->esp, 0x8);
	cmp(&ts->eflags, ts->ebp, 0x72619778);
	if (!ts->eflags.zero) {
        goto loc_4F0CA2;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F568);
	push(mv, &ts->esp, 0x444969FD);
	push(mv, &ts->esp, ts->ecx);
	game::sub_537C00(ts, mv);
	add(&ts->esp, 0x10);
	goto loc_4F0CA2;

loc_4F0A49:
	mov(mv, &ts->edi, x86::mem(0x836370, 4));
	add(&ts->edi, 0x8);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x850080);
	game::sub_503230(ts, mv);
	add(&ts->edi, 0x40);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->ecx, 0x850080);
	game::sub_503290(ts, mv);
	push(mv, &ts->esp, 0x144849C1);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x188, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edx);
	game::sub_4CFCB0(ts, mv);
	add(&ts->esp, 0x10);
	goto loc_4F0CA2;

loc_4F0A8B:
	cmp(&ts->eflags, ts->ebp, 0xDA5B8712);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4F0C1D;
    }
	if (ts->eflags.zero) {
        goto loc_4F0B51;
    }
	cmp(&ts->eflags, ts->ebp, 0xC98356BA);
	if (ts->eflags.zero) {
        goto loc_4F0B09;
    }
	cmp(&ts->eflags, ts->ebp, 0xC9D30688);
	if (ts->eflags.zero) {
        goto loc_4F0C11;
    }
	cmp(&ts->eflags, ts->ebp, 0xDA52AF6B);
	if (!ts->eflags.zero) {
        goto loc_4F0CA2;
    }
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x17C, 4));
	mov(mv, &ts->eax, x86::mem(0x836370, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x4C, 4));
	add(&ts->eax, 0x8);
	mov(mv, x86::mem(ts->eax + 0x120, 4), ts->edx);
	mov(mv, &ts->edx, x86::mem(ts->ecx + 0x50, 4));
	mov(mv, x86::mem(ts->eax + 0x124, 4), ts->edx);
	mov(mv, &ts->ecx, x86::mem(ts->ecx + 0x54, 4));
	mov(mv, x86::mem(ts->eax + 0x128, 4), ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x17C, 4));
	mov(mv, &ts->edx, x86::mem(ts->ecx, 4));
	call(ts, mv, x86::mem(ts->edx + 0xC, 4));
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esi + 0x20, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(0x8384D8, 4));
	game::sub_54E6E0(ts, mv);
	goto loc_4F0CA2;

loc_4F0B09:
	cmp(mv, &ts->eflags, x86::mem(0x836374, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_4F0B25;
    }
	mov(&ts->ecx, ts->esi);
	game::sub_49E3B0(ts, mv);
	mov(mv, x86::mem(0x836374, 1), 0x0);
	goto loc_4F0CA2;

loc_4F0B25:
	cmp(mv, &ts->eflags, x86::mem(ts->esi + 0x14C, 1), 0x1);
	if (!ts->eflags.zero) {
        goto loc_4F0CA2;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x0);
	push(mv, &ts->esp, 0x78FE04);
	push(mv, &ts->esp, ts->edx);
	game::sub_537980(ts, mv);
	add(&ts->esp, 0xC);
	mov(mv, x86::mem(ts->esi + 0x14C, 1), 0x0);
	goto loc_4F0CA2;

loc_4F0B51:
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x54, 4));
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esi + 0x16C, 4));
	if (!ts->eflags.zero) {
        goto loc_4F0B7F;
    }
	add(&ts->eax, 0x4C);
	push(mv, &ts->esp, 0x40);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(0x836370, 4));
	add(&ts->eax, 0x8);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DC00(ts, mv);
	add(&ts->esp, 0xC);
	mov(&ts->ecx, ts->esi);
	game::sub_51FF40(ts, mv);
	goto loc_4F0CA2;

loc_4F0B7F:
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esi + 0x170, 4));
	if (!ts->eflags.zero) {
        goto loc_4F0B95;
    }
	mov(mv, &ts->ecx, x86::mem(0x836370, 4));
	add(&ts->eax, 0x4C);
	add(&ts->ecx, 0x48);
	goto loc_4F0C05;

loc_4F0B95:
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esi + 0x174, 4));
	if (!ts->eflags.zero) {
        goto loc_4F0BC1;
    }
	mov(mv, &ts->edx, x86::mem(0x836370, 4));
	push(mv, &ts->esp, 0x20);
	add(&ts->eax, 0x4C);
	push(mv, &ts->esp, ts->eax);
	add(&ts->edx, 0x68);
	push(mv, &ts->esp, ts->edx);
	game::sub_43DC00(ts, mv);
	add(&ts->esp, 0xC);
	mov(&ts->ecx, ts->esi);
	game::sub_51FF40(ts, mv);
	goto loc_4F0CA2;

loc_4F0BC1:
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esi + 0x178, 4));
	if (!ts->eflags.zero) {
        goto loc_4F0BEE;
    }
	add(&ts->eax, 0x4C);
	push(mv, &ts->esp, 0x40);
	push(mv, &ts->esp, ts->eax);
	mov(mv, &ts->eax, x86::mem(0x836370, 4));
	add(&ts->eax, 0x88);
	push(mv, &ts->esp, ts->eax);
	game::sub_43DC00(ts, mv);
	add(&ts->esp, 0xC);
	mov(&ts->ecx, ts->esi);
	game::sub_51FF40(ts, mv);
	goto loc_4F0CA2;

loc_4F0BEE:
	cmp(mv, &ts->eflags, ts->eax, x86::mem(ts->esi + 0x17C, 4));
	if (!ts->eflags.zero) {
        goto loc_4F0C11;
    }
	mov(mv, &ts->ecx, x86::mem(0x836370, 4));
	add(&ts->eax, 0x4C);
	add(&ts->ecx, 0x108);

loc_4F0C05:
	push(mv, &ts->esp, 0x20);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	game::sub_43DC00(ts, mv);
	add(&ts->esp, 0xC);

loc_4F0C11:
	mov(&ts->ecx, ts->esi);
	game::sub_51FF40(ts, mv);
	goto loc_4F0CA2;

loc_4F0C1D:
	cmp(&ts->eflags, ts->ebp, 0xF6734AA2);
	if (ts->eflags.zero) {
        goto loc_4F0C70;
    }
	cmp(&ts->eflags, ts->ebp, 0xF6734AAF);
	if (ts->eflags.zero) {
        goto loc_4F0C54;
    }
	cmp(&ts->eflags, ts->ebp, 0xF6734AD3);
	if (!ts->eflags.zero) {
        goto loc_4F0CA2;
    }
	game::sub_58A0E0(ts, mv);
	mov(mv, x86::mem(ts->eax + 0xC4, 1), 0x1);
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0xB34A760F);
	game::sub_51CE60(ts, mv);
	add(&ts->esp, 0x8);
	goto loc_4F0CA2;

loc_4F0C54:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x82EC12C8);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x2C0E485A);
	push(mv, &ts->esp, 0xF6734AD3);
	goto loc_4F0C8A;

loc_4F0C70:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xC5C25C87);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x2C0E485A);
	push(mv, &ts->esp, 0xF6734AAF);

loc_4F0C8A:
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->edi);
	game::sub_558820(ts, mv);
	add(&ts->esp, 0x24);

loc_4F0CA2:
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x188, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->edi);
	game::sub_4EFE40(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4F0CE3;
    }
	mov(mv, &ts->al, x86::mem(0x837B70, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4F0CD5;
    }
	mov(mv, &ts->ecx, x86::mem(0x836370, 4));
	game::sub_4B9690(ts, mv);

loc_4F0CD5:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(0x837B70, 1), 0x1);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_4F0CE3:
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_4F0D35;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4F0CFD;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->edi, 4), 0x0);

loc_4F0CFD:
	mov(mv, &ts->edx, x86::mem(ts->edi + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->edx + 0x4, 4));
	push(mv, &ts->esp, 0x5A6F817F);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x2C0E485A);
	push(mv, &ts->esp, 0x73C044EC);
	push(mv, &ts->esp, 0x541389E5);
	push(mv, &ts->esp, 0x39DF715);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->eax);
	game::sub_558860(ts, mv);
	add(&ts->esp, 0x20);
	mov(mv, x86::mem(ts->edi, 4), ts->eax);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_4F0D35:
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4F0D45;
    }
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(0x837B70, 1), ts->al);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_4F0D45:
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFE);
	if (!ts->eflags.zero) {
        goto loc_4F0D7C;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0x14, 4), 0x61757468);
	if (!ts->eflags.zero) {
        goto loc_4F0D7C;
    }
	cmp(mv, &ts->eflags, x86::mem(ts->edi + 0x18, 4), 0x696B6579);
	if (!ts->eflags.zero) {
        goto loc_4F0D7C;
    }
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0xC4, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_4F0D7C;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xF6734AA2);
	game::sub_51CE60(ts, mv);
	add(&ts->esp, 0x8);

loc_4F0D7C:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);
}

void sub_4F0D90(x86::thread_state* ts, x86::memory_view* mv) {
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x10, 4));
	push(mv, &ts->esp, ts->ebx);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(mv, &ts->ebp, x86::mem(ts->esp + 0xC, 4));
	push(mv, &ts->esp, ts->esi);
	push(mv, &ts->esp, ts->edi);
	mov(&ts->esi, ts->ecx);
	mov(mv, &ts->ecx, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ecx);
	push(mv, &ts->esp, ts->ebx);
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->esi);
	game::sub_556020(ts, mv);
	cmp(&ts->eflags, ts->ebp, 0xC9D30688);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4F0EDA;
    }
	if (ts->eflags.zero) {
        goto loc_4F0ECE;
    }
	cmp(&ts->eflags, ts->ebp, 0x911AB364);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4F0EA8;
    }
	if (ts->eflags.zero) {
        goto loc_4F0E76;
    }
	cmp(&ts->eflags, ts->ebp, 0xC407210);
	if (ts->eflags.zero) {
        goto loc_4F0E03;
    }
	cmp(&ts->eflags, ts->ebp, 0x72619778);
	if (!ts->eflags.zero) {
        goto loc_4F1031;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F568);
	push(mv, &ts->esp, 0x444969FD);
	push(mv, &ts->esp, ts->edx);
	game::sub_537C00(ts, mv);
	goto loc_4F102E;

loc_4F0E03:
	cmp(mv, &ts->eflags, x86::mem(ts->ebx + 0x10, 4), 0xD79B07A0);
	if (!ts->eflags.zero) {
        goto loc_4F1031;
    }
	mov(&ts->ecx, 0x850080);
	game::sub_5031D0(ts, mv);
	mov(&ts->edi, ts->eax);
	cmp(mv, &ts->eflags, x86::mem(ts->edi, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_4F0E4C;
    }
	mov(&ts->ecx, 0x850080);
	game::sub_503210(ts, mv);
	cmp(mv, &ts->eflags, x86::mem(ts->eax, 1), 0x0);
	if (ts->eflags.zero) {
        goto loc_4F0E4C;
    }
	push(mv, &ts->esp, ts->edi);
	push(mv, &ts->esp, 0x2756FB2F);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->eax, x86::mem(ts->esi + 0x184, 4));
	push(mv, &ts->esp, ts->eax);
	goto loc_4F1029;

loc_4F0E4C:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x9DA1F76D);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0xFFFFFFFF);
	push(mv, &ts->esp, 0x639);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->edi);
	game::sub_558540(ts, mv);
	add(&ts->esp, 0x1C);
	goto loc_4F1031;

loc_4F0E76:
	mov(mv, &ts->ecx, x86::mem(0x836370, 4));
	game::sub_4B96F0(ts, mv);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x154, 4));
	push(mv, &ts->esp, ts->ecx);
	mov(&ts->ecx, 0x850080);
	game::sub_503230(ts, mv);
	lea(mv, &ts->edx, x86::mem(ts->esi + 0x168, 4));
	push(mv, &ts->esp, ts->edx);
	mov(&ts->ecx, 0x850080);
	game::sub_503290(ts, mv);
	goto loc_4F1031;

loc_4F0EA8:
	cmp(&ts->eflags, ts->ebp, 0x911C0A4B);
	if (!ts->eflags.zero) {
        goto loc_4F1031;
    }
	mov(mv, &ts->eax, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x78F568);
	push(mv, &ts->esp, 0x444969FE);
	push(mv, &ts->esp, ts->eax);
	game::sub_537C00(ts, mv);
	goto loc_4F102E;

loc_4F0ECE:
	mov(&ts->ecx, ts->esi);
	game::sub_51FF40(ts, mv);
	goto loc_4F1031;

loc_4F0EDA:
	cmp(&ts->eflags, ts->ebp, 0xF6734AAF);
	if (!ts->eflags.carry && !ts->eflags.zero) {
        goto loc_4F0FF4;
    }
	if (ts->eflags.zero) {
        goto loc_4F0FC0;
    }
	cmp(&ts->eflags, ts->ebp, 0xDA5B8712);
	if (ts->eflags.zero) {
        goto loc_4F0F1F;
    }
	cmp(&ts->eflags, ts->ebp, 0xF6734AA2);
	if (!ts->eflags.zero) {
        goto loc_4F1031;
    }
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0xC5C25C87);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x2C0E485A);
	push(mv, &ts->esp, 0xF6734AAF);
	goto loc_4F0FDA;

loc_4F0F1F:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x54, 4));
	cmp(mv, &ts->eflags, ts->edi, x86::mem(ts->esi + 0x17C, 4));
	if (!ts->eflags.zero) {
        goto loc_4F0F84;
    }
	lea(mv, &ts->ebx, x86::mem(ts->edi + 0x4C, 4));
	push(mv, &ts->esp, ts->ebx);
	game::sub_43DBB0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(&ts->ecx, 0x850080);
	if (!ts->eflags.zero) {
        goto loc_4F0F6E;
    }
	push(mv, &ts->esp, 0x783FE5);
	game::sub_503230(ts, mv);

loc_4F0F49:
	push(mv, &ts->esp, 0xBB298A80);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	mov(&ts->ecx, ts->edi);
	game::sub_4957D0(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_51FF40(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x18, 4));
	goto loc_4F1031;

loc_4F0F6E:
	push(mv, &ts->esp, ts->ebx);
	game::sub_503230(ts, mv);
	mov(&ts->ecx, ts->esi);
	game::sub_51FF40(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x18, 4));
	goto loc_4F1031;

loc_4F0F84:
	cmp(mv, &ts->eflags, ts->edi, x86::mem(ts->esi + 0x180, 4));
	if (!ts->eflags.zero) {
        goto loc_4F0FB3;
    }
	lea(mv, &ts->ebx, x86::mem(ts->edi + 0x4C, 4));
	push(mv, &ts->esp, ts->ebx);
	game::sub_43DBB0(ts, mv);
	add(&ts->esp, 0x4);
	test(&ts->eflags, ts->eax, ts->eax);
	mov(&ts->ecx, 0x850080);
	if (!ts->eflags.zero) {
        goto loc_4F0FAD;
    }
	push(mv, &ts->esp, 0x783FE5);
	game::sub_503290(ts, mv);
	goto loc_4F0F49;

loc_4F0FAD:
	push(mv, &ts->esp, ts->ebx);
	game::sub_503290(ts, mv);

loc_4F0FB3:
	mov(&ts->ecx, ts->esi);
	game::sub_51FF40(ts, mv);
	mov(mv, &ts->ebx, x86::mem(ts->esp + 0x18, 4));
	goto loc_4F1031;

loc_4F0FC0:
	mov(mv, &ts->edi, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, 0x82EC12C8);
	game::sub_4FFA80(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x2C0E485A);
	push(mv, &ts->esp, 0xF6734AD3);

loc_4F0FDA:
	push(mv, &ts->esp, 0x61C);
	push(mv, &ts->esp, 0xF770);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->edi);
	game::sub_558820(ts, mv);
	add(&ts->esp, 0x24);
	goto loc_4F1031;

loc_4F0FF4:
	cmp(&ts->eflags, ts->ebp, 0xF6734AD3);
	if (!ts->eflags.zero) {
        goto loc_4F1031;
    }
	game::sub_58A0E0(ts, mv);
	mov(&ts->ecx, 0x850080);
	mov(mv, x86::mem(ts->eax + 0xC4, 1), 0x1);
	game::sub_5031D0(ts, mv);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, 0x2756FB2F);
	game::sub_4FFA80(ts, mv);
	add(&ts->esp, 0x4);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->esi);
	lea(mv, &ts->ecx, x86::mem(ts->esi + 0x184, 4));
	push(mv, &ts->esp, ts->ecx);

loc_4F1029:
	game::sub_4CFCB0(ts, mv);

loc_4F102E:
	add(&ts->esp, 0x10);

loc_4F1031:
	mov(mv, &ts->edx, x86::mem(ts->esp + 0x20, 4));
	mov(mv, &ts->eax, x86::mem(ts->esp + 0x1C, 4));
	push(mv, &ts->esp, 0x8);
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, ts->eax);
	push(mv, &ts->esp, ts->ebx);
	lea(mv, &ts->edi, x86::mem(ts->esi + 0x184, 4));
	push(mv, &ts->esp, ts->ebp);
	mov(&ts->ecx, ts->edi);
	game::sub_4EFE40(ts, mv);
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero || (ts->eflags.sign != ts->eflags.overflow)) {
        goto loc_4F1072;
    }
	mov(mv, &ts->al, x86::mem(0x837B71, 1));
	test(&ts->eflags, ts->al, ts->al);
	if (!ts->eflags.zero) {
        goto loc_4F1064;
    }
	mov(mv, &ts->ecx, x86::mem(0x836370, 4));
	game::sub_4B9690(ts, mv);

loc_4F1064:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	mov(mv, x86::mem(0x837B71, 1), 0x1);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_4F1072:
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFF);
	if (!ts->eflags.zero) {
        goto loc_4F10C4;
    }
	mov(mv, &ts->eax, x86::mem(ts->edi, 4));
	test(&ts->eflags, ts->eax, ts->eax);
	if (ts->eflags.zero) {
        goto loc_4F108C;
    }
	push(mv, &ts->esp, ts->eax);
	game::sub_540A60(ts, mv);
	add(&ts->esp, 0x4);
	mov(mv, x86::mem(ts->edi, 4), 0x0);

loc_4F108C:
	mov(mv, &ts->ecx, x86::mem(ts->edi + 0x8, 4));
	mov(mv, &ts->eax, x86::mem(ts->ecx + 0x4, 4));
	push(mv, &ts->esp, 0x5A6F817F);
	push(mv, &ts->esp, 0x1);
	push(mv, &ts->esp, 0x2C0E485A);
	push(mv, &ts->esp, 0x73C044EC);
	push(mv, &ts->esp, 0x541389E5);
	push(mv, &ts->esp, 0x39DF715);
	push(mv, &ts->esp, 0x783FE5);
	push(mv, &ts->esp, ts->eax);
	game::sub_558860(ts, mv);
	add(&ts->esp, 0x20);
	mov(mv, x86::mem(ts->edi, 4), ts->eax);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_4F10C4:
	cmp(&ts->eflags, ts->eax, 0xFFFFFFFE);
	if (!ts->eflags.zero) {
        goto loc_4F1131;
    }
	mov(mv, &ts->ecx, x86::mem(0x836370, 4));
	mov(mv, &ts->dl, x86::mem(ts->ecx + 0x150, 1));
	test(&ts->eflags, ts->dl, ts->dl);
	mov(mv, &ts->eax, x86::mem(ts->edi + 0x14, 4));
	mov(mv, &ts->edi, x86::mem(ts->edi + 0x18, 4));
	if (ts->eflags.zero) {
        goto loc_4F10FB;
    }
	mov(mv, x86::mem(ts->ecx + 0x14C, 4), 0x2);
	mov(mv, &ts->ecx, x86::mem(0x836370, 4));
	game::sub_4B9690(ts, mv);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_4F10FB:
	cmp(&ts->eflags, ts->eax, 0x61757468);
	if (!ts->eflags.zero) {
        goto loc_4F113A;
    }
	cmp(&ts->eflags, ts->edi, 0x696B6579);
	if (!ts->eflags.zero) {
        goto loc_4F113A;
    }
	game::sub_58A0E0(ts, mv);
	mov(mv, &ts->cl, x86::mem(ts->eax + 0xC4, 1));
	test(&ts->eflags, ts->cl, ts->cl);
	if (!ts->eflags.zero) {
        goto loc_4F113A;
    }
	mov(mv, &ts->edx, x86::mem(ts->esi + 0x4, 4));
	push(mv, &ts->esp, ts->edx);
	push(mv, &ts->esp, 0xF6734AA2);
	game::sub_51CE60(ts, mv);
	add(&ts->esp, 0x8);
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);

loc_4F1131:
	test(&ts->eflags, ts->eax, ts->eax);
	if (!ts->eflags.zero) {
        goto loc_4F113A;
    }
	mov(mv, x86::mem(0x837B71, 1), ts->al);

loc_4F113A:
	pop(mv, &ts->esp, ts->edi);
	pop(mv, &ts->esp, ts->esi);
	pop(mv, &ts->esp, ts->ebp);
	pop(mv, &ts->esp, ts->ebx);
	retn(mv, &ts->esp, 0x10);
}

} // namespace game 
